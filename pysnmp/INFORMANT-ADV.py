# SNMP MIB module (INFORMANT-ADV) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/INFORMANT-ADV
# Produced by pysmi-1.5.4 at Mon Oct 14 22:09:10 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")

(InstanceName,
 informant) = mibBuilder.importSymbols(
    "WTCS",
    "InstanceName",
    "informant")


# MODULE-IDENTITY

advanced = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2)
)
advanced.setRevisions(
        ("2008-07-11 23:51",
         "2008-04-18 23:58",
         "2008-03-21 23:39",
         "2008-02-25 18:35",
         "2007-07-08 05:43",
         "2007-04-12 11:05",
         "2006-06-12 22:58",
         "2005-06-18 23:15",
         "2004-02-29 07:03",
         "2004-01-20 08:50")
)


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_AcsPerRsvpServiceTable_Object = MibTable
acsPerRsvpServiceTable = _AcsPerRsvpServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1)
)
if mibBuilder.loadTexts:
    acsPerRsvpServiceTable.setStatus("current")
_AcsPerRsvpServiceEntry_Object = MibTableRow
acsPerRsvpServiceEntry = _AcsPerRsvpServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1)
)
acsPerRsvpServiceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "acsPerRsvpSvcInstance"),
)
if mibBuilder.loadTexts:
    acsPerRsvpServiceEntry.setStatus("current")
_AcsPerRsvpSvcInstance_Type = InstanceName
_AcsPerRsvpSvcInstance_Object = MibTableColumn
acsPerRsvpSvcInstance = _AcsPerRsvpSvcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 1),
    _AcsPerRsvpSvcInstance_Type()
)
acsPerRsvpSvcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcInstance.setStatus("current")
_AcsPerRsvpSvcBytesInQoSNotify_Type = Gauge32
_AcsPerRsvpSvcBytesInQoSNotify_Object = MibTableColumn
acsPerRsvpSvcBytesInQoSNotify = _AcsPerRsvpSvcBytesInQoSNotify_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 2),
    _AcsPerRsvpSvcBytesInQoSNotify_Type()
)
acsPerRsvpSvcBytesInQoSNotify.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcBytesInQoSNotify.setStatus("current")
_AcsPerRsvpSvcFailedQoSRequests_Type = Gauge32
_AcsPerRsvpSvcFailedQoSRequests_Object = MibTableColumn
acsPerRsvpSvcFailedQoSRequests = _AcsPerRsvpSvcFailedQoSRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 3),
    _AcsPerRsvpSvcFailedQoSRequests_Type()
)
acsPerRsvpSvcFailedQoSRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcFailedQoSRequests.setStatus("current")
_AcsPerRsvpSvcFailedQoSSends_Type = Gauge32
_AcsPerRsvpSvcFailedQoSSends_Object = MibTableColumn
acsPerRsvpSvcFailedQoSSends = _AcsPerRsvpSvcFailedQoSSends_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 4),
    _AcsPerRsvpSvcFailedQoSSends_Type()
)
acsPerRsvpSvcFailedQoSSends.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcFailedQoSSends.setStatus("current")
_AcsPerRsvpSvcNetworkInterfaces_Type = Gauge32
_AcsPerRsvpSvcNetworkInterfaces_Object = MibTableColumn
acsPerRsvpSvcNetworkInterfaces = _AcsPerRsvpSvcNetworkInterfaces_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 5),
    _AcsPerRsvpSvcNetworkInterfaces_Type()
)
acsPerRsvpSvcNetworkInterfaces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcNetworkInterfaces.setStatus("current")
_AcsPerRsvpSvcNetworkSockets_Type = Gauge32
_AcsPerRsvpSvcNetworkSockets_Object = MibTableColumn
acsPerRsvpSvcNetworkSockets = _AcsPerRsvpSvcNetworkSockets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 6),
    _AcsPerRsvpSvcNetworkSockets_Type()
)
acsPerRsvpSvcNetworkSockets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcNetworkSockets.setStatus("current")
_AcsPerRsvpSvcQoSNotifications_Type = Gauge32
_AcsPerRsvpSvcQoSNotifications_Object = MibTableColumn
acsPerRsvpSvcQoSNotifications = _AcsPerRsvpSvcQoSNotifications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 7),
    _AcsPerRsvpSvcQoSNotifications_Type()
)
acsPerRsvpSvcQoSNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcQoSNotifications.setStatus("current")
_AcsPerRsvpSvcQoSSockets_Type = Gauge32
_AcsPerRsvpSvcQoSSockets_Object = MibTableColumn
acsPerRsvpSvcQoSSockets = _AcsPerRsvpSvcQoSSockets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 8),
    _AcsPerRsvpSvcQoSSockets_Type()
)
acsPerRsvpSvcQoSSockets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcQoSSockets.setStatus("current")
_AcsPerRsvpSvcQoSEnabledReceivers_Type = Gauge32
_AcsPerRsvpSvcQoSEnabledReceivers_Object = MibTableColumn
acsPerRsvpSvcQoSEnabledReceivers = _AcsPerRsvpSvcQoSEnabledReceivers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 9),
    _AcsPerRsvpSvcQoSEnabledReceivers_Type()
)
acsPerRsvpSvcQoSEnabledReceivers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcQoSEnabledReceivers.setStatus("current")
_AcsPerRsvpSvcQoSEnabledSenders_Type = Gauge32
_AcsPerRsvpSvcQoSEnabledSenders_Object = MibTableColumn
acsPerRsvpSvcQoSEnabledSenders = _AcsPerRsvpSvcQoSEnabledSenders_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 10),
    _AcsPerRsvpSvcQoSEnabledSenders_Type()
)
acsPerRsvpSvcQoSEnabledSenders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcQoSEnabledSenders.setStatus("current")
_AcsPerRsvpSvcRSVPSessions_Type = Gauge32
_AcsPerRsvpSvcRSVPSessions_Object = MibTableColumn
acsPerRsvpSvcRSVPSessions = _AcsPerRsvpSvcRSVPSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 11),
    _AcsPerRsvpSvcRSVPSessions_Type()
)
acsPerRsvpSvcRSVPSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcRSVPSessions.setStatus("current")
_AcsPerRsvpSvcTimers_Type = Gauge32
_AcsPerRsvpSvcTimers_Object = MibTableColumn
acsPerRsvpSvcTimers = _AcsPerRsvpSvcTimers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 12),
    _AcsPerRsvpSvcTimers_Type()
)
acsPerRsvpSvcTimers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    acsPerRsvpSvcTimers.setStatus("current")
_ActiveServerPages_ObjectIdentity = ObjectIdentity
activeServerPages = _ActiveServerPages_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2)
)
if mibBuilder.loadTexts:
    activeServerPages.setStatus("current")
_AspDebuggingRequests_Type = Gauge32
_AspDebuggingRequests_Object = MibScalar
aspDebuggingRequests = _AspDebuggingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 1),
    _AspDebuggingRequests_Type()
)
aspDebuggingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspDebuggingRequests.setStatus("current")
_AspEngineFlushNotifications_Type = Gauge32
_AspEngineFlushNotifications_Object = MibScalar
aspEngineFlushNotifications = _AspEngineFlushNotifications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 2),
    _AspEngineFlushNotifications_Type()
)
aspEngineFlushNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspEngineFlushNotifications.setStatus("current")
_AspErrorsDuringScriptRuntime_Type = Gauge32
_AspErrorsDuringScriptRuntime_Object = MibScalar
aspErrorsDuringScriptRuntime = _AspErrorsDuringScriptRuntime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 3),
    _AspErrorsDuringScriptRuntime_Type()
)
aspErrorsDuringScriptRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspErrorsDuringScriptRuntime.setStatus("current")
_AspErrorsFromASPPreprocessor_Type = Gauge32
_AspErrorsFromASPPreprocessor_Object = MibScalar
aspErrorsFromASPPreprocessor = _AspErrorsFromASPPreprocessor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 4),
    _AspErrorsFromASPPreprocessor_Type()
)
aspErrorsFromASPPreprocessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspErrorsFromASPPreprocessor.setStatus("current")
_AspErrorsFromScriptCompilers_Type = Gauge32
_AspErrorsFromScriptCompilers_Object = MibScalar
aspErrorsFromScriptCompilers = _AspErrorsFromScriptCompilers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 5),
    _AspErrorsFromScriptCompilers_Type()
)
aspErrorsFromScriptCompilers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspErrorsFromScriptCompilers.setStatus("current")
_AspErrorsPerSec_Type = Gauge32
_AspErrorsPerSec_Object = MibScalar
aspErrorsPerSec = _AspErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 6),
    _AspErrorsPerSec_Type()
)
aspErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspErrorsPerSec.setStatus("current")
_AspInMemoryTemplateCacheHitRate_Type = Gauge32
_AspInMemoryTemplateCacheHitRate_Object = MibScalar
aspInMemoryTemplateCacheHitRate = _AspInMemoryTemplateCacheHitRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 7),
    _AspInMemoryTemplateCacheHitRate_Type()
)
aspInMemoryTemplateCacheHitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspInMemoryTemplateCacheHitRate.setStatus("current")
_AspInMemoryTemplatesCached_Type = Gauge32
_AspInMemoryTemplatesCached_Object = MibScalar
aspInMemoryTemplatesCached = _AspInMemoryTemplatesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 8),
    _AspInMemoryTemplatesCached_Type()
)
aspInMemoryTemplatesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspInMemoryTemplatesCached.setStatus("current")
_AspRequestBytesInTotal_Type = Gauge32
_AspRequestBytesInTotal_Object = MibScalar
aspRequestBytesInTotal = _AspRequestBytesInTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 9),
    _AspRequestBytesInTotal_Type()
)
aspRequestBytesInTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestBytesInTotal.setStatus("current")
_AspRequestBytesOutTotal_Type = Gauge32
_AspRequestBytesOutTotal_Object = MibScalar
aspRequestBytesOutTotal = _AspRequestBytesOutTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 10),
    _AspRequestBytesOutTotal_Type()
)
aspRequestBytesOutTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestBytesOutTotal.setStatus("current")
_AspRequestExecutionTime_Type = Gauge32
_AspRequestExecutionTime_Object = MibScalar
aspRequestExecutionTime = _AspRequestExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 11),
    _AspRequestExecutionTime_Type()
)
aspRequestExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestExecutionTime.setStatus("current")
_AspRequestWaitTime_Type = Gauge32
_AspRequestWaitTime_Object = MibScalar
aspRequestWaitTime = _AspRequestWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 12),
    _AspRequestWaitTime_Type()
)
aspRequestWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestWaitTime.setStatus("current")
_AspRequestsDisconnected_Type = Gauge32
_AspRequestsDisconnected_Object = MibScalar
aspRequestsDisconnected = _AspRequestsDisconnected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 13),
    _AspRequestsDisconnected_Type()
)
aspRequestsDisconnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsDisconnected.setStatus("current")
_AspRequestsExecuting_Type = Gauge32
_AspRequestsExecuting_Object = MibScalar
aspRequestsExecuting = _AspRequestsExecuting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 14),
    _AspRequestsExecuting_Type()
)
aspRequestsExecuting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsExecuting.setStatus("current")
_AspRequestsFailedTotal_Type = Gauge32
_AspRequestsFailedTotal_Object = MibScalar
aspRequestsFailedTotal = _AspRequestsFailedTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 15),
    _AspRequestsFailedTotal_Type()
)
aspRequestsFailedTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsFailedTotal.setStatus("current")
_AspRequestsNotAuthorized_Type = Gauge32
_AspRequestsNotAuthorized_Object = MibScalar
aspRequestsNotAuthorized = _AspRequestsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 16),
    _AspRequestsNotAuthorized_Type()
)
aspRequestsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsNotAuthorized.setStatus("current")
_AspRequestsNotFound_Type = Gauge32
_AspRequestsNotFound_Object = MibScalar
aspRequestsNotFound = _AspRequestsNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 17),
    _AspRequestsNotFound_Type()
)
aspRequestsNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsNotFound.setStatus("current")
_AspRequestsQueued_Type = Gauge32
_AspRequestsQueued_Object = MibScalar
aspRequestsQueued = _AspRequestsQueued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 18),
    _AspRequestsQueued_Type()
)
aspRequestsQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsQueued.setStatus("current")
_AspRequestsRejected_Type = Gauge32
_AspRequestsRejected_Object = MibScalar
aspRequestsRejected = _AspRequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 19),
    _AspRequestsRejected_Type()
)
aspRequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsRejected.setStatus("current")
_AspRequestsSucceeded_Type = Gauge32
_AspRequestsSucceeded_Object = MibScalar
aspRequestsSucceeded = _AspRequestsSucceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 20),
    _AspRequestsSucceeded_Type()
)
aspRequestsSucceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsSucceeded.setStatus("current")
_AspRequestsTimedOut_Type = Gauge32
_AspRequestsTimedOut_Object = MibScalar
aspRequestsTimedOut = _AspRequestsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 21),
    _AspRequestsTimedOut_Type()
)
aspRequestsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsTimedOut.setStatus("current")
_AspRequestsTotal_Type = Gauge32
_AspRequestsTotal_Object = MibScalar
aspRequestsTotal = _AspRequestsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 22),
    _AspRequestsTotal_Type()
)
aspRequestsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsTotal.setStatus("current")
_AspRequestsPerSec_Type = Gauge32
_AspRequestsPerSec_Object = MibScalar
aspRequestsPerSec = _AspRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 23),
    _AspRequestsPerSec_Type()
)
aspRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspRequestsPerSec.setStatus("current")
_AspScriptEngineCacheHitRate_Type = Gauge32
_AspScriptEngineCacheHitRate_Object = MibScalar
aspScriptEngineCacheHitRate = _AspScriptEngineCacheHitRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 24),
    _AspScriptEngineCacheHitRate_Type()
)
aspScriptEngineCacheHitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspScriptEngineCacheHitRate.setStatus("current")
_AspScriptEnginesCached_Type = Gauge32
_AspScriptEnginesCached_Object = MibScalar
aspScriptEnginesCached = _AspScriptEnginesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 25),
    _AspScriptEnginesCached_Type()
)
aspScriptEnginesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspScriptEnginesCached.setStatus("current")
_AspSessionDuration_Type = Gauge32
_AspSessionDuration_Object = MibScalar
aspSessionDuration = _AspSessionDuration_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 26),
    _AspSessionDuration_Type()
)
aspSessionDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspSessionDuration.setStatus("current")
_AspSessionsCurrent_Type = Gauge32
_AspSessionsCurrent_Object = MibScalar
aspSessionsCurrent = _AspSessionsCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 27),
    _AspSessionsCurrent_Type()
)
aspSessionsCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspSessionsCurrent.setStatus("current")
_AspSessionsTimedOut_Type = Gauge32
_AspSessionsTimedOut_Object = MibScalar
aspSessionsTimedOut = _AspSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 28),
    _AspSessionsTimedOut_Type()
)
aspSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspSessionsTimedOut.setStatus("current")
_AspSessionsTotal_Type = Gauge32
_AspSessionsTotal_Object = MibScalar
aspSessionsTotal = _AspSessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 29),
    _AspSessionsTotal_Type()
)
aspSessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspSessionsTotal.setStatus("current")
_AspTemplateCacheHitRate_Type = Gauge32
_AspTemplateCacheHitRate_Object = MibScalar
aspTemplateCacheHitRate = _AspTemplateCacheHitRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 30),
    _AspTemplateCacheHitRate_Type()
)
aspTemplateCacheHitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTemplateCacheHitRate.setStatus("current")
_AspTemplateNotifications_Type = Gauge32
_AspTemplateNotifications_Object = MibScalar
aspTemplateNotifications = _AspTemplateNotifications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 31),
    _AspTemplateNotifications_Type()
)
aspTemplateNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTemplateNotifications.setStatus("current")
_AspTemplatesCached_Type = Gauge32
_AspTemplatesCached_Object = MibScalar
aspTemplatesCached = _AspTemplatesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 32),
    _AspTemplatesCached_Type()
)
aspTemplatesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTemplatesCached.setStatus("current")
_AspTransactionsAborted_Type = Gauge32
_AspTransactionsAborted_Object = MibScalar
aspTransactionsAborted = _AspTransactionsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 33),
    _AspTransactionsAborted_Type()
)
aspTransactionsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTransactionsAborted.setStatus("current")
_AspTransactionsCommitted_Type = Gauge32
_AspTransactionsCommitted_Object = MibScalar
aspTransactionsCommitted = _AspTransactionsCommitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 34),
    _AspTransactionsCommitted_Type()
)
aspTransactionsCommitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTransactionsCommitted.setStatus("current")
_AspTransactionsPending_Type = Gauge32
_AspTransactionsPending_Object = MibScalar
aspTransactionsPending = _AspTransactionsPending_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 35),
    _AspTransactionsPending_Type()
)
aspTransactionsPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTransactionsPending.setStatus("current")
_AspTransactionsTotal_Type = Gauge32
_AspTransactionsTotal_Object = MibScalar
aspTransactionsTotal = _AspTransactionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 36),
    _AspTransactionsTotal_Type()
)
aspTransactionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTransactionsTotal.setStatus("current")
_AspTransactionsPerSec_Type = Gauge32
_AspTransactionsPerSec_Object = MibScalar
aspTransactionsPerSec = _AspTransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 37),
    _AspTransactionsPerSec_Type()
)
aspTransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aspTransactionsPerSec.setStatus("current")
_AppleTalkTable_Object = MibTable
appleTalkTable = _AppleTalkTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3)
)
if mibBuilder.loadTexts:
    appleTalkTable.setStatus("current")
_AppleTalkEntry_Object = MibTableRow
appleTalkEntry = _AppleTalkEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1)
)
appleTalkEntry.setIndexNames(
    (0, "INFORMANT-ADV", "atInstance"),
)
if mibBuilder.loadTexts:
    appleTalkEntry.setStatus("current")
_AtInstance_Type = InstanceName
_AtInstance_Object = MibTableColumn
atInstance = _AtInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 1),
    _AtInstance_Type()
)
atInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atInstance.setStatus("current")
_AtAARPPacketsPerSec_Type = Gauge32
_AtAARPPacketsPerSec_Object = MibTableColumn
atAARPPacketsPerSec = _AtAARPPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 2),
    _AtAARPPacketsPerSec_Type()
)
atAARPPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAARPPacketsPerSec.setStatus("current")
_AtATPALOResponsePerSec_Type = Gauge32
_AtATPALOResponsePerSec_Object = MibTableColumn
atATPALOResponsePerSec = _AtATPALOResponsePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 3),
    _AtATPALOResponsePerSec_Type()
)
atATPALOResponsePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPALOResponsePerSec.setStatus("current")
_AtATPPacketsPerSec_Type = Gauge32
_AtATPPacketsPerSec_Object = MibTableColumn
atATPPacketsPerSec = _AtATPPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 4),
    _AtATPPacketsPerSec_Type()
)
atATPPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPPacketsPerSec.setStatus("current")
_AtATPRecvdReleasePerSec_Type = Gauge32
_AtATPRecvdReleasePerSec_Object = MibTableColumn
atATPRecvdReleasePerSec = _AtATPRecvdReleasePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 5),
    _AtATPRecvdReleasePerSec_Type()
)
atATPRecvdReleasePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPRecvdReleasePerSec.setStatus("current")
_AtATPResponseTimouts_Type = Gauge32
_AtATPResponseTimouts_Object = MibTableColumn
atATPResponseTimouts = _AtATPResponseTimouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 6),
    _AtATPResponseTimouts_Type()
)
atATPResponseTimouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPResponseTimouts.setStatus("current")
_AtATPRetriesLocal_Type = Gauge32
_AtATPRetriesLocal_Object = MibTableColumn
atATPRetriesLocal = _AtATPRetriesLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 7),
    _AtATPRetriesLocal_Type()
)
atATPRetriesLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPRetriesLocal.setStatus("current")
_AtATPRetriesRemote_Type = Gauge32
_AtATPRetriesRemote_Object = MibTableColumn
atATPRetriesRemote = _AtATPRetriesRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 8),
    _AtATPRetriesRemote_Type()
)
atATPRetriesRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPRetriesRemote.setStatus("current")
_AtATPXOResponsePerSec_Type = Gauge32
_AtATPXOResponsePerSec_Object = MibTableColumn
atATPXOResponsePerSec = _AtATPXOResponsePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 9),
    _AtATPXOResponsePerSec_Type()
)
atATPXOResponsePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atATPXOResponsePerSec.setStatus("current")
_AtAverageTimePerAARPPacket_Type = Gauge32
_AtAverageTimePerAARPPacket_Object = MibTableColumn
atAverageTimePerAARPPacket = _AtAverageTimePerAARPPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 10),
    _AtAverageTimePerAARPPacket_Type()
)
atAverageTimePerAARPPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAverageTimePerAARPPacket.setStatus("current")
_AtAverageTimePerATPPacket_Type = Gauge32
_AtAverageTimePerATPPacket_Object = MibTableColumn
atAverageTimePerATPPacket = _AtAverageTimePerATPPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 11),
    _AtAverageTimePerATPPacket_Type()
)
atAverageTimePerATPPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAverageTimePerATPPacket.setStatus("current")
_AtAverageTimePerDDPPacket_Type = Gauge32
_AtAverageTimePerDDPPacket_Object = MibTableColumn
atAverageTimePerDDPPacket = _AtAverageTimePerDDPPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 12),
    _AtAverageTimePerDDPPacket_Type()
)
atAverageTimePerDDPPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAverageTimePerDDPPacket.setStatus("current")
_AtAverageTimePerNBPPacket_Type = Gauge32
_AtAverageTimePerNBPPacket_Object = MibTableColumn
atAverageTimePerNBPPacket = _AtAverageTimePerNBPPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 13),
    _AtAverageTimePerNBPPacket_Type()
)
atAverageTimePerNBPPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAverageTimePerNBPPacket.setStatus("current")
_AtAverageTimePerRTMPPacket_Type = Gauge32
_AtAverageTimePerRTMPPacket_Object = MibTableColumn
atAverageTimePerRTMPPacket = _AtAverageTimePerRTMPPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 14),
    _AtAverageTimePerRTMPPacket_Type()
)
atAverageTimePerRTMPPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAverageTimePerRTMPPacket.setStatus("current")
_AtAverageTimePerZIPPacket_Type = Gauge32
_AtAverageTimePerZIPPacket_Object = MibTableColumn
atAverageTimePerZIPPacket = _AtAverageTimePerZIPPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 15),
    _AtAverageTimePerZIPPacket_Type()
)
atAverageTimePerZIPPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atAverageTimePerZIPPacket.setStatus("current")
_AtBytesInPerSec_Type = Gauge32
_AtBytesInPerSec_Object = MibTableColumn
atBytesInPerSec = _AtBytesInPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 16),
    _AtBytesInPerSec_Type()
)
atBytesInPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atBytesInPerSec.setStatus("current")
_AtBytesOutPerSec_Type = Gauge32
_AtBytesOutPerSec_Object = MibTableColumn
atBytesOutPerSec = _AtBytesOutPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 17),
    _AtBytesOutPerSec_Type()
)
atBytesOutPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atBytesOutPerSec.setStatus("current")
_AtCurrentNonPagedPool_Type = Gauge32
_AtCurrentNonPagedPool_Object = MibTableColumn
atCurrentNonPagedPool = _AtCurrentNonPagedPool_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 18),
    _AtCurrentNonPagedPool_Type()
)
atCurrentNonPagedPool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atCurrentNonPagedPool.setStatus("current")
_AtDDPPacketsPerSec_Type = Gauge32
_AtDDPPacketsPerSec_Object = MibTableColumn
atDDPPacketsPerSec = _AtDDPPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 19),
    _AtDDPPacketsPerSec_Type()
)
atDDPPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atDDPPacketsPerSec.setStatus("current")
_AtNBPPacketsPerSec_Type = Gauge32
_AtNBPPacketsPerSec_Object = MibTableColumn
atNBPPacketsPerSec = _AtNBPPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 20),
    _AtNBPPacketsPerSec_Type()
)
atNBPPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atNBPPacketsPerSec.setStatus("current")
_AtPacketsInPerSec_Type = Gauge32
_AtPacketsInPerSec_Object = MibTableColumn
atPacketsInPerSec = _AtPacketsInPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 21),
    _AtPacketsInPerSec_Type()
)
atPacketsInPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atPacketsInPerSec.setStatus("current")
_AtPacketsOutPerSec_Type = Gauge32
_AtPacketsOutPerSec_Object = MibTableColumn
atPacketsOutPerSec = _AtPacketsOutPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 22),
    _AtPacketsOutPerSec_Type()
)
atPacketsOutPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atPacketsOutPerSec.setStatus("current")
_AtPacketsRoutedInPerSec_Type = Gauge32
_AtPacketsRoutedInPerSec_Object = MibTableColumn
atPacketsRoutedInPerSec = _AtPacketsRoutedInPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 23),
    _AtPacketsRoutedInPerSec_Type()
)
atPacketsRoutedInPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atPacketsRoutedInPerSec.setStatus("current")
_AtPacketsRoutedOutPerSec_Type = Gauge32
_AtPacketsRoutedOutPerSec_Object = MibTableColumn
atPacketsRoutedOutPerSec = _AtPacketsRoutedOutPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 24),
    _AtPacketsRoutedOutPerSec_Type()
)
atPacketsRoutedOutPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atPacketsRoutedOutPerSec.setStatus("current")
_AtPacketsDropped_Type = Gauge32
_AtPacketsDropped_Object = MibTableColumn
atPacketsDropped = _AtPacketsDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 25),
    _AtPacketsDropped_Type()
)
atPacketsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atPacketsDropped.setStatus("current")
_AtRTMPPacketsPerSec_Type = Gauge32
_AtRTMPPacketsPerSec_Object = MibTableColumn
atRTMPPacketsPerSec = _AtRTMPPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 26),
    _AtRTMPPacketsPerSec_Type()
)
atRTMPPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atRTMPPacketsPerSec.setStatus("current")
_AtZIPPacketsPerSec_Type = Gauge32
_AtZIPPacketsPerSec_Object = MibTableColumn
atZIPPacketsPerSec = _AtZIPPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 27),
    _AtZIPPacketsPerSec_Type()
)
atZIPPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atZIPPacketsPerSec.setStatus("current")
_AspDotNET_ObjectIdentity = ObjectIdentity
aspDotNET = _AspDotNET_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4)
)
if mibBuilder.loadTexts:
    aspDotNET.setStatus("current")
_AdnApplicationRestarts_Type = Gauge32
_AdnApplicationRestarts_Object = MibScalar
adnApplicationRestarts = _AdnApplicationRestarts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 1),
    _AdnApplicationRestarts_Type()
)
adnApplicationRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplicationRestarts.setStatus("current")
_AdnApplicationsRunning_Type = Gauge32
_AdnApplicationsRunning_Object = MibScalar
adnApplicationsRunning = _AdnApplicationsRunning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 2),
    _AdnApplicationsRunning_Type()
)
adnApplicationsRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplicationsRunning.setStatus("current")
_AdnRequestExecutionTime_Type = Gauge32
_AdnRequestExecutionTime_Object = MibScalar
adnRequestExecutionTime = _AdnRequestExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 3),
    _AdnRequestExecutionTime_Type()
)
adnRequestExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestExecutionTime.setStatus("current")
_AdnRequestWaitTime_Type = Gauge32
_AdnRequestWaitTime_Object = MibScalar
adnRequestWaitTime = _AdnRequestWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 4),
    _AdnRequestWaitTime_Type()
)
adnRequestWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestWaitTime.setStatus("current")
_AdnRequestsCurrent_Type = Gauge32
_AdnRequestsCurrent_Object = MibScalar
adnRequestsCurrent = _AdnRequestsCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 5),
    _AdnRequestsCurrent_Type()
)
adnRequestsCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestsCurrent.setStatus("current")
_AdnRequestsDisconnected_Type = Gauge32
_AdnRequestsDisconnected_Object = MibScalar
adnRequestsDisconnected = _AdnRequestsDisconnected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 6),
    _AdnRequestsDisconnected_Type()
)
adnRequestsDisconnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestsDisconnected.setStatus("current")
_AdnRequestsQueued_Type = Gauge32
_AdnRequestsQueued_Object = MibScalar
adnRequestsQueued = _AdnRequestsQueued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 7),
    _AdnRequestsQueued_Type()
)
adnRequestsQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestsQueued.setStatus("current")
_AdnRequestsRejected_Type = Gauge32
_AdnRequestsRejected_Object = MibScalar
adnRequestsRejected = _AdnRequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 8),
    _AdnRequestsRejected_Type()
)
adnRequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestsRejected.setStatus("current")
_AdnStateServerSessionsAbandoned_Type = Gauge32
_AdnStateServerSessionsAbandoned_Object = MibScalar
adnStateServerSessionsAbandoned = _AdnStateServerSessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 9),
    _AdnStateServerSessionsAbandoned_Type()
)
adnStateServerSessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnStateServerSessionsAbandoned.setStatus("current")
_AdnStateServerSessionsActive_Type = Gauge32
_AdnStateServerSessionsActive_Object = MibScalar
adnStateServerSessionsActive = _AdnStateServerSessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 10),
    _AdnStateServerSessionsActive_Type()
)
adnStateServerSessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnStateServerSessionsActive.setStatus("current")
_AdnStateServerSessionsTimedOut_Type = Gauge32
_AdnStateServerSessionsTimedOut_Object = MibScalar
adnStateServerSessionsTimedOut = _AdnStateServerSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 11),
    _AdnStateServerSessionsTimedOut_Type()
)
adnStateServerSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnStateServerSessionsTimedOut.setStatus("current")
_AdnStateServerSessionsTotal_Type = Gauge32
_AdnStateServerSessionsTotal_Object = MibScalar
adnStateServerSessionsTotal = _AdnStateServerSessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 12),
    _AdnStateServerSessionsTotal_Type()
)
adnStateServerSessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnStateServerSessionsTotal.setStatus("current")
_AdnWorkerProcessRestarts_Type = Gauge32
_AdnWorkerProcessRestarts_Object = MibScalar
adnWorkerProcessRestarts = _AdnWorkerProcessRestarts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 13),
    _AdnWorkerProcessRestarts_Type()
)
adnWorkerProcessRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnWorkerProcessRestarts.setStatus("current")
_AdnWorkerProcessesRunning_Type = Gauge32
_AdnWorkerProcessesRunning_Object = MibScalar
adnWorkerProcessesRunning = _AdnWorkerProcessesRunning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 14),
    _AdnWorkerProcessesRunning_Type()
)
adnWorkerProcessesRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnWorkerProcessesRunning.setStatus("current")
_AdnAuditFailureEventsRaised_Type = Gauge32
_AdnAuditFailureEventsRaised_Object = MibScalar
adnAuditFailureEventsRaised = _AdnAuditFailureEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 15),
    _AdnAuditFailureEventsRaised_Type()
)
adnAuditFailureEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAuditFailureEventsRaised.setStatus("current")
_AdnAuditSuccessEventsRaised_Type = Gauge32
_AdnAuditSuccessEventsRaised_Object = MibScalar
adnAuditSuccessEventsRaised = _AdnAuditSuccessEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 16),
    _AdnAuditSuccessEventsRaised_Type()
)
adnAuditSuccessEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAuditSuccessEventsRaised.setStatus("current")
_AdnErrorEventsRaised_Type = Gauge32
_AdnErrorEventsRaised_Object = MibScalar
adnErrorEventsRaised = _AdnErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 17),
    _AdnErrorEventsRaised_Type()
)
adnErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnErrorEventsRaised.setStatus("current")
_AdnInfrastructErrorEventsRaised_Type = Gauge32
_AdnInfrastructErrorEventsRaised_Object = MibScalar
adnInfrastructErrorEventsRaised = _AdnInfrastructErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 18),
    _AdnInfrastructErrorEventsRaised_Type()
)
adnInfrastructErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnInfrastructErrorEventsRaised.setStatus("current")
_AdnRequestErrorEventsRaised_Type = Gauge32
_AdnRequestErrorEventsRaised_Object = MibScalar
adnRequestErrorEventsRaised = _AdnRequestErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 19),
    _AdnRequestErrorEventsRaised_Type()
)
adnRequestErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnRequestErrorEventsRaised.setStatus("current")
_AspDotNETApplicationsTable_Object = MibTable
aspDotNETApplicationsTable = _AspDotNETApplicationsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5)
)
if mibBuilder.loadTexts:
    aspDotNETApplicationsTable.setStatus("current")
_AspDotNETApplicationsEntry_Object = MibTableRow
aspDotNETApplicationsEntry = _AspDotNETApplicationsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1)
)
aspDotNETApplicationsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "adnApplInstance"),
)
if mibBuilder.loadTexts:
    aspDotNETApplicationsEntry.setStatus("current")
_AdnApplInstance_Type = InstanceName
_AdnApplInstance_Object = MibTableColumn
adnApplInstance = _AdnApplInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 1),
    _AdnApplInstance_Type()
)
adnApplInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplInstance.setStatus("current")
_AdnApplAnonymousRequests_Type = Gauge32
_AdnApplAnonymousRequests_Object = MibTableColumn
adnApplAnonymousRequests = _AdnApplAnonymousRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 2),
    _AdnApplAnonymousRequests_Type()
)
adnApplAnonymousRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplAnonymousRequests.setStatus("current")
_AdnApplAnonymousRequestsPerSec_Type = Gauge32
_AdnApplAnonymousRequestsPerSec_Object = MibTableColumn
adnApplAnonymousRequestsPerSec = _AdnApplAnonymousRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 3),
    _AdnApplAnonymousRequestsPerSec_Type()
)
adnApplAnonymousRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplAnonymousRequestsPerSec.setStatus("current")
_AdnApplCacheAPIEntries_Type = Gauge32
_AdnApplCacheAPIEntries_Object = MibTableColumn
adnApplCacheAPIEntries = _AdnApplCacheAPIEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 4),
    _AdnApplCacheAPIEntries_Type()
)
adnApplCacheAPIEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheAPIEntries.setStatus("current")
_AdnApplCacheAPIHitRatio_Type = Gauge32
_AdnApplCacheAPIHitRatio_Object = MibTableColumn
adnApplCacheAPIHitRatio = _AdnApplCacheAPIHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 5),
    _AdnApplCacheAPIHitRatio_Type()
)
adnApplCacheAPIHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheAPIHitRatio.setStatus("current")
_AdnApplCacheAPIHits_Type = Gauge32
_AdnApplCacheAPIHits_Object = MibTableColumn
adnApplCacheAPIHits = _AdnApplCacheAPIHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 6),
    _AdnApplCacheAPIHits_Type()
)
adnApplCacheAPIHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheAPIHits.setStatus("current")
_AdnApplCacheAPIMisses_Type = Gauge32
_AdnApplCacheAPIMisses_Object = MibTableColumn
adnApplCacheAPIMisses = _AdnApplCacheAPIMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 7),
    _AdnApplCacheAPIMisses_Type()
)
adnApplCacheAPIMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheAPIMisses.setStatus("current")
_AdnApplCacheAPITurnoverRate_Type = Gauge32
_AdnApplCacheAPITurnoverRate_Object = MibTableColumn
adnApplCacheAPITurnoverRate = _AdnApplCacheAPITurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 8),
    _AdnApplCacheAPITurnoverRate_Type()
)
adnApplCacheAPITurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheAPITurnoverRate.setStatus("current")
_AdnApplCacheTotalEntries_Type = Gauge32
_AdnApplCacheTotalEntries_Object = MibTableColumn
adnApplCacheTotalEntries = _AdnApplCacheTotalEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 9),
    _AdnApplCacheTotalEntries_Type()
)
adnApplCacheTotalEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheTotalEntries.setStatus("current")
_AdnApplCacheTotalHitRatio_Type = Gauge32
_AdnApplCacheTotalHitRatio_Object = MibTableColumn
adnApplCacheTotalHitRatio = _AdnApplCacheTotalHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 10),
    _AdnApplCacheTotalHitRatio_Type()
)
adnApplCacheTotalHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheTotalHitRatio.setStatus("current")
_AdnApplCacheTotalHits_Type = Gauge32
_AdnApplCacheTotalHits_Object = MibTableColumn
adnApplCacheTotalHits = _AdnApplCacheTotalHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 11),
    _AdnApplCacheTotalHits_Type()
)
adnApplCacheTotalHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheTotalHits.setStatus("current")
_AdnApplCacheTotalMisses_Type = Gauge32
_AdnApplCacheTotalMisses_Object = MibTableColumn
adnApplCacheTotalMisses = _AdnApplCacheTotalMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 12),
    _AdnApplCacheTotalMisses_Type()
)
adnApplCacheTotalMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheTotalMisses.setStatus("current")
_AdnApplCacheTotalTurnoverRate_Type = Gauge32
_AdnApplCacheTotalTurnoverRate_Object = MibTableColumn
adnApplCacheTotalTurnoverRate = _AdnApplCacheTotalTurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 13),
    _AdnApplCacheTotalTurnoverRate_Type()
)
adnApplCacheTotalTurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheTotalTurnoverRate.setStatus("current")
_AdnApplCompilationsTotal_Type = Gauge32
_AdnApplCompilationsTotal_Object = MibTableColumn
adnApplCompilationsTotal = _AdnApplCompilationsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 14),
    _AdnApplCompilationsTotal_Type()
)
adnApplCompilationsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCompilationsTotal.setStatus("current")
_AdnApplDebuggingRequests_Type = Gauge32
_AdnApplDebuggingRequests_Object = MibTableColumn
adnApplDebuggingRequests = _AdnApplDebuggingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 15),
    _AdnApplDebuggingRequests_Type()
)
adnApplDebuggingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplDebuggingRequests.setStatus("current")
_AdnApplErrorsCompilation_Type = Gauge32
_AdnApplErrorsCompilation_Object = MibTableColumn
adnApplErrorsCompilation = _AdnApplErrorsCompilation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 16),
    _AdnApplErrorsCompilation_Type()
)
adnApplErrorsCompilation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsCompilation.setStatus("current")
_AdnApplErrorsExecution_Type = Gauge32
_AdnApplErrorsExecution_Object = MibTableColumn
adnApplErrorsExecution = _AdnApplErrorsExecution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 17),
    _AdnApplErrorsExecution_Type()
)
adnApplErrorsExecution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsExecution.setStatus("current")
_AdnApplErrorsPreprocessing_Type = Gauge32
_AdnApplErrorsPreprocessing_Object = MibTableColumn
adnApplErrorsPreprocessing = _AdnApplErrorsPreprocessing_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 18),
    _AdnApplErrorsPreprocessing_Type()
)
adnApplErrorsPreprocessing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsPreprocessing.setStatus("current")
_AdnApplErrorsTotal_Type = Gauge32
_AdnApplErrorsTotal_Object = MibTableColumn
adnApplErrorsTotal = _AdnApplErrorsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 19),
    _AdnApplErrorsTotal_Type()
)
adnApplErrorsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsTotal.setStatus("current")
_AdnApplErrorsTotalPerSec_Type = Gauge32
_AdnApplErrorsTotalPerSec_Object = MibTableColumn
adnApplErrorsTotalPerSec = _AdnApplErrorsTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 20),
    _AdnApplErrorsTotalPerSec_Type()
)
adnApplErrorsTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsTotalPerSec.setStatus("current")
_AdnApplErrorsUnhandledExec_Type = Gauge32
_AdnApplErrorsUnhandledExec_Object = MibTableColumn
adnApplErrorsUnhandledExec = _AdnApplErrorsUnhandledExec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 21),
    _AdnApplErrorsUnhandledExec_Type()
)
adnApplErrorsUnhandledExec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsUnhandledExec.setStatus("current")
_AdnApplErrorsUnhandledExecPerSec_Type = Gauge32
_AdnApplErrorsUnhandledExecPerSec_Object = MibTableColumn
adnApplErrorsUnhandledExecPerSec = _AdnApplErrorsUnhandledExecPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 22),
    _AdnApplErrorsUnhandledExecPerSec_Type()
)
adnApplErrorsUnhandledExecPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorsUnhandledExecPerSec.setStatus("current")
_AdnApplOutputCacheEntries_Type = Gauge32
_AdnApplOutputCacheEntries_Object = MibTableColumn
adnApplOutputCacheEntries = _AdnApplOutputCacheEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 23),
    _AdnApplOutputCacheEntries_Type()
)
adnApplOutputCacheEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplOutputCacheEntries.setStatus("current")
_AdnApplOutputCacheHitRatio_Type = Gauge32
_AdnApplOutputCacheHitRatio_Object = MibTableColumn
adnApplOutputCacheHitRatio = _AdnApplOutputCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 24),
    _AdnApplOutputCacheHitRatio_Type()
)
adnApplOutputCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplOutputCacheHitRatio.setStatus("current")
_AdnApplOutputCacheHits_Type = Gauge32
_AdnApplOutputCacheHits_Object = MibTableColumn
adnApplOutputCacheHits = _AdnApplOutputCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 25),
    _AdnApplOutputCacheHits_Type()
)
adnApplOutputCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplOutputCacheHits.setStatus("current")
_AdnApplOutputCacheMisses_Type = Gauge32
_AdnApplOutputCacheMisses_Object = MibTableColumn
adnApplOutputCacheMisses = _AdnApplOutputCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 26),
    _AdnApplOutputCacheMisses_Type()
)
adnApplOutputCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplOutputCacheMisses.setStatus("current")
_AdnApplOutputCacheTurnoverRate_Type = Gauge32
_AdnApplOutputCacheTurnoverRate_Object = MibTableColumn
adnApplOutputCacheTurnoverRate = _AdnApplOutputCacheTurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 27),
    _AdnApplOutputCacheTurnoverRate_Type()
)
adnApplOutputCacheTurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplOutputCacheTurnoverRate.setStatus("current")
_AdnApplPipelineInstanceCount_Type = Gauge32
_AdnApplPipelineInstanceCount_Object = MibTableColumn
adnApplPipelineInstanceCount = _AdnApplPipelineInstanceCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 28),
    _AdnApplPipelineInstanceCount_Type()
)
adnApplPipelineInstanceCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplPipelineInstanceCount.setStatus("current")
_AdnApplRequestBytesInTotal_Type = Gauge32
_AdnApplRequestBytesInTotal_Object = MibTableColumn
adnApplRequestBytesInTotal = _AdnApplRequestBytesInTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 29),
    _AdnApplRequestBytesInTotal_Type()
)
adnApplRequestBytesInTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestBytesInTotal.setStatus("current")
_AdnApplRequestBytesOutTotal_Type = Gauge32
_AdnApplRequestBytesOutTotal_Object = MibTableColumn
adnApplRequestBytesOutTotal = _AdnApplRequestBytesOutTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 30),
    _AdnApplRequestBytesOutTotal_Type()
)
adnApplRequestBytesOutTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestBytesOutTotal.setStatus("current")
_AdnApplRequestsExecuting_Type = Gauge32
_AdnApplRequestsExecuting_Object = MibTableColumn
adnApplRequestsExecuting = _AdnApplRequestsExecuting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 31),
    _AdnApplRequestsExecuting_Type()
)
adnApplRequestsExecuting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsExecuting.setStatus("current")
_AdnApplRequestsFailed_Type = Gauge32
_AdnApplRequestsFailed_Object = MibTableColumn
adnApplRequestsFailed = _AdnApplRequestsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 32),
    _AdnApplRequestsFailed_Type()
)
adnApplRequestsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsFailed.setStatus("current")
_AdnApplRequestsInApplQueue_Type = Gauge32
_AdnApplRequestsInApplQueue_Object = MibTableColumn
adnApplRequestsInApplQueue = _AdnApplRequestsInApplQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 33),
    _AdnApplRequestsInApplQueue_Type()
)
adnApplRequestsInApplQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsInApplQueue.setStatus("current")
_AdnApplRequestsNotAuthorized_Type = Gauge32
_AdnApplRequestsNotAuthorized_Object = MibTableColumn
adnApplRequestsNotAuthorized = _AdnApplRequestsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 34),
    _AdnApplRequestsNotAuthorized_Type()
)
adnApplRequestsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsNotAuthorized.setStatus("current")
_AdnApplRequestsNotFound_Type = Gauge32
_AdnApplRequestsNotFound_Object = MibTableColumn
adnApplRequestsNotFound = _AdnApplRequestsNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 35),
    _AdnApplRequestsNotFound_Type()
)
adnApplRequestsNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsNotFound.setStatus("current")
_AdnApplRequestsSucceeded_Type = Gauge32
_AdnApplRequestsSucceeded_Object = MibTableColumn
adnApplRequestsSucceeded = _AdnApplRequestsSucceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 36),
    _AdnApplRequestsSucceeded_Type()
)
adnApplRequestsSucceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsSucceeded.setStatus("current")
_AdnApplRequestsTimedOut_Type = Gauge32
_AdnApplRequestsTimedOut_Object = MibTableColumn
adnApplRequestsTimedOut = _AdnApplRequestsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 37),
    _AdnApplRequestsTimedOut_Type()
)
adnApplRequestsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsTimedOut.setStatus("current")
_AdnApplRequestsTotal_Type = Gauge32
_AdnApplRequestsTotal_Object = MibTableColumn
adnApplRequestsTotal = _AdnApplRequestsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 38),
    _AdnApplRequestsTotal_Type()
)
adnApplRequestsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsTotal.setStatus("current")
_AdnApplRequestsPerSec_Type = Gauge32
_AdnApplRequestsPerSec_Object = MibTableColumn
adnApplRequestsPerSec = _AdnApplRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 39),
    _AdnApplRequestsPerSec_Type()
)
adnApplRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsPerSec.setStatus("current")
_AdnApplSessionSQLSrvrConnTotal_Type = Gauge32
_AdnApplSessionSQLSrvrConnTotal_Object = MibTableColumn
adnApplSessionSQLSrvrConnTotal = _AdnApplSessionSQLSrvrConnTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 40),
    _AdnApplSessionSQLSrvrConnTotal_Type()
)
adnApplSessionSQLSrvrConnTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplSessionSQLSrvrConnTotal.setStatus("current")
_AdnApplSessionStateSrvrConnTotal_Type = Gauge32
_AdnApplSessionStateSrvrConnTotal_Object = MibTableColumn
adnApplSessionStateSrvrConnTotal = _AdnApplSessionStateSrvrConnTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 41),
    _AdnApplSessionStateSrvrConnTotal_Type()
)
adnApplSessionStateSrvrConnTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplSessionStateSrvrConnTotal.setStatus("current")
_AdnApplSessionsAbandoned_Type = Gauge32
_AdnApplSessionsAbandoned_Object = MibTableColumn
adnApplSessionsAbandoned = _AdnApplSessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 42),
    _AdnApplSessionsAbandoned_Type()
)
adnApplSessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplSessionsAbandoned.setStatus("current")
_AdnApplSessionsActive_Type = Gauge32
_AdnApplSessionsActive_Object = MibTableColumn
adnApplSessionsActive = _AdnApplSessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 43),
    _AdnApplSessionsActive_Type()
)
adnApplSessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplSessionsActive.setStatus("current")
_AdnApplSessionsTimedOut_Type = Gauge32
_AdnApplSessionsTimedOut_Object = MibTableColumn
adnApplSessionsTimedOut = _AdnApplSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 44),
    _AdnApplSessionsTimedOut_Type()
)
adnApplSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplSessionsTimedOut.setStatus("current")
_AdnApplSessionsTotal_Type = Gauge32
_AdnApplSessionsTotal_Object = MibTableColumn
adnApplSessionsTotal = _AdnApplSessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 45),
    _AdnApplSessionsTotal_Type()
)
adnApplSessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplSessionsTotal.setStatus("current")
_AdnApplTransactionsAborted_Type = Gauge32
_AdnApplTransactionsAborted_Object = MibTableColumn
adnApplTransactionsAborted = _AdnApplTransactionsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 46),
    _AdnApplTransactionsAborted_Type()
)
adnApplTransactionsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplTransactionsAborted.setStatus("current")
_AdnApplTransactionsCommitted_Type = Gauge32
_AdnApplTransactionsCommitted_Object = MibTableColumn
adnApplTransactionsCommitted = _AdnApplTransactionsCommitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 47),
    _AdnApplTransactionsCommitted_Type()
)
adnApplTransactionsCommitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplTransactionsCommitted.setStatus("current")
_AdnApplTransactionsPending_Type = Gauge32
_AdnApplTransactionsPending_Object = MibTableColumn
adnApplTransactionsPending = _AdnApplTransactionsPending_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 48),
    _AdnApplTransactionsPending_Type()
)
adnApplTransactionsPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplTransactionsPending.setStatus("current")
_AdnApplTransactionsTotal_Type = Gauge32
_AdnApplTransactionsTotal_Object = MibTableColumn
adnApplTransactionsTotal = _AdnApplTransactionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 49),
    _AdnApplTransactionsTotal_Type()
)
adnApplTransactionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplTransactionsTotal.setStatus("current")
_AdnApplTransactionsPerSec_Type = Gauge32
_AdnApplTransactionsPerSec_Object = MibTableColumn
adnApplTransactionsPerSec = _AdnApplTransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 50),
    _AdnApplTransactionsPerSec_Type()
)
adnApplTransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplTransactionsPerSec.setStatus("current")
_AdnApplApplicationLifetimeEvents_Type = Gauge32
_AdnApplApplicationLifetimeEvents_Object = MibTableColumn
adnApplApplicationLifetimeEvents = _AdnApplApplicationLifetimeEvents_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 51),
    _AdnApplApplicationLifetimeEvents_Type()
)
adnApplApplicationLifetimeEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplApplicationLifetimeEvents.setStatus("current")
_AdnApplApplLifetimeEventsPerSec_Type = Gauge32
_AdnApplApplLifetimeEventsPerSec_Object = MibTableColumn
adnApplApplLifetimeEventsPerSec = _AdnApplApplLifetimeEventsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 52),
    _AdnApplApplLifetimeEventsPerSec_Type()
)
adnApplApplLifetimeEventsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplApplLifetimeEventsPerSec.setStatus("current")
_AdnApplAuditFailureEventsRaised_Type = Gauge32
_AdnApplAuditFailureEventsRaised_Object = MibTableColumn
adnApplAuditFailureEventsRaised = _AdnApplAuditFailureEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 53),
    _AdnApplAuditFailureEventsRaised_Type()
)
adnApplAuditFailureEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplAuditFailureEventsRaised.setStatus("current")
_AdnApplAuditSuccessEventsRaised_Type = Gauge32
_AdnApplAuditSuccessEventsRaised_Object = MibTableColumn
adnApplAuditSuccessEventsRaised = _AdnApplAuditSuccessEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 54),
    _AdnApplAuditSuccessEventsRaised_Type()
)
adnApplAuditSuccessEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplAuditSuccessEventsRaised.setStatus("current")
_AdnApplErrorEventsRaised_Type = Gauge32
_AdnApplErrorEventsRaised_Object = MibTableColumn
adnApplErrorEventsRaised = _AdnApplErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 55),
    _AdnApplErrorEventsRaised_Type()
)
adnApplErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorEventsRaised.setStatus("current")
_AdnApplErrorEventsRaisedPerSec_Type = Gauge32
_AdnApplErrorEventsRaisedPerSec_Object = MibTableColumn
adnApplErrorEventsRaisedPerSec = _AdnApplErrorEventsRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 56),
    _AdnApplErrorEventsRaisedPerSec_Type()
)
adnApplErrorEventsRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplErrorEventsRaisedPerSec.setStatus("current")
_AdnApplEventsRaised_Type = Gauge32
_AdnApplEventsRaised_Object = MibTableColumn
adnApplEventsRaised = _AdnApplEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 57),
    _AdnApplEventsRaised_Type()
)
adnApplEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplEventsRaised.setStatus("current")
_AdnApplEventsRaisedPerSec_Type = Gauge32
_AdnApplEventsRaisedPerSec_Object = MibTableColumn
adnApplEventsRaisedPerSec = _AdnApplEventsRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 58),
    _AdnApplEventsRaisedPerSec_Type()
)
adnApplEventsRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplEventsRaisedPerSec.setStatus("current")
_AdnApplFormAuthenticationFailure_Type = Gauge32
_AdnApplFormAuthenticationFailure_Object = MibTableColumn
adnApplFormAuthenticationFailure = _AdnApplFormAuthenticationFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 59),
    _AdnApplFormAuthenticationFailure_Type()
)
adnApplFormAuthenticationFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplFormAuthenticationFailure.setStatus("current")
_AdnApplFormAuthenticationSuccess_Type = Gauge32
_AdnApplFormAuthenticationSuccess_Object = MibTableColumn
adnApplFormAuthenticationSuccess = _AdnApplFormAuthenticationSuccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 60),
    _AdnApplFormAuthenticationSuccess_Type()
)
adnApplFormAuthenticationSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplFormAuthenticationSuccess.setStatus("current")
_AdnApplInfraErrEventRaised_Type = Gauge32
_AdnApplInfraErrEventRaised_Object = MibTableColumn
adnApplInfraErrEventRaised = _AdnApplInfraErrEventRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 61),
    _AdnApplInfraErrEventRaised_Type()
)
adnApplInfraErrEventRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplInfraErrEventRaised.setStatus("current")
_AdnApplInfraErrEventRaisedPerSec_Type = Gauge32
_AdnApplInfraErrEventRaisedPerSec_Object = MibTableColumn
adnApplInfraErrEventRaisedPerSec = _AdnApplInfraErrEventRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 62),
    _AdnApplInfraErrEventRaisedPerSec_Type()
)
adnApplInfraErrEventRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplInfraErrEventRaisedPerSec.setStatus("current")
_AdnApplMembershipAuthFailure_Type = Gauge32
_AdnApplMembershipAuthFailure_Object = MibTableColumn
adnApplMembershipAuthFailure = _AdnApplMembershipAuthFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 63),
    _AdnApplMembershipAuthFailure_Type()
)
adnApplMembershipAuthFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplMembershipAuthFailure.setStatus("current")
_AdnApplMembershipAuthSuccess_Type = Gauge32
_AdnApplMembershipAuthSuccess_Object = MibTableColumn
adnApplMembershipAuthSuccess = _AdnApplMembershipAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 64),
    _AdnApplMembershipAuthSuccess_Type()
)
adnApplMembershipAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplMembershipAuthSuccess.setStatus("current")
_AdnApplReqErrorEventRaised_Type = Gauge32
_AdnApplReqErrorEventRaised_Object = MibTableColumn
adnApplReqErrorEventRaised = _AdnApplReqErrorEventRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 65),
    _AdnApplReqErrorEventRaised_Type()
)
adnApplReqErrorEventRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplReqErrorEventRaised.setStatus("current")
_AdnApplReqErrorEventRaisedPerSec_Type = Gauge32
_AdnApplReqErrorEventRaisedPerSec_Object = MibTableColumn
adnApplReqErrorEventRaisedPerSec = _AdnApplReqErrorEventRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 66),
    _AdnApplReqErrorEventRaisedPerSec_Type()
)
adnApplReqErrorEventRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplReqErrorEventRaisedPerSec.setStatus("current")
_AdnApplRequestEventsRaised_Type = Gauge32
_AdnApplRequestEventsRaised_Object = MibTableColumn
adnApplRequestEventsRaised = _AdnApplRequestEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 67),
    _AdnApplRequestEventsRaised_Type()
)
adnApplRequestEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestEventsRaised.setStatus("current")
_AdnApplRequestEventsRaisedPerSec_Type = Gauge32
_AdnApplRequestEventsRaisedPerSec_Object = MibTableColumn
adnApplRequestEventsRaisedPerSec = _AdnApplRequestEventsRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 68),
    _AdnApplRequestEventsRaisedPerSec_Type()
)
adnApplRequestEventsRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestEventsRaisedPerSec.setStatus("current")
_AdnApplRequestExecutionTime_Type = Gauge32
_AdnApplRequestExecutionTime_Object = MibTableColumn
adnApplRequestExecutionTime = _AdnApplRequestExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 69),
    _AdnApplRequestExecutionTime_Type()
)
adnApplRequestExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestExecutionTime.setStatus("current")
_AdnApplRequestWaitTime_Type = Gauge32
_AdnApplRequestWaitTime_Object = MibTableColumn
adnApplRequestWaitTime = _AdnApplRequestWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 70),
    _AdnApplRequestWaitTime_Type()
)
adnApplRequestWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestWaitTime.setStatus("current")
_AdnApplRequestsDisconnected_Type = Gauge32
_AdnApplRequestsDisconnected_Object = MibTableColumn
adnApplRequestsDisconnected = _AdnApplRequestsDisconnected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 71),
    _AdnApplRequestsDisconnected_Type()
)
adnApplRequestsDisconnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsDisconnected.setStatus("current")
_AdnApplRequestsRejected_Type = Gauge32
_AdnApplRequestsRejected_Object = MibTableColumn
adnApplRequestsRejected = _AdnApplRequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 72),
    _AdnApplRequestsRejected_Type()
)
adnApplRequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplRequestsRejected.setStatus("current")
_AdnApplViewstateMACValidFailure_Type = Gauge32
_AdnApplViewstateMACValidFailure_Object = MibTableColumn
adnApplViewstateMACValidFailure = _AdnApplViewstateMACValidFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 73),
    _AdnApplViewstateMACValidFailure_Type()
)
adnApplViewstateMACValidFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplViewstateMACValidFailure.setStatus("current")
_AdnApplCachePrcntMchneMemLimUsed_Type = Gauge32
_AdnApplCachePrcntMchneMemLimUsed_Object = MibTableColumn
adnApplCachePrcntMchneMemLimUsed = _AdnApplCachePrcntMchneMemLimUsed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 74),
    _AdnApplCachePrcntMchneMemLimUsed_Type()
)
adnApplCachePrcntMchneMemLimUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCachePrcntMchneMemLimUsed.setStatus("current")
_AdnApplCachePrcntPrcMemLimitUsed_Type = Gauge32
_AdnApplCachePrcntPrcMemLimitUsed_Object = MibTableColumn
adnApplCachePrcntPrcMemLimitUsed = _AdnApplCachePrcntPrcMemLimitUsed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 75),
    _AdnApplCachePrcntPrcMemLimitUsed_Type()
)
adnApplCachePrcntPrcMemLimitUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCachePrcntPrcMemLimitUsed.setStatus("current")
_AdnApplCacheAPITrims_Type = Gauge32
_AdnApplCacheAPITrims_Object = MibTableColumn
adnApplCacheAPITrims = _AdnApplCacheAPITrims_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 76),
    _AdnApplCacheAPITrims_Type()
)
adnApplCacheAPITrims.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheAPITrims.setStatus("current")
_AdnApplCacheTotalTrims_Type = Gauge32
_AdnApplCacheTotalTrims_Object = MibTableColumn
adnApplCacheTotalTrims = _AdnApplCacheTotalTrims_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 77),
    _AdnApplCacheTotalTrims_Type()
)
adnApplCacheTotalTrims.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplCacheTotalTrims.setStatus("current")
_AdnApplOutputCacheTrims_Type = Gauge32
_AdnApplOutputCacheTrims_Object = MibTableColumn
adnApplOutputCacheTrims = _AdnApplOutputCacheTrims_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 78),
    _AdnApplOutputCacheTrims_Type()
)
adnApplOutputCacheTrims.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnApplOutputCacheTrims.setStatus("current")
_Browser_ObjectIdentity = ObjectIdentity
browser = _Browser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6)
)
if mibBuilder.loadTexts:
    browser.setStatus("current")
_BrowserAnnouncementsDomainPerSec_Type = Gauge32
_BrowserAnnouncementsDomainPerSec_Object = MibScalar
browserAnnouncementsDomainPerSec = _BrowserAnnouncementsDomainPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 1),
    _BrowserAnnouncementsDomainPerSec_Type()
)
browserAnnouncementsDomainPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserAnnouncementsDomainPerSec.setStatus("current")
_BrowserAnnouncementsServerPerSec_Type = Gauge32
_BrowserAnnouncementsServerPerSec_Object = MibScalar
browserAnnouncementsServerPerSec = _BrowserAnnouncementsServerPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 2),
    _BrowserAnnouncementsServerPerSec_Type()
)
browserAnnouncementsServerPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserAnnouncementsServerPerSec.setStatus("current")
_BrowserAnnouncementsTotalPerSec_Type = Gauge32
_BrowserAnnouncementsTotalPerSec_Object = MibScalar
browserAnnouncementsTotalPerSec = _BrowserAnnouncementsTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 3),
    _BrowserAnnouncementsTotalPerSec_Type()
)
browserAnnouncementsTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserAnnouncementsTotalPerSec.setStatus("current")
_BrowserDuplicateMasterAnnounce_Type = Gauge32
_BrowserDuplicateMasterAnnounce_Object = MibScalar
browserDuplicateMasterAnnounce = _BrowserDuplicateMasterAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 4),
    _BrowserDuplicateMasterAnnounce_Type()
)
browserDuplicateMasterAnnounce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserDuplicateMasterAnnounce.setStatus("current")
_BrowserElectionPacketsPerSec_Type = Gauge32
_BrowserElectionPacketsPerSec_Object = MibScalar
browserElectionPacketsPerSec = _BrowserElectionPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 5),
    _BrowserElectionPacketsPerSec_Type()
)
browserElectionPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserElectionPacketsPerSec.setStatus("current")
_BrowserEnumerationsDomainPerSec_Type = Gauge32
_BrowserEnumerationsDomainPerSec_Object = MibScalar
browserEnumerationsDomainPerSec = _BrowserEnumerationsDomainPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 6),
    _BrowserEnumerationsDomainPerSec_Type()
)
browserEnumerationsDomainPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserEnumerationsDomainPerSec.setStatus("current")
_BrowserEnumerationsOtherPerSec_Type = Gauge32
_BrowserEnumerationsOtherPerSec_Object = MibScalar
browserEnumerationsOtherPerSec = _BrowserEnumerationsOtherPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 7),
    _BrowserEnumerationsOtherPerSec_Type()
)
browserEnumerationsOtherPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserEnumerationsOtherPerSec.setStatus("current")
_BrowserEnumerationsServerPerSec_Type = Gauge32
_BrowserEnumerationsServerPerSec_Object = MibScalar
browserEnumerationsServerPerSec = _BrowserEnumerationsServerPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 8),
    _BrowserEnumerationsServerPerSec_Type()
)
browserEnumerationsServerPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserEnumerationsServerPerSec.setStatus("current")
_BrowserEnumerationsTotalPerSec_Type = Gauge32
_BrowserEnumerationsTotalPerSec_Object = MibScalar
browserEnumerationsTotalPerSec = _BrowserEnumerationsTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 9),
    _BrowserEnumerationsTotalPerSec_Type()
)
browserEnumerationsTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserEnumerationsTotalPerSec.setStatus("current")
_BrowserIllegalDatagramsPerSec_Type = Gauge32
_BrowserIllegalDatagramsPerSec_Object = MibScalar
browserIllegalDatagramsPerSec = _BrowserIllegalDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 10),
    _BrowserIllegalDatagramsPerSec_Type()
)
browserIllegalDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserIllegalDatagramsPerSec.setStatus("current")
_BrowserMailslotAllocationsFailed_Type = Gauge32
_BrowserMailslotAllocationsFailed_Object = MibScalar
browserMailslotAllocationsFailed = _BrowserMailslotAllocationsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 11),
    _BrowserMailslotAllocationsFailed_Type()
)
browserMailslotAllocationsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMailslotAllocationsFailed.setStatus("current")
_BrowserMailslotOpensFailedPerSec_Type = Gauge32
_BrowserMailslotOpensFailedPerSec_Object = MibScalar
browserMailslotOpensFailedPerSec = _BrowserMailslotOpensFailedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 12),
    _BrowserMailslotOpensFailedPerSec_Type()
)
browserMailslotOpensFailedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMailslotOpensFailedPerSec.setStatus("current")
_BrowserMailslotReceivesFailed_Type = Gauge32
_BrowserMailslotReceivesFailed_Object = MibScalar
browserMailslotReceivesFailed = _BrowserMailslotReceivesFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 13),
    _BrowserMailslotReceivesFailed_Type()
)
browserMailslotReceivesFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMailslotReceivesFailed.setStatus("current")
_BrowserMailslotWritesFailed_Type = Gauge32
_BrowserMailslotWritesFailed_Object = MibScalar
browserMailslotWritesFailed = _BrowserMailslotWritesFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 14),
    _BrowserMailslotWritesFailed_Type()
)
browserMailslotWritesFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMailslotWritesFailed.setStatus("current")
_BrowserMailslotWritesPerSec_Type = Gauge32
_BrowserMailslotWritesPerSec_Object = MibScalar
browserMailslotWritesPerSec = _BrowserMailslotWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 15),
    _BrowserMailslotWritesPerSec_Type()
)
browserMailslotWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMailslotWritesPerSec.setStatus("current")
_BrowserMissedMailslotDatagrams_Type = Gauge32
_BrowserMissedMailslotDatagrams_Object = MibScalar
browserMissedMailslotDatagrams = _BrowserMissedMailslotDatagrams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 16),
    _BrowserMissedMailslotDatagrams_Type()
)
browserMissedMailslotDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMissedMailslotDatagrams.setStatus("current")
_BrowserMissedServerAnnouncements_Type = Gauge32
_BrowserMissedServerAnnouncements_Object = MibScalar
browserMissedServerAnnouncements = _BrowserMissedServerAnnouncements_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 17),
    _BrowserMissedServerAnnouncements_Type()
)
browserMissedServerAnnouncements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMissedServerAnnouncements.setStatus("current")
_BrowserMissedServerListRequests_Type = Gauge32
_BrowserMissedServerListRequests_Object = MibScalar
browserMissedServerListRequests = _BrowserMissedServerListRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 18),
    _BrowserMissedServerListRequests_Type()
)
browserMissedServerListRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserMissedServerListRequests.setStatus("current")
_BrowserServerAllocFailedPerSec_Type = Gauge32
_BrowserServerAllocFailedPerSec_Object = MibScalar
browserServerAllocFailedPerSec = _BrowserServerAllocFailedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 19),
    _BrowserServerAllocFailedPerSec_Type()
)
browserServerAllocFailedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserServerAllocFailedPerSec.setStatus("current")
_BrowserServerListRequestsPerSec_Type = Gauge32
_BrowserServerListRequestsPerSec_Object = MibScalar
browserServerListRequestsPerSec = _BrowserServerListRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 20),
    _BrowserServerListRequestsPerSec_Type()
)
browserServerListRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    browserServerListRequestsPerSec.setStatus("current")
_Cache_ObjectIdentity = ObjectIdentity
cache = _Cache_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7)
)
if mibBuilder.loadTexts:
    cache.setStatus("current")
_CacheAsyncCopyReadsPerSec_Type = Gauge32
_CacheAsyncCopyReadsPerSec_Object = MibScalar
cacheAsyncCopyReadsPerSec = _CacheAsyncCopyReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 1),
    _CacheAsyncCopyReadsPerSec_Type()
)
cacheAsyncCopyReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheAsyncCopyReadsPerSec.setStatus("current")
_CacheAsyncDataMapsPerSec_Type = Gauge32
_CacheAsyncDataMapsPerSec_Object = MibScalar
cacheAsyncDataMapsPerSec = _CacheAsyncDataMapsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 2),
    _CacheAsyncDataMapsPerSec_Type()
)
cacheAsyncDataMapsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheAsyncDataMapsPerSec.setStatus("current")
_CacheAsyncFastReadsPerSec_Type = Gauge32
_CacheAsyncFastReadsPerSec_Object = MibScalar
cacheAsyncFastReadsPerSec = _CacheAsyncFastReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 3),
    _CacheAsyncFastReadsPerSec_Type()
)
cacheAsyncFastReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheAsyncFastReadsPerSec.setStatus("current")
_CacheAsyncMDLReadsPerSec_Type = Gauge32
_CacheAsyncMDLReadsPerSec_Object = MibScalar
cacheAsyncMDLReadsPerSec = _CacheAsyncMDLReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 4),
    _CacheAsyncMDLReadsPerSec_Type()
)
cacheAsyncMDLReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheAsyncMDLReadsPerSec.setStatus("current")
_CacheAsyncPinReadsPerSec_Type = Gauge32
_CacheAsyncPinReadsPerSec_Object = MibScalar
cacheAsyncPinReadsPerSec = _CacheAsyncPinReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 5),
    _CacheAsyncPinReadsPerSec_Type()
)
cacheAsyncPinReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheAsyncPinReadsPerSec.setStatus("current")
_CacheCopyReadHitsPercent_Type = Gauge32
_CacheCopyReadHitsPercent_Object = MibScalar
cacheCopyReadHitsPercent = _CacheCopyReadHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 6),
    _CacheCopyReadHitsPercent_Type()
)
cacheCopyReadHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheCopyReadHitsPercent.setStatus("current")
_CacheCopyReadsPerSec_Type = Gauge32
_CacheCopyReadsPerSec_Object = MibScalar
cacheCopyReadsPerSec = _CacheCopyReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 7),
    _CacheCopyReadsPerSec_Type()
)
cacheCopyReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheCopyReadsPerSec.setStatus("current")
_CacheDataFlushPagesPerSec_Type = Gauge32
_CacheDataFlushPagesPerSec_Object = MibScalar
cacheDataFlushPagesPerSec = _CacheDataFlushPagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 8),
    _CacheDataFlushPagesPerSec_Type()
)
cacheDataFlushPagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheDataFlushPagesPerSec.setStatus("current")
_CacheDataFlushesPerSec_Type = Gauge32
_CacheDataFlushesPerSec_Object = MibScalar
cacheDataFlushesPerSec = _CacheDataFlushesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 9),
    _CacheDataFlushesPerSec_Type()
)
cacheDataFlushesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheDataFlushesPerSec.setStatus("current")
_CacheDataMapHitsPercent_Type = Gauge32
_CacheDataMapHitsPercent_Object = MibScalar
cacheDataMapHitsPercent = _CacheDataMapHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 10),
    _CacheDataMapHitsPercent_Type()
)
cacheDataMapHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheDataMapHitsPercent.setStatus("current")
_CacheDataMapPinsPerSec_Type = Gauge32
_CacheDataMapPinsPerSec_Object = MibScalar
cacheDataMapPinsPerSec = _CacheDataMapPinsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 11),
    _CacheDataMapPinsPerSec_Type()
)
cacheDataMapPinsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheDataMapPinsPerSec.setStatus("current")
_CacheDataMapsPerSec_Type = Gauge32
_CacheDataMapsPerSec_Object = MibScalar
cacheDataMapsPerSec = _CacheDataMapsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 12),
    _CacheDataMapsPerSec_Type()
)
cacheDataMapsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheDataMapsPerSec.setStatus("current")
_CacheFastReadNotPossiblesPerSec_Type = Gauge32
_CacheFastReadNotPossiblesPerSec_Object = MibScalar
cacheFastReadNotPossiblesPerSec = _CacheFastReadNotPossiblesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 13),
    _CacheFastReadNotPossiblesPerSec_Type()
)
cacheFastReadNotPossiblesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheFastReadNotPossiblesPerSec.setStatus("current")
_CacheFastReadResourceMissPerSec_Type = Gauge32
_CacheFastReadResourceMissPerSec_Object = MibScalar
cacheFastReadResourceMissPerSec = _CacheFastReadResourceMissPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 14),
    _CacheFastReadResourceMissPerSec_Type()
)
cacheFastReadResourceMissPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheFastReadResourceMissPerSec.setStatus("current")
_CacheFastReadsPerSec_Type = Gauge32
_CacheFastReadsPerSec_Object = MibScalar
cacheFastReadsPerSec = _CacheFastReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 15),
    _CacheFastReadsPerSec_Type()
)
cacheFastReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheFastReadsPerSec.setStatus("current")
_CacheLazyWriteFlushesPerSec_Type = Gauge32
_CacheLazyWriteFlushesPerSec_Object = MibScalar
cacheLazyWriteFlushesPerSec = _CacheLazyWriteFlushesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 16),
    _CacheLazyWriteFlushesPerSec_Type()
)
cacheLazyWriteFlushesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheLazyWriteFlushesPerSec.setStatus("current")
_CacheLazyWritePagesPerSec_Type = Gauge32
_CacheLazyWritePagesPerSec_Object = MibScalar
cacheLazyWritePagesPerSec = _CacheLazyWritePagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 17),
    _CacheLazyWritePagesPerSec_Type()
)
cacheLazyWritePagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheLazyWritePagesPerSec.setStatus("current")
_CacheMDLReadHitsPercent_Type = Gauge32
_CacheMDLReadHitsPercent_Object = MibScalar
cacheMDLReadHitsPercent = _CacheMDLReadHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 18),
    _CacheMDLReadHitsPercent_Type()
)
cacheMDLReadHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheMDLReadHitsPercent.setStatus("current")
_CacheMDLReadsPerSec_Type = Gauge32
_CacheMDLReadsPerSec_Object = MibScalar
cacheMDLReadsPerSec = _CacheMDLReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 19),
    _CacheMDLReadsPerSec_Type()
)
cacheMDLReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheMDLReadsPerSec.setStatus("current")
_CachePinReadHitsPercent_Type = Gauge32
_CachePinReadHitsPercent_Object = MibScalar
cachePinReadHitsPercent = _CachePinReadHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 20),
    _CachePinReadHitsPercent_Type()
)
cachePinReadHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachePinReadHitsPercent.setStatus("current")
_CachePinReadsPerSec_Type = Gauge32
_CachePinReadsPerSec_Object = MibScalar
cachePinReadsPerSec = _CachePinReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 21),
    _CachePinReadsPerSec_Type()
)
cachePinReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachePinReadsPerSec.setStatus("current")
_CacheReadAheadsPerSec_Type = Gauge32
_CacheReadAheadsPerSec_Object = MibScalar
cacheReadAheadsPerSec = _CacheReadAheadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 22),
    _CacheReadAheadsPerSec_Type()
)
cacheReadAheadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheReadAheadsPerSec.setStatus("current")
_CacheSyncCopyReadsPerSec_Type = Gauge32
_CacheSyncCopyReadsPerSec_Object = MibScalar
cacheSyncCopyReadsPerSec = _CacheSyncCopyReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 23),
    _CacheSyncCopyReadsPerSec_Type()
)
cacheSyncCopyReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheSyncCopyReadsPerSec.setStatus("current")
_CacheSyncDataMapsPerSec_Type = Gauge32
_CacheSyncDataMapsPerSec_Object = MibScalar
cacheSyncDataMapsPerSec = _CacheSyncDataMapsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 24),
    _CacheSyncDataMapsPerSec_Type()
)
cacheSyncDataMapsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheSyncDataMapsPerSec.setStatus("current")
_CacheSyncFastReadsPerSec_Type = Gauge32
_CacheSyncFastReadsPerSec_Object = MibScalar
cacheSyncFastReadsPerSec = _CacheSyncFastReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 25),
    _CacheSyncFastReadsPerSec_Type()
)
cacheSyncFastReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheSyncFastReadsPerSec.setStatus("current")
_CacheSyncMDLReadsPerSec_Type = Gauge32
_CacheSyncMDLReadsPerSec_Object = MibScalar
cacheSyncMDLReadsPerSec = _CacheSyncMDLReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 26),
    _CacheSyncMDLReadsPerSec_Type()
)
cacheSyncMDLReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheSyncMDLReadsPerSec.setStatus("current")
_CacheSyncPinReadsPerSec_Type = Gauge32
_CacheSyncPinReadsPerSec_Object = MibScalar
cacheSyncPinReadsPerSec = _CacheSyncPinReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 27),
    _CacheSyncPinReadsPerSec_Type()
)
cacheSyncPinReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacheSyncPinReadsPerSec.setStatus("current")
_DhcpServer_ObjectIdentity = ObjectIdentity
dhcpServer = _DhcpServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8)
)
if mibBuilder.loadTexts:
    dhcpServer.setStatus("current")
_DhcpSrvAcksPerSec_Type = Gauge32
_DhcpSrvAcksPerSec_Object = MibScalar
dhcpSrvAcksPerSec = _DhcpSrvAcksPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 1),
    _DhcpSrvAcksPerSec_Type()
)
dhcpSrvAcksPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvAcksPerSec.setStatus("current")
_DhcpSrvActiveQueueLength_Type = Gauge32
_DhcpSrvActiveQueueLength_Object = MibScalar
dhcpSrvActiveQueueLength = _DhcpSrvActiveQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 2),
    _DhcpSrvActiveQueueLength_Type()
)
dhcpSrvActiveQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvActiveQueueLength.setStatus("current")
_DhcpSrvConflictCheckQueueLength_Type = Gauge32
_DhcpSrvConflictCheckQueueLength_Object = MibScalar
dhcpSrvConflictCheckQueueLength = _DhcpSrvConflictCheckQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 3),
    _DhcpSrvConflictCheckQueueLength_Type()
)
dhcpSrvConflictCheckQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvConflictCheckQueueLength.setStatus("current")
_DhcpSrvDeclinesPerSec_Type = Gauge32
_DhcpSrvDeclinesPerSec_Object = MibScalar
dhcpSrvDeclinesPerSec = _DhcpSrvDeclinesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 4),
    _DhcpSrvDeclinesPerSec_Type()
)
dhcpSrvDeclinesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvDeclinesPerSec.setStatus("current")
_DhcpSrvDiscoversPerSec_Type = Gauge32
_DhcpSrvDiscoversPerSec_Object = MibScalar
dhcpSrvDiscoversPerSec = _DhcpSrvDiscoversPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 5),
    _DhcpSrvDiscoversPerSec_Type()
)
dhcpSrvDiscoversPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvDiscoversPerSec.setStatus("current")
_DhcpSrvDuplicatesDroppedPerSec_Type = Gauge32
_DhcpSrvDuplicatesDroppedPerSec_Object = MibScalar
dhcpSrvDuplicatesDroppedPerSec = _DhcpSrvDuplicatesDroppedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 6),
    _DhcpSrvDuplicatesDroppedPerSec_Type()
)
dhcpSrvDuplicatesDroppedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvDuplicatesDroppedPerSec.setStatus("current")
_DhcpSrvInformsPerSec_Type = Gauge32
_DhcpSrvInformsPerSec_Object = MibScalar
dhcpSrvInformsPerSec = _DhcpSrvInformsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 7),
    _DhcpSrvInformsPerSec_Type()
)
dhcpSrvInformsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvInformsPerSec.setStatus("current")
_DhcpSrvMillisecondsPerPacketAvg_Type = Gauge32
_DhcpSrvMillisecondsPerPacketAvg_Object = MibScalar
dhcpSrvMillisecondsPerPacketAvg = _DhcpSrvMillisecondsPerPacketAvg_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 8),
    _DhcpSrvMillisecondsPerPacketAvg_Type()
)
dhcpSrvMillisecondsPerPacketAvg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvMillisecondsPerPacketAvg.setStatus("current")
_DhcpSrvNacksPerSec_Type = Gauge32
_DhcpSrvNacksPerSec_Object = MibScalar
dhcpSrvNacksPerSec = _DhcpSrvNacksPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 9),
    _DhcpSrvNacksPerSec_Type()
)
dhcpSrvNacksPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvNacksPerSec.setStatus("current")
_DhcpSrvOffersPerSec_Type = Gauge32
_DhcpSrvOffersPerSec_Object = MibScalar
dhcpSrvOffersPerSec = _DhcpSrvOffersPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 10),
    _DhcpSrvOffersPerSec_Type()
)
dhcpSrvOffersPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvOffersPerSec.setStatus("current")
_DhcpSrvPacketsExpiredPerSec_Type = Gauge32
_DhcpSrvPacketsExpiredPerSec_Object = MibScalar
dhcpSrvPacketsExpiredPerSec = _DhcpSrvPacketsExpiredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 11),
    _DhcpSrvPacketsExpiredPerSec_Type()
)
dhcpSrvPacketsExpiredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvPacketsExpiredPerSec.setStatus("current")
_DhcpSrvPacketsReceivedPerSec_Type = Gauge32
_DhcpSrvPacketsReceivedPerSec_Object = MibScalar
dhcpSrvPacketsReceivedPerSec = _DhcpSrvPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 12),
    _DhcpSrvPacketsReceivedPerSec_Type()
)
dhcpSrvPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvPacketsReceivedPerSec.setStatus("current")
_DhcpSrvReleasesPerSec_Type = Gauge32
_DhcpSrvReleasesPerSec_Object = MibScalar
dhcpSrvReleasesPerSec = _DhcpSrvReleasesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 13),
    _DhcpSrvReleasesPerSec_Type()
)
dhcpSrvReleasesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvReleasesPerSec.setStatus("current")
_DhcpSrvRequestsPerSec_Type = Gauge32
_DhcpSrvRequestsPerSec_Object = MibScalar
dhcpSrvRequestsPerSec = _DhcpSrvRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 14),
    _DhcpSrvRequestsPerSec_Type()
)
dhcpSrvRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dhcpSrvRequestsPerSec.setStatus("current")
_DistributeTransactionCoordinator_ObjectIdentity = ObjectIdentity
distributeTransactionCoordinator = _DistributeTransactionCoordinator_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9)
)
if mibBuilder.loadTexts:
    distributeTransactionCoordinator.setStatus("current")
_DtcAbortedTransactions_Type = Gauge32
_DtcAbortedTransactions_Object = MibScalar
dtcAbortedTransactions = _DtcAbortedTransactions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 1),
    _DtcAbortedTransactions_Type()
)
dtcAbortedTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcAbortedTransactions.setStatus("current")
_DtcAbortedTransactionsPerSec_Type = Gauge32
_DtcAbortedTransactionsPerSec_Object = MibScalar
dtcAbortedTransactionsPerSec = _DtcAbortedTransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 2),
    _DtcAbortedTransactionsPerSec_Type()
)
dtcAbortedTransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcAbortedTransactionsPerSec.setStatus("current")
_DtcActiveTransactions_Type = Gauge32
_DtcActiveTransactions_Object = MibScalar
dtcActiveTransactions = _DtcActiveTransactions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 3),
    _DtcActiveTransactions_Type()
)
dtcActiveTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcActiveTransactions.setStatus("current")
_DtcActiveTransactionsMaximum_Type = Gauge32
_DtcActiveTransactionsMaximum_Object = MibScalar
dtcActiveTransactionsMaximum = _DtcActiveTransactionsMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 4),
    _DtcActiveTransactionsMaximum_Type()
)
dtcActiveTransactionsMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcActiveTransactionsMaximum.setStatus("current")
_DtcCommittedTransactions_Type = Gauge32
_DtcCommittedTransactions_Object = MibScalar
dtcCommittedTransactions = _DtcCommittedTransactions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 5),
    _DtcCommittedTransactions_Type()
)
dtcCommittedTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcCommittedTransactions.setStatus("current")
_DtcCommittedTransactionsPerSec_Type = Gauge32
_DtcCommittedTransactionsPerSec_Object = MibScalar
dtcCommittedTransactionsPerSec = _DtcCommittedTransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 6),
    _DtcCommittedTransactionsPerSec_Type()
)
dtcCommittedTransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcCommittedTransactionsPerSec.setStatus("current")
_DtcForceAbortedTransactions_Type = Gauge32
_DtcForceAbortedTransactions_Object = MibScalar
dtcForceAbortedTransactions = _DtcForceAbortedTransactions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 7),
    _DtcForceAbortedTransactions_Type()
)
dtcForceAbortedTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcForceAbortedTransactions.setStatus("current")
_DtcForceCommittedTransactions_Type = Gauge32
_DtcForceCommittedTransactions_Object = MibScalar
dtcForceCommittedTransactions = _DtcForceCommittedTransactions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 8),
    _DtcForceCommittedTransactions_Type()
)
dtcForceCommittedTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcForceCommittedTransactions.setStatus("current")
_DtcInDoubtTransactions_Type = Gauge32
_DtcInDoubtTransactions_Object = MibScalar
dtcInDoubtTransactions = _DtcInDoubtTransactions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 9),
    _DtcInDoubtTransactions_Type()
)
dtcInDoubtTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcInDoubtTransactions.setStatus("current")
_DtcResponseTimeAverage_Type = Gauge32
_DtcResponseTimeAverage_Object = MibScalar
dtcResponseTimeAverage = _DtcResponseTimeAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 10),
    _DtcResponseTimeAverage_Type()
)
dtcResponseTimeAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcResponseTimeAverage.setStatus("current")
_DtcResponseTimeMaximum_Type = Gauge32
_DtcResponseTimeMaximum_Object = MibScalar
dtcResponseTimeMaximum = _DtcResponseTimeMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 11),
    _DtcResponseTimeMaximum_Type()
)
dtcResponseTimeMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcResponseTimeMaximum.setStatus("current")
_DtcResponseTimeMinimum_Type = Gauge32
_DtcResponseTimeMinimum_Object = MibScalar
dtcResponseTimeMinimum = _DtcResponseTimeMinimum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 12),
    _DtcResponseTimeMinimum_Type()
)
dtcResponseTimeMinimum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcResponseTimeMinimum.setStatus("current")
_DtcTransactionsPerSec_Type = Gauge32
_DtcTransactionsPerSec_Object = MibScalar
dtcTransactionsPerSec = _DtcTransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 13),
    _DtcTransactionsPerSec_Type()
)
dtcTransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcTransactionsPerSec.setStatus("current")
_Dns_ObjectIdentity = ObjectIdentity
dns = _Dns_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10)
)
if mibBuilder.loadTexts:
    dns.setStatus("current")
_DnsAXFRRequestReceived_Type = Gauge32
_DnsAXFRRequestReceived_Object = MibScalar
dnsAXFRRequestReceived = _DnsAXFRRequestReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 1),
    _DnsAXFRRequestReceived_Type()
)
dnsAXFRRequestReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsAXFRRequestReceived.setStatus("current")
_DnsAXFRRequestSent_Type = Gauge32
_DnsAXFRRequestSent_Object = MibScalar
dnsAXFRRequestSent = _DnsAXFRRequestSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 2),
    _DnsAXFRRequestSent_Type()
)
dnsAXFRRequestSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsAXFRRequestSent.setStatus("current")
_DnsAXFRResponseReceived_Type = Gauge32
_DnsAXFRResponseReceived_Object = MibScalar
dnsAXFRResponseReceived = _DnsAXFRResponseReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 3),
    _DnsAXFRResponseReceived_Type()
)
dnsAXFRResponseReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsAXFRResponseReceived.setStatus("current")
_DnsAXFRSuccessReceived_Type = Gauge32
_DnsAXFRSuccessReceived_Object = MibScalar
dnsAXFRSuccessReceived = _DnsAXFRSuccessReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 4),
    _DnsAXFRSuccessReceived_Type()
)
dnsAXFRSuccessReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsAXFRSuccessReceived.setStatus("current")
_DnsAXFRSuccessSent_Type = Gauge32
_DnsAXFRSuccessSent_Object = MibScalar
dnsAXFRSuccessSent = _DnsAXFRSuccessSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 5),
    _DnsAXFRSuccessSent_Type()
)
dnsAXFRSuccessSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsAXFRSuccessSent.setStatus("current")
_DnsCachingMemory_Type = Gauge32
_DnsCachingMemory_Object = MibScalar
dnsCachingMemory = _DnsCachingMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 6),
    _DnsCachingMemory_Type()
)
dnsCachingMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsCachingMemory.setStatus("current")
_DnsDatabaseNodeMemory_Type = Gauge32
_DnsDatabaseNodeMemory_Object = MibScalar
dnsDatabaseNodeMemory = _DnsDatabaseNodeMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 7),
    _DnsDatabaseNodeMemory_Type()
)
dnsDatabaseNodeMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDatabaseNodeMemory.setStatus("current")
_DnsDynamicUpdateNoOperation_Type = Gauge32
_DnsDynamicUpdateNoOperation_Object = MibScalar
dnsDynamicUpdateNoOperation = _DnsDynamicUpdateNoOperation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 8),
    _DnsDynamicUpdateNoOperation_Type()
)
dnsDynamicUpdateNoOperation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateNoOperation.setStatus("current")
_DnsDynamicUpdateNoOpPerSec_Type = Gauge32
_DnsDynamicUpdateNoOpPerSec_Object = MibScalar
dnsDynamicUpdateNoOpPerSec = _DnsDynamicUpdateNoOpPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 9),
    _DnsDynamicUpdateNoOpPerSec_Type()
)
dnsDynamicUpdateNoOpPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateNoOpPerSec.setStatus("current")
_DnsDynamicUpdateQueued_Type = Gauge32
_DnsDynamicUpdateQueued_Object = MibScalar
dnsDynamicUpdateQueued = _DnsDynamicUpdateQueued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 10),
    _DnsDynamicUpdateQueued_Type()
)
dnsDynamicUpdateQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateQueued.setStatus("current")
_DnsDynamicUpdateReceived_Type = Gauge32
_DnsDynamicUpdateReceived_Object = MibScalar
dnsDynamicUpdateReceived = _DnsDynamicUpdateReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 11),
    _DnsDynamicUpdateReceived_Type()
)
dnsDynamicUpdateReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateReceived.setStatus("current")
_DnsDynamicUpdateReceivedPerSec_Type = Gauge32
_DnsDynamicUpdateReceivedPerSec_Object = MibScalar
dnsDynamicUpdateReceivedPerSec = _DnsDynamicUpdateReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 12),
    _DnsDynamicUpdateReceivedPerSec_Type()
)
dnsDynamicUpdateReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateReceivedPerSec.setStatus("current")
_DnsDynamicUpdateRejected_Type = Gauge32
_DnsDynamicUpdateRejected_Object = MibScalar
dnsDynamicUpdateRejected = _DnsDynamicUpdateRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 13),
    _DnsDynamicUpdateRejected_Type()
)
dnsDynamicUpdateRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateRejected.setStatus("current")
_DnsDynamicUpdateTimeOuts_Type = Gauge32
_DnsDynamicUpdateTimeOuts_Object = MibScalar
dnsDynamicUpdateTimeOuts = _DnsDynamicUpdateTimeOuts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 14),
    _DnsDynamicUpdateTimeOuts_Type()
)
dnsDynamicUpdateTimeOuts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateTimeOuts.setStatus("current")
_DnsDynamicUpdateWriteToDB_Type = Gauge32
_DnsDynamicUpdateWriteToDB_Object = MibScalar
dnsDynamicUpdateWriteToDB = _DnsDynamicUpdateWriteToDB_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 15),
    _DnsDynamicUpdateWriteToDB_Type()
)
dnsDynamicUpdateWriteToDB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateWriteToDB.setStatus("current")
_DnsDynamicUpdateWriteToDBPerSec_Type = Gauge32
_DnsDynamicUpdateWriteToDBPerSec_Object = MibScalar
dnsDynamicUpdateWriteToDBPerSec = _DnsDynamicUpdateWriteToDBPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 16),
    _DnsDynamicUpdateWriteToDBPerSec_Type()
)
dnsDynamicUpdateWriteToDBPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsDynamicUpdateWriteToDBPerSec.setStatus("current")
_DnsIXFRRequestReceived_Type = Gauge32
_DnsIXFRRequestReceived_Object = MibScalar
dnsIXFRRequestReceived = _DnsIXFRRequestReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 17),
    _DnsIXFRRequestReceived_Type()
)
dnsIXFRRequestReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRRequestReceived.setStatus("current")
_DnsIXFRRequestSent_Type = Gauge32
_DnsIXFRRequestSent_Object = MibScalar
dnsIXFRRequestSent = _DnsIXFRRequestSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 18),
    _DnsIXFRRequestSent_Type()
)
dnsIXFRRequestSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRRequestSent.setStatus("current")
_DnsIXFRResponseReceived_Type = Gauge32
_DnsIXFRResponseReceived_Object = MibScalar
dnsIXFRResponseReceived = _DnsIXFRResponseReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 19),
    _DnsIXFRResponseReceived_Type()
)
dnsIXFRResponseReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRResponseReceived.setStatus("current")
_DnsIXFRSuccessReceived_Type = Gauge32
_DnsIXFRSuccessReceived_Object = MibScalar
dnsIXFRSuccessReceived = _DnsIXFRSuccessReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 20),
    _DnsIXFRSuccessReceived_Type()
)
dnsIXFRSuccessReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRSuccessReceived.setStatus("current")
_DnsIXFRSuccessSent_Type = Gauge32
_DnsIXFRSuccessSent_Object = MibScalar
dnsIXFRSuccessSent = _DnsIXFRSuccessSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 21),
    _DnsIXFRSuccessSent_Type()
)
dnsIXFRSuccessSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRSuccessSent.setStatus("current")
_DnsIXFRTCPSuccessReceived_Type = Gauge32
_DnsIXFRTCPSuccessReceived_Object = MibScalar
dnsIXFRTCPSuccessReceived = _DnsIXFRTCPSuccessReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 22),
    _DnsIXFRTCPSuccessReceived_Type()
)
dnsIXFRTCPSuccessReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRTCPSuccessReceived.setStatus("current")
_DnsIXFRUDPSuccessReceived_Type = Gauge32
_DnsIXFRUDPSuccessReceived_Object = MibScalar
dnsIXFRUDPSuccessReceived = _DnsIXFRUDPSuccessReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 23),
    _DnsIXFRUDPSuccessReceived_Type()
)
dnsIXFRUDPSuccessReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsIXFRUDPSuccessReceived.setStatus("current")
_DnsNbstatMemory_Type = Gauge32
_DnsNbstatMemory_Object = MibScalar
dnsNbstatMemory = _DnsNbstatMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 24),
    _DnsNbstatMemory_Type()
)
dnsNbstatMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsNbstatMemory.setStatus("current")
_DnsNotifyReceived_Type = Gauge32
_DnsNotifyReceived_Object = MibScalar
dnsNotifyReceived = _DnsNotifyReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 25),
    _DnsNotifyReceived_Type()
)
dnsNotifyReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsNotifyReceived.setStatus("current")
_DnsNotifySent_Type = Gauge32
_DnsNotifySent_Object = MibScalar
dnsNotifySent = _DnsNotifySent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 26),
    _DnsNotifySent_Type()
)
dnsNotifySent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsNotifySent.setStatus("current")
_DnsRecordFlowMemory_Type = Gauge32
_DnsRecordFlowMemory_Object = MibScalar
dnsRecordFlowMemory = _DnsRecordFlowMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 27),
    _DnsRecordFlowMemory_Type()
)
dnsRecordFlowMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecordFlowMemory.setStatus("current")
_DnsRecursiveQueries_Type = Gauge32
_DnsRecursiveQueries_Object = MibScalar
dnsRecursiveQueries = _DnsRecursiveQueries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 28),
    _DnsRecursiveQueries_Type()
)
dnsRecursiveQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecursiveQueries.setStatus("current")
_DnsRecursiveQueriesPerSec_Type = Gauge32
_DnsRecursiveQueriesPerSec_Object = MibScalar
dnsRecursiveQueriesPerSec = _DnsRecursiveQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 29),
    _DnsRecursiveQueriesPerSec_Type()
)
dnsRecursiveQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecursiveQueriesPerSec.setStatus("current")
_DnsRecursiveQueryFailure_Type = Gauge32
_DnsRecursiveQueryFailure_Object = MibScalar
dnsRecursiveQueryFailure = _DnsRecursiveQueryFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 30),
    _DnsRecursiveQueryFailure_Type()
)
dnsRecursiveQueryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecursiveQueryFailure.setStatus("current")
_DnsRecursiveQueryFailurePerSec_Type = Gauge32
_DnsRecursiveQueryFailurePerSec_Object = MibScalar
dnsRecursiveQueryFailurePerSec = _DnsRecursiveQueryFailurePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 31),
    _DnsRecursiveQueryFailurePerSec_Type()
)
dnsRecursiveQueryFailurePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecursiveQueryFailurePerSec.setStatus("current")
_DnsRecursiveSendTimeOuts_Type = Gauge32
_DnsRecursiveSendTimeOuts_Object = MibScalar
dnsRecursiveSendTimeOuts = _DnsRecursiveSendTimeOuts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 32),
    _DnsRecursiveSendTimeOuts_Type()
)
dnsRecursiveSendTimeOuts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecursiveSendTimeOuts.setStatus("current")
_DnsRecursiveTimeOutPerSec_Type = Gauge32
_DnsRecursiveTimeOutPerSec_Object = MibScalar
dnsRecursiveTimeOutPerSec = _DnsRecursiveTimeOutPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 33),
    _DnsRecursiveTimeOutPerSec_Type()
)
dnsRecursiveTimeOutPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsRecursiveTimeOutPerSec.setStatus("current")
_DnsSecureUpdateFailure_Type = Gauge32
_DnsSecureUpdateFailure_Object = MibScalar
dnsSecureUpdateFailure = _DnsSecureUpdateFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 34),
    _DnsSecureUpdateFailure_Type()
)
dnsSecureUpdateFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSecureUpdateFailure.setStatus("current")
_DnsSecureUpdateReceived_Type = Gauge32
_DnsSecureUpdateReceived_Object = MibScalar
dnsSecureUpdateReceived = _DnsSecureUpdateReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 35),
    _DnsSecureUpdateReceived_Type()
)
dnsSecureUpdateReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSecureUpdateReceived.setStatus("current")
_DnsSecureUpdateReceivedPerSec_Type = Gauge32
_DnsSecureUpdateReceivedPerSec_Object = MibScalar
dnsSecureUpdateReceivedPerSec = _DnsSecureUpdateReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 36),
    _DnsSecureUpdateReceivedPerSec_Type()
)
dnsSecureUpdateReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSecureUpdateReceivedPerSec.setStatus("current")
_DnsTCPMessageMemory_Type = Gauge32
_DnsTCPMessageMemory_Object = MibScalar
dnsTCPMessageMemory = _DnsTCPMessageMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 37),
    _DnsTCPMessageMemory_Type()
)
dnsTCPMessageMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTCPMessageMemory.setStatus("current")
_DnsTCPQueryReceived_Type = Gauge32
_DnsTCPQueryReceived_Object = MibScalar
dnsTCPQueryReceived = _DnsTCPQueryReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 38),
    _DnsTCPQueryReceived_Type()
)
dnsTCPQueryReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTCPQueryReceived.setStatus("current")
_DnsTCPQueryReceivedPerSec_Type = Gauge32
_DnsTCPQueryReceivedPerSec_Object = MibScalar
dnsTCPQueryReceivedPerSec = _DnsTCPQueryReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 39),
    _DnsTCPQueryReceivedPerSec_Type()
)
dnsTCPQueryReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTCPQueryReceivedPerSec.setStatus("current")
_DnsTCPResponseSent_Type = Gauge32
_DnsTCPResponseSent_Object = MibScalar
dnsTCPResponseSent = _DnsTCPResponseSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 40),
    _DnsTCPResponseSent_Type()
)
dnsTCPResponseSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTCPResponseSent.setStatus("current")
_DnsTCPResponseSentPerSec_Type = Gauge32
_DnsTCPResponseSentPerSec_Object = MibScalar
dnsTCPResponseSentPerSec = _DnsTCPResponseSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 41),
    _DnsTCPResponseSentPerSec_Type()
)
dnsTCPResponseSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTCPResponseSentPerSec.setStatus("current")
_DnsTotalQueryReceived_Type = Gauge32
_DnsTotalQueryReceived_Object = MibScalar
dnsTotalQueryReceived = _DnsTotalQueryReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 42),
    _DnsTotalQueryReceived_Type()
)
dnsTotalQueryReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTotalQueryReceived.setStatus("current")
_DnsTotalQueryReceivedPerSec_Type = Gauge32
_DnsTotalQueryReceivedPerSec_Object = MibScalar
dnsTotalQueryReceivedPerSec = _DnsTotalQueryReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 43),
    _DnsTotalQueryReceivedPerSec_Type()
)
dnsTotalQueryReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTotalQueryReceivedPerSec.setStatus("current")
_DnsTotalResponseSent_Type = Gauge32
_DnsTotalResponseSent_Object = MibScalar
dnsTotalResponseSent = _DnsTotalResponseSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 44),
    _DnsTotalResponseSent_Type()
)
dnsTotalResponseSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTotalResponseSent.setStatus("current")
_DnsTotalResponseSentPerSec_Type = Gauge32
_DnsTotalResponseSentPerSec_Object = MibScalar
dnsTotalResponseSentPerSec = _DnsTotalResponseSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 45),
    _DnsTotalResponseSentPerSec_Type()
)
dnsTotalResponseSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsTotalResponseSentPerSec.setStatus("current")
_DnsUDPMessageMemory_Type = Gauge32
_DnsUDPMessageMemory_Object = MibScalar
dnsUDPMessageMemory = _DnsUDPMessageMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 46),
    _DnsUDPMessageMemory_Type()
)
dnsUDPMessageMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsUDPMessageMemory.setStatus("current")
_DnsUDPQueryReceived_Type = Gauge32
_DnsUDPQueryReceived_Object = MibScalar
dnsUDPQueryReceived = _DnsUDPQueryReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 47),
    _DnsUDPQueryReceived_Type()
)
dnsUDPQueryReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsUDPQueryReceived.setStatus("current")
_DnsUDPQueryReceivedPerSec_Type = Gauge32
_DnsUDPQueryReceivedPerSec_Object = MibScalar
dnsUDPQueryReceivedPerSec = _DnsUDPQueryReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 48),
    _DnsUDPQueryReceivedPerSec_Type()
)
dnsUDPQueryReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsUDPQueryReceivedPerSec.setStatus("current")
_DnsUDPResponseSent_Type = Gauge32
_DnsUDPResponseSent_Object = MibScalar
dnsUDPResponseSent = _DnsUDPResponseSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 49),
    _DnsUDPResponseSent_Type()
)
dnsUDPResponseSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsUDPResponseSent.setStatus("current")
_DnsUDPResponseSentPerSec_Type = Gauge32
_DnsUDPResponseSentPerSec_Object = MibScalar
dnsUDPResponseSentPerSec = _DnsUDPResponseSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 50),
    _DnsUDPResponseSentPerSec_Type()
)
dnsUDPResponseSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsUDPResponseSentPerSec.setStatus("current")
_DnsWINSLookupReceived_Type = Gauge32
_DnsWINSLookupReceived_Object = MibScalar
dnsWINSLookupReceived = _DnsWINSLookupReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 51),
    _DnsWINSLookupReceived_Type()
)
dnsWINSLookupReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSLookupReceived.setStatus("current")
_DnsWINSLookupReceivedPerSec_Type = Gauge32
_DnsWINSLookupReceivedPerSec_Object = MibScalar
dnsWINSLookupReceivedPerSec = _DnsWINSLookupReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 52),
    _DnsWINSLookupReceivedPerSec_Type()
)
dnsWINSLookupReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSLookupReceivedPerSec.setStatus("current")
_DnsWINSResponseSent_Type = Gauge32
_DnsWINSResponseSent_Object = MibScalar
dnsWINSResponseSent = _DnsWINSResponseSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 53),
    _DnsWINSResponseSent_Type()
)
dnsWINSResponseSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSResponseSent.setStatus("current")
_DnsWINSResponseSentPerSec_Type = Gauge32
_DnsWINSResponseSentPerSec_Object = MibScalar
dnsWINSResponseSentPerSec = _DnsWINSResponseSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 54),
    _DnsWINSResponseSentPerSec_Type()
)
dnsWINSResponseSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSResponseSentPerSec.setStatus("current")
_DnsWINSReverseLookupReceived_Type = Gauge32
_DnsWINSReverseLookupReceived_Object = MibScalar
dnsWINSReverseLookupReceived = _DnsWINSReverseLookupReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 55),
    _DnsWINSReverseLookupReceived_Type()
)
dnsWINSReverseLookupReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSReverseLookupReceived.setStatus("current")
_DnsWINSReverseLookupRcvPerSec_Type = Gauge32
_DnsWINSReverseLookupRcvPerSec_Object = MibScalar
dnsWINSReverseLookupRcvPerSec = _DnsWINSReverseLookupRcvPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 56),
    _DnsWINSReverseLookupRcvPerSec_Type()
)
dnsWINSReverseLookupRcvPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSReverseLookupRcvPerSec.setStatus("current")
_DnsWINSReverseResponseSent_Type = Gauge32
_DnsWINSReverseResponseSent_Object = MibScalar
dnsWINSReverseResponseSent = _DnsWINSReverseResponseSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 57),
    _DnsWINSReverseResponseSent_Type()
)
dnsWINSReverseResponseSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSReverseResponseSent.setStatus("current")
_DnsWINSReverseResponseSentPerSec_Type = Gauge32
_DnsWINSReverseResponseSentPerSec_Object = MibScalar
dnsWINSReverseResponseSentPerSec = _DnsWINSReverseResponseSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 58),
    _DnsWINSReverseResponseSentPerSec_Type()
)
dnsWINSReverseResponseSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsWINSReverseResponseSentPerSec.setStatus("current")
_DnsZoneTransferFailure_Type = Gauge32
_DnsZoneTransferFailure_Object = MibScalar
dnsZoneTransferFailure = _DnsZoneTransferFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 59),
    _DnsZoneTransferFailure_Type()
)
dnsZoneTransferFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsZoneTransferFailure.setStatus("current")
_DnsZoneTransferRequestReceived_Type = Gauge32
_DnsZoneTransferRequestReceived_Object = MibScalar
dnsZoneTransferRequestReceived = _DnsZoneTransferRequestReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 60),
    _DnsZoneTransferRequestReceived_Type()
)
dnsZoneTransferRequestReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsZoneTransferRequestReceived.setStatus("current")
_DnsZoneTransferSOARequestSent_Type = Gauge32
_DnsZoneTransferSOARequestSent_Object = MibScalar
dnsZoneTransferSOARequestSent = _DnsZoneTransferSOARequestSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 61),
    _DnsZoneTransferSOARequestSent_Type()
)
dnsZoneTransferSOARequestSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsZoneTransferSOARequestSent.setStatus("current")
_DnsZoneTransferSuccess_Type = Gauge32
_DnsZoneTransferSuccess_Object = MibScalar
dnsZoneTransferSuccess = _DnsZoneTransferSuccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 62),
    _DnsZoneTransferSuccess_Type()
)
dnsZoneTransferSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsZoneTransferSuccess.setStatus("current")
_DotNETCLRDataTable_Object = MibTable
dotNETCLRDataTable = _DotNETCLRDataTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11)
)
if mibBuilder.loadTexts:
    dotNETCLRDataTable.setStatus("current")
_DotNETCLRDataEntry_Object = MibTableRow
dotNETCLRDataEntry = _DotNETCLRDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1)
)
dotNETCLRDataEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncdInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRDataEntry.setStatus("current")
_NcdInstance_Type = InstanceName
_NcdInstance_Object = MibTableColumn
ncdInstance = _NcdInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 1),
    _NcdInstance_Type()
)
ncdInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdInstance.setStatus("current")
_NcdSQLClntCurNumConnPools_Type = Gauge32
_NcdSQLClntCurNumConnPools_Object = MibTableColumn
ncdSQLClntCurNumConnPools = _NcdSQLClntCurNumConnPools_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 2),
    _NcdSQLClntCurNumConnPools_Type()
)
ncdSQLClntCurNumConnPools.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdSQLClntCurNumConnPools.setStatus("current")
_NcdSQLClntCurNumConns_Type = Gauge32
_NcdSQLClntCurNumConns_Object = MibTableColumn
ncdSQLClntCurNumConns = _NcdSQLClntCurNumConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 3),
    _NcdSQLClntCurNumConns_Type()
)
ncdSQLClntCurNumConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdSQLClntCurNumConns.setStatus("current")
_NcdSQLClntCurNumPoolConns_Type = Gauge32
_NcdSQLClntCurNumPoolConns_Object = MibTableColumn
ncdSQLClntCurNumPoolConns = _NcdSQLClntCurNumPoolConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 4),
    _NcdSQLClntCurNumPoolConns_Type()
)
ncdSQLClntCurNumPoolConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdSQLClntCurNumPoolConns.setStatus("current")
_NcdSQLClntPeakNumPoolConns_Type = Gauge32
_NcdSQLClntPeakNumPoolConns_Object = MibTableColumn
ncdSQLClntPeakNumPoolConns = _NcdSQLClntPeakNumPoolConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 5),
    _NcdSQLClntPeakNumPoolConns_Type()
)
ncdSQLClntPeakNumPoolConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdSQLClntPeakNumPoolConns.setStatus("current")
_NcdSQLClntTotalNumFailedCommands_Type = Gauge32
_NcdSQLClntTotalNumFailedCommands_Object = MibTableColumn
ncdSQLClntTotalNumFailedCommands = _NcdSQLClntTotalNumFailedCommands_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 6),
    _NcdSQLClntTotalNumFailedCommands_Type()
)
ncdSQLClntTotalNumFailedCommands.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdSQLClntTotalNumFailedCommands.setStatus("current")
_NcdSQLClntTotalNumFailedConnects_Type = Gauge32
_NcdSQLClntTotalNumFailedConnects_Object = MibTableColumn
ncdSQLClntTotalNumFailedConnects = _NcdSQLClntTotalNumFailedConnects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 7),
    _NcdSQLClntTotalNumFailedConnects_Type()
)
ncdSQLClntTotalNumFailedConnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncdSQLClntTotalNumFailedConnects.setStatus("current")
_DotNETCLRExceptionsTable_Object = MibTable
dotNETCLRExceptionsTable = _DotNETCLRExceptionsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12)
)
if mibBuilder.loadTexts:
    dotNETCLRExceptionsTable.setStatus("current")
_DotNETCLRExceptionsEntry_Object = MibTableRow
dotNETCLRExceptionsEntry = _DotNETCLRExceptionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1)
)
dotNETCLRExceptionsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "nceInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRExceptionsEntry.setStatus("current")
_NceInstance_Type = InstanceName
_NceInstance_Object = MibTableColumn
nceInstance = _NceInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 1),
    _NceInstance_Type()
)
nceInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nceInstance.setStatus("current")
_NceNumOfExcepsThrown_Type = Gauge32
_NceNumOfExcepsThrown_Object = MibTableColumn
nceNumOfExcepsThrown = _NceNumOfExcepsThrown_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 2),
    _NceNumOfExcepsThrown_Type()
)
nceNumOfExcepsThrown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nceNumOfExcepsThrown.setStatus("current")
_NceNumOfExcepsThrownPerSec_Type = Gauge32
_NceNumOfExcepsThrownPerSec_Object = MibTableColumn
nceNumOfExcepsThrownPerSec = _NceNumOfExcepsThrownPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 3),
    _NceNumOfExcepsThrownPerSec_Type()
)
nceNumOfExcepsThrownPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nceNumOfExcepsThrownPerSec.setStatus("current")
_NceNumOfFiltersPerSec_Type = Gauge32
_NceNumOfFiltersPerSec_Object = MibTableColumn
nceNumOfFiltersPerSec = _NceNumOfFiltersPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 4),
    _NceNumOfFiltersPerSec_Type()
)
nceNumOfFiltersPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nceNumOfFiltersPerSec.setStatus("current")
_NceNumOfFinallysPerSec_Type = Gauge32
_NceNumOfFinallysPerSec_Object = MibTableColumn
nceNumOfFinallysPerSec = _NceNumOfFinallysPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 5),
    _NceNumOfFinallysPerSec_Type()
)
nceNumOfFinallysPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nceNumOfFinallysPerSec.setStatus("current")
_NceThrowToCatchDepthPerSec_Type = Gauge32
_NceThrowToCatchDepthPerSec_Object = MibTableColumn
nceThrowToCatchDepthPerSec = _NceThrowToCatchDepthPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 6),
    _NceThrowToCatchDepthPerSec_Type()
)
nceThrowToCatchDepthPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nceThrowToCatchDepthPerSec.setStatus("current")
_DotNETCLRInteropTable_Object = MibTable
dotNETCLRInteropTable = _DotNETCLRInteropTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13)
)
if mibBuilder.loadTexts:
    dotNETCLRInteropTable.setStatus("current")
_DotNETCLRInteropEntry_Object = MibTableRow
dotNETCLRInteropEntry = _DotNETCLRInteropEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1)
)
dotNETCLRInteropEntry.setIndexNames(
    (0, "INFORMANT-ADV", "nciInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRInteropEntry.setStatus("current")
_NciInstance_Type = InstanceName
_NciInstance_Object = MibTableColumn
nciInstance = _NciInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 1),
    _NciInstance_Type()
)
nciInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nciInstance.setStatus("current")
_NciNumOfCCWs_Type = Gauge32
_NciNumOfCCWs_Object = MibTableColumn
nciNumOfCCWs = _NciNumOfCCWs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 2),
    _NciNumOfCCWs_Type()
)
nciNumOfCCWs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nciNumOfCCWs.setStatus("current")
_NciNumOfStubs_Type = Gauge32
_NciNumOfStubs_Object = MibTableColumn
nciNumOfStubs = _NciNumOfStubs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 3),
    _NciNumOfStubs_Type()
)
nciNumOfStubs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nciNumOfStubs.setStatus("current")
_NciNumOfTLBExportsPerSec_Type = Gauge32
_NciNumOfTLBExportsPerSec_Object = MibTableColumn
nciNumOfTLBExportsPerSec = _NciNumOfTLBExportsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 4),
    _NciNumOfTLBExportsPerSec_Type()
)
nciNumOfTLBExportsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nciNumOfTLBExportsPerSec.setStatus("current")
_NciNumOfTLBImportsPerSec_Type = Gauge32
_NciNumOfTLBImportsPerSec_Object = MibTableColumn
nciNumOfTLBImportsPerSec = _NciNumOfTLBImportsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 5),
    _NciNumOfTLBImportsPerSec_Type()
)
nciNumOfTLBImportsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nciNumOfTLBImportsPerSec.setStatus("current")
_NciNumOfMarshalling_Type = Gauge32
_NciNumOfMarshalling_Object = MibTableColumn
nciNumOfMarshalling = _NciNumOfMarshalling_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 6),
    _NciNumOfMarshalling_Type()
)
nciNumOfMarshalling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nciNumOfMarshalling.setStatus("current")
_DotNETCLRJitTable_Object = MibTable
dotNETCLRJitTable = _DotNETCLRJitTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14)
)
if mibBuilder.loadTexts:
    dotNETCLRJitTable.setStatus("current")
_DotNETCLRJitEntry_Object = MibTableRow
dotNETCLRJitEntry = _DotNETCLRJitEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1)
)
dotNETCLRJitEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncjInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRJitEntry.setStatus("current")
_NcjInstance_Type = InstanceName
_NcjInstance_Object = MibTableColumn
ncjInstance = _NcjInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 1),
    _NcjInstance_Type()
)
ncjInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjInstance.setStatus("current")
_NcjNumOfILBytesJitted_Type = Gauge32
_NcjNumOfILBytesJitted_Object = MibTableColumn
ncjNumOfILBytesJitted = _NcjNumOfILBytesJitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 2),
    _NcjNumOfILBytesJitted_Type()
)
ncjNumOfILBytesJitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjNumOfILBytesJitted.setStatus("current")
_NcjNumOfMethodsJitted_Type = Gauge32
_NcjNumOfMethodsJitted_Object = MibTableColumn
ncjNumOfMethodsJitted = _NcjNumOfMethodsJitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 3),
    _NcjNumOfMethodsJitted_Type()
)
ncjNumOfMethodsJitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjNumOfMethodsJitted.setStatus("current")
_NcjPercentTimeInJit_Type = Gauge32
_NcjPercentTimeInJit_Object = MibTableColumn
ncjPercentTimeInJit = _NcjPercentTimeInJit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 4),
    _NcjPercentTimeInJit_Type()
)
ncjPercentTimeInJit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjPercentTimeInJit.setStatus("current")
_NcjILBytesJittedPerSec_Type = Gauge32
_NcjILBytesJittedPerSec_Object = MibTableColumn
ncjILBytesJittedPerSec = _NcjILBytesJittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 5),
    _NcjILBytesJittedPerSec_Type()
)
ncjILBytesJittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjILBytesJittedPerSec.setStatus("current")
_NcjStandardJitFailures_Type = Gauge32
_NcjStandardJitFailures_Object = MibTableColumn
ncjStandardJitFailures = _NcjStandardJitFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 6),
    _NcjStandardJitFailures_Type()
)
ncjStandardJitFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjStandardJitFailures.setStatus("current")
_NcjTotalNumOfILBytesJitted_Type = Gauge32
_NcjTotalNumOfILBytesJitted_Object = MibTableColumn
ncjTotalNumOfILBytesJitted = _NcjTotalNumOfILBytesJitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 7),
    _NcjTotalNumOfILBytesJitted_Type()
)
ncjTotalNumOfILBytesJitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncjTotalNumOfILBytesJitted.setStatus("current")
_DotNETCLRLoadingTable_Object = MibTable
dotNETCLRLoadingTable = _DotNETCLRLoadingTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15)
)
if mibBuilder.loadTexts:
    dotNETCLRLoadingTable.setStatus("current")
_DotNETCLRLoadingEntry_Object = MibTableRow
dotNETCLRLoadingEntry = _DotNETCLRLoadingEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1)
)
dotNETCLRLoadingEntry.setIndexNames(
    (0, "INFORMANT-ADV", "nclInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRLoadingEntry.setStatus("current")
_NclInstance_Type = InstanceName
_NclInstance_Object = MibTableColumn
nclInstance = _NclInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 1),
    _NclInstance_Type()
)
nclInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclInstance.setStatus("current")
_NclPercentTimeLoading_Type = Gauge32
_NclPercentTimeLoading_Object = MibTableColumn
nclPercentTimeLoading = _NclPercentTimeLoading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 2),
    _NclPercentTimeLoading_Type()
)
nclPercentTimeLoading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclPercentTimeLoading.setStatus("current")
_NclAssemblySearchLength_Type = Gauge32
_NclAssemblySearchLength_Object = MibTableColumn
nclAssemblySearchLength = _NclAssemblySearchLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 3),
    _NclAssemblySearchLength_Type()
)
nclAssemblySearchLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclAssemblySearchLength.setStatus("current")
_NclBytesInLoaderHeap_Type = Gauge32
_NclBytesInLoaderHeap_Object = MibTableColumn
nclBytesInLoaderHeap = _NclBytesInLoaderHeap_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 4),
    _NclBytesInLoaderHeap_Type()
)
nclBytesInLoaderHeap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclBytesInLoaderHeap.setStatus("current")
_NclCurrentAssemblies_Type = Gauge32
_NclCurrentAssemblies_Object = MibTableColumn
nclCurrentAssemblies = _NclCurrentAssemblies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 5),
    _NclCurrentAssemblies_Type()
)
nclCurrentAssemblies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclCurrentAssemblies.setStatus("current")
_NclCurrentClassesLoaded_Type = Gauge32
_NclCurrentClassesLoaded_Object = MibTableColumn
nclCurrentClassesLoaded = _NclCurrentClassesLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 6),
    _NclCurrentClassesLoaded_Type()
)
nclCurrentClassesLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclCurrentClassesLoaded.setStatus("current")
_NclCurrentAppdomains_Type = Gauge32
_NclCurrentAppdomains_Object = MibTableColumn
nclCurrentAppdomains = _NclCurrentAppdomains_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 7),
    _NclCurrentAppdomains_Type()
)
nclCurrentAppdomains.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclCurrentAppdomains.setStatus("current")
_NclRateOfAssemblies_Type = Gauge32
_NclRateOfAssemblies_Object = MibTableColumn
nclRateOfAssemblies = _NclRateOfAssemblies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 8),
    _NclRateOfAssemblies_Type()
)
nclRateOfAssemblies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclRateOfAssemblies.setStatus("current")
_NclRateOfClassesLoaded_Type = Gauge32
_NclRateOfClassesLoaded_Object = MibTableColumn
nclRateOfClassesLoaded = _NclRateOfClassesLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 9),
    _NclRateOfClassesLoaded_Type()
)
nclRateOfClassesLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclRateOfClassesLoaded.setStatus("current")
_NclRateOfLoadFailures_Type = Gauge32
_NclRateOfLoadFailures_Object = MibTableColumn
nclRateOfLoadFailures = _NclRateOfLoadFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 10),
    _NclRateOfLoadFailures_Type()
)
nclRateOfLoadFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclRateOfLoadFailures.setStatus("current")
_NclRateOfAppdomains_Type = Gauge32
_NclRateOfAppdomains_Object = MibTableColumn
nclRateOfAppdomains = _NclRateOfAppdomains_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 11),
    _NclRateOfAppdomains_Type()
)
nclRateOfAppdomains.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclRateOfAppdomains.setStatus("current")
_NclRateOfAppdomainsUnloaded_Type = Gauge32
_NclRateOfAppdomainsUnloaded_Object = MibTableColumn
nclRateOfAppdomainsUnloaded = _NclRateOfAppdomainsUnloaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 12),
    _NclRateOfAppdomainsUnloaded_Type()
)
nclRateOfAppdomainsUnloaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclRateOfAppdomainsUnloaded.setStatus("current")
_NclTotalNumOfLoadFailures_Type = Gauge32
_NclTotalNumOfLoadFailures_Object = MibTableColumn
nclTotalNumOfLoadFailures = _NclTotalNumOfLoadFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 13),
    _NclTotalNumOfLoadFailures_Type()
)
nclTotalNumOfLoadFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclTotalNumOfLoadFailures.setStatus("current")
_NclTotalAppdomains_Type = Gauge32
_NclTotalAppdomains_Object = MibTableColumn
nclTotalAppdomains = _NclTotalAppdomains_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 14),
    _NclTotalAppdomains_Type()
)
nclTotalAppdomains.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclTotalAppdomains.setStatus("current")
_NclTotalAssemblies_Type = Gauge32
_NclTotalAssemblies_Object = MibTableColumn
nclTotalAssemblies = _NclTotalAssemblies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 15),
    _NclTotalAssemblies_Type()
)
nclTotalAssemblies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclTotalAssemblies.setStatus("current")
_NclTotalClassesLoaded_Type = Gauge32
_NclTotalClassesLoaded_Object = MibTableColumn
nclTotalClassesLoaded = _NclTotalClassesLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 16),
    _NclTotalClassesLoaded_Type()
)
nclTotalClassesLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclTotalClassesLoaded.setStatus("current")
_NclTotalAppdomainsUnloaded_Type = Gauge32
_NclTotalAppdomainsUnloaded_Object = MibTableColumn
nclTotalAppdomainsUnloaded = _NclTotalAppdomainsUnloaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 17),
    _NclTotalAppdomainsUnloaded_Type()
)
nclTotalAppdomainsUnloaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nclTotalAppdomainsUnloaded.setStatus("current")
_DotNETCLRLocksAndThreadsTable_Object = MibTable
dotNETCLRLocksAndThreadsTable = _DotNETCLRLocksAndThreadsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16)
)
if mibBuilder.loadTexts:
    dotNETCLRLocksAndThreadsTable.setStatus("current")
_DotNETCLRLocksAndThreadsEntry_Object = MibTableRow
dotNETCLRLocksAndThreadsEntry = _DotNETCLRLocksAndThreadsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1)
)
dotNETCLRLocksAndThreadsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncltInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRLocksAndThreadsEntry.setStatus("current")
_NcltInstance_Type = InstanceName
_NcltInstance_Object = MibTableColumn
ncltInstance = _NcltInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 1),
    _NcltInstance_Type()
)
ncltInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltInstance.setStatus("current")
_NcltNumOfCurrentLogicalThread_Type = Gauge32
_NcltNumOfCurrentLogicalThread_Object = MibTableColumn
ncltNumOfCurrentLogicalThread = _NcltNumOfCurrentLogicalThread_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 2),
    _NcltNumOfCurrentLogicalThread_Type()
)
ncltNumOfCurrentLogicalThread.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltNumOfCurrentLogicalThread.setStatus("current")
_NcltNumOfCurrentPhysicalThread_Type = Gauge32
_NcltNumOfCurrentPhysicalThread_Object = MibTableColumn
ncltNumOfCurrentPhysicalThread = _NcltNumOfCurrentPhysicalThread_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 3),
    _NcltNumOfCurrentPhysicalThread_Type()
)
ncltNumOfCurrentPhysicalThread.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltNumOfCurrentPhysicalThread.setStatus("current")
_NcltNumOfCurrentRecognizedThread_Type = Gauge32
_NcltNumOfCurrentRecognizedThread_Object = MibTableColumn
ncltNumOfCurrentRecognizedThread = _NcltNumOfCurrentRecognizedThread_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 4),
    _NcltNumOfCurrentRecognizedThread_Type()
)
ncltNumOfCurrentRecognizedThread.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltNumOfCurrentRecognizedThread.setStatus("current")
_NcltNumOfTotalRecognizedThread_Type = Gauge32
_NcltNumOfTotalRecognizedThread_Object = MibTableColumn
ncltNumOfTotalRecognizedThread = _NcltNumOfTotalRecognizedThread_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 5),
    _NcltNumOfTotalRecognizedThread_Type()
)
ncltNumOfTotalRecognizedThread.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltNumOfTotalRecognizedThread.setStatus("current")
_NcltContentionRatePerSec_Type = Gauge32
_NcltContentionRatePerSec_Object = MibTableColumn
ncltContentionRatePerSec = _NcltContentionRatePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 6),
    _NcltContentionRatePerSec_Type()
)
ncltContentionRatePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltContentionRatePerSec.setStatus("current")
_NcltCurrentQueueLength_Type = Gauge32
_NcltCurrentQueueLength_Object = MibTableColumn
ncltCurrentQueueLength = _NcltCurrentQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 7),
    _NcltCurrentQueueLength_Type()
)
ncltCurrentQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltCurrentQueueLength.setStatus("current")
_NcltQueueLengthPerSec_Type = Gauge32
_NcltQueueLengthPerSec_Object = MibTableColumn
ncltQueueLengthPerSec = _NcltQueueLengthPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 8),
    _NcltQueueLengthPerSec_Type()
)
ncltQueueLengthPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltQueueLengthPerSec.setStatus("current")
_NcltQueueLengthPeak_Type = Gauge32
_NcltQueueLengthPeak_Object = MibTableColumn
ncltQueueLengthPeak = _NcltQueueLengthPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 9),
    _NcltQueueLengthPeak_Type()
)
ncltQueueLengthPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltQueueLengthPeak.setStatus("current")
_NcltTotalNumOfContentions_Type = Gauge32
_NcltTotalNumOfContentions_Object = MibTableColumn
ncltTotalNumOfContentions = _NcltTotalNumOfContentions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 10),
    _NcltTotalNumOfContentions_Type()
)
ncltTotalNumOfContentions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltTotalNumOfContentions.setStatus("current")
_NcltRateOfRecognizedThreadPerSec_Type = Gauge32
_NcltRateOfRecognizedThreadPerSec_Object = MibTableColumn
ncltRateOfRecognizedThreadPerSec = _NcltRateOfRecognizedThreadPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 11),
    _NcltRateOfRecognizedThreadPerSec_Type()
)
ncltRateOfRecognizedThreadPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncltRateOfRecognizedThreadPerSec.setStatus("current")
_DotNETCLRMemoryTable_Object = MibTable
dotNETCLRMemoryTable = _DotNETCLRMemoryTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17)
)
if mibBuilder.loadTexts:
    dotNETCLRMemoryTable.setStatus("current")
_DotNETCLRMemoryEntry_Object = MibTableRow
dotNETCLRMemoryEntry = _DotNETCLRMemoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1)
)
dotNETCLRMemoryEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncmInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRMemoryEntry.setStatus("current")
_NcmInstance_Type = InstanceName
_NcmInstance_Object = MibTableColumn
ncmInstance = _NcmInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 1),
    _NcmInstance_Type()
)
ncmInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmInstance.setStatus("current")
_NcmNumBytesInAllHeaps_Type = Gauge32
_NcmNumBytesInAllHeaps_Object = MibTableColumn
ncmNumBytesInAllHeaps = _NcmNumBytesInAllHeaps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 2),
    _NcmNumBytesInAllHeaps_Type()
)
ncmNumBytesInAllHeaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumBytesInAllHeaps.setStatus("current")
_NcmNumGCHandles_Type = Gauge32
_NcmNumGCHandles_Object = MibTableColumn
ncmNumGCHandles = _NcmNumGCHandles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 3),
    _NcmNumGCHandles_Type()
)
ncmNumGCHandles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumGCHandles.setStatus("current")
_NcmNumGen0Collections_Type = Gauge32
_NcmNumGen0Collections_Object = MibTableColumn
ncmNumGen0Collections = _NcmNumGen0Collections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 4),
    _NcmNumGen0Collections_Type()
)
ncmNumGen0Collections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumGen0Collections.setStatus("current")
_NcmNumGen1Collections_Type = Gauge32
_NcmNumGen1Collections_Object = MibTableColumn
ncmNumGen1Collections = _NcmNumGen1Collections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 5),
    _NcmNumGen1Collections_Type()
)
ncmNumGen1Collections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumGen1Collections.setStatus("current")
_NcmNumGen2Collections_Type = Gauge32
_NcmNumGen2Collections_Object = MibTableColumn
ncmNumGen2Collections = _NcmNumGen2Collections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 6),
    _NcmNumGen2Collections_Type()
)
ncmNumGen2Collections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumGen2Collections.setStatus("current")
_NcmNumInducedGC_Type = Gauge32
_NcmNumInducedGC_Object = MibTableColumn
ncmNumInducedGC = _NcmNumInducedGC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 7),
    _NcmNumInducedGC_Type()
)
ncmNumInducedGC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumInducedGC.setStatus("current")
_NcmNumTotalCommittedBytes_Type = Gauge32
_NcmNumTotalCommittedBytes_Object = MibTableColumn
ncmNumTotalCommittedBytes = _NcmNumTotalCommittedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 8),
    _NcmNumTotalCommittedBytes_Type()
)
ncmNumTotalCommittedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumTotalCommittedBytes.setStatus("current")
_NcmNumTotalReservedBytes_Type = Gauge32
_NcmNumTotalReservedBytes_Object = MibTableColumn
ncmNumTotalReservedBytes = _NcmNumTotalReservedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 9),
    _NcmNumTotalReservedBytes_Type()
)
ncmNumTotalReservedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumTotalReservedBytes.setStatus("current")
_NcmNumOfPinnedObjects_Type = Gauge32
_NcmNumOfPinnedObjects_Object = MibTableColumn
ncmNumOfPinnedObjects = _NcmNumOfPinnedObjects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 10),
    _NcmNumOfPinnedObjects_Type()
)
ncmNumOfPinnedObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumOfPinnedObjects.setStatus("current")
_NcmNumOfSinkBlocksInUse_Type = Gauge32
_NcmNumOfSinkBlocksInUse_Object = MibTableColumn
ncmNumOfSinkBlocksInUse = _NcmNumOfSinkBlocksInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 11),
    _NcmNumOfSinkBlocksInUse_Type()
)
ncmNumOfSinkBlocksInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmNumOfSinkBlocksInUse.setStatus("current")
_NcmPercentTimeInGC_Type = Gauge32
_NcmPercentTimeInGC_Object = MibTableColumn
ncmPercentTimeInGC = _NcmPercentTimeInGC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 12),
    _NcmPercentTimeInGC_Type()
)
ncmPercentTimeInGC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmPercentTimeInGC.setStatus("current")
_NcmAllocatedBytesPerSec_Type = Gauge32
_NcmAllocatedBytesPerSec_Object = MibTableColumn
ncmAllocatedBytesPerSec = _NcmAllocatedBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 13),
    _NcmAllocatedBytesPerSec_Type()
)
ncmAllocatedBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmAllocatedBytesPerSec.setStatus("current")
_NcmFinalizationSurvivors_Type = Gauge32
_NcmFinalizationSurvivors_Object = MibTableColumn
ncmFinalizationSurvivors = _NcmFinalizationSurvivors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 14),
    _NcmFinalizationSurvivors_Type()
)
ncmFinalizationSurvivors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmFinalizationSurvivors.setStatus("current")
_NcmGen0PromotedBytesPerSec_Type = Gauge32
_NcmGen0PromotedBytesPerSec_Object = MibTableColumn
ncmGen0PromotedBytesPerSec = _NcmGen0PromotedBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 15),
    _NcmGen0PromotedBytesPerSec_Type()
)
ncmGen0PromotedBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmGen0PromotedBytesPerSec.setStatus("current")
_NcmGen0HeapSize_Type = Gauge32
_NcmGen0HeapSize_Object = MibTableColumn
ncmGen0HeapSize = _NcmGen0HeapSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 16),
    _NcmGen0HeapSize_Type()
)
ncmGen0HeapSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmGen0HeapSize.setStatus("current")
_NcmGen1PromotedBytesPerSec_Type = Gauge32
_NcmGen1PromotedBytesPerSec_Object = MibTableColumn
ncmGen1PromotedBytesPerSec = _NcmGen1PromotedBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 17),
    _NcmGen1PromotedBytesPerSec_Type()
)
ncmGen1PromotedBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmGen1PromotedBytesPerSec.setStatus("current")
_NcmGen1HeapSize_Type = Gauge32
_NcmGen1HeapSize_Object = MibTableColumn
ncmGen1HeapSize = _NcmGen1HeapSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 18),
    _NcmGen1HeapSize_Type()
)
ncmGen1HeapSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmGen1HeapSize.setStatus("current")
_NcmGen2HeapSize_Type = Gauge32
_NcmGen2HeapSize_Object = MibTableColumn
ncmGen2HeapSize = _NcmGen2HeapSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 19),
    _NcmGen2HeapSize_Type()
)
ncmGen2HeapSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmGen2HeapSize.setStatus("current")
_NcmLargeObjectHeapSize_Type = Gauge32
_NcmLargeObjectHeapSize_Object = MibTableColumn
ncmLargeObjectHeapSize = _NcmLargeObjectHeapSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 20),
    _NcmLargeObjectHeapSize_Type()
)
ncmLargeObjectHeapSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmLargeObjectHeapSize.setStatus("current")
_NcmPromotFinalizationMemoryGen0_Type = Gauge32
_NcmPromotFinalizationMemoryGen0_Object = MibTableColumn
ncmPromotFinalizationMemoryGen0 = _NcmPromotFinalizationMemoryGen0_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 21),
    _NcmPromotFinalizationMemoryGen0_Type()
)
ncmPromotFinalizationMemoryGen0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmPromotFinalizationMemoryGen0.setStatus("current")
_NcmPromotFinalizationMemoryGen1_Type = Gauge32
_NcmPromotFinalizationMemoryGen1_Object = MibTableColumn
ncmPromotFinalizationMemoryGen1 = _NcmPromotFinalizationMemoryGen1_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 22),
    _NcmPromotFinalizationMemoryGen1_Type()
)
ncmPromotFinalizationMemoryGen1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmPromotFinalizationMemoryGen1.setStatus("current")
_NcmPromotedMemoryFromGen0_Type = Gauge32
_NcmPromotedMemoryFromGen0_Object = MibTableColumn
ncmPromotedMemoryFromGen0 = _NcmPromotedMemoryFromGen0_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 23),
    _NcmPromotedMemoryFromGen0_Type()
)
ncmPromotedMemoryFromGen0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmPromotedMemoryFromGen0.setStatus("current")
_NcmPromotedMemoryFromGen1_Type = Gauge32
_NcmPromotedMemoryFromGen1_Object = MibTableColumn
ncmPromotedMemoryFromGen1 = _NcmPromotedMemoryFromGen1_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 24),
    _NcmPromotedMemoryFromGen1_Type()
)
ncmPromotedMemoryFromGen1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmPromotedMemoryFromGen1.setStatus("current")
_NcmProcessID_Type = Gauge32
_NcmProcessID_Object = MibTableColumn
ncmProcessID = _NcmProcessID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 25),
    _NcmProcessID_Type()
)
ncmProcessID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncmProcessID.setStatus("current")
_DotNETCLRNetworkingTable_Object = MibTable
dotNETCLRNetworkingTable = _DotNETCLRNetworkingTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18)
)
if mibBuilder.loadTexts:
    dotNETCLRNetworkingTable.setStatus("current")
_DotNETCLRNetworkingEntry_Object = MibTableRow
dotNETCLRNetworkingEntry = _DotNETCLRNetworkingEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1)
)
dotNETCLRNetworkingEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncnInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRNetworkingEntry.setStatus("current")
_NcnInstance_Type = InstanceName
_NcnInstance_Object = MibTableColumn
ncnInstance = _NcnInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 1),
    _NcnInstance_Type()
)
ncnInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncnInstance.setStatus("current")
_NcnBytesReceived_Type = Gauge32
_NcnBytesReceived_Object = MibTableColumn
ncnBytesReceived = _NcnBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 2),
    _NcnBytesReceived_Type()
)
ncnBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncnBytesReceived.setStatus("current")
_NcnBytesSent_Type = Gauge32
_NcnBytesSent_Object = MibTableColumn
ncnBytesSent = _NcnBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 3),
    _NcnBytesSent_Type()
)
ncnBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncnBytesSent.setStatus("current")
_NcnConnectionsEstablished_Type = Gauge32
_NcnConnectionsEstablished_Object = MibTableColumn
ncnConnectionsEstablished = _NcnConnectionsEstablished_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 4),
    _NcnConnectionsEstablished_Type()
)
ncnConnectionsEstablished.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncnConnectionsEstablished.setStatus("current")
_NcnDatagramsReceived_Type = Gauge32
_NcnDatagramsReceived_Object = MibTableColumn
ncnDatagramsReceived = _NcnDatagramsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 5),
    _NcnDatagramsReceived_Type()
)
ncnDatagramsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncnDatagramsReceived.setStatus("current")
_NcnDatagramsSent_Type = Gauge32
_NcnDatagramsSent_Object = MibTableColumn
ncnDatagramsSent = _NcnDatagramsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 6),
    _NcnDatagramsSent_Type()
)
ncnDatagramsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncnDatagramsSent.setStatus("current")
_DotNETCLRRemotingTable_Object = MibTable
dotNETCLRRemotingTable = _DotNETCLRRemotingTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19)
)
if mibBuilder.loadTexts:
    dotNETCLRRemotingTable.setStatus("current")
_DotNETCLRRemotingEntry_Object = MibTableRow
dotNETCLRRemotingEntry = _DotNETCLRRemotingEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1)
)
dotNETCLRRemotingEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncrInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRRemotingEntry.setStatus("current")
_NcrInstance_Type = InstanceName
_NcrInstance_Object = MibTableColumn
ncrInstance = _NcrInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 1),
    _NcrInstance_Type()
)
ncrInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrInstance.setStatus("current")
_NcrChannels_Type = Gauge32
_NcrChannels_Object = MibTableColumn
ncrChannels = _NcrChannels_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 2),
    _NcrChannels_Type()
)
ncrChannels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrChannels.setStatus("current")
_NcrContextProxies_Type = Gauge32
_NcrContextProxies_Object = MibTableColumn
ncrContextProxies = _NcrContextProxies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 3),
    _NcrContextProxies_Type()
)
ncrContextProxies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrContextProxies.setStatus("current")
_NcrContextBoundClassesLoaded_Type = Gauge32
_NcrContextBoundClassesLoaded_Object = MibTableColumn
ncrContextBoundClassesLoaded = _NcrContextBoundClassesLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 4),
    _NcrContextBoundClassesLoaded_Type()
)
ncrContextBoundClassesLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrContextBoundClassesLoaded.setStatus("current")
_NcrContextBoundObjsAllocPerSec_Type = Gauge32
_NcrContextBoundObjsAllocPerSec_Object = MibTableColumn
ncrContextBoundObjsAllocPerSec = _NcrContextBoundObjsAllocPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 5),
    _NcrContextBoundObjsAllocPerSec_Type()
)
ncrContextBoundObjsAllocPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrContextBoundObjsAllocPerSec.setStatus("current")
_NcrContexts_Type = Gauge32
_NcrContexts_Object = MibTableColumn
ncrContexts = _NcrContexts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 6),
    _NcrContexts_Type()
)
ncrContexts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrContexts.setStatus("current")
_NcrRemoteCallsPerSec_Type = Gauge32
_NcrRemoteCallsPerSec_Object = MibTableColumn
ncrRemoteCallsPerSec = _NcrRemoteCallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 7),
    _NcrRemoteCallsPerSec_Type()
)
ncrRemoteCallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrRemoteCallsPerSec.setStatus("current")
_NcrTotalRemoteCalls_Type = Gauge32
_NcrTotalRemoteCalls_Object = MibTableColumn
ncrTotalRemoteCalls = _NcrTotalRemoteCalls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 8),
    _NcrTotalRemoteCalls_Type()
)
ncrTotalRemoteCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncrTotalRemoteCalls.setStatus("current")
_DotNETCLRSecurityTable_Object = MibTable
dotNETCLRSecurityTable = _DotNETCLRSecurityTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20)
)
if mibBuilder.loadTexts:
    dotNETCLRSecurityTable.setStatus("current")
_DotNETCLRSecurityEntry_Object = MibTableRow
dotNETCLRSecurityEntry = _DotNETCLRSecurityEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1)
)
dotNETCLRSecurityEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ncsInstance"),
)
if mibBuilder.loadTexts:
    dotNETCLRSecurityEntry.setStatus("current")
_NcsInstance_Type = InstanceName
_NcsInstance_Object = MibTableColumn
ncsInstance = _NcsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 1),
    _NcsInstance_Type()
)
ncsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncsInstance.setStatus("current")
_NcsNumLinkTimeChecks_Type = Gauge32
_NcsNumLinkTimeChecks_Object = MibTableColumn
ncsNumLinkTimeChecks = _NcsNumLinkTimeChecks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 2),
    _NcsNumLinkTimeChecks_Type()
)
ncsNumLinkTimeChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncsNumLinkTimeChecks.setStatus("current")
_NcsPercentTimeSigAuthenticating_Type = Gauge32
_NcsPercentTimeSigAuthenticating_Object = MibTableColumn
ncsPercentTimeSigAuthenticating = _NcsPercentTimeSigAuthenticating_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 3),
    _NcsPercentTimeSigAuthenticating_Type()
)
ncsPercentTimeSigAuthenticating.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncsPercentTimeSigAuthenticating.setStatus("current")
_NcsPercentTimeInRTChecks_Type = Gauge32
_NcsPercentTimeInRTChecks_Object = MibTableColumn
ncsPercentTimeInRTChecks = _NcsPercentTimeInRTChecks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 4),
    _NcsPercentTimeInRTChecks_Type()
)
ncsPercentTimeInRTChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncsPercentTimeInRTChecks.setStatus("current")
_NcsStackWalkDepth_Type = Gauge32
_NcsStackWalkDepth_Object = MibTableColumn
ncsStackWalkDepth = _NcsStackWalkDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 5),
    _NcsStackWalkDepth_Type()
)
ncsStackWalkDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncsStackWalkDepth.setStatus("current")
_NcsTotalRuntimeChecks_Type = Gauge32
_NcsTotalRuntimeChecks_Object = MibTableColumn
ncsTotalRuntimeChecks = _NcsTotalRuntimeChecks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 6),
    _NcsTotalRuntimeChecks_Type()
)
ncsTotalRuntimeChecks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ncsTotalRuntimeChecks.setStatus("current")
_FileReplicaConnTable_Object = MibTable
fileReplicaConnTable = _FileReplicaConnTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21)
)
if mibBuilder.loadTexts:
    fileReplicaConnTable.setStatus("current")
_FileReplicaConnEntry_Object = MibTableRow
fileReplicaConnEntry = _FileReplicaConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1)
)
fileReplicaConnEntry.setIndexNames(
    (0, "INFORMANT-ADV", "frcInstance"),
)
if mibBuilder.loadTexts:
    fileReplicaConnEntry.setStatus("current")
_FrcInstance_Type = InstanceName
_FrcInstance_Object = MibTableColumn
frcInstance = _FrcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 1),
    _FrcInstance_Type()
)
frcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcInstance.setStatus("current")
_FrcAuthentications_Type = Gauge32
_FrcAuthentications_Object = MibTableColumn
frcAuthentications = _FrcAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 2),
    _FrcAuthentications_Type()
)
frcAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcAuthentications.setStatus("current")
_FrcAuthenticationsInError_Type = Gauge32
_FrcAuthenticationsInError_Object = MibTableColumn
frcAuthenticationsInError = _FrcAuthenticationsInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 3),
    _FrcAuthenticationsInError_Type()
)
frcAuthenticationsInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcAuthenticationsInError.setStatus("current")
_FrcBindings_Type = Gauge32
_FrcBindings_Object = MibTableColumn
frcBindings = _FrcBindings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 4),
    _FrcBindings_Type()
)
frcBindings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcBindings.setStatus("current")
_FrcBindingsInError_Type = Gauge32
_FrcBindingsInError_Object = MibTableColumn
frcBindingsInError = _FrcBindingsInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 5),
    _FrcBindingsInError_Type()
)
frcBindingsInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcBindingsInError.setStatus("current")
_FrcCommunicationTimeouts_Type = Gauge32
_FrcCommunicationTimeouts_Object = MibTableColumn
frcCommunicationTimeouts = _FrcCommunicationTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 6),
    _FrcCommunicationTimeouts_Type()
)
frcCommunicationTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcCommunicationTimeouts.setStatus("current")
_FrcFetchBlocksReceived_Type = Gauge32
_FrcFetchBlocksReceived_Object = MibTableColumn
frcFetchBlocksReceived = _FrcFetchBlocksReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 7),
    _FrcFetchBlocksReceived_Type()
)
frcFetchBlocksReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcFetchBlocksReceived.setStatus("current")
_FrcFetchBlocksReceivedInBytes_Type = Gauge32
_FrcFetchBlocksReceivedInBytes_Object = MibTableColumn
frcFetchBlocksReceivedInBytes = _FrcFetchBlocksReceivedInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 8),
    _FrcFetchBlocksReceivedInBytes_Type()
)
frcFetchBlocksReceivedInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcFetchBlocksReceivedInBytes.setStatus("current")
_FrcFetchBlocksSent_Type = Gauge32
_FrcFetchBlocksSent_Object = MibTableColumn
frcFetchBlocksSent = _FrcFetchBlocksSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 9),
    _FrcFetchBlocksSent_Type()
)
frcFetchBlocksSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcFetchBlocksSent.setStatus("current")
_FrcFetchBlocksSentInBytes_Type = Gauge32
_FrcFetchBlocksSentInBytes_Object = MibTableColumn
frcFetchBlocksSentInBytes = _FrcFetchBlocksSentInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 10),
    _FrcFetchBlocksSentInBytes_Type()
)
frcFetchBlocksSentInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcFetchBlocksSentInBytes.setStatus("current")
_FrcFetchRequestsReceived_Type = Gauge32
_FrcFetchRequestsReceived_Object = MibTableColumn
frcFetchRequestsReceived = _FrcFetchRequestsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 11),
    _FrcFetchRequestsReceived_Type()
)
frcFetchRequestsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcFetchRequestsReceived.setStatus("current")
_FrcFetchRequestsSent_Type = Gauge32
_FrcFetchRequestsSent_Object = MibTableColumn
frcFetchRequestsSent = _FrcFetchRequestsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 12),
    _FrcFetchRequestsSent_Type()
)
frcFetchRequestsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcFetchRequestsSent.setStatus("current")
_FrcInboundChangeOrdersDampened_Type = Gauge32
_FrcInboundChangeOrdersDampened_Object = MibTableColumn
frcInboundChangeOrdersDampened = _FrcInboundChangeOrdersDampened_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 13),
    _FrcInboundChangeOrdersDampened_Type()
)
frcInboundChangeOrdersDampened.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcInboundChangeOrdersDampened.setStatus("current")
_FrcJoinNotificationsReceived_Type = Gauge32
_FrcJoinNotificationsReceived_Object = MibTableColumn
frcJoinNotificationsReceived = _FrcJoinNotificationsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 14),
    _FrcJoinNotificationsReceived_Type()
)
frcJoinNotificationsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcJoinNotificationsReceived.setStatus("current")
_FrcJoinNotificationsSent_Type = Gauge32
_FrcJoinNotificationsSent_Object = MibTableColumn
frcJoinNotificationsSent = _FrcJoinNotificationsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 15),
    _FrcJoinNotificationsSent_Type()
)
frcJoinNotificationsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcJoinNotificationsSent.setStatus("current")
_FrcJoins_Type = Gauge32
_FrcJoins_Object = MibTableColumn
frcJoins = _FrcJoins_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 16),
    _FrcJoins_Type()
)
frcJoins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcJoins.setStatus("current")
_FrcLocalChangeOrdersSent_Type = Gauge32
_FrcLocalChangeOrdersSent_Object = MibTableColumn
frcLocalChangeOrdersSent = _FrcLocalChangeOrdersSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 17),
    _FrcLocalChangeOrdersSent_Type()
)
frcLocalChangeOrdersSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcLocalChangeOrdersSent.setStatus("current")
_FrcLocalChangeOrdersSentAtJoin_Type = Gauge32
_FrcLocalChangeOrdersSentAtJoin_Object = MibTableColumn
frcLocalChangeOrdersSentAtJoin = _FrcLocalChangeOrdersSentAtJoin_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 18),
    _FrcLocalChangeOrdersSentAtJoin_Type()
)
frcLocalChangeOrdersSentAtJoin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcLocalChangeOrdersSentAtJoin.setStatus("current")
_FrcOutboundChangeOrdersDampened_Type = Gauge32
_FrcOutboundChangeOrdersDampened_Object = MibTableColumn
frcOutboundChangeOrdersDampened = _FrcOutboundChangeOrdersDampened_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 19),
    _FrcOutboundChangeOrdersDampened_Type()
)
frcOutboundChangeOrdersDampened.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcOutboundChangeOrdersDampened.setStatus("current")
_FrcPacketsSent_Type = Gauge32
_FrcPacketsSent_Object = MibTableColumn
frcPacketsSent = _FrcPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 20),
    _FrcPacketsSent_Type()
)
frcPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcPacketsSent.setStatus("current")
_FrcPacketsSentInBytes_Type = Gauge32
_FrcPacketsSentInBytes_Object = MibTableColumn
frcPacketsSentInBytes = _FrcPacketsSentInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 21),
    _FrcPacketsSentInBytes_Type()
)
frcPacketsSentInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcPacketsSentInBytes.setStatus("current")
_FrcPacketsSentInError_Type = Gauge32
_FrcPacketsSentInError_Object = MibTableColumn
frcPacketsSentInError = _FrcPacketsSentInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 22),
    _FrcPacketsSentInError_Type()
)
frcPacketsSentInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcPacketsSentInError.setStatus("current")
_FrcRemoteChangeOrdersReceived_Type = Gauge32
_FrcRemoteChangeOrdersReceived_Object = MibTableColumn
frcRemoteChangeOrdersReceived = _FrcRemoteChangeOrdersReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 23),
    _FrcRemoteChangeOrdersReceived_Type()
)
frcRemoteChangeOrdersReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcRemoteChangeOrdersReceived.setStatus("current")
_FrcRemoteChangeOrdersSent_Type = Gauge32
_FrcRemoteChangeOrdersSent_Object = MibTableColumn
frcRemoteChangeOrdersSent = _FrcRemoteChangeOrdersSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 24),
    _FrcRemoteChangeOrdersSent_Type()
)
frcRemoteChangeOrdersSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcRemoteChangeOrdersSent.setStatus("current")
_FrcUnjoins_Type = Gauge32
_FrcUnjoins_Object = MibTableColumn
frcUnjoins = _FrcUnjoins_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 25),
    _FrcUnjoins_Type()
)
frcUnjoins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frcUnjoins.setStatus("current")
_FileReplicaSetTable_Object = MibTable
fileReplicaSetTable = _FileReplicaSetTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22)
)
if mibBuilder.loadTexts:
    fileReplicaSetTable.setStatus("current")
_FileReplicaSetEntry_Object = MibTableRow
fileReplicaSetEntry = _FileReplicaSetEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1)
)
fileReplicaSetEntry.setIndexNames(
    (0, "INFORMANT-ADV", "frsInstance"),
)
if mibBuilder.loadTexts:
    fileReplicaSetEntry.setStatus("current")
_FrsInstance_Type = InstanceName
_FrsInstance_Object = MibTableColumn
frsInstance = _FrsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 1),
    _FrsInstance_Type()
)
frsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsInstance.setStatus("current")
_FrsAuthentications_Type = Gauge32
_FrsAuthentications_Object = MibTableColumn
frsAuthentications = _FrsAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 2),
    _FrsAuthentications_Type()
)
frsAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsAuthentications.setStatus("current")
_FrsAuthenticationsInError_Type = Gauge32
_FrsAuthenticationsInError_Object = MibTableColumn
frsAuthenticationsInError = _FrsAuthenticationsInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 3),
    _FrsAuthenticationsInError_Type()
)
frsAuthenticationsInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsAuthenticationsInError.setStatus("current")
_FrsBindings_Type = Gauge32
_FrsBindings_Object = MibTableColumn
frsBindings = _FrsBindings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 4),
    _FrsBindings_Type()
)
frsBindings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsBindings.setStatus("current")
_FrsBindingsInError_Type = Gauge32
_FrsBindingsInError_Object = MibTableColumn
frsBindingsInError = _FrsBindingsInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 5),
    _FrsBindingsInError_Type()
)
frsBindingsInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsBindingsInError.setStatus("current")
_FrsBytesOfFilesInstalled_Type = Gauge32
_FrsBytesOfFilesInstalled_Object = MibTableColumn
frsBytesOfFilesInstalled = _FrsBytesOfFilesInstalled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 6),
    _FrsBytesOfFilesInstalled_Type()
)
frsBytesOfFilesInstalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsBytesOfFilesInstalled.setStatus("current")
_FrsBytesOfStagingFetched_Type = Gauge32
_FrsBytesOfStagingFetched_Object = MibTableColumn
frsBytesOfStagingFetched = _FrsBytesOfStagingFetched_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 7),
    _FrsBytesOfStagingFetched_Type()
)
frsBytesOfStagingFetched.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsBytesOfStagingFetched.setStatus("current")
_FrsBytesOfStagingGenerated_Type = Gauge32
_FrsBytesOfStagingGenerated_Object = MibTableColumn
frsBytesOfStagingGenerated = _FrsBytesOfStagingGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 8),
    _FrsBytesOfStagingGenerated_Type()
)
frsBytesOfStagingGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsBytesOfStagingGenerated.setStatus("current")
_FrsBytesOfStagingRegenerated_Type = Gauge32
_FrsBytesOfStagingRegenerated_Object = MibTableColumn
frsBytesOfStagingRegenerated = _FrsBytesOfStagingRegenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 9),
    _FrsBytesOfStagingRegenerated_Type()
)
frsBytesOfStagingRegenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsBytesOfStagingRegenerated.setStatus("current")
_FrsChgOrdersAborted_Type = Gauge32
_FrsChgOrdersAborted_Object = MibTableColumn
frsChgOrdersAborted = _FrsChgOrdersAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 10),
    _FrsChgOrdersAborted_Type()
)
frsChgOrdersAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersAborted.setStatus("current")
_FrsChgOrdersEvaporated_Type = Gauge32
_FrsChgOrdersEvaporated_Object = MibTableColumn
frsChgOrdersEvaporated = _FrsChgOrdersEvaporated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 11),
    _FrsChgOrdersEvaporated_Type()
)
frsChgOrdersEvaporated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersEvaporated.setStatus("current")
_FrsChgOrdersIssued_Type = Gauge32
_FrsChgOrdersIssued_Object = MibTableColumn
frsChgOrdersIssued = _FrsChgOrdersIssued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 12),
    _FrsChgOrdersIssued_Type()
)
frsChgOrdersIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersIssued.setStatus("current")
_FrsChgOrdersMorphed_Type = Gauge32
_FrsChgOrdersMorphed_Object = MibTableColumn
frsChgOrdersMorphed = _FrsChgOrdersMorphed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 13),
    _FrsChgOrdersMorphed_Type()
)
frsChgOrdersMorphed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersMorphed.setStatus("current")
_FrsChgOrdersPropagated_Type = Gauge32
_FrsChgOrdersPropagated_Object = MibTableColumn
frsChgOrdersPropagated = _FrsChgOrdersPropagated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 14),
    _FrsChgOrdersPropagated_Type()
)
frsChgOrdersPropagated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersPropagated.setStatus("current")
_FrsChgOrdersReceived_Type = Gauge32
_FrsChgOrdersReceived_Object = MibTableColumn
frsChgOrdersReceived = _FrsChgOrdersReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 15),
    _FrsChgOrdersReceived_Type()
)
frsChgOrdersReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersReceived.setStatus("current")
_FrsChgOrdersRetired_Type = Gauge32
_FrsChgOrdersRetired_Object = MibTableColumn
frsChgOrdersRetired = _FrsChgOrdersRetired_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 16),
    _FrsChgOrdersRetired_Type()
)
frsChgOrdersRetired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersRetired.setStatus("current")
_FrsChgOrdersRetried_Type = Gauge32
_FrsChgOrdersRetried_Object = MibTableColumn
frsChgOrdersRetried = _FrsChgOrdersRetried_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 17),
    _FrsChgOrdersRetried_Type()
)
frsChgOrdersRetried.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersRetried.setStatus("current")
_FrsChgOrdersRetriedFetch_Type = Gauge32
_FrsChgOrdersRetriedFetch_Object = MibTableColumn
frsChgOrdersRetriedFetch = _FrsChgOrdersRetriedFetch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 18),
    _FrsChgOrdersRetriedFetch_Type()
)
frsChgOrdersRetriedFetch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersRetriedFetch.setStatus("current")
_FrsChgOrdersRetriedGenerate_Type = Gauge32
_FrsChgOrdersRetriedGenerate_Object = MibTableColumn
frsChgOrdersRetriedGenerate = _FrsChgOrdersRetriedGenerate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 19),
    _FrsChgOrdersRetriedGenerate_Type()
)
frsChgOrdersRetriedGenerate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersRetriedGenerate.setStatus("current")
_FrsChgOrdersRetriedInstall_Type = Gauge32
_FrsChgOrdersRetriedInstall_Object = MibTableColumn
frsChgOrdersRetriedInstall = _FrsChgOrdersRetriedInstall_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 20),
    _FrsChgOrdersRetriedInstall_Type()
)
frsChgOrdersRetriedInstall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersRetriedInstall.setStatus("current")
_FrsChgOrdersRetriedRename_Type = Gauge32
_FrsChgOrdersRetriedRename_Object = MibTableColumn
frsChgOrdersRetriedRename = _FrsChgOrdersRetriedRename_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 21),
    _FrsChgOrdersRetriedRename_Type()
)
frsChgOrdersRetriedRename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersRetriedRename.setStatus("current")
_FrsChgOrdersSent_Type = Gauge32
_FrsChgOrdersSent_Object = MibTableColumn
frsChgOrdersSent = _FrsChgOrdersSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 22),
    _FrsChgOrdersSent_Type()
)
frsChgOrdersSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsChgOrdersSent.setStatus("current")
_FrsCommunicationTimeouts_Type = Gauge32
_FrsCommunicationTimeouts_Object = MibTableColumn
frsCommunicationTimeouts = _FrsCommunicationTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 23),
    _FrsCommunicationTimeouts_Type()
)
frsCommunicationTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsCommunicationTimeouts.setStatus("current")
_FrsDSBindings_Type = Gauge32
_FrsDSBindings_Object = MibTableColumn
frsDSBindings = _FrsDSBindings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 24),
    _FrsDSBindings_Type()
)
frsDSBindings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSBindings.setStatus("current")
_FrsDSBindingsInError_Type = Gauge32
_FrsDSBindingsInError_Object = MibTableColumn
frsDSBindingsInError = _FrsDSBindingsInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 25),
    _FrsDSBindingsInError_Type()
)
frsDSBindingsInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSBindingsInError.setStatus("current")
_FrsDSObjects_Type = Gauge32
_FrsDSObjects_Object = MibTableColumn
frsDSObjects = _FrsDSObjects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 26),
    _FrsDSObjects_Type()
)
frsDSObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSObjects.setStatus("current")
_FrsDSObjectsInError_Type = Gauge32
_FrsDSObjectsInError_Object = MibTableColumn
frsDSObjectsInError = _FrsDSObjectsInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 27),
    _FrsDSObjectsInError_Type()
)
frsDSObjectsInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSObjectsInError.setStatus("current")
_FrsDSPolls_Type = Gauge32
_FrsDSPolls_Object = MibTableColumn
frsDSPolls = _FrsDSPolls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 28),
    _FrsDSPolls_Type()
)
frsDSPolls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSPolls.setStatus("current")
_FrsDSPollsWithChgs_Type = Gauge32
_FrsDSPollsWithChgs_Object = MibTableColumn
frsDSPollsWithChgs = _FrsDSPollsWithChgs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 29),
    _FrsDSPollsWithChgs_Type()
)
frsDSPollsWithChgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSPollsWithChgs.setStatus("current")
_FrsDSPollsWithoutChgs_Type = Gauge32
_FrsDSPollsWithoutChgs_Object = MibTableColumn
frsDSPollsWithoutChgs = _FrsDSPollsWithoutChgs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 30),
    _FrsDSPollsWithoutChgs_Type()
)
frsDSPollsWithoutChgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSPollsWithoutChgs.setStatus("current")
_FrsDSSearches_Type = Gauge32
_FrsDSSearches_Object = MibTableColumn
frsDSSearches = _FrsDSSearches_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 31),
    _FrsDSSearches_Type()
)
frsDSSearches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSSearches.setStatus("current")
_FrsDSSearchesInError_Type = Gauge32
_FrsDSSearchesInError_Object = MibTableColumn
frsDSSearchesInError = _FrsDSSearchesInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 32),
    _FrsDSSearchesInError_Type()
)
frsDSSearchesInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsDSSearchesInError.setStatus("current")
_FrsFetchBlocksReceived_Type = Gauge32
_FrsFetchBlocksReceived_Object = MibTableColumn
frsFetchBlocksReceived = _FrsFetchBlocksReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 33),
    _FrsFetchBlocksReceived_Type()
)
frsFetchBlocksReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFetchBlocksReceived.setStatus("current")
_FrsFetchBlocksReceivedInBytes_Type = Gauge32
_FrsFetchBlocksReceivedInBytes_Object = MibTableColumn
frsFetchBlocksReceivedInBytes = _FrsFetchBlocksReceivedInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 34),
    _FrsFetchBlocksReceivedInBytes_Type()
)
frsFetchBlocksReceivedInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFetchBlocksReceivedInBytes.setStatus("current")
_FrsFetchBlocksSent_Type = Gauge32
_FrsFetchBlocksSent_Object = MibTableColumn
frsFetchBlocksSent = _FrsFetchBlocksSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 35),
    _FrsFetchBlocksSent_Type()
)
frsFetchBlocksSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFetchBlocksSent.setStatus("current")
_FrsFetchBlocksSentInBytes_Type = Gauge32
_FrsFetchBlocksSentInBytes_Object = MibTableColumn
frsFetchBlocksSentInBytes = _FrsFetchBlocksSentInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 36),
    _FrsFetchBlocksSentInBytes_Type()
)
frsFetchBlocksSentInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFetchBlocksSentInBytes.setStatus("current")
_FrsFetchRequestsReceived_Type = Gauge32
_FrsFetchRequestsReceived_Object = MibTableColumn
frsFetchRequestsReceived = _FrsFetchRequestsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 37),
    _FrsFetchRequestsReceived_Type()
)
frsFetchRequestsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFetchRequestsReceived.setStatus("current")
_FrsFetchRequestsSent_Type = Gauge32
_FrsFetchRequestsSent_Object = MibTableColumn
frsFetchRequestsSent = _FrsFetchRequestsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 38),
    _FrsFetchRequestsSent_Type()
)
frsFetchRequestsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFetchRequestsSent.setStatus("current")
_FrsFilesInstalled_Type = Gauge32
_FrsFilesInstalled_Object = MibTableColumn
frsFilesInstalled = _FrsFilesInstalled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 39),
    _FrsFilesInstalled_Type()
)
frsFilesInstalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFilesInstalled.setStatus("current")
_FrsFilesInstalledWithError_Type = Gauge32
_FrsFilesInstalledWithError_Object = MibTableColumn
frsFilesInstalledWithError = _FrsFilesInstalledWithError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 40),
    _FrsFilesInstalledWithError_Type()
)
frsFilesInstalledWithError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsFilesInstalledWithError.setStatus("current")
_FrsInboundChgOrdersDampened_Type = Gauge32
_FrsInboundChgOrdersDampened_Object = MibTableColumn
frsInboundChgOrdersDampened = _FrsInboundChgOrdersDampened_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 41),
    _FrsInboundChgOrdersDampened_Type()
)
frsInboundChgOrdersDampened.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsInboundChgOrdersDampened.setStatus("current")
_FrsJoinNotificationsReceived_Type = Gauge32
_FrsJoinNotificationsReceived_Object = MibTableColumn
frsJoinNotificationsReceived = _FrsJoinNotificationsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 42),
    _FrsJoinNotificationsReceived_Type()
)
frsJoinNotificationsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsJoinNotificationsReceived.setStatus("current")
_FrsJoinNotificationsSent_Type = Gauge32
_FrsJoinNotificationsSent_Object = MibTableColumn
frsJoinNotificationsSent = _FrsJoinNotificationsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 43),
    _FrsJoinNotificationsSent_Type()
)
frsJoinNotificationsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsJoinNotificationsSent.setStatus("current")
_FrsJoins_Type = Gauge32
_FrsJoins_Object = MibTableColumn
frsJoins = _FrsJoins_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 44),
    _FrsJoins_Type()
)
frsJoins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsJoins.setStatus("current")
_FrsKBOfStagingSpaceFree_Type = Gauge32
_FrsKBOfStagingSpaceFree_Object = MibTableColumn
frsKBOfStagingSpaceFree = _FrsKBOfStagingSpaceFree_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 45),
    _FrsKBOfStagingSpaceFree_Type()
)
frsKBOfStagingSpaceFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsKBOfStagingSpaceFree.setStatus("current")
_FrsKBOfStagingSpaceInUse_Type = Gauge32
_FrsKBOfStagingSpaceInUse_Object = MibTableColumn
frsKBOfStagingSpaceInUse = _FrsKBOfStagingSpaceInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 46),
    _FrsKBOfStagingSpaceInUse_Type()
)
frsKBOfStagingSpaceInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsKBOfStagingSpaceInUse.setStatus("current")
_FrsLocalChgOrdersAborted_Type = Gauge32
_FrsLocalChgOrdersAborted_Object = MibTableColumn
frsLocalChgOrdersAborted = _FrsLocalChgOrdersAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 47),
    _FrsLocalChgOrdersAborted_Type()
)
frsLocalChgOrdersAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersAborted.setStatus("current")
_FrsLocalChgOrdersIssued_Type = Gauge32
_FrsLocalChgOrdersIssued_Object = MibTableColumn
frsLocalChgOrdersIssued = _FrsLocalChgOrdersIssued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 48),
    _FrsLocalChgOrdersIssued_Type()
)
frsLocalChgOrdersIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersIssued.setStatus("current")
_FrsLocalChgOrdersMorphed_Type = Gauge32
_FrsLocalChgOrdersMorphed_Object = MibTableColumn
frsLocalChgOrdersMorphed = _FrsLocalChgOrdersMorphed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 49),
    _FrsLocalChgOrdersMorphed_Type()
)
frsLocalChgOrdersMorphed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersMorphed.setStatus("current")
_FrsLocalChgOrdersPropagated_Type = Gauge32
_FrsLocalChgOrdersPropagated_Object = MibTableColumn
frsLocalChgOrdersPropagated = _FrsLocalChgOrdersPropagated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 50),
    _FrsLocalChgOrdersPropagated_Type()
)
frsLocalChgOrdersPropagated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersPropagated.setStatus("current")
_FrsLocalChgOrdersRetired_Type = Gauge32
_FrsLocalChgOrdersRetired_Object = MibTableColumn
frsLocalChgOrdersRetired = _FrsLocalChgOrdersRetired_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 51),
    _FrsLocalChgOrdersRetired_Type()
)
frsLocalChgOrdersRetired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersRetired.setStatus("current")
_FrsLocalChgOrdersRetried_Type = Gauge32
_FrsLocalChgOrdersRetried_Object = MibTableColumn
frsLocalChgOrdersRetried = _FrsLocalChgOrdersRetried_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 52),
    _FrsLocalChgOrdersRetried_Type()
)
frsLocalChgOrdersRetried.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersRetried.setStatus("current")
_FrsLocalChgOrdersRetriedFetch_Type = Gauge32
_FrsLocalChgOrdersRetriedFetch_Object = MibTableColumn
frsLocalChgOrdersRetriedFetch = _FrsLocalChgOrdersRetriedFetch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 53),
    _FrsLocalChgOrdersRetriedFetch_Type()
)
frsLocalChgOrdersRetriedFetch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersRetriedFetch.setStatus("current")
_FrsLocalChgOrdersRetriedGenerate_Type = Gauge32
_FrsLocalChgOrdersRetriedGenerate_Object = MibTableColumn
frsLocalChgOrdersRetriedGenerate = _FrsLocalChgOrdersRetriedGenerate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 54),
    _FrsLocalChgOrdersRetriedGenerate_Type()
)
frsLocalChgOrdersRetriedGenerate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersRetriedGenerate.setStatus("current")
_FrsLocalChgOrdersRetriedInstall_Type = Gauge32
_FrsLocalChgOrdersRetriedInstall_Object = MibTableColumn
frsLocalChgOrdersRetriedInstall = _FrsLocalChgOrdersRetriedInstall_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 55),
    _FrsLocalChgOrdersRetriedInstall_Type()
)
frsLocalChgOrdersRetriedInstall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersRetriedInstall.setStatus("current")
_FrsLocalChgOrdersRetriedRename_Type = Gauge32
_FrsLocalChgOrdersRetriedRename_Object = MibTableColumn
frsLocalChgOrdersRetriedRename = _FrsLocalChgOrdersRetriedRename_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 56),
    _FrsLocalChgOrdersRetriedRename_Type()
)
frsLocalChgOrdersRetriedRename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersRetriedRename.setStatus("current")
_FrsLocalChgOrdersSent_Type = Gauge32
_FrsLocalChgOrdersSent_Object = MibTableColumn
frsLocalChgOrdersSent = _FrsLocalChgOrdersSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 57),
    _FrsLocalChgOrdersSent_Type()
)
frsLocalChgOrdersSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersSent.setStatus("current")
_FrsLocalChgOrdersSentJoin_Type = Gauge32
_FrsLocalChgOrdersSentJoin_Object = MibTableColumn
frsLocalChgOrdersSentJoin = _FrsLocalChgOrdersSentJoin_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 58),
    _FrsLocalChgOrdersSentJoin_Type()
)
frsLocalChgOrdersSentJoin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsLocalChgOrdersSentJoin.setStatus("current")
_FrsOutboundChgOrdersDampened_Type = Gauge32
_FrsOutboundChgOrdersDampened_Object = MibTableColumn
frsOutboundChgOrdersDampened = _FrsOutboundChgOrdersDampened_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 59),
    _FrsOutboundChgOrdersDampened_Type()
)
frsOutboundChgOrdersDampened.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsOutboundChgOrdersDampened.setStatus("current")
_FrsPacketsReceived_Type = Gauge32
_FrsPacketsReceived_Object = MibTableColumn
frsPacketsReceived = _FrsPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 60),
    _FrsPacketsReceived_Type()
)
frsPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsPacketsReceived.setStatus("current")
_FrsPacketsReceivedInBytes_Type = Gauge32
_FrsPacketsReceivedInBytes_Object = MibTableColumn
frsPacketsReceivedInBytes = _FrsPacketsReceivedInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 61),
    _FrsPacketsReceivedInBytes_Type()
)
frsPacketsReceivedInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsPacketsReceivedInBytes.setStatus("current")
_FrsPacketsReceivedInError_Type = Gauge32
_FrsPacketsReceivedInError_Object = MibTableColumn
frsPacketsReceivedInError = _FrsPacketsReceivedInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 62),
    _FrsPacketsReceivedInError_Type()
)
frsPacketsReceivedInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsPacketsReceivedInError.setStatus("current")
_FrsPacketsSent_Type = Gauge32
_FrsPacketsSent_Object = MibTableColumn
frsPacketsSent = _FrsPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 63),
    _FrsPacketsSent_Type()
)
frsPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsPacketsSent.setStatus("current")
_FrsPacketsSentInBytes_Type = Gauge32
_FrsPacketsSentInBytes_Object = MibTableColumn
frsPacketsSentInBytes = _FrsPacketsSentInBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 64),
    _FrsPacketsSentInBytes_Type()
)
frsPacketsSentInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsPacketsSentInBytes.setStatus("current")
_FrsPacketsSentInError_Type = Gauge32
_FrsPacketsSentInError_Object = MibTableColumn
frsPacketsSentInError = _FrsPacketsSentInError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 65),
    _FrsPacketsSentInError_Type()
)
frsPacketsSentInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsPacketsSentInError.setStatus("current")
_FrsRemoteChgOrdersAborted_Type = Gauge32
_FrsRemoteChgOrdersAborted_Object = MibTableColumn
frsRemoteChgOrdersAborted = _FrsRemoteChgOrdersAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 66),
    _FrsRemoteChgOrdersAborted_Type()
)
frsRemoteChgOrdersAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersAborted.setStatus("current")
_FrsRemoteChgOrdersIssued_Type = Gauge32
_FrsRemoteChgOrdersIssued_Object = MibTableColumn
frsRemoteChgOrdersIssued = _FrsRemoteChgOrdersIssued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 67),
    _FrsRemoteChgOrdersIssued_Type()
)
frsRemoteChgOrdersIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersIssued.setStatus("current")
_FrsRemoteChgOrdersMorphed_Type = Gauge32
_FrsRemoteChgOrdersMorphed_Object = MibTableColumn
frsRemoteChgOrdersMorphed = _FrsRemoteChgOrdersMorphed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 68),
    _FrsRemoteChgOrdersMorphed_Type()
)
frsRemoteChgOrdersMorphed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersMorphed.setStatus("current")
_FrsRemoteChgOrdersPropagated_Type = Gauge32
_FrsRemoteChgOrdersPropagated_Object = MibTableColumn
frsRemoteChgOrdersPropagated = _FrsRemoteChgOrdersPropagated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 69),
    _FrsRemoteChgOrdersPropagated_Type()
)
frsRemoteChgOrdersPropagated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersPropagated.setStatus("current")
_FrsRemoteChgOrdersReceived_Type = Gauge32
_FrsRemoteChgOrdersReceived_Object = MibTableColumn
frsRemoteChgOrdersReceived = _FrsRemoteChgOrdersReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 70),
    _FrsRemoteChgOrdersReceived_Type()
)
frsRemoteChgOrdersReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersReceived.setStatus("current")
_FrsRemoteChgOrdersRetired_Type = Gauge32
_FrsRemoteChgOrdersRetired_Object = MibTableColumn
frsRemoteChgOrdersRetired = _FrsRemoteChgOrdersRetired_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 71),
    _FrsRemoteChgOrdersRetired_Type()
)
frsRemoteChgOrdersRetired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersRetired.setStatus("current")
_FrsRemoteChgOrdersRetried_Type = Gauge32
_FrsRemoteChgOrdersRetried_Object = MibTableColumn
frsRemoteChgOrdersRetried = _FrsRemoteChgOrdersRetried_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 72),
    _FrsRemoteChgOrdersRetried_Type()
)
frsRemoteChgOrdersRetried.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersRetried.setStatus("current")
_FrsRemoteChgOrdersRetriedFetch_Type = Gauge32
_FrsRemoteChgOrdersRetriedFetch_Object = MibTableColumn
frsRemoteChgOrdersRetriedFetch = _FrsRemoteChgOrdersRetriedFetch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 73),
    _FrsRemoteChgOrdersRetriedFetch_Type()
)
frsRemoteChgOrdersRetriedFetch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersRetriedFetch.setStatus("current")
_FrsRemoteChgOrdersRetriedGenerat_Type = Gauge32
_FrsRemoteChgOrdersRetriedGenerat_Object = MibTableColumn
frsRemoteChgOrdersRetriedGenerat = _FrsRemoteChgOrdersRetriedGenerat_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 74),
    _FrsRemoteChgOrdersRetriedGenerat_Type()
)
frsRemoteChgOrdersRetriedGenerat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersRetriedGenerat.setStatus("current")
_FrsRemoteChgOrdersRetriedInstall_Type = Gauge32
_FrsRemoteChgOrdersRetriedInstall_Object = MibTableColumn
frsRemoteChgOrdersRetriedInstall = _FrsRemoteChgOrdersRetriedInstall_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 75),
    _FrsRemoteChgOrdersRetriedInstall_Type()
)
frsRemoteChgOrdersRetriedInstall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersRetriedInstall.setStatus("current")
_FrsRemoteChgOrdersRetriedRename_Type = Gauge32
_FrsRemoteChgOrdersRetriedRename_Object = MibTableColumn
frsRemoteChgOrdersRetriedRename = _FrsRemoteChgOrdersRetriedRename_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 76),
    _FrsRemoteChgOrdersRetriedRename_Type()
)
frsRemoteChgOrdersRetriedRename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersRetriedRename.setStatus("current")
_FrsRemoteChgOrdersSent_Type = Gauge32
_FrsRemoteChgOrdersSent_Object = MibTableColumn
frsRemoteChgOrdersSent = _FrsRemoteChgOrdersSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 77),
    _FrsRemoteChgOrdersSent_Type()
)
frsRemoteChgOrdersSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsRemoteChgOrdersSent.setStatus("current")
_FrsReplicaSetsCreated_Type = Gauge32
_FrsReplicaSetsCreated_Object = MibTableColumn
frsReplicaSetsCreated = _FrsReplicaSetsCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 78),
    _FrsReplicaSetsCreated_Type()
)
frsReplicaSetsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsReplicaSetsCreated.setStatus("current")
_FrsReplicaSetsDeleted_Type = Gauge32
_FrsReplicaSetsDeleted_Object = MibTableColumn
frsReplicaSetsDeleted = _FrsReplicaSetsDeleted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 79),
    _FrsReplicaSetsDeleted_Type()
)
frsReplicaSetsDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsReplicaSetsDeleted.setStatus("current")
_FrsReplicaSetsRemoved_Type = Gauge32
_FrsReplicaSetsRemoved_Object = MibTableColumn
frsReplicaSetsRemoved = _FrsReplicaSetsRemoved_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 80),
    _FrsReplicaSetsRemoved_Type()
)
frsReplicaSetsRemoved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsReplicaSetsRemoved.setStatus("current")
_FrsReplicaSetsStarted_Type = Gauge32
_FrsReplicaSetsStarted_Object = MibTableColumn
frsReplicaSetsStarted = _FrsReplicaSetsStarted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 81),
    _FrsReplicaSetsStarted_Type()
)
frsReplicaSetsStarted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsReplicaSetsStarted.setStatus("current")
_FrsStagingFilesFetched_Type = Gauge32
_FrsStagingFilesFetched_Object = MibTableColumn
frsStagingFilesFetched = _FrsStagingFilesFetched_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 82),
    _FrsStagingFilesFetched_Type()
)
frsStagingFilesFetched.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsStagingFilesFetched.setStatus("current")
_FrsStagingFilesGenerated_Type = Gauge32
_FrsStagingFilesGenerated_Object = MibTableColumn
frsStagingFilesGenerated = _FrsStagingFilesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 83),
    _FrsStagingFilesGenerated_Type()
)
frsStagingFilesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsStagingFilesGenerated.setStatus("current")
_FrsStagingFilesGeneratedWithErr_Type = Gauge32
_FrsStagingFilesGeneratedWithErr_Object = MibTableColumn
frsStagingFilesGeneratedWithErr = _FrsStagingFilesGeneratedWithErr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 84),
    _FrsStagingFilesGeneratedWithErr_Type()
)
frsStagingFilesGeneratedWithErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsStagingFilesGeneratedWithErr.setStatus("current")
_FrsStagingFilesRegenerated_Type = Gauge32
_FrsStagingFilesRegenerated_Object = MibTableColumn
frsStagingFilesRegenerated = _FrsStagingFilesRegenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 85),
    _FrsStagingFilesRegenerated_Type()
)
frsStagingFilesRegenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsStagingFilesRegenerated.setStatus("current")
_FrsThreadsExited_Type = Gauge32
_FrsThreadsExited_Object = MibTableColumn
frsThreadsExited = _FrsThreadsExited_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 86),
    _FrsThreadsExited_Type()
)
frsThreadsExited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsThreadsExited.setStatus("current")
_FrsThreadsStarted_Type = Gauge32
_FrsThreadsStarted_Object = MibTableColumn
frsThreadsStarted = _FrsThreadsStarted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 87),
    _FrsThreadsStarted_Type()
)
frsThreadsStarted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsThreadsStarted.setStatus("current")
_FrsUnjoins_Type = Gauge32
_FrsUnjoins_Object = MibTableColumn
frsUnjoins = _FrsUnjoins_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 88),
    _FrsUnjoins_Type()
)
frsUnjoins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsUnjoins.setStatus("current")
_FrsUsnReads_Type = Gauge32
_FrsUsnReads_Object = MibTableColumn
frsUsnReads = _FrsUsnReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 89),
    _FrsUsnReads_Type()
)
frsUsnReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsUsnReads.setStatus("current")
_FrsUsnRecordsAccepted_Type = Gauge32
_FrsUsnRecordsAccepted_Object = MibTableColumn
frsUsnRecordsAccepted = _FrsUsnRecordsAccepted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 90),
    _FrsUsnRecordsAccepted_Type()
)
frsUsnRecordsAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsUsnRecordsAccepted.setStatus("current")
_FrsUsnRecordsExamined_Type = Gauge32
_FrsUsnRecordsExamined_Object = MibTableColumn
frsUsnRecordsExamined = _FrsUsnRecordsExamined_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 91),
    _FrsUsnRecordsExamined_Type()
)
frsUsnRecordsExamined.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsUsnRecordsExamined.setStatus("current")
_FrsUsnRecordsRejected_Type = Gauge32
_FrsUsnRecordsRejected_Object = MibTableColumn
frsUsnRecordsRejected = _FrsUsnRecordsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 92),
    _FrsUsnRecordsRejected_Type()
)
frsUsnRecordsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frsUsnRecordsRejected.setStatus("current")
_FtpServiceTable_Object = MibTable
ftpServiceTable = _FtpServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23)
)
if mibBuilder.loadTexts:
    ftpServiceTable.setStatus("current")
_FtpServiceEntry_Object = MibTableRow
ftpServiceEntry = _FtpServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1)
)
ftpServiceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ftpSvcInstance"),
)
if mibBuilder.loadTexts:
    ftpServiceEntry.setStatus("current")
_FtpSvcInstance_Type = InstanceName
_FtpSvcInstance_Object = MibTableColumn
ftpSvcInstance = _FtpSvcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 1),
    _FtpSvcInstance_Type()
)
ftpSvcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcInstance.setStatus("current")
_FtpSvcBytesReceivedPerSec_Type = Gauge32
_FtpSvcBytesReceivedPerSec_Object = MibTableColumn
ftpSvcBytesReceivedPerSec = _FtpSvcBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 2),
    _FtpSvcBytesReceivedPerSec_Type()
)
ftpSvcBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcBytesReceivedPerSec.setStatus("current")
_FtpSvcBytesSentPerSec_Type = Gauge32
_FtpSvcBytesSentPerSec_Object = MibTableColumn
ftpSvcBytesSentPerSec = _FtpSvcBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 3),
    _FtpSvcBytesSentPerSec_Type()
)
ftpSvcBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcBytesSentPerSec.setStatus("current")
_FtpSvcBytesTotalPerSec_Type = Gauge32
_FtpSvcBytesTotalPerSec_Object = MibTableColumn
ftpSvcBytesTotalPerSec = _FtpSvcBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 4),
    _FtpSvcBytesTotalPerSec_Type()
)
ftpSvcBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcBytesTotalPerSec.setStatus("current")
_FtpSvcCurrentAnonymousUsers_Type = Gauge32
_FtpSvcCurrentAnonymousUsers_Object = MibTableColumn
ftpSvcCurrentAnonymousUsers = _FtpSvcCurrentAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 5),
    _FtpSvcCurrentAnonymousUsers_Type()
)
ftpSvcCurrentAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcCurrentAnonymousUsers.setStatus("current")
_FtpSvcCurrentConnections_Type = Gauge32
_FtpSvcCurrentConnections_Object = MibTableColumn
ftpSvcCurrentConnections = _FtpSvcCurrentConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 6),
    _FtpSvcCurrentConnections_Type()
)
ftpSvcCurrentConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcCurrentConnections.setStatus("current")
_FtpSvcCurrentNonAnonymousUsers_Type = Gauge32
_FtpSvcCurrentNonAnonymousUsers_Object = MibTableColumn
ftpSvcCurrentNonAnonymousUsers = _FtpSvcCurrentNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 7),
    _FtpSvcCurrentNonAnonymousUsers_Type()
)
ftpSvcCurrentNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcCurrentNonAnonymousUsers.setStatus("current")
_FtpSvcFTPServiceUptime_Type = Gauge32
_FtpSvcFTPServiceUptime_Object = MibTableColumn
ftpSvcFTPServiceUptime = _FtpSvcFTPServiceUptime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 8),
    _FtpSvcFTPServiceUptime_Type()
)
ftpSvcFTPServiceUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcFTPServiceUptime.setStatus("current")
_FtpSvcMaximumAnonymousUsers_Type = Gauge32
_FtpSvcMaximumAnonymousUsers_Object = MibTableColumn
ftpSvcMaximumAnonymousUsers = _FtpSvcMaximumAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 9),
    _FtpSvcMaximumAnonymousUsers_Type()
)
ftpSvcMaximumAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcMaximumAnonymousUsers.setStatus("current")
_FtpSvcMaximumConnections_Type = Gauge32
_FtpSvcMaximumConnections_Object = MibTableColumn
ftpSvcMaximumConnections = _FtpSvcMaximumConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 10),
    _FtpSvcMaximumConnections_Type()
)
ftpSvcMaximumConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcMaximumConnections.setStatus("current")
_FtpSvcMaximumNonAnonymousUsers_Type = Gauge32
_FtpSvcMaximumNonAnonymousUsers_Object = MibTableColumn
ftpSvcMaximumNonAnonymousUsers = _FtpSvcMaximumNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 11),
    _FtpSvcMaximumNonAnonymousUsers_Type()
)
ftpSvcMaximumNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcMaximumNonAnonymousUsers.setStatus("current")
_FtpSvcTotalAnonymousUsers_Type = Gauge32
_FtpSvcTotalAnonymousUsers_Object = MibTableColumn
ftpSvcTotalAnonymousUsers = _FtpSvcTotalAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 12),
    _FtpSvcTotalAnonymousUsers_Type()
)
ftpSvcTotalAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalAnonymousUsers.setStatus("current")
_FtpSvcTotalConnAttemptsAllInst_Type = Gauge32
_FtpSvcTotalConnAttemptsAllInst_Object = MibTableColumn
ftpSvcTotalConnAttemptsAllInst = _FtpSvcTotalConnAttemptsAllInst_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 13),
    _FtpSvcTotalConnAttemptsAllInst_Type()
)
ftpSvcTotalConnAttemptsAllInst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalConnAttemptsAllInst.setStatus("current")
_FtpSvcTotalFilesReceived_Type = Gauge32
_FtpSvcTotalFilesReceived_Object = MibTableColumn
ftpSvcTotalFilesReceived = _FtpSvcTotalFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 14),
    _FtpSvcTotalFilesReceived_Type()
)
ftpSvcTotalFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalFilesReceived.setStatus("current")
_FtpSvcTotalFilesSent_Type = Gauge32
_FtpSvcTotalFilesSent_Object = MibTableColumn
ftpSvcTotalFilesSent = _FtpSvcTotalFilesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 15),
    _FtpSvcTotalFilesSent_Type()
)
ftpSvcTotalFilesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalFilesSent.setStatus("current")
_FtpSvcTotalFilesTransferred_Type = Gauge32
_FtpSvcTotalFilesTransferred_Object = MibTableColumn
ftpSvcTotalFilesTransferred = _FtpSvcTotalFilesTransferred_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 16),
    _FtpSvcTotalFilesTransferred_Type()
)
ftpSvcTotalFilesTransferred.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalFilesTransferred.setStatus("current")
_FtpSvcTotalLogonAttempts_Type = Gauge32
_FtpSvcTotalLogonAttempts_Object = MibTableColumn
ftpSvcTotalLogonAttempts = _FtpSvcTotalLogonAttempts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 17),
    _FtpSvcTotalLogonAttempts_Type()
)
ftpSvcTotalLogonAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalLogonAttempts.setStatus("current")
_FtpSvcTotalNonAnonymousUsers_Type = Gauge32
_FtpSvcTotalNonAnonymousUsers_Object = MibTableColumn
ftpSvcTotalNonAnonymousUsers = _FtpSvcTotalNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 18),
    _FtpSvcTotalNonAnonymousUsers_Type()
)
ftpSvcTotalNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSvcTotalNonAnonymousUsers.setStatus("current")
_GatewayServiceForNetWare_ObjectIdentity = ObjectIdentity
gatewayServiceForNetWare = _GatewayServiceForNetWare_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24)
)
if mibBuilder.loadTexts:
    gatewayServiceForNetWare.setStatus("current")
_NwBytesReceivedPerSec_Type = Gauge32
_NwBytesReceivedPerSec_Object = MibScalar
nwBytesReceivedPerSec = _NwBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 1),
    _NwBytesReceivedPerSec_Type()
)
nwBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwBytesReceivedPerSec.setStatus("current")
_NwBytesTotalPerSec_Type = Gauge32
_NwBytesTotalPerSec_Object = MibScalar
nwBytesTotalPerSec = _NwBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 2),
    _NwBytesTotalPerSec_Type()
)
nwBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwBytesTotalPerSec.setStatus("current")
_NwBytesTransmittedPerSec_Type = Gauge32
_NwBytesTransmittedPerSec_Object = MibScalar
nwBytesTransmittedPerSec = _NwBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 3),
    _NwBytesTransmittedPerSec_Type()
)
nwBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwBytesTransmittedPerSec.setStatus("current")
_NwConnectNetWare2X_Type = Gauge32
_NwConnectNetWare2X_Object = MibScalar
nwConnectNetWare2X = _NwConnectNetWare2X_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 4),
    _NwConnectNetWare2X_Type()
)
nwConnectNetWare2X.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwConnectNetWare2X.setStatus("current")
_NwConnectNetWare3X_Type = Gauge32
_NwConnectNetWare3X_Object = MibScalar
nwConnectNetWare3X = _NwConnectNetWare3X_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 5),
    _NwConnectNetWare3X_Type()
)
nwConnectNetWare3X.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwConnectNetWare3X.setStatus("current")
_NwConnectNetWare4X_Type = Gauge32
_NwConnectNetWare4X_Object = MibScalar
nwConnectNetWare4X = _NwConnectNetWare4X_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 6),
    _NwConnectNetWare4X_Type()
)
nwConnectNetWare4X.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwConnectNetWare4X.setStatus("current")
_NwFileDataOperationsPerSec_Type = Gauge32
_NwFileDataOperationsPerSec_Object = MibScalar
nwFileDataOperationsPerSec = _NwFileDataOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 7),
    _NwFileDataOperationsPerSec_Type()
)
nwFileDataOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwFileDataOperationsPerSec.setStatus("current")
_NwFileReadOperationsPerSec_Type = Gauge32
_NwFileReadOperationsPerSec_Object = MibScalar
nwFileReadOperationsPerSec = _NwFileReadOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 8),
    _NwFileReadOperationsPerSec_Type()
)
nwFileReadOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwFileReadOperationsPerSec.setStatus("current")
_NwFileWriteOperationsPerSec_Type = Gauge32
_NwFileWriteOperationsPerSec_Object = MibScalar
nwFileWriteOperationsPerSec = _NwFileWriteOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 9),
    _NwFileWriteOperationsPerSec_Type()
)
nwFileWriteOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwFileWriteOperationsPerSec.setStatus("current")
_NwPacketBurstIOPerSec_Type = Gauge32
_NwPacketBurstIOPerSec_Object = MibScalar
nwPacketBurstIOPerSec = _NwPacketBurstIOPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 10),
    _NwPacketBurstIOPerSec_Type()
)
nwPacketBurstIOPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketBurstIOPerSec.setStatus("current")
_NwPacketBurstReadNCPCountPerSec_Type = Gauge32
_NwPacketBurstReadNCPCountPerSec_Object = MibScalar
nwPacketBurstReadNCPCountPerSec = _NwPacketBurstReadNCPCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 11),
    _NwPacketBurstReadNCPCountPerSec_Type()
)
nwPacketBurstReadNCPCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketBurstReadNCPCountPerSec.setStatus("current")
_NwPacketBurstReadTimeoutsPerSec_Type = Gauge32
_NwPacketBurstReadTimeoutsPerSec_Object = MibScalar
nwPacketBurstReadTimeoutsPerSec = _NwPacketBurstReadTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 12),
    _NwPacketBurstReadTimeoutsPerSec_Type()
)
nwPacketBurstReadTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketBurstReadTimeoutsPerSec.setStatus("current")
_NwPacketBurstWriteNCPCountPerSec_Type = Gauge32
_NwPacketBurstWriteNCPCountPerSec_Object = MibScalar
nwPacketBurstWriteNCPCountPerSec = _NwPacketBurstWriteNCPCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 13),
    _NwPacketBurstWriteNCPCountPerSec_Type()
)
nwPacketBurstWriteNCPCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketBurstWriteNCPCountPerSec.setStatus("current")
_NwPacketBurstWriteTimeoutsPerSec_Type = Gauge32
_NwPacketBurstWriteTimeoutsPerSec_Object = MibScalar
nwPacketBurstWriteTimeoutsPerSec = _NwPacketBurstWriteTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 14),
    _NwPacketBurstWriteTimeoutsPerSec_Type()
)
nwPacketBurstWriteTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketBurstWriteTimeoutsPerSec.setStatus("current")
_NwPacketsReceivedPerSec_Type = Gauge32
_NwPacketsReceivedPerSec_Object = MibScalar
nwPacketsReceivedPerSec = _NwPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 15),
    _NwPacketsReceivedPerSec_Type()
)
nwPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketsReceivedPerSec.setStatus("current")
_NwPacketsTransmittedPerSec_Type = Gauge32
_NwPacketsTransmittedPerSec_Object = MibScalar
nwPacketsTransmittedPerSec = _NwPacketsTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 16),
    _NwPacketsTransmittedPerSec_Type()
)
nwPacketsTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketsTransmittedPerSec.setStatus("current")
_NwPacketsPerSec_Type = Gauge32
_NwPacketsPerSec_Object = MibScalar
nwPacketsPerSec = _NwPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 17),
    _NwPacketsPerSec_Type()
)
nwPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwPacketsPerSec.setStatus("current")
_NwReadOperationsRandomPerSec_Type = Gauge32
_NwReadOperationsRandomPerSec_Object = MibScalar
nwReadOperationsRandomPerSec = _NwReadOperationsRandomPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 18),
    _NwReadOperationsRandomPerSec_Type()
)
nwReadOperationsRandomPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwReadOperationsRandomPerSec.setStatus("current")
_NwReadPacketsPerSec_Type = Gauge32
_NwReadPacketsPerSec_Object = MibScalar
nwReadPacketsPerSec = _NwReadPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 19),
    _NwReadPacketsPerSec_Type()
)
nwReadPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwReadPacketsPerSec.setStatus("current")
_NwServerDisconnects_Type = Gauge32
_NwServerDisconnects_Object = MibScalar
nwServerDisconnects = _NwServerDisconnects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 20),
    _NwServerDisconnects_Type()
)
nwServerDisconnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwServerDisconnects.setStatus("current")
_NwServerReconnects_Type = Gauge32
_NwServerReconnects_Object = MibScalar
nwServerReconnects = _NwServerReconnects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 21),
    _NwServerReconnects_Type()
)
nwServerReconnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwServerReconnects.setStatus("current")
_NwServerSessions_Type = Gauge32
_NwServerSessions_Object = MibScalar
nwServerSessions = _NwServerSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 22),
    _NwServerSessions_Type()
)
nwServerSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwServerSessions.setStatus("current")
_NwWriteOperationsRandomPerSec_Type = Gauge32
_NwWriteOperationsRandomPerSec_Object = MibScalar
nwWriteOperationsRandomPerSec = _NwWriteOperationsRandomPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 23),
    _NwWriteOperationsRandomPerSec_Type()
)
nwWriteOperationsRandomPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwWriteOperationsRandomPerSec.setStatus("current")
_NwWritePacketsPerSec_Type = Gauge32
_NwWritePacketsPerSec_Object = MibScalar
nwWritePacketsPerSec = _NwWritePacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 24),
    _NwWritePacketsPerSec_Type()
)
nwWritePacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nwWritePacketsPerSec.setStatus("current")
_IasAccountingClientsTable_Object = MibTable
iasAccountingClientsTable = _IasAccountingClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25)
)
if mibBuilder.loadTexts:
    iasAccountingClientsTable.setStatus("current")
_IasAccountingClientsEntry_Object = MibTableRow
iasAccountingClientsEntry = _IasAccountingClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1)
)
iasAccountingClientsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "iccInstance"),
)
if mibBuilder.loadTexts:
    iasAccountingClientsEntry.setStatus("current")
_IccInstance_Type = InstanceName
_IccInstance_Object = MibTableColumn
iccInstance = _IccInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 1),
    _IccInstance_Type()
)
iccInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccInstance.setStatus("current")
_IccAccountingRequests_Type = Gauge32
_IccAccountingRequests_Object = MibTableColumn
iccAccountingRequests = _IccAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 2),
    _IccAccountingRequests_Type()
)
iccAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccAccountingRequests.setStatus("current")
_IccAccountingRequestsPerSec_Type = Gauge32
_IccAccountingRequestsPerSec_Object = MibTableColumn
iccAccountingRequestsPerSec = _IccAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 3),
    _IccAccountingRequestsPerSec_Type()
)
iccAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccAccountingRequestsPerSec.setStatus("current")
_IccAccountingResponses_Type = Gauge32
_IccAccountingResponses_Object = MibTableColumn
iccAccountingResponses = _IccAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 4),
    _IccAccountingResponses_Type()
)
iccAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccAccountingResponses.setStatus("current")
_IccAccountingResponsesPerSec_Type = Gauge32
_IccAccountingResponsesPerSec_Object = MibTableColumn
iccAccountingResponsesPerSec = _IccAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 5),
    _IccAccountingResponsesPerSec_Type()
)
iccAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccAccountingResponsesPerSec.setStatus("current")
_IccBadAuthenticators_Type = Gauge32
_IccBadAuthenticators_Object = MibTableColumn
iccBadAuthenticators = _IccBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 6),
    _IccBadAuthenticators_Type()
)
iccBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccBadAuthenticators.setStatus("current")
_IccBadAuthenticatorsPerSec_Type = Gauge32
_IccBadAuthenticatorsPerSec_Object = MibTableColumn
iccBadAuthenticatorsPerSec = _IccBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 7),
    _IccBadAuthenticatorsPerSec_Type()
)
iccBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccBadAuthenticatorsPerSec.setStatus("current")
_IccDroppedPackets_Type = Gauge32
_IccDroppedPackets_Object = MibTableColumn
iccDroppedPackets = _IccDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 8),
    _IccDroppedPackets_Type()
)
iccDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccDroppedPackets.setStatus("current")
_IccDroppedPacketsPerSec_Type = Gauge32
_IccDroppedPacketsPerSec_Object = MibTableColumn
iccDroppedPacketsPerSec = _IccDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 9),
    _IccDroppedPacketsPerSec_Type()
)
iccDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccDroppedPacketsPerSec.setStatus("current")
_IccDuplicateAccountingRequests_Type = Gauge32
_IccDuplicateAccountingRequests_Object = MibTableColumn
iccDuplicateAccountingRequests = _IccDuplicateAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 10),
    _IccDuplicateAccountingRequests_Type()
)
iccDuplicateAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccDuplicateAccountingRequests.setStatus("current")
_IccDuplicateAccountingRqstPerSec_Type = Gauge32
_IccDuplicateAccountingRqstPerSec_Object = MibTableColumn
iccDuplicateAccountingRqstPerSec = _IccDuplicateAccountingRqstPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 11),
    _IccDuplicateAccountingRqstPerSec_Type()
)
iccDuplicateAccountingRqstPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccDuplicateAccountingRqstPerSec.setStatus("current")
_IccMalformedPackets_Type = Gauge32
_IccMalformedPackets_Object = MibTableColumn
iccMalformedPackets = _IccMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 12),
    _IccMalformedPackets_Type()
)
iccMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccMalformedPackets.setStatus("current")
_IccMalformedPacketsPerSec_Type = Gauge32
_IccMalformedPacketsPerSec_Object = MibTableColumn
iccMalformedPacketsPerSec = _IccMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 13),
    _IccMalformedPacketsPerSec_Type()
)
iccMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccMalformedPacketsPerSec.setStatus("current")
_IccNoRecord_Type = Gauge32
_IccNoRecord_Object = MibTableColumn
iccNoRecord = _IccNoRecord_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 14),
    _IccNoRecord_Type()
)
iccNoRecord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccNoRecord.setStatus("current")
_IccNoRecordPerSec_Type = Gauge32
_IccNoRecordPerSec_Object = MibTableColumn
iccNoRecordPerSec = _IccNoRecordPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 15),
    _IccNoRecordPerSec_Type()
)
iccNoRecordPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccNoRecordPerSec.setStatus("current")
_IccPacketsReceived_Type = Gauge32
_IccPacketsReceived_Object = MibTableColumn
iccPacketsReceived = _IccPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 16),
    _IccPacketsReceived_Type()
)
iccPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccPacketsReceived.setStatus("current")
_IccPacketsReceivedPerSec_Type = Gauge32
_IccPacketsReceivedPerSec_Object = MibTableColumn
iccPacketsReceivedPerSec = _IccPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 17),
    _IccPacketsReceivedPerSec_Type()
)
iccPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccPacketsReceivedPerSec.setStatus("current")
_IccPacketsSent_Type = Gauge32
_IccPacketsSent_Object = MibTableColumn
iccPacketsSent = _IccPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 18),
    _IccPacketsSent_Type()
)
iccPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccPacketsSent.setStatus("current")
_IccPacketsSentPerSec_Type = Gauge32
_IccPacketsSentPerSec_Object = MibTableColumn
iccPacketsSentPerSec = _IccPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 19),
    _IccPacketsSentPerSec_Type()
)
iccPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccPacketsSentPerSec.setStatus("current")
_IccUnknownType_Type = Gauge32
_IccUnknownType_Object = MibTableColumn
iccUnknownType = _IccUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 20),
    _IccUnknownType_Type()
)
iccUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccUnknownType.setStatus("current")
_IccUnknownTypePerSec_Type = Gauge32
_IccUnknownTypePerSec_Object = MibTableColumn
iccUnknownTypePerSec = _IccUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 21),
    _IccUnknownTypePerSec_Type()
)
iccUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iccUnknownTypePerSec.setStatus("current")
_IasAccountingProxy_ObjectIdentity = ObjectIdentity
iasAccountingProxy = _IasAccountingProxy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26)
)
_IcpAccountingRequests_Type = Gauge32
_IcpAccountingRequests_Object = MibScalar
icpAccountingRequests = _IcpAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 1),
    _IcpAccountingRequests_Type()
)
icpAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpAccountingRequests.setStatus("current")
_IcpAccountingRequestsPerSec_Type = Gauge32
_IcpAccountingRequestsPerSec_Object = MibScalar
icpAccountingRequestsPerSec = _IcpAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 2),
    _IcpAccountingRequestsPerSec_Type()
)
icpAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpAccountingRequestsPerSec.setStatus("current")
_IcpAccountingResponses_Type = Gauge32
_IcpAccountingResponses_Object = MibScalar
icpAccountingResponses = _IcpAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 3),
    _IcpAccountingResponses_Type()
)
icpAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpAccountingResponses.setStatus("current")
_IcpAccountingResponsesPerSec_Type = Gauge32
_IcpAccountingResponsesPerSec_Object = MibScalar
icpAccountingResponsesPerSec = _IcpAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 4),
    _IcpAccountingResponsesPerSec_Type()
)
icpAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpAccountingResponsesPerSec.setStatus("current")
_IcpBadAuthenticators_Type = Gauge32
_IcpBadAuthenticators_Object = MibScalar
icpBadAuthenticators = _IcpBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 5),
    _IcpBadAuthenticators_Type()
)
icpBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpBadAuthenticators.setStatus("current")
_IcpBadAuthenticatorsPerSec_Type = Gauge32
_IcpBadAuthenticatorsPerSec_Object = MibScalar
icpBadAuthenticatorsPerSec = _IcpBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 6),
    _IcpBadAuthenticatorsPerSec_Type()
)
icpBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpBadAuthenticatorsPerSec.setStatus("current")
_IcpDroppedPackets_Type = Gauge32
_IcpDroppedPackets_Object = MibScalar
icpDroppedPackets = _IcpDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 7),
    _IcpDroppedPackets_Type()
)
icpDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpDroppedPackets.setStatus("current")
_IcpDroppedPacketsPerSec_Type = Gauge32
_IcpDroppedPacketsPerSec_Object = MibScalar
icpDroppedPacketsPerSec = _IcpDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 8),
    _IcpDroppedPacketsPerSec_Type()
)
icpDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpDroppedPacketsPerSec.setStatus("current")
_IcpInvalidAddresses_Type = Gauge32
_IcpInvalidAddresses_Object = MibScalar
icpInvalidAddresses = _IcpInvalidAddresses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 9),
    _IcpInvalidAddresses_Type()
)
icpInvalidAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpInvalidAddresses.setStatus("current")
_IcpInvalidAddressesPerSec_Type = Gauge32
_IcpInvalidAddressesPerSec_Object = MibScalar
icpInvalidAddressesPerSec = _IcpInvalidAddressesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 10),
    _IcpInvalidAddressesPerSec_Type()
)
icpInvalidAddressesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpInvalidAddressesPerSec.setStatus("current")
_IcpMalformedPackets_Type = Gauge32
_IcpMalformedPackets_Object = MibScalar
icpMalformedPackets = _IcpMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 11),
    _IcpMalformedPackets_Type()
)
icpMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpMalformedPackets.setStatus("current")
_IcpMalformedPacketsPerSec_Type = Gauge32
_IcpMalformedPacketsPerSec_Object = MibScalar
icpMalformedPacketsPerSec = _IcpMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 12),
    _IcpMalformedPacketsPerSec_Type()
)
icpMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpMalformedPacketsPerSec.setStatus("current")
_IcpPacketsReceived_Type = Gauge32
_IcpPacketsReceived_Object = MibScalar
icpPacketsReceived = _IcpPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 13),
    _IcpPacketsReceived_Type()
)
icpPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpPacketsReceived.setStatus("current")
_IcpPacketsReceivedPerSec_Type = Gauge32
_IcpPacketsReceivedPerSec_Object = MibScalar
icpPacketsReceivedPerSec = _IcpPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 14),
    _IcpPacketsReceivedPerSec_Type()
)
icpPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpPacketsReceivedPerSec.setStatus("current")
_IcpPendingRequests_Type = Gauge32
_IcpPendingRequests_Object = MibScalar
icpPendingRequests = _IcpPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 15),
    _IcpPendingRequests_Type()
)
icpPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpPendingRequests.setStatus("current")
_IcpRequestTimeouts_Type = Gauge32
_IcpRequestTimeouts_Object = MibScalar
icpRequestTimeouts = _IcpRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 16),
    _IcpRequestTimeouts_Type()
)
icpRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpRequestTimeouts.setStatus("current")
_IcpRequestTimeoutsPerSec_Type = Gauge32
_IcpRequestTimeoutsPerSec_Object = MibScalar
icpRequestTimeoutsPerSec = _IcpRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 17),
    _IcpRequestTimeoutsPerSec_Type()
)
icpRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpRequestTimeoutsPerSec.setStatus("current")
_IcpRetransmissions_Type = Gauge32
_IcpRetransmissions_Object = MibScalar
icpRetransmissions = _IcpRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 18),
    _IcpRetransmissions_Type()
)
icpRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpRetransmissions.setStatus("current")
_IcpRetransmissionsPerSec_Type = Gauge32
_IcpRetransmissionsPerSec_Object = MibScalar
icpRetransmissionsPerSec = _IcpRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 19),
    _IcpRetransmissionsPerSec_Type()
)
icpRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpRetransmissionsPerSec.setStatus("current")
_IcpUnknownType_Type = Gauge32
_IcpUnknownType_Object = MibScalar
icpUnknownType = _IcpUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 20),
    _IcpUnknownType_Type()
)
icpUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpUnknownType.setStatus("current")
_IcpUnknownTypePerSec_Type = Gauge32
_IcpUnknownTypePerSec_Object = MibScalar
icpUnknownTypePerSec = _IcpUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 21),
    _IcpUnknownTypePerSec_Type()
)
icpUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icpUnknownTypePerSec.setStatus("current")
_IasAccountingServer_ObjectIdentity = ObjectIdentity
iasAccountingServer = _IasAccountingServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27)
)
if mibBuilder.loadTexts:
    iasAccountingServer.setStatus("current")
_IcsAccountingRequests_Type = Gauge32
_IcsAccountingRequests_Object = MibScalar
icsAccountingRequests = _IcsAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 1),
    _IcsAccountingRequests_Type()
)
icsAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsAccountingRequests.setStatus("current")
_IcsAccountingRequestsPerSec_Type = Gauge32
_IcsAccountingRequestsPerSec_Object = MibScalar
icsAccountingRequestsPerSec = _IcsAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 2),
    _IcsAccountingRequestsPerSec_Type()
)
icsAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsAccountingRequestsPerSec.setStatus("current")
_IcsAccountingResponses_Type = Gauge32
_IcsAccountingResponses_Object = MibScalar
icsAccountingResponses = _IcsAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 3),
    _IcsAccountingResponses_Type()
)
icsAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsAccountingResponses.setStatus("current")
_IcsAccountingResponsesPerSec_Type = Gauge32
_IcsAccountingResponsesPerSec_Object = MibScalar
icsAccountingResponsesPerSec = _IcsAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 4),
    _IcsAccountingResponsesPerSec_Type()
)
icsAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsAccountingResponsesPerSec.setStatus("current")
_IcsBadAuthenticators_Type = Gauge32
_IcsBadAuthenticators_Object = MibScalar
icsBadAuthenticators = _IcsBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 5),
    _IcsBadAuthenticators_Type()
)
icsBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsBadAuthenticators.setStatus("current")
_IcsBadAuthenticatorsPerSec_Type = Gauge32
_IcsBadAuthenticatorsPerSec_Object = MibScalar
icsBadAuthenticatorsPerSec = _IcsBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 6),
    _IcsBadAuthenticatorsPerSec_Type()
)
icsBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsBadAuthenticatorsPerSec.setStatus("current")
_IcsDroppedPackets_Type = Gauge32
_IcsDroppedPackets_Object = MibScalar
icsDroppedPackets = _IcsDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 7),
    _IcsDroppedPackets_Type()
)
icsDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsDroppedPackets.setStatus("current")
_IcsDroppedPacketsPerSec_Type = Gauge32
_IcsDroppedPacketsPerSec_Object = MibScalar
icsDroppedPacketsPerSec = _IcsDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 8),
    _IcsDroppedPacketsPerSec_Type()
)
icsDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsDroppedPacketsPerSec.setStatus("current")
_IcsDuplicateAccountingRequests_Type = Gauge32
_IcsDuplicateAccountingRequests_Object = MibScalar
icsDuplicateAccountingRequests = _IcsDuplicateAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 9),
    _IcsDuplicateAccountingRequests_Type()
)
icsDuplicateAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsDuplicateAccountingRequests.setStatus("current")
_IcsDuplicateAccountingRqstPerSec_Type = Gauge32
_IcsDuplicateAccountingRqstPerSec_Object = MibScalar
icsDuplicateAccountingRqstPerSec = _IcsDuplicateAccountingRqstPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 10),
    _IcsDuplicateAccountingRqstPerSec_Type()
)
icsDuplicateAccountingRqstPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsDuplicateAccountingRqstPerSec.setStatus("current")
_IcsInvalidRequests_Type = Gauge32
_IcsInvalidRequests_Object = MibScalar
icsInvalidRequests = _IcsInvalidRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 11),
    _IcsInvalidRequests_Type()
)
icsInvalidRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsInvalidRequests.setStatus("current")
_IcsInvalidRequestsPerSec_Type = Gauge32
_IcsInvalidRequestsPerSec_Object = MibScalar
icsInvalidRequestsPerSec = _IcsInvalidRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 12),
    _IcsInvalidRequestsPerSec_Type()
)
icsInvalidRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsInvalidRequestsPerSec.setStatus("current")
_IcsMalformedPackets_Type = Gauge32
_IcsMalformedPackets_Object = MibScalar
icsMalformedPackets = _IcsMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 13),
    _IcsMalformedPackets_Type()
)
icsMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsMalformedPackets.setStatus("current")
_IcsMalformedPacketsPerSec_Type = Gauge32
_IcsMalformedPacketsPerSec_Object = MibScalar
icsMalformedPacketsPerSec = _IcsMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 14),
    _IcsMalformedPacketsPerSec_Type()
)
icsMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsMalformedPacketsPerSec.setStatus("current")
_IcsNoRecord_Type = Gauge32
_IcsNoRecord_Object = MibScalar
icsNoRecord = _IcsNoRecord_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 15),
    _IcsNoRecord_Type()
)
icsNoRecord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsNoRecord.setStatus("current")
_IcsNoRecordPerSec_Type = Gauge32
_IcsNoRecordPerSec_Object = MibScalar
icsNoRecordPerSec = _IcsNoRecordPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 16),
    _IcsNoRecordPerSec_Type()
)
icsNoRecordPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsNoRecordPerSec.setStatus("current")
_IcsPacketsReceived_Type = Gauge32
_IcsPacketsReceived_Object = MibScalar
icsPacketsReceived = _IcsPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 17),
    _IcsPacketsReceived_Type()
)
icsPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsPacketsReceived.setStatus("current")
_IcsPacketsReceivedPerSec_Type = Gauge32
_IcsPacketsReceivedPerSec_Object = MibScalar
icsPacketsReceivedPerSec = _IcsPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 18),
    _IcsPacketsReceivedPerSec_Type()
)
icsPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsPacketsReceivedPerSec.setStatus("current")
_IcsPacketsSent_Type = Gauge32
_IcsPacketsSent_Object = MibScalar
icsPacketsSent = _IcsPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 19),
    _IcsPacketsSent_Type()
)
icsPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsPacketsSent.setStatus("current")
_IcsPacketsSentPerSec_Type = Gauge32
_IcsPacketsSentPerSec_Object = MibScalar
icsPacketsSentPerSec = _IcsPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 20),
    _IcsPacketsSentPerSec_Type()
)
icsPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsPacketsSentPerSec.setStatus("current")
_IcsServerResetTime_Type = Gauge32
_IcsServerResetTime_Object = MibScalar
icsServerResetTime = _IcsServerResetTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 21),
    _IcsServerResetTime_Type()
)
icsServerResetTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsServerResetTime.setStatus("current")
_IcsServerUpTime_Type = Gauge32
_IcsServerUpTime_Object = MibScalar
icsServerUpTime = _IcsServerUpTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 22),
    _IcsServerUpTime_Type()
)
icsServerUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsServerUpTime.setStatus("current")
_IcsUnknownType_Type = Gauge32
_IcsUnknownType_Object = MibScalar
icsUnknownType = _IcsUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 23),
    _IcsUnknownType_Type()
)
icsUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsUnknownType.setStatus("current")
_IcsUnknownTypePerSec_Type = Gauge32
_IcsUnknownTypePerSec_Object = MibScalar
icsUnknownTypePerSec = _IcsUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 24),
    _IcsUnknownTypePerSec_Type()
)
icsUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icsUnknownTypePerSec.setStatus("current")
_IasAuthenticationClientsTable_Object = MibTable
iasAuthenticationClientsTable = _IasAuthenticationClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28)
)
if mibBuilder.loadTexts:
    iasAuthenticationClientsTable.setStatus("current")
_IasAuthenticationClientsEntry_Object = MibTableRow
iasAuthenticationClientsEntry = _IasAuthenticationClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1)
)
iasAuthenticationClientsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "iucInstance"),
)
if mibBuilder.loadTexts:
    iasAuthenticationClientsEntry.setStatus("current")
_IucInstance_Type = InstanceName
_IucInstance_Object = MibTableColumn
iucInstance = _IucInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 1),
    _IucInstance_Type()
)
iucInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucInstance.setStatus("current")
_IucAccessAccepts_Type = Gauge32
_IucAccessAccepts_Object = MibTableColumn
iucAccessAccepts = _IucAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 2),
    _IucAccessAccepts_Type()
)
iucAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessAccepts.setStatus("current")
_IucAccessAcceptsPerSec_Type = Gauge32
_IucAccessAcceptsPerSec_Object = MibTableColumn
iucAccessAcceptsPerSec = _IucAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 3),
    _IucAccessAcceptsPerSec_Type()
)
iucAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessAcceptsPerSec.setStatus("current")
_IucAccessChallenges_Type = Gauge32
_IucAccessChallenges_Object = MibTableColumn
iucAccessChallenges = _IucAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 4),
    _IucAccessChallenges_Type()
)
iucAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessChallenges.setStatus("current")
_IucAccessChallengesPerSec_Type = Gauge32
_IucAccessChallengesPerSec_Object = MibTableColumn
iucAccessChallengesPerSec = _IucAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 5),
    _IucAccessChallengesPerSec_Type()
)
iucAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessChallengesPerSec.setStatus("current")
_IucAccessRejects_Type = Gauge32
_IucAccessRejects_Object = MibTableColumn
iucAccessRejects = _IucAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 6),
    _IucAccessRejects_Type()
)
iucAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessRejects.setStatus("current")
_IucAccessRejectsPerSec_Type = Gauge32
_IucAccessRejectsPerSec_Object = MibTableColumn
iucAccessRejectsPerSec = _IucAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 7),
    _IucAccessRejectsPerSec_Type()
)
iucAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessRejectsPerSec.setStatus("current")
_IucAccessRequests_Type = Gauge32
_IucAccessRequests_Object = MibTableColumn
iucAccessRequests = _IucAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 8),
    _IucAccessRequests_Type()
)
iucAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessRequests.setStatus("current")
_IucAccessRequestsPerSec_Type = Gauge32
_IucAccessRequestsPerSec_Object = MibTableColumn
iucAccessRequestsPerSec = _IucAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 9),
    _IucAccessRequestsPerSec_Type()
)
iucAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucAccessRequestsPerSec.setStatus("current")
_IucBadAuthenticators_Type = Gauge32
_IucBadAuthenticators_Object = MibTableColumn
iucBadAuthenticators = _IucBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 10),
    _IucBadAuthenticators_Type()
)
iucBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucBadAuthenticators.setStatus("current")
_IucBadAuthenticatorsPerSec_Type = Gauge32
_IucBadAuthenticatorsPerSec_Object = MibTableColumn
iucBadAuthenticatorsPerSec = _IucBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 11),
    _IucBadAuthenticatorsPerSec_Type()
)
iucBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucBadAuthenticatorsPerSec.setStatus("current")
_IucDroppedPackets_Type = Gauge32
_IucDroppedPackets_Object = MibTableColumn
iucDroppedPackets = _IucDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 12),
    _IucDroppedPackets_Type()
)
iucDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucDroppedPackets.setStatus("current")
_IucDroppedPacketsPerSec_Type = Gauge32
_IucDroppedPacketsPerSec_Object = MibTableColumn
iucDroppedPacketsPerSec = _IucDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 13),
    _IucDroppedPacketsPerSec_Type()
)
iucDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucDroppedPacketsPerSec.setStatus("current")
_IucDuplicateAccessRequests_Type = Gauge32
_IucDuplicateAccessRequests_Object = MibTableColumn
iucDuplicateAccessRequests = _IucDuplicateAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 14),
    _IucDuplicateAccessRequests_Type()
)
iucDuplicateAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucDuplicateAccessRequests.setStatus("current")
_IucDuplicateAccessRequestsPerSec_Type = Gauge32
_IucDuplicateAccessRequestsPerSec_Object = MibTableColumn
iucDuplicateAccessRequestsPerSec = _IucDuplicateAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 15),
    _IucDuplicateAccessRequestsPerSec_Type()
)
iucDuplicateAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucDuplicateAccessRequestsPerSec.setStatus("current")
_IucMalformedPackets_Type = Gauge32
_IucMalformedPackets_Object = MibTableColumn
iucMalformedPackets = _IucMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 16),
    _IucMalformedPackets_Type()
)
iucMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucMalformedPackets.setStatus("current")
_IucMalformedPacketsPerSec_Type = Gauge32
_IucMalformedPacketsPerSec_Object = MibTableColumn
iucMalformedPacketsPerSec = _IucMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 17),
    _IucMalformedPacketsPerSec_Type()
)
iucMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucMalformedPacketsPerSec.setStatus("current")
_IucPacketsReceived_Type = Gauge32
_IucPacketsReceived_Object = MibTableColumn
iucPacketsReceived = _IucPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 18),
    _IucPacketsReceived_Type()
)
iucPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucPacketsReceived.setStatus("current")
_IucPacketsReceivedPerSec_Type = Gauge32
_IucPacketsReceivedPerSec_Object = MibTableColumn
iucPacketsReceivedPerSec = _IucPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 19),
    _IucPacketsReceivedPerSec_Type()
)
iucPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucPacketsReceivedPerSec.setStatus("current")
_IucPacketsSent_Type = Gauge32
_IucPacketsSent_Object = MibTableColumn
iucPacketsSent = _IucPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 20),
    _IucPacketsSent_Type()
)
iucPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucPacketsSent.setStatus("current")
_IucPacketsSentPerSec_Type = Gauge32
_IucPacketsSentPerSec_Object = MibTableColumn
iucPacketsSentPerSec = _IucPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 21),
    _IucPacketsSentPerSec_Type()
)
iucPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucPacketsSentPerSec.setStatus("current")
_IucUnknownType_Type = Gauge32
_IucUnknownType_Object = MibTableColumn
iucUnknownType = _IucUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 22),
    _IucUnknownType_Type()
)
iucUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucUnknownType.setStatus("current")
_IucUnknownTypePerSec_Type = Gauge32
_IucUnknownTypePerSec_Object = MibTableColumn
iucUnknownTypePerSec = _IucUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 23),
    _IucUnknownTypePerSec_Type()
)
iucUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iucUnknownTypePerSec.setStatus("current")
_IasAuthenticationProxy_ObjectIdentity = ObjectIdentity
iasAuthenticationProxy = _IasAuthenticationProxy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29)
)
_IupAccessAccepts_Type = Gauge32
_IupAccessAccepts_Object = MibScalar
iupAccessAccepts = _IupAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 1),
    _IupAccessAccepts_Type()
)
iupAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessAccepts.setStatus("current")
_IupAccessAcceptsPerSec_Type = Gauge32
_IupAccessAcceptsPerSec_Object = MibScalar
iupAccessAcceptsPerSec = _IupAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 2),
    _IupAccessAcceptsPerSec_Type()
)
iupAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessAcceptsPerSec.setStatus("current")
_IupAccessChallenges_Type = Gauge32
_IupAccessChallenges_Object = MibScalar
iupAccessChallenges = _IupAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 3),
    _IupAccessChallenges_Type()
)
iupAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessChallenges.setStatus("current")
_IupAccessChallengesPerSec_Type = Gauge32
_IupAccessChallengesPerSec_Object = MibScalar
iupAccessChallengesPerSec = _IupAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 4),
    _IupAccessChallengesPerSec_Type()
)
iupAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessChallengesPerSec.setStatus("current")
_IupAccessRejects_Type = Gauge32
_IupAccessRejects_Object = MibScalar
iupAccessRejects = _IupAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 5),
    _IupAccessRejects_Type()
)
iupAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessRejects.setStatus("current")
_IupAccessRejectsPerSec_Type = Gauge32
_IupAccessRejectsPerSec_Object = MibScalar
iupAccessRejectsPerSec = _IupAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 6),
    _IupAccessRejectsPerSec_Type()
)
iupAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessRejectsPerSec.setStatus("current")
_IupAccessRequests_Type = Gauge32
_IupAccessRequests_Object = MibScalar
iupAccessRequests = _IupAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 7),
    _IupAccessRequests_Type()
)
iupAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessRequests.setStatus("current")
_IupAccessRequestsPerSec_Type = Gauge32
_IupAccessRequestsPerSec_Object = MibScalar
iupAccessRequestsPerSec = _IupAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 8),
    _IupAccessRequestsPerSec_Type()
)
iupAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupAccessRequestsPerSec.setStatus("current")
_IupBadAuthenticators_Type = Gauge32
_IupBadAuthenticators_Object = MibScalar
iupBadAuthenticators = _IupBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 9),
    _IupBadAuthenticators_Type()
)
iupBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupBadAuthenticators.setStatus("current")
_IupBadAuthenticatorsPerSec_Type = Gauge32
_IupBadAuthenticatorsPerSec_Object = MibScalar
iupBadAuthenticatorsPerSec = _IupBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 10),
    _IupBadAuthenticatorsPerSec_Type()
)
iupBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupBadAuthenticatorsPerSec.setStatus("current")
_IupDroppedPackets_Type = Gauge32
_IupDroppedPackets_Object = MibScalar
iupDroppedPackets = _IupDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 11),
    _IupDroppedPackets_Type()
)
iupDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupDroppedPackets.setStatus("current")
_IupDroppedPacketsPerSec_Type = Gauge32
_IupDroppedPacketsPerSec_Object = MibScalar
iupDroppedPacketsPerSec = _IupDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 12),
    _IupDroppedPacketsPerSec_Type()
)
iupDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupDroppedPacketsPerSec.setStatus("current")
_IupInvalidAddresses_Type = Gauge32
_IupInvalidAddresses_Object = MibScalar
iupInvalidAddresses = _IupInvalidAddresses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 13),
    _IupInvalidAddresses_Type()
)
iupInvalidAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupInvalidAddresses.setStatus("current")
_IupInvalidAddressesPerSec_Type = Gauge32
_IupInvalidAddressesPerSec_Object = MibScalar
iupInvalidAddressesPerSec = _IupInvalidAddressesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 14),
    _IupInvalidAddressesPerSec_Type()
)
iupInvalidAddressesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupInvalidAddressesPerSec.setStatus("current")
_IupMalformedPackets_Type = Gauge32
_IupMalformedPackets_Object = MibScalar
iupMalformedPackets = _IupMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 15),
    _IupMalformedPackets_Type()
)
iupMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupMalformedPackets.setStatus("current")
_IupMalformedPacketsPerSec_Type = Gauge32
_IupMalformedPacketsPerSec_Object = MibScalar
iupMalformedPacketsPerSec = _IupMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 16),
    _IupMalformedPacketsPerSec_Type()
)
iupMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupMalformedPacketsPerSec.setStatus("current")
_IupPacketsReceived_Type = Gauge32
_IupPacketsReceived_Object = MibScalar
iupPacketsReceived = _IupPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 17),
    _IupPacketsReceived_Type()
)
iupPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupPacketsReceived.setStatus("current")
_IupPacketsReceivedPerSec_Type = Gauge32
_IupPacketsReceivedPerSec_Object = MibScalar
iupPacketsReceivedPerSec = _IupPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 18),
    _IupPacketsReceivedPerSec_Type()
)
iupPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupPacketsReceivedPerSec.setStatus("current")
_IupPendingRequests_Type = Gauge32
_IupPendingRequests_Object = MibScalar
iupPendingRequests = _IupPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 19),
    _IupPendingRequests_Type()
)
iupPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupPendingRequests.setStatus("current")
_IupRequestTimeouts_Type = Gauge32
_IupRequestTimeouts_Object = MibScalar
iupRequestTimeouts = _IupRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 20),
    _IupRequestTimeouts_Type()
)
iupRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupRequestTimeouts.setStatus("current")
_IupRequestTimeoutsPerSec_Type = Gauge32
_IupRequestTimeoutsPerSec_Object = MibScalar
iupRequestTimeoutsPerSec = _IupRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 21),
    _IupRequestTimeoutsPerSec_Type()
)
iupRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupRequestTimeoutsPerSec.setStatus("current")
_IupRetransmissions_Type = Gauge32
_IupRetransmissions_Object = MibScalar
iupRetransmissions = _IupRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 22),
    _IupRetransmissions_Type()
)
iupRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupRetransmissions.setStatus("current")
_IupRetransmissionsPerSec_Type = Gauge32
_IupRetransmissionsPerSec_Object = MibScalar
iupRetransmissionsPerSec = _IupRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 23),
    _IupRetransmissionsPerSec_Type()
)
iupRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupRetransmissionsPerSec.setStatus("current")
_IupUnknownType_Type = Gauge32
_IupUnknownType_Object = MibScalar
iupUnknownType = _IupUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 24),
    _IupUnknownType_Type()
)
iupUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupUnknownType.setStatus("current")
_IupUnknownTypePerSec_Type = Gauge32
_IupUnknownTypePerSec_Object = MibScalar
iupUnknownTypePerSec = _IupUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 25),
    _IupUnknownTypePerSec_Type()
)
iupUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iupUnknownTypePerSec.setStatus("current")
_IasAuthenticationServer_ObjectIdentity = ObjectIdentity
iasAuthenticationServer = _IasAuthenticationServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30)
)
if mibBuilder.loadTexts:
    iasAuthenticationServer.setStatus("current")
_IusAccessAccepts_Type = Gauge32
_IusAccessAccepts_Object = MibScalar
iusAccessAccepts = _IusAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 1),
    _IusAccessAccepts_Type()
)
iusAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessAccepts.setStatus("current")
_IusAccessAcceptsPerSec_Type = Gauge32
_IusAccessAcceptsPerSec_Object = MibScalar
iusAccessAcceptsPerSec = _IusAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 2),
    _IusAccessAcceptsPerSec_Type()
)
iusAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessAcceptsPerSec.setStatus("current")
_IusAccessChallenges_Type = Gauge32
_IusAccessChallenges_Object = MibScalar
iusAccessChallenges = _IusAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 3),
    _IusAccessChallenges_Type()
)
iusAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessChallenges.setStatus("current")
_IusAccessChallengesPerSec_Type = Gauge32
_IusAccessChallengesPerSec_Object = MibScalar
iusAccessChallengesPerSec = _IusAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 4),
    _IusAccessChallengesPerSec_Type()
)
iusAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessChallengesPerSec.setStatus("current")
_IusAccessRejects_Type = Gauge32
_IusAccessRejects_Object = MibScalar
iusAccessRejects = _IusAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 5),
    _IusAccessRejects_Type()
)
iusAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessRejects.setStatus("current")
_IusAccessRejectsPerSec_Type = Gauge32
_IusAccessRejectsPerSec_Object = MibScalar
iusAccessRejectsPerSec = _IusAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 6),
    _IusAccessRejectsPerSec_Type()
)
iusAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessRejectsPerSec.setStatus("current")
_IusAccessRequests_Type = Gauge32
_IusAccessRequests_Object = MibScalar
iusAccessRequests = _IusAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 7),
    _IusAccessRequests_Type()
)
iusAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessRequests.setStatus("current")
_IusAccessRequestsPerSec_Type = Gauge32
_IusAccessRequestsPerSec_Object = MibScalar
iusAccessRequestsPerSec = _IusAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 8),
    _IusAccessRequestsPerSec_Type()
)
iusAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusAccessRequestsPerSec.setStatus("current")
_IusBadAuthenticators_Type = Gauge32
_IusBadAuthenticators_Object = MibScalar
iusBadAuthenticators = _IusBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 9),
    _IusBadAuthenticators_Type()
)
iusBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusBadAuthenticators.setStatus("current")
_IusBadAuthenticatorsPerSec_Type = Gauge32
_IusBadAuthenticatorsPerSec_Object = MibScalar
iusBadAuthenticatorsPerSec = _IusBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 10),
    _IusBadAuthenticatorsPerSec_Type()
)
iusBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusBadAuthenticatorsPerSec.setStatus("current")
_IusDroppedPackets_Type = Gauge32
_IusDroppedPackets_Object = MibScalar
iusDroppedPackets = _IusDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 11),
    _IusDroppedPackets_Type()
)
iusDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusDroppedPackets.setStatus("current")
_IusDroppedPacketsPerSec_Type = Gauge32
_IusDroppedPacketsPerSec_Object = MibScalar
iusDroppedPacketsPerSec = _IusDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 12),
    _IusDroppedPacketsPerSec_Type()
)
iusDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusDroppedPacketsPerSec.setStatus("current")
_IusDuplicateAccessRequests_Type = Gauge32
_IusDuplicateAccessRequests_Object = MibScalar
iusDuplicateAccessRequests = _IusDuplicateAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 13),
    _IusDuplicateAccessRequests_Type()
)
iusDuplicateAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusDuplicateAccessRequests.setStatus("current")
_IusDuplicateAccessRequestsPerSec_Type = Gauge32
_IusDuplicateAccessRequestsPerSec_Object = MibScalar
iusDuplicateAccessRequestsPerSec = _IusDuplicateAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 14),
    _IusDuplicateAccessRequestsPerSec_Type()
)
iusDuplicateAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusDuplicateAccessRequestsPerSec.setStatus("current")
_IusInvalidRequests_Type = Gauge32
_IusInvalidRequests_Object = MibScalar
iusInvalidRequests = _IusInvalidRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 15),
    _IusInvalidRequests_Type()
)
iusInvalidRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusInvalidRequests.setStatus("current")
_IusInvalidRequestsPerSec_Type = Gauge32
_IusInvalidRequestsPerSec_Object = MibScalar
iusInvalidRequestsPerSec = _IusInvalidRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 16),
    _IusInvalidRequestsPerSec_Type()
)
iusInvalidRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusInvalidRequestsPerSec.setStatus("current")
_IusMalformedPackets_Type = Gauge32
_IusMalformedPackets_Object = MibScalar
iusMalformedPackets = _IusMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 17),
    _IusMalformedPackets_Type()
)
iusMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusMalformedPackets.setStatus("current")
_IusMalformedPacketsPerSec_Type = Gauge32
_IusMalformedPacketsPerSec_Object = MibScalar
iusMalformedPacketsPerSec = _IusMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 18),
    _IusMalformedPacketsPerSec_Type()
)
iusMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusMalformedPacketsPerSec.setStatus("current")
_IusPacketsReceived_Type = Gauge32
_IusPacketsReceived_Object = MibScalar
iusPacketsReceived = _IusPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 19),
    _IusPacketsReceived_Type()
)
iusPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusPacketsReceived.setStatus("current")
_IusPacketsReceivedPerSec_Type = Gauge32
_IusPacketsReceivedPerSec_Object = MibScalar
iusPacketsReceivedPerSec = _IusPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 20),
    _IusPacketsReceivedPerSec_Type()
)
iusPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusPacketsReceivedPerSec.setStatus("current")
_IusPacketsSent_Type = Gauge32
_IusPacketsSent_Object = MibScalar
iusPacketsSent = _IusPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 21),
    _IusPacketsSent_Type()
)
iusPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusPacketsSent.setStatus("current")
_IusPacketsSentPerSec_Type = Gauge32
_IusPacketsSentPerSec_Object = MibScalar
iusPacketsSentPerSec = _IusPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 22),
    _IusPacketsSentPerSec_Type()
)
iusPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusPacketsSentPerSec.setStatus("current")
_IusServerResetTime_Type = Gauge32
_IusServerResetTime_Object = MibScalar
iusServerResetTime = _IusServerResetTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 23),
    _IusServerResetTime_Type()
)
iusServerResetTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusServerResetTime.setStatus("current")
_IusServerUpTime_Type = Gauge32
_IusServerUpTime_Object = MibScalar
iusServerUpTime = _IusServerUpTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 24),
    _IusServerUpTime_Type()
)
iusServerUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusServerUpTime.setStatus("current")
_IusUnknownType_Type = Gauge32
_IusUnknownType_Object = MibScalar
iusUnknownType = _IusUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 25),
    _IusUnknownType_Type()
)
iusUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusUnknownType.setStatus("current")
_IusUnknownTypePerSec_Type = Gauge32
_IusUnknownTypePerSec_Object = MibScalar
iusUnknownTypePerSec = _IusUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 26),
    _IusUnknownTypePerSec_Type()
)
iusUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iusUnknownTypePerSec.setStatus("current")
_IasRemoteAccountingServersTable_Object = MibTable
iasRemoteAccountingServersTable = _IasRemoteAccountingServersTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31)
)
if mibBuilder.loadTexts:
    iasRemoteAccountingServersTable.setStatus("current")
_IasRemoteAccountingServersEntry_Object = MibTableRow
iasRemoteAccountingServersEntry = _IasRemoteAccountingServersEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1)
)
iasRemoteAccountingServersEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ircsInstance"),
)
if mibBuilder.loadTexts:
    iasRemoteAccountingServersEntry.setStatus("current")
_IrcsInstance_Type = InstanceName
_IrcsInstance_Object = MibTableColumn
ircsInstance = _IrcsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 1),
    _IrcsInstance_Type()
)
ircsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsInstance.setStatus("current")
_IrcsAccountingRequests_Type = Gauge32
_IrcsAccountingRequests_Object = MibTableColumn
ircsAccountingRequests = _IrcsAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 2),
    _IrcsAccountingRequests_Type()
)
ircsAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsAccountingRequests.setStatus("current")
_IrcsAccountingRequestsPerSec_Type = Gauge32
_IrcsAccountingRequestsPerSec_Object = MibTableColumn
ircsAccountingRequestsPerSec = _IrcsAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 3),
    _IrcsAccountingRequestsPerSec_Type()
)
ircsAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsAccountingRequestsPerSec.setStatus("current")
_IrcsAccountingResponses_Type = Gauge32
_IrcsAccountingResponses_Object = MibTableColumn
ircsAccountingResponses = _IrcsAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 4),
    _IrcsAccountingResponses_Type()
)
ircsAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsAccountingResponses.setStatus("current")
_IrcsAccountingResponsesPerSec_Type = Gauge32
_IrcsAccountingResponsesPerSec_Object = MibTableColumn
ircsAccountingResponsesPerSec = _IrcsAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 5),
    _IrcsAccountingResponsesPerSec_Type()
)
ircsAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsAccountingResponsesPerSec.setStatus("current")
_IrcsBadAuthenticators_Type = Gauge32
_IrcsBadAuthenticators_Object = MibTableColumn
ircsBadAuthenticators = _IrcsBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 6),
    _IrcsBadAuthenticators_Type()
)
ircsBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsBadAuthenticators.setStatus("current")
_IrcsBadAuthenticatorsPerSec_Type = Gauge32
_IrcsBadAuthenticatorsPerSec_Object = MibTableColumn
ircsBadAuthenticatorsPerSec = _IrcsBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 7),
    _IrcsBadAuthenticatorsPerSec_Type()
)
ircsBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsBadAuthenticatorsPerSec.setStatus("current")
_IrcsDroppedPackets_Type = Gauge32
_IrcsDroppedPackets_Object = MibTableColumn
ircsDroppedPackets = _IrcsDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 8),
    _IrcsDroppedPackets_Type()
)
ircsDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsDroppedPackets.setStatus("current")
_IrcsDroppedPacketsPerSec_Type = Gauge32
_IrcsDroppedPacketsPerSec_Object = MibTableColumn
ircsDroppedPacketsPerSec = _IrcsDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 9),
    _IrcsDroppedPacketsPerSec_Type()
)
ircsDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsDroppedPacketsPerSec.setStatus("current")
_IrcsLastRoundTripTime_Type = Gauge32
_IrcsLastRoundTripTime_Object = MibTableColumn
ircsLastRoundTripTime = _IrcsLastRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 10),
    _IrcsLastRoundTripTime_Type()
)
ircsLastRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsLastRoundTripTime.setStatus("current")
_IrcsMalformedPackets_Type = Gauge32
_IrcsMalformedPackets_Object = MibTableColumn
ircsMalformedPackets = _IrcsMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 11),
    _IrcsMalformedPackets_Type()
)
ircsMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsMalformedPackets.setStatus("current")
_IrcsMalformedPacketsPerSec_Type = Gauge32
_IrcsMalformedPacketsPerSec_Object = MibTableColumn
ircsMalformedPacketsPerSec = _IrcsMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 12),
    _IrcsMalformedPacketsPerSec_Type()
)
ircsMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsMalformedPacketsPerSec.setStatus("current")
_IrcsPacketsReceived_Type = Gauge32
_IrcsPacketsReceived_Object = MibTableColumn
ircsPacketsReceived = _IrcsPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 13),
    _IrcsPacketsReceived_Type()
)
ircsPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsPacketsReceived.setStatus("current")
_IrcsPacketsReceivedPerSec_Type = Gauge32
_IrcsPacketsReceivedPerSec_Object = MibTableColumn
ircsPacketsReceivedPerSec = _IrcsPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 14),
    _IrcsPacketsReceivedPerSec_Type()
)
ircsPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsPacketsReceivedPerSec.setStatus("current")
_IrcsPendingRequests_Type = Gauge32
_IrcsPendingRequests_Object = MibTableColumn
ircsPendingRequests = _IrcsPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 15),
    _IrcsPendingRequests_Type()
)
ircsPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsPendingRequests.setStatus("current")
_IrcsPortNumber_Type = Gauge32
_IrcsPortNumber_Object = MibTableColumn
ircsPortNumber = _IrcsPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 16),
    _IrcsPortNumber_Type()
)
ircsPortNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsPortNumber.setStatus("current")
_IrcsRequestTimeouts_Type = Gauge32
_IrcsRequestTimeouts_Object = MibTableColumn
ircsRequestTimeouts = _IrcsRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 17),
    _IrcsRequestTimeouts_Type()
)
ircsRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsRequestTimeouts.setStatus("current")
_IrcsRequestTimeoutsPerSec_Type = Gauge32
_IrcsRequestTimeoutsPerSec_Object = MibTableColumn
ircsRequestTimeoutsPerSec = _IrcsRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 18),
    _IrcsRequestTimeoutsPerSec_Type()
)
ircsRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsRequestTimeoutsPerSec.setStatus("current")
_IrcsRetransmissions_Type = Gauge32
_IrcsRetransmissions_Object = MibTableColumn
ircsRetransmissions = _IrcsRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 19),
    _IrcsRetransmissions_Type()
)
ircsRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsRetransmissions.setStatus("current")
_IrcsRetransmissionsPerSec_Type = Gauge32
_IrcsRetransmissionsPerSec_Object = MibTableColumn
ircsRetransmissionsPerSec = _IrcsRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 20),
    _IrcsRetransmissionsPerSec_Type()
)
ircsRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsRetransmissionsPerSec.setStatus("current")
_IrcsUnknownType_Type = Gauge32
_IrcsUnknownType_Object = MibTableColumn
ircsUnknownType = _IrcsUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 21),
    _IrcsUnknownType_Type()
)
ircsUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsUnknownType.setStatus("current")
_IrcsUnknownTypePerSec_Type = Gauge32
_IrcsUnknownTypePerSec_Object = MibTableColumn
ircsUnknownTypePerSec = _IrcsUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 22),
    _IrcsUnknownTypePerSec_Type()
)
ircsUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ircsUnknownTypePerSec.setStatus("current")
_IasRemoteAuthenticationSrvrTable_Object = MibTable
iasRemoteAuthenticationSrvrTable = _IasRemoteAuthenticationSrvrTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32)
)
if mibBuilder.loadTexts:
    iasRemoteAuthenticationSrvrTable.setStatus("current")
_IasRemoteAuthenticationSrvrEntry_Object = MibTableRow
iasRemoteAuthenticationSrvrEntry = _IasRemoteAuthenticationSrvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1)
)
iasRemoteAuthenticationSrvrEntry.setIndexNames(
    (0, "INFORMANT-ADV", "irusInstance"),
)
if mibBuilder.loadTexts:
    iasRemoteAuthenticationSrvrEntry.setStatus("current")
_IrusInstance_Type = InstanceName
_IrusInstance_Object = MibTableColumn
irusInstance = _IrusInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 1),
    _IrusInstance_Type()
)
irusInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusInstance.setStatus("current")
_IrusAccessAccepts_Type = Gauge32
_IrusAccessAccepts_Object = MibTableColumn
irusAccessAccepts = _IrusAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 2),
    _IrusAccessAccepts_Type()
)
irusAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessAccepts.setStatus("current")
_IrusAccessAcceptsPerSec_Type = Gauge32
_IrusAccessAcceptsPerSec_Object = MibTableColumn
irusAccessAcceptsPerSec = _IrusAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 3),
    _IrusAccessAcceptsPerSec_Type()
)
irusAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessAcceptsPerSec.setStatus("current")
_IrusAccessChallenges_Type = Gauge32
_IrusAccessChallenges_Object = MibTableColumn
irusAccessChallenges = _IrusAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 4),
    _IrusAccessChallenges_Type()
)
irusAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessChallenges.setStatus("current")
_IrusAccessChallengesPerSec_Type = Gauge32
_IrusAccessChallengesPerSec_Object = MibTableColumn
irusAccessChallengesPerSec = _IrusAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 5),
    _IrusAccessChallengesPerSec_Type()
)
irusAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessChallengesPerSec.setStatus("current")
_IrusAccessRejects_Type = Gauge32
_IrusAccessRejects_Object = MibTableColumn
irusAccessRejects = _IrusAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 6),
    _IrusAccessRejects_Type()
)
irusAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessRejects.setStatus("current")
_IrusAccessRejectsPerSec_Type = Gauge32
_IrusAccessRejectsPerSec_Object = MibTableColumn
irusAccessRejectsPerSec = _IrusAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 7),
    _IrusAccessRejectsPerSec_Type()
)
irusAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessRejectsPerSec.setStatus("current")
_IrusAccessRequests_Type = Gauge32
_IrusAccessRequests_Object = MibTableColumn
irusAccessRequests = _IrusAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 8),
    _IrusAccessRequests_Type()
)
irusAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessRequests.setStatus("current")
_IrusAccessRequestsPerSec_Type = Gauge32
_IrusAccessRequestsPerSec_Object = MibTableColumn
irusAccessRequestsPerSec = _IrusAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 9),
    _IrusAccessRequestsPerSec_Type()
)
irusAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusAccessRequestsPerSec.setStatus("current")
_IrusBadAuthenticators_Type = Gauge32
_IrusBadAuthenticators_Object = MibTableColumn
irusBadAuthenticators = _IrusBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 10),
    _IrusBadAuthenticators_Type()
)
irusBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusBadAuthenticators.setStatus("current")
_IrusBadAuthenticatorsPerSec_Type = Gauge32
_IrusBadAuthenticatorsPerSec_Object = MibTableColumn
irusBadAuthenticatorsPerSec = _IrusBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 11),
    _IrusBadAuthenticatorsPerSec_Type()
)
irusBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusBadAuthenticatorsPerSec.setStatus("current")
_IrusDroppedPackets_Type = Gauge32
_IrusDroppedPackets_Object = MibTableColumn
irusDroppedPackets = _IrusDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 12),
    _IrusDroppedPackets_Type()
)
irusDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusDroppedPackets.setStatus("current")
_IrusDroppedPacketsPerSec_Type = Gauge32
_IrusDroppedPacketsPerSec_Object = MibTableColumn
irusDroppedPacketsPerSec = _IrusDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 13),
    _IrusDroppedPacketsPerSec_Type()
)
irusDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusDroppedPacketsPerSec.setStatus("current")
_IrusLastRoundTripTime_Type = Gauge32
_IrusLastRoundTripTime_Object = MibTableColumn
irusLastRoundTripTime = _IrusLastRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 14),
    _IrusLastRoundTripTime_Type()
)
irusLastRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusLastRoundTripTime.setStatus("current")
_IrusMalformedPackets_Type = Gauge32
_IrusMalformedPackets_Object = MibTableColumn
irusMalformedPackets = _IrusMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 15),
    _IrusMalformedPackets_Type()
)
irusMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusMalformedPackets.setStatus("current")
_IrusMalformedPacketsPerSec_Type = Gauge32
_IrusMalformedPacketsPerSec_Object = MibTableColumn
irusMalformedPacketsPerSec = _IrusMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 16),
    _IrusMalformedPacketsPerSec_Type()
)
irusMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusMalformedPacketsPerSec.setStatus("current")
_IrusPacketsReceived_Type = Gauge32
_IrusPacketsReceived_Object = MibTableColumn
irusPacketsReceived = _IrusPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 17),
    _IrusPacketsReceived_Type()
)
irusPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusPacketsReceived.setStatus("current")
_IrusPacketsReceivedPerSec_Type = Gauge32
_IrusPacketsReceivedPerSec_Object = MibTableColumn
irusPacketsReceivedPerSec = _IrusPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 18),
    _IrusPacketsReceivedPerSec_Type()
)
irusPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusPacketsReceivedPerSec.setStatus("current")
_IrusPendingRequests_Type = Gauge32
_IrusPendingRequests_Object = MibTableColumn
irusPendingRequests = _IrusPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 19),
    _IrusPendingRequests_Type()
)
irusPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusPendingRequests.setStatus("current")
_IrusPortNumber_Type = Gauge32
_IrusPortNumber_Object = MibTableColumn
irusPortNumber = _IrusPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 20),
    _IrusPortNumber_Type()
)
irusPortNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusPortNumber.setStatus("current")
_IrusRequestTimeouts_Type = Gauge32
_IrusRequestTimeouts_Object = MibTableColumn
irusRequestTimeouts = _IrusRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 21),
    _IrusRequestTimeouts_Type()
)
irusRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusRequestTimeouts.setStatus("current")
_IrusRequestTimeoutsPerSec_Type = Gauge32
_IrusRequestTimeoutsPerSec_Object = MibTableColumn
irusRequestTimeoutsPerSec = _IrusRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 22),
    _IrusRequestTimeoutsPerSec_Type()
)
irusRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusRequestTimeoutsPerSec.setStatus("current")
_IrusRetransmissions_Type = Gauge32
_IrusRetransmissions_Object = MibTableColumn
irusRetransmissions = _IrusRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 23),
    _IrusRetransmissions_Type()
)
irusRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusRetransmissions.setStatus("current")
_IrusRetransmissionsPerSec_Type = Gauge32
_IrusRetransmissionsPerSec_Object = MibTableColumn
irusRetransmissionsPerSec = _IrusRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 24),
    _IrusRetransmissionsPerSec_Type()
)
irusRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusRetransmissionsPerSec.setStatus("current")
_IrusUnknownType_Type = Gauge32
_IrusUnknownType_Object = MibTableColumn
irusUnknownType = _IrusUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 25),
    _IrusUnknownType_Type()
)
irusUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusUnknownType.setStatus("current")
_IrusUnknownTypePerSec_Type = Gauge32
_IrusUnknownTypePerSec_Object = MibTableColumn
irusUnknownTypePerSec = _IrusUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 26),
    _IrusUnknownTypePerSec_Type()
)
irusUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    irusUnknownTypePerSec.setStatus("current")
_IcmpV4_ObjectIdentity = ObjectIdentity
icmpV4 = _IcmpV4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33)
)
if mibBuilder.loadTexts:
    icmpV4.setStatus("current")
_IcmpV4MessagesOutboundErrors_Type = Gauge32
_IcmpV4MessagesOutboundErrors_Object = MibScalar
icmpV4MessagesOutboundErrors = _IcmpV4MessagesOutboundErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 1),
    _IcmpV4MessagesOutboundErrors_Type()
)
icmpV4MessagesOutboundErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4MessagesOutboundErrors.setStatus("current")
_IcmpV4MessagesReceivedErrors_Type = Gauge32
_IcmpV4MessagesReceivedErrors_Object = MibScalar
icmpV4MessagesReceivedErrors = _IcmpV4MessagesReceivedErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 2),
    _IcmpV4MessagesReceivedErrors_Type()
)
icmpV4MessagesReceivedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4MessagesReceivedErrors.setStatus("current")
_IcmpV4MessagesReceivedPerSec_Type = Gauge32
_IcmpV4MessagesReceivedPerSec_Object = MibScalar
icmpV4MessagesReceivedPerSec = _IcmpV4MessagesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 3),
    _IcmpV4MessagesReceivedPerSec_Type()
)
icmpV4MessagesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4MessagesReceivedPerSec.setStatus("current")
_IcmpV4MessagesSentPerSec_Type = Gauge32
_IcmpV4MessagesSentPerSec_Object = MibScalar
icmpV4MessagesSentPerSec = _IcmpV4MessagesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 4),
    _IcmpV4MessagesSentPerSec_Type()
)
icmpV4MessagesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4MessagesSentPerSec.setStatus("current")
_IcmpV4MessagesPerSec_Type = Gauge32
_IcmpV4MessagesPerSec_Object = MibScalar
icmpV4MessagesPerSec = _IcmpV4MessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 5),
    _IcmpV4MessagesPerSec_Type()
)
icmpV4MessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4MessagesPerSec.setStatus("current")
_IcmpV4RcvdAddressMask_Type = Gauge32
_IcmpV4RcvdAddressMask_Object = MibScalar
icmpV4RcvdAddressMask = _IcmpV4RcvdAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 6),
    _IcmpV4RcvdAddressMask_Type()
)
icmpV4RcvdAddressMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdAddressMask.setStatus("current")
_IcmpV4RcvdAddressMaskReply_Type = Gauge32
_IcmpV4RcvdAddressMaskReply_Object = MibScalar
icmpV4RcvdAddressMaskReply = _IcmpV4RcvdAddressMaskReply_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 7),
    _IcmpV4RcvdAddressMaskReply_Type()
)
icmpV4RcvdAddressMaskReply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdAddressMaskReply.setStatus("current")
_IcmpV4RcvdDestUnreachable_Type = Gauge32
_IcmpV4RcvdDestUnreachable_Object = MibScalar
icmpV4RcvdDestUnreachable = _IcmpV4RcvdDestUnreachable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 8),
    _IcmpV4RcvdDestUnreachable_Type()
)
icmpV4RcvdDestUnreachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdDestUnreachable.setStatus("current")
_IcmpV4RcvdEchoReplyPerSec_Type = Gauge32
_IcmpV4RcvdEchoReplyPerSec_Object = MibScalar
icmpV4RcvdEchoReplyPerSec = _IcmpV4RcvdEchoReplyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 9),
    _IcmpV4RcvdEchoReplyPerSec_Type()
)
icmpV4RcvdEchoReplyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdEchoReplyPerSec.setStatus("current")
_IcmpV4RcvdEchoPerSec_Type = Gauge32
_IcmpV4RcvdEchoPerSec_Object = MibScalar
icmpV4RcvdEchoPerSec = _IcmpV4RcvdEchoPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 10),
    _IcmpV4RcvdEchoPerSec_Type()
)
icmpV4RcvdEchoPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdEchoPerSec.setStatus("current")
_IcmpV4RcvdParameterProblem_Type = Gauge32
_IcmpV4RcvdParameterProblem_Object = MibScalar
icmpV4RcvdParameterProblem = _IcmpV4RcvdParameterProblem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 11),
    _IcmpV4RcvdParameterProblem_Type()
)
icmpV4RcvdParameterProblem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdParameterProblem.setStatus("current")
_IcmpV4RcvdRedirectPerSec_Type = Gauge32
_IcmpV4RcvdRedirectPerSec_Object = MibScalar
icmpV4RcvdRedirectPerSec = _IcmpV4RcvdRedirectPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 12),
    _IcmpV4RcvdRedirectPerSec_Type()
)
icmpV4RcvdRedirectPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdRedirectPerSec.setStatus("current")
_IcmpV4RcvdSourceQuench_Type = Gauge32
_IcmpV4RcvdSourceQuench_Object = MibScalar
icmpV4RcvdSourceQuench = _IcmpV4RcvdSourceQuench_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 13),
    _IcmpV4RcvdSourceQuench_Type()
)
icmpV4RcvdSourceQuench.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdSourceQuench.setStatus("current")
_IcmpV4RcvdTimeExceeded_Type = Gauge32
_IcmpV4RcvdTimeExceeded_Object = MibScalar
icmpV4RcvdTimeExceeded = _IcmpV4RcvdTimeExceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 14),
    _IcmpV4RcvdTimeExceeded_Type()
)
icmpV4RcvdTimeExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdTimeExceeded.setStatus("current")
_IcmpV4RcvdTimestampReplyPerSec_Type = Gauge32
_IcmpV4RcvdTimestampReplyPerSec_Object = MibScalar
icmpV4RcvdTimestampReplyPerSec = _IcmpV4RcvdTimestampReplyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 15),
    _IcmpV4RcvdTimestampReplyPerSec_Type()
)
icmpV4RcvdTimestampReplyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdTimestampReplyPerSec.setStatus("current")
_IcmpV4RcvdTimestampPerSec_Type = Gauge32
_IcmpV4RcvdTimestampPerSec_Object = MibScalar
icmpV4RcvdTimestampPerSec = _IcmpV4RcvdTimestampPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 16),
    _IcmpV4RcvdTimestampPerSec_Type()
)
icmpV4RcvdTimestampPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4RcvdTimestampPerSec.setStatus("current")
_IcmpV4SentAddressMask_Type = Gauge32
_IcmpV4SentAddressMask_Object = MibScalar
icmpV4SentAddressMask = _IcmpV4SentAddressMask_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 17),
    _IcmpV4SentAddressMask_Type()
)
icmpV4SentAddressMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentAddressMask.setStatus("current")
_IcmpV4SentAddressMaskReply_Type = Gauge32
_IcmpV4SentAddressMaskReply_Object = MibScalar
icmpV4SentAddressMaskReply = _IcmpV4SentAddressMaskReply_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 18),
    _IcmpV4SentAddressMaskReply_Type()
)
icmpV4SentAddressMaskReply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentAddressMaskReply.setStatus("current")
_IcmpV4SentDestinationUnreachable_Type = Gauge32
_IcmpV4SentDestinationUnreachable_Object = MibScalar
icmpV4SentDestinationUnreachable = _IcmpV4SentDestinationUnreachable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 19),
    _IcmpV4SentDestinationUnreachable_Type()
)
icmpV4SentDestinationUnreachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentDestinationUnreachable.setStatus("current")
_IcmpV4SentEchoReplyPerSec_Type = Gauge32
_IcmpV4SentEchoReplyPerSec_Object = MibScalar
icmpV4SentEchoReplyPerSec = _IcmpV4SentEchoReplyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 20),
    _IcmpV4SentEchoReplyPerSec_Type()
)
icmpV4SentEchoReplyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentEchoReplyPerSec.setStatus("current")
_IcmpV4SentEchoPerSec_Type = Gauge32
_IcmpV4SentEchoPerSec_Object = MibScalar
icmpV4SentEchoPerSec = _IcmpV4SentEchoPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 21),
    _IcmpV4SentEchoPerSec_Type()
)
icmpV4SentEchoPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentEchoPerSec.setStatus("current")
_IcmpV4SentParameterProblem_Type = Gauge32
_IcmpV4SentParameterProblem_Object = MibScalar
icmpV4SentParameterProblem = _IcmpV4SentParameterProblem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 22),
    _IcmpV4SentParameterProblem_Type()
)
icmpV4SentParameterProblem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentParameterProblem.setStatus("current")
_IcmpV4SentRedirectPerSec_Type = Gauge32
_IcmpV4SentRedirectPerSec_Object = MibScalar
icmpV4SentRedirectPerSec = _IcmpV4SentRedirectPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 23),
    _IcmpV4SentRedirectPerSec_Type()
)
icmpV4SentRedirectPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentRedirectPerSec.setStatus("current")
_IcmpV4SentSourceQuench_Type = Gauge32
_IcmpV4SentSourceQuench_Object = MibScalar
icmpV4SentSourceQuench = _IcmpV4SentSourceQuench_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 24),
    _IcmpV4SentSourceQuench_Type()
)
icmpV4SentSourceQuench.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentSourceQuench.setStatus("current")
_IcmpV4SentTimeExceeded_Type = Gauge32
_IcmpV4SentTimeExceeded_Object = MibScalar
icmpV4SentTimeExceeded = _IcmpV4SentTimeExceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 25),
    _IcmpV4SentTimeExceeded_Type()
)
icmpV4SentTimeExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentTimeExceeded.setStatus("current")
_IcmpV4SentTimestampReplyPerSec_Type = Gauge32
_IcmpV4SentTimestampReplyPerSec_Object = MibScalar
icmpV4SentTimestampReplyPerSec = _IcmpV4SentTimestampReplyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 26),
    _IcmpV4SentTimestampReplyPerSec_Type()
)
icmpV4SentTimestampReplyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentTimestampReplyPerSec.setStatus("current")
_IcmpV4SentTimestampPerSec_Type = Gauge32
_IcmpV4SentTimestampPerSec_Object = MibScalar
icmpV4SentTimestampPerSec = _IcmpV4SentTimestampPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 27),
    _IcmpV4SentTimestampPerSec_Type()
)
icmpV4SentTimestampPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV4SentTimestampPerSec.setStatus("current")
_IcmpV6_ObjectIdentity = ObjectIdentity
icmpV6 = _IcmpV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34)
)
_IcmpV6MessagesOutboundErrors_Type = Gauge32
_IcmpV6MessagesOutboundErrors_Object = MibScalar
icmpV6MessagesOutboundErrors = _IcmpV6MessagesOutboundErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 1),
    _IcmpV6MessagesOutboundErrors_Type()
)
icmpV6MessagesOutboundErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6MessagesOutboundErrors.setStatus("current")
_IcmpV6MessagesReceivedErrors_Type = Gauge32
_IcmpV6MessagesReceivedErrors_Object = MibScalar
icmpV6MessagesReceivedErrors = _IcmpV6MessagesReceivedErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 2),
    _IcmpV6MessagesReceivedErrors_Type()
)
icmpV6MessagesReceivedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6MessagesReceivedErrors.setStatus("current")
_IcmpV6MessagesReceivedPerSec_Type = Gauge32
_IcmpV6MessagesReceivedPerSec_Object = MibScalar
icmpV6MessagesReceivedPerSec = _IcmpV6MessagesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 3),
    _IcmpV6MessagesReceivedPerSec_Type()
)
icmpV6MessagesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6MessagesReceivedPerSec.setStatus("current")
_IcmpV6MessagesSentPerSec_Type = Gauge32
_IcmpV6MessagesSentPerSec_Object = MibScalar
icmpV6MessagesSentPerSec = _IcmpV6MessagesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 4),
    _IcmpV6MessagesSentPerSec_Type()
)
icmpV6MessagesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6MessagesSentPerSec.setStatus("current")
_IcmpV6MessagesPerSec_Type = Gauge32
_IcmpV6MessagesPerSec_Object = MibScalar
icmpV6MessagesPerSec = _IcmpV6MessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 5),
    _IcmpV6MessagesPerSec_Type()
)
icmpV6MessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6MessagesPerSec.setStatus("current")
_IcmpV6ReceivedDestUnreachable_Type = Gauge32
_IcmpV6ReceivedDestUnreachable_Object = MibScalar
icmpV6ReceivedDestUnreachable = _IcmpV6ReceivedDestUnreachable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 6),
    _IcmpV6ReceivedDestUnreachable_Type()
)
icmpV6ReceivedDestUnreachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedDestUnreachable.setStatus("current")
_IcmpV6ReceivedEchoReplyPerSec_Type = Gauge32
_IcmpV6ReceivedEchoReplyPerSec_Object = MibScalar
icmpV6ReceivedEchoReplyPerSec = _IcmpV6ReceivedEchoReplyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 7),
    _IcmpV6ReceivedEchoReplyPerSec_Type()
)
icmpV6ReceivedEchoReplyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedEchoReplyPerSec.setStatus("current")
_IcmpV6ReceivedEchoPerSec_Type = Gauge32
_IcmpV6ReceivedEchoPerSec_Object = MibScalar
icmpV6ReceivedEchoPerSec = _IcmpV6ReceivedEchoPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 8),
    _IcmpV6ReceivedEchoPerSec_Type()
)
icmpV6ReceivedEchoPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedEchoPerSec.setStatus("current")
_IcmpV6ReceivedMembershipQuery_Type = Gauge32
_IcmpV6ReceivedMembershipQuery_Object = MibScalar
icmpV6ReceivedMembershipQuery = _IcmpV6ReceivedMembershipQuery_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 9),
    _IcmpV6ReceivedMembershipQuery_Type()
)
icmpV6ReceivedMembershipQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedMembershipQuery.setStatus("current")
_IcmpV6ReceivedMembershipReduct_Type = Gauge32
_IcmpV6ReceivedMembershipReduct_Object = MibScalar
icmpV6ReceivedMembershipReduct = _IcmpV6ReceivedMembershipReduct_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 10),
    _IcmpV6ReceivedMembershipReduct_Type()
)
icmpV6ReceivedMembershipReduct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedMembershipReduct.setStatus("current")
_IcmpV6ReceivedMembershipReport_Type = Gauge32
_IcmpV6ReceivedMembershipReport_Object = MibScalar
icmpV6ReceivedMembershipReport = _IcmpV6ReceivedMembershipReport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 11),
    _IcmpV6ReceivedMembershipReport_Type()
)
icmpV6ReceivedMembershipReport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedMembershipReport.setStatus("current")
_IcmpV6ReceivedNeighborAdvert_Type = Gauge32
_IcmpV6ReceivedNeighborAdvert_Object = MibScalar
icmpV6ReceivedNeighborAdvert = _IcmpV6ReceivedNeighborAdvert_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 12),
    _IcmpV6ReceivedNeighborAdvert_Type()
)
icmpV6ReceivedNeighborAdvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedNeighborAdvert.setStatus("current")
_IcmpV6ReceivedNeighborSolicit_Type = Gauge32
_IcmpV6ReceivedNeighborSolicit_Object = MibScalar
icmpV6ReceivedNeighborSolicit = _IcmpV6ReceivedNeighborSolicit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 13),
    _IcmpV6ReceivedNeighborSolicit_Type()
)
icmpV6ReceivedNeighborSolicit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedNeighborSolicit.setStatus("current")
_IcmpV6ReceivedPacketTooBig_Type = Gauge32
_IcmpV6ReceivedPacketTooBig_Object = MibScalar
icmpV6ReceivedPacketTooBig = _IcmpV6ReceivedPacketTooBig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 14),
    _IcmpV6ReceivedPacketTooBig_Type()
)
icmpV6ReceivedPacketTooBig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedPacketTooBig.setStatus("current")
_IcmpV6ReceivedParameterProblem_Type = Gauge32
_IcmpV6ReceivedParameterProblem_Object = MibScalar
icmpV6ReceivedParameterProblem = _IcmpV6ReceivedParameterProblem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 15),
    _IcmpV6ReceivedParameterProblem_Type()
)
icmpV6ReceivedParameterProblem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedParameterProblem.setStatus("current")
_IcmpV6ReceivedRedirectPerSec_Type = Gauge32
_IcmpV6ReceivedRedirectPerSec_Object = MibScalar
icmpV6ReceivedRedirectPerSec = _IcmpV6ReceivedRedirectPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 16),
    _IcmpV6ReceivedRedirectPerSec_Type()
)
icmpV6ReceivedRedirectPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedRedirectPerSec.setStatus("current")
_IcmpV6ReceivedRouterAdvert_Type = Gauge32
_IcmpV6ReceivedRouterAdvert_Object = MibScalar
icmpV6ReceivedRouterAdvert = _IcmpV6ReceivedRouterAdvert_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 17),
    _IcmpV6ReceivedRouterAdvert_Type()
)
icmpV6ReceivedRouterAdvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedRouterAdvert.setStatus("current")
_IcmpV6ReceivedRouterSolicit_Type = Gauge32
_IcmpV6ReceivedRouterSolicit_Object = MibScalar
icmpV6ReceivedRouterSolicit = _IcmpV6ReceivedRouterSolicit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 18),
    _IcmpV6ReceivedRouterSolicit_Type()
)
icmpV6ReceivedRouterSolicit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedRouterSolicit.setStatus("current")
_IcmpV6ReceivedTimeExceeded_Type = Gauge32
_IcmpV6ReceivedTimeExceeded_Object = MibScalar
icmpV6ReceivedTimeExceeded = _IcmpV6ReceivedTimeExceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 19),
    _IcmpV6ReceivedTimeExceeded_Type()
)
icmpV6ReceivedTimeExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6ReceivedTimeExceeded.setStatus("current")
_IcmpV6SentDestinationUnreachable_Type = Gauge32
_IcmpV6SentDestinationUnreachable_Object = MibScalar
icmpV6SentDestinationUnreachable = _IcmpV6SentDestinationUnreachable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 20),
    _IcmpV6SentDestinationUnreachable_Type()
)
icmpV6SentDestinationUnreachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentDestinationUnreachable.setStatus("current")
_IcmpV6SentEchoReplyPerSec_Type = Gauge32
_IcmpV6SentEchoReplyPerSec_Object = MibScalar
icmpV6SentEchoReplyPerSec = _IcmpV6SentEchoReplyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 21),
    _IcmpV6SentEchoReplyPerSec_Type()
)
icmpV6SentEchoReplyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentEchoReplyPerSec.setStatus("current")
_IcmpV6SentEchoPerSec_Type = Gauge32
_IcmpV6SentEchoPerSec_Object = MibScalar
icmpV6SentEchoPerSec = _IcmpV6SentEchoPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 22),
    _IcmpV6SentEchoPerSec_Type()
)
icmpV6SentEchoPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentEchoPerSec.setStatus("current")
_IcmpV6SentMembershipQuery_Type = Gauge32
_IcmpV6SentMembershipQuery_Object = MibScalar
icmpV6SentMembershipQuery = _IcmpV6SentMembershipQuery_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 23),
    _IcmpV6SentMembershipQuery_Type()
)
icmpV6SentMembershipQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentMembershipQuery.setStatus("current")
_IcmpV6SentMembershipReduction_Type = Gauge32
_IcmpV6SentMembershipReduction_Object = MibScalar
icmpV6SentMembershipReduction = _IcmpV6SentMembershipReduction_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 24),
    _IcmpV6SentMembershipReduction_Type()
)
icmpV6SentMembershipReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentMembershipReduction.setStatus("current")
_IcmpV6SentMembershipReport_Type = Gauge32
_IcmpV6SentMembershipReport_Object = MibScalar
icmpV6SentMembershipReport = _IcmpV6SentMembershipReport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 25),
    _IcmpV6SentMembershipReport_Type()
)
icmpV6SentMembershipReport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentMembershipReport.setStatus("current")
_IcmpV6SentNeighborAdvert_Type = Gauge32
_IcmpV6SentNeighborAdvert_Object = MibScalar
icmpV6SentNeighborAdvert = _IcmpV6SentNeighborAdvert_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 26),
    _IcmpV6SentNeighborAdvert_Type()
)
icmpV6SentNeighborAdvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentNeighborAdvert.setStatus("current")
_IcmpV6SentNeighborSolicit_Type = Gauge32
_IcmpV6SentNeighborSolicit_Object = MibScalar
icmpV6SentNeighborSolicit = _IcmpV6SentNeighborSolicit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 27),
    _IcmpV6SentNeighborSolicit_Type()
)
icmpV6SentNeighborSolicit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentNeighborSolicit.setStatus("current")
_IcmpV6SentPacketTooBig_Type = Gauge32
_IcmpV6SentPacketTooBig_Object = MibScalar
icmpV6SentPacketTooBig = _IcmpV6SentPacketTooBig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 28),
    _IcmpV6SentPacketTooBig_Type()
)
icmpV6SentPacketTooBig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentPacketTooBig.setStatus("current")
_IcmpV6SentParameterProblem_Type = Gauge32
_IcmpV6SentParameterProblem_Object = MibScalar
icmpV6SentParameterProblem = _IcmpV6SentParameterProblem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 29),
    _IcmpV6SentParameterProblem_Type()
)
icmpV6SentParameterProblem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentParameterProblem.setStatus("current")
_IcmpV6SentRedirectPerSec_Type = Gauge32
_IcmpV6SentRedirectPerSec_Object = MibScalar
icmpV6SentRedirectPerSec = _IcmpV6SentRedirectPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 30),
    _IcmpV6SentRedirectPerSec_Type()
)
icmpV6SentRedirectPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentRedirectPerSec.setStatus("current")
_IcmpV6SentRouterAdvert_Type = Gauge32
_IcmpV6SentRouterAdvert_Object = MibScalar
icmpV6SentRouterAdvert = _IcmpV6SentRouterAdvert_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 31),
    _IcmpV6SentRouterAdvert_Type()
)
icmpV6SentRouterAdvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentRouterAdvert.setStatus("current")
_IcmpV6SentRouterSolicit_Type = Gauge32
_IcmpV6SentRouterSolicit_Object = MibScalar
icmpV6SentRouterSolicit = _IcmpV6SentRouterSolicit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 32),
    _IcmpV6SentRouterSolicit_Type()
)
icmpV6SentRouterSolicit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentRouterSolicit.setStatus("current")
_IcmpV6SentTimeExceeded_Type = Gauge32
_IcmpV6SentTimeExceeded_Object = MibScalar
icmpV6SentTimeExceeded = _IcmpV6SentTimeExceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 33),
    _IcmpV6SentTimeExceeded_Type()
)
icmpV6SentTimeExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpV6SentTimeExceeded.setStatus("current")
_IndexingServiceTable_Object = MibTable
indexingServiceTable = _IndexingServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35)
)
if mibBuilder.loadTexts:
    indexingServiceTable.setStatus("current")
_IndexingServiceEntry_Object = MibTableRow
indexingServiceEntry = _IndexingServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1)
)
indexingServiceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "idxSvcInstance"),
)
if mibBuilder.loadTexts:
    indexingServiceEntry.setStatus("current")
_IdxSvcInstance_Type = InstanceName
_IdxSvcInstance_Object = MibTableColumn
idxSvcInstance = _IdxSvcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 1),
    _IdxSvcInstance_Type()
)
idxSvcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcInstance.setStatus("current")
_IdxSvcNumDocumentsIndexed_Type = Gauge32
_IdxSvcNumDocumentsIndexed_Object = MibTableColumn
idxSvcNumDocumentsIndexed = _IdxSvcNumDocumentsIndexed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 2),
    _IdxSvcNumDocumentsIndexed_Type()
)
idxSvcNumDocumentsIndexed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcNumDocumentsIndexed.setStatus("current")
_IdxSvcDeferredForIndexing_Type = Gauge32
_IdxSvcDeferredForIndexing_Object = MibTableColumn
idxSvcDeferredForIndexing = _IdxSvcDeferredForIndexing_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 3),
    _IdxSvcDeferredForIndexing_Type()
)
idxSvcDeferredForIndexing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcDeferredForIndexing.setStatus("current")
_IdxSvcFilesToBeIndexed_Type = Gauge32
_IdxSvcFilesToBeIndexed_Object = MibTableColumn
idxSvcFilesToBeIndexed = _IdxSvcFilesToBeIndexed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 4),
    _IdxSvcFilesToBeIndexed_Type()
)
idxSvcFilesToBeIndexed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcFilesToBeIndexed.setStatus("current")
_IdxSvcIndexSizeMB_Type = Gauge32
_IdxSvcIndexSizeMB_Object = MibTableColumn
idxSvcIndexSizeMB = _IdxSvcIndexSizeMB_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 5),
    _IdxSvcIndexSizeMB_Type()
)
idxSvcIndexSizeMB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcIndexSizeMB.setStatus("current")
_IdxSvcMergeProgress_Type = Gauge32
_IdxSvcMergeProgress_Object = MibTableColumn
idxSvcMergeProgress = _IdxSvcMergeProgress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 6),
    _IdxSvcMergeProgress_Type()
)
idxSvcMergeProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcMergeProgress.setStatus("current")
_IdxSvcRunningQueries_Type = Gauge32
_IdxSvcRunningQueries_Object = MibTableColumn
idxSvcRunningQueries = _IdxSvcRunningQueries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 7),
    _IdxSvcRunningQueries_Type()
)
idxSvcRunningQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcRunningQueries.setStatus("current")
_IdxSvcSavedIndexes_Type = Gauge32
_IdxSvcSavedIndexes_Object = MibTableColumn
idxSvcSavedIndexes = _IdxSvcSavedIndexes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 8),
    _IdxSvcSavedIndexes_Type()
)
idxSvcSavedIndexes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcSavedIndexes.setStatus("current")
_IdxSvcTotalNumDocuments_Type = Gauge32
_IdxSvcTotalNumDocuments_Object = MibTableColumn
idxSvcTotalNumDocuments = _IdxSvcTotalNumDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 9),
    _IdxSvcTotalNumDocuments_Type()
)
idxSvcTotalNumDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcTotalNumDocuments.setStatus("current")
_IdxSvcTotalNumOfQueries_Type = Gauge32
_IdxSvcTotalNumOfQueries_Object = MibTableColumn
idxSvcTotalNumOfQueries = _IdxSvcTotalNumOfQueries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 10),
    _IdxSvcTotalNumOfQueries_Type()
)
idxSvcTotalNumOfQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcTotalNumOfQueries.setStatus("current")
_IdxSvcUniqueKeys_Type = Gauge32
_IdxSvcUniqueKeys_Object = MibTableColumn
idxSvcUniqueKeys = _IdxSvcUniqueKeys_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 11),
    _IdxSvcUniqueKeys_Type()
)
idxSvcUniqueKeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcUniqueKeys.setStatus("current")
_IdxSvcWordLists_Type = Gauge32
_IdxSvcWordLists_Object = MibTableColumn
idxSvcWordLists = _IdxSvcWordLists_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 12),
    _IdxSvcWordLists_Type()
)
idxSvcWordLists.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcWordLists.setStatus("current")
_IndexingServiceFilterTable_Object = MibTable
indexingServiceFilterTable = _IndexingServiceFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 36)
)
if mibBuilder.loadTexts:
    indexingServiceFilterTable.setStatus("current")
_IndexingServiceFilterEntry_Object = MibTableRow
indexingServiceFilterEntry = _IndexingServiceFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1)
)
indexingServiceFilterEntry.setIndexNames(
    (0, "INFORMANT-ADV", "idxSvcFilterInstance"),
)
if mibBuilder.loadTexts:
    indexingServiceFilterEntry.setStatus("current")
_IdxSvcFilterInstance_Type = InstanceName
_IdxSvcFilterInstance_Object = MibTableColumn
idxSvcFilterInstance = _IdxSvcFilterInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 1),
    _IdxSvcFilterInstance_Type()
)
idxSvcFilterInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcFilterInstance.setStatus("current")
_IdxSvcFilterBindingTimeMsec_Type = Gauge32
_IdxSvcFilterBindingTimeMsec_Object = MibTableColumn
idxSvcFilterBindingTimeMsec = _IdxSvcFilterBindingTimeMsec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 2),
    _IdxSvcFilterBindingTimeMsec_Type()
)
idxSvcFilterBindingTimeMsec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcFilterBindingTimeMsec.setStatus("current")
_IdxSvcFilterIdxSpeedMBPerHr_Type = Gauge32
_IdxSvcFilterIdxSpeedMBPerHr_Object = MibTableColumn
idxSvcFilterIdxSpeedMBPerHr = _IdxSvcFilterIdxSpeedMBPerHr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 3),
    _IdxSvcFilterIdxSpeedMBPerHr_Type()
)
idxSvcFilterIdxSpeedMBPerHr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcFilterIdxSpeedMBPerHr.setStatus("current")
_IdxSvcFilterTotalIdxSpeedMBPerHr_Type = Gauge32
_IdxSvcFilterTotalIdxSpeedMBPerHr_Object = MibTableColumn
idxSvcFilterTotalIdxSpeedMBPerHr = _IdxSvcFilterTotalIdxSpeedMBPerHr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 4),
    _IdxSvcFilterTotalIdxSpeedMBPerHr_Type()
)
idxSvcFilterTotalIdxSpeedMBPerHr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    idxSvcFilterTotalIdxSpeedMBPerHr.setStatus("current")
_InternetInformationServiceGlobal_ObjectIdentity = ObjectIdentity
internetInformationServiceGlobal = _InternetInformationServiceGlobal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37)
)
if mibBuilder.loadTexts:
    internetInformationServiceGlobal.setStatus("current")
_IisGlobalActiveFlushedEntries_Type = Gauge32
_IisGlobalActiveFlushedEntries_Object = MibScalar
iisGlobalActiveFlushedEntries = _IisGlobalActiveFlushedEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 1),
    _IisGlobalActiveFlushedEntries_Type()
)
iisGlobalActiveFlushedEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalActiveFlushedEntries.setStatus("current")
_IisGlobalBLOBCacheFlushes_Type = Gauge32
_IisGlobalBLOBCacheFlushes_Object = MibScalar
iisGlobalBLOBCacheFlushes = _IisGlobalBLOBCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 2),
    _IisGlobalBLOBCacheFlushes_Type()
)
iisGlobalBLOBCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalBLOBCacheFlushes.setStatus("current")
_IisGlobalBLOBCacheHits_Type = Gauge32
_IisGlobalBLOBCacheHits_Object = MibScalar
iisGlobalBLOBCacheHits = _IisGlobalBLOBCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 3),
    _IisGlobalBLOBCacheHits_Type()
)
iisGlobalBLOBCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalBLOBCacheHits.setStatus("current")
_IisGlobalBLOBCacheHitsPercent_Type = Gauge32
_IisGlobalBLOBCacheHitsPercent_Object = MibScalar
iisGlobalBLOBCacheHitsPercent = _IisGlobalBLOBCacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 4),
    _IisGlobalBLOBCacheHitsPercent_Type()
)
iisGlobalBLOBCacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalBLOBCacheHitsPercent.setStatus("current")
_IisGlobalBLOBCacheMisses_Type = Gauge32
_IisGlobalBLOBCacheMisses_Object = MibScalar
iisGlobalBLOBCacheMisses = _IisGlobalBLOBCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 5),
    _IisGlobalBLOBCacheMisses_Type()
)
iisGlobalBLOBCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalBLOBCacheMisses.setStatus("current")
_IisGlobalCurBLOBsCached_Type = Gauge32
_IisGlobalCurBLOBsCached_Object = MibScalar
iisGlobalCurBLOBsCached = _IisGlobalCurBLOBsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 6),
    _IisGlobalCurBLOBsCached_Type()
)
iisGlobalCurBLOBsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalCurBLOBsCached.setStatus("current")
_IisGlobalCurBlockAsyncIORequests_Type = Gauge32
_IisGlobalCurBlockAsyncIORequests_Object = MibScalar
iisGlobalCurBlockAsyncIORequests = _IisGlobalCurBlockAsyncIORequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 7),
    _IisGlobalCurBlockAsyncIORequests_Type()
)
iisGlobalCurBlockAsyncIORequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalCurBlockAsyncIORequests.setStatus("current")
_IisGlobalCurFileCacheMemUsage_Type = Gauge32
_IisGlobalCurFileCacheMemUsage_Object = MibScalar
iisGlobalCurFileCacheMemUsage = _IisGlobalCurFileCacheMemUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 8),
    _IisGlobalCurFileCacheMemUsage_Type()
)
iisGlobalCurFileCacheMemUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalCurFileCacheMemUsage.setStatus("current")
_IisGlobalCurFilesCached_Type = Gauge32
_IisGlobalCurFilesCached_Object = MibScalar
iisGlobalCurFilesCached = _IisGlobalCurFilesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 9),
    _IisGlobalCurFilesCached_Type()
)
iisGlobalCurFilesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalCurFilesCached.setStatus("current")
_IisGlobalCurURIsCached_Type = Gauge32
_IisGlobalCurURIsCached_Object = MibScalar
iisGlobalCurURIsCached = _IisGlobalCurURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 10),
    _IisGlobalCurURIsCached_Type()
)
iisGlobalCurURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalCurURIsCached.setStatus("current")
_IisGlobalFileCacheFlushes_Type = Gauge32
_IisGlobalFileCacheFlushes_Object = MibScalar
iisGlobalFileCacheFlushes = _IisGlobalFileCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 11),
    _IisGlobalFileCacheFlushes_Type()
)
iisGlobalFileCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalFileCacheFlushes.setStatus("current")
_IisGlobalFileCacheHits_Type = Gauge32
_IisGlobalFileCacheHits_Object = MibScalar
iisGlobalFileCacheHits = _IisGlobalFileCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 12),
    _IisGlobalFileCacheHits_Type()
)
iisGlobalFileCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalFileCacheHits.setStatus("current")
_IisGlobalFileCacheHitsPercent_Type = Gauge32
_IisGlobalFileCacheHitsPercent_Object = MibScalar
iisGlobalFileCacheHitsPercent = _IisGlobalFileCacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 13),
    _IisGlobalFileCacheHitsPercent_Type()
)
iisGlobalFileCacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalFileCacheHitsPercent.setStatus("current")
_IisGlobalFileCacheMisses_Type = Gauge32
_IisGlobalFileCacheMisses_Object = MibScalar
iisGlobalFileCacheMisses = _IisGlobalFileCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 14),
    _IisGlobalFileCacheMisses_Type()
)
iisGlobalFileCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalFileCacheMisses.setStatus("current")
_IisGlobalMaxFileCacheMemUsage_Type = Gauge32
_IisGlobalMaxFileCacheMemUsage_Object = MibScalar
iisGlobalMaxFileCacheMemUsage = _IisGlobalMaxFileCacheMemUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 15),
    _IisGlobalMaxFileCacheMemUsage_Type()
)
iisGlobalMaxFileCacheMemUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalMaxFileCacheMemUsage.setStatus("current")
_IisGlobalMeasuredAsyncIOBwUsage_Type = Gauge32
_IisGlobalMeasuredAsyncIOBwUsage_Object = MibScalar
iisGlobalMeasuredAsyncIOBwUsage = _IisGlobalMeasuredAsyncIOBwUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 16),
    _IisGlobalMeasuredAsyncIOBwUsage_Type()
)
iisGlobalMeasuredAsyncIOBwUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalMeasuredAsyncIOBwUsage.setStatus("current")
_IisGlobalTotalAllowedAsyncIOReqs_Type = Gauge32
_IisGlobalTotalAllowedAsyncIOReqs_Object = MibScalar
iisGlobalTotalAllowedAsyncIOReqs = _IisGlobalTotalAllowedAsyncIOReqs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 17),
    _IisGlobalTotalAllowedAsyncIOReqs_Type()
)
iisGlobalTotalAllowedAsyncIOReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalAllowedAsyncIOReqs.setStatus("current")
_IisGlobalTotalBLOBsCached_Type = Gauge32
_IisGlobalTotalBLOBsCached_Object = MibScalar
iisGlobalTotalBLOBsCached = _IisGlobalTotalBLOBsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 18),
    _IisGlobalTotalBLOBsCached_Type()
)
iisGlobalTotalBLOBsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalBLOBsCached.setStatus("current")
_IisGlobalTotalBlockAsyncIOReqs_Type = Gauge32
_IisGlobalTotalBlockAsyncIOReqs_Object = MibScalar
iisGlobalTotalBlockAsyncIOReqs = _IisGlobalTotalBlockAsyncIOReqs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 19),
    _IisGlobalTotalBlockAsyncIOReqs_Type()
)
iisGlobalTotalBlockAsyncIOReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalBlockAsyncIOReqs.setStatus("current")
_IisGlobalTotalFilesCached_Type = Gauge32
_IisGlobalTotalFilesCached_Object = MibScalar
iisGlobalTotalFilesCached = _IisGlobalTotalFilesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 20),
    _IisGlobalTotalFilesCached_Type()
)
iisGlobalTotalFilesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalFilesCached.setStatus("current")
_IisGlobalTotalFlushedBLOBs_Type = Gauge32
_IisGlobalTotalFlushedBLOBs_Object = MibScalar
iisGlobalTotalFlushedBLOBs = _IisGlobalTotalFlushedBLOBs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 21),
    _IisGlobalTotalFlushedBLOBs_Type()
)
iisGlobalTotalFlushedBLOBs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalFlushedBLOBs.setStatus("current")
_IisGlobalTotalFlushedFiles_Type = Gauge32
_IisGlobalTotalFlushedFiles_Object = MibScalar
iisGlobalTotalFlushedFiles = _IisGlobalTotalFlushedFiles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 22),
    _IisGlobalTotalFlushedFiles_Type()
)
iisGlobalTotalFlushedFiles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalFlushedFiles.setStatus("current")
_IisGlobalTotalFlushedURIs_Type = Gauge32
_IisGlobalTotalFlushedURIs_Object = MibScalar
iisGlobalTotalFlushedURIs = _IisGlobalTotalFlushedURIs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 23),
    _IisGlobalTotalFlushedURIs_Type()
)
iisGlobalTotalFlushedURIs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalFlushedURIs.setStatus("current")
_IisGlobalTotalRejectedAsyncIOReq_Type = Gauge32
_IisGlobalTotalRejectedAsyncIOReq_Object = MibScalar
iisGlobalTotalRejectedAsyncIOReq = _IisGlobalTotalRejectedAsyncIOReq_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 24),
    _IisGlobalTotalRejectedAsyncIOReq_Type()
)
iisGlobalTotalRejectedAsyncIOReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalRejectedAsyncIOReq.setStatus("current")
_IisGlobalTotalURIsCached_Type = Gauge32
_IisGlobalTotalURIsCached_Object = MibScalar
iisGlobalTotalURIsCached = _IisGlobalTotalURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 25),
    _IisGlobalTotalURIsCached_Type()
)
iisGlobalTotalURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalTotalURIsCached.setStatus("current")
_IisGlobalURICacheFlushes_Type = Gauge32
_IisGlobalURICacheFlushes_Object = MibScalar
iisGlobalURICacheFlushes = _IisGlobalURICacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 26),
    _IisGlobalURICacheFlushes_Type()
)
iisGlobalURICacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalURICacheFlushes.setStatus("current")
_IisGlobalURICacheHits_Type = Gauge32
_IisGlobalURICacheHits_Object = MibScalar
iisGlobalURICacheHits = _IisGlobalURICacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 27),
    _IisGlobalURICacheHits_Type()
)
iisGlobalURICacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalURICacheHits.setStatus("current")
_IisGlobalURICacheHitsPercent_Type = Gauge32
_IisGlobalURICacheHitsPercent_Object = MibScalar
iisGlobalURICacheHitsPercent = _IisGlobalURICacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 28),
    _IisGlobalURICacheHitsPercent_Type()
)
iisGlobalURICacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalURICacheHitsPercent.setStatus("current")
_IisGlobalURICacheMisses_Type = Gauge32
_IisGlobalURICacheMisses_Object = MibScalar
iisGlobalURICacheMisses = _IisGlobalURICacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 29),
    _IisGlobalURICacheMisses_Type()
)
iisGlobalURICacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iisGlobalURICacheMisses.setStatus("current")
_IpV4_ObjectIdentity = ObjectIdentity
ipV4 = _IpV4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38)
)
if mibBuilder.loadTexts:
    ipV4.setStatus("current")
_IpV4DatagramsForwardedPerSec_Type = Gauge32
_IpV4DatagramsForwardedPerSec_Object = MibScalar
ipV4DatagramsForwardedPerSec = _IpV4DatagramsForwardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 1),
    _IpV4DatagramsForwardedPerSec_Type()
)
ipV4DatagramsForwardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsForwardedPerSec.setStatus("current")
_IpV4DatagramsOutboundDiscarded_Type = Gauge32
_IpV4DatagramsOutboundDiscarded_Object = MibScalar
ipV4DatagramsOutboundDiscarded = _IpV4DatagramsOutboundDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 2),
    _IpV4DatagramsOutboundDiscarded_Type()
)
ipV4DatagramsOutboundDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsOutboundDiscarded.setStatus("current")
_IpV4DatagramsOutboundNoRoute_Type = Gauge32
_IpV4DatagramsOutboundNoRoute_Object = MibScalar
ipV4DatagramsOutboundNoRoute = _IpV4DatagramsOutboundNoRoute_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 3),
    _IpV4DatagramsOutboundNoRoute_Type()
)
ipV4DatagramsOutboundNoRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsOutboundNoRoute.setStatus("current")
_IpV4DatagramsRcvdAddressErrors_Type = Gauge32
_IpV4DatagramsRcvdAddressErrors_Object = MibScalar
ipV4DatagramsRcvdAddressErrors = _IpV4DatagramsRcvdAddressErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 4),
    _IpV4DatagramsRcvdAddressErrors_Type()
)
ipV4DatagramsRcvdAddressErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsRcvdAddressErrors.setStatus("current")
_IpV4DatagramsRcvdDeliveredPerSec_Type = Gauge32
_IpV4DatagramsRcvdDeliveredPerSec_Object = MibScalar
ipV4DatagramsRcvdDeliveredPerSec = _IpV4DatagramsRcvdDeliveredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 5),
    _IpV4DatagramsRcvdDeliveredPerSec_Type()
)
ipV4DatagramsRcvdDeliveredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsRcvdDeliveredPerSec.setStatus("current")
_IpV4DatagramsRcvdDiscarded_Type = Gauge32
_IpV4DatagramsRcvdDiscarded_Object = MibScalar
ipV4DatagramsRcvdDiscarded = _IpV4DatagramsRcvdDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 6),
    _IpV4DatagramsRcvdDiscarded_Type()
)
ipV4DatagramsRcvdDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsRcvdDiscarded.setStatus("current")
_IpV4DatagramsRcvdHeaderErrors_Type = Gauge32
_IpV4DatagramsRcvdHeaderErrors_Object = MibScalar
ipV4DatagramsRcvdHeaderErrors = _IpV4DatagramsRcvdHeaderErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 7),
    _IpV4DatagramsRcvdHeaderErrors_Type()
)
ipV4DatagramsRcvdHeaderErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsRcvdHeaderErrors.setStatus("current")
_IpV4DatagramsRcvdUnknownProtocol_Type = Gauge32
_IpV4DatagramsRcvdUnknownProtocol_Object = MibScalar
ipV4DatagramsRcvdUnknownProtocol = _IpV4DatagramsRcvdUnknownProtocol_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 8),
    _IpV4DatagramsRcvdUnknownProtocol_Type()
)
ipV4DatagramsRcvdUnknownProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsRcvdUnknownProtocol.setStatus("current")
_IpV4DatagramsRcvdPerSec_Type = Gauge32
_IpV4DatagramsRcvdPerSec_Object = MibScalar
ipV4DatagramsRcvdPerSec = _IpV4DatagramsRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 9),
    _IpV4DatagramsRcvdPerSec_Type()
)
ipV4DatagramsRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsRcvdPerSec.setStatus("current")
_IpV4DatagramsSentPerSec_Type = Gauge32
_IpV4DatagramsSentPerSec_Object = MibScalar
ipV4DatagramsSentPerSec = _IpV4DatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 10),
    _IpV4DatagramsSentPerSec_Type()
)
ipV4DatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsSentPerSec.setStatus("current")
_IpV4DatagramsPerSec_Type = Gauge32
_IpV4DatagramsPerSec_Object = MibScalar
ipV4DatagramsPerSec = _IpV4DatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 11),
    _IpV4DatagramsPerSec_Type()
)
ipV4DatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4DatagramsPerSec.setStatus("current")
_IpV4FragmentReassemblyFailures_Type = Gauge32
_IpV4FragmentReassemblyFailures_Object = MibScalar
ipV4FragmentReassemblyFailures = _IpV4FragmentReassemblyFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 12),
    _IpV4FragmentReassemblyFailures_Type()
)
ipV4FragmentReassemblyFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4FragmentReassemblyFailures.setStatus("current")
_IpV4FragmentationFailures_Type = Gauge32
_IpV4FragmentationFailures_Object = MibScalar
ipV4FragmentationFailures = _IpV4FragmentationFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 13),
    _IpV4FragmentationFailures_Type()
)
ipV4FragmentationFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4FragmentationFailures.setStatus("current")
_IpV4FragmentedDatagramsPerSec_Type = Gauge32
_IpV4FragmentedDatagramsPerSec_Object = MibScalar
ipV4FragmentedDatagramsPerSec = _IpV4FragmentedDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 14),
    _IpV4FragmentedDatagramsPerSec_Type()
)
ipV4FragmentedDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4FragmentedDatagramsPerSec.setStatus("current")
_IpV4FragmentsCreatedPerSec_Type = Gauge32
_IpV4FragmentsCreatedPerSec_Object = MibScalar
ipV4FragmentsCreatedPerSec = _IpV4FragmentsCreatedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 15),
    _IpV4FragmentsCreatedPerSec_Type()
)
ipV4FragmentsCreatedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4FragmentsCreatedPerSec.setStatus("current")
_IpV4FragmentsReassembledPerSec_Type = Gauge32
_IpV4FragmentsReassembledPerSec_Object = MibScalar
ipV4FragmentsReassembledPerSec = _IpV4FragmentsReassembledPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 16),
    _IpV4FragmentsReassembledPerSec_Type()
)
ipV4FragmentsReassembledPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4FragmentsReassembledPerSec.setStatus("current")
_IpV4FragmentsRcvdPerSec_Type = Gauge32
_IpV4FragmentsRcvdPerSec_Object = MibScalar
ipV4FragmentsRcvdPerSec = _IpV4FragmentsRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 17),
    _IpV4FragmentsRcvdPerSec_Type()
)
ipV4FragmentsRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV4FragmentsRcvdPerSec.setStatus("current")
_IpV6_ObjectIdentity = ObjectIdentity
ipV6 = _IpV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39)
)
_IpV6DatagramsForwardedPerSec_Type = Gauge32
_IpV6DatagramsForwardedPerSec_Object = MibScalar
ipV6DatagramsForwardedPerSec = _IpV6DatagramsForwardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 1),
    _IpV6DatagramsForwardedPerSec_Type()
)
ipV6DatagramsForwardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsForwardedPerSec.setStatus("current")
_IpV6DatagramsOutboundDiscarded_Type = Gauge32
_IpV6DatagramsOutboundDiscarded_Object = MibScalar
ipV6DatagramsOutboundDiscarded = _IpV6DatagramsOutboundDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 2),
    _IpV6DatagramsOutboundDiscarded_Type()
)
ipV6DatagramsOutboundDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsOutboundDiscarded.setStatus("current")
_IpV6DatagramsOutboundNoRoute_Type = Gauge32
_IpV6DatagramsOutboundNoRoute_Object = MibScalar
ipV6DatagramsOutboundNoRoute = _IpV6DatagramsOutboundNoRoute_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 3),
    _IpV6DatagramsOutboundNoRoute_Type()
)
ipV6DatagramsOutboundNoRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsOutboundNoRoute.setStatus("current")
_IpV6DatagramsRcvdAddressErrors_Type = Gauge32
_IpV6DatagramsRcvdAddressErrors_Object = MibScalar
ipV6DatagramsRcvdAddressErrors = _IpV6DatagramsRcvdAddressErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 4),
    _IpV6DatagramsRcvdAddressErrors_Type()
)
ipV6DatagramsRcvdAddressErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsRcvdAddressErrors.setStatus("current")
_IpV6DatagramsRcvdDeliveredPerSec_Type = Gauge32
_IpV6DatagramsRcvdDeliveredPerSec_Object = MibScalar
ipV6DatagramsRcvdDeliveredPerSec = _IpV6DatagramsRcvdDeliveredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 5),
    _IpV6DatagramsRcvdDeliveredPerSec_Type()
)
ipV6DatagramsRcvdDeliveredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsRcvdDeliveredPerSec.setStatus("current")
_IpV6DatagramsRcvdDiscarded_Type = Gauge32
_IpV6DatagramsRcvdDiscarded_Object = MibScalar
ipV6DatagramsRcvdDiscarded = _IpV6DatagramsRcvdDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 6),
    _IpV6DatagramsRcvdDiscarded_Type()
)
ipV6DatagramsRcvdDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsRcvdDiscarded.setStatus("current")
_IpV6DatagramsRcvdHeaderErrors_Type = Gauge32
_IpV6DatagramsRcvdHeaderErrors_Object = MibScalar
ipV6DatagramsRcvdHeaderErrors = _IpV6DatagramsRcvdHeaderErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 7),
    _IpV6DatagramsRcvdHeaderErrors_Type()
)
ipV6DatagramsRcvdHeaderErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsRcvdHeaderErrors.setStatus("current")
_IpV6DatagramsRcvdUnknownProtocol_Type = Gauge32
_IpV6DatagramsRcvdUnknownProtocol_Object = MibScalar
ipV6DatagramsRcvdUnknownProtocol = _IpV6DatagramsRcvdUnknownProtocol_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 8),
    _IpV6DatagramsRcvdUnknownProtocol_Type()
)
ipV6DatagramsRcvdUnknownProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsRcvdUnknownProtocol.setStatus("current")
_IpV6DatagramsRcvdPerSec_Type = Gauge32
_IpV6DatagramsRcvdPerSec_Object = MibScalar
ipV6DatagramsRcvdPerSec = _IpV6DatagramsRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 9),
    _IpV6DatagramsRcvdPerSec_Type()
)
ipV6DatagramsRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsRcvdPerSec.setStatus("current")
_IpV6DatagramsSentPerSec_Type = Gauge32
_IpV6DatagramsSentPerSec_Object = MibScalar
ipV6DatagramsSentPerSec = _IpV6DatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 10),
    _IpV6DatagramsSentPerSec_Type()
)
ipV6DatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsSentPerSec.setStatus("current")
_IpV6DatagramsPerSec_Type = Gauge32
_IpV6DatagramsPerSec_Object = MibScalar
ipV6DatagramsPerSec = _IpV6DatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 11),
    _IpV6DatagramsPerSec_Type()
)
ipV6DatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6DatagramsPerSec.setStatus("current")
_IpV6FragmentReassemblyFailures_Type = Gauge32
_IpV6FragmentReassemblyFailures_Object = MibScalar
ipV6FragmentReassemblyFailures = _IpV6FragmentReassemblyFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 12),
    _IpV6FragmentReassemblyFailures_Type()
)
ipV6FragmentReassemblyFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6FragmentReassemblyFailures.setStatus("current")
_IpV6FragmentationFailures_Type = Gauge32
_IpV6FragmentationFailures_Object = MibScalar
ipV6FragmentationFailures = _IpV6FragmentationFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 13),
    _IpV6FragmentationFailures_Type()
)
ipV6FragmentationFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6FragmentationFailures.setStatus("current")
_IpV6FragmentedDatagramsPerSec_Type = Gauge32
_IpV6FragmentedDatagramsPerSec_Object = MibScalar
ipV6FragmentedDatagramsPerSec = _IpV6FragmentedDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 14),
    _IpV6FragmentedDatagramsPerSec_Type()
)
ipV6FragmentedDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6FragmentedDatagramsPerSec.setStatus("current")
_IpV6FragmentsCreatedPerSec_Type = Gauge32
_IpV6FragmentsCreatedPerSec_Object = MibScalar
ipV6FragmentsCreatedPerSec = _IpV6FragmentsCreatedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 15),
    _IpV6FragmentsCreatedPerSec_Type()
)
ipV6FragmentsCreatedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6FragmentsCreatedPerSec.setStatus("current")
_IpV6FragmentsReassembledPerSec_Type = Gauge32
_IpV6FragmentsReassembledPerSec_Object = MibScalar
ipV6FragmentsReassembledPerSec = _IpV6FragmentsReassembledPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 16),
    _IpV6FragmentsReassembledPerSec_Type()
)
ipV6FragmentsReassembledPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6FragmentsReassembledPerSec.setStatus("current")
_IpV6FragmentsRcvdPerSec_Type = Gauge32
_IpV6FragmentsRcvdPerSec_Object = MibScalar
ipV6FragmentsRcvdPerSec = _IpV6FragmentsRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 17),
    _IpV6FragmentsRcvdPerSec_Type()
)
ipV6FragmentsRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipV6FragmentsRcvdPerSec.setStatus("current")
_IpSecV4Driver_ObjectIdentity = ObjectIdentity
ipSecV4Driver = _IpSecV4Driver_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40)
)
_Is4dActiveSecurityAssociations_Type = Gauge32
_Is4dActiveSecurityAssociations_Object = MibScalar
is4dActiveSecurityAssociations = _Is4dActiveSecurityAssociations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 1),
    _Is4dActiveSecurityAssociations_Type()
)
is4dActiveSecurityAssociations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dActiveSecurityAssociations.setStatus("current")
_Is4dOffloadedSecurityAssociation_Type = Gauge32
_Is4dOffloadedSecurityAssociation_Object = MibScalar
is4dOffloadedSecurityAssociation = _Is4dOffloadedSecurityAssociation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 2),
    _Is4dOffloadedSecurityAssociation_Type()
)
is4dOffloadedSecurityAssociation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dOffloadedSecurityAssociation.setStatus("current")
_Is4dPendingKeyExchangeOperations_Type = Gauge32
_Is4dPendingKeyExchangeOperations_Object = MibScalar
is4dPendingKeyExchangeOperations = _Is4dPendingKeyExchangeOperations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 3),
    _Is4dPendingKeyExchangeOperations_Type()
)
is4dPendingKeyExchangeOperations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dPendingKeyExchangeOperations.setStatus("current")
_Is4dTotalBadSPIPackets_Type = Gauge32
_Is4dTotalBadSPIPackets_Object = MibScalar
is4dTotalBadSPIPackets = _Is4dTotalBadSPIPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 4),
    _Is4dTotalBadSPIPackets_Type()
)
is4dTotalBadSPIPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalBadSPIPackets.setStatus("current")
_Is4dTotalBytesReceivedInTunnels_Type = Gauge32
_Is4dTotalBytesReceivedInTunnels_Object = MibScalar
is4dTotalBytesReceivedInTunnels = _Is4dTotalBytesReceivedInTunnels_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 5),
    _Is4dTotalBytesReceivedInTunnels_Type()
)
is4dTotalBytesReceivedInTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalBytesReceivedInTunnels.setStatus("current")
_Is4dTotalBytesSentInTunnels_Type = Gauge32
_Is4dTotalBytesSentInTunnels_Object = MibScalar
is4dTotalBytesSentInTunnels = _Is4dTotalBytesSentInTunnels_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 6),
    _Is4dTotalBytesSentInTunnels_Type()
)
is4dTotalBytesSentInTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalBytesSentInTunnels.setStatus("current")
_Is4dTotalOffloadedBytesReceived_Type = Gauge32
_Is4dTotalOffloadedBytesReceived_Object = MibScalar
is4dTotalOffloadedBytesReceived = _Is4dTotalOffloadedBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 7),
    _Is4dTotalOffloadedBytesReceived_Type()
)
is4dTotalOffloadedBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalOffloadedBytesReceived.setStatus("current")
_Is4dTotalOffloadedBytesSent_Type = Gauge32
_Is4dTotalOffloadedBytesSent_Object = MibScalar
is4dTotalOffloadedBytesSent = _Is4dTotalOffloadedBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 8),
    _Is4dTotalOffloadedBytesSent_Type()
)
is4dTotalOffloadedBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalOffloadedBytesSent.setStatus("current")
_Is4dTotalPktsFailReplayDetection_Type = Gauge32
_Is4dTotalPktsFailReplayDetection_Object = MibScalar
is4dTotalPktsFailReplayDetection = _Is4dTotalPktsFailReplayDetection_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 9),
    _Is4dTotalPktsFailReplayDetection_Type()
)
is4dTotalPktsFailReplayDetection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalPktsFailReplayDetection.setStatus("current")
_Is4dTotalPktsNotAuthenticated_Type = Gauge32
_Is4dTotalPktsNotAuthenticated_Object = MibScalar
is4dTotalPktsNotAuthenticated = _Is4dTotalPktsNotAuthenticated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 10),
    _Is4dTotalPktsNotAuthenticated_Type()
)
is4dTotalPktsNotAuthenticated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalPktsNotAuthenticated.setStatus("current")
_Is4dTotalPktsNotDecrypted_Type = Gauge32
_Is4dTotalPktsNotDecrypted_Object = MibScalar
is4dTotalPktsNotDecrypted = _Is4dTotalPktsNotDecrypted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 11),
    _Is4dTotalPktsNotDecrypted_Type()
)
is4dTotalPktsNotDecrypted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalPktsNotDecrypted.setStatus("current")
_Is4dTotalSARekeys_Type = Gauge32
_Is4dTotalSARekeys_Object = MibScalar
is4dTotalSARekeys = _Is4dTotalSARekeys_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 12),
    _Is4dTotalSARekeys_Type()
)
is4dTotalSARekeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalSARekeys.setStatus("current")
_Is4dTotalTransportBytesReceived_Type = Gauge32
_Is4dTotalTransportBytesReceived_Object = MibScalar
is4dTotalTransportBytesReceived = _Is4dTotalTransportBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 13),
    _Is4dTotalTransportBytesReceived_Type()
)
is4dTotalTransportBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalTransportBytesReceived.setStatus("current")
_Is4dTotalTransportBytesSent_Type = Gauge32
_Is4dTotalTransportBytesSent_Object = MibScalar
is4dTotalTransportBytesSent = _Is4dTotalTransportBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 14),
    _Is4dTotalTransportBytesSent_Type()
)
is4dTotalTransportBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4dTotalTransportBytesSent.setStatus("current")
_IpSecV4IKE_ObjectIdentity = ObjectIdentity
ipSecV4IKE = _IpSecV4IKE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41)
)
if mibBuilder.loadTexts:
    ipSecV4IKE.setStatus("current")
_Is4iAcquireHeapSize_Type = Gauge32
_Is4iAcquireHeapSize_Object = MibScalar
is4iAcquireHeapSize = _Is4iAcquireHeapSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 1),
    _Is4iAcquireHeapSize_Type()
)
is4iAcquireHeapSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iAcquireHeapSize.setStatus("current")
_Is4iMainModeSAListEntries_Type = Gauge32
_Is4iMainModeSAListEntries_Object = MibScalar
is4iMainModeSAListEntries = _Is4iMainModeSAListEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 2),
    _Is4iMainModeSAListEntries_Type()
)
is4iMainModeSAListEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iMainModeSAListEntries.setStatus("current")
_Is4iQuickModeSAListEntries_Type = Gauge32
_Is4iQuickModeSAListEntries_Object = MibScalar
is4iQuickModeSAListEntries = _Is4iQuickModeSAListEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 3),
    _Is4iQuickModeSAListEntries_Type()
)
is4iQuickModeSAListEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iQuickModeSAListEntries.setStatus("current")
_Is4iReceiveHeapSize_Type = Gauge32
_Is4iReceiveHeapSize_Object = MibScalar
is4iReceiveHeapSize = _Is4iReceiveHeapSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 4),
    _Is4iReceiveHeapSize_Type()
)
is4iReceiveHeapSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iReceiveHeapSize.setStatus("current")
_Is4iTotalAuthenticationFailures_Type = Gauge32
_Is4iTotalAuthenticationFailures_Object = MibScalar
is4iTotalAuthenticationFailures = _Is4iTotalAuthenticationFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 5),
    _Is4iTotalAuthenticationFailures_Type()
)
is4iTotalAuthenticationFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iTotalAuthenticationFailures.setStatus("current")
_Is4iTotalMainModeSAs_Type = Gauge32
_Is4iTotalMainModeSAs_Object = MibScalar
is4iTotalMainModeSAs = _Is4iTotalMainModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 6),
    _Is4iTotalMainModeSAs_Type()
)
is4iTotalMainModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iTotalMainModeSAs.setStatus("current")
_Is4iTotalNegotiationFailures_Type = Gauge32
_Is4iTotalNegotiationFailures_Object = MibScalar
is4iTotalNegotiationFailures = _Is4iTotalNegotiationFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 7),
    _Is4iTotalNegotiationFailures_Type()
)
is4iTotalNegotiationFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iTotalNegotiationFailures.setStatus("current")
_Is4iTotalQuickModeSAs_Type = Gauge32
_Is4iTotalQuickModeSAs_Object = MibScalar
is4iTotalQuickModeSAs = _Is4iTotalQuickModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 8),
    _Is4iTotalQuickModeSAs_Type()
)
is4iTotalQuickModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iTotalQuickModeSAs.setStatus("current")
_Is4iTotalSoftAssociations_Type = Gauge32
_Is4iTotalSoftAssociations_Object = MibScalar
is4iTotalSoftAssociations = _Is4iTotalSoftAssociations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 9),
    _Is4iTotalSoftAssociations_Type()
)
is4iTotalSoftAssociations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    is4iTotalSoftAssociations.setStatus("current")
_JobObjectTable_Object = MibTable
jobObjectTable = _JobObjectTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42)
)
if mibBuilder.loadTexts:
    jobObjectTable.setStatus("current")
_JobObjectEntry_Object = MibTableRow
jobObjectEntry = _JobObjectEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1)
)
jobObjectEntry.setIndexNames(
    (0, "INFORMANT-ADV", "joInstance"),
)
if mibBuilder.loadTexts:
    jobObjectEntry.setStatus("current")
_JoInstance_Type = InstanceName
_JoInstance_Object = MibTableColumn
joInstance = _JoInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 1),
    _JoInstance_Type()
)
joInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joInstance.setStatus("current")
_JoCurrentPercentKernelModeTime_Type = Gauge32
_JoCurrentPercentKernelModeTime_Object = MibTableColumn
joCurrentPercentKernelModeTime = _JoCurrentPercentKernelModeTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 2),
    _JoCurrentPercentKernelModeTime_Type()
)
joCurrentPercentKernelModeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joCurrentPercentKernelModeTime.setStatus("current")
_JoCurrentPercentProcessorTime_Type = Gauge32
_JoCurrentPercentProcessorTime_Object = MibTableColumn
joCurrentPercentProcessorTime = _JoCurrentPercentProcessorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 3),
    _JoCurrentPercentProcessorTime_Type()
)
joCurrentPercentProcessorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joCurrentPercentProcessorTime.setStatus("current")
_JoCurrentPercentUserModeTime_Type = Gauge32
_JoCurrentPercentUserModeTime_Object = MibTableColumn
joCurrentPercentUserModeTime = _JoCurrentPercentUserModeTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 4),
    _JoCurrentPercentUserModeTime_Type()
)
joCurrentPercentUserModeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joCurrentPercentUserModeTime.setStatus("current")
_JoPagesPerSec_Type = Gauge32
_JoPagesPerSec_Object = MibTableColumn
joPagesPerSec = _JoPagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 5),
    _JoPagesPerSec_Type()
)
joPagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joPagesPerSec.setStatus("current")
_JoProcessCountActive_Type = Gauge32
_JoProcessCountActive_Object = MibTableColumn
joProcessCountActive = _JoProcessCountActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 6),
    _JoProcessCountActive_Type()
)
joProcessCountActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joProcessCountActive.setStatus("current")
_JoProcessCountTerminated_Type = Gauge32
_JoProcessCountTerminated_Object = MibTableColumn
joProcessCountTerminated = _JoProcessCountTerminated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 7),
    _JoProcessCountTerminated_Type()
)
joProcessCountTerminated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joProcessCountTerminated.setStatus("current")
_JoProcessCountTotal_Type = Gauge32
_JoProcessCountTotal_Object = MibTableColumn
joProcessCountTotal = _JoProcessCountTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 8),
    _JoProcessCountTotal_Type()
)
joProcessCountTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joProcessCountTotal.setStatus("current")
_JoThisPeriodMSecKernelMode_Type = Gauge32
_JoThisPeriodMSecKernelMode_Object = MibTableColumn
joThisPeriodMSecKernelMode = _JoThisPeriodMSecKernelMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 9),
    _JoThisPeriodMSecKernelMode_Type()
)
joThisPeriodMSecKernelMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joThisPeriodMSecKernelMode.setStatus("current")
_JoThisPeriodMSecProcessor_Type = Gauge32
_JoThisPeriodMSecProcessor_Object = MibTableColumn
joThisPeriodMSecProcessor = _JoThisPeriodMSecProcessor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 10),
    _JoThisPeriodMSecProcessor_Type()
)
joThisPeriodMSecProcessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joThisPeriodMSecProcessor.setStatus("current")
_JoThisPeriodMSecUserMode_Type = Gauge32
_JoThisPeriodMSecUserMode_Object = MibTableColumn
joThisPeriodMSecUserMode = _JoThisPeriodMSecUserMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 11),
    _JoThisPeriodMSecUserMode_Type()
)
joThisPeriodMSecUserMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joThisPeriodMSecUserMode.setStatus("current")
_JoTotalMSecKernelMode_Type = Gauge32
_JoTotalMSecKernelMode_Object = MibTableColumn
joTotalMSecKernelMode = _JoTotalMSecKernelMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 12),
    _JoTotalMSecKernelMode_Type()
)
joTotalMSecKernelMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joTotalMSecKernelMode.setStatus("current")
_JoTotalMSecProcessor_Type = Gauge32
_JoTotalMSecProcessor_Object = MibTableColumn
joTotalMSecProcessor = _JoTotalMSecProcessor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 13),
    _JoTotalMSecProcessor_Type()
)
joTotalMSecProcessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joTotalMSecProcessor.setStatus("current")
_JoTotalMSecUserMode_Type = Gauge32
_JoTotalMSecUserMode_Object = MibTableColumn
joTotalMSecUserMode = _JoTotalMSecUserMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 14),
    _JoTotalMSecUserMode_Type()
)
joTotalMSecUserMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joTotalMSecUserMode.setStatus("current")
_JobObjectDetailsTable_Object = MibTable
jobObjectDetailsTable = _JobObjectDetailsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43)
)
if mibBuilder.loadTexts:
    jobObjectDetailsTable.setStatus("current")
_JobObjectDetailsEntry_Object = MibTableRow
jobObjectDetailsEntry = _JobObjectDetailsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1)
)
jobObjectDetailsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "jodInstance"),
)
if mibBuilder.loadTexts:
    jobObjectDetailsEntry.setStatus("current")
_JodInstance_Type = InstanceName
_JodInstance_Object = MibTableColumn
jodInstance = _JodInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 1),
    _JodInstance_Type()
)
jodInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodInstance.setStatus("current")
_JodPercentPrivilegedTime_Type = Gauge32
_JodPercentPrivilegedTime_Object = MibTableColumn
jodPercentPrivilegedTime = _JodPercentPrivilegedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 2),
    _JodPercentPrivilegedTime_Type()
)
jodPercentPrivilegedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPercentPrivilegedTime.setStatus("current")
_JodPercentProcessorTime_Type = Gauge32
_JodPercentProcessorTime_Object = MibTableColumn
jodPercentProcessorTime = _JodPercentProcessorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 3),
    _JodPercentProcessorTime_Type()
)
jodPercentProcessorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPercentProcessorTime.setStatus("current")
_JodPercentUserTime_Type = Gauge32
_JodPercentUserTime_Object = MibTableColumn
jodPercentUserTime = _JodPercentUserTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 4),
    _JodPercentUserTime_Type()
)
jodPercentUserTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPercentUserTime.setStatus("current")
_JodCreatingProcessID_Type = Gauge32
_JodCreatingProcessID_Object = MibTableColumn
jodCreatingProcessID = _JodCreatingProcessID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 5),
    _JodCreatingProcessID_Type()
)
jodCreatingProcessID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodCreatingProcessID.setStatus("current")
_JodElapsedTime_Type = Gauge32
_JodElapsedTime_Object = MibTableColumn
jodElapsedTime = _JodElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 6),
    _JodElapsedTime_Type()
)
jodElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodElapsedTime.setStatus("current")
_JodHandleCount_Type = Gauge32
_JodHandleCount_Object = MibTableColumn
jodHandleCount = _JodHandleCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 7),
    _JodHandleCount_Type()
)
jodHandleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodHandleCount.setStatus("current")
_JodIDProcess_Type = Gauge32
_JodIDProcess_Object = MibTableColumn
jodIDProcess = _JodIDProcess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 8),
    _JodIDProcess_Type()
)
jodIDProcess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIDProcess.setStatus("current")
_JodIODataBytesPerSec_Type = Gauge32
_JodIODataBytesPerSec_Object = MibTableColumn
jodIODataBytesPerSec = _JodIODataBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 9),
    _JodIODataBytesPerSec_Type()
)
jodIODataBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIODataBytesPerSec.setStatus("current")
_JodIODataOperationsPerSec_Type = Gauge32
_JodIODataOperationsPerSec_Object = MibTableColumn
jodIODataOperationsPerSec = _JodIODataOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 10),
    _JodIODataOperationsPerSec_Type()
)
jodIODataOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIODataOperationsPerSec.setStatus("current")
_JodIOOtherBytesPerSec_Type = Gauge32
_JodIOOtherBytesPerSec_Object = MibTableColumn
jodIOOtherBytesPerSec = _JodIOOtherBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 11),
    _JodIOOtherBytesPerSec_Type()
)
jodIOOtherBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIOOtherBytesPerSec.setStatus("current")
_JodIOOtherOperationsPerSec_Type = Gauge32
_JodIOOtherOperationsPerSec_Object = MibTableColumn
jodIOOtherOperationsPerSec = _JodIOOtherOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 12),
    _JodIOOtherOperationsPerSec_Type()
)
jodIOOtherOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIOOtherOperationsPerSec.setStatus("current")
_JodIOReadBytesPerSec_Type = Gauge32
_JodIOReadBytesPerSec_Object = MibTableColumn
jodIOReadBytesPerSec = _JodIOReadBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 13),
    _JodIOReadBytesPerSec_Type()
)
jodIOReadBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIOReadBytesPerSec.setStatus("current")
_JodIOReadOperationsPerSec_Type = Gauge32
_JodIOReadOperationsPerSec_Object = MibTableColumn
jodIOReadOperationsPerSec = _JodIOReadOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 14),
    _JodIOReadOperationsPerSec_Type()
)
jodIOReadOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIOReadOperationsPerSec.setStatus("current")
_JodIOWriteBytesPerSec_Type = Gauge32
_JodIOWriteBytesPerSec_Object = MibTableColumn
jodIOWriteBytesPerSec = _JodIOWriteBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 15),
    _JodIOWriteBytesPerSec_Type()
)
jodIOWriteBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIOWriteBytesPerSec.setStatus("current")
_JodIOWriteOperationsPerSec_Type = Gauge32
_JodIOWriteOperationsPerSec_Object = MibTableColumn
jodIOWriteOperationsPerSec = _JodIOWriteOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 16),
    _JodIOWriteOperationsPerSec_Type()
)
jodIOWriteOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodIOWriteOperationsPerSec.setStatus("current")
_JodPageFaultsPerSec_Type = Gauge32
_JodPageFaultsPerSec_Object = MibTableColumn
jodPageFaultsPerSec = _JodPageFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 17),
    _JodPageFaultsPerSec_Type()
)
jodPageFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPageFaultsPerSec.setStatus("current")
_JodPageFileBytes_Type = Gauge32
_JodPageFileBytes_Object = MibTableColumn
jodPageFileBytes = _JodPageFileBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 18),
    _JodPageFileBytes_Type()
)
jodPageFileBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPageFileBytes.setStatus("current")
_JodPageFileBytesPeak_Type = Gauge32
_JodPageFileBytesPeak_Object = MibTableColumn
jodPageFileBytesPeak = _JodPageFileBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 19),
    _JodPageFileBytesPeak_Type()
)
jodPageFileBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPageFileBytesPeak.setStatus("current")
_JodPoolNonpagedBytes_Type = Gauge32
_JodPoolNonpagedBytes_Object = MibTableColumn
jodPoolNonpagedBytes = _JodPoolNonpagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 20),
    _JodPoolNonpagedBytes_Type()
)
jodPoolNonpagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPoolNonpagedBytes.setStatus("current")
_JodPoolPagedBytes_Type = Gauge32
_JodPoolPagedBytes_Object = MibTableColumn
jodPoolPagedBytes = _JodPoolPagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 21),
    _JodPoolPagedBytes_Type()
)
jodPoolPagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPoolPagedBytes.setStatus("current")
_JodPriorityBase_Type = Gauge32
_JodPriorityBase_Object = MibTableColumn
jodPriorityBase = _JodPriorityBase_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 22),
    _JodPriorityBase_Type()
)
jodPriorityBase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPriorityBase.setStatus("current")
_JodPrivateBytes_Type = Gauge32
_JodPrivateBytes_Object = MibTableColumn
jodPrivateBytes = _JodPrivateBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 23),
    _JodPrivateBytes_Type()
)
jodPrivateBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodPrivateBytes.setStatus("current")
_JodThreadCount_Type = Gauge32
_JodThreadCount_Object = MibTableColumn
jodThreadCount = _JodThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 24),
    _JodThreadCount_Type()
)
jodThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodThreadCount.setStatus("current")
_JodVirtualBytes_Type = Gauge32
_JodVirtualBytes_Object = MibTableColumn
jodVirtualBytes = _JodVirtualBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 25),
    _JodVirtualBytes_Type()
)
jodVirtualBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodVirtualBytes.setStatus("current")
_JodVirtualBytesPeak_Type = Gauge32
_JodVirtualBytesPeak_Object = MibTableColumn
jodVirtualBytesPeak = _JodVirtualBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 26),
    _JodVirtualBytesPeak_Type()
)
jodVirtualBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodVirtualBytesPeak.setStatus("current")
_JodWorkingSet_Type = Gauge32
_JodWorkingSet_Object = MibTableColumn
jodWorkingSet = _JodWorkingSet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 27),
    _JodWorkingSet_Type()
)
jodWorkingSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodWorkingSet.setStatus("current")
_JodWorkingSetPeak_Type = Gauge32
_JodWorkingSetPeak_Object = MibTableColumn
jodWorkingSetPeak = _JodWorkingSetPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 28),
    _JodWorkingSetPeak_Type()
)
jodWorkingSetPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jodWorkingSetPeak.setStatus("current")
_LogicalDiskTable_Object = MibTable
logicalDiskTable = _LogicalDiskTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44)
)
if mibBuilder.loadTexts:
    logicalDiskTable.setStatus("current")
_LogicalDiskEntry_Object = MibTableRow
logicalDiskEntry = _LogicalDiskEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1)
)
logicalDiskEntry.setIndexNames(
    (0, "INFORMANT-ADV", "lDiskInstance"),
)
if mibBuilder.loadTexts:
    logicalDiskEntry.setStatus("current")
_LDiskInstance_Type = InstanceName
_LDiskInstance_Object = MibTableColumn
lDiskInstance = _LDiskInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 1),
    _LDiskInstance_Type()
)
lDiskInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskInstance.setStatus("current")
_LDiskPercentDiskReadTime_Type = Gauge32
_LDiskPercentDiskReadTime_Object = MibTableColumn
lDiskPercentDiskReadTime = _LDiskPercentDiskReadTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 2),
    _LDiskPercentDiskReadTime_Type()
)
lDiskPercentDiskReadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskPercentDiskReadTime.setStatus("current")
_LDiskPercentDiskTime_Type = Gauge32
_LDiskPercentDiskTime_Object = MibTableColumn
lDiskPercentDiskTime = _LDiskPercentDiskTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 3),
    _LDiskPercentDiskTime_Type()
)
lDiskPercentDiskTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskPercentDiskTime.setStatus("current")
_LDiskPercentDiskWriteTime_Type = Gauge32
_LDiskPercentDiskWriteTime_Object = MibTableColumn
lDiskPercentDiskWriteTime = _LDiskPercentDiskWriteTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 4),
    _LDiskPercentDiskWriteTime_Type()
)
lDiskPercentDiskWriteTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskPercentDiskWriteTime.setStatus("current")
_LDiskPercentFreeSpace_Type = Gauge32
_LDiskPercentFreeSpace_Object = MibTableColumn
lDiskPercentFreeSpace = _LDiskPercentFreeSpace_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 5),
    _LDiskPercentFreeSpace_Type()
)
lDiskPercentFreeSpace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskPercentFreeSpace.setStatus("current")
_LDiskPercentIdleTime_Type = Gauge32
_LDiskPercentIdleTime_Object = MibTableColumn
lDiskPercentIdleTime = _LDiskPercentIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 6),
    _LDiskPercentIdleTime_Type()
)
lDiskPercentIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskPercentIdleTime.setStatus("current")
_LDiskAvgDiskBytesPerRead_Type = Gauge32
_LDiskAvgDiskBytesPerRead_Object = MibTableColumn
lDiskAvgDiskBytesPerRead = _LDiskAvgDiskBytesPerRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 7),
    _LDiskAvgDiskBytesPerRead_Type()
)
lDiskAvgDiskBytesPerRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskBytesPerRead.setStatus("current")
_LDiskAvgDiskBytesPerTransfer_Type = Gauge32
_LDiskAvgDiskBytesPerTransfer_Object = MibTableColumn
lDiskAvgDiskBytesPerTransfer = _LDiskAvgDiskBytesPerTransfer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 8),
    _LDiskAvgDiskBytesPerTransfer_Type()
)
lDiskAvgDiskBytesPerTransfer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskBytesPerTransfer.setStatus("current")
_LDiskAvgDiskBytesPerWrite_Type = Gauge32
_LDiskAvgDiskBytesPerWrite_Object = MibTableColumn
lDiskAvgDiskBytesPerWrite = _LDiskAvgDiskBytesPerWrite_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 9),
    _LDiskAvgDiskBytesPerWrite_Type()
)
lDiskAvgDiskBytesPerWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskBytesPerWrite.setStatus("current")
_LDiskAvgDiskQueueLength_Type = Gauge32
_LDiskAvgDiskQueueLength_Object = MibTableColumn
lDiskAvgDiskQueueLength = _LDiskAvgDiskQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 10),
    _LDiskAvgDiskQueueLength_Type()
)
lDiskAvgDiskQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskQueueLength.setStatus("current")
_LDiskAvgDiskReadQueueLength_Type = Gauge32
_LDiskAvgDiskReadQueueLength_Object = MibTableColumn
lDiskAvgDiskReadQueueLength = _LDiskAvgDiskReadQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 11),
    _LDiskAvgDiskReadQueueLength_Type()
)
lDiskAvgDiskReadQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskReadQueueLength.setStatus("current")
_LDiskAvgDiskWriteQueueLength_Type = Gauge32
_LDiskAvgDiskWriteQueueLength_Object = MibTableColumn
lDiskAvgDiskWriteQueueLength = _LDiskAvgDiskWriteQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 12),
    _LDiskAvgDiskWriteQueueLength_Type()
)
lDiskAvgDiskWriteQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskWriteQueueLength.setStatus("current")
_LDiskAvgDiskSecPerRead_Type = Gauge32
_LDiskAvgDiskSecPerRead_Object = MibTableColumn
lDiskAvgDiskSecPerRead = _LDiskAvgDiskSecPerRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 13),
    _LDiskAvgDiskSecPerRead_Type()
)
lDiskAvgDiskSecPerRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskSecPerRead.setStatus("current")
_LDiskAvgDiskSecPerTransfer_Type = Gauge32
_LDiskAvgDiskSecPerTransfer_Object = MibTableColumn
lDiskAvgDiskSecPerTransfer = _LDiskAvgDiskSecPerTransfer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 14),
    _LDiskAvgDiskSecPerTransfer_Type()
)
lDiskAvgDiskSecPerTransfer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskSecPerTransfer.setStatus("current")
_LDiskAvgDiskSecPerWrite_Type = Gauge32
_LDiskAvgDiskSecPerWrite_Object = MibTableColumn
lDiskAvgDiskSecPerWrite = _LDiskAvgDiskSecPerWrite_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 15),
    _LDiskAvgDiskSecPerWrite_Type()
)
lDiskAvgDiskSecPerWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskAvgDiskSecPerWrite.setStatus("current")
_LDiskCurrentDiskQueueLength_Type = Gauge32
_LDiskCurrentDiskQueueLength_Object = MibTableColumn
lDiskCurrentDiskQueueLength = _LDiskCurrentDiskQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 16),
    _LDiskCurrentDiskQueueLength_Type()
)
lDiskCurrentDiskQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskCurrentDiskQueueLength.setStatus("current")
_LDiskDiskBytesPerSec_Type = Gauge32
_LDiskDiskBytesPerSec_Object = MibTableColumn
lDiskDiskBytesPerSec = _LDiskDiskBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 17),
    _LDiskDiskBytesPerSec_Type()
)
lDiskDiskBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskDiskBytesPerSec.setStatus("current")
_LDiskDiskReadBytesPerSec_Type = Gauge32
_LDiskDiskReadBytesPerSec_Object = MibTableColumn
lDiskDiskReadBytesPerSec = _LDiskDiskReadBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 18),
    _LDiskDiskReadBytesPerSec_Type()
)
lDiskDiskReadBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskDiskReadBytesPerSec.setStatus("current")
_LDiskDiskReadsPerSec_Type = Gauge32
_LDiskDiskReadsPerSec_Object = MibTableColumn
lDiskDiskReadsPerSec = _LDiskDiskReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 19),
    _LDiskDiskReadsPerSec_Type()
)
lDiskDiskReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskDiskReadsPerSec.setStatus("current")
_LDiskDiskTransfersPerSec_Type = Gauge32
_LDiskDiskTransfersPerSec_Object = MibTableColumn
lDiskDiskTransfersPerSec = _LDiskDiskTransfersPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 20),
    _LDiskDiskTransfersPerSec_Type()
)
lDiskDiskTransfersPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskDiskTransfersPerSec.setStatus("current")
_LDiskDiskWriteBytesPerSec_Type = Gauge32
_LDiskDiskWriteBytesPerSec_Object = MibTableColumn
lDiskDiskWriteBytesPerSec = _LDiskDiskWriteBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 21),
    _LDiskDiskWriteBytesPerSec_Type()
)
lDiskDiskWriteBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskDiskWriteBytesPerSec.setStatus("current")
_LDiskDiskWritesPerSec_Type = Gauge32
_LDiskDiskWritesPerSec_Object = MibTableColumn
lDiskDiskWritesPerSec = _LDiskDiskWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 22),
    _LDiskDiskWritesPerSec_Type()
)
lDiskDiskWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskDiskWritesPerSec.setStatus("current")
_LDiskFreeMegabytes_Type = Gauge32
_LDiskFreeMegabytes_Object = MibTableColumn
lDiskFreeMegabytes = _LDiskFreeMegabytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 23),
    _LDiskFreeMegabytes_Type()
)
lDiskFreeMegabytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskFreeMegabytes.setStatus("current")
_LDiskSplitIOPerSec_Type = Gauge32
_LDiskSplitIOPerSec_Object = MibTableColumn
lDiskSplitIOPerSec = _LDiskSplitIOPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 24),
    _LDiskSplitIOPerSec_Type()
)
lDiskSplitIOPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lDiskSplitIOPerSec.setStatus("current")
_MacFileServer_ObjectIdentity = ObjectIdentity
macFileServer = _MacFileServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45)
)
if mibBuilder.loadTexts:
    macFileServer.setStatus("current")
_MfsCurrentFilesOpen_Type = Gauge32
_MfsCurrentFilesOpen_Object = MibScalar
mfsCurrentFilesOpen = _MfsCurrentFilesOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 1),
    _MfsCurrentFilesOpen_Type()
)
mfsCurrentFilesOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsCurrentFilesOpen.setStatus("current")
_MfsCurrentNonPagedMemory_Type = Gauge32
_MfsCurrentNonPagedMemory_Object = MibScalar
mfsCurrentNonPagedMemory = _MfsCurrentNonPagedMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 2),
    _MfsCurrentNonPagedMemory_Type()
)
mfsCurrentNonPagedMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsCurrentNonPagedMemory.setStatus("current")
_MfsCurrentPagedMemory_Type = Gauge32
_MfsCurrentPagedMemory_Object = MibScalar
mfsCurrentPagedMemory = _MfsCurrentPagedMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 3),
    _MfsCurrentPagedMemory_Type()
)
mfsCurrentPagedMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsCurrentPagedMemory.setStatus("current")
_MfsCurrentQueueLength_Type = Gauge32
_MfsCurrentQueueLength_Object = MibScalar
mfsCurrentQueueLength = _MfsCurrentQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 4),
    _MfsCurrentQueueLength_Type()
)
mfsCurrentQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsCurrentQueueLength.setStatus("current")
_MfsCurrentSessions_Type = Gauge32
_MfsCurrentSessions_Object = MibScalar
mfsCurrentSessions = _MfsCurrentSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 5),
    _MfsCurrentSessions_Type()
)
mfsCurrentSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsCurrentSessions.setStatus("current")
_MfsCurrentThreads_Type = Gauge32
_MfsCurrentThreads_Object = MibScalar
mfsCurrentThreads = _MfsCurrentThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 6),
    _MfsCurrentThreads_Type()
)
mfsCurrentThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsCurrentThreads.setStatus("current")
_MfsDataReadPerSec_Type = Gauge32
_MfsDataReadPerSec_Object = MibScalar
mfsDataReadPerSec = _MfsDataReadPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 7),
    _MfsDataReadPerSec_Type()
)
mfsDataReadPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsDataReadPerSec.setStatus("current")
_MfsDataReceivedPerSec_Type = Gauge32
_MfsDataReceivedPerSec_Object = MibScalar
mfsDataReceivedPerSec = _MfsDataReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 8),
    _MfsDataReceivedPerSec_Type()
)
mfsDataReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsDataReceivedPerSec.setStatus("current")
_MfsDataTransmittedPerSec_Type = Gauge32
_MfsDataTransmittedPerSec_Object = MibScalar
mfsDataTransmittedPerSec = _MfsDataTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 9),
    _MfsDataTransmittedPerSec_Type()
)
mfsDataTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsDataTransmittedPerSec.setStatus("current")
_MfsDataWrittenPerSec_Type = Gauge32
_MfsDataWrittenPerSec_Object = MibScalar
mfsDataWrittenPerSec = _MfsDataWrittenPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 10),
    _MfsDataWrittenPerSec_Type()
)
mfsDataWrittenPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsDataWrittenPerSec.setStatus("current")
_MfsFailedLogons_Type = Gauge32
_MfsFailedLogons_Object = MibScalar
mfsFailedLogons = _MfsFailedLogons_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 11),
    _MfsFailedLogons_Type()
)
mfsFailedLogons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsFailedLogons.setStatus("current")
_MfsMaxNonPagedMemory_Type = Gauge32
_MfsMaxNonPagedMemory_Object = MibScalar
mfsMaxNonPagedMemory = _MfsMaxNonPagedMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 12),
    _MfsMaxNonPagedMemory_Type()
)
mfsMaxNonPagedMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsMaxNonPagedMemory.setStatus("current")
_MfsMaxPagedMemory_Type = Gauge32
_MfsMaxPagedMemory_Object = MibScalar
mfsMaxPagedMemory = _MfsMaxPagedMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 13),
    _MfsMaxPagedMemory_Type()
)
mfsMaxPagedMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsMaxPagedMemory.setStatus("current")
_MfsMaximumFilesOpen_Type = Gauge32
_MfsMaximumFilesOpen_Object = MibScalar
mfsMaximumFilesOpen = _MfsMaximumFilesOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 14),
    _MfsMaximumFilesOpen_Type()
)
mfsMaximumFilesOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsMaximumFilesOpen.setStatus("current")
_MfsMaximumQueueLength_Type = Gauge32
_MfsMaximumQueueLength_Object = MibScalar
mfsMaximumQueueLength = _MfsMaximumQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 15),
    _MfsMaximumQueueLength_Type()
)
mfsMaximumQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsMaximumQueueLength.setStatus("current")
_MfsMaximumSessions_Type = Gauge32
_MfsMaximumSessions_Object = MibScalar
mfsMaximumSessions = _MfsMaximumSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 16),
    _MfsMaximumSessions_Type()
)
mfsMaximumSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsMaximumSessions.setStatus("current")
_MfsMaximumThreads_Type = Gauge32
_MfsMaximumThreads_Object = MibScalar
mfsMaximumThreads = _MfsMaximumThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 17),
    _MfsMaximumThreads_Type()
)
mfsMaximumThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mfsMaximumThreads.setStatus("current")
_Memory_ObjectIdentity = ObjectIdentity
memory = _Memory_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46)
)
if mibBuilder.loadTexts:
    memory.setStatus("current")
_MemoryPercentCommittedBytesInUse_Type = Gauge32
_MemoryPercentCommittedBytesInUse_Object = MibScalar
memoryPercentCommittedBytesInUse = _MemoryPercentCommittedBytesInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 1),
    _MemoryPercentCommittedBytesInUse_Type()
)
memoryPercentCommittedBytesInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPercentCommittedBytesInUse.setStatus("current")
_MemoryAvailableBytes_Type = Gauge32
_MemoryAvailableBytes_Object = MibScalar
memoryAvailableBytes = _MemoryAvailableBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 2),
    _MemoryAvailableBytes_Type()
)
memoryAvailableBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryAvailableBytes.setStatus("current")
_MemoryAvailableKBytes_Type = Gauge32
_MemoryAvailableKBytes_Object = MibScalar
memoryAvailableKBytes = _MemoryAvailableKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 3),
    _MemoryAvailableKBytes_Type()
)
memoryAvailableKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryAvailableKBytes.setStatus("current")
_MemoryAvailableMBytes_Type = Gauge32
_MemoryAvailableMBytes_Object = MibScalar
memoryAvailableMBytes = _MemoryAvailableMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 4),
    _MemoryAvailableMBytes_Type()
)
memoryAvailableMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryAvailableMBytes.setStatus("current")
_MemoryCacheBytes_Type = Gauge32
_MemoryCacheBytes_Object = MibScalar
memoryCacheBytes = _MemoryCacheBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 5),
    _MemoryCacheBytes_Type()
)
memoryCacheBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheBytes.setStatus("current")
_MemoryCacheBytesPeak_Type = Gauge32
_MemoryCacheBytesPeak_Object = MibScalar
memoryCacheBytesPeak = _MemoryCacheBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 6),
    _MemoryCacheBytesPeak_Type()
)
memoryCacheBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheBytesPeak.setStatus("current")
_MemoryCacheFaultsPerSec_Type = Gauge32
_MemoryCacheFaultsPerSec_Object = MibScalar
memoryCacheFaultsPerSec = _MemoryCacheFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 7),
    _MemoryCacheFaultsPerSec_Type()
)
memoryCacheFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheFaultsPerSec.setStatus("current")
_MemoryCommitLimit_Type = Gauge32
_MemoryCommitLimit_Object = MibScalar
memoryCommitLimit = _MemoryCommitLimit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 8),
    _MemoryCommitLimit_Type()
)
memoryCommitLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCommitLimit.setStatus("current")
_MemoryCommittedBytes_Type = Gauge32
_MemoryCommittedBytes_Object = MibScalar
memoryCommittedBytes = _MemoryCommittedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 9),
    _MemoryCommittedBytes_Type()
)
memoryCommittedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCommittedBytes.setStatus("current")
_MemoryDemandZeroFaultsPerSec_Type = Gauge32
_MemoryDemandZeroFaultsPerSec_Object = MibScalar
memoryDemandZeroFaultsPerSec = _MemoryDemandZeroFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 10),
    _MemoryDemandZeroFaultsPerSec_Type()
)
memoryDemandZeroFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryDemandZeroFaultsPerSec.setStatus("current")
_MemoryFreeSystemPageTableEntries_Type = Gauge32
_MemoryFreeSystemPageTableEntries_Object = MibScalar
memoryFreeSystemPageTableEntries = _MemoryFreeSystemPageTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 11),
    _MemoryFreeSystemPageTableEntries_Type()
)
memoryFreeSystemPageTableEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryFreeSystemPageTableEntries.setStatus("current")
_MemoryPageFaultsPerSec_Type = Gauge32
_MemoryPageFaultsPerSec_Object = MibScalar
memoryPageFaultsPerSec = _MemoryPageFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 12),
    _MemoryPageFaultsPerSec_Type()
)
memoryPageFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPageFaultsPerSec.setStatus("current")
_MemoryPageReadsPerSec_Type = Gauge32
_MemoryPageReadsPerSec_Object = MibScalar
memoryPageReadsPerSec = _MemoryPageReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 13),
    _MemoryPageReadsPerSec_Type()
)
memoryPageReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPageReadsPerSec.setStatus("current")
_MemoryPageWritesPerSec_Type = Gauge32
_MemoryPageWritesPerSec_Object = MibScalar
memoryPageWritesPerSec = _MemoryPageWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 14),
    _MemoryPageWritesPerSec_Type()
)
memoryPageWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPageWritesPerSec.setStatus("current")
_MemoryPagesInputPerSec_Type = Gauge32
_MemoryPagesInputPerSec_Object = MibScalar
memoryPagesInputPerSec = _MemoryPagesInputPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 15),
    _MemoryPagesInputPerSec_Type()
)
memoryPagesInputPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPagesInputPerSec.setStatus("current")
_MemoryPagesOutputPerSec_Type = Gauge32
_MemoryPagesOutputPerSec_Object = MibScalar
memoryPagesOutputPerSec = _MemoryPagesOutputPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 16),
    _MemoryPagesOutputPerSec_Type()
)
memoryPagesOutputPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPagesOutputPerSec.setStatus("current")
_MemoryPagesPerSec_Type = Gauge32
_MemoryPagesPerSec_Object = MibScalar
memoryPagesPerSec = _MemoryPagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 17),
    _MemoryPagesPerSec_Type()
)
memoryPagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPagesPerSec.setStatus("current")
_MemoryPoolNonpagedAllocs_Type = Gauge32
_MemoryPoolNonpagedAllocs_Object = MibScalar
memoryPoolNonpagedAllocs = _MemoryPoolNonpagedAllocs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 18),
    _MemoryPoolNonpagedAllocs_Type()
)
memoryPoolNonpagedAllocs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolNonpagedAllocs.setStatus("current")
_MemoryPoolNonpagedBytes_Type = Gauge32
_MemoryPoolNonpagedBytes_Object = MibScalar
memoryPoolNonpagedBytes = _MemoryPoolNonpagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 19),
    _MemoryPoolNonpagedBytes_Type()
)
memoryPoolNonpagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolNonpagedBytes.setStatus("current")
_MemoryPoolPagedAllocs_Type = Gauge32
_MemoryPoolPagedAllocs_Object = MibScalar
memoryPoolPagedAllocs = _MemoryPoolPagedAllocs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 20),
    _MemoryPoolPagedAllocs_Type()
)
memoryPoolPagedAllocs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedAllocs.setStatus("current")
_MemoryPoolPagedBytes_Type = Gauge32
_MemoryPoolPagedBytes_Object = MibScalar
memoryPoolPagedBytes = _MemoryPoolPagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 21),
    _MemoryPoolPagedBytes_Type()
)
memoryPoolPagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedBytes.setStatus("current")
_MemoryPoolPagedResidentBytes_Type = Gauge32
_MemoryPoolPagedResidentBytes_Object = MibScalar
memoryPoolPagedResidentBytes = _MemoryPoolPagedResidentBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 22),
    _MemoryPoolPagedResidentBytes_Type()
)
memoryPoolPagedResidentBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedResidentBytes.setStatus("current")
_MemorySystemCacheResidentBytes_Type = Gauge32
_MemorySystemCacheResidentBytes_Object = MibScalar
memorySystemCacheResidentBytes = _MemorySystemCacheResidentBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 23),
    _MemorySystemCacheResidentBytes_Type()
)
memorySystemCacheResidentBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCacheResidentBytes.setStatus("current")
_MemorySystemCodeResidentBytes_Type = Gauge32
_MemorySystemCodeResidentBytes_Object = MibScalar
memorySystemCodeResidentBytes = _MemorySystemCodeResidentBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 24),
    _MemorySystemCodeResidentBytes_Type()
)
memorySystemCodeResidentBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCodeResidentBytes.setStatus("current")
_MemorySystemCodeTotalBytes_Type = Gauge32
_MemorySystemCodeTotalBytes_Object = MibScalar
memorySystemCodeTotalBytes = _MemorySystemCodeTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 25),
    _MemorySystemCodeTotalBytes_Type()
)
memorySystemCodeTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCodeTotalBytes.setStatus("current")
_MemorySystemDriverResidentBytes_Type = Gauge32
_MemorySystemDriverResidentBytes_Object = MibScalar
memorySystemDriverResidentBytes = _MemorySystemDriverResidentBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 26),
    _MemorySystemDriverResidentBytes_Type()
)
memorySystemDriverResidentBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemDriverResidentBytes.setStatus("current")
_MemorySystemDriverTotalBytes_Type = Gauge32
_MemorySystemDriverTotalBytes_Object = MibScalar
memorySystemDriverTotalBytes = _MemorySystemDriverTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 27),
    _MemorySystemDriverTotalBytes_Type()
)
memorySystemDriverTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemDriverTotalBytes.setStatus("current")
_MemoryTranFaultsPerSec_Type = Gauge32
_MemoryTranFaultsPerSec_Object = MibScalar
memoryTranFaultsPerSec = _MemoryTranFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 28),
    _MemoryTranFaultsPerSec_Type()
)
memoryTranFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryTranFaultsPerSec.setStatus("current")
_MemoryTranPagesRePurposedPerSec_Type = Gauge32
_MemoryTranPagesRePurposedPerSec_Object = MibScalar
memoryTranPagesRePurposedPerSec = _MemoryTranPagesRePurposedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 29),
    _MemoryTranPagesRePurposedPerSec_Type()
)
memoryTranPagesRePurposedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryTranPagesRePurposedPerSec.setStatus("current")
_MemoryWriteCopiesPerSec_Type = Gauge32
_MemoryWriteCopiesPerSec_Object = MibScalar
memoryWriteCopiesPerSec = _MemoryWriteCopiesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 30),
    _MemoryWriteCopiesPerSec_Type()
)
memoryWriteCopiesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryWriteCopiesPerSec.setStatus("current")
_MemoryCacheKBytes_Type = Gauge32
_MemoryCacheKBytes_Object = MibScalar
memoryCacheKBytes = _MemoryCacheKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 31),
    _MemoryCacheKBytes_Type()
)
memoryCacheKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheKBytes.setStatus("current")
_MemoryCacheKBytesPeak_Type = Gauge32
_MemoryCacheKBytesPeak_Object = MibScalar
memoryCacheKBytesPeak = _MemoryCacheKBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 32),
    _MemoryCacheKBytesPeak_Type()
)
memoryCacheKBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheKBytesPeak.setStatus("current")
_MemoryCommittedKBytes_Type = Gauge32
_MemoryCommittedKBytes_Object = MibScalar
memoryCommittedKBytes = _MemoryCommittedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 33),
    _MemoryCommittedKBytes_Type()
)
memoryCommittedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCommittedKBytes.setStatus("current")
_MemoryPoolNonpagedKBytes_Type = Gauge32
_MemoryPoolNonpagedKBytes_Object = MibScalar
memoryPoolNonpagedKBytes = _MemoryPoolNonpagedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 34),
    _MemoryPoolNonpagedKBytes_Type()
)
memoryPoolNonpagedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolNonpagedKBytes.setStatus("current")
_MemoryPoolPagedKBytes_Type = Gauge32
_MemoryPoolPagedKBytes_Object = MibScalar
memoryPoolPagedKBytes = _MemoryPoolPagedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 35),
    _MemoryPoolPagedKBytes_Type()
)
memoryPoolPagedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedKBytes.setStatus("current")
_MemoryPoolPagedResidentKBytes_Type = Gauge32
_MemoryPoolPagedResidentKBytes_Object = MibScalar
memoryPoolPagedResidentKBytes = _MemoryPoolPagedResidentKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 36),
    _MemoryPoolPagedResidentKBytes_Type()
)
memoryPoolPagedResidentKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedResidentKBytes.setStatus("current")
_MemorySystemCacheResidentKBytes_Type = Gauge32
_MemorySystemCacheResidentKBytes_Object = MibScalar
memorySystemCacheResidentKBytes = _MemorySystemCacheResidentKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 37),
    _MemorySystemCacheResidentKBytes_Type()
)
memorySystemCacheResidentKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCacheResidentKBytes.setStatus("current")
_MemorySystemCodeResidentKBytes_Type = Gauge32
_MemorySystemCodeResidentKBytes_Object = MibScalar
memorySystemCodeResidentKBytes = _MemorySystemCodeResidentKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 38),
    _MemorySystemCodeResidentKBytes_Type()
)
memorySystemCodeResidentKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCodeResidentKBytes.setStatus("current")
_MemorySystemCodeTotalKBytes_Type = Gauge32
_MemorySystemCodeTotalKBytes_Object = MibScalar
memorySystemCodeTotalKBytes = _MemorySystemCodeTotalKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 39),
    _MemorySystemCodeTotalKBytes_Type()
)
memorySystemCodeTotalKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCodeTotalKBytes.setStatus("current")
_MemorySystemDriverResidentKBytes_Type = Gauge32
_MemorySystemDriverResidentKBytes_Object = MibScalar
memorySystemDriverResidentKBytes = _MemorySystemDriverResidentKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 40),
    _MemorySystemDriverResidentKBytes_Type()
)
memorySystemDriverResidentKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemDriverResidentKBytes.setStatus("current")
_MemorySystemDriverTotalKBytes_Type = Gauge32
_MemorySystemDriverTotalKBytes_Object = MibScalar
memorySystemDriverTotalKBytes = _MemorySystemDriverTotalKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 41),
    _MemorySystemDriverTotalKBytes_Type()
)
memorySystemDriverTotalKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemDriverTotalKBytes.setStatus("current")
_MemoryCacheMBytes_Type = Gauge32
_MemoryCacheMBytes_Object = MibScalar
memoryCacheMBytes = _MemoryCacheMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 42),
    _MemoryCacheMBytes_Type()
)
memoryCacheMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheMBytes.setStatus("current")
_MemoryCacheMBytesPeak_Type = Gauge32
_MemoryCacheMBytesPeak_Object = MibScalar
memoryCacheMBytesPeak = _MemoryCacheMBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 43),
    _MemoryCacheMBytesPeak_Type()
)
memoryCacheMBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCacheMBytesPeak.setStatus("current")
_MemoryCommittedMBytes_Type = Gauge32
_MemoryCommittedMBytes_Object = MibScalar
memoryCommittedMBytes = _MemoryCommittedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 44),
    _MemoryCommittedMBytes_Type()
)
memoryCommittedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCommittedMBytes.setStatus("current")
_MemoryPoolNonpagedMBytes_Type = Gauge32
_MemoryPoolNonpagedMBytes_Object = MibScalar
memoryPoolNonpagedMBytes = _MemoryPoolNonpagedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 45),
    _MemoryPoolNonpagedMBytes_Type()
)
memoryPoolNonpagedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolNonpagedMBytes.setStatus("current")
_MemoryPoolPagedMBytes_Type = Gauge32
_MemoryPoolPagedMBytes_Object = MibScalar
memoryPoolPagedMBytes = _MemoryPoolPagedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 46),
    _MemoryPoolPagedMBytes_Type()
)
memoryPoolPagedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedMBytes.setStatus("current")
_MemoryPoolPagedResidentMBytes_Type = Gauge32
_MemoryPoolPagedResidentMBytes_Object = MibScalar
memoryPoolPagedResidentMBytes = _MemoryPoolPagedResidentMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 47),
    _MemoryPoolPagedResidentMBytes_Type()
)
memoryPoolPagedResidentMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryPoolPagedResidentMBytes.setStatus("current")
_MemorySystemCacheResidentMBytes_Type = Gauge32
_MemorySystemCacheResidentMBytes_Object = MibScalar
memorySystemCacheResidentMBytes = _MemorySystemCacheResidentMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 48),
    _MemorySystemCacheResidentMBytes_Type()
)
memorySystemCacheResidentMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCacheResidentMBytes.setStatus("current")
_MemorySystemCodeResidentMBytes_Type = Gauge32
_MemorySystemCodeResidentMBytes_Object = MibScalar
memorySystemCodeResidentMBytes = _MemorySystemCodeResidentMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 49),
    _MemorySystemCodeResidentMBytes_Type()
)
memorySystemCodeResidentMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCodeResidentMBytes.setStatus("current")
_MemorySystemCodeTotalMBytes_Type = Gauge32
_MemorySystemCodeTotalMBytes_Object = MibScalar
memorySystemCodeTotalMBytes = _MemorySystemCodeTotalMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 50),
    _MemorySystemCodeTotalMBytes_Type()
)
memorySystemCodeTotalMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemCodeTotalMBytes.setStatus("current")
_MemorySystemDriverResidentMBytes_Type = Gauge32
_MemorySystemDriverResidentMBytes_Object = MibScalar
memorySystemDriverResidentMBytes = _MemorySystemDriverResidentMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 51),
    _MemorySystemDriverResidentMBytes_Type()
)
memorySystemDriverResidentMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemDriverResidentMBytes.setStatus("current")
_MemorySystemDriverTotalMBytes_Type = Gauge32
_MemorySystemDriverTotalMBytes_Object = MibScalar
memorySystemDriverTotalMBytes = _MemorySystemDriverTotalMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 52),
    _MemorySystemDriverTotalMBytes_Type()
)
memorySystemDriverTotalMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memorySystemDriverTotalMBytes.setStatus("current")
_MemoryFreeZeroPageListBytes_Type = Gauge32
_MemoryFreeZeroPageListBytes_Object = MibScalar
memoryFreeZeroPageListBytes = _MemoryFreeZeroPageListBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 53),
    _MemoryFreeZeroPageListBytes_Type()
)
memoryFreeZeroPageListBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryFreeZeroPageListBytes.setStatus("current")
_MemoryFreeZeroPageListKBytes_Type = Gauge32
_MemoryFreeZeroPageListKBytes_Object = MibScalar
memoryFreeZeroPageListKBytes = _MemoryFreeZeroPageListKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 54),
    _MemoryFreeZeroPageListKBytes_Type()
)
memoryFreeZeroPageListKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryFreeZeroPageListKBytes.setStatus("current")
_MemoryFreeZeroPageListMBytes_Type = Gauge32
_MemoryFreeZeroPageListMBytes_Object = MibScalar
memoryFreeZeroPageListMBytes = _MemoryFreeZeroPageListMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 55),
    _MemoryFreeZeroPageListMBytes_Type()
)
memoryFreeZeroPageListMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryFreeZeroPageListMBytes.setStatus("current")
_MemoryModifiedPageListBytes_Type = Gauge32
_MemoryModifiedPageListBytes_Object = MibScalar
memoryModifiedPageListBytes = _MemoryModifiedPageListBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 56),
    _MemoryModifiedPageListBytes_Type()
)
memoryModifiedPageListBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryModifiedPageListBytes.setStatus("current")
_MemoryModifiedPageListKBytes_Type = Gauge32
_MemoryModifiedPageListKBytes_Object = MibScalar
memoryModifiedPageListKBytes = _MemoryModifiedPageListKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 57),
    _MemoryModifiedPageListKBytes_Type()
)
memoryModifiedPageListKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryModifiedPageListKBytes.setStatus("current")
_MemoryModifiedPageListMBytes_Type = Gauge32
_MemoryModifiedPageListMBytes_Object = MibScalar
memoryModifiedPageListMBytes = _MemoryModifiedPageListMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 58),
    _MemoryModifiedPageListMBytes_Type()
)
memoryModifiedPageListMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryModifiedPageListMBytes.setStatus("current")
_MemoryStbyCacheCoreBytes_Type = Gauge32
_MemoryStbyCacheCoreBytes_Object = MibScalar
memoryStbyCacheCoreBytes = _MemoryStbyCacheCoreBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 59),
    _MemoryStbyCacheCoreBytes_Type()
)
memoryStbyCacheCoreBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheCoreBytes.setStatus("current")
_MemoryStbyCacheCoreKBytes_Type = Gauge32
_MemoryStbyCacheCoreKBytes_Object = MibScalar
memoryStbyCacheCoreKBytes = _MemoryStbyCacheCoreKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 60),
    _MemoryStbyCacheCoreKBytes_Type()
)
memoryStbyCacheCoreKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheCoreKBytes.setStatus("current")
_MemoryStbyCacheCoreMBytes_Type = Gauge32
_MemoryStbyCacheCoreMBytes_Object = MibScalar
memoryStbyCacheCoreMBytes = _MemoryStbyCacheCoreMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 61),
    _MemoryStbyCacheCoreMBytes_Type()
)
memoryStbyCacheCoreMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheCoreMBytes.setStatus("current")
_MemoryStbyCacheNormPriorityBytes_Type = Gauge32
_MemoryStbyCacheNormPriorityBytes_Object = MibScalar
memoryStbyCacheNormPriorityBytes = _MemoryStbyCacheNormPriorityBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 62),
    _MemoryStbyCacheNormPriorityBytes_Type()
)
memoryStbyCacheNormPriorityBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheNormPriorityBytes.setStatus("current")
_MemoryStbyCacheNormPriorityKByte_Type = Gauge32
_MemoryStbyCacheNormPriorityKByte_Object = MibScalar
memoryStbyCacheNormPriorityKByte = _MemoryStbyCacheNormPriorityKByte_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 63),
    _MemoryStbyCacheNormPriorityKByte_Type()
)
memoryStbyCacheNormPriorityKByte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheNormPriorityKByte.setStatus("current")
_MemoryStbyCacheNormPriorityMByte_Type = Gauge32
_MemoryStbyCacheNormPriorityMByte_Object = MibScalar
memoryStbyCacheNormPriorityMByte = _MemoryStbyCacheNormPriorityMByte_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 64),
    _MemoryStbyCacheNormPriorityMByte_Type()
)
memoryStbyCacheNormPriorityMByte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheNormPriorityMByte.setStatus("current")
_MemoryStbyCacheReserveBytes_Type = Gauge32
_MemoryStbyCacheReserveBytes_Object = MibScalar
memoryStbyCacheReserveBytes = _MemoryStbyCacheReserveBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 65),
    _MemoryStbyCacheReserveBytes_Type()
)
memoryStbyCacheReserveBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheReserveBytes.setStatus("current")
_MemoryStbyCacheReserveKBytes_Type = Gauge32
_MemoryStbyCacheReserveKBytes_Object = MibScalar
memoryStbyCacheReserveKBytes = _MemoryStbyCacheReserveKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 66),
    _MemoryStbyCacheReserveKBytes_Type()
)
memoryStbyCacheReserveKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheReserveKBytes.setStatus("current")
_MemoryStbyCacheReserveMBytes_Type = Gauge32
_MemoryStbyCacheReserveMBytes_Object = MibScalar
memoryStbyCacheReserveMBytes = _MemoryStbyCacheReserveMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 67),
    _MemoryStbyCacheReserveMBytes_Type()
)
memoryStbyCacheReserveMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryStbyCacheReserveMBytes.setStatus("current")
_MemoryTransPagesRePurposedPerSec_Type = Gauge32
_MemoryTransPagesRePurposedPerSec_Object = MibScalar
memoryTransPagesRePurposedPerSec = _MemoryTransPagesRePurposedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 68),
    _MemoryTransPagesRePurposedPerSec_Type()
)
memoryTransPagesRePurposedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryTransPagesRePurposedPerSec.setStatus("current")
_MemoryCommitLimitKBytes_Type = Gauge32
_MemoryCommitLimitKBytes_Object = MibScalar
memoryCommitLimitKBytes = _MemoryCommitLimitKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 69),
    _MemoryCommitLimitKBytes_Type()
)
memoryCommitLimitKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCommitLimitKBytes.setStatus("current")
_MemoryCommitLimitMBytes_Type = Gauge32
_MemoryCommitLimitMBytes_Object = MibScalar
memoryCommitLimitMBytes = _MemoryCommitLimitMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 70),
    _MemoryCommitLimitMBytes_Type()
)
memoryCommitLimitMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    memoryCommitLimitMBytes.setStatus("current")
_MsmqQueueTable_Object = MibTable
msmqQueueTable = _MsmqQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47)
)
if mibBuilder.loadTexts:
    msmqQueueTable.setStatus("current")
_MsmqQueueEntry_Object = MibTableRow
msmqQueueEntry = _MsmqQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1)
)
msmqQueueEntry.setIndexNames(
    (0, "INFORMANT-ADV", "msmqInstance"),
)
if mibBuilder.loadTexts:
    msmqQueueEntry.setStatus("current")
_MsmqInstance_Type = InstanceName
_MsmqInstance_Object = MibTableColumn
msmqInstance = _MsmqInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 1),
    _MsmqInstance_Type()
)
msmqInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqInstance.setStatus("current")
_MsmqBytesInJournalQueue_Type = Gauge32
_MsmqBytesInJournalQueue_Object = MibTableColumn
msmqBytesInJournalQueue = _MsmqBytesInJournalQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 2),
    _MsmqBytesInJournalQueue_Type()
)
msmqBytesInJournalQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqBytesInJournalQueue.setStatus("current")
_MsmqBytesInQueue_Type = Gauge32
_MsmqBytesInQueue_Object = MibTableColumn
msmqBytesInQueue = _MsmqBytesInQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 3),
    _MsmqBytesInQueue_Type()
)
msmqBytesInQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqBytesInQueue.setStatus("current")
_MsmqMessagesInJournalQueue_Type = Gauge32
_MsmqMessagesInJournalQueue_Object = MibTableColumn
msmqMessagesInJournalQueue = _MsmqMessagesInJournalQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 4),
    _MsmqMessagesInJournalQueue_Type()
)
msmqMessagesInJournalQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqMessagesInJournalQueue.setStatus("current")
_MsmqMessagesInQueue_Type = Gauge32
_MsmqMessagesInQueue_Object = MibTableColumn
msmqMessagesInQueue = _MsmqMessagesInQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 5),
    _MsmqMessagesInQueue_Type()
)
msmqMessagesInQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqMessagesInQueue.setStatus("current")
_MsmqService_ObjectIdentity = ObjectIdentity
msmqService = _MsmqService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48)
)
if mibBuilder.loadTexts:
    msmqService.setStatus("current")
_MsmqSvcIPSessions_Type = Gauge32
_MsmqSvcIPSessions_Object = MibScalar
msmqSvcIPSessions = _MsmqSvcIPSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 1),
    _MsmqSvcIPSessions_Type()
)
msmqSvcIPSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcIPSessions.setStatus("current")
_MsmqSvcIPXSessions_Type = Gauge32
_MsmqSvcIPXSessions_Object = MibScalar
msmqSvcIPXSessions = _MsmqSvcIPXSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 2),
    _MsmqSvcIPXSessions_Type()
)
msmqSvcIPXSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcIPXSessions.setStatus("current")
_MsmqSvcIncomingMessagesPerSec_Type = Gauge32
_MsmqSvcIncomingMessagesPerSec_Object = MibScalar
msmqSvcIncomingMessagesPerSec = _MsmqSvcIncomingMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 3),
    _MsmqSvcIncomingMessagesPerSec_Type()
)
msmqSvcIncomingMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcIncomingMessagesPerSec.setStatus("current")
_MsmqSvcMSMQIncomingMessages_Type = Gauge32
_MsmqSvcMSMQIncomingMessages_Object = MibScalar
msmqSvcMSMQIncomingMessages = _MsmqSvcMSMQIncomingMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 4),
    _MsmqSvcMSMQIncomingMessages_Type()
)
msmqSvcMSMQIncomingMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcMSMQIncomingMessages.setStatus("current")
_MsmqSvcMSMQOutgoingMessages_Type = Gauge32
_MsmqSvcMSMQOutgoingMessages_Object = MibScalar
msmqSvcMSMQOutgoingMessages = _MsmqSvcMSMQOutgoingMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 5),
    _MsmqSvcMSMQOutgoingMessages_Type()
)
msmqSvcMSMQOutgoingMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcMSMQOutgoingMessages.setStatus("current")
_MsmqSvcOutgoingMessagesPerSec_Type = Gauge32
_MsmqSvcOutgoingMessagesPerSec_Object = MibScalar
msmqSvcOutgoingMessagesPerSec = _MsmqSvcOutgoingMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 6),
    _MsmqSvcOutgoingMessagesPerSec_Type()
)
msmqSvcOutgoingMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcOutgoingMessagesPerSec.setStatus("current")
_MsmqSvcSessions_Type = Gauge32
_MsmqSvcSessions_Object = MibScalar
msmqSvcSessions = _MsmqSvcSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 7),
    _MsmqSvcSessions_Type()
)
msmqSvcSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcSessions.setStatus("current")
_MsmqSvcTotalBytesInAllQueues_Type = Gauge32
_MsmqSvcTotalBytesInAllQueues_Object = MibScalar
msmqSvcTotalBytesInAllQueues = _MsmqSvcTotalBytesInAllQueues_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 8),
    _MsmqSvcTotalBytesInAllQueues_Type()
)
msmqSvcTotalBytesInAllQueues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcTotalBytesInAllQueues.setStatus("current")
_MsmqSvcTotalMessagesInAllQueues_Type = Gauge32
_MsmqSvcTotalMessagesInAllQueues_Object = MibScalar
msmqSvcTotalMessagesInAllQueues = _MsmqSvcTotalMessagesInAllQueues_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 9),
    _MsmqSvcTotalMessagesInAllQueues_Type()
)
msmqSvcTotalMessagesInAllQueues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcTotalMessagesInAllQueues.setStatus("current")
_MsmqSvcIncomingMulticastSessions_Type = Gauge32
_MsmqSvcIncomingMulticastSessions_Object = MibScalar
msmqSvcIncomingMulticastSessions = _MsmqSvcIncomingMulticastSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 10),
    _MsmqSvcIncomingMulticastSessions_Type()
)
msmqSvcIncomingMulticastSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcIncomingMulticastSessions.setStatus("current")
_MsmqSvcOutgoingHTTPSessions_Type = Gauge32
_MsmqSvcOutgoingHTTPSessions_Object = MibScalar
msmqSvcOutgoingHTTPSessions = _MsmqSvcOutgoingHTTPSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 11),
    _MsmqSvcOutgoingHTTPSessions_Type()
)
msmqSvcOutgoingHTTPSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcOutgoingHTTPSessions.setStatus("current")
_MsmqSvcOutgoingMulticastSessions_Type = Gauge32
_MsmqSvcOutgoingMulticastSessions_Object = MibScalar
msmqSvcOutgoingMulticastSessions = _MsmqSvcOutgoingMulticastSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 12),
    _MsmqSvcOutgoingMulticastSessions_Type()
)
msmqSvcOutgoingMulticastSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqSvcOutgoingMulticastSessions.setStatus("current")
_NbtConnectionTable_Object = MibTable
nbtConnectionTable = _NbtConnectionTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 49)
)
if mibBuilder.loadTexts:
    nbtConnectionTable.setStatus("current")
_NbtConnectionEntry_Object = MibTableRow
nbtConnectionEntry = _NbtConnectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1)
)
nbtConnectionEntry.setIndexNames(
    (0, "INFORMANT-ADV", "nbtConnectionInstance"),
)
if mibBuilder.loadTexts:
    nbtConnectionEntry.setStatus("current")
_NbtConnectionInstance_Type = InstanceName
_NbtConnectionInstance_Object = MibTableColumn
nbtConnectionInstance = _NbtConnectionInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 1),
    _NbtConnectionInstance_Type()
)
nbtConnectionInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nbtConnectionInstance.setStatus("current")
_NbtConnectionBytesReceivedPerSec_Type = Gauge32
_NbtConnectionBytesReceivedPerSec_Object = MibTableColumn
nbtConnectionBytesReceivedPerSec = _NbtConnectionBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 2),
    _NbtConnectionBytesReceivedPerSec_Type()
)
nbtConnectionBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nbtConnectionBytesReceivedPerSec.setStatus("current")
_NbtConnectionBytesSentPerSec_Type = Gauge32
_NbtConnectionBytesSentPerSec_Object = MibTableColumn
nbtConnectionBytesSentPerSec = _NbtConnectionBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 3),
    _NbtConnectionBytesSentPerSec_Type()
)
nbtConnectionBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nbtConnectionBytesSentPerSec.setStatus("current")
_NbtConnectionBytesTotalPerSec_Type = Gauge32
_NbtConnectionBytesTotalPerSec_Object = MibTableColumn
nbtConnectionBytesTotalPerSec = _NbtConnectionBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 4),
    _NbtConnectionBytesTotalPerSec_Type()
)
nbtConnectionBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nbtConnectionBytesTotalPerSec.setStatus("current")
_NetBEUITable_Object = MibTable
netBEUITable = _NetBEUITable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50)
)
if mibBuilder.loadTexts:
    netBEUITable.setStatus("current")
_NetBEUIEntry_Object = MibTableRow
netBEUIEntry = _NetBEUIEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1)
)
netBEUIEntry.setIndexNames(
    (0, "INFORMANT-ADV", "netBEUIInstance"),
)
if mibBuilder.loadTexts:
    netBEUIEntry.setStatus("current")
_NetBEUIInstance_Type = InstanceName
_NetBEUIInstance_Object = MibTableColumn
netBEUIInstance = _NetBEUIInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 1),
    _NetBEUIInstance_Type()
)
netBEUIInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIInstance.setStatus("current")
_NetBEUIBytesTotalPerSec_Type = Gauge32
_NetBEUIBytesTotalPerSec_Object = MibTableColumn
netBEUIBytesTotalPerSec = _NetBEUIBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 2),
    _NetBEUIBytesTotalPerSec_Type()
)
netBEUIBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIBytesTotalPerSec.setStatus("current")
_NetBEUIConnectionSessionTimeouts_Type = Gauge32
_NetBEUIConnectionSessionTimeouts_Object = MibTableColumn
netBEUIConnectionSessionTimeouts = _NetBEUIConnectionSessionTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 3),
    _NetBEUIConnectionSessionTimeouts_Type()
)
netBEUIConnectionSessionTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIConnectionSessionTimeouts.setStatus("current")
_NetBEUIConnectionsCanceled_Type = Gauge32
_NetBEUIConnectionsCanceled_Object = MibTableColumn
netBEUIConnectionsCanceled = _NetBEUIConnectionsCanceled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 4),
    _NetBEUIConnectionsCanceled_Type()
)
netBEUIConnectionsCanceled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIConnectionsCanceled.setStatus("current")
_NetBEUIConnectionsNoRetries_Type = Gauge32
_NetBEUIConnectionsNoRetries_Object = MibTableColumn
netBEUIConnectionsNoRetries = _NetBEUIConnectionsNoRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 5),
    _NetBEUIConnectionsNoRetries_Type()
)
netBEUIConnectionsNoRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIConnectionsNoRetries.setStatus("current")
_NetBEUIConnectionsOpen_Type = Gauge32
_NetBEUIConnectionsOpen_Object = MibTableColumn
netBEUIConnectionsOpen = _NetBEUIConnectionsOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 6),
    _NetBEUIConnectionsOpen_Type()
)
netBEUIConnectionsOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIConnectionsOpen.setStatus("current")
_NetBEUIConnectionsWithRetries_Type = Gauge32
_NetBEUIConnectionsWithRetries_Object = MibTableColumn
netBEUIConnectionsWithRetries = _NetBEUIConnectionsWithRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 7),
    _NetBEUIConnectionsWithRetries_Type()
)
netBEUIConnectionsWithRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIConnectionsWithRetries.setStatus("current")
_NetBEUIDatagramBytesRcvdPerSec_Type = Gauge32
_NetBEUIDatagramBytesRcvdPerSec_Object = MibTableColumn
netBEUIDatagramBytesRcvdPerSec = _NetBEUIDatagramBytesRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 8),
    _NetBEUIDatagramBytesRcvdPerSec_Type()
)
netBEUIDatagramBytesRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDatagramBytesRcvdPerSec.setStatus("current")
_NetBEUIDatagramBytesSentPerSec_Type = Gauge32
_NetBEUIDatagramBytesSentPerSec_Object = MibTableColumn
netBEUIDatagramBytesSentPerSec = _NetBEUIDatagramBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 9),
    _NetBEUIDatagramBytesSentPerSec_Type()
)
netBEUIDatagramBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDatagramBytesSentPerSec.setStatus("current")
_NetBEUIDatagramBytesPerSec_Type = Gauge32
_NetBEUIDatagramBytesPerSec_Object = MibTableColumn
netBEUIDatagramBytesPerSec = _NetBEUIDatagramBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 10),
    _NetBEUIDatagramBytesPerSec_Type()
)
netBEUIDatagramBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDatagramBytesPerSec.setStatus("current")
_NetBEUIDatagramsReceivedPerSec_Type = Gauge32
_NetBEUIDatagramsReceivedPerSec_Object = MibTableColumn
netBEUIDatagramsReceivedPerSec = _NetBEUIDatagramsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 11),
    _NetBEUIDatagramsReceivedPerSec_Type()
)
netBEUIDatagramsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDatagramsReceivedPerSec.setStatus("current")
_NetBEUIDatagramsSentPerSec_Type = Gauge32
_NetBEUIDatagramsSentPerSec_Object = MibTableColumn
netBEUIDatagramsSentPerSec = _NetBEUIDatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 12),
    _NetBEUIDatagramsSentPerSec_Type()
)
netBEUIDatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDatagramsSentPerSec.setStatus("current")
_NetBEUIDatagramsPerSec_Type = Gauge32
_NetBEUIDatagramsPerSec_Object = MibTableColumn
netBEUIDatagramsPerSec = _NetBEUIDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 13),
    _NetBEUIDatagramsPerSec_Type()
)
netBEUIDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDatagramsPerSec.setStatus("current")
_NetBEUIDisconnectsLocal_Type = Gauge32
_NetBEUIDisconnectsLocal_Object = MibTableColumn
netBEUIDisconnectsLocal = _NetBEUIDisconnectsLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 14),
    _NetBEUIDisconnectsLocal_Type()
)
netBEUIDisconnectsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDisconnectsLocal.setStatus("current")
_NetBEUIDisconnectsRemote_Type = Gauge32
_NetBEUIDisconnectsRemote_Object = MibTableColumn
netBEUIDisconnectsRemote = _NetBEUIDisconnectsRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 15),
    _NetBEUIDisconnectsRemote_Type()
)
netBEUIDisconnectsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIDisconnectsRemote.setStatus("current")
_NetBEUIExpirationsAck_Type = Gauge32
_NetBEUIExpirationsAck_Object = MibTableColumn
netBEUIExpirationsAck = _NetBEUIExpirationsAck_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 16),
    _NetBEUIExpirationsAck_Type()
)
netBEUIExpirationsAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIExpirationsAck.setStatus("current")
_NetBEUIExpirationsResponse_Type = Gauge32
_NetBEUIExpirationsResponse_Object = MibTableColumn
netBEUIExpirationsResponse = _NetBEUIExpirationsResponse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 17),
    _NetBEUIExpirationsResponse_Type()
)
netBEUIExpirationsResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIExpirationsResponse.setStatus("current")
_NetBEUIFailuresAdapter_Type = Gauge32
_NetBEUIFailuresAdapter_Object = MibTableColumn
netBEUIFailuresAdapter = _NetBEUIFailuresAdapter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 18),
    _NetBEUIFailuresAdapter_Type()
)
netBEUIFailuresAdapter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFailuresAdapter.setStatus("current")
_NetBEUIFailuresLink_Type = Gauge32
_NetBEUIFailuresLink_Object = MibTableColumn
netBEUIFailuresLink = _NetBEUIFailuresLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 19),
    _NetBEUIFailuresLink_Type()
)
netBEUIFailuresLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFailuresLink.setStatus("current")
_NetBEUIFailuresNoListen_Type = Gauge32
_NetBEUIFailuresNoListen_Object = MibTableColumn
netBEUIFailuresNoListen = _NetBEUIFailuresNoListen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 20),
    _NetBEUIFailuresNoListen_Type()
)
netBEUIFailuresNoListen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFailuresNoListen.setStatus("current")
_NetBEUIFailuresNotFound_Type = Gauge32
_NetBEUIFailuresNotFound_Object = MibTableColumn
netBEUIFailuresNotFound = _NetBEUIFailuresNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 21),
    _NetBEUIFailuresNotFound_Type()
)
netBEUIFailuresNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFailuresNotFound.setStatus("current")
_NetBEUIFailuresResourceLocal_Type = Gauge32
_NetBEUIFailuresResourceLocal_Object = MibTableColumn
netBEUIFailuresResourceLocal = _NetBEUIFailuresResourceLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 22),
    _NetBEUIFailuresResourceLocal_Type()
)
netBEUIFailuresResourceLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFailuresResourceLocal.setStatus("current")
_NetBEUIFailuresResourceRemote_Type = Gauge32
_NetBEUIFailuresResourceRemote_Object = MibTableColumn
netBEUIFailuresResourceRemote = _NetBEUIFailuresResourceRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 23),
    _NetBEUIFailuresResourceRemote_Type()
)
netBEUIFailuresResourceRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFailuresResourceRemote.setStatus("current")
_NetBEUIFrameBytesReSentPerSec_Type = Gauge32
_NetBEUIFrameBytesReSentPerSec_Object = MibTableColumn
netBEUIFrameBytesReSentPerSec = _NetBEUIFrameBytesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 24),
    _NetBEUIFrameBytesReSentPerSec_Type()
)
netBEUIFrameBytesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFrameBytesReSentPerSec.setStatus("current")
_NetBEUIFrameBytesReceivedPerSec_Type = Gauge32
_NetBEUIFrameBytesReceivedPerSec_Object = MibTableColumn
netBEUIFrameBytesReceivedPerSec = _NetBEUIFrameBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 25),
    _NetBEUIFrameBytesReceivedPerSec_Type()
)
netBEUIFrameBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFrameBytesReceivedPerSec.setStatus("current")
_NetBEUIFrameBytesRejectedPerSec_Type = Gauge32
_NetBEUIFrameBytesRejectedPerSec_Object = MibTableColumn
netBEUIFrameBytesRejectedPerSec = _NetBEUIFrameBytesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 26),
    _NetBEUIFrameBytesRejectedPerSec_Type()
)
netBEUIFrameBytesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFrameBytesRejectedPerSec.setStatus("current")
_NetBEUIFrameBytesSentPerSec_Type = Gauge32
_NetBEUIFrameBytesSentPerSec_Object = MibTableColumn
netBEUIFrameBytesSentPerSec = _NetBEUIFrameBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 27),
    _NetBEUIFrameBytesSentPerSec_Type()
)
netBEUIFrameBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFrameBytesSentPerSec.setStatus("current")
_NetBEUIFrameBytesPerSec_Type = Gauge32
_NetBEUIFrameBytesPerSec_Object = MibTableColumn
netBEUIFrameBytesPerSec = _NetBEUIFrameBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 28),
    _NetBEUIFrameBytesPerSec_Type()
)
netBEUIFrameBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFrameBytesPerSec.setStatus("current")
_NetBEUIFramesReSentPerSec_Type = Gauge32
_NetBEUIFramesReSentPerSec_Object = MibTableColumn
netBEUIFramesReSentPerSec = _NetBEUIFramesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 29),
    _NetBEUIFramesReSentPerSec_Type()
)
netBEUIFramesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFramesReSentPerSec.setStatus("current")
_NetBEUIFramesReceivedPerSec_Type = Gauge32
_NetBEUIFramesReceivedPerSec_Object = MibTableColumn
netBEUIFramesReceivedPerSec = _NetBEUIFramesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 30),
    _NetBEUIFramesReceivedPerSec_Type()
)
netBEUIFramesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFramesReceivedPerSec.setStatus("current")
_NetBEUIFramesRejectedPerSec_Type = Gauge32
_NetBEUIFramesRejectedPerSec_Object = MibTableColumn
netBEUIFramesRejectedPerSec = _NetBEUIFramesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 31),
    _NetBEUIFramesRejectedPerSec_Type()
)
netBEUIFramesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFramesRejectedPerSec.setStatus("current")
_NetBEUIFramesSentPerSec_Type = Gauge32
_NetBEUIFramesSentPerSec_Object = MibTableColumn
netBEUIFramesSentPerSec = _NetBEUIFramesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 32),
    _NetBEUIFramesSentPerSec_Type()
)
netBEUIFramesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFramesSentPerSec.setStatus("current")
_NetBEUIFramesPerSec_Type = Gauge32
_NetBEUIFramesPerSec_Object = MibTableColumn
netBEUIFramesPerSec = _NetBEUIFramesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 33),
    _NetBEUIFramesPerSec_Type()
)
netBEUIFramesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIFramesPerSec.setStatus("current")
_NetBEUIPacketsReceivedPerSec_Type = Gauge32
_NetBEUIPacketsReceivedPerSec_Object = MibTableColumn
netBEUIPacketsReceivedPerSec = _NetBEUIPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 34),
    _NetBEUIPacketsReceivedPerSec_Type()
)
netBEUIPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIPacketsReceivedPerSec.setStatus("current")
_NetBEUIPacketsSentPerSec_Type = Gauge32
_NetBEUIPacketsSentPerSec_Object = MibTableColumn
netBEUIPacketsSentPerSec = _NetBEUIPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 35),
    _NetBEUIPacketsSentPerSec_Type()
)
netBEUIPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIPacketsSentPerSec.setStatus("current")
_NetBEUIPacketsPerSec_Type = Gauge32
_NetBEUIPacketsPerSec_Object = MibTableColumn
netBEUIPacketsPerSec = _NetBEUIPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 36),
    _NetBEUIPacketsPerSec_Type()
)
netBEUIPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIPacketsPerSec.setStatus("current")
_NetBEUIPiggybackAckQueuedPerSec_Type = Gauge32
_NetBEUIPiggybackAckQueuedPerSec_Object = MibTableColumn
netBEUIPiggybackAckQueuedPerSec = _NetBEUIPiggybackAckQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 37),
    _NetBEUIPiggybackAckQueuedPerSec_Type()
)
netBEUIPiggybackAckQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIPiggybackAckQueuedPerSec.setStatus("current")
_NetBEUIPiggybackAckTimeouts_Type = Gauge32
_NetBEUIPiggybackAckTimeouts_Object = MibTableColumn
netBEUIPiggybackAckTimeouts = _NetBEUIPiggybackAckTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 38),
    _NetBEUIPiggybackAckTimeouts_Type()
)
netBEUIPiggybackAckTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIPiggybackAckTimeouts.setStatus("current")
_NetBEUIWindowSendAverage_Type = Gauge32
_NetBEUIWindowSendAverage_Object = MibTableColumn
netBEUIWindowSendAverage = _NetBEUIWindowSendAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 39),
    _NetBEUIWindowSendAverage_Type()
)
netBEUIWindowSendAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIWindowSendAverage.setStatus("current")
_NetBEUIWindowSendMaximum_Type = Gauge32
_NetBEUIWindowSendMaximum_Object = MibTableColumn
netBEUIWindowSendMaximum = _NetBEUIWindowSendMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 40),
    _NetBEUIWindowSendMaximum_Type()
)
netBEUIWindowSendMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIWindowSendMaximum.setStatus("current")
_NetBEUIResourceTable_Object = MibTable
netBEUIResourceTable = _NetBEUIResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 51)
)
if mibBuilder.loadTexts:
    netBEUIResourceTable.setStatus("current")
_NetBEUIResourceEntry_Object = MibTableRow
netBEUIResourceEntry = _NetBEUIResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1)
)
netBEUIResourceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "netBEUIResourceInstance"),
)
if mibBuilder.loadTexts:
    netBEUIResourceEntry.setStatus("current")
_NetBEUIResourceInstance_Type = InstanceName
_NetBEUIResourceInstance_Object = MibTableColumn
netBEUIResourceInstance = _NetBEUIResourceInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 1),
    _NetBEUIResourceInstance_Type()
)
netBEUIResourceInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIResourceInstance.setStatus("current")
_NetBEUIResourceTimesExhausted_Type = Gauge32
_NetBEUIResourceTimesExhausted_Object = MibTableColumn
netBEUIResourceTimesExhausted = _NetBEUIResourceTimesExhausted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 2),
    _NetBEUIResourceTimesExhausted_Type()
)
netBEUIResourceTimesExhausted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIResourceTimesExhausted.setStatus("current")
_NetBEUIResourceUsedAverage_Type = Gauge32
_NetBEUIResourceUsedAverage_Object = MibTableColumn
netBEUIResourceUsedAverage = _NetBEUIResourceUsedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 3),
    _NetBEUIResourceUsedAverage_Type()
)
netBEUIResourceUsedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIResourceUsedAverage.setStatus("current")
_NetBEUIResourceUsedMaximum_Type = Gauge32
_NetBEUIResourceUsedMaximum_Object = MibTableColumn
netBEUIResourceUsedMaximum = _NetBEUIResourceUsedMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 4),
    _NetBEUIResourceUsedMaximum_Type()
)
netBEUIResourceUsedMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBEUIResourceUsedMaximum.setStatus("current")
_NetworkInterfaceTable_Object = MibTable
networkInterfaceTable = _NetworkInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52)
)
if mibBuilder.loadTexts:
    networkInterfaceTable.setStatus("current")
_NetworkInterfaceEntry_Object = MibTableRow
networkInterfaceEntry = _NetworkInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1)
)
networkInterfaceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "netInstance"),
)
if mibBuilder.loadTexts:
    networkInterfaceEntry.setStatus("current")
_NetInstance_Type = InstanceName
_NetInstance_Object = MibTableColumn
netInstance = _NetInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 1),
    _NetInstance_Type()
)
netInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netInstance.setStatus("current")
_NetBytesReceivedPerSec_Type = Gauge32
_NetBytesReceivedPerSec_Object = MibTableColumn
netBytesReceivedPerSec = _NetBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 2),
    _NetBytesReceivedPerSec_Type()
)
netBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBytesReceivedPerSec.setStatus("current")
_NetBytesSentPerSec_Type = Gauge32
_NetBytesSentPerSec_Object = MibTableColumn
netBytesSentPerSec = _NetBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 3),
    _NetBytesSentPerSec_Type()
)
netBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBytesSentPerSec.setStatus("current")
_NetBytesTotalPerSec_Type = Gauge32
_NetBytesTotalPerSec_Object = MibTableColumn
netBytesTotalPerSec = _NetBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 4),
    _NetBytesTotalPerSec_Type()
)
netBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBytesTotalPerSec.setStatus("current")
_NetCurrentBandwidth_Type = Gauge32
_NetCurrentBandwidth_Object = MibTableColumn
netCurrentBandwidth = _NetCurrentBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 5),
    _NetCurrentBandwidth_Type()
)
netCurrentBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netCurrentBandwidth.setStatus("current")
_NetOutputQueueLength_Type = Gauge32
_NetOutputQueueLength_Object = MibTableColumn
netOutputQueueLength = _NetOutputQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 6),
    _NetOutputQueueLength_Type()
)
netOutputQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netOutputQueueLength.setStatus("current")
_NetPacketsOutboundDiscarded_Type = Gauge32
_NetPacketsOutboundDiscarded_Object = MibTableColumn
netPacketsOutboundDiscarded = _NetPacketsOutboundDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 7),
    _NetPacketsOutboundDiscarded_Type()
)
netPacketsOutboundDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsOutboundDiscarded.setStatus("current")
_NetPacketsOutboundErrors_Type = Gauge32
_NetPacketsOutboundErrors_Object = MibTableColumn
netPacketsOutboundErrors = _NetPacketsOutboundErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 8),
    _NetPacketsOutboundErrors_Type()
)
netPacketsOutboundErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsOutboundErrors.setStatus("current")
_NetPacketsReceivedDiscarded_Type = Gauge32
_NetPacketsReceivedDiscarded_Object = MibTableColumn
netPacketsReceivedDiscarded = _NetPacketsReceivedDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 9),
    _NetPacketsReceivedDiscarded_Type()
)
netPacketsReceivedDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsReceivedDiscarded.setStatus("current")
_NetPacketsReceivedErrors_Type = Gauge32
_NetPacketsReceivedErrors_Object = MibTableColumn
netPacketsReceivedErrors = _NetPacketsReceivedErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 10),
    _NetPacketsReceivedErrors_Type()
)
netPacketsReceivedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsReceivedErrors.setStatus("current")
_NetPacketsRcvdNonUnicastPerSec_Type = Gauge32
_NetPacketsRcvdNonUnicastPerSec_Object = MibTableColumn
netPacketsRcvdNonUnicastPerSec = _NetPacketsRcvdNonUnicastPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 11),
    _NetPacketsRcvdNonUnicastPerSec_Type()
)
netPacketsRcvdNonUnicastPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsRcvdNonUnicastPerSec.setStatus("current")
_NetPacketsReceivedUnicastPerSec_Type = Gauge32
_NetPacketsReceivedUnicastPerSec_Object = MibTableColumn
netPacketsReceivedUnicastPerSec = _NetPacketsReceivedUnicastPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 12),
    _NetPacketsReceivedUnicastPerSec_Type()
)
netPacketsReceivedUnicastPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsReceivedUnicastPerSec.setStatus("current")
_NetPacketsReceivedUnknown_Type = Gauge32
_NetPacketsReceivedUnknown_Object = MibTableColumn
netPacketsReceivedUnknown = _NetPacketsReceivedUnknown_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 13),
    _NetPacketsReceivedUnknown_Type()
)
netPacketsReceivedUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsReceivedUnknown.setStatus("current")
_NetPacketsReceivedPerSec_Type = Gauge32
_NetPacketsReceivedPerSec_Object = MibTableColumn
netPacketsReceivedPerSec = _NetPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 14),
    _NetPacketsReceivedPerSec_Type()
)
netPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsReceivedPerSec.setStatus("current")
_NetPacketsSentNonUnicastPerSec_Type = Gauge32
_NetPacketsSentNonUnicastPerSec_Object = MibTableColumn
netPacketsSentNonUnicastPerSec = _NetPacketsSentNonUnicastPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 15),
    _NetPacketsSentNonUnicastPerSec_Type()
)
netPacketsSentNonUnicastPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsSentNonUnicastPerSec.setStatus("current")
_NetPacketsSentUnicastPerSec_Type = Gauge32
_NetPacketsSentUnicastPerSec_Object = MibTableColumn
netPacketsSentUnicastPerSec = _NetPacketsSentUnicastPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 16),
    _NetPacketsSentUnicastPerSec_Type()
)
netPacketsSentUnicastPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsSentUnicastPerSec.setStatus("current")
_NetPacketsSentPerSec_Type = Gauge32
_NetPacketsSentPerSec_Object = MibTableColumn
netPacketsSentPerSec = _NetPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 17),
    _NetPacketsSentPerSec_Type()
)
netPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsSentPerSec.setStatus("current")
_NetPacketsPerSec_Type = Gauge32
_NetPacketsPerSec_Object = MibTableColumn
netPacketsPerSec = _NetPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 18),
    _NetPacketsPerSec_Type()
)
netPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netPacketsPerSec.setStatus("current")
_NntpCommandsTable_Object = MibTable
nntpCommandsTable = _NntpCommandsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53)
)
if mibBuilder.loadTexts:
    nntpCommandsTable.setStatus("current")
_NntpCommandsEntry_Object = MibTableRow
nntpCommandsEntry = _NntpCommandsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1)
)
nntpCommandsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "nntpCmdsInstance"),
)
if mibBuilder.loadTexts:
    nntpCommandsEntry.setStatus("current")
_NntpCmdsInstance_Type = InstanceName
_NntpCmdsInstance_Object = MibTableColumn
nntpCmdsInstance = _NntpCmdsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 1),
    _NntpCmdsInstance_Type()
)
nntpCmdsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsInstance.setStatus("current")
_NntpCmdsArticleCmds_Type = Gauge32
_NntpCmdsArticleCmds_Object = MibTableColumn
nntpCmdsArticleCmds = _NntpCmdsArticleCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 2),
    _NntpCmdsArticleCmds_Type()
)
nntpCmdsArticleCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsArticleCmds.setStatus("current")
_NntpCmdsArticleCmdsPerSec_Type = Gauge32
_NntpCmdsArticleCmdsPerSec_Object = MibTableColumn
nntpCmdsArticleCmdsPerSec = _NntpCmdsArticleCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 3),
    _NntpCmdsArticleCmdsPerSec_Type()
)
nntpCmdsArticleCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsArticleCmdsPerSec.setStatus("current")
_NntpCmdsCheckCmds_Type = Gauge32
_NntpCmdsCheckCmds_Object = MibTableColumn
nntpCmdsCheckCmds = _NntpCmdsCheckCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 4),
    _NntpCmdsCheckCmds_Type()
)
nntpCmdsCheckCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsCheckCmds.setStatus("current")
_NntpCmdsCheckCmdsPerSec_Type = Gauge32
_NntpCmdsCheckCmdsPerSec_Object = MibTableColumn
nntpCmdsCheckCmdsPerSec = _NntpCmdsCheckCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 5),
    _NntpCmdsCheckCmdsPerSec_Type()
)
nntpCmdsCheckCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsCheckCmdsPerSec.setStatus("current")
_NntpCmdsGroupCmds_Type = Gauge32
_NntpCmdsGroupCmds_Object = MibTableColumn
nntpCmdsGroupCmds = _NntpCmdsGroupCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 6),
    _NntpCmdsGroupCmds_Type()
)
nntpCmdsGroupCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsGroupCmds.setStatus("current")
_NntpCmdsGroupCmdsPerSec_Type = Gauge32
_NntpCmdsGroupCmdsPerSec_Object = MibTableColumn
nntpCmdsGroupCmdsPerSec = _NntpCmdsGroupCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 7),
    _NntpCmdsGroupCmdsPerSec_Type()
)
nntpCmdsGroupCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsGroupCmdsPerSec.setStatus("current")
_NntpCmdsHelpCmds_Type = Gauge32
_NntpCmdsHelpCmds_Object = MibTableColumn
nntpCmdsHelpCmds = _NntpCmdsHelpCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 8),
    _NntpCmdsHelpCmds_Type()
)
nntpCmdsHelpCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsHelpCmds.setStatus("current")
_NntpCmdsHelpCmdsPerSec_Type = Gauge32
_NntpCmdsHelpCmdsPerSec_Object = MibTableColumn
nntpCmdsHelpCmdsPerSec = _NntpCmdsHelpCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 9),
    _NntpCmdsHelpCmdsPerSec_Type()
)
nntpCmdsHelpCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsHelpCmdsPerSec.setStatus("current")
_NntpCmdsIHaveCmds_Type = Gauge32
_NntpCmdsIHaveCmds_Object = MibTableColumn
nntpCmdsIHaveCmds = _NntpCmdsIHaveCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 10),
    _NntpCmdsIHaveCmds_Type()
)
nntpCmdsIHaveCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsIHaveCmds.setStatus("current")
_NntpCmdsIHaveCmdsPerSec_Type = Gauge32
_NntpCmdsIHaveCmdsPerSec_Object = MibTableColumn
nntpCmdsIHaveCmdsPerSec = _NntpCmdsIHaveCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 11),
    _NntpCmdsIHaveCmdsPerSec_Type()
)
nntpCmdsIHaveCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsIHaveCmdsPerSec.setStatus("current")
_NntpCmdsLastCmds_Type = Gauge32
_NntpCmdsLastCmds_Object = MibTableColumn
nntpCmdsLastCmds = _NntpCmdsLastCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 12),
    _NntpCmdsLastCmds_Type()
)
nntpCmdsLastCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsLastCmds.setStatus("current")
_NntpCmdsLastCmdsPerSec_Type = Gauge32
_NntpCmdsLastCmdsPerSec_Object = MibTableColumn
nntpCmdsLastCmdsPerSec = _NntpCmdsLastCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 13),
    _NntpCmdsLastCmdsPerSec_Type()
)
nntpCmdsLastCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsLastCmdsPerSec.setStatus("current")
_NntpCmdsListCmds_Type = Gauge32
_NntpCmdsListCmds_Object = MibTableColumn
nntpCmdsListCmds = _NntpCmdsListCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 14),
    _NntpCmdsListCmds_Type()
)
nntpCmdsListCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsListCmds.setStatus("current")
_NntpCmdsListCmdsPerSec_Type = Gauge32
_NntpCmdsListCmdsPerSec_Object = MibTableColumn
nntpCmdsListCmdsPerSec = _NntpCmdsListCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 15),
    _NntpCmdsListCmdsPerSec_Type()
)
nntpCmdsListCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsListCmdsPerSec.setStatus("current")
_NntpCmdsLogonAttempts_Type = Gauge32
_NntpCmdsLogonAttempts_Object = MibTableColumn
nntpCmdsLogonAttempts = _NntpCmdsLogonAttempts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 16),
    _NntpCmdsLogonAttempts_Type()
)
nntpCmdsLogonAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsLogonAttempts.setStatus("current")
_NntpCmdsLogonAttemptsPerSec_Type = Gauge32
_NntpCmdsLogonAttemptsPerSec_Object = MibTableColumn
nntpCmdsLogonAttemptsPerSec = _NntpCmdsLogonAttemptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 17),
    _NntpCmdsLogonAttemptsPerSec_Type()
)
nntpCmdsLogonAttemptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsLogonAttemptsPerSec.setStatus("current")
_NntpCmdsLogonFailures_Type = Gauge32
_NntpCmdsLogonFailures_Object = MibTableColumn
nntpCmdsLogonFailures = _NntpCmdsLogonFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 18),
    _NntpCmdsLogonFailures_Type()
)
nntpCmdsLogonFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsLogonFailures.setStatus("current")
_NntpCmdsLogonFailuresPerSec_Type = Gauge32
_NntpCmdsLogonFailuresPerSec_Object = MibTableColumn
nntpCmdsLogonFailuresPerSec = _NntpCmdsLogonFailuresPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 19),
    _NntpCmdsLogonFailuresPerSec_Type()
)
nntpCmdsLogonFailuresPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsLogonFailuresPerSec.setStatus("current")
_NntpCmdsModeCmds_Type = Gauge32
_NntpCmdsModeCmds_Object = MibTableColumn
nntpCmdsModeCmds = _NntpCmdsModeCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 20),
    _NntpCmdsModeCmds_Type()
)
nntpCmdsModeCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsModeCmds.setStatus("current")
_NntpCmdsModeCmdsPerSec_Type = Gauge32
_NntpCmdsModeCmdsPerSec_Object = MibTableColumn
nntpCmdsModeCmdsPerSec = _NntpCmdsModeCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 21),
    _NntpCmdsModeCmdsPerSec_Type()
)
nntpCmdsModeCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsModeCmdsPerSec.setStatus("current")
_NntpCmdsNewgroupsCmds_Type = Gauge32
_NntpCmdsNewgroupsCmds_Object = MibTableColumn
nntpCmdsNewgroupsCmds = _NntpCmdsNewgroupsCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 22),
    _NntpCmdsNewgroupsCmds_Type()
)
nntpCmdsNewgroupsCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsNewgroupsCmds.setStatus("current")
_NntpCmdsNewgroupsCmdsPerSec_Type = Gauge32
_NntpCmdsNewgroupsCmdsPerSec_Object = MibTableColumn
nntpCmdsNewgroupsCmdsPerSec = _NntpCmdsNewgroupsCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 23),
    _NntpCmdsNewgroupsCmdsPerSec_Type()
)
nntpCmdsNewgroupsCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsNewgroupsCmdsPerSec.setStatus("current")
_NntpCmdsNewnewsCmds_Type = Gauge32
_NntpCmdsNewnewsCmds_Object = MibTableColumn
nntpCmdsNewnewsCmds = _NntpCmdsNewnewsCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 24),
    _NntpCmdsNewnewsCmds_Type()
)
nntpCmdsNewnewsCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsNewnewsCmds.setStatus("current")
_NntpCmdsNewnewsCmdsPerSec_Type = Gauge32
_NntpCmdsNewnewsCmdsPerSec_Object = MibTableColumn
nntpCmdsNewnewsCmdsPerSec = _NntpCmdsNewnewsCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 25),
    _NntpCmdsNewnewsCmdsPerSec_Type()
)
nntpCmdsNewnewsCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsNewnewsCmdsPerSec.setStatus("current")
_NntpCmdsNextCmds_Type = Gauge32
_NntpCmdsNextCmds_Object = MibTableColumn
nntpCmdsNextCmds = _NntpCmdsNextCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 26),
    _NntpCmdsNextCmds_Type()
)
nntpCmdsNextCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsNextCmds.setStatus("current")
_NntpCmdsNextCmdsPerSec_Type = Gauge32
_NntpCmdsNextCmdsPerSec_Object = MibTableColumn
nntpCmdsNextCmdsPerSec = _NntpCmdsNextCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 27),
    _NntpCmdsNextCmdsPerSec_Type()
)
nntpCmdsNextCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsNextCmdsPerSec.setStatus("current")
_NntpCmdsPostCmds_Type = Gauge32
_NntpCmdsPostCmds_Object = MibTableColumn
nntpCmdsPostCmds = _NntpCmdsPostCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 28),
    _NntpCmdsPostCmds_Type()
)
nntpCmdsPostCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsPostCmds.setStatus("current")
_NntpCmdsPostCmdsPerSec_Type = Gauge32
_NntpCmdsPostCmdsPerSec_Object = MibTableColumn
nntpCmdsPostCmdsPerSec = _NntpCmdsPostCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 29),
    _NntpCmdsPostCmdsPerSec_Type()
)
nntpCmdsPostCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsPostCmdsPerSec.setStatus("current")
_NntpCmdsQuitCmds_Type = Gauge32
_NntpCmdsQuitCmds_Object = MibTableColumn
nntpCmdsQuitCmds = _NntpCmdsQuitCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 30),
    _NntpCmdsQuitCmds_Type()
)
nntpCmdsQuitCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsQuitCmds.setStatus("current")
_NntpCmdsQuitCmdsPerSec_Type = Gauge32
_NntpCmdsQuitCmdsPerSec_Object = MibTableColumn
nntpCmdsQuitCmdsPerSec = _NntpCmdsQuitCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 31),
    _NntpCmdsQuitCmdsPerSec_Type()
)
nntpCmdsQuitCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsQuitCmdsPerSec.setStatus("current")
_NntpCmdsSearchCmds_Type = Gauge32
_NntpCmdsSearchCmds_Object = MibTableColumn
nntpCmdsSearchCmds = _NntpCmdsSearchCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 32),
    _NntpCmdsSearchCmds_Type()
)
nntpCmdsSearchCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsSearchCmds.setStatus("current")
_NntpCmdsSearchCmdsPerSec_Type = Gauge32
_NntpCmdsSearchCmdsPerSec_Object = MibTableColumn
nntpCmdsSearchCmdsPerSec = _NntpCmdsSearchCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 33),
    _NntpCmdsSearchCmdsPerSec_Type()
)
nntpCmdsSearchCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsSearchCmdsPerSec.setStatus("current")
_NntpCmdsStatCmds_Type = Gauge32
_NntpCmdsStatCmds_Object = MibTableColumn
nntpCmdsStatCmds = _NntpCmdsStatCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 34),
    _NntpCmdsStatCmds_Type()
)
nntpCmdsStatCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsStatCmds.setStatus("current")
_NntpCmdsStatCmdsPerSec_Type = Gauge32
_NntpCmdsStatCmdsPerSec_Object = MibTableColumn
nntpCmdsStatCmdsPerSec = _NntpCmdsStatCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 35),
    _NntpCmdsStatCmdsPerSec_Type()
)
nntpCmdsStatCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsStatCmdsPerSec.setStatus("current")
_NntpCmdsTakethisCmds_Type = Gauge32
_NntpCmdsTakethisCmds_Object = MibTableColumn
nntpCmdsTakethisCmds = _NntpCmdsTakethisCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 36),
    _NntpCmdsTakethisCmds_Type()
)
nntpCmdsTakethisCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsTakethisCmds.setStatus("current")
_NntpCmdsTakethisCmdsPerSec_Type = Gauge32
_NntpCmdsTakethisCmdsPerSec_Object = MibTableColumn
nntpCmdsTakethisCmdsPerSec = _NntpCmdsTakethisCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 37),
    _NntpCmdsTakethisCmdsPerSec_Type()
)
nntpCmdsTakethisCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsTakethisCmdsPerSec.setStatus("current")
_NntpCmdsXHdrCmds_Type = Gauge32
_NntpCmdsXHdrCmds_Object = MibTableColumn
nntpCmdsXHdrCmds = _NntpCmdsXHdrCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 38),
    _NntpCmdsXHdrCmds_Type()
)
nntpCmdsXHdrCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXHdrCmds.setStatus("current")
_NntpCmdsXHdrCmdsPerSec_Type = Gauge32
_NntpCmdsXHdrCmdsPerSec_Object = MibTableColumn
nntpCmdsXHdrCmdsPerSec = _NntpCmdsXHdrCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 39),
    _NntpCmdsXHdrCmdsPerSec_Type()
)
nntpCmdsXHdrCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXHdrCmdsPerSec.setStatus("current")
_NntpCmdsXOverCmds_Type = Gauge32
_NntpCmdsXOverCmds_Object = MibTableColumn
nntpCmdsXOverCmds = _NntpCmdsXOverCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 40),
    _NntpCmdsXOverCmds_Type()
)
nntpCmdsXOverCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXOverCmds.setStatus("current")
_NntpCmdsXOverCmdsPerSec_Type = Gauge32
_NntpCmdsXOverCmdsPerSec_Object = MibTableColumn
nntpCmdsXOverCmdsPerSec = _NntpCmdsXOverCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 41),
    _NntpCmdsXOverCmdsPerSec_Type()
)
nntpCmdsXOverCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXOverCmdsPerSec.setStatus("current")
_NntpCmdsXPatCmds_Type = Gauge32
_NntpCmdsXPatCmds_Object = MibTableColumn
nntpCmdsXPatCmds = _NntpCmdsXPatCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 42),
    _NntpCmdsXPatCmds_Type()
)
nntpCmdsXPatCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXPatCmds.setStatus("current")
_NntpCmdsXPatCmdsPerSec_Type = Gauge32
_NntpCmdsXPatCmdsPerSec_Object = MibTableColumn
nntpCmdsXPatCmdsPerSec = _NntpCmdsXPatCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 43),
    _NntpCmdsXPatCmdsPerSec_Type()
)
nntpCmdsXPatCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXPatCmdsPerSec.setStatus("current")
_NntpCmdsXReplicCmds_Type = Gauge32
_NntpCmdsXReplicCmds_Object = MibTableColumn
nntpCmdsXReplicCmds = _NntpCmdsXReplicCmds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 44),
    _NntpCmdsXReplicCmds_Type()
)
nntpCmdsXReplicCmds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXReplicCmds.setStatus("current")
_NntpCmdsXReplicCmdsPerSec_Type = Gauge32
_NntpCmdsXReplicCmdsPerSec_Object = MibTableColumn
nntpCmdsXReplicCmdsPerSec = _NntpCmdsXReplicCmdsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 45),
    _NntpCmdsXReplicCmdsPerSec_Type()
)
nntpCmdsXReplicCmdsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpCmdsXReplicCmdsPerSec.setStatus("current")
_NntpServerTable_Object = MibTable
nntpServerTable = _NntpServerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54)
)
if mibBuilder.loadTexts:
    nntpServerTable.setStatus("current")
_NntpServerEntry_Object = MibTableRow
nntpServerEntry = _NntpServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1)
)
nntpServerEntry.setIndexNames(
    (0, "INFORMANT-ADV", "nntpSrvrInstance"),
)
if mibBuilder.loadTexts:
    nntpServerEntry.setStatus("current")
_NntpSrvrInstance_Type = InstanceName
_NntpSrvrInstance_Object = MibTableColumn
nntpSrvrInstance = _NntpSrvrInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 1),
    _NntpSrvrInstance_Type()
)
nntpSrvrInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrInstance.setStatus("current")
_NntpSrvrArticleMapEntries_Type = Gauge32
_NntpSrvrArticleMapEntries_Object = MibTableColumn
nntpSrvrArticleMapEntries = _NntpSrvrArticleMapEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 2),
    _NntpSrvrArticleMapEntries_Type()
)
nntpSrvrArticleMapEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticleMapEntries.setStatus("current")
_NntpSrvrArticleMapEntriesPerSec_Type = Gauge32
_NntpSrvrArticleMapEntriesPerSec_Object = MibTableColumn
nntpSrvrArticleMapEntriesPerSec = _NntpSrvrArticleMapEntriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 3),
    _NntpSrvrArticleMapEntriesPerSec_Type()
)
nntpSrvrArticleMapEntriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticleMapEntriesPerSec.setStatus("current")
_NntpSrvrArticlesDeleted_Type = Gauge32
_NntpSrvrArticlesDeleted_Object = MibTableColumn
nntpSrvrArticlesDeleted = _NntpSrvrArticlesDeleted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 4),
    _NntpSrvrArticlesDeleted_Type()
)
nntpSrvrArticlesDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesDeleted.setStatus("current")
_NntpSrvrArticlesDeletedPerSec_Type = Gauge32
_NntpSrvrArticlesDeletedPerSec_Object = MibTableColumn
nntpSrvrArticlesDeletedPerSec = _NntpSrvrArticlesDeletedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 5),
    _NntpSrvrArticlesDeletedPerSec_Type()
)
nntpSrvrArticlesDeletedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesDeletedPerSec.setStatus("current")
_NntpSrvrArticlesPosted_Type = Gauge32
_NntpSrvrArticlesPosted_Object = MibTableColumn
nntpSrvrArticlesPosted = _NntpSrvrArticlesPosted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 6),
    _NntpSrvrArticlesPosted_Type()
)
nntpSrvrArticlesPosted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesPosted.setStatus("current")
_NntpSrvrArticlesPostedPerSec_Type = Gauge32
_NntpSrvrArticlesPostedPerSec_Object = MibTableColumn
nntpSrvrArticlesPostedPerSec = _NntpSrvrArticlesPostedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 7),
    _NntpSrvrArticlesPostedPerSec_Type()
)
nntpSrvrArticlesPostedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesPostedPerSec.setStatus("current")
_NntpSrvrArticlesReceived_Type = Gauge32
_NntpSrvrArticlesReceived_Object = MibTableColumn
nntpSrvrArticlesReceived = _NntpSrvrArticlesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 8),
    _NntpSrvrArticlesReceived_Type()
)
nntpSrvrArticlesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesReceived.setStatus("current")
_NntpSrvrArticlesReceivedPerSec_Type = Gauge32
_NntpSrvrArticlesReceivedPerSec_Object = MibTableColumn
nntpSrvrArticlesReceivedPerSec = _NntpSrvrArticlesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 9),
    _NntpSrvrArticlesReceivedPerSec_Type()
)
nntpSrvrArticlesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesReceivedPerSec.setStatus("current")
_NntpSrvrArticlesSent_Type = Gauge32
_NntpSrvrArticlesSent_Object = MibTableColumn
nntpSrvrArticlesSent = _NntpSrvrArticlesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 10),
    _NntpSrvrArticlesSent_Type()
)
nntpSrvrArticlesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesSent.setStatus("current")
_NntpSrvrArticlesSentPerSec_Type = Gauge32
_NntpSrvrArticlesSentPerSec_Object = MibTableColumn
nntpSrvrArticlesSentPerSec = _NntpSrvrArticlesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 11),
    _NntpSrvrArticlesSentPerSec_Type()
)
nntpSrvrArticlesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesSentPerSec.setStatus("current")
_NntpSrvrArticlesTotal_Type = Gauge32
_NntpSrvrArticlesTotal_Object = MibTableColumn
nntpSrvrArticlesTotal = _NntpSrvrArticlesTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 12),
    _NntpSrvrArticlesTotal_Type()
)
nntpSrvrArticlesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrArticlesTotal.setStatus("current")
_NntpSrvrBytesReceivedPerSec_Type = Gauge32
_NntpSrvrBytesReceivedPerSec_Object = MibTableColumn
nntpSrvrBytesReceivedPerSec = _NntpSrvrBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 13),
    _NntpSrvrBytesReceivedPerSec_Type()
)
nntpSrvrBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrBytesReceivedPerSec.setStatus("current")
_NntpSrvrBytesSentPerSec_Type = Gauge32
_NntpSrvrBytesSentPerSec_Object = MibTableColumn
nntpSrvrBytesSentPerSec = _NntpSrvrBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 14),
    _NntpSrvrBytesSentPerSec_Type()
)
nntpSrvrBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrBytesSentPerSec.setStatus("current")
_NntpSrvrBytesTotalPerSec_Type = Gauge32
_NntpSrvrBytesTotalPerSec_Object = MibTableColumn
nntpSrvrBytesTotalPerSec = _NntpSrvrBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 15),
    _NntpSrvrBytesTotalPerSec_Type()
)
nntpSrvrBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrBytesTotalPerSec.setStatus("current")
_NntpSrvrControlMessagesFailed_Type = Gauge32
_NntpSrvrControlMessagesFailed_Object = MibTableColumn
nntpSrvrControlMessagesFailed = _NntpSrvrControlMessagesFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 16),
    _NntpSrvrControlMessagesFailed_Type()
)
nntpSrvrControlMessagesFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrControlMessagesFailed.setStatus("current")
_NntpSrvrControlMessagesReceived_Type = Gauge32
_NntpSrvrControlMessagesReceived_Object = MibTableColumn
nntpSrvrControlMessagesReceived = _NntpSrvrControlMessagesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 17),
    _NntpSrvrControlMessagesReceived_Type()
)
nntpSrvrControlMessagesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrControlMessagesReceived.setStatus("current")
_NntpSrvrCurrentAnonymousUsers_Type = Gauge32
_NntpSrvrCurrentAnonymousUsers_Object = MibTableColumn
nntpSrvrCurrentAnonymousUsers = _NntpSrvrCurrentAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 18),
    _NntpSrvrCurrentAnonymousUsers_Type()
)
nntpSrvrCurrentAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrCurrentAnonymousUsers.setStatus("current")
_NntpSrvrCurrentConnections_Type = Gauge32
_NntpSrvrCurrentConnections_Object = MibTableColumn
nntpSrvrCurrentConnections = _NntpSrvrCurrentConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 19),
    _NntpSrvrCurrentConnections_Type()
)
nntpSrvrCurrentConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrCurrentConnections.setStatus("current")
_NntpSrvrCurrentNonAnonymousUsers_Type = Gauge32
_NntpSrvrCurrentNonAnonymousUsers_Object = MibTableColumn
nntpSrvrCurrentNonAnonymousUsers = _NntpSrvrCurrentNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 20),
    _NntpSrvrCurrentNonAnonymousUsers_Type()
)
nntpSrvrCurrentNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrCurrentNonAnonymousUsers.setStatus("current")
_NntpSrvrCurrentOutboundConns_Type = Gauge32
_NntpSrvrCurrentOutboundConns_Object = MibTableColumn
nntpSrvrCurrentOutboundConns = _NntpSrvrCurrentOutboundConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 21),
    _NntpSrvrCurrentOutboundConns_Type()
)
nntpSrvrCurrentOutboundConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrCurrentOutboundConns.setStatus("current")
_NntpSrvrFailedOutboundLogons_Type = Gauge32
_NntpSrvrFailedOutboundLogons_Object = MibTableColumn
nntpSrvrFailedOutboundLogons = _NntpSrvrFailedOutboundLogons_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 22),
    _NntpSrvrFailedOutboundLogons_Type()
)
nntpSrvrFailedOutboundLogons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrFailedOutboundLogons.setStatus("current")
_NntpSrvrHistoryMapEntries_Type = Gauge32
_NntpSrvrHistoryMapEntries_Object = MibTableColumn
nntpSrvrHistoryMapEntries = _NntpSrvrHistoryMapEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 23),
    _NntpSrvrHistoryMapEntries_Type()
)
nntpSrvrHistoryMapEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrHistoryMapEntries.setStatus("current")
_NntpSrvrHistoryMapEntriesPerSec_Type = Gauge32
_NntpSrvrHistoryMapEntriesPerSec_Object = MibTableColumn
nntpSrvrHistoryMapEntriesPerSec = _NntpSrvrHistoryMapEntriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 24),
    _NntpSrvrHistoryMapEntriesPerSec_Type()
)
nntpSrvrHistoryMapEntriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrHistoryMapEntriesPerSec.setStatus("current")
_NntpSrvrMaximumAnonymousUsers_Type = Gauge32
_NntpSrvrMaximumAnonymousUsers_Object = MibTableColumn
nntpSrvrMaximumAnonymousUsers = _NntpSrvrMaximumAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 25),
    _NntpSrvrMaximumAnonymousUsers_Type()
)
nntpSrvrMaximumAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrMaximumAnonymousUsers.setStatus("current")
_NntpSrvrMaximumConnections_Type = Gauge32
_NntpSrvrMaximumConnections_Object = MibTableColumn
nntpSrvrMaximumConnections = _NntpSrvrMaximumConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 26),
    _NntpSrvrMaximumConnections_Type()
)
nntpSrvrMaximumConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrMaximumConnections.setStatus("current")
_NntpSrvrMaximumNonAnonymousUsers_Type = Gauge32
_NntpSrvrMaximumNonAnonymousUsers_Object = MibTableColumn
nntpSrvrMaximumNonAnonymousUsers = _NntpSrvrMaximumNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 27),
    _NntpSrvrMaximumNonAnonymousUsers_Type()
)
nntpSrvrMaximumNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrMaximumNonAnonymousUsers.setStatus("current")
_NntpSrvrModeratedPostingsFailed_Type = Gauge32
_NntpSrvrModeratedPostingsFailed_Object = MibTableColumn
nntpSrvrModeratedPostingsFailed = _NntpSrvrModeratedPostingsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 28),
    _NntpSrvrModeratedPostingsFailed_Type()
)
nntpSrvrModeratedPostingsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrModeratedPostingsFailed.setStatus("current")
_NntpSrvrModeratedPostingsSent_Type = Gauge32
_NntpSrvrModeratedPostingsSent_Object = MibTableColumn
nntpSrvrModeratedPostingsSent = _NntpSrvrModeratedPostingsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 29),
    _NntpSrvrModeratedPostingsSent_Type()
)
nntpSrvrModeratedPostingsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrModeratedPostingsSent.setStatus("current")
_NntpSrvrSessionsFlowControlled_Type = Gauge32
_NntpSrvrSessionsFlowControlled_Object = MibTableColumn
nntpSrvrSessionsFlowControlled = _NntpSrvrSessionsFlowControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 30),
    _NntpSrvrSessionsFlowControlled_Type()
)
nntpSrvrSessionsFlowControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrSessionsFlowControlled.setStatus("current")
_NntpSrvrTotalAnonymousUsers_Type = Gauge32
_NntpSrvrTotalAnonymousUsers_Object = MibTableColumn
nntpSrvrTotalAnonymousUsers = _NntpSrvrTotalAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 31),
    _NntpSrvrTotalAnonymousUsers_Type()
)
nntpSrvrTotalAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalAnonymousUsers.setStatus("current")
_NntpSrvrTotalConnections_Type = Gauge32
_NntpSrvrTotalConnections_Object = MibTableColumn
nntpSrvrTotalConnections = _NntpSrvrTotalConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 32),
    _NntpSrvrTotalConnections_Type()
)
nntpSrvrTotalConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalConnections.setStatus("current")
_NntpSrvrTotalNonAnonymousUsers_Type = Gauge32
_NntpSrvrTotalNonAnonymousUsers_Object = MibTableColumn
nntpSrvrTotalNonAnonymousUsers = _NntpSrvrTotalNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 33),
    _NntpSrvrTotalNonAnonymousUsers_Type()
)
nntpSrvrTotalNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalNonAnonymousUsers.setStatus("current")
_NntpSrvrTotalOutboundConnections_Type = Gauge32
_NntpSrvrTotalOutboundConnections_Object = MibTableColumn
nntpSrvrTotalOutboundConnections = _NntpSrvrTotalOutboundConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 34),
    _NntpSrvrTotalOutboundConnections_Type()
)
nntpSrvrTotalOutboundConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalOutboundConnections.setStatus("current")
_NntpSrvrTotalOutboundConnsFailed_Type = Gauge32
_NntpSrvrTotalOutboundConnsFailed_Object = MibTableColumn
nntpSrvrTotalOutboundConnsFailed = _NntpSrvrTotalOutboundConnsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 35),
    _NntpSrvrTotalOutboundConnsFailed_Type()
)
nntpSrvrTotalOutboundConnsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalOutboundConnsFailed.setStatus("current")
_NntpSrvrTotalPassiveFeeds_Type = Gauge32
_NntpSrvrTotalPassiveFeeds_Object = MibTableColumn
nntpSrvrTotalPassiveFeeds = _NntpSrvrTotalPassiveFeeds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 36),
    _NntpSrvrTotalPassiveFeeds_Type()
)
nntpSrvrTotalPassiveFeeds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalPassiveFeeds.setStatus("current")
_NntpSrvrTotalPullFeeds_Type = Gauge32
_NntpSrvrTotalPullFeeds_Object = MibTableColumn
nntpSrvrTotalPullFeeds = _NntpSrvrTotalPullFeeds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 37),
    _NntpSrvrTotalPullFeeds_Type()
)
nntpSrvrTotalPullFeeds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalPullFeeds.setStatus("current")
_NntpSrvrTotalPushFeeds_Type = Gauge32
_NntpSrvrTotalPushFeeds_Object = MibTableColumn
nntpSrvrTotalPushFeeds = _NntpSrvrTotalPushFeeds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 38),
    _NntpSrvrTotalPushFeeds_Type()
)
nntpSrvrTotalPushFeeds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalPushFeeds.setStatus("current")
_NntpSrvrTotalSSLConnections_Type = Gauge32
_NntpSrvrTotalSSLConnections_Object = MibTableColumn
nntpSrvrTotalSSLConnections = _NntpSrvrTotalSSLConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 39),
    _NntpSrvrTotalSSLConnections_Type()
)
nntpSrvrTotalSSLConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrTotalSSLConnections.setStatus("current")
_NntpSrvrXoverEntries_Type = Gauge32
_NntpSrvrXoverEntries_Object = MibTableColumn
nntpSrvrXoverEntries = _NntpSrvrXoverEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 40),
    _NntpSrvrXoverEntries_Type()
)
nntpSrvrXoverEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrXoverEntries.setStatus("current")
_NntpSrvrXoverEntriesPerSec_Type = Gauge32
_NntpSrvrXoverEntriesPerSec_Object = MibTableColumn
nntpSrvrXoverEntriesPerSec = _NntpSrvrXoverEntriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 41),
    _NntpSrvrXoverEntriesPerSec_Type()
)
nntpSrvrXoverEntriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nntpSrvrXoverEntriesPerSec.setStatus("current")
_Ntds_ObjectIdentity = ObjectIdentity
ntds = _Ntds_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55)
)
if mibBuilder.loadTexts:
    ntds.setStatus("current")
_NtdsABANRPerSec_Type = Gauge32
_NtdsABANRPerSec_Object = MibScalar
ntdsABANRPerSec = _NtdsABANRPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 1),
    _NtdsABANRPerSec_Type()
)
ntdsABANRPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABANRPerSec.setStatus("current")
_NtdsABBrowsesPerSec_Type = Gauge32
_NtdsABBrowsesPerSec_Object = MibScalar
ntdsABBrowsesPerSec = _NtdsABBrowsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 2),
    _NtdsABBrowsesPerSec_Type()
)
ntdsABBrowsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABBrowsesPerSec.setStatus("current")
_NtdsABClientSessions_Type = Gauge32
_NtdsABClientSessions_Object = MibScalar
ntdsABClientSessions = _NtdsABClientSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 3),
    _NtdsABClientSessions_Type()
)
ntdsABClientSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABClientSessions.setStatus("current")
_NtdsABMatchesPerSec_Type = Gauge32
_NtdsABMatchesPerSec_Object = MibScalar
ntdsABMatchesPerSec = _NtdsABMatchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 4),
    _NtdsABMatchesPerSec_Type()
)
ntdsABMatchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABMatchesPerSec.setStatus("current")
_NtdsABPropertyReadsPerSec_Type = Gauge32
_NtdsABPropertyReadsPerSec_Object = MibScalar
ntdsABPropertyReadsPerSec = _NtdsABPropertyReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 5),
    _NtdsABPropertyReadsPerSec_Type()
)
ntdsABPropertyReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABPropertyReadsPerSec.setStatus("current")
_NtdsABProxyLookupsPerSec_Type = Gauge32
_NtdsABProxyLookupsPerSec_Object = MibScalar
ntdsABProxyLookupsPerSec = _NtdsABProxyLookupsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 6),
    _NtdsABProxyLookupsPerSec_Type()
)
ntdsABProxyLookupsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABProxyLookupsPerSec.setStatus("current")
_NtdsABSearchesPerSec_Type = Gauge32
_NtdsABSearchesPerSec_Object = MibScalar
ntdsABSearchesPerSec = _NtdsABSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 7),
    _NtdsABSearchesPerSec_Type()
)
ntdsABSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsABSearchesPerSec.setStatus("current")
_NtdsATQThreadsLDAP_Type = Gauge32
_NtdsATQThreadsLDAP_Object = MibScalar
ntdsATQThreadsLDAP = _NtdsATQThreadsLDAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 8),
    _NtdsATQThreadsLDAP_Type()
)
ntdsATQThreadsLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsATQThreadsLDAP.setStatus("current")
_NtdsATQThreadsOther_Type = Gauge32
_NtdsATQThreadsOther_Object = MibScalar
ntdsATQThreadsOther = _NtdsATQThreadsOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 9),
    _NtdsATQThreadsOther_Type()
)
ntdsATQThreadsOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsATQThreadsOther.setStatus("current")
_NtdsATQThreadsTotal_Type = Gauge32
_NtdsATQThreadsTotal_Object = MibScalar
ntdsATQThreadsTotal = _NtdsATQThreadsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 10),
    _NtdsATQThreadsTotal_Type()
)
ntdsATQThreadsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsATQThreadsTotal.setStatus("current")
_NtdsDRAHighestUSNCommitHighPart_Type = Gauge32
_NtdsDRAHighestUSNCommitHighPart_Object = MibScalar
ntdsDRAHighestUSNCommitHighPart = _NtdsDRAHighestUSNCommitHighPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 11),
    _NtdsDRAHighestUSNCommitHighPart_Type()
)
ntdsDRAHighestUSNCommitHighPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAHighestUSNCommitHighPart.setStatus("current")
_NtdsDRAHighestUSNCommitLowPart_Type = Gauge32
_NtdsDRAHighestUSNCommitLowPart_Object = MibScalar
ntdsDRAHighestUSNCommitLowPart = _NtdsDRAHighestUSNCommitLowPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 12),
    _NtdsDRAHighestUSNCommitLowPart_Type()
)
ntdsDRAHighestUSNCommitLowPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAHighestUSNCommitLowPart.setStatus("current")
_NtdsDRAHighestUSNIssuedHighPart_Type = Gauge32
_NtdsDRAHighestUSNIssuedHighPart_Object = MibScalar
ntdsDRAHighestUSNIssuedHighPart = _NtdsDRAHighestUSNIssuedHighPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 13),
    _NtdsDRAHighestUSNIssuedHighPart_Type()
)
ntdsDRAHighestUSNIssuedHighPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAHighestUSNIssuedHighPart.setStatus("current")
_NtdsDRAHighestUSNIssuedLowPart_Type = Gauge32
_NtdsDRAHighestUSNIssuedLowPart_Object = MibScalar
ntdsDRAHighestUSNIssuedLowPart = _NtdsDRAHighestUSNIssuedLowPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 14),
    _NtdsDRAHighestUSNIssuedLowPart_Type()
)
ntdsDRAHighestUSNIssuedLowPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAHighestUSNIssuedLowPart.setStatus("current")
_NtdsDRAInboundBytesCBSACSBoot_Type = Gauge32
_NtdsDRAInboundBytesCBSACSBoot_Object = MibScalar
ntdsDRAInboundBytesCBSACSBoot = _NtdsDRAInboundBytesCBSACSBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 15),
    _NtdsDRAInboundBytesCBSACSBoot_Type()
)
ntdsDRAInboundBytesCBSACSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesCBSACSBoot.setStatus("current")
_NtdsDRAInboundBytesCBSACPerSec_Type = Gauge32
_NtdsDRAInboundBytesCBSACPerSec_Object = MibScalar
ntdsDRAInboundBytesCBSACPerSec = _NtdsDRAInboundBytesCBSACPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 16),
    _NtdsDRAInboundBytesCBSACPerSec_Type()
)
ntdsDRAInboundBytesCBSACPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesCBSACPerSec.setStatus("current")
_NtdsDRAInboundBytesCBSBCSBoot_Type = Gauge32
_NtdsDRAInboundBytesCBSBCSBoot_Object = MibScalar
ntdsDRAInboundBytesCBSBCSBoot = _NtdsDRAInboundBytesCBSBCSBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 17),
    _NtdsDRAInboundBytesCBSBCSBoot_Type()
)
ntdsDRAInboundBytesCBSBCSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesCBSBCSBoot.setStatus("current")
_NtdsDRAInboundBytesCBSBCPerSec_Type = Gauge32
_NtdsDRAInboundBytesCBSBCPerSec_Object = MibScalar
ntdsDRAInboundBytesCBSBCPerSec = _NtdsDRAInboundBytesCBSBCPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 18),
    _NtdsDRAInboundBytesCBSBCPerSec_Type()
)
ntdsDRAInboundBytesCBSBCPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesCBSBCPerSec.setStatus("current")
_NtdsDRAInboundBytesNotCWSSBoot_Type = Gauge32
_NtdsDRAInboundBytesNotCWSSBoot_Object = MibScalar
ntdsDRAInboundBytesNotCWSSBoot = _NtdsDRAInboundBytesNotCWSSBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 19),
    _NtdsDRAInboundBytesNotCWSSBoot_Type()
)
ntdsDRAInboundBytesNotCWSSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesNotCWSSBoot.setStatus("current")
_NtdsDRAInboundBytesNotCWSPerSec_Type = Gauge32
_NtdsDRAInboundBytesNotCWSPerSec_Object = MibScalar
ntdsDRAInboundBytesNotCWSPerSec = _NtdsDRAInboundBytesNotCWSPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 20),
    _NtdsDRAInboundBytesNotCWSPerSec_Type()
)
ntdsDRAInboundBytesNotCWSPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesNotCWSPerSec.setStatus("current")
_NtdsDRAInboundBytesTotalBoot_Type = Gauge32
_NtdsDRAInboundBytesTotalBoot_Object = MibScalar
ntdsDRAInboundBytesTotalBoot = _NtdsDRAInboundBytesTotalBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 21),
    _NtdsDRAInboundBytesTotalBoot_Type()
)
ntdsDRAInboundBytesTotalBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesTotalBoot.setStatus("current")
_NtdsDRAInboundBytesTotalPerSec_Type = Gauge32
_NtdsDRAInboundBytesTotalPerSec_Object = MibScalar
ntdsDRAInboundBytesTotalPerSec = _NtdsDRAInboundBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 22),
    _NtdsDRAInboundBytesTotalPerSec_Type()
)
ntdsDRAInboundBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundBytesTotalPerSec.setStatus("current")
_NtdsDRAInboundFullSyncObjsRemain_Type = Gauge32
_NtdsDRAInboundFullSyncObjsRemain_Object = MibScalar
ntdsDRAInboundFullSyncObjsRemain = _NtdsDRAInboundFullSyncObjsRemain_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 23),
    _NtdsDRAInboundFullSyncObjsRemain_Type()
)
ntdsDRAInboundFullSyncObjsRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundFullSyncObjsRemain.setStatus("current")
_NtdsDRAInboundObjUpdsRemainInPkt_Type = Gauge32
_NtdsDRAInboundObjUpdsRemainInPkt_Object = MibScalar
ntdsDRAInboundObjUpdsRemainInPkt = _NtdsDRAInboundObjUpdsRemainInPkt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 24),
    _NtdsDRAInboundObjUpdsRemainInPkt_Type()
)
ntdsDRAInboundObjUpdsRemainInPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundObjUpdsRemainInPkt.setStatus("current")
_NtdsDRAInboundObjsAppliedPerSec_Type = Gauge32
_NtdsDRAInboundObjsAppliedPerSec_Object = MibScalar
ntdsDRAInboundObjsAppliedPerSec = _NtdsDRAInboundObjsAppliedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 25),
    _NtdsDRAInboundObjsAppliedPerSec_Type()
)
ntdsDRAInboundObjsAppliedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundObjsAppliedPerSec.setStatus("current")
_NtdsDRAInboundObjsFilteredPerSec_Type = Gauge32
_NtdsDRAInboundObjsFilteredPerSec_Object = MibScalar
ntdsDRAInboundObjsFilteredPerSec = _NtdsDRAInboundObjsFilteredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 26),
    _NtdsDRAInboundObjsFilteredPerSec_Type()
)
ntdsDRAInboundObjsFilteredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundObjsFilteredPerSec.setStatus("current")
_NtdsDRAInboundObjectsPerSec_Type = Gauge32
_NtdsDRAInboundObjectsPerSec_Object = MibScalar
ntdsDRAInboundObjectsPerSec = _NtdsDRAInboundObjectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 27),
    _NtdsDRAInboundObjectsPerSec_Type()
)
ntdsDRAInboundObjectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundObjectsPerSec.setStatus("current")
_NtdsDRAInboundPropAppliedPerSec_Type = Gauge32
_NtdsDRAInboundPropAppliedPerSec_Object = MibScalar
ntdsDRAInboundPropAppliedPerSec = _NtdsDRAInboundPropAppliedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 28),
    _NtdsDRAInboundPropAppliedPerSec_Type()
)
ntdsDRAInboundPropAppliedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundPropAppliedPerSec.setStatus("current")
_NtdsDRAInboundPropFilteredPerSec_Type = Gauge32
_NtdsDRAInboundPropFilteredPerSec_Object = MibScalar
ntdsDRAInboundPropFilteredPerSec = _NtdsDRAInboundPropFilteredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 29),
    _NtdsDRAInboundPropFilteredPerSec_Type()
)
ntdsDRAInboundPropFilteredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundPropFilteredPerSec.setStatus("current")
_NtdsDRAInboundPropTotalPerSec_Type = Gauge32
_NtdsDRAInboundPropTotalPerSec_Object = MibScalar
ntdsDRAInboundPropTotalPerSec = _NtdsDRAInboundPropTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 30),
    _NtdsDRAInboundPropTotalPerSec_Type()
)
ntdsDRAInboundPropTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundPropTotalPerSec.setStatus("current")
_NtdsDRAInboundValuesDNsPerSec_Type = Gauge32
_NtdsDRAInboundValuesDNsPerSec_Object = MibScalar
ntdsDRAInboundValuesDNsPerSec = _NtdsDRAInboundValuesDNsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 31),
    _NtdsDRAInboundValuesDNsPerSec_Type()
)
ntdsDRAInboundValuesDNsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundValuesDNsPerSec.setStatus("current")
_NtdsDRAInboundValuesTotalPerSec_Type = Gauge32
_NtdsDRAInboundValuesTotalPerSec_Object = MibScalar
ntdsDRAInboundValuesTotalPerSec = _NtdsDRAInboundValuesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 32),
    _NtdsDRAInboundValuesTotalPerSec_Type()
)
ntdsDRAInboundValuesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInboundValuesTotalPerSec.setStatus("current")
_NtdsDRAOutboundBytesCBSACSBoot_Type = Gauge32
_NtdsDRAOutboundBytesCBSACSBoot_Object = MibScalar
ntdsDRAOutboundBytesCBSACSBoot = _NtdsDRAOutboundBytesCBSACSBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 33),
    _NtdsDRAOutboundBytesCBSACSBoot_Type()
)
ntdsDRAOutboundBytesCBSACSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesCBSACSBoot.setStatus("current")
_NtdsDRAOutboundBytesCBSACPerSec_Type = Gauge32
_NtdsDRAOutboundBytesCBSACPerSec_Object = MibScalar
ntdsDRAOutboundBytesCBSACPerSec = _NtdsDRAOutboundBytesCBSACPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 34),
    _NtdsDRAOutboundBytesCBSACPerSec_Type()
)
ntdsDRAOutboundBytesCBSACPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesCBSACPerSec.setStatus("current")
_NtdsDRAOutboundBytesCBSBCSBoot_Type = Gauge32
_NtdsDRAOutboundBytesCBSBCSBoot_Object = MibScalar
ntdsDRAOutboundBytesCBSBCSBoot = _NtdsDRAOutboundBytesCBSBCSBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 35),
    _NtdsDRAOutboundBytesCBSBCSBoot_Type()
)
ntdsDRAOutboundBytesCBSBCSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesCBSBCSBoot.setStatus("current")
_NtdsDRAOutboundBytesCBSBCPerSec_Type = Gauge32
_NtdsDRAOutboundBytesCBSBCPerSec_Object = MibScalar
ntdsDRAOutboundBytesCBSBCPerSec = _NtdsDRAOutboundBytesCBSBCPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 36),
    _NtdsDRAOutboundBytesCBSBCPerSec_Type()
)
ntdsDRAOutboundBytesCBSBCPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesCBSBCPerSec.setStatus("current")
_NtdsDRAOutboundBytesNotCWSSBoot_Type = Gauge32
_NtdsDRAOutboundBytesNotCWSSBoot_Object = MibScalar
ntdsDRAOutboundBytesNotCWSSBoot = _NtdsDRAOutboundBytesNotCWSSBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 37),
    _NtdsDRAOutboundBytesNotCWSSBoot_Type()
)
ntdsDRAOutboundBytesNotCWSSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesNotCWSSBoot.setStatus("current")
_NtdsDRAOutboundBytesNotCWSPerSec_Type = Gauge32
_NtdsDRAOutboundBytesNotCWSPerSec_Object = MibScalar
ntdsDRAOutboundBytesNotCWSPerSec = _NtdsDRAOutboundBytesNotCWSPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 38),
    _NtdsDRAOutboundBytesNotCWSPerSec_Type()
)
ntdsDRAOutboundBytesNotCWSPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesNotCWSPerSec.setStatus("current")
_NtdsDRAOutboundBytesTotalBoot_Type = Gauge32
_NtdsDRAOutboundBytesTotalBoot_Object = MibScalar
ntdsDRAOutboundBytesTotalBoot = _NtdsDRAOutboundBytesTotalBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 39),
    _NtdsDRAOutboundBytesTotalBoot_Type()
)
ntdsDRAOutboundBytesTotalBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesTotalBoot.setStatus("current")
_NtdsDRAOutboundBytesTotalPerSec_Type = Gauge32
_NtdsDRAOutboundBytesTotalPerSec_Object = MibScalar
ntdsDRAOutboundBytesTotalPerSec = _NtdsDRAOutboundBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 40),
    _NtdsDRAOutboundBytesTotalPerSec_Type()
)
ntdsDRAOutboundBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundBytesTotalPerSec.setStatus("current")
_NtdsDRAOutboundObjsFilterPerSec_Type = Gauge32
_NtdsDRAOutboundObjsFilterPerSec_Object = MibScalar
ntdsDRAOutboundObjsFilterPerSec = _NtdsDRAOutboundObjsFilterPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 41),
    _NtdsDRAOutboundObjsFilterPerSec_Type()
)
ntdsDRAOutboundObjsFilterPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundObjsFilterPerSec.setStatus("current")
_NtdsDRAOutboundObjectsPerSec_Type = Gauge32
_NtdsDRAOutboundObjectsPerSec_Object = MibScalar
ntdsDRAOutboundObjectsPerSec = _NtdsDRAOutboundObjectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 42),
    _NtdsDRAOutboundObjectsPerSec_Type()
)
ntdsDRAOutboundObjectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundObjectsPerSec.setStatus("current")
_NtdsDRAOutboundPropertiesPerSec_Type = Gauge32
_NtdsDRAOutboundPropertiesPerSec_Object = MibScalar
ntdsDRAOutboundPropertiesPerSec = _NtdsDRAOutboundPropertiesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 43),
    _NtdsDRAOutboundPropertiesPerSec_Type()
)
ntdsDRAOutboundPropertiesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundPropertiesPerSec.setStatus("current")
_NtdsDRAOutboundValuesDNsPerSec_Type = Gauge32
_NtdsDRAOutboundValuesDNsPerSec_Object = MibScalar
ntdsDRAOutboundValuesDNsPerSec = _NtdsDRAOutboundValuesDNsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 44),
    _NtdsDRAOutboundValuesDNsPerSec_Type()
)
ntdsDRAOutboundValuesDNsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundValuesDNsPerSec.setStatus("current")
_NtdsDRAOutboundValuesTotalPerSec_Type = Gauge32
_NtdsDRAOutboundValuesTotalPerSec_Object = MibScalar
ntdsDRAOutboundValuesTotalPerSec = _NtdsDRAOutboundValuesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 45),
    _NtdsDRAOutboundValuesTotalPerSec_Type()
)
ntdsDRAOutboundValuesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAOutboundValuesTotalPerSec.setStatus("current")
_NtdsDRAPendingReplicationSync_Type = Gauge32
_NtdsDRAPendingReplicationSync_Object = MibScalar
ntdsDRAPendingReplicationSync = _NtdsDRAPendingReplicationSync_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 46),
    _NtdsDRAPendingReplicationSync_Type()
)
ntdsDRAPendingReplicationSync.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAPendingReplicationSync.setStatus("current")
_NtdsDRASyncFailOnSchemaMismatch_Type = Gauge32
_NtdsDRASyncFailOnSchemaMismatch_Object = MibScalar
ntdsDRASyncFailOnSchemaMismatch = _NtdsDRASyncFailOnSchemaMismatch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 47),
    _NtdsDRASyncFailOnSchemaMismatch_Type()
)
ntdsDRASyncFailOnSchemaMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRASyncFailOnSchemaMismatch.setStatus("current")
_NtdsDRASyncRequestsMade_Type = Gauge32
_NtdsDRASyncRequestsMade_Object = MibScalar
ntdsDRASyncRequestsMade = _NtdsDRASyncRequestsMade_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 48),
    _NtdsDRASyncRequestsMade_Type()
)
ntdsDRASyncRequestsMade.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRASyncRequestsMade.setStatus("current")
_NtdsDRASyncRequestsSuccessful_Type = Gauge32
_NtdsDRASyncRequestsSuccessful_Object = MibScalar
ntdsDRASyncRequestsSuccessful = _NtdsDRASyncRequestsSuccessful_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 49),
    _NtdsDRASyncRequestsSuccessful_Type()
)
ntdsDRASyncRequestsSuccessful.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRASyncRequestsSuccessful.setStatus("current")
_NtdsDSPercentReadsOther_Type = Gauge32
_NtdsDSPercentReadsOther_Object = MibScalar
ntdsDSPercentReadsOther = _NtdsDSPercentReadsOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 50),
    _NtdsDSPercentReadsOther_Type()
)
ntdsDSPercentReadsOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsOther.setStatus("current")
_NtdsDSPercentReadsFromDRA_Type = Gauge32
_NtdsDSPercentReadsFromDRA_Object = MibScalar
ntdsDSPercentReadsFromDRA = _NtdsDSPercentReadsFromDRA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 51),
    _NtdsDSPercentReadsFromDRA_Type()
)
ntdsDSPercentReadsFromDRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromDRA.setStatus("current")
_NtdsDSPercentReadsFromKCC_Type = Gauge32
_NtdsDSPercentReadsFromKCC_Object = MibScalar
ntdsDSPercentReadsFromKCC = _NtdsDSPercentReadsFromKCC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 52),
    _NtdsDSPercentReadsFromKCC_Type()
)
ntdsDSPercentReadsFromKCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromKCC.setStatus("current")
_NtdsDSPercentReadsFromLSA_Type = Gauge32
_NtdsDSPercentReadsFromLSA_Object = MibScalar
ntdsDSPercentReadsFromLSA = _NtdsDSPercentReadsFromLSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 53),
    _NtdsDSPercentReadsFromLSA_Type()
)
ntdsDSPercentReadsFromLSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromLSA.setStatus("current")
_NtdsDSPercentReadsFromNSPI_Type = Gauge32
_NtdsDSPercentReadsFromNSPI_Object = MibScalar
ntdsDSPercentReadsFromNSPI = _NtdsDSPercentReadsFromNSPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 54),
    _NtdsDSPercentReadsFromNSPI_Type()
)
ntdsDSPercentReadsFromNSPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromNSPI.setStatus("current")
_NtdsDSPercentReadsFromSAM_Type = Gauge32
_NtdsDSPercentReadsFromSAM_Object = MibScalar
ntdsDSPercentReadsFromSAM = _NtdsDSPercentReadsFromSAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 55),
    _NtdsDSPercentReadsFromSAM_Type()
)
ntdsDSPercentReadsFromSAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromSAM.setStatus("current")
_NtdsDSPercentReadsFromXDS_Type = Gauge32
_NtdsDSPercentReadsFromXDS_Object = MibScalar
ntdsDSPercentReadsFromXDS = _NtdsDSPercentReadsFromXDS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 56),
    _NtdsDSPercentReadsFromXDS_Type()
)
ntdsDSPercentReadsFromXDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromXDS.setStatus("current")
_NtdsDSPercentSearchesOther_Type = Gauge32
_NtdsDSPercentSearchesOther_Object = MibScalar
ntdsDSPercentSearchesOther = _NtdsDSPercentSearchesOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 57),
    _NtdsDSPercentSearchesOther_Type()
)
ntdsDSPercentSearchesOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesOther.setStatus("current")
_NtdsDSPercentSearchesFromDRA_Type = Gauge32
_NtdsDSPercentSearchesFromDRA_Object = MibScalar
ntdsDSPercentSearchesFromDRA = _NtdsDSPercentSearchesFromDRA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 58),
    _NtdsDSPercentSearchesFromDRA_Type()
)
ntdsDSPercentSearchesFromDRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromDRA.setStatus("current")
_NtdsDSPercentSearchesFromKCC_Type = Gauge32
_NtdsDSPercentSearchesFromKCC_Object = MibScalar
ntdsDSPercentSearchesFromKCC = _NtdsDSPercentSearchesFromKCC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 59),
    _NtdsDSPercentSearchesFromKCC_Type()
)
ntdsDSPercentSearchesFromKCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromKCC.setStatus("current")
_NtdsDSPercentSearchesFromLDAP_Type = Gauge32
_NtdsDSPercentSearchesFromLDAP_Object = MibScalar
ntdsDSPercentSearchesFromLDAP = _NtdsDSPercentSearchesFromLDAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 60),
    _NtdsDSPercentSearchesFromLDAP_Type()
)
ntdsDSPercentSearchesFromLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromLDAP.setStatus("current")
_NtdsDSPercentSearchesFromLSA_Type = Gauge32
_NtdsDSPercentSearchesFromLSA_Object = MibScalar
ntdsDSPercentSearchesFromLSA = _NtdsDSPercentSearchesFromLSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 61),
    _NtdsDSPercentSearchesFromLSA_Type()
)
ntdsDSPercentSearchesFromLSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromLSA.setStatus("current")
_NtdsDSPercentSearchesFromNSPI_Type = Gauge32
_NtdsDSPercentSearchesFromNSPI_Object = MibScalar
ntdsDSPercentSearchesFromNSPI = _NtdsDSPercentSearchesFromNSPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 62),
    _NtdsDSPercentSearchesFromNSPI_Type()
)
ntdsDSPercentSearchesFromNSPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromNSPI.setStatus("current")
_NtdsDSPercentSearchesFromSAM_Type = Gauge32
_NtdsDSPercentSearchesFromSAM_Object = MibScalar
ntdsDSPercentSearchesFromSAM = _NtdsDSPercentSearchesFromSAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 63),
    _NtdsDSPercentSearchesFromSAM_Type()
)
ntdsDSPercentSearchesFromSAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromSAM.setStatus("current")
_NtdsDSPercentSearchesFromXDS_Type = Gauge32
_NtdsDSPercentSearchesFromXDS_Object = MibScalar
ntdsDSPercentSearchesFromXDS = _NtdsDSPercentSearchesFromXDS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 64),
    _NtdsDSPercentSearchesFromXDS_Type()
)
ntdsDSPercentSearchesFromXDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromXDS.setStatus("current")
_NtdsDSPercentWritesOther_Type = Gauge32
_NtdsDSPercentWritesOther_Object = MibScalar
ntdsDSPercentWritesOther = _NtdsDSPercentWritesOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 65),
    _NtdsDSPercentWritesOther_Type()
)
ntdsDSPercentWritesOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesOther.setStatus("current")
_NtdsDSPercentWritesFromDRA_Type = Gauge32
_NtdsDSPercentWritesFromDRA_Object = MibScalar
ntdsDSPercentWritesFromDRA = _NtdsDSPercentWritesFromDRA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 66),
    _NtdsDSPercentWritesFromDRA_Type()
)
ntdsDSPercentWritesFromDRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromDRA.setStatus("current")
_NtdsDSPercentWritesFromKCC_Type = Gauge32
_NtdsDSPercentWritesFromKCC_Object = MibScalar
ntdsDSPercentWritesFromKCC = _NtdsDSPercentWritesFromKCC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 67),
    _NtdsDSPercentWritesFromKCC_Type()
)
ntdsDSPercentWritesFromKCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromKCC.setStatus("current")
_NtdsDSPercentWritesFromLDAP_Type = Gauge32
_NtdsDSPercentWritesFromLDAP_Object = MibScalar
ntdsDSPercentWritesFromLDAP = _NtdsDSPercentWritesFromLDAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 68),
    _NtdsDSPercentWritesFromLDAP_Type()
)
ntdsDSPercentWritesFromLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromLDAP.setStatus("current")
_NtdsDSPercentWritesFromLSA_Type = Gauge32
_NtdsDSPercentWritesFromLSA_Object = MibScalar
ntdsDSPercentWritesFromLSA = _NtdsDSPercentWritesFromLSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 69),
    _NtdsDSPercentWritesFromLSA_Type()
)
ntdsDSPercentWritesFromLSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromLSA.setStatus("current")
_NtdsDSPercentWritesFromNSPI_Type = Gauge32
_NtdsDSPercentWritesFromNSPI_Object = MibScalar
ntdsDSPercentWritesFromNSPI = _NtdsDSPercentWritesFromNSPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 70),
    _NtdsDSPercentWritesFromNSPI_Type()
)
ntdsDSPercentWritesFromNSPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromNSPI.setStatus("current")
_NtdsDSPercentWritesFromSAM_Type = Gauge32
_NtdsDSPercentWritesFromSAM_Object = MibScalar
ntdsDSPercentWritesFromSAM = _NtdsDSPercentWritesFromSAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 71),
    _NtdsDSPercentWritesFromSAM_Type()
)
ntdsDSPercentWritesFromSAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromSAM.setStatus("current")
_NtdsDSPercentWritesFromXDS_Type = Gauge32
_NtdsDSPercentWritesFromXDS_Object = MibScalar
ntdsDSPercentWritesFromXDS = _NtdsDSPercentWritesFromXDS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 72),
    _NtdsDSPercentWritesFromXDS_Type()
)
ntdsDSPercentWritesFromXDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromXDS.setStatus("current")
_NtdsDSClientBindsPerSec_Type = Gauge32
_NtdsDSClientBindsPerSec_Object = MibScalar
ntdsDSClientBindsPerSec = _NtdsDSClientBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 73),
    _NtdsDSClientBindsPerSec_Type()
)
ntdsDSClientBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSClientBindsPerSec.setStatus("current")
_NtdsDSClientNameTranslatePerSec_Type = Gauge32
_NtdsDSClientNameTranslatePerSec_Object = MibScalar
ntdsDSClientNameTranslatePerSec = _NtdsDSClientNameTranslatePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 74),
    _NtdsDSClientNameTranslatePerSec_Type()
)
ntdsDSClientNameTranslatePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSClientNameTranslatePerSec.setStatus("current")
_NtdsDSDirectoryReadsPerSec_Type = Gauge32
_NtdsDSDirectoryReadsPerSec_Object = MibScalar
ntdsDSDirectoryReadsPerSec = _NtdsDSDirectoryReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 75),
    _NtdsDSDirectoryReadsPerSec_Type()
)
ntdsDSDirectoryReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSDirectoryReadsPerSec.setStatus("current")
_NtdsDSDirectorySearchesPerSec_Type = Gauge32
_NtdsDSDirectorySearchesPerSec_Object = MibScalar
ntdsDSDirectorySearchesPerSec = _NtdsDSDirectorySearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 76),
    _NtdsDSDirectorySearchesPerSec_Type()
)
ntdsDSDirectorySearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSDirectorySearchesPerSec.setStatus("current")
_NtdsDSDirectoryWritesPerSec_Type = Gauge32
_NtdsDSDirectoryWritesPerSec_Object = MibScalar
ntdsDSDirectoryWritesPerSec = _NtdsDSDirectoryWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 77),
    _NtdsDSDirectoryWritesPerSec_Type()
)
ntdsDSDirectoryWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSDirectoryWritesPerSec.setStatus("current")
_NtdsDSMonitorListSize_Type = Gauge32
_NtdsDSMonitorListSize_Object = MibScalar
ntdsDSMonitorListSize = _NtdsDSMonitorListSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 78),
    _NtdsDSMonitorListSize_Type()
)
ntdsDSMonitorListSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSMonitorListSize.setStatus("current")
_NtdsDSNameCacheHitRate_Type = Gauge32
_NtdsDSNameCacheHitRate_Object = MibScalar
ntdsDSNameCacheHitRate = _NtdsDSNameCacheHitRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 79),
    _NtdsDSNameCacheHitRate_Type()
)
ntdsDSNameCacheHitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSNameCacheHitRate.setStatus("current")
_NtdsDSNotifyQueueSize_Type = Gauge32
_NtdsDSNotifyQueueSize_Object = MibScalar
ntdsDSNotifyQueueSize = _NtdsDSNotifyQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 80),
    _NtdsDSNotifyQueueSize_Type()
)
ntdsDSNotifyQueueSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSNotifyQueueSize.setStatus("current")
_NtdsDSSearchSuboperationsPerSec_Type = Gauge32
_NtdsDSSearchSuboperationsPerSec_Object = MibScalar
ntdsDSSearchSuboperationsPerSec = _NtdsDSSearchSuboperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 81),
    _NtdsDSSearchSuboperationsPerSec_Type()
)
ntdsDSSearchSuboperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSSearchSuboperationsPerSec.setStatus("current")
_NtdsDSSecurityDescPropEvents_Type = Gauge32
_NtdsDSSecurityDescPropEvents_Object = MibScalar
ntdsDSSecurityDescPropEvents = _NtdsDSSecurityDescPropEvents_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 82),
    _NtdsDSSecurityDescPropEvents_Type()
)
ntdsDSSecurityDescPropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSSecurityDescPropEvents.setStatus("current")
_NtdsDSSecurityDescPropAvgExTime_Type = Gauge32
_NtdsDSSecurityDescPropAvgExTime_Object = MibScalar
ntdsDSSecurityDescPropAvgExTime = _NtdsDSSecurityDescPropAvgExTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 83),
    _NtdsDSSecurityDescPropAvgExTime_Type()
)
ntdsDSSecurityDescPropAvgExTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSSecurityDescPropAvgExTime.setStatus("current")
_NtdsDSSecurityDescPropRunQueue_Type = Gauge32
_NtdsDSSecurityDescPropRunQueue_Object = MibScalar
ntdsDSSecurityDescPropRunQueue = _NtdsDSSecurityDescPropRunQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 84),
    _NtdsDSSecurityDescPropRunQueue_Type()
)
ntdsDSSecurityDescPropRunQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSSecurityDescPropRunQueue.setStatus("current")
_NtdsDSSecurityDescSubopPerSec_Type = Gauge32
_NtdsDSSecurityDescSubopPerSec_Object = MibScalar
ntdsDSSecurityDescSubopPerSec = _NtdsDSSecurityDescSubopPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 85),
    _NtdsDSSecurityDescSubopPerSec_Type()
)
ntdsDSSecurityDescSubopPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSSecurityDescSubopPerSec.setStatus("current")
_NtdsDSServerBindsPerSec_Type = Gauge32
_NtdsDSServerBindsPerSec_Object = MibScalar
ntdsDSServerBindsPerSec = _NtdsDSServerBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 86),
    _NtdsDSServerBindsPerSec_Type()
)
ntdsDSServerBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSServerBindsPerSec.setStatus("current")
_NtdsDSServerNameTranslatePerSec_Type = Gauge32
_NtdsDSServerNameTranslatePerSec_Object = MibScalar
ntdsDSServerNameTranslatePerSec = _NtdsDSServerNameTranslatePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 87),
    _NtdsDSServerNameTranslatePerSec_Type()
)
ntdsDSServerNameTranslatePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSServerNameTranslatePerSec.setStatus("current")
_NtdsDSThreadsInUse_Type = Gauge32
_NtdsDSThreadsInUse_Object = MibScalar
ntdsDSThreadsInUse = _NtdsDSThreadsInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 88),
    _NtdsDSThreadsInUse_Type()
)
ntdsDSThreadsInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSThreadsInUse.setStatus("current")
_NtdsKDCASRequests_Type = Gauge32
_NtdsKDCASRequests_Object = MibScalar
ntdsKDCASRequests = _NtdsKDCASRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 89),
    _NtdsKDCASRequests_Type()
)
ntdsKDCASRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsKDCASRequests.setStatus("current")
_NtdsKDCTGSRequests_Type = Gauge32
_NtdsKDCTGSRequests_Object = MibScalar
ntdsKDCTGSRequests = _NtdsKDCTGSRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 90),
    _NtdsKDCTGSRequests_Type()
)
ntdsKDCTGSRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsKDCTGSRequests.setStatus("current")
_NtdsKerberosAuthentications_Type = Gauge32
_NtdsKerberosAuthentications_Object = MibScalar
ntdsKerberosAuthentications = _NtdsKerberosAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 91),
    _NtdsKerberosAuthentications_Type()
)
ntdsKerberosAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsKerberosAuthentications.setStatus("current")
_NtdsLDAPActiveThreads_Type = Gauge32
_NtdsLDAPActiveThreads_Object = MibScalar
ntdsLDAPActiveThreads = _NtdsLDAPActiveThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 92),
    _NtdsLDAPActiveThreads_Type()
)
ntdsLDAPActiveThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPActiveThreads.setStatus("current")
_NtdsLDAPBindTime_Type = Gauge32
_NtdsLDAPBindTime_Object = MibScalar
ntdsLDAPBindTime = _NtdsLDAPBindTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 93),
    _NtdsLDAPBindTime_Type()
)
ntdsLDAPBindTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPBindTime.setStatus("current")
_NtdsLDAPClientSessions_Type = Gauge32
_NtdsLDAPClientSessions_Object = MibScalar
ntdsLDAPClientSessions = _NtdsLDAPClientSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 94),
    _NtdsLDAPClientSessions_Type()
)
ntdsLDAPClientSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPClientSessions.setStatus("current")
_NtdsLDAPSearchesPerSec_Type = Gauge32
_NtdsLDAPSearchesPerSec_Object = MibScalar
ntdsLDAPSearchesPerSec = _NtdsLDAPSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 95),
    _NtdsLDAPSearchesPerSec_Type()
)
ntdsLDAPSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPSearchesPerSec.setStatus("current")
_NtdsLDAPSuccessfulBinds_Type = Gauge32
_NtdsLDAPSuccessfulBinds_Object = MibScalar
ntdsLDAPSuccessfulBinds = _NtdsLDAPSuccessfulBinds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 96),
    _NtdsLDAPSuccessfulBinds_Type()
)
ntdsLDAPSuccessfulBinds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPSuccessfulBinds.setStatus("current")
_NtdsLDAPSuccessfulBindsPerSec_Type = Gauge32
_NtdsLDAPSuccessfulBindsPerSec_Object = MibScalar
ntdsLDAPSuccessfulBindsPerSec = _NtdsLDAPSuccessfulBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 97),
    _NtdsLDAPSuccessfulBindsPerSec_Type()
)
ntdsLDAPSuccessfulBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPSuccessfulBindsPerSec.setStatus("current")
_NtdsLDAPUDPOperationsPerSec_Type = Gauge32
_NtdsLDAPUDPOperationsPerSec_Object = MibScalar
ntdsLDAPUDPOperationsPerSec = _NtdsLDAPUDPOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 98),
    _NtdsLDAPUDPOperationsPerSec_Type()
)
ntdsLDAPUDPOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPUDPOperationsPerSec.setStatus("current")
_NtdsLDAPWritesPerSec_Type = Gauge32
_NtdsLDAPWritesPerSec_Object = MibScalar
ntdsLDAPWritesPerSec = _NtdsLDAPWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 99),
    _NtdsLDAPWritesPerSec_Type()
)
ntdsLDAPWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPWritesPerSec.setStatus("current")
_NtdsNTLMAuthentications_Type = Gauge32
_NtdsNTLMAuthentications_Object = MibScalar
ntdsNTLMAuthentications = _NtdsNTLMAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 100),
    _NtdsNTLMAuthentications_Type()
)
ntdsNTLMAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsNTLMAuthentications.setStatus("current")
_NtdsSAMAccountGroupMemEvalPerSec_Type = Gauge32
_NtdsSAMAccountGroupMemEvalPerSec_Object = MibScalar
ntdsSAMAccountGroupMemEvalPerSec = _NtdsSAMAccountGroupMemEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 101),
    _NtdsSAMAccountGroupMemEvalPerSec_Type()
)
ntdsSAMAccountGroupMemEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMAccountGroupMemEvalPerSec.setStatus("current")
_NtdsSAMDisplayInfoQueriesPerSec_Type = Gauge32
_NtdsSAMDisplayInfoQueriesPerSec_Object = MibScalar
ntdsSAMDisplayInfoQueriesPerSec = _NtdsSAMDisplayInfoQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 102),
    _NtdsSAMDisplayInfoQueriesPerSec_Type()
)
ntdsSAMDisplayInfoQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMDisplayInfoQueriesPerSec.setStatus("current")
_NtdsSAMEnumerationsPerSec_Type = Gauge32
_NtdsSAMEnumerationsPerSec_Object = MibScalar
ntdsSAMEnumerationsPerSec = _NtdsSAMEnumerationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 103),
    _NtdsSAMEnumerationsPerSec_Type()
)
ntdsSAMEnumerationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMEnumerationsPerSec.setStatus("current")
_NtdsSAMGCEvaluationsPerSec_Type = Gauge32
_NtdsSAMGCEvaluationsPerSec_Object = MibScalar
ntdsSAMGCEvaluationsPerSec = _NtdsSAMGCEvaluationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 104),
    _NtdsSAMGCEvaluationsPerSec_Type()
)
ntdsSAMGCEvaluationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMGCEvaluationsPerSec.setStatus("current")
_NtdsSAMMachineCreateAtpsPerSec_Type = Gauge32
_NtdsSAMMachineCreateAtpsPerSec_Object = MibScalar
ntdsSAMMachineCreateAtpsPerSec = _NtdsSAMMachineCreateAtpsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 105),
    _NtdsSAMMachineCreateAtpsPerSec_Type()
)
ntdsSAMMachineCreateAtpsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMMachineCreateAtpsPerSec.setStatus("current")
_NtdsSAMMembershipChangesPerSec_Type = Gauge32
_NtdsSAMMembershipChangesPerSec_Object = MibScalar
ntdsSAMMembershipChangesPerSec = _NtdsSAMMembershipChangesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 106),
    _NtdsSAMMembershipChangesPerSec_Type()
)
ntdsSAMMembershipChangesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMMembershipChangesPerSec.setStatus("current")
_NtdsSAMNonTransMemEvalPerSec_Type = Gauge32
_NtdsSAMNonTransMemEvalPerSec_Object = MibScalar
ntdsSAMNonTransMemEvalPerSec = _NtdsSAMNonTransMemEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 107),
    _NtdsSAMNonTransMemEvalPerSec_Type()
)
ntdsSAMNonTransMemEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMNonTransMemEvalPerSec.setStatus("current")
_NtdsSAMPasswordChangesPerSec_Type = Gauge32
_NtdsSAMPasswordChangesPerSec_Object = MibScalar
ntdsSAMPasswordChangesPerSec = _NtdsSAMPasswordChangesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 108),
    _NtdsSAMPasswordChangesPerSec_Type()
)
ntdsSAMPasswordChangesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMPasswordChangesPerSec.setStatus("current")
_NtdsSAMResourceGrpMemEvalPerSec_Type = Gauge32
_NtdsSAMResourceGrpMemEvalPerSec_Object = MibScalar
ntdsSAMResourceGrpMemEvalPerSec = _NtdsSAMResourceGrpMemEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 109),
    _NtdsSAMResourceGrpMemEvalPerSec_Type()
)
ntdsSAMResourceGrpMemEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMResourceGrpMemEvalPerSec.setStatus("current")
_NtdsSAMSuccessMachineCreatPerSec_Type = Gauge32
_NtdsSAMSuccessMachineCreatPerSec_Object = MibScalar
ntdsSAMSuccessMachineCreatPerSec = _NtdsSAMSuccessMachineCreatPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 110),
    _NtdsSAMSuccessMachineCreatPerSec_Type()
)
ntdsSAMSuccessMachineCreatPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMSuccessMachineCreatPerSec.setStatus("current")
_NtdsSAMSuccessUserCreatePerSec_Type = Gauge32
_NtdsSAMSuccessUserCreatePerSec_Object = MibScalar
ntdsSAMSuccessUserCreatePerSec = _NtdsSAMSuccessUserCreatePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 111),
    _NtdsSAMSuccessUserCreatePerSec_Type()
)
ntdsSAMSuccessUserCreatePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMSuccessUserCreatePerSec.setStatus("current")
_NtdsSAMTransitiveMembEvalPerSec_Type = Gauge32
_NtdsSAMTransitiveMembEvalPerSec_Object = MibScalar
ntdsSAMTransitiveMembEvalPerSec = _NtdsSAMTransitiveMembEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 112),
    _NtdsSAMTransitiveMembEvalPerSec_Type()
)
ntdsSAMTransitiveMembEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMTransitiveMembEvalPerSec.setStatus("current")
_NtdsSAMUniversalGrpMemEvalPerSec_Type = Gauge32
_NtdsSAMUniversalGrpMemEvalPerSec_Object = MibScalar
ntdsSAMUniversalGrpMemEvalPerSec = _NtdsSAMUniversalGrpMemEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 113),
    _NtdsSAMUniversalGrpMemEvalPerSec_Type()
)
ntdsSAMUniversalGrpMemEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMUniversalGrpMemEvalPerSec.setStatus("current")
_NtdsSAMUserCreateAttemptsPerSec_Type = Gauge32
_NtdsSAMUserCreateAttemptsPerSec_Object = MibScalar
ntdsSAMUserCreateAttemptsPerSec = _NtdsSAMUserCreateAttemptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 114),
    _NtdsSAMUserCreateAttemptsPerSec_Type()
)
ntdsSAMUserCreateAttemptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMUserCreateAttemptsPerSec.setStatus("current")
_NtdsXDSClientSessions_Type = Gauge32
_NtdsXDSClientSessions_Object = MibScalar
ntdsXDSClientSessions = _NtdsXDSClientSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 115),
    _NtdsXDSClientSessions_Type()
)
ntdsXDSClientSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsXDSClientSessions.setStatus("current")
_NtdsDRAInLnkValUpdsRemainInPckt_Type = Gauge32
_NtdsDRAInLnkValUpdsRemainInPckt_Object = MibScalar
ntdsDRAInLnkValUpdsRemainInPckt = _NtdsDRAInLnkValUpdsRemainInPckt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 116),
    _NtdsDRAInLnkValUpdsRemainInPckt_Type()
)
ntdsDRAInLnkValUpdsRemainInPckt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInLnkValUpdsRemainInPckt.setStatus("current")
_NtdsDRAInTotalUpdsRemainInPacket_Type = Gauge32
_NtdsDRAInTotalUpdsRemainInPacket_Object = MibScalar
ntdsDRAInTotalUpdsRemainInPacket = _NtdsDRAInTotalUpdsRemainInPacket_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 117),
    _NtdsDRAInTotalUpdsRemainInPacket_Type()
)
ntdsDRAInTotalUpdsRemainInPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAInTotalUpdsRemainInPacket.setStatus("current")
_NtdsDRAPendReplicationOps_Type = Gauge32
_NtdsDRAPendReplicationOps_Object = MibScalar
ntdsDRAPendReplicationOps = _NtdsDRAPendReplicationOps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 118),
    _NtdsDRAPendReplicationOps_Type()
)
ntdsDRAPendReplicationOps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAPendReplicationOps.setStatus("current")
_NtdsDRAThreadsGettingNCChanges_Type = Gauge32
_NtdsDRAThreadsGettingNCChanges_Object = MibScalar
ntdsDRAThreadsGettingNCChanges = _NtdsDRAThreadsGettingNCChanges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 119),
    _NtdsDRAThreadsGettingNCChanges_Type()
)
ntdsDRAThreadsGettingNCChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAThreadsGettingNCChanges.setStatus("current")
_NtdsDRAThdsGetNCChngsHoldSmphr_Type = Gauge32
_NtdsDRAThdsGetNCChngsHoldSmphr_Object = MibScalar
ntdsDRAThdsGetNCChngsHoldSmphr = _NtdsDRAThdsGetNCChngsHoldSmphr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 120),
    _NtdsDRAThdsGetNCChngsHoldSmphr_Type()
)
ntdsDRAThdsGetNCChngsHoldSmphr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDRAThdsGetNCChngsHoldSmphr.setStatus("current")
_NtdsDSPercentReadsFromNTDSAPI_Type = Gauge32
_NtdsDSPercentReadsFromNTDSAPI_Object = MibScalar
ntdsDSPercentReadsFromNTDSAPI = _NtdsDSPercentReadsFromNTDSAPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 121),
    _NtdsDSPercentReadsFromNTDSAPI_Type()
)
ntdsDSPercentReadsFromNTDSAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentReadsFromNTDSAPI.setStatus("current")
_NtdsDSPercentSearchesFromNTDSAPI_Type = Gauge32
_NtdsDSPercentSearchesFromNTDSAPI_Object = MibScalar
ntdsDSPercentSearchesFromNTDSAPI = _NtdsDSPercentSearchesFromNTDSAPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 122),
    _NtdsDSPercentSearchesFromNTDSAPI_Type()
)
ntdsDSPercentSearchesFromNTDSAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentSearchesFromNTDSAPI.setStatus("current")
_NtdsDSPercentWritesFromNTDSAPI_Type = Gauge32
_NtdsDSPercentWritesFromNTDSAPI_Object = MibScalar
ntdsDSPercentWritesFromNTDSAPI = _NtdsDSPercentWritesFromNTDSAPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 123),
    _NtdsDSPercentWritesFromNTDSAPI_Type()
)
ntdsDSPercentWritesFromNTDSAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDSPercentWritesFromNTDSAPI.setStatus("current")
_NtdsLDAPClosedConnectionsPerSec_Type = Gauge32
_NtdsLDAPClosedConnectionsPerSec_Object = MibScalar
ntdsLDAPClosedConnectionsPerSec = _NtdsLDAPClosedConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 124),
    _NtdsLDAPClosedConnectionsPerSec_Type()
)
ntdsLDAPClosedConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPClosedConnectionsPerSec.setStatus("current")
_NtdsLDAPNewConnectionsPerSec_Type = Gauge32
_NtdsLDAPNewConnectionsPerSec_Object = MibScalar
ntdsLDAPNewConnectionsPerSec = _NtdsLDAPNewConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 125),
    _NtdsLDAPNewConnectionsPerSec_Type()
)
ntdsLDAPNewConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPNewConnectionsPerSec.setStatus("current")
_NtdsLDAPNewSSLConnectionsPerSec_Type = Gauge32
_NtdsLDAPNewSSLConnectionsPerSec_Object = MibScalar
ntdsLDAPNewSSLConnectionsPerSec = _NtdsLDAPNewSSLConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 126),
    _NtdsLDAPNewSSLConnectionsPerSec_Type()
)
ntdsLDAPNewSSLConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLDAPNewSSLConnectionsPerSec.setStatus("current")
_NtdsSAMAccountGroupEvalLatency_Type = Gauge32
_NtdsSAMAccountGroupEvalLatency_Object = MibScalar
ntdsSAMAccountGroupEvalLatency = _NtdsSAMAccountGroupEvalLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 127),
    _NtdsSAMAccountGroupEvalLatency_Type()
)
ntdsSAMAccountGroupEvalLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMAccountGroupEvalLatency.setStatus("current")
_NtdsSAMResourceGroupEvalLatency_Type = Gauge32
_NtdsSAMResourceGroupEvalLatency_Object = MibScalar
ntdsSAMResourceGroupEvalLatency = _NtdsSAMResourceGroupEvalLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 128),
    _NtdsSAMResourceGroupEvalLatency_Type()
)
ntdsSAMResourceGroupEvalLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMResourceGroupEvalLatency.setStatus("current")
_NtdsATQEstimatedQueueDelay_Type = Gauge32
_NtdsATQEstimatedQueueDelay_Object = MibScalar
ntdsATQEstimatedQueueDelay = _NtdsATQEstimatedQueueDelay_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 129),
    _NtdsATQEstimatedQueueDelay_Type()
)
ntdsATQEstimatedQueueDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsATQEstimatedQueueDelay.setStatus("current")
_NtdsATQOutstandingQueuedRequests_Type = Gauge32
_NtdsATQOutstandingQueuedRequests_Object = MibScalar
ntdsATQOutstandingQueuedRequests = _NtdsATQOutstandingQueuedRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 130),
    _NtdsATQOutstandingQueuedRequests_Type()
)
ntdsATQOutstandingQueuedRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsATQOutstandingQueuedRequests.setStatus("current")
_NtdsATQRequestLatency_Type = Gauge32
_NtdsATQRequestLatency_Object = MibScalar
ntdsATQRequestLatency = _NtdsATQRequestLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 131),
    _NtdsATQRequestLatency_Type()
)
ntdsATQRequestLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsATQRequestLatency.setStatus("current")
_NtdsBaseSearchesPerSec_Type = Gauge32
_NtdsBaseSearchesPerSec_Object = MibScalar
ntdsBaseSearchesPerSec = _NtdsBaseSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 132),
    _NtdsBaseSearchesPerSec_Type()
)
ntdsBaseSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsBaseSearchesPerSec.setStatus("current")
_NtdsDatabaseAddsPerSec_Type = Gauge32
_NtdsDatabaseAddsPerSec_Object = MibScalar
ntdsDatabaseAddsPerSec = _NtdsDatabaseAddsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 133),
    _NtdsDatabaseAddsPerSec_Type()
)
ntdsDatabaseAddsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDatabaseAddsPerSec.setStatus("current")
_NtdsDatabaseDeletesPerSec_Type = Gauge32
_NtdsDatabaseDeletesPerSec_Object = MibScalar
ntdsDatabaseDeletesPerSec = _NtdsDatabaseDeletesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 134),
    _NtdsDatabaseDeletesPerSec_Type()
)
ntdsDatabaseDeletesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDatabaseDeletesPerSec.setStatus("current")
_NtdsDatabaseModifysPerSec_Type = Gauge32
_NtdsDatabaseModifysPerSec_Object = MibScalar
ntdsDatabaseModifysPerSec = _NtdsDatabaseModifysPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 135),
    _NtdsDatabaseModifysPerSec_Type()
)
ntdsDatabaseModifysPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDatabaseModifysPerSec.setStatus("current")
_NtdsDigestBindsPerSec_Type = Gauge32
_NtdsDigestBindsPerSec_Object = MibScalar
ntdsDigestBindsPerSec = _NtdsDigestBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 136),
    _NtdsDigestBindsPerSec_Type()
)
ntdsDigestBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsDigestBindsPerSec.setStatus("current")
_NtdsExternalBindsPerSec_Type = Gauge32
_NtdsExternalBindsPerSec_Object = MibScalar
ntdsExternalBindsPerSec = _NtdsExternalBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 137),
    _NtdsExternalBindsPerSec_Type()
)
ntdsExternalBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsExternalBindsPerSec.setStatus("current")
_NtdsFastBindsPerSec_Type = Gauge32
_NtdsFastBindsPerSec_Object = MibScalar
ntdsFastBindsPerSec = _NtdsFastBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 138),
    _NtdsFastBindsPerSec_Type()
)
ntdsFastBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsFastBindsPerSec.setStatus("current")
_NtdsLinkValuesCleanedPerSec_Type = Gauge32
_NtdsLinkValuesCleanedPerSec_Object = MibScalar
ntdsLinkValuesCleanedPerSec = _NtdsLinkValuesCleanedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 139),
    _NtdsLinkValuesCleanedPerSec_Type()
)
ntdsLinkValuesCleanedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsLinkValuesCleanedPerSec.setStatus("current")
_NtdsNTLMBindsPerSec_Type = Gauge32
_NtdsNTLMBindsPerSec_Object = MibScalar
ntdsNTLMBindsPerSec = _NtdsNTLMBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 140),
    _NtdsNTLMBindsPerSec_Type()
)
ntdsNTLMBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsNTLMBindsPerSec.setStatus("current")
_NtdsNegotiatedBindsPerSec_Type = Gauge32
_NtdsNegotiatedBindsPerSec_Object = MibScalar
ntdsNegotiatedBindsPerSec = _NtdsNegotiatedBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 141),
    _NtdsNegotiatedBindsPerSec_Type()
)
ntdsNegotiatedBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsNegotiatedBindsPerSec.setStatus("current")
_NtdsOnelevelSearchesPerSec_Type = Gauge32
_NtdsOnelevelSearchesPerSec_Object = MibScalar
ntdsOnelevelSearchesPerSec = _NtdsOnelevelSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 142),
    _NtdsOnelevelSearchesPerSec_Type()
)
ntdsOnelevelSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsOnelevelSearchesPerSec.setStatus("current")
_NtdsPhantomsCleanedPerSec_Type = Gauge32
_NtdsPhantomsCleanedPerSec_Object = MibScalar
ntdsPhantomsCleanedPerSec = _NtdsPhantomsCleanedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 143),
    _NtdsPhantomsCleanedPerSec_Type()
)
ntdsPhantomsCleanedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsPhantomsCleanedPerSec.setStatus("current")
_NtdsPhantomsVisitedPerSec_Type = Gauge32
_NtdsPhantomsVisitedPerSec_Object = MibScalar
ntdsPhantomsVisitedPerSec = _NtdsPhantomsVisitedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 144),
    _NtdsPhantomsVisitedPerSec_Type()
)
ntdsPhantomsVisitedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsPhantomsVisitedPerSec.setStatus("current")
_NtdsSAMDomLocGrpMembEvalsPerSec_Type = Gauge32
_NtdsSAMDomLocGrpMembEvalsPerSec_Object = MibScalar
ntdsSAMDomLocGrpMembEvalsPerSec = _NtdsSAMDomLocGrpMembEvalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 145),
    _NtdsSAMDomLocGrpMembEvalsPerSec_Type()
)
ntdsSAMDomLocGrpMembEvalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMDomLocGrpMembEvalsPerSec.setStatus("current")
_NtdsSAMGlbGrpMembpEvalsPerSec_Type = Gauge32
_NtdsSAMGlbGrpMembpEvalsPerSec_Object = MibScalar
ntdsSAMGlbGrpMembpEvalsPerSec = _NtdsSAMGlbGrpMembpEvalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 146),
    _NtdsSAMGlbGrpMembpEvalsPerSec_Type()
)
ntdsSAMGlbGrpMembpEvalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMGlbGrpMembpEvalsPerSec.setStatus("current")
_NtdsSAMSuccessCompCreationPerSec_Type = Gauge32
_NtdsSAMSuccessCompCreationPerSec_Object = MibScalar
ntdsSAMSuccessCompCreationPerSec = _NtdsSAMSuccessCompCreationPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 147),
    _NtdsSAMSuccessCompCreationPerSec_Type()
)
ntdsSAMSuccessCompCreationPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSAMSuccessCompCreationPerSec.setStatus("current")
_NtdsSimpleBindsPerSec_Type = Gauge32
_NtdsSimpleBindsPerSec_Object = MibScalar
ntdsSimpleBindsPerSec = _NtdsSimpleBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 148),
    _NtdsSimpleBindsPerSec_Type()
)
ntdsSimpleBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSimpleBindsPerSec.setStatus("current")
_NtdsSubtreeSearchesPerSec_Type = Gauge32
_NtdsSubtreeSearchesPerSec_Object = MibScalar
ntdsSubtreeSearchesPerSec = _NtdsSubtreeSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 149),
    _NtdsSubtreeSearchesPerSec_Type()
)
ntdsSubtreeSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsSubtreeSearchesPerSec.setStatus("current")
_NtdsTombstonesGarbageCollPerSec_Type = Gauge32
_NtdsTombstonesGarbageCollPerSec_Object = MibScalar
ntdsTombstonesGarbageCollPerSec = _NtdsTombstonesGarbageCollPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 150),
    _NtdsTombstonesGarbageCollPerSec_Type()
)
ntdsTombstonesGarbageCollPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsTombstonesGarbageCollPerSec.setStatus("current")
_NtdsTombstonesVisitedPerSec_Type = Gauge32
_NtdsTombstonesVisitedPerSec_Object = MibScalar
ntdsTombstonesVisitedPerSec = _NtdsTombstonesVisitedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 151),
    _NtdsTombstonesVisitedPerSec_Type()
)
ntdsTombstonesVisitedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntdsTombstonesVisitedPerSec.setStatus("current")
_NwLinkIPXTable_Object = MibTable
nwLinkIPXTable = _NwLinkIPXTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56)
)
if mibBuilder.loadTexts:
    nwLinkIPXTable.setStatus("current")
_NwLinkIPXEntry_Object = MibTableRow
nwLinkIPXEntry = _NwLinkIPXEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1)
)
nwLinkIPXEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ipxInstance"),
)
if mibBuilder.loadTexts:
    nwLinkIPXEntry.setStatus("current")
_IpxInstance_Type = InstanceName
_IpxInstance_Object = MibTableColumn
ipxInstance = _IpxInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 1),
    _IpxInstance_Type()
)
ipxInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxInstance.setStatus("current")
_IpxBytesTotalPerSec_Type = Gauge32
_IpxBytesTotalPerSec_Object = MibTableColumn
ipxBytesTotalPerSec = _IpxBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 2),
    _IpxBytesTotalPerSec_Type()
)
ipxBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxBytesTotalPerSec.setStatus("current")
_IpxConnectionSessionTimeouts_Type = Gauge32
_IpxConnectionSessionTimeouts_Object = MibTableColumn
ipxConnectionSessionTimeouts = _IpxConnectionSessionTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 3),
    _IpxConnectionSessionTimeouts_Type()
)
ipxConnectionSessionTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxConnectionSessionTimeouts.setStatus("current")
_IpxConnectionsCanceled_Type = Gauge32
_IpxConnectionsCanceled_Object = MibTableColumn
ipxConnectionsCanceled = _IpxConnectionsCanceled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 4),
    _IpxConnectionsCanceled_Type()
)
ipxConnectionsCanceled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxConnectionsCanceled.setStatus("current")
_IpxConnectionsNoRetries_Type = Gauge32
_IpxConnectionsNoRetries_Object = MibTableColumn
ipxConnectionsNoRetries = _IpxConnectionsNoRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 5),
    _IpxConnectionsNoRetries_Type()
)
ipxConnectionsNoRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxConnectionsNoRetries.setStatus("current")
_IpxConnectionsOpen_Type = Gauge32
_IpxConnectionsOpen_Object = MibTableColumn
ipxConnectionsOpen = _IpxConnectionsOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 6),
    _IpxConnectionsOpen_Type()
)
ipxConnectionsOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxConnectionsOpen.setStatus("current")
_IpxConnectionsWithRetries_Type = Gauge32
_IpxConnectionsWithRetries_Object = MibTableColumn
ipxConnectionsWithRetries = _IpxConnectionsWithRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 7),
    _IpxConnectionsWithRetries_Type()
)
ipxConnectionsWithRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxConnectionsWithRetries.setStatus("current")
_IpxDatagramBytesReceivedPerSec_Type = Gauge32
_IpxDatagramBytesReceivedPerSec_Object = MibTableColumn
ipxDatagramBytesReceivedPerSec = _IpxDatagramBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 8),
    _IpxDatagramBytesReceivedPerSec_Type()
)
ipxDatagramBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDatagramBytesReceivedPerSec.setStatus("current")
_IpxDatagramBytesSentPerSec_Type = Gauge32
_IpxDatagramBytesSentPerSec_Object = MibTableColumn
ipxDatagramBytesSentPerSec = _IpxDatagramBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 9),
    _IpxDatagramBytesSentPerSec_Type()
)
ipxDatagramBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDatagramBytesSentPerSec.setStatus("current")
_IpxDatagramBytesPerSec_Type = Gauge32
_IpxDatagramBytesPerSec_Object = MibTableColumn
ipxDatagramBytesPerSec = _IpxDatagramBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 10),
    _IpxDatagramBytesPerSec_Type()
)
ipxDatagramBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDatagramBytesPerSec.setStatus("current")
_IpxDatagramsReceivedPerSec_Type = Gauge32
_IpxDatagramsReceivedPerSec_Object = MibTableColumn
ipxDatagramsReceivedPerSec = _IpxDatagramsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 11),
    _IpxDatagramsReceivedPerSec_Type()
)
ipxDatagramsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDatagramsReceivedPerSec.setStatus("current")
_IpxDatagramsSentPerSec_Type = Gauge32
_IpxDatagramsSentPerSec_Object = MibTableColumn
ipxDatagramsSentPerSec = _IpxDatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 12),
    _IpxDatagramsSentPerSec_Type()
)
ipxDatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDatagramsSentPerSec.setStatus("current")
_IpxDatagramsPerSec_Type = Gauge32
_IpxDatagramsPerSec_Object = MibTableColumn
ipxDatagramsPerSec = _IpxDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 13),
    _IpxDatagramsPerSec_Type()
)
ipxDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDatagramsPerSec.setStatus("current")
_IpxDisconnectsLocal_Type = Gauge32
_IpxDisconnectsLocal_Object = MibTableColumn
ipxDisconnectsLocal = _IpxDisconnectsLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 14),
    _IpxDisconnectsLocal_Type()
)
ipxDisconnectsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDisconnectsLocal.setStatus("current")
_IpxDisconnectsRemote_Type = Gauge32
_IpxDisconnectsRemote_Object = MibTableColumn
ipxDisconnectsRemote = _IpxDisconnectsRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 15),
    _IpxDisconnectsRemote_Type()
)
ipxDisconnectsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxDisconnectsRemote.setStatus("current")
_IpxExpirationsAck_Type = Gauge32
_IpxExpirationsAck_Object = MibTableColumn
ipxExpirationsAck = _IpxExpirationsAck_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 16),
    _IpxExpirationsAck_Type()
)
ipxExpirationsAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxExpirationsAck.setStatus("current")
_IpxExpirationsResponse_Type = Gauge32
_IpxExpirationsResponse_Object = MibTableColumn
ipxExpirationsResponse = _IpxExpirationsResponse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 17),
    _IpxExpirationsResponse_Type()
)
ipxExpirationsResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxExpirationsResponse.setStatus("current")
_IpxFailuresAdapter_Type = Gauge32
_IpxFailuresAdapter_Object = MibTableColumn
ipxFailuresAdapter = _IpxFailuresAdapter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 18),
    _IpxFailuresAdapter_Type()
)
ipxFailuresAdapter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFailuresAdapter.setStatus("current")
_IpxFailuresLink_Type = Gauge32
_IpxFailuresLink_Object = MibTableColumn
ipxFailuresLink = _IpxFailuresLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 19),
    _IpxFailuresLink_Type()
)
ipxFailuresLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFailuresLink.setStatus("current")
_IpxFailuresNoListen_Type = Gauge32
_IpxFailuresNoListen_Object = MibTableColumn
ipxFailuresNoListen = _IpxFailuresNoListen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 20),
    _IpxFailuresNoListen_Type()
)
ipxFailuresNoListen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFailuresNoListen.setStatus("current")
_IpxFailuresNotFound_Type = Gauge32
_IpxFailuresNotFound_Object = MibTableColumn
ipxFailuresNotFound = _IpxFailuresNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 21),
    _IpxFailuresNotFound_Type()
)
ipxFailuresNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFailuresNotFound.setStatus("current")
_IpxFailuresResourceLocal_Type = Gauge32
_IpxFailuresResourceLocal_Object = MibTableColumn
ipxFailuresResourceLocal = _IpxFailuresResourceLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 22),
    _IpxFailuresResourceLocal_Type()
)
ipxFailuresResourceLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFailuresResourceLocal.setStatus("current")
_IpxFailuresResourceRemote_Type = Gauge32
_IpxFailuresResourceRemote_Object = MibTableColumn
ipxFailuresResourceRemote = _IpxFailuresResourceRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 23),
    _IpxFailuresResourceRemote_Type()
)
ipxFailuresResourceRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFailuresResourceRemote.setStatus("current")
_IpxFrameBytesReSentPerSec_Type = Gauge32
_IpxFrameBytesReSentPerSec_Object = MibTableColumn
ipxFrameBytesReSentPerSec = _IpxFrameBytesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 24),
    _IpxFrameBytesReSentPerSec_Type()
)
ipxFrameBytesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFrameBytesReSentPerSec.setStatus("current")
_IpxFrameBytesReceivedPerSec_Type = Gauge32
_IpxFrameBytesReceivedPerSec_Object = MibTableColumn
ipxFrameBytesReceivedPerSec = _IpxFrameBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 25),
    _IpxFrameBytesReceivedPerSec_Type()
)
ipxFrameBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFrameBytesReceivedPerSec.setStatus("current")
_IpxFrameBytesRejectedPerSec_Type = Gauge32
_IpxFrameBytesRejectedPerSec_Object = MibTableColumn
ipxFrameBytesRejectedPerSec = _IpxFrameBytesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 26),
    _IpxFrameBytesRejectedPerSec_Type()
)
ipxFrameBytesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFrameBytesRejectedPerSec.setStatus("current")
_IpxFrameBytesSentPerSec_Type = Gauge32
_IpxFrameBytesSentPerSec_Object = MibTableColumn
ipxFrameBytesSentPerSec = _IpxFrameBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 27),
    _IpxFrameBytesSentPerSec_Type()
)
ipxFrameBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFrameBytesSentPerSec.setStatus("current")
_IpxFrameBytesPerSec_Type = Gauge32
_IpxFrameBytesPerSec_Object = MibTableColumn
ipxFrameBytesPerSec = _IpxFrameBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 28),
    _IpxFrameBytesPerSec_Type()
)
ipxFrameBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFrameBytesPerSec.setStatus("current")
_IpxFramesReSentPerSec_Type = Gauge32
_IpxFramesReSentPerSec_Object = MibTableColumn
ipxFramesReSentPerSec = _IpxFramesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 29),
    _IpxFramesReSentPerSec_Type()
)
ipxFramesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFramesReSentPerSec.setStatus("current")
_IpxFramesReceivedPerSec_Type = Gauge32
_IpxFramesReceivedPerSec_Object = MibTableColumn
ipxFramesReceivedPerSec = _IpxFramesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 30),
    _IpxFramesReceivedPerSec_Type()
)
ipxFramesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFramesReceivedPerSec.setStatus("current")
_IpxFramesRejectedPerSec_Type = Gauge32
_IpxFramesRejectedPerSec_Object = MibTableColumn
ipxFramesRejectedPerSec = _IpxFramesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 31),
    _IpxFramesRejectedPerSec_Type()
)
ipxFramesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFramesRejectedPerSec.setStatus("current")
_IpxFramesSentPerSec_Type = Gauge32
_IpxFramesSentPerSec_Object = MibTableColumn
ipxFramesSentPerSec = _IpxFramesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 32),
    _IpxFramesSentPerSec_Type()
)
ipxFramesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFramesSentPerSec.setStatus("current")
_IpxFramesPerSec_Type = Gauge32
_IpxFramesPerSec_Object = MibTableColumn
ipxFramesPerSec = _IpxFramesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 33),
    _IpxFramesPerSec_Type()
)
ipxFramesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxFramesPerSec.setStatus("current")
_IpxPacketsReceivedPerSec_Type = Gauge32
_IpxPacketsReceivedPerSec_Object = MibTableColumn
ipxPacketsReceivedPerSec = _IpxPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 34),
    _IpxPacketsReceivedPerSec_Type()
)
ipxPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxPacketsReceivedPerSec.setStatus("current")
_IpxPacketsSentPerSec_Type = Gauge32
_IpxPacketsSentPerSec_Object = MibTableColumn
ipxPacketsSentPerSec = _IpxPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 35),
    _IpxPacketsSentPerSec_Type()
)
ipxPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxPacketsSentPerSec.setStatus("current")
_IpxPacketsPerSec_Type = Gauge32
_IpxPacketsPerSec_Object = MibTableColumn
ipxPacketsPerSec = _IpxPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 36),
    _IpxPacketsPerSec_Type()
)
ipxPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxPacketsPerSec.setStatus("current")
_IpxPiggybackAckQueuedPerSec_Type = Gauge32
_IpxPiggybackAckQueuedPerSec_Object = MibTableColumn
ipxPiggybackAckQueuedPerSec = _IpxPiggybackAckQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 37),
    _IpxPiggybackAckQueuedPerSec_Type()
)
ipxPiggybackAckQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxPiggybackAckQueuedPerSec.setStatus("current")
_IpxPiggybackAckTimeouts_Type = Gauge32
_IpxPiggybackAckTimeouts_Object = MibTableColumn
ipxPiggybackAckTimeouts = _IpxPiggybackAckTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 38),
    _IpxPiggybackAckTimeouts_Type()
)
ipxPiggybackAckTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxPiggybackAckTimeouts.setStatus("current")
_IpxWindowSendAverage_Type = Gauge32
_IpxWindowSendAverage_Object = MibTableColumn
ipxWindowSendAverage = _IpxWindowSendAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 39),
    _IpxWindowSendAverage_Type()
)
ipxWindowSendAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxWindowSendAverage.setStatus("current")
_IpxWindowSendMaximum_Type = Gauge32
_IpxWindowSendMaximum_Object = MibTableColumn
ipxWindowSendMaximum = _IpxWindowSendMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 40),
    _IpxWindowSendMaximum_Type()
)
ipxWindowSendMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxWindowSendMaximum.setStatus("current")
_NwLinkNetBIOSTable_Object = MibTable
nwLinkNetBIOSTable = _NwLinkNetBIOSTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57)
)
if mibBuilder.loadTexts:
    nwLinkNetBIOSTable.setStatus("current")
_NwLinkNetBIOSEntry_Object = MibTableRow
nwLinkNetBIOSEntry = _NwLinkNetBIOSEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1)
)
nwLinkNetBIOSEntry.setIndexNames(
    (0, "INFORMANT-ADV", "netBIOSInstance"),
)
if mibBuilder.loadTexts:
    nwLinkNetBIOSEntry.setStatus("current")
_NetBIOSInstance_Type = InstanceName
_NetBIOSInstance_Object = MibTableColumn
netBIOSInstance = _NetBIOSInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 1),
    _NetBIOSInstance_Type()
)
netBIOSInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSInstance.setStatus("current")
_NetBIOSBytesTotalPerSec_Type = Gauge32
_NetBIOSBytesTotalPerSec_Object = MibTableColumn
netBIOSBytesTotalPerSec = _NetBIOSBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 2),
    _NetBIOSBytesTotalPerSec_Type()
)
netBIOSBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSBytesTotalPerSec.setStatus("current")
_NetBIOSConnectionSessionTimeouts_Type = Gauge32
_NetBIOSConnectionSessionTimeouts_Object = MibTableColumn
netBIOSConnectionSessionTimeouts = _NetBIOSConnectionSessionTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 3),
    _NetBIOSConnectionSessionTimeouts_Type()
)
netBIOSConnectionSessionTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSConnectionSessionTimeouts.setStatus("current")
_NetBIOSConnectionsCanceled_Type = Gauge32
_NetBIOSConnectionsCanceled_Object = MibTableColumn
netBIOSConnectionsCanceled = _NetBIOSConnectionsCanceled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 4),
    _NetBIOSConnectionsCanceled_Type()
)
netBIOSConnectionsCanceled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSConnectionsCanceled.setStatus("current")
_NetBIOSConnectionsNoRetries_Type = Gauge32
_NetBIOSConnectionsNoRetries_Object = MibTableColumn
netBIOSConnectionsNoRetries = _NetBIOSConnectionsNoRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 5),
    _NetBIOSConnectionsNoRetries_Type()
)
netBIOSConnectionsNoRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSConnectionsNoRetries.setStatus("current")
_NetBIOSConnectionsOpen_Type = Gauge32
_NetBIOSConnectionsOpen_Object = MibTableColumn
netBIOSConnectionsOpen = _NetBIOSConnectionsOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 6),
    _NetBIOSConnectionsOpen_Type()
)
netBIOSConnectionsOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSConnectionsOpen.setStatus("current")
_NetBIOSConnectionsWithRetries_Type = Gauge32
_NetBIOSConnectionsWithRetries_Object = MibTableColumn
netBIOSConnectionsWithRetries = _NetBIOSConnectionsWithRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 7),
    _NetBIOSConnectionsWithRetries_Type()
)
netBIOSConnectionsWithRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSConnectionsWithRetries.setStatus("current")
_NetBIOSDatagramBytesRcvdPerSec_Type = Gauge32
_NetBIOSDatagramBytesRcvdPerSec_Object = MibTableColumn
netBIOSDatagramBytesRcvdPerSec = _NetBIOSDatagramBytesRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 8),
    _NetBIOSDatagramBytesRcvdPerSec_Type()
)
netBIOSDatagramBytesRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDatagramBytesRcvdPerSec.setStatus("current")
_NetBIOSDatagramBytesSentPerSec_Type = Gauge32
_NetBIOSDatagramBytesSentPerSec_Object = MibTableColumn
netBIOSDatagramBytesSentPerSec = _NetBIOSDatagramBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 9),
    _NetBIOSDatagramBytesSentPerSec_Type()
)
netBIOSDatagramBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDatagramBytesSentPerSec.setStatus("current")
_NetBIOSDatagramBytesPerSec_Type = Gauge32
_NetBIOSDatagramBytesPerSec_Object = MibTableColumn
netBIOSDatagramBytesPerSec = _NetBIOSDatagramBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 10),
    _NetBIOSDatagramBytesPerSec_Type()
)
netBIOSDatagramBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDatagramBytesPerSec.setStatus("current")
_NetBIOSDatagramsReceivedPerSec_Type = Gauge32
_NetBIOSDatagramsReceivedPerSec_Object = MibTableColumn
netBIOSDatagramsReceivedPerSec = _NetBIOSDatagramsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 11),
    _NetBIOSDatagramsReceivedPerSec_Type()
)
netBIOSDatagramsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDatagramsReceivedPerSec.setStatus("current")
_NetBIOSDatagramsSentPerSec_Type = Gauge32
_NetBIOSDatagramsSentPerSec_Object = MibTableColumn
netBIOSDatagramsSentPerSec = _NetBIOSDatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 12),
    _NetBIOSDatagramsSentPerSec_Type()
)
netBIOSDatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDatagramsSentPerSec.setStatus("current")
_NetBIOSDatagramsPerSec_Type = Gauge32
_NetBIOSDatagramsPerSec_Object = MibTableColumn
netBIOSDatagramsPerSec = _NetBIOSDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 13),
    _NetBIOSDatagramsPerSec_Type()
)
netBIOSDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDatagramsPerSec.setStatus("current")
_NetBIOSDisconnectsLocal_Type = Gauge32
_NetBIOSDisconnectsLocal_Object = MibTableColumn
netBIOSDisconnectsLocal = _NetBIOSDisconnectsLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 14),
    _NetBIOSDisconnectsLocal_Type()
)
netBIOSDisconnectsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDisconnectsLocal.setStatus("current")
_NetBIOSDisconnectsRemote_Type = Gauge32
_NetBIOSDisconnectsRemote_Object = MibTableColumn
netBIOSDisconnectsRemote = _NetBIOSDisconnectsRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 15),
    _NetBIOSDisconnectsRemote_Type()
)
netBIOSDisconnectsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSDisconnectsRemote.setStatus("current")
_NetBIOSExpirationsAck_Type = Gauge32
_NetBIOSExpirationsAck_Object = MibTableColumn
netBIOSExpirationsAck = _NetBIOSExpirationsAck_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 16),
    _NetBIOSExpirationsAck_Type()
)
netBIOSExpirationsAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSExpirationsAck.setStatus("current")
_NetBIOSExpirationsResponse_Type = Gauge32
_NetBIOSExpirationsResponse_Object = MibTableColumn
netBIOSExpirationsResponse = _NetBIOSExpirationsResponse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 17),
    _NetBIOSExpirationsResponse_Type()
)
netBIOSExpirationsResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSExpirationsResponse.setStatus("current")
_NetBIOSFailuresAdapter_Type = Gauge32
_NetBIOSFailuresAdapter_Object = MibTableColumn
netBIOSFailuresAdapter = _NetBIOSFailuresAdapter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 18),
    _NetBIOSFailuresAdapter_Type()
)
netBIOSFailuresAdapter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFailuresAdapter.setStatus("current")
_NetBIOSFailuresLink_Type = Gauge32
_NetBIOSFailuresLink_Object = MibTableColumn
netBIOSFailuresLink = _NetBIOSFailuresLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 19),
    _NetBIOSFailuresLink_Type()
)
netBIOSFailuresLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFailuresLink.setStatus("current")
_NetBIOSFailuresNoListen_Type = Gauge32
_NetBIOSFailuresNoListen_Object = MibTableColumn
netBIOSFailuresNoListen = _NetBIOSFailuresNoListen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 20),
    _NetBIOSFailuresNoListen_Type()
)
netBIOSFailuresNoListen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFailuresNoListen.setStatus("current")
_NetBIOSFailuresNotFound_Type = Gauge32
_NetBIOSFailuresNotFound_Object = MibTableColumn
netBIOSFailuresNotFound = _NetBIOSFailuresNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 21),
    _NetBIOSFailuresNotFound_Type()
)
netBIOSFailuresNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFailuresNotFound.setStatus("current")
_NetBIOSFailuresResourceLocal_Type = Gauge32
_NetBIOSFailuresResourceLocal_Object = MibTableColumn
netBIOSFailuresResourceLocal = _NetBIOSFailuresResourceLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 22),
    _NetBIOSFailuresResourceLocal_Type()
)
netBIOSFailuresResourceLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFailuresResourceLocal.setStatus("current")
_NetBIOSFailuresResourceRemote_Type = Gauge32
_NetBIOSFailuresResourceRemote_Object = MibTableColumn
netBIOSFailuresResourceRemote = _NetBIOSFailuresResourceRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 23),
    _NetBIOSFailuresResourceRemote_Type()
)
netBIOSFailuresResourceRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFailuresResourceRemote.setStatus("current")
_NetBIOSFrameBytesReSentPerSec_Type = Gauge32
_NetBIOSFrameBytesReSentPerSec_Object = MibTableColumn
netBIOSFrameBytesReSentPerSec = _NetBIOSFrameBytesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 24),
    _NetBIOSFrameBytesReSentPerSec_Type()
)
netBIOSFrameBytesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFrameBytesReSentPerSec.setStatus("current")
_NetBIOSFrameBytesReceivedPerSec_Type = Gauge32
_NetBIOSFrameBytesReceivedPerSec_Object = MibTableColumn
netBIOSFrameBytesReceivedPerSec = _NetBIOSFrameBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 25),
    _NetBIOSFrameBytesReceivedPerSec_Type()
)
netBIOSFrameBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFrameBytesReceivedPerSec.setStatus("current")
_NetBIOSFrameBytesRejectedPerSec_Type = Gauge32
_NetBIOSFrameBytesRejectedPerSec_Object = MibTableColumn
netBIOSFrameBytesRejectedPerSec = _NetBIOSFrameBytesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 26),
    _NetBIOSFrameBytesRejectedPerSec_Type()
)
netBIOSFrameBytesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFrameBytesRejectedPerSec.setStatus("current")
_NetBIOSFrameBytesSentPerSec_Type = Gauge32
_NetBIOSFrameBytesSentPerSec_Object = MibTableColumn
netBIOSFrameBytesSentPerSec = _NetBIOSFrameBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 27),
    _NetBIOSFrameBytesSentPerSec_Type()
)
netBIOSFrameBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFrameBytesSentPerSec.setStatus("current")
_NetBIOSFrameBytesPerSec_Type = Gauge32
_NetBIOSFrameBytesPerSec_Object = MibTableColumn
netBIOSFrameBytesPerSec = _NetBIOSFrameBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 28),
    _NetBIOSFrameBytesPerSec_Type()
)
netBIOSFrameBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFrameBytesPerSec.setStatus("current")
_NetBIOSFramesReSentPerSec_Type = Gauge32
_NetBIOSFramesReSentPerSec_Object = MibTableColumn
netBIOSFramesReSentPerSec = _NetBIOSFramesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 29),
    _NetBIOSFramesReSentPerSec_Type()
)
netBIOSFramesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFramesReSentPerSec.setStatus("current")
_NetBIOSFramesReceivedPerSec_Type = Gauge32
_NetBIOSFramesReceivedPerSec_Object = MibTableColumn
netBIOSFramesReceivedPerSec = _NetBIOSFramesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 30),
    _NetBIOSFramesReceivedPerSec_Type()
)
netBIOSFramesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFramesReceivedPerSec.setStatus("current")
_NetBIOSFramesRejectedPerSec_Type = Gauge32
_NetBIOSFramesRejectedPerSec_Object = MibTableColumn
netBIOSFramesRejectedPerSec = _NetBIOSFramesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 31),
    _NetBIOSFramesRejectedPerSec_Type()
)
netBIOSFramesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFramesRejectedPerSec.setStatus("current")
_NetBIOSFramesSentPerSec_Type = Gauge32
_NetBIOSFramesSentPerSec_Object = MibTableColumn
netBIOSFramesSentPerSec = _NetBIOSFramesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 32),
    _NetBIOSFramesSentPerSec_Type()
)
netBIOSFramesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFramesSentPerSec.setStatus("current")
_NetBIOSFramesPerSec_Type = Gauge32
_NetBIOSFramesPerSec_Object = MibTableColumn
netBIOSFramesPerSec = _NetBIOSFramesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 33),
    _NetBIOSFramesPerSec_Type()
)
netBIOSFramesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSFramesPerSec.setStatus("current")
_NetBIOSPacketsReceivedPerSec_Type = Gauge32
_NetBIOSPacketsReceivedPerSec_Object = MibTableColumn
netBIOSPacketsReceivedPerSec = _NetBIOSPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 34),
    _NetBIOSPacketsReceivedPerSec_Type()
)
netBIOSPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSPacketsReceivedPerSec.setStatus("current")
_NetBIOSPacketsSentPerSec_Type = Gauge32
_NetBIOSPacketsSentPerSec_Object = MibTableColumn
netBIOSPacketsSentPerSec = _NetBIOSPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 35),
    _NetBIOSPacketsSentPerSec_Type()
)
netBIOSPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSPacketsSentPerSec.setStatus("current")
_NetBIOSPacketsPerSec_Type = Gauge32
_NetBIOSPacketsPerSec_Object = MibTableColumn
netBIOSPacketsPerSec = _NetBIOSPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 36),
    _NetBIOSPacketsPerSec_Type()
)
netBIOSPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSPacketsPerSec.setStatus("current")
_NetBIOSPiggybackAckQueuedPerSec_Type = Gauge32
_NetBIOSPiggybackAckQueuedPerSec_Object = MibTableColumn
netBIOSPiggybackAckQueuedPerSec = _NetBIOSPiggybackAckQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 37),
    _NetBIOSPiggybackAckQueuedPerSec_Type()
)
netBIOSPiggybackAckQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSPiggybackAckQueuedPerSec.setStatus("current")
_NetBIOSPiggybackAckTimeouts_Type = Gauge32
_NetBIOSPiggybackAckTimeouts_Object = MibTableColumn
netBIOSPiggybackAckTimeouts = _NetBIOSPiggybackAckTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 38),
    _NetBIOSPiggybackAckTimeouts_Type()
)
netBIOSPiggybackAckTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSPiggybackAckTimeouts.setStatus("current")
_NetBIOSWindowSendAverage_Type = Gauge32
_NetBIOSWindowSendAverage_Object = MibTableColumn
netBIOSWindowSendAverage = _NetBIOSWindowSendAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 39),
    _NetBIOSWindowSendAverage_Type()
)
netBIOSWindowSendAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSWindowSendAverage.setStatus("current")
_NetBIOSWindowSendMaximum_Type = Gauge32
_NetBIOSWindowSendMaximum_Object = MibTableColumn
netBIOSWindowSendMaximum = _NetBIOSWindowSendMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 40),
    _NetBIOSWindowSendMaximum_Type()
)
netBIOSWindowSendMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netBIOSWindowSendMaximum.setStatus("current")
_NwLinkSPXTable_Object = MibTable
nwLinkSPXTable = _NwLinkSPXTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58)
)
if mibBuilder.loadTexts:
    nwLinkSPXTable.setStatus("current")
_NwLinkSPXEntry_Object = MibTableRow
nwLinkSPXEntry = _NwLinkSPXEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1)
)
nwLinkSPXEntry.setIndexNames(
    (0, "INFORMANT-ADV", "spxInstance"),
)
if mibBuilder.loadTexts:
    nwLinkSPXEntry.setStatus("current")
_SpxInstance_Type = InstanceName
_SpxInstance_Object = MibTableColumn
spxInstance = _SpxInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 1),
    _SpxInstance_Type()
)
spxInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxInstance.setStatus("current")
_SpxBytesTotalPerSec_Type = Gauge32
_SpxBytesTotalPerSec_Object = MibTableColumn
spxBytesTotalPerSec = _SpxBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 2),
    _SpxBytesTotalPerSec_Type()
)
spxBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxBytesTotalPerSec.setStatus("current")
_SpxConnectionSessionTimeouts_Type = Gauge32
_SpxConnectionSessionTimeouts_Object = MibTableColumn
spxConnectionSessionTimeouts = _SpxConnectionSessionTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 3),
    _SpxConnectionSessionTimeouts_Type()
)
spxConnectionSessionTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxConnectionSessionTimeouts.setStatus("current")
_SpxConnectionsCanceled_Type = Gauge32
_SpxConnectionsCanceled_Object = MibTableColumn
spxConnectionsCanceled = _SpxConnectionsCanceled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 4),
    _SpxConnectionsCanceled_Type()
)
spxConnectionsCanceled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxConnectionsCanceled.setStatus("current")
_SpxConnectionsNoRetries_Type = Gauge32
_SpxConnectionsNoRetries_Object = MibTableColumn
spxConnectionsNoRetries = _SpxConnectionsNoRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 5),
    _SpxConnectionsNoRetries_Type()
)
spxConnectionsNoRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxConnectionsNoRetries.setStatus("current")
_SpxConnectionsOpen_Type = Gauge32
_SpxConnectionsOpen_Object = MibTableColumn
spxConnectionsOpen = _SpxConnectionsOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 6),
    _SpxConnectionsOpen_Type()
)
spxConnectionsOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxConnectionsOpen.setStatus("current")
_SpxConnectionsWithRetries_Type = Gauge32
_SpxConnectionsWithRetries_Object = MibTableColumn
spxConnectionsWithRetries = _SpxConnectionsWithRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 7),
    _SpxConnectionsWithRetries_Type()
)
spxConnectionsWithRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxConnectionsWithRetries.setStatus("current")
_SpxDatagramBytesReceivedPerSec_Type = Gauge32
_SpxDatagramBytesReceivedPerSec_Object = MibTableColumn
spxDatagramBytesReceivedPerSec = _SpxDatagramBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 8),
    _SpxDatagramBytesReceivedPerSec_Type()
)
spxDatagramBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDatagramBytesReceivedPerSec.setStatus("current")
_SpxDatagramBytesSentPerSec_Type = Gauge32
_SpxDatagramBytesSentPerSec_Object = MibTableColumn
spxDatagramBytesSentPerSec = _SpxDatagramBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 9),
    _SpxDatagramBytesSentPerSec_Type()
)
spxDatagramBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDatagramBytesSentPerSec.setStatus("current")
_SpxDatagramBytesPerSec_Type = Gauge32
_SpxDatagramBytesPerSec_Object = MibTableColumn
spxDatagramBytesPerSec = _SpxDatagramBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 10),
    _SpxDatagramBytesPerSec_Type()
)
spxDatagramBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDatagramBytesPerSec.setStatus("current")
_SpxDatagramsReceivedPerSec_Type = Gauge32
_SpxDatagramsReceivedPerSec_Object = MibTableColumn
spxDatagramsReceivedPerSec = _SpxDatagramsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 11),
    _SpxDatagramsReceivedPerSec_Type()
)
spxDatagramsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDatagramsReceivedPerSec.setStatus("current")
_SpxDatagramsSentPerSec_Type = Gauge32
_SpxDatagramsSentPerSec_Object = MibTableColumn
spxDatagramsSentPerSec = _SpxDatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 12),
    _SpxDatagramsSentPerSec_Type()
)
spxDatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDatagramsSentPerSec.setStatus("current")
_SpxDatagramsPerSec_Type = Gauge32
_SpxDatagramsPerSec_Object = MibTableColumn
spxDatagramsPerSec = _SpxDatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 13),
    _SpxDatagramsPerSec_Type()
)
spxDatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDatagramsPerSec.setStatus("current")
_SpxDisconnectsLocal_Type = Gauge32
_SpxDisconnectsLocal_Object = MibTableColumn
spxDisconnectsLocal = _SpxDisconnectsLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 14),
    _SpxDisconnectsLocal_Type()
)
spxDisconnectsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDisconnectsLocal.setStatus("current")
_SpxDisconnectsRemote_Type = Gauge32
_SpxDisconnectsRemote_Object = MibTableColumn
spxDisconnectsRemote = _SpxDisconnectsRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 15),
    _SpxDisconnectsRemote_Type()
)
spxDisconnectsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxDisconnectsRemote.setStatus("current")
_SpxExpirationsAck_Type = Gauge32
_SpxExpirationsAck_Object = MibTableColumn
spxExpirationsAck = _SpxExpirationsAck_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 16),
    _SpxExpirationsAck_Type()
)
spxExpirationsAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxExpirationsAck.setStatus("current")
_SpxExpirationsResponse_Type = Gauge32
_SpxExpirationsResponse_Object = MibTableColumn
spxExpirationsResponse = _SpxExpirationsResponse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 17),
    _SpxExpirationsResponse_Type()
)
spxExpirationsResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxExpirationsResponse.setStatus("current")
_SpxFailuresAdapter_Type = Gauge32
_SpxFailuresAdapter_Object = MibTableColumn
spxFailuresAdapter = _SpxFailuresAdapter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 18),
    _SpxFailuresAdapter_Type()
)
spxFailuresAdapter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFailuresAdapter.setStatus("current")
_SpxFailuresLink_Type = Gauge32
_SpxFailuresLink_Object = MibTableColumn
spxFailuresLink = _SpxFailuresLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 19),
    _SpxFailuresLink_Type()
)
spxFailuresLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFailuresLink.setStatus("current")
_SpxFailuresNoListen_Type = Gauge32
_SpxFailuresNoListen_Object = MibTableColumn
spxFailuresNoListen = _SpxFailuresNoListen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 20),
    _SpxFailuresNoListen_Type()
)
spxFailuresNoListen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFailuresNoListen.setStatus("current")
_SpxFailuresNotFound_Type = Gauge32
_SpxFailuresNotFound_Object = MibTableColumn
spxFailuresNotFound = _SpxFailuresNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 21),
    _SpxFailuresNotFound_Type()
)
spxFailuresNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFailuresNotFound.setStatus("current")
_SpxFailuresResourceLocal_Type = Gauge32
_SpxFailuresResourceLocal_Object = MibTableColumn
spxFailuresResourceLocal = _SpxFailuresResourceLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 22),
    _SpxFailuresResourceLocal_Type()
)
spxFailuresResourceLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFailuresResourceLocal.setStatus("current")
_SpxFailuresResourceRemote_Type = Gauge32
_SpxFailuresResourceRemote_Object = MibTableColumn
spxFailuresResourceRemote = _SpxFailuresResourceRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 23),
    _SpxFailuresResourceRemote_Type()
)
spxFailuresResourceRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFailuresResourceRemote.setStatus("current")
_SpxFrameBytesReSentPerSec_Type = Gauge32
_SpxFrameBytesReSentPerSec_Object = MibTableColumn
spxFrameBytesReSentPerSec = _SpxFrameBytesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 24),
    _SpxFrameBytesReSentPerSec_Type()
)
spxFrameBytesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFrameBytesReSentPerSec.setStatus("current")
_SpxFrameBytesReceivedPerSec_Type = Gauge32
_SpxFrameBytesReceivedPerSec_Object = MibTableColumn
spxFrameBytesReceivedPerSec = _SpxFrameBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 25),
    _SpxFrameBytesReceivedPerSec_Type()
)
spxFrameBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFrameBytesReceivedPerSec.setStatus("current")
_SpxFrameBytesRejectedPerSec_Type = Gauge32
_SpxFrameBytesRejectedPerSec_Object = MibTableColumn
spxFrameBytesRejectedPerSec = _SpxFrameBytesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 26),
    _SpxFrameBytesRejectedPerSec_Type()
)
spxFrameBytesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFrameBytesRejectedPerSec.setStatus("current")
_SpxFrameBytesSentPerSec_Type = Gauge32
_SpxFrameBytesSentPerSec_Object = MibTableColumn
spxFrameBytesSentPerSec = _SpxFrameBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 27),
    _SpxFrameBytesSentPerSec_Type()
)
spxFrameBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFrameBytesSentPerSec.setStatus("current")
_SpxFrameBytesPerSec_Type = Gauge32
_SpxFrameBytesPerSec_Object = MibTableColumn
spxFrameBytesPerSec = _SpxFrameBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 28),
    _SpxFrameBytesPerSec_Type()
)
spxFrameBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFrameBytesPerSec.setStatus("current")
_SpxFramesReSentPerSec_Type = Gauge32
_SpxFramesReSentPerSec_Object = MibTableColumn
spxFramesReSentPerSec = _SpxFramesReSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 29),
    _SpxFramesReSentPerSec_Type()
)
spxFramesReSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFramesReSentPerSec.setStatus("current")
_SpxFramesReceivedPerSec_Type = Gauge32
_SpxFramesReceivedPerSec_Object = MibTableColumn
spxFramesReceivedPerSec = _SpxFramesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 30),
    _SpxFramesReceivedPerSec_Type()
)
spxFramesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFramesReceivedPerSec.setStatus("current")
_SpxFramesRejectedPerSec_Type = Gauge32
_SpxFramesRejectedPerSec_Object = MibTableColumn
spxFramesRejectedPerSec = _SpxFramesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 31),
    _SpxFramesRejectedPerSec_Type()
)
spxFramesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFramesRejectedPerSec.setStatus("current")
_SpxFramesSentPerSec_Type = Gauge32
_SpxFramesSentPerSec_Object = MibTableColumn
spxFramesSentPerSec = _SpxFramesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 32),
    _SpxFramesSentPerSec_Type()
)
spxFramesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFramesSentPerSec.setStatus("current")
_SpxFramesPerSec_Type = Gauge32
_SpxFramesPerSec_Object = MibTableColumn
spxFramesPerSec = _SpxFramesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 33),
    _SpxFramesPerSec_Type()
)
spxFramesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxFramesPerSec.setStatus("current")
_SpxPacketsReceivedPerSec_Type = Gauge32
_SpxPacketsReceivedPerSec_Object = MibTableColumn
spxPacketsReceivedPerSec = _SpxPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 34),
    _SpxPacketsReceivedPerSec_Type()
)
spxPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxPacketsReceivedPerSec.setStatus("current")
_SpxPacketsSentPerSec_Type = Gauge32
_SpxPacketsSentPerSec_Object = MibTableColumn
spxPacketsSentPerSec = _SpxPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 35),
    _SpxPacketsSentPerSec_Type()
)
spxPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxPacketsSentPerSec.setStatus("current")
_SpxPacketsPerSec_Type = Gauge32
_SpxPacketsPerSec_Object = MibTableColumn
spxPacketsPerSec = _SpxPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 36),
    _SpxPacketsPerSec_Type()
)
spxPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxPacketsPerSec.setStatus("current")
_SpxPiggybackAckQueuedPerSec_Type = Gauge32
_SpxPiggybackAckQueuedPerSec_Object = MibTableColumn
spxPiggybackAckQueuedPerSec = _SpxPiggybackAckQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 37),
    _SpxPiggybackAckQueuedPerSec_Type()
)
spxPiggybackAckQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxPiggybackAckQueuedPerSec.setStatus("current")
_SpxPiggybackAckTimeouts_Type = Gauge32
_SpxPiggybackAckTimeouts_Object = MibTableColumn
spxPiggybackAckTimeouts = _SpxPiggybackAckTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 38),
    _SpxPiggybackAckTimeouts_Type()
)
spxPiggybackAckTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxPiggybackAckTimeouts.setStatus("current")
_SpxWindowSendAverage_Type = Gauge32
_SpxWindowSendAverage_Object = MibTableColumn
spxWindowSendAverage = _SpxWindowSendAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 39),
    _SpxWindowSendAverage_Type()
)
spxWindowSendAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxWindowSendAverage.setStatus("current")
_SpxWindowSendMaximum_Type = Gauge32
_SpxWindowSendMaximum_Object = MibTableColumn
spxWindowSendMaximum = _SpxWindowSendMaximum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 40),
    _SpxWindowSendMaximum_Type()
)
spxWindowSendMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spxWindowSendMaximum.setStatus("current")
_Objects_ObjectIdentity = ObjectIdentity
objects = _Objects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59)
)
if mibBuilder.loadTexts:
    objects.setStatus("current")
_ObjectsEvents_Type = Gauge32
_ObjectsEvents_Object = MibScalar
objectsEvents = _ObjectsEvents_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 1),
    _ObjectsEvents_Type()
)
objectsEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    objectsEvents.setStatus("current")
_ObjectsMutexes_Type = Gauge32
_ObjectsMutexes_Object = MibScalar
objectsMutexes = _ObjectsMutexes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 2),
    _ObjectsMutexes_Type()
)
objectsMutexes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    objectsMutexes.setStatus("current")
_ObjectsProcesses_Type = Gauge32
_ObjectsProcesses_Object = MibScalar
objectsProcesses = _ObjectsProcesses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 3),
    _ObjectsProcesses_Type()
)
objectsProcesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    objectsProcesses.setStatus("current")
_ObjectsSections_Type = Gauge32
_ObjectsSections_Object = MibScalar
objectsSections = _ObjectsSections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 4),
    _ObjectsSections_Type()
)
objectsSections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    objectsSections.setStatus("current")
_ObjectsSemaphores_Type = Gauge32
_ObjectsSemaphores_Object = MibScalar
objectsSemaphores = _ObjectsSemaphores_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 5),
    _ObjectsSemaphores_Type()
)
objectsSemaphores.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    objectsSemaphores.setStatus("current")
_ObjectsThreads_Type = Gauge32
_ObjectsThreads_Object = MibScalar
objectsThreads = _ObjectsThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 6),
    _ObjectsThreads_Type()
)
objectsThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    objectsThreads.setStatus("current")
_PagingFileTable_Object = MibTable
pagingFileTable = _PagingFileTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 60)
)
if mibBuilder.loadTexts:
    pagingFileTable.setStatus("current")
_PagingFileEntry_Object = MibTableRow
pagingFileEntry = _PagingFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1)
)
pagingFileEntry.setIndexNames(
    (0, "INFORMANT-ADV", "pagingFileInstance"),
)
if mibBuilder.loadTexts:
    pagingFileEntry.setStatus("current")
_PagingFileInstance_Type = InstanceName
_PagingFileInstance_Object = MibTableColumn
pagingFileInstance = _PagingFileInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1, 1),
    _PagingFileInstance_Type()
)
pagingFileInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pagingFileInstance.setStatus("current")
_PagingFilePercentUsage_Type = Gauge32
_PagingFilePercentUsage_Object = MibTableColumn
pagingFilePercentUsage = _PagingFilePercentUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1, 2),
    _PagingFilePercentUsage_Type()
)
pagingFilePercentUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pagingFilePercentUsage.setStatus("current")
_PagingFilePercentUsagePeak_Type = Gauge32
_PagingFilePercentUsagePeak_Object = MibTableColumn
pagingFilePercentUsagePeak = _PagingFilePercentUsagePeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1, 3),
    _PagingFilePercentUsagePeak_Type()
)
pagingFilePercentUsagePeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pagingFilePercentUsagePeak.setStatus("current")
_PhysicalDiskTable_Object = MibTable
physicalDiskTable = _PhysicalDiskTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61)
)
if mibBuilder.loadTexts:
    physicalDiskTable.setStatus("current")
_PhysicalDiskEntry_Object = MibTableRow
physicalDiskEntry = _PhysicalDiskEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1)
)
physicalDiskEntry.setIndexNames(
    (0, "INFORMANT-ADV", "pDiskInstance"),
)
if mibBuilder.loadTexts:
    physicalDiskEntry.setStatus("current")
_PDiskInstance_Type = InstanceName
_PDiskInstance_Object = MibTableColumn
pDiskInstance = _PDiskInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 1),
    _PDiskInstance_Type()
)
pDiskInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskInstance.setStatus("current")
_PDiskPercentDiskReadTime_Type = Gauge32
_PDiskPercentDiskReadTime_Object = MibTableColumn
pDiskPercentDiskReadTime = _PDiskPercentDiskReadTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 2),
    _PDiskPercentDiskReadTime_Type()
)
pDiskPercentDiskReadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskPercentDiskReadTime.setStatus("current")
_PDiskPercentDiskTime_Type = Gauge32
_PDiskPercentDiskTime_Object = MibTableColumn
pDiskPercentDiskTime = _PDiskPercentDiskTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 3),
    _PDiskPercentDiskTime_Type()
)
pDiskPercentDiskTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskPercentDiskTime.setStatus("current")
_PDiskPercentDiskWriteTime_Type = Gauge32
_PDiskPercentDiskWriteTime_Object = MibTableColumn
pDiskPercentDiskWriteTime = _PDiskPercentDiskWriteTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 4),
    _PDiskPercentDiskWriteTime_Type()
)
pDiskPercentDiskWriteTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskPercentDiskWriteTime.setStatus("current")
_PDiskPercentIdleTime_Type = Gauge32
_PDiskPercentIdleTime_Object = MibTableColumn
pDiskPercentIdleTime = _PDiskPercentIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 5),
    _PDiskPercentIdleTime_Type()
)
pDiskPercentIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskPercentIdleTime.setStatus("current")
_PDiskAvgDiskBytesPerRead_Type = Gauge32
_PDiskAvgDiskBytesPerRead_Object = MibTableColumn
pDiskAvgDiskBytesPerRead = _PDiskAvgDiskBytesPerRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 6),
    _PDiskAvgDiskBytesPerRead_Type()
)
pDiskAvgDiskBytesPerRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskBytesPerRead.setStatus("current")
_PDiskAvgDiskBytesPerTransfer_Type = Gauge32
_PDiskAvgDiskBytesPerTransfer_Object = MibTableColumn
pDiskAvgDiskBytesPerTransfer = _PDiskAvgDiskBytesPerTransfer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 7),
    _PDiskAvgDiskBytesPerTransfer_Type()
)
pDiskAvgDiskBytesPerTransfer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskBytesPerTransfer.setStatus("current")
_PDiskAvgDiskBytesPerWrite_Type = Gauge32
_PDiskAvgDiskBytesPerWrite_Object = MibTableColumn
pDiskAvgDiskBytesPerWrite = _PDiskAvgDiskBytesPerWrite_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 8),
    _PDiskAvgDiskBytesPerWrite_Type()
)
pDiskAvgDiskBytesPerWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskBytesPerWrite.setStatus("current")
_PDiskAvgDiskQueueLength_Type = Gauge32
_PDiskAvgDiskQueueLength_Object = MibTableColumn
pDiskAvgDiskQueueLength = _PDiskAvgDiskQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 9),
    _PDiskAvgDiskQueueLength_Type()
)
pDiskAvgDiskQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskQueueLength.setStatus("current")
_PDiskAvgDiskReadQueueLength_Type = Gauge32
_PDiskAvgDiskReadQueueLength_Object = MibTableColumn
pDiskAvgDiskReadQueueLength = _PDiskAvgDiskReadQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 10),
    _PDiskAvgDiskReadQueueLength_Type()
)
pDiskAvgDiskReadQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskReadQueueLength.setStatus("current")
_PDiskAvgDiskWriteQueueLength_Type = Gauge32
_PDiskAvgDiskWriteQueueLength_Object = MibTableColumn
pDiskAvgDiskWriteQueueLength = _PDiskAvgDiskWriteQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 11),
    _PDiskAvgDiskWriteQueueLength_Type()
)
pDiskAvgDiskWriteQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskWriteQueueLength.setStatus("current")
_PDiskAvgDiskSecPerRead_Type = Gauge32
_PDiskAvgDiskSecPerRead_Object = MibTableColumn
pDiskAvgDiskSecPerRead = _PDiskAvgDiskSecPerRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 12),
    _PDiskAvgDiskSecPerRead_Type()
)
pDiskAvgDiskSecPerRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskSecPerRead.setStatus("current")
_PDiskAvgDiskSecPerTransfer_Type = Gauge32
_PDiskAvgDiskSecPerTransfer_Object = MibTableColumn
pDiskAvgDiskSecPerTransfer = _PDiskAvgDiskSecPerTransfer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 13),
    _PDiskAvgDiskSecPerTransfer_Type()
)
pDiskAvgDiskSecPerTransfer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskSecPerTransfer.setStatus("current")
_PDiskAvgDiskSecPerWrite_Type = Gauge32
_PDiskAvgDiskSecPerWrite_Object = MibTableColumn
pDiskAvgDiskSecPerWrite = _PDiskAvgDiskSecPerWrite_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 14),
    _PDiskAvgDiskSecPerWrite_Type()
)
pDiskAvgDiskSecPerWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskAvgDiskSecPerWrite.setStatus("current")
_PDiskCurrentDiskQueueLength_Type = Gauge32
_PDiskCurrentDiskQueueLength_Object = MibTableColumn
pDiskCurrentDiskQueueLength = _PDiskCurrentDiskQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 15),
    _PDiskCurrentDiskQueueLength_Type()
)
pDiskCurrentDiskQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskCurrentDiskQueueLength.setStatus("current")
_PDiskDiskBytesPerSec_Type = Gauge32
_PDiskDiskBytesPerSec_Object = MibTableColumn
pDiskDiskBytesPerSec = _PDiskDiskBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 16),
    _PDiskDiskBytesPerSec_Type()
)
pDiskDiskBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskDiskBytesPerSec.setStatus("current")
_PDiskDiskReadBytesPerSec_Type = Gauge32
_PDiskDiskReadBytesPerSec_Object = MibTableColumn
pDiskDiskReadBytesPerSec = _PDiskDiskReadBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 17),
    _PDiskDiskReadBytesPerSec_Type()
)
pDiskDiskReadBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskDiskReadBytesPerSec.setStatus("current")
_PDiskDiskReadsPerSec_Type = Gauge32
_PDiskDiskReadsPerSec_Object = MibTableColumn
pDiskDiskReadsPerSec = _PDiskDiskReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 18),
    _PDiskDiskReadsPerSec_Type()
)
pDiskDiskReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskDiskReadsPerSec.setStatus("current")
_PDiskDiskTransfersPerSec_Type = Gauge32
_PDiskDiskTransfersPerSec_Object = MibTableColumn
pDiskDiskTransfersPerSec = _PDiskDiskTransfersPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 19),
    _PDiskDiskTransfersPerSec_Type()
)
pDiskDiskTransfersPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskDiskTransfersPerSec.setStatus("current")
_PDiskDiskWriteBytesPerSec_Type = Gauge32
_PDiskDiskWriteBytesPerSec_Object = MibTableColumn
pDiskDiskWriteBytesPerSec = _PDiskDiskWriteBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 20),
    _PDiskDiskWriteBytesPerSec_Type()
)
pDiskDiskWriteBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskDiskWriteBytesPerSec.setStatus("current")
_PDiskDiskWritesPerSec_Type = Gauge32
_PDiskDiskWritesPerSec_Object = MibTableColumn
pDiskDiskWritesPerSec = _PDiskDiskWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 21),
    _PDiskDiskWritesPerSec_Type()
)
pDiskDiskWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskDiskWritesPerSec.setStatus("current")
_PDiskSplitIOPerSec_Type = Gauge32
_PDiskSplitIOPerSec_Object = MibTableColumn
pDiskSplitIOPerSec = _PDiskSplitIOPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 22),
    _PDiskSplitIOPerSec_Type()
)
pDiskSplitIOPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pDiskSplitIOPerSec.setStatus("current")
_Pop3Service_ObjectIdentity = ObjectIdentity
pop3Service = _Pop3Service_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62)
)
_Pop3SvcBytesReceivePerSec_Type = Gauge32
_Pop3SvcBytesReceivePerSec_Object = MibScalar
pop3SvcBytesReceivePerSec = _Pop3SvcBytesReceivePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 1),
    _Pop3SvcBytesReceivePerSec_Type()
)
pop3SvcBytesReceivePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcBytesReceivePerSec.setStatus("current")
_Pop3SvcBytesTransmittedPerSec_Type = Gauge32
_Pop3SvcBytesTransmittedPerSec_Object = MibScalar
pop3SvcBytesTransmittedPerSec = _Pop3SvcBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 2),
    _Pop3SvcBytesTransmittedPerSec_Type()
)
pop3SvcBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcBytesTransmittedPerSec.setStatus("current")
_Pop3SvcConnectionsPerSec_Type = Gauge32
_Pop3SvcConnectionsPerSec_Object = MibScalar
pop3SvcConnectionsPerSec = _Pop3SvcConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 3),
    _Pop3SvcConnectionsPerSec_Type()
)
pop3SvcConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcConnectionsPerSec.setStatus("current")
_Pop3SvcFreeThreads_Type = Gauge32
_Pop3SvcFreeThreads_Object = MibScalar
pop3SvcFreeThreads = _Pop3SvcFreeThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 4),
    _Pop3SvcFreeThreads_Type()
)
pop3SvcFreeThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcFreeThreads.setStatus("current")
_Pop3SvcMailboxesInAuthState_Type = Gauge32
_Pop3SvcMailboxesInAuthState_Object = MibScalar
pop3SvcMailboxesInAuthState = _Pop3SvcMailboxesInAuthState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 5),
    _Pop3SvcMailboxesInAuthState_Type()
)
pop3SvcMailboxesInAuthState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcMailboxesInAuthState.setStatus("current")
_Pop3SvcMailboxesInTranState_Type = Gauge32
_Pop3SvcMailboxesInTranState_Object = MibScalar
pop3SvcMailboxesInTranState = _Pop3SvcMailboxesInTranState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 6),
    _Pop3SvcMailboxesInTranState_Type()
)
pop3SvcMailboxesInTranState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcMailboxesInTranState.setStatus("current")
_Pop3SvcMessagesDeliveredPerSec_Type = Gauge32
_Pop3SvcMessagesDeliveredPerSec_Object = MibScalar
pop3SvcMessagesDeliveredPerSec = _Pop3SvcMessagesDeliveredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 7),
    _Pop3SvcMessagesDeliveredPerSec_Type()
)
pop3SvcMessagesDeliveredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcMessagesDeliveredPerSec.setStatus("current")
_Pop3SvcSocketsInUse_Type = Gauge32
_Pop3SvcSocketsInUse_Object = MibScalar
pop3SvcSocketsInUse = _Pop3SvcSocketsInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 8),
    _Pop3SvcSocketsInUse_Type()
)
pop3SvcSocketsInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcSocketsInUse.setStatus("current")
_Pop3SvcTotalConnections_Type = Gauge32
_Pop3SvcTotalConnections_Object = MibScalar
pop3SvcTotalConnections = _Pop3SvcTotalConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 9),
    _Pop3SvcTotalConnections_Type()
)
pop3SvcTotalConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcTotalConnections.setStatus("current")
_Pop3SvcTotalFailedLogons_Type = Gauge32
_Pop3SvcTotalFailedLogons_Object = MibScalar
pop3SvcTotalFailedLogons = _Pop3SvcTotalFailedLogons_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 10),
    _Pop3SvcTotalFailedLogons_Type()
)
pop3SvcTotalFailedLogons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcTotalFailedLogons.setStatus("current")
_Pop3SvcTotalBytesReceived_Type = Gauge32
_Pop3SvcTotalBytesReceived_Object = MibScalar
pop3SvcTotalBytesReceived = _Pop3SvcTotalBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 11),
    _Pop3SvcTotalBytesReceived_Type()
)
pop3SvcTotalBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcTotalBytesReceived.setStatus("current")
_Pop3SvcTotalBytesTransmitted_Type = Gauge32
_Pop3SvcTotalBytesTransmitted_Object = MibScalar
pop3SvcTotalBytesTransmitted = _Pop3SvcTotalBytesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 12),
    _Pop3SvcTotalBytesTransmitted_Type()
)
pop3SvcTotalBytesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcTotalBytesTransmitted.setStatus("current")
_Pop3SvcTotalMessagesDelivered_Type = Gauge32
_Pop3SvcTotalMessagesDelivered_Object = MibScalar
pop3SvcTotalMessagesDelivered = _Pop3SvcTotalMessagesDelivered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 13),
    _Pop3SvcTotalMessagesDelivered_Type()
)
pop3SvcTotalMessagesDelivered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pop3SvcTotalMessagesDelivered.setStatus("current")
_PrintQueueTable_Object = MibTable
printQueueTable = _PrintQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63)
)
if mibBuilder.loadTexts:
    printQueueTable.setStatus("current")
_PrintQueueEntry_Object = MibTableRow
printQueueEntry = _PrintQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1)
)
printQueueEntry.setIndexNames(
    (0, "INFORMANT-ADV", "printQueueInstance"),
)
if mibBuilder.loadTexts:
    printQueueEntry.setStatus("current")
_PrintQueueInstance_Type = InstanceName
_PrintQueueInstance_Object = MibTableColumn
printQueueInstance = _PrintQueueInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 1),
    _PrintQueueInstance_Type()
)
printQueueInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueInstance.setStatus("current")
_PrintQueueAddNetworkPrinterCalls_Type = Gauge32
_PrintQueueAddNetworkPrinterCalls_Object = MibTableColumn
printQueueAddNetworkPrinterCalls = _PrintQueueAddNetworkPrinterCalls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 2),
    _PrintQueueAddNetworkPrinterCalls_Type()
)
printQueueAddNetworkPrinterCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueAddNetworkPrinterCalls.setStatus("current")
_PrintQueueBytesPrintedPerSec_Type = Gauge32
_PrintQueueBytesPrintedPerSec_Object = MibTableColumn
printQueueBytesPrintedPerSec = _PrintQueueBytesPrintedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 3),
    _PrintQueueBytesPrintedPerSec_Type()
)
printQueueBytesPrintedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueBytesPrintedPerSec.setStatus("current")
_PrintQueueEnumNetworkPrinterCall_Type = Gauge32
_PrintQueueEnumNetworkPrinterCall_Object = MibTableColumn
printQueueEnumNetworkPrinterCall = _PrintQueueEnumNetworkPrinterCall_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 4),
    _PrintQueueEnumNetworkPrinterCall_Type()
)
printQueueEnumNetworkPrinterCall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueEnumNetworkPrinterCall.setStatus("current")
_PrintQueueJobErrors_Type = Gauge32
_PrintQueueJobErrors_Object = MibTableColumn
printQueueJobErrors = _PrintQueueJobErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 5),
    _PrintQueueJobErrors_Type()
)
printQueueJobErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueJobErrors.setStatus("current")
_PrintQueueJobs_Type = Gauge32
_PrintQueueJobs_Object = MibTableColumn
printQueueJobs = _PrintQueueJobs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 6),
    _PrintQueueJobs_Type()
)
printQueueJobs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueJobs.setStatus("current")
_PrintQueueJobsSpooling_Type = Gauge32
_PrintQueueJobsSpooling_Object = MibTableColumn
printQueueJobsSpooling = _PrintQueueJobsSpooling_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 7),
    _PrintQueueJobsSpooling_Type()
)
printQueueJobsSpooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueJobsSpooling.setStatus("current")
_PrintQueueMaxJobsSpooling_Type = Gauge32
_PrintQueueMaxJobsSpooling_Object = MibTableColumn
printQueueMaxJobsSpooling = _PrintQueueMaxJobsSpooling_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 8),
    _PrintQueueMaxJobsSpooling_Type()
)
printQueueMaxJobsSpooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueMaxJobsSpooling.setStatus("current")
_PrintQueueMaxReferences_Type = Gauge32
_PrintQueueMaxReferences_Object = MibTableColumn
printQueueMaxReferences = _PrintQueueMaxReferences_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 9),
    _PrintQueueMaxReferences_Type()
)
printQueueMaxReferences.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueMaxReferences.setStatus("current")
_PrintQueueNotReadyErrors_Type = Gauge32
_PrintQueueNotReadyErrors_Object = MibTableColumn
printQueueNotReadyErrors = _PrintQueueNotReadyErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 10),
    _PrintQueueNotReadyErrors_Type()
)
printQueueNotReadyErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueNotReadyErrors.setStatus("current")
_PrintQueueOutOfPaperErrors_Type = Gauge32
_PrintQueueOutOfPaperErrors_Object = MibTableColumn
printQueueOutOfPaperErrors = _PrintQueueOutOfPaperErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 11),
    _PrintQueueOutOfPaperErrors_Type()
)
printQueueOutOfPaperErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueOutOfPaperErrors.setStatus("current")
_PrintQueueReferences_Type = Gauge32
_PrintQueueReferences_Object = MibTableColumn
printQueueReferences = _PrintQueueReferences_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 12),
    _PrintQueueReferences_Type()
)
printQueueReferences.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueReferences.setStatus("current")
_PrintQueueTotalJobsPrinted_Type = Gauge32
_PrintQueueTotalJobsPrinted_Object = MibTableColumn
printQueueTotalJobsPrinted = _PrintQueueTotalJobsPrinted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 13),
    _PrintQueueTotalJobsPrinted_Type()
)
printQueueTotalJobsPrinted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueTotalJobsPrinted.setStatus("current")
_PrintQueueTotalPagesPrinted_Type = Gauge32
_PrintQueueTotalPagesPrinted_Object = MibTableColumn
printQueueTotalPagesPrinted = _PrintQueueTotalPagesPrinted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 14),
    _PrintQueueTotalPagesPrinted_Type()
)
printQueueTotalPagesPrinted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    printQueueTotalPagesPrinted.setStatus("current")
_ProcessTable_Object = MibTable
processTable = _ProcessTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64)
)
if mibBuilder.loadTexts:
    processTable.setStatus("current")
_ProcessEntry_Object = MibTableRow
processEntry = _ProcessEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1)
)
processEntry.setIndexNames(
    (0, "INFORMANT-ADV", "processInstance"),
)
if mibBuilder.loadTexts:
    processEntry.setStatus("current")
_ProcessInstance_Type = InstanceName
_ProcessInstance_Object = MibTableColumn
processInstance = _ProcessInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 1),
    _ProcessInstance_Type()
)
processInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processInstance.setStatus("current")
_ProcessPercentPrivilegedTime_Type = Gauge32
_ProcessPercentPrivilegedTime_Object = MibTableColumn
processPercentPrivilegedTime = _ProcessPercentPrivilegedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 2),
    _ProcessPercentPrivilegedTime_Type()
)
processPercentPrivilegedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPercentPrivilegedTime.setStatus("current")
_ProcessPercentProcessorTime_Type = Gauge32
_ProcessPercentProcessorTime_Object = MibTableColumn
processPercentProcessorTime = _ProcessPercentProcessorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 3),
    _ProcessPercentProcessorTime_Type()
)
processPercentProcessorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPercentProcessorTime.setStatus("current")
_ProcessPercentUserTime_Type = Gauge32
_ProcessPercentUserTime_Object = MibTableColumn
processPercentUserTime = _ProcessPercentUserTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 4),
    _ProcessPercentUserTime_Type()
)
processPercentUserTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPercentUserTime.setStatus("current")
_ProcessCreatingProcessID_Type = Gauge32
_ProcessCreatingProcessID_Object = MibTableColumn
processCreatingProcessID = _ProcessCreatingProcessID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 5),
    _ProcessCreatingProcessID_Type()
)
processCreatingProcessID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processCreatingProcessID.setStatus("current")
_ProcessElapsedTime_Type = Gauge32
_ProcessElapsedTime_Object = MibTableColumn
processElapsedTime = _ProcessElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 6),
    _ProcessElapsedTime_Type()
)
processElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processElapsedTime.setStatus("current")
_ProcessHandleCount_Type = Gauge32
_ProcessHandleCount_Object = MibTableColumn
processHandleCount = _ProcessHandleCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 7),
    _ProcessHandleCount_Type()
)
processHandleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processHandleCount.setStatus("current")
_ProcessIDProcess_Type = Gauge32
_ProcessIDProcess_Object = MibTableColumn
processIDProcess = _ProcessIDProcess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 8),
    _ProcessIDProcess_Type()
)
processIDProcess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIDProcess.setStatus("current")
_ProcessIODataBytesPerSec_Type = Gauge32
_ProcessIODataBytesPerSec_Object = MibTableColumn
processIODataBytesPerSec = _ProcessIODataBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 9),
    _ProcessIODataBytesPerSec_Type()
)
processIODataBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIODataBytesPerSec.setStatus("current")
_ProcessIODataOperationsPerSec_Type = Gauge32
_ProcessIODataOperationsPerSec_Object = MibTableColumn
processIODataOperationsPerSec = _ProcessIODataOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 10),
    _ProcessIODataOperationsPerSec_Type()
)
processIODataOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIODataOperationsPerSec.setStatus("current")
_ProcessIOOtherBytesPerSec_Type = Gauge32
_ProcessIOOtherBytesPerSec_Object = MibTableColumn
processIOOtherBytesPerSec = _ProcessIOOtherBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 11),
    _ProcessIOOtherBytesPerSec_Type()
)
processIOOtherBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIOOtherBytesPerSec.setStatus("current")
_ProcessIOOtherOperationsPerSec_Type = Gauge32
_ProcessIOOtherOperationsPerSec_Object = MibTableColumn
processIOOtherOperationsPerSec = _ProcessIOOtherOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 12),
    _ProcessIOOtherOperationsPerSec_Type()
)
processIOOtherOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIOOtherOperationsPerSec.setStatus("current")
_ProcessIOReadBytesPerSec_Type = Gauge32
_ProcessIOReadBytesPerSec_Object = MibTableColumn
processIOReadBytesPerSec = _ProcessIOReadBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 13),
    _ProcessIOReadBytesPerSec_Type()
)
processIOReadBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIOReadBytesPerSec.setStatus("current")
_ProcessIOReadOperationsPerSec_Type = Gauge32
_ProcessIOReadOperationsPerSec_Object = MibTableColumn
processIOReadOperationsPerSec = _ProcessIOReadOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 14),
    _ProcessIOReadOperationsPerSec_Type()
)
processIOReadOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIOReadOperationsPerSec.setStatus("current")
_ProcessIOWriteBytesPerSec_Type = Gauge32
_ProcessIOWriteBytesPerSec_Object = MibTableColumn
processIOWriteBytesPerSec = _ProcessIOWriteBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 15),
    _ProcessIOWriteBytesPerSec_Type()
)
processIOWriteBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIOWriteBytesPerSec.setStatus("current")
_ProcessIOWriteOperationsPerSec_Type = Gauge32
_ProcessIOWriteOperationsPerSec_Object = MibTableColumn
processIOWriteOperationsPerSec = _ProcessIOWriteOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 16),
    _ProcessIOWriteOperationsPerSec_Type()
)
processIOWriteOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processIOWriteOperationsPerSec.setStatus("current")
_ProcessPageFaultsPerSec_Type = Gauge32
_ProcessPageFaultsPerSec_Object = MibTableColumn
processPageFaultsPerSec = _ProcessPageFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 17),
    _ProcessPageFaultsPerSec_Type()
)
processPageFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFaultsPerSec.setStatus("current")
_ProcessPageFileBytes_Type = Gauge32
_ProcessPageFileBytes_Object = MibTableColumn
processPageFileBytes = _ProcessPageFileBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 18),
    _ProcessPageFileBytes_Type()
)
processPageFileBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFileBytes.setStatus("current")
_ProcessPageFileBytesPeak_Type = Gauge32
_ProcessPageFileBytesPeak_Object = MibTableColumn
processPageFileBytesPeak = _ProcessPageFileBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 19),
    _ProcessPageFileBytesPeak_Type()
)
processPageFileBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFileBytesPeak.setStatus("current")
_ProcessPoolNonpagedBytes_Type = Gauge32
_ProcessPoolNonpagedBytes_Object = MibTableColumn
processPoolNonpagedBytes = _ProcessPoolNonpagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 20),
    _ProcessPoolNonpagedBytes_Type()
)
processPoolNonpagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPoolNonpagedBytes.setStatus("current")
_ProcessPoolPagedBytes_Type = Gauge32
_ProcessPoolPagedBytes_Object = MibTableColumn
processPoolPagedBytes = _ProcessPoolPagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 21),
    _ProcessPoolPagedBytes_Type()
)
processPoolPagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPoolPagedBytes.setStatus("current")
_ProcessPriorityBase_Type = Gauge32
_ProcessPriorityBase_Object = MibTableColumn
processPriorityBase = _ProcessPriorityBase_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 22),
    _ProcessPriorityBase_Type()
)
processPriorityBase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPriorityBase.setStatus("current")
_ProcessPrivateBytes_Type = Gauge32
_ProcessPrivateBytes_Object = MibTableColumn
processPrivateBytes = _ProcessPrivateBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 23),
    _ProcessPrivateBytes_Type()
)
processPrivateBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPrivateBytes.setStatus("current")
_ProcessThreadCount_Type = Gauge32
_ProcessThreadCount_Object = MibTableColumn
processThreadCount = _ProcessThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 24),
    _ProcessThreadCount_Type()
)
processThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processThreadCount.setStatus("current")
_ProcessVirtualBytes_Type = Gauge32
_ProcessVirtualBytes_Object = MibTableColumn
processVirtualBytes = _ProcessVirtualBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 25),
    _ProcessVirtualBytes_Type()
)
processVirtualBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processVirtualBytes.setStatus("current")
_ProcessVirtualBytesPeak_Type = Gauge32
_ProcessVirtualBytesPeak_Object = MibTableColumn
processVirtualBytesPeak = _ProcessVirtualBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 26),
    _ProcessVirtualBytesPeak_Type()
)
processVirtualBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processVirtualBytesPeak.setStatus("current")
_ProcessWorkingSet_Type = Gauge32
_ProcessWorkingSet_Object = MibTableColumn
processWorkingSet = _ProcessWorkingSet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 27),
    _ProcessWorkingSet_Type()
)
processWorkingSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSet.setStatus("current")
_ProcessWorkingSetPeak_Type = Gauge32
_ProcessWorkingSetPeak_Object = MibTableColumn
processWorkingSetPeak = _ProcessWorkingSetPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 28),
    _ProcessWorkingSetPeak_Type()
)
processWorkingSetPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetPeak.setStatus("current")
_ProcessPageFileKBytes_Type = Gauge32
_ProcessPageFileKBytes_Object = MibTableColumn
processPageFileKBytes = _ProcessPageFileKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 29),
    _ProcessPageFileKBytes_Type()
)
processPageFileKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFileKBytes.setStatus("current")
_ProcessPageFileKBytesPeak_Type = Gauge32
_ProcessPageFileKBytesPeak_Object = MibTableColumn
processPageFileKBytesPeak = _ProcessPageFileKBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 30),
    _ProcessPageFileKBytesPeak_Type()
)
processPageFileKBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFileKBytesPeak.setStatus("current")
_ProcessPoolNonpagedKBytes_Type = Gauge32
_ProcessPoolNonpagedKBytes_Object = MibTableColumn
processPoolNonpagedKBytes = _ProcessPoolNonpagedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 31),
    _ProcessPoolNonpagedKBytes_Type()
)
processPoolNonpagedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPoolNonpagedKBytes.setStatus("current")
_ProcessPoolPagedKBytes_Type = Gauge32
_ProcessPoolPagedKBytes_Object = MibTableColumn
processPoolPagedKBytes = _ProcessPoolPagedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 32),
    _ProcessPoolPagedKBytes_Type()
)
processPoolPagedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPoolPagedKBytes.setStatus("current")
_ProcessPrivateKBytes_Type = Gauge32
_ProcessPrivateKBytes_Object = MibTableColumn
processPrivateKBytes = _ProcessPrivateKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 33),
    _ProcessPrivateKBytes_Type()
)
processPrivateKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPrivateKBytes.setStatus("current")
_ProcessVirtualKBytes_Type = Gauge32
_ProcessVirtualKBytes_Object = MibTableColumn
processVirtualKBytes = _ProcessVirtualKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 34),
    _ProcessVirtualKBytes_Type()
)
processVirtualKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processVirtualKBytes.setStatus("current")
_ProcessVirtualKBytesPeak_Type = Gauge32
_ProcessVirtualKBytesPeak_Object = MibTableColumn
processVirtualKBytesPeak = _ProcessVirtualKBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 35),
    _ProcessVirtualKBytesPeak_Type()
)
processVirtualKBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processVirtualKBytesPeak.setStatus("current")
_ProcessWorkingSetKBytes_Type = Gauge32
_ProcessWorkingSetKBytes_Object = MibTableColumn
processWorkingSetKBytes = _ProcessWorkingSetKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 36),
    _ProcessWorkingSetKBytes_Type()
)
processWorkingSetKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetKBytes.setStatus("current")
_ProcessWorkingSetKBytesPeak_Type = Gauge32
_ProcessWorkingSetKBytesPeak_Object = MibTableColumn
processWorkingSetKBytesPeak = _ProcessWorkingSetKBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 37),
    _ProcessWorkingSetKBytesPeak_Type()
)
processWorkingSetKBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetKBytesPeak.setStatus("current")
_ProcessPageFileMBytes_Type = Gauge32
_ProcessPageFileMBytes_Object = MibTableColumn
processPageFileMBytes = _ProcessPageFileMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 38),
    _ProcessPageFileMBytes_Type()
)
processPageFileMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFileMBytes.setStatus("current")
_ProcessPageFileMBytesPeak_Type = Gauge32
_ProcessPageFileMBytesPeak_Object = MibTableColumn
processPageFileMBytesPeak = _ProcessPageFileMBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 39),
    _ProcessPageFileMBytesPeak_Type()
)
processPageFileMBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPageFileMBytesPeak.setStatus("current")
_ProcessPoolNonpagedMBytes_Type = Gauge32
_ProcessPoolNonpagedMBytes_Object = MibTableColumn
processPoolNonpagedMBytes = _ProcessPoolNonpagedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 40),
    _ProcessPoolNonpagedMBytes_Type()
)
processPoolNonpagedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPoolNonpagedMBytes.setStatus("current")
_ProcessPoolPagedMBytes_Type = Gauge32
_ProcessPoolPagedMBytes_Object = MibTableColumn
processPoolPagedMBytes = _ProcessPoolPagedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 41),
    _ProcessPoolPagedMBytes_Type()
)
processPoolPagedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPoolPagedMBytes.setStatus("current")
_ProcessPrivateMBytes_Type = Gauge32
_ProcessPrivateMBytes_Object = MibTableColumn
processPrivateMBytes = _ProcessPrivateMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 42),
    _ProcessPrivateMBytes_Type()
)
processPrivateMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processPrivateMBytes.setStatus("current")
_ProcessVirtualMBytes_Type = Gauge32
_ProcessVirtualMBytes_Object = MibTableColumn
processVirtualMBytes = _ProcessVirtualMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 43),
    _ProcessVirtualMBytes_Type()
)
processVirtualMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processVirtualMBytes.setStatus("current")
_ProcessVirtualMBytesPeak_Type = Gauge32
_ProcessVirtualMBytesPeak_Object = MibTableColumn
processVirtualMBytesPeak = _ProcessVirtualMBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 44),
    _ProcessVirtualMBytesPeak_Type()
)
processVirtualMBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processVirtualMBytesPeak.setStatus("current")
_ProcessWorkingSetMBytes_Type = Gauge32
_ProcessWorkingSetMBytes_Object = MibTableColumn
processWorkingSetMBytes = _ProcessWorkingSetMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 45),
    _ProcessWorkingSetMBytes_Type()
)
processWorkingSetMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetMBytes.setStatus("current")
_ProcessWorkingSetMBytesPeak_Type = Gauge32
_ProcessWorkingSetMBytesPeak_Object = MibTableColumn
processWorkingSetMBytesPeak = _ProcessWorkingSetMBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 46),
    _ProcessWorkingSetMBytesPeak_Type()
)
processWorkingSetMBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetMBytesPeak.setStatus("current")
_ProcessWorkingSetPrivate_Type = Gauge32
_ProcessWorkingSetPrivate_Object = MibTableColumn
processWorkingSetPrivate = _ProcessWorkingSetPrivate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 47),
    _ProcessWorkingSetPrivate_Type()
)
processWorkingSetPrivate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetPrivate.setStatus("current")
_ProcessWorkingSetKPrivate_Type = Gauge32
_ProcessWorkingSetKPrivate_Object = MibTableColumn
processWorkingSetKPrivate = _ProcessWorkingSetKPrivate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 48),
    _ProcessWorkingSetKPrivate_Type()
)
processWorkingSetKPrivate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetKPrivate.setStatus("current")
_ProcessWorkingSetMPrivate_Type = Gauge32
_ProcessWorkingSetMPrivate_Object = MibTableColumn
processWorkingSetMPrivate = _ProcessWorkingSetMPrivate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 49),
    _ProcessWorkingSetMPrivate_Type()
)
processWorkingSetMPrivate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    processWorkingSetMPrivate.setStatus("current")
_ProcessorTable_Object = MibTable
processorTable = _ProcessorTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65)
)
if mibBuilder.loadTexts:
    processorTable.setStatus("current")
_ProcessorEntry_Object = MibTableRow
processorEntry = _ProcessorEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1)
)
processorEntry.setIndexNames(
    (0, "INFORMANT-ADV", "cpuInstance"),
)
if mibBuilder.loadTexts:
    processorEntry.setStatus("current")
_CpuInstance_Type = InstanceName
_CpuInstance_Object = MibTableColumn
cpuInstance = _CpuInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 1),
    _CpuInstance_Type()
)
cpuInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuInstance.setStatus("current")
_CpuPercentC1Time_Type = Gauge32
_CpuPercentC1Time_Object = MibTableColumn
cpuPercentC1Time = _CpuPercentC1Time_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 2),
    _CpuPercentC1Time_Type()
)
cpuPercentC1Time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentC1Time.setStatus("current")
_CpuPercentC2Time_Type = Gauge32
_CpuPercentC2Time_Object = MibTableColumn
cpuPercentC2Time = _CpuPercentC2Time_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 3),
    _CpuPercentC2Time_Type()
)
cpuPercentC2Time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentC2Time.setStatus("current")
_CpuPercentC3Time_Type = Gauge32
_CpuPercentC3Time_Object = MibTableColumn
cpuPercentC3Time = _CpuPercentC3Time_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 4),
    _CpuPercentC3Time_Type()
)
cpuPercentC3Time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentC3Time.setStatus("current")
_CpuPercentDPCTime_Type = Gauge32
_CpuPercentDPCTime_Object = MibTableColumn
cpuPercentDPCTime = _CpuPercentDPCTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 5),
    _CpuPercentDPCTime_Type()
)
cpuPercentDPCTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentDPCTime.setStatus("current")
_CpuPercentIdleTime_Type = Gauge32
_CpuPercentIdleTime_Object = MibTableColumn
cpuPercentIdleTime = _CpuPercentIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 6),
    _CpuPercentIdleTime_Type()
)
cpuPercentIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentIdleTime.setStatus("current")
_CpuPercentInterruptTime_Type = Gauge32
_CpuPercentInterruptTime_Object = MibTableColumn
cpuPercentInterruptTime = _CpuPercentInterruptTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 7),
    _CpuPercentInterruptTime_Type()
)
cpuPercentInterruptTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentInterruptTime.setStatus("current")
_CpuPercentPrivilegedTime_Type = Gauge32
_CpuPercentPrivilegedTime_Object = MibTableColumn
cpuPercentPrivilegedTime = _CpuPercentPrivilegedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 8),
    _CpuPercentPrivilegedTime_Type()
)
cpuPercentPrivilegedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentPrivilegedTime.setStatus("current")
_CpuPercentProcessorTime_Type = Gauge32
_CpuPercentProcessorTime_Object = MibTableColumn
cpuPercentProcessorTime = _CpuPercentProcessorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 9),
    _CpuPercentProcessorTime_Type()
)
cpuPercentProcessorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentProcessorTime.setStatus("current")
_CpuPercentUserTime_Type = Gauge32
_CpuPercentUserTime_Object = MibTableColumn
cpuPercentUserTime = _CpuPercentUserTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 10),
    _CpuPercentUserTime_Type()
)
cpuPercentUserTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuPercentUserTime.setStatus("current")
_CpuC1TransitionsPerSec_Type = Gauge32
_CpuC1TransitionsPerSec_Object = MibTableColumn
cpuC1TransitionsPerSec = _CpuC1TransitionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 11),
    _CpuC1TransitionsPerSec_Type()
)
cpuC1TransitionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuC1TransitionsPerSec.setStatus("current")
_CpuC2TransitionsPerSec_Type = Gauge32
_CpuC2TransitionsPerSec_Object = MibTableColumn
cpuC2TransitionsPerSec = _CpuC2TransitionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 12),
    _CpuC2TransitionsPerSec_Type()
)
cpuC2TransitionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuC2TransitionsPerSec.setStatus("current")
_CpuC3TransitionsPerSec_Type = Gauge32
_CpuC3TransitionsPerSec_Object = MibTableColumn
cpuC3TransitionsPerSec = _CpuC3TransitionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 13),
    _CpuC3TransitionsPerSec_Type()
)
cpuC3TransitionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuC3TransitionsPerSec.setStatus("current")
_CpuDPCRate_Type = Gauge32
_CpuDPCRate_Object = MibTableColumn
cpuDPCRate = _CpuDPCRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 14),
    _CpuDPCRate_Type()
)
cpuDPCRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuDPCRate.setStatus("current")
_CpuDPCsQueuedPerSec_Type = Gauge32
_CpuDPCsQueuedPerSec_Object = MibTableColumn
cpuDPCsQueuedPerSec = _CpuDPCsQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 15),
    _CpuDPCsQueuedPerSec_Type()
)
cpuDPCsQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuDPCsQueuedPerSec.setStatus("current")
_CpuInterruptsPerSec_Type = Gauge32
_CpuInterruptsPerSec_Object = MibTableColumn
cpuInterruptsPerSec = _CpuInterruptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 16),
    _CpuInterruptsPerSec_Type()
)
cpuInterruptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cpuInterruptsPerSec.setStatus("current")
_PSchedFlowTable_Object = MibTable
pSchedFlowTable = _PSchedFlowTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66)
)
if mibBuilder.loadTexts:
    pSchedFlowTable.setStatus("current")
_PSchedFlowEntry_Object = MibTableRow
pSchedFlowEntry = _PSchedFlowEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1)
)
pSchedFlowEntry.setIndexNames(
    (0, "INFORMANT-ADV", "pSchedFlowInstance"),
)
if mibBuilder.loadTexts:
    pSchedFlowEntry.setStatus("current")
_PSchedFlowInstance_Type = InstanceName
_PSchedFlowInstance_Object = MibTableColumn
pSchedFlowInstance = _PSchedFlowInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 1),
    _PSchedFlowInstance_Type()
)
pSchedFlowInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowInstance.setStatus("current")
_PSchedFlowAveragePktsInNetcard_Type = Gauge32
_PSchedFlowAveragePktsInNetcard_Object = MibTableColumn
pSchedFlowAveragePktsInNetcard = _PSchedFlowAveragePktsInNetcard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 2),
    _PSchedFlowAveragePktsInNetcard_Type()
)
pSchedFlowAveragePktsInNetcard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowAveragePktsInNetcard.setStatus("current")
_PSchedFlowAveragePktsInSequencer_Type = Gauge32
_PSchedFlowAveragePktsInSequencer_Object = MibTableColumn
pSchedFlowAveragePktsInSequencer = _PSchedFlowAveragePktsInSequencer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 3),
    _PSchedFlowAveragePktsInSequencer_Type()
)
pSchedFlowAveragePktsInSequencer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowAveragePktsInSequencer.setStatus("current")
_PSchedFlowAveragePktsInShaper_Type = Gauge32
_PSchedFlowAveragePktsInShaper_Object = MibTableColumn
pSchedFlowAveragePktsInShaper = _PSchedFlowAveragePktsInShaper_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 4),
    _PSchedFlowAveragePktsInShaper_Type()
)
pSchedFlowAveragePktsInShaper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowAveragePktsInShaper.setStatus("current")
_PSchedFlowBytesScheduled_Type = Gauge32
_PSchedFlowBytesScheduled_Object = MibTableColumn
pSchedFlowBytesScheduled = _PSchedFlowBytesScheduled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 5),
    _PSchedFlowBytesScheduled_Type()
)
pSchedFlowBytesScheduled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowBytesScheduled.setStatus("current")
_PSchedFlowBytesScheduledPerSec_Type = Gauge32
_PSchedFlowBytesScheduledPerSec_Object = MibTableColumn
pSchedFlowBytesScheduledPerSec = _PSchedFlowBytesScheduledPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 6),
    _PSchedFlowBytesScheduledPerSec_Type()
)
pSchedFlowBytesScheduledPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowBytesScheduledPerSec.setStatus("current")
_PSchedFlowBytesTransmitted_Type = Gauge32
_PSchedFlowBytesTransmitted_Object = MibTableColumn
pSchedFlowBytesTransmitted = _PSchedFlowBytesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 7),
    _PSchedFlowBytesTransmitted_Type()
)
pSchedFlowBytesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowBytesTransmitted.setStatus("current")
_PSchedFlowBytesTransmittedPerSec_Type = Gauge32
_PSchedFlowBytesTransmittedPerSec_Object = MibTableColumn
pSchedFlowBytesTransmittedPerSec = _PSchedFlowBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 8),
    _PSchedFlowBytesTransmittedPerSec_Type()
)
pSchedFlowBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowBytesTransmittedPerSec.setStatus("current")
_PSchedFlowMaxPktsInSequencer_Type = Gauge32
_PSchedFlowMaxPktsInSequencer_Object = MibTableColumn
pSchedFlowMaxPktsInSequencer = _PSchedFlowMaxPktsInSequencer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 9),
    _PSchedFlowMaxPktsInSequencer_Type()
)
pSchedFlowMaxPktsInSequencer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowMaxPktsInSequencer.setStatus("current")
_PSchedFlowMaxPktsInShaper_Type = Gauge32
_PSchedFlowMaxPktsInShaper_Object = MibTableColumn
pSchedFlowMaxPktsInShaper = _PSchedFlowMaxPktsInShaper_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 10),
    _PSchedFlowMaxPktsInShaper_Type()
)
pSchedFlowMaxPktsInShaper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowMaxPktsInShaper.setStatus("current")
_PSchedFlowMaximumPktsInNetcard_Type = Gauge32
_PSchedFlowMaximumPktsInNetcard_Object = MibTableColumn
pSchedFlowMaximumPktsInNetcard = _PSchedFlowMaximumPktsInNetcard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 11),
    _PSchedFlowMaximumPktsInNetcard_Type()
)
pSchedFlowMaximumPktsInNetcard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowMaximumPktsInNetcard.setStatus("current")
_PSchedFlowNonconfPktsSched_Type = Gauge32
_PSchedFlowNonconfPktsSched_Object = MibTableColumn
pSchedFlowNonconfPktsSched = _PSchedFlowNonconfPktsSched_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 12),
    _PSchedFlowNonconfPktsSched_Type()
)
pSchedFlowNonconfPktsSched.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowNonconfPktsSched.setStatus("current")
_PSchedFlowNonconfPktsSchedPerSec_Type = Gauge32
_PSchedFlowNonconfPktsSchedPerSec_Object = MibTableColumn
pSchedFlowNonconfPktsSchedPerSec = _PSchedFlowNonconfPktsSchedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 13),
    _PSchedFlowNonconfPktsSchedPerSec_Type()
)
pSchedFlowNonconfPktsSchedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowNonconfPktsSchedPerSec.setStatus("current")
_PSchedFlowNonconfPktsXmitd_Type = Gauge32
_PSchedFlowNonconfPktsXmitd_Object = MibTableColumn
pSchedFlowNonconfPktsXmitd = _PSchedFlowNonconfPktsXmitd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 14),
    _PSchedFlowNonconfPktsXmitd_Type()
)
pSchedFlowNonconfPktsXmitd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowNonconfPktsXmitd.setStatus("current")
_PSchedFlowNonconfPktsXmitdPerSec_Type = Gauge32
_PSchedFlowNonconfPktsXmitdPerSec_Object = MibTableColumn
pSchedFlowNonconfPktsXmitdPerSec = _PSchedFlowNonconfPktsXmitdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 15),
    _PSchedFlowNonconfPktsXmitdPerSec_Type()
)
pSchedFlowNonconfPktsXmitdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowNonconfPktsXmitdPerSec.setStatus("current")
_PSchedFlowPktsDropped_Type = Gauge32
_PSchedFlowPktsDropped_Object = MibTableColumn
pSchedFlowPktsDropped = _PSchedFlowPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 16),
    _PSchedFlowPktsDropped_Type()
)
pSchedFlowPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowPktsDropped.setStatus("current")
_PSchedFlowPktsDroppedPerSec_Type = Gauge32
_PSchedFlowPktsDroppedPerSec_Object = MibTableColumn
pSchedFlowPktsDroppedPerSec = _PSchedFlowPktsDroppedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 17),
    _PSchedFlowPktsDroppedPerSec_Type()
)
pSchedFlowPktsDroppedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowPktsDroppedPerSec.setStatus("current")
_PSchedFlowPktsScheduled_Type = Gauge32
_PSchedFlowPktsScheduled_Object = MibTableColumn
pSchedFlowPktsScheduled = _PSchedFlowPktsScheduled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 18),
    _PSchedFlowPktsScheduled_Type()
)
pSchedFlowPktsScheduled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowPktsScheduled.setStatus("current")
_PSchedFlowPktsScheduledPerSec_Type = Gauge32
_PSchedFlowPktsScheduledPerSec_Object = MibTableColumn
pSchedFlowPktsScheduledPerSec = _PSchedFlowPktsScheduledPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 19),
    _PSchedFlowPktsScheduledPerSec_Type()
)
pSchedFlowPktsScheduledPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowPktsScheduledPerSec.setStatus("current")
_PSchedFlowPktsTransmitted_Type = Gauge32
_PSchedFlowPktsTransmitted_Object = MibTableColumn
pSchedFlowPktsTransmitted = _PSchedFlowPktsTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 20),
    _PSchedFlowPktsTransmitted_Type()
)
pSchedFlowPktsTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowPktsTransmitted.setStatus("current")
_PSchedFlowPktsTransmittedPerSec_Type = Gauge32
_PSchedFlowPktsTransmittedPerSec_Object = MibTableColumn
pSchedFlowPktsTransmittedPerSec = _PSchedFlowPktsTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 21),
    _PSchedFlowPktsTransmittedPerSec_Type()
)
pSchedFlowPktsTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedFlowPktsTransmittedPerSec.setStatus("current")
_PSchedPipeTable_Object = MibTable
pSchedPipeTable = _PSchedPipeTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67)
)
if mibBuilder.loadTexts:
    pSchedPipeTable.setStatus("current")
_PSchedPipeEntry_Object = MibTableRow
pSchedPipeEntry = _PSchedPipeEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1)
)
pSchedPipeEntry.setIndexNames(
    (0, "INFORMANT-ADV", "pSchedPipeInstance"),
)
if mibBuilder.loadTexts:
    pSchedPipeEntry.setStatus("current")
_PSchedPipeInstance_Type = InstanceName
_PSchedPipeInstance_Object = MibTableColumn
pSchedPipeInstance = _PSchedPipeInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 1),
    _PSchedPipeInstance_Type()
)
pSchedPipeInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeInstance.setStatus("current")
_PSchedPipeAvgPacketsInNetcard_Type = Gauge32
_PSchedPipeAvgPacketsInNetcard_Object = MibTableColumn
pSchedPipeAvgPacketsInNetcard = _PSchedPipeAvgPacketsInNetcard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 2),
    _PSchedPipeAvgPacketsInNetcard_Type()
)
pSchedPipeAvgPacketsInNetcard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeAvgPacketsInNetcard.setStatus("current")
_PSchedPipeAvgPacketsInSequencer_Type = Gauge32
_PSchedPipeAvgPacketsInSequencer_Object = MibTableColumn
pSchedPipeAvgPacketsInSequencer = _PSchedPipeAvgPacketsInSequencer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 3),
    _PSchedPipeAvgPacketsInSequencer_Type()
)
pSchedPipeAvgPacketsInSequencer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeAvgPacketsInSequencer.setStatus("current")
_PSchedPipeAvgPacketsInShaper_Type = Gauge32
_PSchedPipeAvgPacketsInShaper_Object = MibTableColumn
pSchedPipeAvgPacketsInShaper = _PSchedPipeAvgPacketsInShaper_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 4),
    _PSchedPipeAvgPacketsInShaper_Type()
)
pSchedPipeAvgPacketsInShaper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeAvgPacketsInShaper.setStatus("current")
_PSchedPipeFlowModsRejected_Type = Gauge32
_PSchedPipeFlowModsRejected_Object = MibTableColumn
pSchedPipeFlowModsRejected = _PSchedPipeFlowModsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 5),
    _PSchedPipeFlowModsRejected_Type()
)
pSchedPipeFlowModsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeFlowModsRejected.setStatus("current")
_PSchedPipeFlowsClosed_Type = Gauge32
_PSchedPipeFlowsClosed_Object = MibTableColumn
pSchedPipeFlowsClosed = _PSchedPipeFlowsClosed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 6),
    _PSchedPipeFlowsClosed_Type()
)
pSchedPipeFlowsClosed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeFlowsClosed.setStatus("current")
_PSchedPipeFlowsModified_Type = Gauge32
_PSchedPipeFlowsModified_Object = MibTableColumn
pSchedPipeFlowsModified = _PSchedPipeFlowsModified_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 7),
    _PSchedPipeFlowsModified_Type()
)
pSchedPipeFlowsModified.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeFlowsModified.setStatus("current")
_PSchedPipeFlowsOpened_Type = Gauge32
_PSchedPipeFlowsOpened_Object = MibTableColumn
pSchedPipeFlowsOpened = _PSchedPipeFlowsOpened_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 8),
    _PSchedPipeFlowsOpened_Type()
)
pSchedPipeFlowsOpened.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeFlowsOpened.setStatus("current")
_PSchedPipeFlowsRejected_Type = Gauge32
_PSchedPipeFlowsRejected_Object = MibTableColumn
pSchedPipeFlowsRejected = _PSchedPipeFlowsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 9),
    _PSchedPipeFlowsRejected_Type()
)
pSchedPipeFlowsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeFlowsRejected.setStatus("current")
_PSchedPipeMaxPacketsInNetcard_Type = Gauge32
_PSchedPipeMaxPacketsInNetcard_Object = MibTableColumn
pSchedPipeMaxPacketsInNetcard = _PSchedPipeMaxPacketsInNetcard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 10),
    _PSchedPipeMaxPacketsInNetcard_Type()
)
pSchedPipeMaxPacketsInNetcard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeMaxPacketsInNetcard.setStatus("current")
_PSchedPipeMaxPacketsInSequencer_Type = Gauge32
_PSchedPipeMaxPacketsInSequencer_Object = MibTableColumn
pSchedPipeMaxPacketsInSequencer = _PSchedPipeMaxPacketsInSequencer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 11),
    _PSchedPipeMaxPacketsInSequencer_Type()
)
pSchedPipeMaxPacketsInSequencer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeMaxPacketsInSequencer.setStatus("current")
_PSchedPipeMaxPacketsInShaper_Type = Gauge32
_PSchedPipeMaxPacketsInShaper_Object = MibTableColumn
pSchedPipeMaxPacketsInShaper = _PSchedPipeMaxPacketsInShaper_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 12),
    _PSchedPipeMaxPacketsInShaper_Type()
)
pSchedPipeMaxPacketsInShaper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeMaxPacketsInShaper.setStatus("current")
_PSchedPipeMaxSimultaneousFlows_Type = Gauge32
_PSchedPipeMaxSimultaneousFlows_Object = MibTableColumn
pSchedPipeMaxSimultaneousFlows = _PSchedPipeMaxSimultaneousFlows_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 13),
    _PSchedPipeMaxSimultaneousFlows_Type()
)
pSchedPipeMaxSimultaneousFlows.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeMaxSimultaneousFlows.setStatus("current")
_PSchedPipeBadPacketsSched_Type = Gauge32
_PSchedPipeBadPacketsSched_Object = MibTableColumn
pSchedPipeBadPacketsSched = _PSchedPipeBadPacketsSched_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 14),
    _PSchedPipeBadPacketsSched_Type()
)
pSchedPipeBadPacketsSched.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeBadPacketsSched.setStatus("current")
_PSchedPipeBadPacketsSchedPerSec_Type = Gauge32
_PSchedPipeBadPacketsSchedPerSec_Object = MibTableColumn
pSchedPipeBadPacketsSchedPerSec = _PSchedPipeBadPacketsSchedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 15),
    _PSchedPipeBadPacketsSchedPerSec_Type()
)
pSchedPipeBadPacketsSchedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeBadPacketsSchedPerSec.setStatus("current")
_PSchedPipeBadPacketsXmited_Type = Gauge32
_PSchedPipeBadPacketsXmited_Object = MibTableColumn
pSchedPipeBadPacketsXmited = _PSchedPipeBadPacketsXmited_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 16),
    _PSchedPipeBadPacketsXmited_Type()
)
pSchedPipeBadPacketsXmited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeBadPacketsXmited.setStatus("current")
_PSchedPipeBadPacketsXmitedPerSec_Type = Gauge32
_PSchedPipeBadPacketsXmitedPerSec_Object = MibTableColumn
pSchedPipeBadPacketsXmitedPerSec = _PSchedPipeBadPacketsXmitedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 17),
    _PSchedPipeBadPacketsXmitedPerSec_Type()
)
pSchedPipeBadPacketsXmitedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeBadPacketsXmitedPerSec.setStatus("current")
_PSchedPipeOutOfPackets_Type = Gauge32
_PSchedPipeOutOfPackets_Object = MibTableColumn
pSchedPipeOutOfPackets = _PSchedPipeOutOfPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 18),
    _PSchedPipeOutOfPackets_Type()
)
pSchedPipeOutOfPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pSchedPipeOutOfPackets.setStatus("current")
_RasTotal_ObjectIdentity = ObjectIdentity
rasTotal = _RasTotal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68)
)
if mibBuilder.loadTexts:
    rasTotal.setStatus("current")
_RasTotalAlignmentErrors_Type = Gauge32
_RasTotalAlignmentErrors_Object = MibScalar
rasTotalAlignmentErrors = _RasTotalAlignmentErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 1),
    _RasTotalAlignmentErrors_Type()
)
rasTotalAlignmentErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalAlignmentErrors.setStatus("current")
_RasTotalBufferOverrunErrors_Type = Gauge32
_RasTotalBufferOverrunErrors_Object = MibScalar
rasTotalBufferOverrunErrors = _RasTotalBufferOverrunErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 2),
    _RasTotalBufferOverrunErrors_Type()
)
rasTotalBufferOverrunErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalBufferOverrunErrors.setStatus("current")
_RasTotalBytesReceived_Type = Gauge32
_RasTotalBytesReceived_Object = MibScalar
rasTotalBytesReceived = _RasTotalBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 3),
    _RasTotalBytesReceived_Type()
)
rasTotalBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalBytesReceived.setStatus("current")
_RasTotalBytesReceivedPerSec_Type = Gauge32
_RasTotalBytesReceivedPerSec_Object = MibScalar
rasTotalBytesReceivedPerSec = _RasTotalBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 4),
    _RasTotalBytesReceivedPerSec_Type()
)
rasTotalBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalBytesReceivedPerSec.setStatus("current")
_RasTotalBytesTransmitted_Type = Gauge32
_RasTotalBytesTransmitted_Object = MibScalar
rasTotalBytesTransmitted = _RasTotalBytesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 5),
    _RasTotalBytesTransmitted_Type()
)
rasTotalBytesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalBytesTransmitted.setStatus("current")
_RasTotalBytesTransmittedPerSec_Type = Gauge32
_RasTotalBytesTransmittedPerSec_Object = MibScalar
rasTotalBytesTransmittedPerSec = _RasTotalBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 6),
    _RasTotalBytesTransmittedPerSec_Type()
)
rasTotalBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalBytesTransmittedPerSec.setStatus("current")
_RasTotalCRCErrors_Type = Gauge32
_RasTotalCRCErrors_Object = MibScalar
rasTotalCRCErrors = _RasTotalCRCErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 7),
    _RasTotalCRCErrors_Type()
)
rasTotalCRCErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalCRCErrors.setStatus("current")
_RasTotalFramesReceived_Type = Gauge32
_RasTotalFramesReceived_Object = MibScalar
rasTotalFramesReceived = _RasTotalFramesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 8),
    _RasTotalFramesReceived_Type()
)
rasTotalFramesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalFramesReceived.setStatus("current")
_RasTotalFramesReceivedPerSec_Type = Gauge32
_RasTotalFramesReceivedPerSec_Object = MibScalar
rasTotalFramesReceivedPerSec = _RasTotalFramesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 9),
    _RasTotalFramesReceivedPerSec_Type()
)
rasTotalFramesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalFramesReceivedPerSec.setStatus("current")
_RasTotalFramesTransmitted_Type = Gauge32
_RasTotalFramesTransmitted_Object = MibScalar
rasTotalFramesTransmitted = _RasTotalFramesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 10),
    _RasTotalFramesTransmitted_Type()
)
rasTotalFramesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalFramesTransmitted.setStatus("current")
_RasTotalFramesTransmittedPerSec_Type = Gauge32
_RasTotalFramesTransmittedPerSec_Object = MibScalar
rasTotalFramesTransmittedPerSec = _RasTotalFramesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 11),
    _RasTotalFramesTransmittedPerSec_Type()
)
rasTotalFramesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalFramesTransmittedPerSec.setStatus("current")
_RasTotalPercentCompressionIn_Type = Gauge32
_RasTotalPercentCompressionIn_Object = MibScalar
rasTotalPercentCompressionIn = _RasTotalPercentCompressionIn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 12),
    _RasTotalPercentCompressionIn_Type()
)
rasTotalPercentCompressionIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalPercentCompressionIn.setStatus("current")
_RasTotalPercentCompressionOut_Type = Gauge32
_RasTotalPercentCompressionOut_Object = MibScalar
rasTotalPercentCompressionOut = _RasTotalPercentCompressionOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 13),
    _RasTotalPercentCompressionOut_Type()
)
rasTotalPercentCompressionOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalPercentCompressionOut.setStatus("current")
_RasTotalSerialOverrunErrors_Type = Gauge32
_RasTotalSerialOverrunErrors_Object = MibScalar
rasTotalSerialOverrunErrors = _RasTotalSerialOverrunErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 14),
    _RasTotalSerialOverrunErrors_Type()
)
rasTotalSerialOverrunErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalSerialOverrunErrors.setStatus("current")
_RasTotalTimeoutErrors_Type = Gauge32
_RasTotalTimeoutErrors_Object = MibScalar
rasTotalTimeoutErrors = _RasTotalTimeoutErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 15),
    _RasTotalTimeoutErrors_Type()
)
rasTotalTimeoutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalTimeoutErrors.setStatus("current")
_RasTotalTotalConnections_Type = Gauge32
_RasTotalTotalConnections_Object = MibScalar
rasTotalTotalConnections = _RasTotalTotalConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 16),
    _RasTotalTotalConnections_Type()
)
rasTotalTotalConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalTotalConnections.setStatus("current")
_RasTotalTotalErrors_Type = Gauge32
_RasTotalTotalErrors_Object = MibScalar
rasTotalTotalErrors = _RasTotalTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 17),
    _RasTotalTotalErrors_Type()
)
rasTotalTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalTotalErrors.setStatus("current")
_RasTotalTotalErrorsPerSec_Type = Gauge32
_RasTotalTotalErrorsPerSec_Object = MibScalar
rasTotalTotalErrorsPerSec = _RasTotalTotalErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 18),
    _RasTotalTotalErrorsPerSec_Type()
)
rasTotalTotalErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasTotalTotalErrorsPerSec.setStatus("current")
_RasPortTable_Object = MibTable
rasPortTable = _RasPortTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69)
)
if mibBuilder.loadTexts:
    rasPortTable.setStatus("current")
_RasPortEntry_Object = MibTableRow
rasPortEntry = _RasPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1)
)
rasPortEntry.setIndexNames(
    (0, "INFORMANT-ADV", "rasPortInstance"),
)
if mibBuilder.loadTexts:
    rasPortEntry.setStatus("current")
_RasPortInstance_Type = InstanceName
_RasPortInstance_Object = MibTableColumn
rasPortInstance = _RasPortInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 1),
    _RasPortInstance_Type()
)
rasPortInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortInstance.setStatus("current")
_RasPortAlignmentErrors_Type = Gauge32
_RasPortAlignmentErrors_Object = MibTableColumn
rasPortAlignmentErrors = _RasPortAlignmentErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 2),
    _RasPortAlignmentErrors_Type()
)
rasPortAlignmentErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortAlignmentErrors.setStatus("current")
_RasPortBufferOverrunErrors_Type = Gauge32
_RasPortBufferOverrunErrors_Object = MibTableColumn
rasPortBufferOverrunErrors = _RasPortBufferOverrunErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 3),
    _RasPortBufferOverrunErrors_Type()
)
rasPortBufferOverrunErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortBufferOverrunErrors.setStatus("current")
_RasPortBytesReceived_Type = Gauge32
_RasPortBytesReceived_Object = MibTableColumn
rasPortBytesReceived = _RasPortBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 4),
    _RasPortBytesReceived_Type()
)
rasPortBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortBytesReceived.setStatus("current")
_RasPortBytesReceivedPerSec_Type = Gauge32
_RasPortBytesReceivedPerSec_Object = MibTableColumn
rasPortBytesReceivedPerSec = _RasPortBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 5),
    _RasPortBytesReceivedPerSec_Type()
)
rasPortBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortBytesReceivedPerSec.setStatus("current")
_RasPortBytesTransmitted_Type = Gauge32
_RasPortBytesTransmitted_Object = MibTableColumn
rasPortBytesTransmitted = _RasPortBytesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 6),
    _RasPortBytesTransmitted_Type()
)
rasPortBytesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortBytesTransmitted.setStatus("current")
_RasPortBytesTransmittedPerSec_Type = Gauge32
_RasPortBytesTransmittedPerSec_Object = MibTableColumn
rasPortBytesTransmittedPerSec = _RasPortBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 7),
    _RasPortBytesTransmittedPerSec_Type()
)
rasPortBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortBytesTransmittedPerSec.setStatus("current")
_RasPortCRCErrors_Type = Gauge32
_RasPortCRCErrors_Object = MibTableColumn
rasPortCRCErrors = _RasPortCRCErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 8),
    _RasPortCRCErrors_Type()
)
rasPortCRCErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortCRCErrors.setStatus("current")
_RasPortFramesReceived_Type = Gauge32
_RasPortFramesReceived_Object = MibTableColumn
rasPortFramesReceived = _RasPortFramesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 9),
    _RasPortFramesReceived_Type()
)
rasPortFramesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortFramesReceived.setStatus("current")
_RasPortFramesReceivedPerSec_Type = Gauge32
_RasPortFramesReceivedPerSec_Object = MibTableColumn
rasPortFramesReceivedPerSec = _RasPortFramesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 10),
    _RasPortFramesReceivedPerSec_Type()
)
rasPortFramesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortFramesReceivedPerSec.setStatus("current")
_RasPortFramesTransmitted_Type = Gauge32
_RasPortFramesTransmitted_Object = MibTableColumn
rasPortFramesTransmitted = _RasPortFramesTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 11),
    _RasPortFramesTransmitted_Type()
)
rasPortFramesTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortFramesTransmitted.setStatus("current")
_RasPortFramesTransmittedPerSec_Type = Gauge32
_RasPortFramesTransmittedPerSec_Object = MibTableColumn
rasPortFramesTransmittedPerSec = _RasPortFramesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 12),
    _RasPortFramesTransmittedPerSec_Type()
)
rasPortFramesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortFramesTransmittedPerSec.setStatus("current")
_RasPortPercentCompressionIn_Type = Gauge32
_RasPortPercentCompressionIn_Object = MibTableColumn
rasPortPercentCompressionIn = _RasPortPercentCompressionIn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 13),
    _RasPortPercentCompressionIn_Type()
)
rasPortPercentCompressionIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortPercentCompressionIn.setStatus("current")
_RasPortPercentCompressionOut_Type = Gauge32
_RasPortPercentCompressionOut_Object = MibTableColumn
rasPortPercentCompressionOut = _RasPortPercentCompressionOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 14),
    _RasPortPercentCompressionOut_Type()
)
rasPortPercentCompressionOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortPercentCompressionOut.setStatus("current")
_RasPortSerialOverrunErrors_Type = Gauge32
_RasPortSerialOverrunErrors_Object = MibTableColumn
rasPortSerialOverrunErrors = _RasPortSerialOverrunErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 15),
    _RasPortSerialOverrunErrors_Type()
)
rasPortSerialOverrunErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortSerialOverrunErrors.setStatus("current")
_RasPortTimeoutErrors_Type = Gauge32
_RasPortTimeoutErrors_Object = MibTableColumn
rasPortTimeoutErrors = _RasPortTimeoutErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 16),
    _RasPortTimeoutErrors_Type()
)
rasPortTimeoutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortTimeoutErrors.setStatus("current")
_RasPortTotalErrors_Type = Gauge32
_RasPortTotalErrors_Object = MibTableColumn
rasPortTotalErrors = _RasPortTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 17),
    _RasPortTotalErrors_Type()
)
rasPortTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortTotalErrors.setStatus("current")
_RasPortTotalErrorsPerSec_Type = Gauge32
_RasPortTotalErrorsPerSec_Object = MibTableColumn
rasPortTotalErrorsPerSec = _RasPortTotalErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 18),
    _RasPortTotalErrorsPerSec_Type()
)
rasPortTotalErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rasPortTotalErrorsPerSec.setStatus("current")
_Redirector_ObjectIdentity = ObjectIdentity
redirector = _Redirector_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70)
)
if mibBuilder.loadTexts:
    redirector.setStatus("current")
_RedirBytesReceivedPerSec_Type = Gauge32
_RedirBytesReceivedPerSec_Object = MibScalar
redirBytesReceivedPerSec = _RedirBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 1),
    _RedirBytesReceivedPerSec_Type()
)
redirBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirBytesReceivedPerSec.setStatus("current")
_RedirBytesTotalPerSec_Type = Gauge32
_RedirBytesTotalPerSec_Object = MibScalar
redirBytesTotalPerSec = _RedirBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 2),
    _RedirBytesTotalPerSec_Type()
)
redirBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirBytesTotalPerSec.setStatus("current")
_RedirBytesTransmittedPerSec_Type = Gauge32
_RedirBytesTransmittedPerSec_Object = MibScalar
redirBytesTransmittedPerSec = _RedirBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 3),
    _RedirBytesTransmittedPerSec_Type()
)
redirBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirBytesTransmittedPerSec.setStatus("current")
_RedirConnectsCore_Type = Gauge32
_RedirConnectsCore_Object = MibScalar
redirConnectsCore = _RedirConnectsCore_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 4),
    _RedirConnectsCore_Type()
)
redirConnectsCore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirConnectsCore.setStatus("current")
_RedirConnectsLanManager20_Type = Gauge32
_RedirConnectsLanManager20_Object = MibScalar
redirConnectsLanManager20 = _RedirConnectsLanManager20_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 5),
    _RedirConnectsLanManager20_Type()
)
redirConnectsLanManager20.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirConnectsLanManager20.setStatus("current")
_RedirConnectsLanManager21_Type = Gauge32
_RedirConnectsLanManager21_Object = MibScalar
redirConnectsLanManager21 = _RedirConnectsLanManager21_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 6),
    _RedirConnectsLanManager21_Type()
)
redirConnectsLanManager21.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirConnectsLanManager21.setStatus("current")
_RedirConnectsWindowsNT_Type = Gauge32
_RedirConnectsWindowsNT_Object = MibScalar
redirConnectsWindowsNT = _RedirConnectsWindowsNT_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 7),
    _RedirConnectsWindowsNT_Type()
)
redirConnectsWindowsNT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirConnectsWindowsNT.setStatus("current")
_RedirCurrentCommands_Type = Gauge32
_RedirCurrentCommands_Object = MibScalar
redirCurrentCommands = _RedirCurrentCommands_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 8),
    _RedirCurrentCommands_Type()
)
redirCurrentCommands.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirCurrentCommands.setStatus("current")
_RedirFileDataOperationsPerSec_Type = Gauge32
_RedirFileDataOperationsPerSec_Object = MibScalar
redirFileDataOperationsPerSec = _RedirFileDataOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 9),
    _RedirFileDataOperationsPerSec_Type()
)
redirFileDataOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirFileDataOperationsPerSec.setStatus("current")
_RedirFileReadOperationsPerSec_Type = Gauge32
_RedirFileReadOperationsPerSec_Object = MibScalar
redirFileReadOperationsPerSec = _RedirFileReadOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 10),
    _RedirFileReadOperationsPerSec_Type()
)
redirFileReadOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirFileReadOperationsPerSec.setStatus("current")
_RedirFileWriteOperationsPerSec_Type = Gauge32
_RedirFileWriteOperationsPerSec_Object = MibScalar
redirFileWriteOperationsPerSec = _RedirFileWriteOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 11),
    _RedirFileWriteOperationsPerSec_Type()
)
redirFileWriteOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirFileWriteOperationsPerSec.setStatus("current")
_RedirNetworkErrorsPerSec_Type = Gauge32
_RedirNetworkErrorsPerSec_Object = MibScalar
redirNetworkErrorsPerSec = _RedirNetworkErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 12),
    _RedirNetworkErrorsPerSec_Type()
)
redirNetworkErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirNetworkErrorsPerSec.setStatus("current")
_RedirPacketsReceivedPerSec_Type = Gauge32
_RedirPacketsReceivedPerSec_Object = MibScalar
redirPacketsReceivedPerSec = _RedirPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 13),
    _RedirPacketsReceivedPerSec_Type()
)
redirPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirPacketsReceivedPerSec.setStatus("current")
_RedirPacketsTransmittedPerSec_Type = Gauge32
_RedirPacketsTransmittedPerSec_Object = MibScalar
redirPacketsTransmittedPerSec = _RedirPacketsTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 14),
    _RedirPacketsTransmittedPerSec_Type()
)
redirPacketsTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirPacketsTransmittedPerSec.setStatus("current")
_RedirPacketsPerSec_Type = Gauge32
_RedirPacketsPerSec_Object = MibScalar
redirPacketsPerSec = _RedirPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 15),
    _RedirPacketsPerSec_Type()
)
redirPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirPacketsPerSec.setStatus("current")
_RedirReadBytesCachePerSec_Type = Gauge32
_RedirReadBytesCachePerSec_Object = MibScalar
redirReadBytesCachePerSec = _RedirReadBytesCachePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 16),
    _RedirReadBytesCachePerSec_Type()
)
redirReadBytesCachePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadBytesCachePerSec.setStatus("current")
_RedirReadBytesNetworkPerSec_Type = Gauge32
_RedirReadBytesNetworkPerSec_Object = MibScalar
redirReadBytesNetworkPerSec = _RedirReadBytesNetworkPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 17),
    _RedirReadBytesNetworkPerSec_Type()
)
redirReadBytesNetworkPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadBytesNetworkPerSec.setStatus("current")
_RedirReadBytesNonPagingPerSec_Type = Gauge32
_RedirReadBytesNonPagingPerSec_Object = MibScalar
redirReadBytesNonPagingPerSec = _RedirReadBytesNonPagingPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 18),
    _RedirReadBytesNonPagingPerSec_Type()
)
redirReadBytesNonPagingPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadBytesNonPagingPerSec.setStatus("current")
_RedirReadBytesPagingPerSec_Type = Gauge32
_RedirReadBytesPagingPerSec_Object = MibScalar
redirReadBytesPagingPerSec = _RedirReadBytesPagingPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 19),
    _RedirReadBytesPagingPerSec_Type()
)
redirReadBytesPagingPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadBytesPagingPerSec.setStatus("current")
_RedirReadOperationsRandomPerSec_Type = Gauge32
_RedirReadOperationsRandomPerSec_Object = MibScalar
redirReadOperationsRandomPerSec = _RedirReadOperationsRandomPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 20),
    _RedirReadOperationsRandomPerSec_Type()
)
redirReadOperationsRandomPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadOperationsRandomPerSec.setStatus("current")
_RedirReadPacketsSmallPerSec_Type = Gauge32
_RedirReadPacketsSmallPerSec_Object = MibScalar
redirReadPacketsSmallPerSec = _RedirReadPacketsSmallPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 21),
    _RedirReadPacketsSmallPerSec_Type()
)
redirReadPacketsSmallPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadPacketsSmallPerSec.setStatus("current")
_RedirReadPacketsPerSec_Type = Gauge32
_RedirReadPacketsPerSec_Object = MibScalar
redirReadPacketsPerSec = _RedirReadPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 22),
    _RedirReadPacketsPerSec_Type()
)
redirReadPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadPacketsPerSec.setStatus("current")
_RedirReadsDeniedPerSec_Type = Gauge32
_RedirReadsDeniedPerSec_Object = MibScalar
redirReadsDeniedPerSec = _RedirReadsDeniedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 23),
    _RedirReadsDeniedPerSec_Type()
)
redirReadsDeniedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadsDeniedPerSec.setStatus("current")
_RedirReadsLargePerSec_Type = Gauge32
_RedirReadsLargePerSec_Object = MibScalar
redirReadsLargePerSec = _RedirReadsLargePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 24),
    _RedirReadsLargePerSec_Type()
)
redirReadsLargePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirReadsLargePerSec.setStatus("current")
_RedirServerDisconnects_Type = Gauge32
_RedirServerDisconnects_Object = MibScalar
redirServerDisconnects = _RedirServerDisconnects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 25),
    _RedirServerDisconnects_Type()
)
redirServerDisconnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirServerDisconnects.setStatus("current")
_RedirServerReconnects_Type = Gauge32
_RedirServerReconnects_Object = MibScalar
redirServerReconnects = _RedirServerReconnects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 26),
    _RedirServerReconnects_Type()
)
redirServerReconnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirServerReconnects.setStatus("current")
_RedirServerSessions_Type = Gauge32
_RedirServerSessions_Object = MibScalar
redirServerSessions = _RedirServerSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 27),
    _RedirServerSessions_Type()
)
redirServerSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirServerSessions.setStatus("current")
_RedirServerSessionsHung_Type = Gauge32
_RedirServerSessionsHung_Object = MibScalar
redirServerSessionsHung = _RedirServerSessionsHung_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 28),
    _RedirServerSessionsHung_Type()
)
redirServerSessionsHung.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirServerSessionsHung.setStatus("current")
_RedirWriteBytesCachePerSec_Type = Gauge32
_RedirWriteBytesCachePerSec_Object = MibScalar
redirWriteBytesCachePerSec = _RedirWriteBytesCachePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 29),
    _RedirWriteBytesCachePerSec_Type()
)
redirWriteBytesCachePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWriteBytesCachePerSec.setStatus("current")
_RedirWriteBytesNetworkPerSec_Type = Gauge32
_RedirWriteBytesNetworkPerSec_Object = MibScalar
redirWriteBytesNetworkPerSec = _RedirWriteBytesNetworkPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 30),
    _RedirWriteBytesNetworkPerSec_Type()
)
redirWriteBytesNetworkPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWriteBytesNetworkPerSec.setStatus("current")
_RedirWriteBytesNonPagingPerSec_Type = Gauge32
_RedirWriteBytesNonPagingPerSec_Object = MibScalar
redirWriteBytesNonPagingPerSec = _RedirWriteBytesNonPagingPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 31),
    _RedirWriteBytesNonPagingPerSec_Type()
)
redirWriteBytesNonPagingPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWriteBytesNonPagingPerSec.setStatus("current")
_RedirWriteBytesPagingPerSec_Type = Gauge32
_RedirWriteBytesPagingPerSec_Object = MibScalar
redirWriteBytesPagingPerSec = _RedirWriteBytesPagingPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 32),
    _RedirWriteBytesPagingPerSec_Type()
)
redirWriteBytesPagingPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWriteBytesPagingPerSec.setStatus("current")
_RedirWriteOperationsRandomPerSec_Type = Gauge32
_RedirWriteOperationsRandomPerSec_Object = MibScalar
redirWriteOperationsRandomPerSec = _RedirWriteOperationsRandomPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 33),
    _RedirWriteOperationsRandomPerSec_Type()
)
redirWriteOperationsRandomPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWriteOperationsRandomPerSec.setStatus("current")
_RedirWritePacketsSmallPerSec_Type = Gauge32
_RedirWritePacketsSmallPerSec_Object = MibScalar
redirWritePacketsSmallPerSec = _RedirWritePacketsSmallPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 34),
    _RedirWritePacketsSmallPerSec_Type()
)
redirWritePacketsSmallPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWritePacketsSmallPerSec.setStatus("current")
_RedirWritePacketsPerSec_Type = Gauge32
_RedirWritePacketsPerSec_Object = MibScalar
redirWritePacketsPerSec = _RedirWritePacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 35),
    _RedirWritePacketsPerSec_Type()
)
redirWritePacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWritePacketsPerSec.setStatus("current")
_RedirWritesDeniedPerSec_Type = Gauge32
_RedirWritesDeniedPerSec_Object = MibScalar
redirWritesDeniedPerSec = _RedirWritesDeniedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 36),
    _RedirWritesDeniedPerSec_Type()
)
redirWritesDeniedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWritesDeniedPerSec.setStatus("current")
_RedirWritesLargePerSec_Type = Gauge32
_RedirWritesLargePerSec_Object = MibScalar
redirWritesLargePerSec = _RedirWritesLargePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 37),
    _RedirWritesLargePerSec_Type()
)
redirWritesLargePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    redirWritesLargePerSec.setStatus("current")
_RsvpInterfacesTable_Object = MibTable
rsvpInterfacesTable = _RsvpInterfacesTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71)
)
if mibBuilder.loadTexts:
    rsvpInterfacesTable.setStatus("current")
_RsvpInterfacesEntry_Object = MibTableRow
rsvpInterfacesEntry = _RsvpInterfacesEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1)
)
rsvpInterfacesEntry.setIndexNames(
    (0, "INFORMANT-ADV", "rsvpIfInstance"),
)
if mibBuilder.loadTexts:
    rsvpInterfacesEntry.setStatus("current")
_RsvpIfInstance_Type = InstanceName
_RsvpIfInstance_Object = MibTableColumn
rsvpIfInstance = _RsvpIfInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 1),
    _RsvpIfInstance_Type()
)
rsvpIfInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfInstance.setStatus("current")
_RsvpIfBlockedRESVs_Type = Gauge32
_RsvpIfBlockedRESVs_Object = MibTableColumn
rsvpIfBlockedRESVs = _RsvpIfBlockedRESVs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 2),
    _RsvpIfBlockedRESVs_Type()
)
rsvpIfBlockedRESVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfBlockedRESVs.setStatus("current")
_RsvpIfGeneralFailures_Type = Gauge32
_RsvpIfGeneralFailures_Object = MibTableColumn
rsvpIfGeneralFailures = _RsvpIfGeneralFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 3),
    _RsvpIfGeneralFailures_Type()
)
rsvpIfGeneralFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfGeneralFailures.setStatus("current")
_RsvpIfMaximumAdmittedBandwidth_Type = Gauge32
_RsvpIfMaximumAdmittedBandwidth_Object = MibTableColumn
rsvpIfMaximumAdmittedBandwidth = _RsvpIfMaximumAdmittedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 4),
    _RsvpIfMaximumAdmittedBandwidth_Type()
)
rsvpIfMaximumAdmittedBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfMaximumAdmittedBandwidth.setStatus("current")
_RsvpIfNumOfActiveFlows_Type = Gauge32
_RsvpIfNumOfActiveFlows_Object = MibTableColumn
rsvpIfNumOfActiveFlows = _RsvpIfNumOfActiveFlows_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 5),
    _RsvpIfNumOfActiveFlows_Type()
)
rsvpIfNumOfActiveFlows.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfNumOfActiveFlows.setStatus("current")
_RsvpIfNumOfIncomingMsgsDropped_Type = Gauge32
_RsvpIfNumOfIncomingMsgsDropped_Object = MibTableColumn
rsvpIfNumOfIncomingMsgsDropped = _RsvpIfNumOfIncomingMsgsDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 6),
    _RsvpIfNumOfIncomingMsgsDropped_Type()
)
rsvpIfNumOfIncomingMsgsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfNumOfIncomingMsgsDropped.setStatus("current")
_RsvpIfNumOfOutgoingMsgsDropped_Type = Gauge32
_RsvpIfNumOfOutgoingMsgsDropped_Object = MibTableColumn
rsvpIfNumOfOutgoingMsgsDropped = _RsvpIfNumOfOutgoingMsgsDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 7),
    _RsvpIfNumOfOutgoingMsgsDropped_Type()
)
rsvpIfNumOfOutgoingMsgsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfNumOfOutgoingMsgsDropped.setStatus("current")
_RsvpIfPATHERRMsgsReceived_Type = Gauge32
_RsvpIfPATHERRMsgsReceived_Object = MibTableColumn
rsvpIfPATHERRMsgsReceived = _RsvpIfPATHERRMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 8),
    _RsvpIfPATHERRMsgsReceived_Type()
)
rsvpIfPATHERRMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHERRMsgsReceived.setStatus("current")
_RsvpIfPATHERRMsgsSent_Type = Gauge32
_RsvpIfPATHERRMsgsSent_Object = MibTableColumn
rsvpIfPATHERRMsgsSent = _RsvpIfPATHERRMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 9),
    _RsvpIfPATHERRMsgsSent_Type()
)
rsvpIfPATHERRMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHERRMsgsSent.setStatus("current")
_RsvpIfPATHTEARMsgsReceived_Type = Gauge32
_RsvpIfPATHTEARMsgsReceived_Object = MibTableColumn
rsvpIfPATHTEARMsgsReceived = _RsvpIfPATHTEARMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 10),
    _RsvpIfPATHTEARMsgsReceived_Type()
)
rsvpIfPATHTEARMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHTEARMsgsReceived.setStatus("current")
_RsvpIfPATHTEARMsgsSent_Type = Gauge32
_RsvpIfPATHTEARMsgsSent_Object = MibTableColumn
rsvpIfPATHTEARMsgsSent = _RsvpIfPATHTEARMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 11),
    _RsvpIfPATHTEARMsgsSent_Type()
)
rsvpIfPATHTEARMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHTEARMsgsSent.setStatus("current")
_RsvpIfPATHMsgsReceived_Type = Gauge32
_RsvpIfPATHMsgsReceived_Object = MibTableColumn
rsvpIfPATHMsgsReceived = _RsvpIfPATHMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 12),
    _RsvpIfPATHMsgsReceived_Type()
)
rsvpIfPATHMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHMsgsReceived.setStatus("current")
_RsvpIfPATHMsgsSent_Type = Gauge32
_RsvpIfPATHMsgsSent_Object = MibTableColumn
rsvpIfPATHMsgsSent = _RsvpIfPATHMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 13),
    _RsvpIfPATHMsgsSent_Type()
)
rsvpIfPATHMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHMsgsSent.setStatus("current")
_RsvpIfPATHStateBlockTimeouts_Type = Gauge32
_RsvpIfPATHStateBlockTimeouts_Object = MibTableColumn
rsvpIfPATHStateBlockTimeouts = _RsvpIfPATHStateBlockTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 14),
    _RsvpIfPATHStateBlockTimeouts_Type()
)
rsvpIfPATHStateBlockTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPATHStateBlockTimeouts.setStatus("current")
_RsvpIfPolicyControlFailures_Type = Gauge32
_RsvpIfPolicyControlFailures_Object = MibTableColumn
rsvpIfPolicyControlFailures = _RsvpIfPolicyControlFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 15),
    _RsvpIfPolicyControlFailures_Type()
)
rsvpIfPolicyControlFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfPolicyControlFailures.setStatus("current")
_RsvpIfRESVCONFIRMMsgsReceived_Type = Gauge32
_RsvpIfRESVCONFIRMMsgsReceived_Object = MibTableColumn
rsvpIfRESVCONFIRMMsgsReceived = _RsvpIfRESVCONFIRMMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 16),
    _RsvpIfRESVCONFIRMMsgsReceived_Type()
)
rsvpIfRESVCONFIRMMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVCONFIRMMsgsReceived.setStatus("current")
_RsvpIfRESVCONFIRMMsgsSent_Type = Gauge32
_RsvpIfRESVCONFIRMMsgsSent_Object = MibTableColumn
rsvpIfRESVCONFIRMMsgsSent = _RsvpIfRESVCONFIRMMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 17),
    _RsvpIfRESVCONFIRMMsgsSent_Type()
)
rsvpIfRESVCONFIRMMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVCONFIRMMsgsSent.setStatus("current")
_RsvpIfRESVERRMsgsReceived_Type = Gauge32
_RsvpIfRESVERRMsgsReceived_Object = MibTableColumn
rsvpIfRESVERRMsgsReceived = _RsvpIfRESVERRMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 18),
    _RsvpIfRESVERRMsgsReceived_Type()
)
rsvpIfRESVERRMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVERRMsgsReceived.setStatus("current")
_RsvpIfRESVERRMsgsSent_Type = Gauge32
_RsvpIfRESVERRMsgsSent_Object = MibTableColumn
rsvpIfRESVERRMsgsSent = _RsvpIfRESVERRMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 19),
    _RsvpIfRESVERRMsgsSent_Type()
)
rsvpIfRESVERRMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVERRMsgsSent.setStatus("current")
_RsvpIfRESVTEARMsgsReceived_Type = Gauge32
_RsvpIfRESVTEARMsgsReceived_Object = MibTableColumn
rsvpIfRESVTEARMsgsReceived = _RsvpIfRESVTEARMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 20),
    _RsvpIfRESVTEARMsgsReceived_Type()
)
rsvpIfRESVTEARMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVTEARMsgsReceived.setStatus("current")
_RsvpIfRESVTEARMsgsSent_Type = Gauge32
_RsvpIfRESVTEARMsgsSent_Object = MibTableColumn
rsvpIfRESVTEARMsgsSent = _RsvpIfRESVTEARMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 21),
    _RsvpIfRESVTEARMsgsSent_Type()
)
rsvpIfRESVTEARMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVTEARMsgsSent.setStatus("current")
_RsvpIfRESVMsgsReceived_Type = Gauge32
_RsvpIfRESVMsgsReceived_Object = MibTableColumn
rsvpIfRESVMsgsReceived = _RsvpIfRESVMsgsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 22),
    _RsvpIfRESVMsgsReceived_Type()
)
rsvpIfRESVMsgsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVMsgsReceived.setStatus("current")
_RsvpIfRESVMsgsSent_Type = Gauge32
_RsvpIfRESVMsgsSent_Object = MibTableColumn
rsvpIfRESVMsgsSent = _RsvpIfRESVMsgsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 23),
    _RsvpIfRESVMsgsSent_Type()
)
rsvpIfRESVMsgsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVMsgsSent.setStatus("current")
_RsvpIfRESVStateBlockTimeouts_Type = Gauge32
_RsvpIfRESVStateBlockTimeouts_Object = MibTableColumn
rsvpIfRESVStateBlockTimeouts = _RsvpIfRESVStateBlockTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 24),
    _RsvpIfRESVStateBlockTimeouts_Type()
)
rsvpIfRESVStateBlockTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfRESVStateBlockTimeouts.setStatus("current")
_RsvpIfReceiveMsgsErrorsBigMsgs_Type = Gauge32
_RsvpIfReceiveMsgsErrorsBigMsgs_Object = MibTableColumn
rsvpIfReceiveMsgsErrorsBigMsgs = _RsvpIfReceiveMsgsErrorsBigMsgs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 25),
    _RsvpIfReceiveMsgsErrorsBigMsgs_Type()
)
rsvpIfReceiveMsgsErrorsBigMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfReceiveMsgsErrorsBigMsgs.setStatus("current")
_RsvpIfReceiveMsgsErrorsNoMemory_Type = Gauge32
_RsvpIfReceiveMsgsErrorsNoMemory_Object = MibTableColumn
rsvpIfReceiveMsgsErrorsNoMemory = _RsvpIfReceiveMsgsErrorsNoMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 26),
    _RsvpIfReceiveMsgsErrorsNoMemory_Type()
)
rsvpIfReceiveMsgsErrorsNoMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfReceiveMsgsErrorsNoMemory.setStatus("current")
_RsvpIfReservedBandwidth_Type = Gauge32
_RsvpIfReservedBandwidth_Object = MibTableColumn
rsvpIfReservedBandwidth = _RsvpIfReservedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 27),
    _RsvpIfReservedBandwidth_Type()
)
rsvpIfReservedBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfReservedBandwidth.setStatus("current")
_RsvpIfResourceControlFailures_Type = Gauge32
_RsvpIfResourceControlFailures_Object = MibTableColumn
rsvpIfResourceControlFailures = _RsvpIfResourceControlFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 28),
    _RsvpIfResourceControlFailures_Type()
)
rsvpIfResourceControlFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfResourceControlFailures.setStatus("current")
_RsvpIfSendMsgsErrorsBigMsgs_Type = Gauge32
_RsvpIfSendMsgsErrorsBigMsgs_Object = MibTableColumn
rsvpIfSendMsgsErrorsBigMsgs = _RsvpIfSendMsgsErrorsBigMsgs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 29),
    _RsvpIfSendMsgsErrorsBigMsgs_Type()
)
rsvpIfSendMsgsErrorsBigMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfSendMsgsErrorsBigMsgs.setStatus("current")
_RsvpIfSendMsgsErrorsNoMemory_Type = Gauge32
_RsvpIfSendMsgsErrorsNoMemory_Object = MibTableColumn
rsvpIfSendMsgsErrorsNoMemory = _RsvpIfSendMsgsErrorsNoMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 30),
    _RsvpIfSendMsgsErrorsNoMemory_Type()
)
rsvpIfSendMsgsErrorsNoMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfSendMsgsErrorsNoMemory.setStatus("current")
_RsvpIfSignalingBytesReceived_Type = Gauge32
_RsvpIfSignalingBytesReceived_Object = MibTableColumn
rsvpIfSignalingBytesReceived = _RsvpIfSignalingBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 31),
    _RsvpIfSignalingBytesReceived_Type()
)
rsvpIfSignalingBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfSignalingBytesReceived.setStatus("current")
_RsvpIfSignalingBytesSent_Type = Gauge32
_RsvpIfSignalingBytesSent_Object = MibTableColumn
rsvpIfSignalingBytesSent = _RsvpIfSignalingBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 32),
    _RsvpIfSignalingBytesSent_Type()
)
rsvpIfSignalingBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpIfSignalingBytesSent.setStatus("current")
_RsvpServiceTable_Object = MibTable
rsvpServiceTable = _RsvpServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72)
)
if mibBuilder.loadTexts:
    rsvpServiceTable.setStatus("current")
_RsvpServiceEntry_Object = MibTableRow
rsvpServiceEntry = _RsvpServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1)
)
rsvpServiceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "rsvpSvcInstance"),
)
if mibBuilder.loadTexts:
    rsvpServiceEntry.setStatus("current")
_RsvpSvcInstance_Type = InstanceName
_RsvpSvcInstance_Object = MibTableColumn
rsvpSvcInstance = _RsvpSvcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 1),
    _RsvpSvcInstance_Type()
)
rsvpSvcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcInstance.setStatus("current")
_RsvpSvcBytesInQoSNotifications_Type = Gauge32
_RsvpSvcBytesInQoSNotifications_Object = MibTableColumn
rsvpSvcBytesInQoSNotifications = _RsvpSvcBytesInQoSNotifications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 2),
    _RsvpSvcBytesInQoSNotifications_Type()
)
rsvpSvcBytesInQoSNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcBytesInQoSNotifications.setStatus("current")
_RsvpSvcFailedQoSRequests_Type = Gauge32
_RsvpSvcFailedQoSRequests_Object = MibTableColumn
rsvpSvcFailedQoSRequests = _RsvpSvcFailedQoSRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 3),
    _RsvpSvcFailedQoSRequests_Type()
)
rsvpSvcFailedQoSRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcFailedQoSRequests.setStatus("current")
_RsvpSvcFailedQoSSends_Type = Gauge32
_RsvpSvcFailedQoSSends_Object = MibTableColumn
rsvpSvcFailedQoSSends = _RsvpSvcFailedQoSSends_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 4),
    _RsvpSvcFailedQoSSends_Type()
)
rsvpSvcFailedQoSSends.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcFailedQoSSends.setStatus("current")
_RsvpSvcNetworkInterfaces_Type = Gauge32
_RsvpSvcNetworkInterfaces_Object = MibTableColumn
rsvpSvcNetworkInterfaces = _RsvpSvcNetworkInterfaces_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 5),
    _RsvpSvcNetworkInterfaces_Type()
)
rsvpSvcNetworkInterfaces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcNetworkInterfaces.setStatus("current")
_RsvpSvcNetworkSockets_Type = Gauge32
_RsvpSvcNetworkSockets_Object = MibTableColumn
rsvpSvcNetworkSockets = _RsvpSvcNetworkSockets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 6),
    _RsvpSvcNetworkSockets_Type()
)
rsvpSvcNetworkSockets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcNetworkSockets.setStatus("current")
_RsvpSvcQoSClients_Type = Gauge32
_RsvpSvcQoSClients_Object = MibTableColumn
rsvpSvcQoSClients = _RsvpSvcQoSClients_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 7),
    _RsvpSvcQoSClients_Type()
)
rsvpSvcQoSClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcQoSClients.setStatus("current")
_RsvpSvcQoSNotifications_Type = Gauge32
_RsvpSvcQoSNotifications_Object = MibTableColumn
rsvpSvcQoSNotifications = _RsvpSvcQoSNotifications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 8),
    _RsvpSvcQoSNotifications_Type()
)
rsvpSvcQoSNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcQoSNotifications.setStatus("current")
_RsvpSvcQoSenabledReceivers_Type = Gauge32
_RsvpSvcQoSenabledReceivers_Object = MibTableColumn
rsvpSvcQoSenabledReceivers = _RsvpSvcQoSenabledReceivers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 9),
    _RsvpSvcQoSenabledReceivers_Type()
)
rsvpSvcQoSenabledReceivers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcQoSenabledReceivers.setStatus("current")
_RsvpSvcQoSenabledSenders_Type = Gauge32
_RsvpSvcQoSenabledSenders_Object = MibTableColumn
rsvpSvcQoSenabledSenders = _RsvpSvcQoSenabledSenders_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 10),
    _RsvpSvcQoSenabledSenders_Type()
)
rsvpSvcQoSenabledSenders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcQoSenabledSenders.setStatus("current")
_RsvpSvcRSVPSessions_Type = Gauge32
_RsvpSvcRSVPSessions_Object = MibTableColumn
rsvpSvcRSVPSessions = _RsvpSvcRSVPSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 11),
    _RsvpSvcRSVPSessions_Type()
)
rsvpSvcRSVPSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcRSVPSessions.setStatus("current")
_RsvpSvcTimers_Type = Gauge32
_RsvpSvcTimers_Object = MibTableColumn
rsvpSvcTimers = _RsvpSvcTimers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 12),
    _RsvpSvcTimers_Type()
)
rsvpSvcTimers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rsvpSvcTimers.setStatus("current")
_Server_ObjectIdentity = ObjectIdentity
server = _Server_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73)
)
if mibBuilder.loadTexts:
    server.setStatus("current")
_ServerBlockingRequestsRejected_Type = Gauge32
_ServerBlockingRequestsRejected_Object = MibScalar
serverBlockingRequestsRejected = _ServerBlockingRequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 1),
    _ServerBlockingRequestsRejected_Type()
)
serverBlockingRequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverBlockingRequestsRejected.setStatus("current")
_ServerBytesReceivedPerSec_Type = Gauge32
_ServerBytesReceivedPerSec_Object = MibScalar
serverBytesReceivedPerSec = _ServerBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 2),
    _ServerBytesReceivedPerSec_Type()
)
serverBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverBytesReceivedPerSec.setStatus("current")
_ServerBytesTotalPerSec_Type = Gauge32
_ServerBytesTotalPerSec_Object = MibScalar
serverBytesTotalPerSec = _ServerBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 3),
    _ServerBytesTotalPerSec_Type()
)
serverBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverBytesTotalPerSec.setStatus("current")
_ServerBytesTransmittedPerSec_Type = Gauge32
_ServerBytesTransmittedPerSec_Object = MibScalar
serverBytesTransmittedPerSec = _ServerBytesTransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 4),
    _ServerBytesTransmittedPerSec_Type()
)
serverBytesTransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverBytesTransmittedPerSec.setStatus("current")
_ServerContextBlocksQueuedPerSec_Type = Gauge32
_ServerContextBlocksQueuedPerSec_Object = MibScalar
serverContextBlocksQueuedPerSec = _ServerContextBlocksQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 5),
    _ServerContextBlocksQueuedPerSec_Type()
)
serverContextBlocksQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverContextBlocksQueuedPerSec.setStatus("current")
_ServerErrorsAccessPermissions_Type = Gauge32
_ServerErrorsAccessPermissions_Object = MibScalar
serverErrorsAccessPermissions = _ServerErrorsAccessPermissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 6),
    _ServerErrorsAccessPermissions_Type()
)
serverErrorsAccessPermissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverErrorsAccessPermissions.setStatus("current")
_ServerErrorsGrantedAccess_Type = Gauge32
_ServerErrorsGrantedAccess_Object = MibScalar
serverErrorsGrantedAccess = _ServerErrorsGrantedAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 7),
    _ServerErrorsGrantedAccess_Type()
)
serverErrorsGrantedAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverErrorsGrantedAccess.setStatus("current")
_ServerErrorsLogon_Type = Gauge32
_ServerErrorsLogon_Object = MibScalar
serverErrorsLogon = _ServerErrorsLogon_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 8),
    _ServerErrorsLogon_Type()
)
serverErrorsLogon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverErrorsLogon.setStatus("current")
_ServerErrorsSystem_Type = Gauge32
_ServerErrorsSystem_Object = MibScalar
serverErrorsSystem = _ServerErrorsSystem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 9),
    _ServerErrorsSystem_Type()
)
serverErrorsSystem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverErrorsSystem.setStatus("current")
_ServerFileDirectorySearches_Type = Gauge32
_ServerFileDirectorySearches_Object = MibScalar
serverFileDirectorySearches = _ServerFileDirectorySearches_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 10),
    _ServerFileDirectorySearches_Type()
)
serverFileDirectorySearches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFileDirectorySearches.setStatus("current")
_ServerFilesOpen_Type = Gauge32
_ServerFilesOpen_Object = MibScalar
serverFilesOpen = _ServerFilesOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 11),
    _ServerFilesOpen_Type()
)
serverFilesOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFilesOpen.setStatus("current")
_ServerFilesOpenedTotal_Type = Gauge32
_ServerFilesOpenedTotal_Object = MibScalar
serverFilesOpenedTotal = _ServerFilesOpenedTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 12),
    _ServerFilesOpenedTotal_Type()
)
serverFilesOpenedTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFilesOpenedTotal.setStatus("current")
_ServerLogonTotal_Type = Gauge32
_ServerLogonTotal_Object = MibScalar
serverLogonTotal = _ServerLogonTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 13),
    _ServerLogonTotal_Type()
)
serverLogonTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLogonTotal.setStatus("current")
_ServerLogonPerSec_Type = Gauge32
_ServerLogonPerSec_Object = MibScalar
serverLogonPerSec = _ServerLogonPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 14),
    _ServerLogonPerSec_Type()
)
serverLogonPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLogonPerSec.setStatus("current")
_ServerPoolNonpagedBytes_Type = Gauge32
_ServerPoolNonpagedBytes_Object = MibScalar
serverPoolNonpagedBytes = _ServerPoolNonpagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 15),
    _ServerPoolNonpagedBytes_Type()
)
serverPoolNonpagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedBytes.setStatus("current")
_ServerPoolNonpagedFailures_Type = Gauge32
_ServerPoolNonpagedFailures_Object = MibScalar
serverPoolNonpagedFailures = _ServerPoolNonpagedFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 16),
    _ServerPoolNonpagedFailures_Type()
)
serverPoolNonpagedFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedFailures.setStatus("current")
_ServerPoolNonpagedPeak_Type = Gauge32
_ServerPoolNonpagedPeak_Object = MibScalar
serverPoolNonpagedPeak = _ServerPoolNonpagedPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 17),
    _ServerPoolNonpagedPeak_Type()
)
serverPoolNonpagedPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedPeak.setStatus("current")
_ServerPoolPagedBytes_Type = Gauge32
_ServerPoolPagedBytes_Object = MibScalar
serverPoolPagedBytes = _ServerPoolPagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 18),
    _ServerPoolPagedBytes_Type()
)
serverPoolPagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedBytes.setStatus("current")
_ServerPoolPagedFailures_Type = Gauge32
_ServerPoolPagedFailures_Object = MibScalar
serverPoolPagedFailures = _ServerPoolPagedFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 19),
    _ServerPoolPagedFailures_Type()
)
serverPoolPagedFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedFailures.setStatus("current")
_ServerPoolPagedPeak_Type = Gauge32
_ServerPoolPagedPeak_Object = MibScalar
serverPoolPagedPeak = _ServerPoolPagedPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 20),
    _ServerPoolPagedPeak_Type()
)
serverPoolPagedPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedPeak.setStatus("current")
_ServerServerSessions_Type = Gauge32
_ServerServerSessions_Object = MibScalar
serverServerSessions = _ServerServerSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 21),
    _ServerServerSessions_Type()
)
serverServerSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverServerSessions.setStatus("current")
_ServerSessionsErroredOut_Type = Gauge32
_ServerSessionsErroredOut_Object = MibScalar
serverSessionsErroredOut = _ServerSessionsErroredOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 22),
    _ServerSessionsErroredOut_Type()
)
serverSessionsErroredOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSessionsErroredOut.setStatus("current")
_ServerSessionsForcedOff_Type = Gauge32
_ServerSessionsForcedOff_Object = MibScalar
serverSessionsForcedOff = _ServerSessionsForcedOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 23),
    _ServerSessionsForcedOff_Type()
)
serverSessionsForcedOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSessionsForcedOff.setStatus("current")
_ServerSessionsLoggedOff_Type = Gauge32
_ServerSessionsLoggedOff_Object = MibScalar
serverSessionsLoggedOff = _ServerSessionsLoggedOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 24),
    _ServerSessionsLoggedOff_Type()
)
serverSessionsLoggedOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSessionsLoggedOff.setStatus("current")
_ServerSessionsTimedOut_Type = Gauge32
_ServerSessionsTimedOut_Object = MibScalar
serverSessionsTimedOut = _ServerSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 25),
    _ServerSessionsTimedOut_Type()
)
serverSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSessionsTimedOut.setStatus("current")
_ServerWorkItemShortages_Type = Gauge32
_ServerWorkItemShortages_Object = MibScalar
serverWorkItemShortages = _ServerWorkItemShortages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 26),
    _ServerWorkItemShortages_Type()
)
serverWorkItemShortages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverWorkItemShortages.setStatus("current")
_ServerPoolNonpagedKBytes_Type = Gauge32
_ServerPoolNonpagedKBytes_Object = MibScalar
serverPoolNonpagedKBytes = _ServerPoolNonpagedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 27),
    _ServerPoolNonpagedKBytes_Type()
)
serverPoolNonpagedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedKBytes.setStatus("current")
_ServerPoolNonpagedKBytesPeak_Type = Gauge32
_ServerPoolNonpagedKBytesPeak_Object = MibScalar
serverPoolNonpagedKBytesPeak = _ServerPoolNonpagedKBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 28),
    _ServerPoolNonpagedKBytesPeak_Type()
)
serverPoolNonpagedKBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedKBytesPeak.setStatus("current")
_ServerPoolPagedKBytes_Type = Gauge32
_ServerPoolPagedKBytes_Object = MibScalar
serverPoolPagedKBytes = _ServerPoolPagedKBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 29),
    _ServerPoolPagedKBytes_Type()
)
serverPoolPagedKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedKBytes.setStatus("current")
_ServerPoolPagedKBytesPeak_Type = Gauge32
_ServerPoolPagedKBytesPeak_Object = MibScalar
serverPoolPagedKBytesPeak = _ServerPoolPagedKBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 30),
    _ServerPoolPagedKBytesPeak_Type()
)
serverPoolPagedKBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedKBytesPeak.setStatus("current")
_ServerPoolNonpagedMBytes_Type = Gauge32
_ServerPoolNonpagedMBytes_Object = MibScalar
serverPoolNonpagedMBytes = _ServerPoolNonpagedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 31),
    _ServerPoolNonpagedMBytes_Type()
)
serverPoolNonpagedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedMBytes.setStatus("current")
_ServerPoolNonpagedMBytesPeak_Type = Gauge32
_ServerPoolNonpagedMBytesPeak_Object = MibScalar
serverPoolNonpagedMBytesPeak = _ServerPoolNonpagedMBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 32),
    _ServerPoolNonpagedMBytesPeak_Type()
)
serverPoolNonpagedMBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolNonpagedMBytesPeak.setStatus("current")
_ServerPoolPagedMBytes_Type = Gauge32
_ServerPoolPagedMBytes_Object = MibScalar
serverPoolPagedMBytes = _ServerPoolPagedMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 33),
    _ServerPoolPagedMBytes_Type()
)
serverPoolPagedMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedMBytes.setStatus("current")
_ServerPoolPagedMBytesPeak_Type = Gauge32
_ServerPoolPagedMBytesPeak_Object = MibScalar
serverPoolPagedMBytesPeak = _ServerPoolPagedMBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 34),
    _ServerPoolPagedMBytesPeak_Type()
)
serverPoolPagedMBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPoolPagedMBytesPeak.setStatus("current")
_ServerWorkQueuesTable_Object = MibTable
serverWorkQueuesTable = _ServerWorkQueuesTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74)
)
if mibBuilder.loadTexts:
    serverWorkQueuesTable.setStatus("current")
_ServerWorkQueuesEntry_Object = MibTableRow
serverWorkQueuesEntry = _ServerWorkQueuesEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1)
)
serverWorkQueuesEntry.setIndexNames(
    (0, "INFORMANT-ADV", "swqInstance"),
)
if mibBuilder.loadTexts:
    serverWorkQueuesEntry.setStatus("current")
_SwqInstance_Type = InstanceName
_SwqInstance_Object = MibTableColumn
swqInstance = _SwqInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 1),
    _SwqInstance_Type()
)
swqInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqInstance.setStatus("current")
_SwqActiveThreads_Type = Gauge32
_SwqActiveThreads_Object = MibTableColumn
swqActiveThreads = _SwqActiveThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 2),
    _SwqActiveThreads_Type()
)
swqActiveThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqActiveThreads.setStatus("current")
_SwqAvailableThreads_Type = Gauge32
_SwqAvailableThreads_Object = MibTableColumn
swqAvailableThreads = _SwqAvailableThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 3),
    _SwqAvailableThreads_Type()
)
swqAvailableThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqAvailableThreads.setStatus("current")
_SwqAvailableWorkItems_Type = Gauge32
_SwqAvailableWorkItems_Object = MibTableColumn
swqAvailableWorkItems = _SwqAvailableWorkItems_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 4),
    _SwqAvailableWorkItems_Type()
)
swqAvailableWorkItems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqAvailableWorkItems.setStatus("current")
_SwqBorrowedWorkItems_Type = Gauge32
_SwqBorrowedWorkItems_Object = MibTableColumn
swqBorrowedWorkItems = _SwqBorrowedWorkItems_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 5),
    _SwqBorrowedWorkItems_Type()
)
swqBorrowedWorkItems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqBorrowedWorkItems.setStatus("current")
_SwqBytesReceivedPerSec_Type = Gauge32
_SwqBytesReceivedPerSec_Object = MibTableColumn
swqBytesReceivedPerSec = _SwqBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 6),
    _SwqBytesReceivedPerSec_Type()
)
swqBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqBytesReceivedPerSec.setStatus("current")
_SwqBytesSentPerSec_Type = Gauge32
_SwqBytesSentPerSec_Object = MibTableColumn
swqBytesSentPerSec = _SwqBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 7),
    _SwqBytesSentPerSec_Type()
)
swqBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqBytesSentPerSec.setStatus("current")
_SwqBytesTransferredPerSec_Type = Gauge32
_SwqBytesTransferredPerSec_Object = MibTableColumn
swqBytesTransferredPerSec = _SwqBytesTransferredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 8),
    _SwqBytesTransferredPerSec_Type()
)
swqBytesTransferredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqBytesTransferredPerSec.setStatus("current")
_SwqContextBlocksQueuedPerSec_Type = Gauge32
_SwqContextBlocksQueuedPerSec_Object = MibTableColumn
swqContextBlocksQueuedPerSec = _SwqContextBlocksQueuedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 9),
    _SwqContextBlocksQueuedPerSec_Type()
)
swqContextBlocksQueuedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqContextBlocksQueuedPerSec.setStatus("current")
_SwqCurrentClients_Type = Gauge32
_SwqCurrentClients_Object = MibTableColumn
swqCurrentClients = _SwqCurrentClients_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 10),
    _SwqCurrentClients_Type()
)
swqCurrentClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqCurrentClients.setStatus("current")
_SwqQueueLength_Type = Gauge32
_SwqQueueLength_Object = MibTableColumn
swqQueueLength = _SwqQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 11),
    _SwqQueueLength_Type()
)
swqQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqQueueLength.setStatus("current")
_SwqReadBytesPerSec_Type = Gauge32
_SwqReadBytesPerSec_Object = MibTableColumn
swqReadBytesPerSec = _SwqReadBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 12),
    _SwqReadBytesPerSec_Type()
)
swqReadBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqReadBytesPerSec.setStatus("current")
_SwqReadOperationsPerSec_Type = Gauge32
_SwqReadOperationsPerSec_Object = MibTableColumn
swqReadOperationsPerSec = _SwqReadOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 13),
    _SwqReadOperationsPerSec_Type()
)
swqReadOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqReadOperationsPerSec.setStatus("current")
_SwqTotalBytesPerSec_Type = Gauge32
_SwqTotalBytesPerSec_Object = MibTableColumn
swqTotalBytesPerSec = _SwqTotalBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 14),
    _SwqTotalBytesPerSec_Type()
)
swqTotalBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqTotalBytesPerSec.setStatus("current")
_SwqTotalOperationsPerSec_Type = Gauge32
_SwqTotalOperationsPerSec_Object = MibTableColumn
swqTotalOperationsPerSec = _SwqTotalOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 15),
    _SwqTotalOperationsPerSec_Type()
)
swqTotalOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqTotalOperationsPerSec.setStatus("current")
_SwqWorkItemShortages_Type = Gauge32
_SwqWorkItemShortages_Object = MibTableColumn
swqWorkItemShortages = _SwqWorkItemShortages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 16),
    _SwqWorkItemShortages_Type()
)
swqWorkItemShortages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqWorkItemShortages.setStatus("current")
_SwqWriteBytesPerSec_Type = Gauge32
_SwqWriteBytesPerSec_Object = MibTableColumn
swqWriteBytesPerSec = _SwqWriteBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 17),
    _SwqWriteBytesPerSec_Type()
)
swqWriteBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqWriteBytesPerSec.setStatus("current")
_SwqWriteOperationsPerSec_Type = Gauge32
_SwqWriteOperationsPerSec_Object = MibTableColumn
swqWriteOperationsPerSec = _SwqWriteOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 18),
    _SwqWriteOperationsPerSec_Type()
)
swqWriteOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swqWriteOperationsPerSec.setStatus("current")
_SmtpNTFSStoreDriverTable_Object = MibTable
smtpNTFSStoreDriverTable = _SmtpNTFSStoreDriverTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75)
)
if mibBuilder.loadTexts:
    smtpNTFSStoreDriverTable.setStatus("current")
_SmtpNTFSStoreDriverEntry_Object = MibTableRow
smtpNTFSStoreDriverEntry = _SmtpNTFSStoreDriverEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1)
)
smtpNTFSStoreDriverEntry.setIndexNames(
    (0, "INFORMANT-ADV", "snsdInstance"),
)
if mibBuilder.loadTexts:
    smtpNTFSStoreDriverEntry.setStatus("current")
_SnsdInstance_Type = InstanceName
_SnsdInstance_Object = MibTableColumn
snsdInstance = _SnsdInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 1),
    _SnsdInstance_Type()
)
snsdInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdInstance.setStatus("current")
_SnsdMessagesAllocated_Type = Gauge32
_SnsdMessagesAllocated_Object = MibTableColumn
snsdMessagesAllocated = _SnsdMessagesAllocated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 2),
    _SnsdMessagesAllocated_Type()
)
snsdMessagesAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdMessagesAllocated.setStatus("current")
_SnsdMessagesDeleted_Type = Gauge32
_SnsdMessagesDeleted_Object = MibTableColumn
snsdMessagesDeleted = _SnsdMessagesDeleted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 3),
    _SnsdMessagesDeleted_Type()
)
snsdMessagesDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdMessagesDeleted.setStatus("current")
_SnsdMessagesEnumerated_Type = Gauge32
_SnsdMessagesEnumerated_Object = MibTableColumn
snsdMessagesEnumerated = _SnsdMessagesEnumerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 4),
    _SnsdMessagesEnumerated_Type()
)
snsdMessagesEnumerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdMessagesEnumerated.setStatus("current")
_SnsdMessagesInTheQueueDirectory_Type = Gauge32
_SnsdMessagesInTheQueueDirectory_Object = MibTableColumn
snsdMessagesInTheQueueDirectory = _SnsdMessagesInTheQueueDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 5),
    _SnsdMessagesInTheQueueDirectory_Type()
)
snsdMessagesInTheQueueDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdMessagesInTheQueueDirectory.setStatus("current")
_SnsdOpenMessageBodies_Type = Gauge32
_SnsdOpenMessageBodies_Object = MibTableColumn
snsdOpenMessageBodies = _SnsdOpenMessageBodies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 6),
    _SnsdOpenMessageBodies_Type()
)
snsdOpenMessageBodies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdOpenMessageBodies.setStatus("current")
_SnsdOpenMessageStreams_Type = Gauge32
_SnsdOpenMessageStreams_Object = MibTableColumn
snsdOpenMessageStreams = _SnsdOpenMessageStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 7),
    _SnsdOpenMessageStreams_Type()
)
snsdOpenMessageStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snsdOpenMessageStreams.setStatus("current")
_SmtpServerTable_Object = MibTable
smtpServerTable = _SmtpServerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76)
)
if mibBuilder.loadTexts:
    smtpServerTable.setStatus("current")
_SmtpServerEntry_Object = MibTableRow
smtpServerEntry = _SmtpServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1)
)
smtpServerEntry.setIndexNames(
    (0, "INFORMANT-ADV", "smtpSrvrInstance"),
)
if mibBuilder.loadTexts:
    smtpServerEntry.setStatus("current")
_SmtpSrvrInstance_Type = InstanceName
_SmtpSrvrInstance_Object = MibTableColumn
smtpSrvrInstance = _SmtpSrvrInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 1),
    _SmtpSrvrInstance_Type()
)
smtpSrvrInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrInstance.setStatus("current")
_SmtpSrvrPercentRcpntsLocal_Type = Gauge32
_SmtpSrvrPercentRcpntsLocal_Object = MibTableColumn
smtpSrvrPercentRcpntsLocal = _SmtpSrvrPercentRcpntsLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 2),
    _SmtpSrvrPercentRcpntsLocal_Type()
)
smtpSrvrPercentRcpntsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrPercentRcpntsLocal.setStatus("current")
_SmtpSrvrPercentRcpntsRemote_Type = Gauge32
_SmtpSrvrPercentRcpntsRemote_Object = MibTableColumn
smtpSrvrPercentRcpntsRemote = _SmtpSrvrPercentRcpntsRemote_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 3),
    _SmtpSrvrPercentRcpntsRemote_Type()
)
smtpSrvrPercentRcpntsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrPercentRcpntsRemote.setStatus("current")
_SmtpSrvrAvgRcpntsPerMsgRcvd_Type = Gauge32
_SmtpSrvrAvgRcpntsPerMsgRcvd_Object = MibTableColumn
smtpSrvrAvgRcpntsPerMsgRcvd = _SmtpSrvrAvgRcpntsPerMsgRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 4),
    _SmtpSrvrAvgRcpntsPerMsgRcvd_Type()
)
smtpSrvrAvgRcpntsPerMsgRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrAvgRcpntsPerMsgRcvd.setStatus("current")
_SmtpSrvrAvgRcpntsPerMsgSent_Type = Gauge32
_SmtpSrvrAvgRcpntsPerMsgSent_Object = MibTableColumn
smtpSrvrAvgRcpntsPerMsgSent = _SmtpSrvrAvgRcpntsPerMsgSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 5),
    _SmtpSrvrAvgRcpntsPerMsgSent_Type()
)
smtpSrvrAvgRcpntsPerMsgSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrAvgRcpntsPerMsgSent.setStatus("current")
_SmtpSrvrAvgRetriesPerMsgDlvrd_Type = Gauge32
_SmtpSrvrAvgRetriesPerMsgDlvrd_Object = MibTableColumn
smtpSrvrAvgRetriesPerMsgDlvrd = _SmtpSrvrAvgRetriesPerMsgDlvrd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 6),
    _SmtpSrvrAvgRetriesPerMsgDlvrd_Type()
)
smtpSrvrAvgRetriesPerMsgDlvrd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrAvgRetriesPerMsgDlvrd.setStatus("current")
_SmtpSrvrAvgRetriesPerMsgSent_Type = Gauge32
_SmtpSrvrAvgRetriesPerMsgSent_Object = MibTableColumn
smtpSrvrAvgRetriesPerMsgSent = _SmtpSrvrAvgRetriesPerMsgSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 7),
    _SmtpSrvrAvgRetriesPerMsgSent_Type()
)
smtpSrvrAvgRetriesPerMsgSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrAvgRetriesPerMsgSent.setStatus("current")
_SmtpSrvrBadMailMsgsBadPickupFile_Type = Gauge32
_SmtpSrvrBadMailMsgsBadPickupFile_Object = MibTableColumn
smtpSrvrBadMailMsgsBadPickupFile = _SmtpSrvrBadMailMsgsBadPickupFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 8),
    _SmtpSrvrBadMailMsgsBadPickupFile_Type()
)
smtpSrvrBadMailMsgsBadPickupFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBadMailMsgsBadPickupFile.setStatus("current")
_SmtpSrvrBadMailMsgsGeneralFail_Type = Gauge32
_SmtpSrvrBadMailMsgsGeneralFail_Object = MibTableColumn
smtpSrvrBadMailMsgsGeneralFail = _SmtpSrvrBadMailMsgsGeneralFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 9),
    _SmtpSrvrBadMailMsgsGeneralFail_Type()
)
smtpSrvrBadMailMsgsGeneralFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBadMailMsgsGeneralFail.setStatus("current")
_SmtpSrvrBadMailMsgsHopCntExceed_Type = Gauge32
_SmtpSrvrBadMailMsgsHopCntExceed_Object = MibTableColumn
smtpSrvrBadMailMsgsHopCntExceed = _SmtpSrvrBadMailMsgsHopCntExceed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 10),
    _SmtpSrvrBadMailMsgsHopCntExceed_Type()
)
smtpSrvrBadMailMsgsHopCntExceed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBadMailMsgsHopCntExceed.setStatus("current")
_SmtpSrvrBadMailMsgsNDROfDSN_Type = Gauge32
_SmtpSrvrBadMailMsgsNDROfDSN_Object = MibTableColumn
smtpSrvrBadMailMsgsNDROfDSN = _SmtpSrvrBadMailMsgsNDROfDSN_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 11),
    _SmtpSrvrBadMailMsgsNDROfDSN_Type()
)
smtpSrvrBadMailMsgsNDROfDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBadMailMsgsNDROfDSN.setStatus("current")
_SmtpSrvrBadMailMsgsNoRcpnts_Type = Gauge32
_SmtpSrvrBadMailMsgsNoRcpnts_Object = MibTableColumn
smtpSrvrBadMailMsgsNoRcpnts = _SmtpSrvrBadMailMsgsNoRcpnts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 12),
    _SmtpSrvrBadMailMsgsNoRcpnts_Type()
)
smtpSrvrBadMailMsgsNoRcpnts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBadMailMsgsNoRcpnts.setStatus("current")
_SmtpSrvrBadMailMsgsTrigViaEvent_Type = Gauge32
_SmtpSrvrBadMailMsgsTrigViaEvent_Object = MibTableColumn
smtpSrvrBadMailMsgsTrigViaEvent = _SmtpSrvrBadMailMsgsTrigViaEvent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 13),
    _SmtpSrvrBadMailMsgsTrigViaEvent_Type()
)
smtpSrvrBadMailMsgsTrigViaEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBadMailMsgsTrigViaEvent.setStatus("current")
_SmtpSrvrBytesRcvdTotal_Type = Gauge32
_SmtpSrvrBytesRcvdTotal_Object = MibTableColumn
smtpSrvrBytesRcvdTotal = _SmtpSrvrBytesRcvdTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 14),
    _SmtpSrvrBytesRcvdTotal_Type()
)
smtpSrvrBytesRcvdTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBytesRcvdTotal.setStatus("current")
_SmtpSrvrBytesRcvdPerSec_Type = Gauge32
_SmtpSrvrBytesRcvdPerSec_Object = MibTableColumn
smtpSrvrBytesRcvdPerSec = _SmtpSrvrBytesRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 15),
    _SmtpSrvrBytesRcvdPerSec_Type()
)
smtpSrvrBytesRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBytesRcvdPerSec.setStatus("current")
_SmtpSrvrBytesSentTotal_Type = Gauge32
_SmtpSrvrBytesSentTotal_Object = MibTableColumn
smtpSrvrBytesSentTotal = _SmtpSrvrBytesSentTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 16),
    _SmtpSrvrBytesSentTotal_Type()
)
smtpSrvrBytesSentTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBytesSentTotal.setStatus("current")
_SmtpSrvrBytesSentPerSec_Type = Gauge32
_SmtpSrvrBytesSentPerSec_Object = MibTableColumn
smtpSrvrBytesSentPerSec = _SmtpSrvrBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 17),
    _SmtpSrvrBytesSentPerSec_Type()
)
smtpSrvrBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBytesSentPerSec.setStatus("current")
_SmtpSrvrBytesTotal_Type = Gauge32
_SmtpSrvrBytesTotal_Object = MibTableColumn
smtpSrvrBytesTotal = _SmtpSrvrBytesTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 18),
    _SmtpSrvrBytesTotal_Type()
)
smtpSrvrBytesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBytesTotal.setStatus("current")
_SmtpSrvrBytesTotalPerSec_Type = Gauge32
_SmtpSrvrBytesTotalPerSec_Object = MibTableColumn
smtpSrvrBytesTotalPerSec = _SmtpSrvrBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 19),
    _SmtpSrvrBytesTotalPerSec_Type()
)
smtpSrvrBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrBytesTotalPerSec.setStatus("current")
_SmtpSrvrCatAddrLookupCmplt_Type = Gauge32
_SmtpSrvrCatAddrLookupCmplt_Object = MibTableColumn
smtpSrvrCatAddrLookupCmplt = _SmtpSrvrCatAddrLookupCmplt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 20),
    _SmtpSrvrCatAddrLookupCmplt_Type()
)
smtpSrvrCatAddrLookupCmplt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatAddrLookupCmplt.setStatus("current")
_SmtpSrvrCatAddrLookupCmpltPerSec_Type = Gauge32
_SmtpSrvrCatAddrLookupCmpltPerSec_Object = MibTableColumn
smtpSrvrCatAddrLookupCmpltPerSec = _SmtpSrvrCatAddrLookupCmpltPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 21),
    _SmtpSrvrCatAddrLookupCmpltPerSec_Type()
)
smtpSrvrCatAddrLookupCmpltPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatAddrLookupCmpltPerSec.setStatus("current")
_SmtpSrvrCatAddrLookups_Type = Gauge32
_SmtpSrvrCatAddrLookups_Object = MibTableColumn
smtpSrvrCatAddrLookups = _SmtpSrvrCatAddrLookups_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 22),
    _SmtpSrvrCatAddrLookups_Type()
)
smtpSrvrCatAddrLookups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatAddrLookups.setStatus("current")
_SmtpSrvrCatAddrLookupsNotFound_Type = Gauge32
_SmtpSrvrCatAddrLookupsNotFound_Object = MibTableColumn
smtpSrvrCatAddrLookupsNotFound = _SmtpSrvrCatAddrLookupsNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 23),
    _SmtpSrvrCatAddrLookupsNotFound_Type()
)
smtpSrvrCatAddrLookupsNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatAddrLookupsNotFound.setStatus("current")
_SmtpSrvrCatAddrLookupsPerSec_Type = Gauge32
_SmtpSrvrCatAddrLookupsPerSec_Object = MibTableColumn
smtpSrvrCatAddrLookupsPerSec = _SmtpSrvrCatAddrLookupsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 24),
    _SmtpSrvrCatAddrLookupsPerSec_Type()
)
smtpSrvrCatAddrLookupsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatAddrLookupsPerSec.setStatus("current")
_SmtpSrvrCatCatsCmpltd_Type = Gauge32
_SmtpSrvrCatCatsCmpltd_Object = MibTableColumn
smtpSrvrCatCatsCmpltd = _SmtpSrvrCatCatsCmpltd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 25),
    _SmtpSrvrCatCatsCmpltd_Type()
)
smtpSrvrCatCatsCmpltd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsCmpltd.setStatus("current")
_SmtpSrvrCatCatsCmpltdSuccess_Type = Gauge32
_SmtpSrvrCatCatsCmpltdSuccess_Object = MibTableColumn
smtpSrvrCatCatsCmpltdSuccess = _SmtpSrvrCatCatsCmpltdSuccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 26),
    _SmtpSrvrCatCatsCmpltdSuccess_Type()
)
smtpSrvrCatCatsCmpltdSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsCmpltdSuccess.setStatus("current")
_SmtpSrvrCatCatsCmpltdPerSec_Type = Gauge32
_SmtpSrvrCatCatsCmpltdPerSec_Object = MibTableColumn
smtpSrvrCatCatsCmpltdPerSec = _SmtpSrvrCatCatsCmpltdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 27),
    _SmtpSrvrCatCatsCmpltdPerSec_Type()
)
smtpSrvrCatCatsCmpltdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsCmpltdPerSec.setStatus("current")
_SmtpSrvrCatCatsFailDSConnFail_Type = Gauge32
_SmtpSrvrCatCatsFailDSConnFail_Object = MibTableColumn
smtpSrvrCatCatsFailDSConnFail = _SmtpSrvrCatCatsFailDSConnFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 28),
    _SmtpSrvrCatCatsFailDSConnFail_Type()
)
smtpSrvrCatCatsFailDSConnFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsFailDSConnFail.setStatus("current")
_SmtpSrvrCatCatsFailDSLogonFail_Type = Gauge32
_SmtpSrvrCatCatsFailDSLogonFail_Object = MibTableColumn
smtpSrvrCatCatsFailDSLogonFail = _SmtpSrvrCatCatsFailDSLogonFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 29),
    _SmtpSrvrCatCatsFailDSLogonFail_Type()
)
smtpSrvrCatCatsFailDSLogonFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsFailDSLogonFail.setStatus("current")
_SmtpSrvrCatCatsFailOutOfMemory_Type = Gauge32
_SmtpSrvrCatCatsFailOutOfMemory_Object = MibTableColumn
smtpSrvrCatCatsFailOutOfMemory = _SmtpSrvrCatCatsFailOutOfMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 30),
    _SmtpSrvrCatCatsFailOutOfMemory_Type()
)
smtpSrvrCatCatsFailOutOfMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsFailOutOfMemory.setStatus("current")
_SmtpSrvrCatCatsFailNonRetryError_Type = Gauge32
_SmtpSrvrCatCatsFailNonRetryError_Object = MibTableColumn
smtpSrvrCatCatsFailNonRetryError = _SmtpSrvrCatCatsFailNonRetryError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 31),
    _SmtpSrvrCatCatsFailNonRetryError_Type()
)
smtpSrvrCatCatsFailNonRetryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsFailNonRetryError.setStatus("current")
_SmtpSrvrCatCatsFailRetryError_Type = Gauge32
_SmtpSrvrCatCatsFailRetryError_Object = MibTableColumn
smtpSrvrCatCatsFailRetryError = _SmtpSrvrCatCatsFailRetryError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 32),
    _SmtpSrvrCatCatsFailRetryError_Type()
)
smtpSrvrCatCatsFailRetryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsFailRetryError.setStatus("current")
_SmtpSrvrCatCatsFailSinkRetryErr_Type = Gauge32
_SmtpSrvrCatCatsFailSinkRetryErr_Object = MibTableColumn
smtpSrvrCatCatsFailSinkRetryErr = _SmtpSrvrCatCatsFailSinkRetryErr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 33),
    _SmtpSrvrCatCatsFailSinkRetryErr_Type()
)
smtpSrvrCatCatsFailSinkRetryErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsFailSinkRetryErr.setStatus("current")
_SmtpSrvrCatCatsInProgress_Type = Gauge32
_SmtpSrvrCatCatsInProgress_Object = MibTableColumn
smtpSrvrCatCatsInProgress = _SmtpSrvrCatCatsInProgress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 34),
    _SmtpSrvrCatCatsInProgress_Type()
)
smtpSrvrCatCatsInProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatCatsInProgress.setStatus("current")
_SmtpSrvrCatLDAPBindFail_Type = Gauge32
_SmtpSrvrCatLDAPBindFail_Object = MibTableColumn
smtpSrvrCatLDAPBindFail = _SmtpSrvrCatLDAPBindFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 35),
    _SmtpSrvrCatLDAPBindFail_Type()
)
smtpSrvrCatLDAPBindFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPBindFail.setStatus("current")
_SmtpSrvrCatLDAPBinds_Type = Gauge32
_SmtpSrvrCatLDAPBinds_Object = MibTableColumn
smtpSrvrCatLDAPBinds = _SmtpSrvrCatLDAPBinds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 36),
    _SmtpSrvrCatLDAPBinds_Type()
)
smtpSrvrCatLDAPBinds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPBinds.setStatus("current")
_SmtpSrvrCatLDAPConnFail_Type = Gauge32
_SmtpSrvrCatLDAPConnFail_Object = MibTableColumn
smtpSrvrCatLDAPConnFail = _SmtpSrvrCatLDAPConnFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 37),
    _SmtpSrvrCatLDAPConnFail_Type()
)
smtpSrvrCatLDAPConnFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPConnFail.setStatus("current")
_SmtpSrvrCatLDAPConns_Type = Gauge32
_SmtpSrvrCatLDAPConns_Object = MibTableColumn
smtpSrvrCatLDAPConns = _SmtpSrvrCatLDAPConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 38),
    _SmtpSrvrCatLDAPConns_Type()
)
smtpSrvrCatLDAPConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPConns.setStatus("current")
_SmtpSrvrCatLDAPConnsCurrOpen_Type = Gauge32
_SmtpSrvrCatLDAPConnsCurrOpen_Object = MibTableColumn
smtpSrvrCatLDAPConnsCurrOpen = _SmtpSrvrCatLDAPConnsCurrOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 39),
    _SmtpSrvrCatLDAPConnsCurrOpen_Type()
)
smtpSrvrCatLDAPConnsCurrOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPConnsCurrOpen.setStatus("current")
_SmtpSrvrCatLDAPGeneralCmpltFail_Type = Gauge32
_SmtpSrvrCatLDAPGeneralCmpltFail_Object = MibTableColumn
smtpSrvrCatLDAPGeneralCmpltFail = _SmtpSrvrCatLDAPGeneralCmpltFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 40),
    _SmtpSrvrCatLDAPGeneralCmpltFail_Type()
)
smtpSrvrCatLDAPGeneralCmpltFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPGeneralCmpltFail.setStatus("current")
_SmtpSrvrCatLDAPPageSrchCmpltFail_Type = Gauge32
_SmtpSrvrCatLDAPPageSrchCmpltFail_Object = MibTableColumn
smtpSrvrCatLDAPPageSrchCmpltFail = _SmtpSrvrCatLDAPPageSrchCmpltFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 41),
    _SmtpSrvrCatLDAPPageSrchCmpltFail_Type()
)
smtpSrvrCatLDAPPageSrchCmpltFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPPageSrchCmpltFail.setStatus("current")
_SmtpSrvrCatLDAPPagedSrchFail_Type = Gauge32
_SmtpSrvrCatLDAPPagedSrchFail_Object = MibTableColumn
smtpSrvrCatLDAPPagedSrchFail = _SmtpSrvrCatLDAPPagedSrchFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 42),
    _SmtpSrvrCatLDAPPagedSrchFail_Type()
)
smtpSrvrCatLDAPPagedSrchFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPPagedSrchFail.setStatus("current")
_SmtpSrvrCatLDAPPagedSrchs_Type = Gauge32
_SmtpSrvrCatLDAPPagedSrchs_Object = MibTableColumn
smtpSrvrCatLDAPPagedSrchs = _SmtpSrvrCatLDAPPagedSrchs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 43),
    _SmtpSrvrCatLDAPPagedSrchs_Type()
)
smtpSrvrCatLDAPPagedSrchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPPagedSrchs.setStatus("current")
_SmtpSrvrCatLDAPPagedSrchsCmpltd_Type = Gauge32
_SmtpSrvrCatLDAPPagedSrchsCmpltd_Object = MibTableColumn
smtpSrvrCatLDAPPagedSrchsCmpltd = _SmtpSrvrCatLDAPPagedSrchsCmpltd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 44),
    _SmtpSrvrCatLDAPPagedSrchsCmpltd_Type()
)
smtpSrvrCatLDAPPagedSrchsCmpltd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPPagedSrchsCmpltd.setStatus("current")
_SmtpSrvrCatLDAPSrchCmpltFail_Type = Gauge32
_SmtpSrvrCatLDAPSrchCmpltFail_Object = MibTableColumn
smtpSrvrCatLDAPSrchCmpltFail = _SmtpSrvrCatLDAPSrchCmpltFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 45),
    _SmtpSrvrCatLDAPSrchCmpltFail_Type()
)
smtpSrvrCatLDAPSrchCmpltFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchCmpltFail.setStatus("current")
_SmtpSrvrCatLDAPSrchFail_Type = Gauge32
_SmtpSrvrCatLDAPSrchFail_Object = MibTableColumn
smtpSrvrCatLDAPSrchFail = _SmtpSrvrCatLDAPSrchFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 46),
    _SmtpSrvrCatLDAPSrchFail_Type()
)
smtpSrvrCatLDAPSrchFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchFail.setStatus("current")
_SmtpSrvrCatLDAPSrchs_Type = Gauge32
_SmtpSrvrCatLDAPSrchs_Object = MibTableColumn
smtpSrvrCatLDAPSrchs = _SmtpSrvrCatLDAPSrchs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 47),
    _SmtpSrvrCatLDAPSrchs_Type()
)
smtpSrvrCatLDAPSrchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchs.setStatus("current")
_SmtpSrvrCatLDAPSrchsAbandoned_Type = Gauge32
_SmtpSrvrCatLDAPSrchsAbandoned_Object = MibTableColumn
smtpSrvrCatLDAPSrchsAbandoned = _SmtpSrvrCatLDAPSrchsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 48),
    _SmtpSrvrCatLDAPSrchsAbandoned_Type()
)
smtpSrvrCatLDAPSrchsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchsAbandoned.setStatus("current")
_SmtpSrvrCatLDAPSrchsCmpltd_Type = Gauge32
_SmtpSrvrCatLDAPSrchsCmpltd_Object = MibTableColumn
smtpSrvrCatLDAPSrchsCmpltd = _SmtpSrvrCatLDAPSrchsCmpltd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 49),
    _SmtpSrvrCatLDAPSrchsCmpltd_Type()
)
smtpSrvrCatLDAPSrchsCmpltd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchsCmpltd.setStatus("current")
_SmtpSrvrCatLDAPSrchsCmpltdPerSec_Type = Gauge32
_SmtpSrvrCatLDAPSrchsCmpltdPerSec_Object = MibTableColumn
smtpSrvrCatLDAPSrchsCmpltdPerSec = _SmtpSrvrCatLDAPSrchsCmpltdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 50),
    _SmtpSrvrCatLDAPSrchsCmpltdPerSec_Type()
)
smtpSrvrCatLDAPSrchsCmpltdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchsCmpltdPerSec.setStatus("current")
_SmtpSrvrCatLDAPSrchsPendingCmplt_Type = Gauge32
_SmtpSrvrCatLDAPSrchsPendingCmplt_Object = MibTableColumn
smtpSrvrCatLDAPSrchsPendingCmplt = _SmtpSrvrCatLDAPSrchsPendingCmplt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 51),
    _SmtpSrvrCatLDAPSrchsPendingCmplt_Type()
)
smtpSrvrCatLDAPSrchsPendingCmplt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchsPendingCmplt.setStatus("current")
_SmtpSrvrCatLDAPSrchsPerSec_Type = Gauge32
_SmtpSrvrCatLDAPSrchsPerSec_Object = MibTableColumn
smtpSrvrCatLDAPSrchsPerSec = _SmtpSrvrCatLDAPSrchsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 52),
    _SmtpSrvrCatLDAPSrchsPerSec_Type()
)
smtpSrvrCatLDAPSrchsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatLDAPSrchsPerSec.setStatus("current")
_SmtpSrvrCatMsgsCategorized_Type = Gauge32
_SmtpSrvrCatMsgsCategorized_Object = MibTableColumn
smtpSrvrCatMsgsCategorized = _SmtpSrvrCatMsgsCategorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 53),
    _SmtpSrvrCatMsgsCategorized_Type()
)
smtpSrvrCatMsgsCategorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatMsgsCategorized.setStatus("current")
_SmtpSrvrCatMsgsAborted_Type = Gauge32
_SmtpSrvrCatMsgsAborted_Object = MibTableColumn
smtpSrvrCatMsgsAborted = _SmtpSrvrCatMsgsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 54),
    _SmtpSrvrCatMsgsAborted_Type()
)
smtpSrvrCatMsgsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatMsgsAborted.setStatus("current")
_SmtpSrvrCatMsgsBifurcated_Type = Gauge32
_SmtpSrvrCatMsgsBifurcated_Object = MibTableColumn
smtpSrvrCatMsgsBifurcated = _SmtpSrvrCatMsgsBifurcated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 55),
    _SmtpSrvrCatMsgsBifurcated_Type()
)
smtpSrvrCatMsgsBifurcated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatMsgsBifurcated.setStatus("current")
_SmtpSrvrCatMsgsSubmitted_Type = Gauge32
_SmtpSrvrCatMsgsSubmitted_Object = MibTableColumn
smtpSrvrCatMsgsSubmitted = _SmtpSrvrCatMsgsSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 56),
    _SmtpSrvrCatMsgsSubmitted_Type()
)
smtpSrvrCatMsgsSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatMsgsSubmitted.setStatus("current")
_SmtpSrvrCatMsgsSubmittedPerSec_Type = Gauge32
_SmtpSrvrCatMsgsSubmittedPerSec_Object = MibTableColumn
smtpSrvrCatMsgsSubmittedPerSec = _SmtpSrvrCatMsgsSubmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 57),
    _SmtpSrvrCatMsgsSubmittedPerSec_Type()
)
smtpSrvrCatMsgsSubmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatMsgsSubmittedPerSec.setStatus("current")
_SmtpSrvrCatRcptsNDRdAmbigsAddr_Type = Gauge32
_SmtpSrvrCatRcptsNDRdAmbigsAddr_Object = MibTableColumn
smtpSrvrCatRcptsNDRdAmbigsAddr = _SmtpSrvrCatRcptsNDRdAmbigsAddr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 58),
    _SmtpSrvrCatRcptsNDRdAmbigsAddr_Type()
)
smtpSrvrCatRcptsNDRdAmbigsAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsNDRdAmbigsAddr.setStatus("current")
_SmtpSrvrCatRcptsNDRdForwardLoop_Type = Gauge32
_SmtpSrvrCatRcptsNDRdForwardLoop_Object = MibTableColumn
smtpSrvrCatRcptsNDRdForwardLoop = _SmtpSrvrCatRcptsNDRdForwardLoop_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 59),
    _SmtpSrvrCatRcptsNDRdForwardLoop_Type()
)
smtpSrvrCatRcptsNDRdForwardLoop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsNDRdForwardLoop.setStatus("current")
_SmtpSrvrCatRcptsNDRdIllegalAddr_Type = Gauge32
_SmtpSrvrCatRcptsNDRdIllegalAddr_Object = MibTableColumn
smtpSrvrCatRcptsNDRdIllegalAddr = _SmtpSrvrCatRcptsNDRdIllegalAddr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 60),
    _SmtpSrvrCatRcptsNDRdIllegalAddr_Type()
)
smtpSrvrCatRcptsNDRdIllegalAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsNDRdIllegalAddr.setStatus("current")
_SmtpSrvrCatRcptsNDRdSinkRecipErr_Type = Gauge32
_SmtpSrvrCatRcptsNDRdSinkRecipErr_Object = MibTableColumn
smtpSrvrCatRcptsNDRdSinkRecipErr = _SmtpSrvrCatRcptsNDRdSinkRecipErr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 61),
    _SmtpSrvrCatRcptsNDRdSinkRecipErr_Type()
)
smtpSrvrCatRcptsNDRdSinkRecipErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsNDRdSinkRecipErr.setStatus("current")
_SmtpSrvrCatRcptsNDRdUnresolved_Type = Gauge32
_SmtpSrvrCatRcptsNDRdUnresolved_Object = MibTableColumn
smtpSrvrCatRcptsNDRdUnresolved = _SmtpSrvrCatRcptsNDRdUnresolved_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 62),
    _SmtpSrvrCatRcptsNDRdUnresolved_Type()
)
smtpSrvrCatRcptsNDRdUnresolved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsNDRdUnresolved.setStatus("current")
_SmtpSrvrCatRcptsNDRdByCategorize_Type = Gauge32
_SmtpSrvrCatRcptsNDRdByCategorize_Object = MibTableColumn
smtpSrvrCatRcptsNDRdByCategorize = _SmtpSrvrCatRcptsNDRdByCategorize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 63),
    _SmtpSrvrCatRcptsNDRdByCategorize_Type()
)
smtpSrvrCatRcptsNDRdByCategorize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsNDRdByCategorize.setStatus("current")
_SmtpSrvrCatRcptsAfterCat_Type = Gauge32
_SmtpSrvrCatRcptsAfterCat_Object = MibTableColumn
smtpSrvrCatRcptsAfterCat = _SmtpSrvrCatRcptsAfterCat_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 64),
    _SmtpSrvrCatRcptsAfterCat_Type()
)
smtpSrvrCatRcptsAfterCat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsAfterCat.setStatus("current")
_SmtpSrvrCatRcptsBeforeCat_Type = Gauge32
_SmtpSrvrCatRcptsBeforeCat_Object = MibTableColumn
smtpSrvrCatRcptsBeforeCat = _SmtpSrvrCatRcptsBeforeCat_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 65),
    _SmtpSrvrCatRcptsBeforeCat_Type()
)
smtpSrvrCatRcptsBeforeCat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsBeforeCat.setStatus("current")
_SmtpSrvrCatRcptsInCat_Type = Gauge32
_SmtpSrvrCatRcptsInCat_Object = MibTableColumn
smtpSrvrCatRcptsInCat = _SmtpSrvrCatRcptsInCat_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 66),
    _SmtpSrvrCatRcptsInCat_Type()
)
smtpSrvrCatRcptsInCat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatRcptsInCat.setStatus("current")
_SmtpSrvrCatSendersUnresolved_Type = Gauge32
_SmtpSrvrCatSendersUnresolved_Object = MibTableColumn
smtpSrvrCatSendersUnresolved = _SmtpSrvrCatSendersUnresolved_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 67),
    _SmtpSrvrCatSendersUnresolved_Type()
)
smtpSrvrCatSendersUnresolved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatSendersUnresolved.setStatus("current")
_SmtpSrvrCatSendersAmbigsAddr_Type = Gauge32
_SmtpSrvrCatSendersAmbigsAddr_Object = MibTableColumn
smtpSrvrCatSendersAmbigsAddr = _SmtpSrvrCatSendersAmbigsAddr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 68),
    _SmtpSrvrCatSendersAmbigsAddr_Type()
)
smtpSrvrCatSendersAmbigsAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatSendersAmbigsAddr.setStatus("current")
_SmtpSrvrCatMailmsgDupCollisions_Type = Gauge32
_SmtpSrvrCatMailmsgDupCollisions_Object = MibTableColumn
smtpSrvrCatMailmsgDupCollisions = _SmtpSrvrCatMailmsgDupCollisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 69),
    _SmtpSrvrCatMailmsgDupCollisions_Type()
)
smtpSrvrCatMailmsgDupCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCatMailmsgDupCollisions.setStatus("current")
_SmtpSrvrCategorizerQueueLength_Type = Gauge32
_SmtpSrvrCategorizerQueueLength_Object = MibTableColumn
smtpSrvrCategorizerQueueLength = _SmtpSrvrCategorizerQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 70),
    _SmtpSrvrCategorizerQueueLength_Type()
)
smtpSrvrCategorizerQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCategorizerQueueLength.setStatus("current")
_SmtpSrvrConnErrorsPerSec_Type = Gauge32
_SmtpSrvrConnErrorsPerSec_Object = MibTableColumn
smtpSrvrConnErrorsPerSec = _SmtpSrvrConnErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 71),
    _SmtpSrvrConnErrorsPerSec_Type()
)
smtpSrvrConnErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrConnErrorsPerSec.setStatus("current")
_SmtpSrvrCurrentMsgsInLocalDlvry_Type = Gauge32
_SmtpSrvrCurrentMsgsInLocalDlvry_Object = MibTableColumn
smtpSrvrCurrentMsgsInLocalDlvry = _SmtpSrvrCurrentMsgsInLocalDlvry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 72),
    _SmtpSrvrCurrentMsgsInLocalDlvry_Type()
)
smtpSrvrCurrentMsgsInLocalDlvry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrCurrentMsgsInLocalDlvry.setStatus("current")
_SmtpSrvrDNSQueriesTotal_Type = Gauge32
_SmtpSrvrDNSQueriesTotal_Object = MibTableColumn
smtpSrvrDNSQueriesTotal = _SmtpSrvrDNSQueriesTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 73),
    _SmtpSrvrDNSQueriesTotal_Type()
)
smtpSrvrDNSQueriesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrDNSQueriesTotal.setStatus("current")
_SmtpSrvrDNSQueriesPerSec_Type = Gauge32
_SmtpSrvrDNSQueriesPerSec_Object = MibTableColumn
smtpSrvrDNSQueriesPerSec = _SmtpSrvrDNSQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 74),
    _SmtpSrvrDNSQueriesPerSec_Type()
)
smtpSrvrDNSQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrDNSQueriesPerSec.setStatus("current")
_SmtpSrvrDirDropsTotal_Type = Gauge32
_SmtpSrvrDirDropsTotal_Object = MibTableColumn
smtpSrvrDirDropsTotal = _SmtpSrvrDirDropsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 75),
    _SmtpSrvrDirDropsTotal_Type()
)
smtpSrvrDirDropsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrDirDropsTotal.setStatus("current")
_SmtpSrvrDirDropsPerSec_Type = Gauge32
_SmtpSrvrDirDropsPerSec_Object = MibTableColumn
smtpSrvrDirDropsPerSec = _SmtpSrvrDirDropsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 76),
    _SmtpSrvrDirDropsPerSec_Type()
)
smtpSrvrDirDropsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrDirDropsPerSec.setStatus("current")
_SmtpSrvrETRNMsgsTotal_Type = Gauge32
_SmtpSrvrETRNMsgsTotal_Object = MibTableColumn
smtpSrvrETRNMsgsTotal = _SmtpSrvrETRNMsgsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 77),
    _SmtpSrvrETRNMsgsTotal_Type()
)
smtpSrvrETRNMsgsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrETRNMsgsTotal.setStatus("current")
_SmtpSrvrETRNMsgsPerSec_Type = Gauge32
_SmtpSrvrETRNMsgsPerSec_Object = MibTableColumn
smtpSrvrETRNMsgsPerSec = _SmtpSrvrETRNMsgsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 78),
    _SmtpSrvrETRNMsgsPerSec_Type()
)
smtpSrvrETRNMsgsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrETRNMsgsPerSec.setStatus("current")
_SmtpSrvrInboundConnsCurrent_Type = Gauge32
_SmtpSrvrInboundConnsCurrent_Object = MibTableColumn
smtpSrvrInboundConnsCurrent = _SmtpSrvrInboundConnsCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 79),
    _SmtpSrvrInboundConnsCurrent_Type()
)
smtpSrvrInboundConnsCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrInboundConnsCurrent.setStatus("current")
_SmtpSrvrInboundConnsTotal_Type = Gauge32
_SmtpSrvrInboundConnsTotal_Object = MibTableColumn
smtpSrvrInboundConnsTotal = _SmtpSrvrInboundConnsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 80),
    _SmtpSrvrInboundConnsTotal_Type()
)
smtpSrvrInboundConnsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrInboundConnsTotal.setStatus("current")
_SmtpSrvrLocalQueueLength_Type = Gauge32
_SmtpSrvrLocalQueueLength_Object = MibTableColumn
smtpSrvrLocalQueueLength = _SmtpSrvrLocalQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 81),
    _SmtpSrvrLocalQueueLength_Type()
)
smtpSrvrLocalQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrLocalQueueLength.setStatus("current")
_SmtpSrvrLocalRetryQueueLength_Type = Gauge32
_SmtpSrvrLocalRetryQueueLength_Object = MibTableColumn
smtpSrvrLocalRetryQueueLength = _SmtpSrvrLocalRetryQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 82),
    _SmtpSrvrLocalRetryQueueLength_Type()
)
smtpSrvrLocalRetryQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrLocalRetryQueueLength.setStatus("current")
_SmtpSrvrMsgBytesRcvdTotal_Type = Gauge32
_SmtpSrvrMsgBytesRcvdTotal_Object = MibTableColumn
smtpSrvrMsgBytesRcvdTotal = _SmtpSrvrMsgBytesRcvdTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 83),
    _SmtpSrvrMsgBytesRcvdTotal_Type()
)
smtpSrvrMsgBytesRcvdTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgBytesRcvdTotal.setStatus("current")
_SmtpSrvrMsgBytesRcvdPerSec_Type = Gauge32
_SmtpSrvrMsgBytesRcvdPerSec_Object = MibTableColumn
smtpSrvrMsgBytesRcvdPerSec = _SmtpSrvrMsgBytesRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 84),
    _SmtpSrvrMsgBytesRcvdPerSec_Type()
)
smtpSrvrMsgBytesRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgBytesRcvdPerSec.setStatus("current")
_SmtpSrvrMsgBytesSentTotal_Type = Gauge32
_SmtpSrvrMsgBytesSentTotal_Object = MibTableColumn
smtpSrvrMsgBytesSentTotal = _SmtpSrvrMsgBytesSentTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 85),
    _SmtpSrvrMsgBytesSentTotal_Type()
)
smtpSrvrMsgBytesSentTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgBytesSentTotal.setStatus("current")
_SmtpSrvrMsgBytesSentPerSec_Type = Gauge32
_SmtpSrvrMsgBytesSentPerSec_Object = MibTableColumn
smtpSrvrMsgBytesSentPerSec = _SmtpSrvrMsgBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 86),
    _SmtpSrvrMsgBytesSentPerSec_Type()
)
smtpSrvrMsgBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgBytesSentPerSec.setStatus("current")
_SmtpSrvrMsgBytesTotal_Type = Gauge32
_SmtpSrvrMsgBytesTotal_Object = MibTableColumn
smtpSrvrMsgBytesTotal = _SmtpSrvrMsgBytesTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 87),
    _SmtpSrvrMsgBytesTotal_Type()
)
smtpSrvrMsgBytesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgBytesTotal.setStatus("current")
_SmtpSrvrMsgBytesTotalPerSec_Type = Gauge32
_SmtpSrvrMsgBytesTotalPerSec_Object = MibTableColumn
smtpSrvrMsgBytesTotalPerSec = _SmtpSrvrMsgBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 88),
    _SmtpSrvrMsgBytesTotalPerSec_Type()
)
smtpSrvrMsgBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgBytesTotalPerSec.setStatus("current")
_SmtpSrvrMsgDlvryRetries_Type = Gauge32
_SmtpSrvrMsgDlvryRetries_Object = MibTableColumn
smtpSrvrMsgDlvryRetries = _SmtpSrvrMsgDlvryRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 89),
    _SmtpSrvrMsgDlvryRetries_Type()
)
smtpSrvrMsgDlvryRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgDlvryRetries.setStatus("current")
_SmtpSrvrMsgSendRetries_Type = Gauge32
_SmtpSrvrMsgSendRetries_Object = MibTableColumn
smtpSrvrMsgSendRetries = _SmtpSrvrMsgSendRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 90),
    _SmtpSrvrMsgSendRetries_Type()
)
smtpSrvrMsgSendRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgSendRetries.setStatus("current")
_SmtpSrvrMsgsCurrUndeliverable_Type = Gauge32
_SmtpSrvrMsgsCurrUndeliverable_Object = MibTableColumn
smtpSrvrMsgsCurrUndeliverable = _SmtpSrvrMsgsCurrUndeliverable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 91),
    _SmtpSrvrMsgsCurrUndeliverable_Type()
)
smtpSrvrMsgsCurrUndeliverable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsCurrUndeliverable.setStatus("current")
_SmtpSrvrMsgsDlvrdTotal_Type = Gauge32
_SmtpSrvrMsgsDlvrdTotal_Object = MibTableColumn
smtpSrvrMsgsDlvrdTotal = _SmtpSrvrMsgsDlvrdTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 92),
    _SmtpSrvrMsgsDlvrdTotal_Type()
)
smtpSrvrMsgsDlvrdTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsDlvrdTotal.setStatus("current")
_SmtpSrvrMsgsDlvrdPerSec_Type = Gauge32
_SmtpSrvrMsgsDlvrdPerSec_Object = MibTableColumn
smtpSrvrMsgsDlvrdPerSec = _SmtpSrvrMsgsDlvrdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 93),
    _SmtpSrvrMsgsDlvrdPerSec_Type()
)
smtpSrvrMsgsDlvrdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsDlvrdPerSec.setStatus("current")
_SmtpSrvrMsgsPendingRoute_Type = Gauge32
_SmtpSrvrMsgsPendingRoute_Object = MibTableColumn
smtpSrvrMsgsPendingRoute = _SmtpSrvrMsgsPendingRoute_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 94),
    _SmtpSrvrMsgsPendingRoute_Type()
)
smtpSrvrMsgsPendingRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsPendingRoute.setStatus("current")
_SmtpSrvrMsgsRcvdTotal_Type = Gauge32
_SmtpSrvrMsgsRcvdTotal_Object = MibTableColumn
smtpSrvrMsgsRcvdTotal = _SmtpSrvrMsgsRcvdTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 95),
    _SmtpSrvrMsgsRcvdTotal_Type()
)
smtpSrvrMsgsRcvdTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsRcvdTotal.setStatus("current")
_SmtpSrvrMsgsRcvdPerSec_Type = Gauge32
_SmtpSrvrMsgsRcvdPerSec_Object = MibTableColumn
smtpSrvrMsgsRcvdPerSec = _SmtpSrvrMsgsRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 96),
    _SmtpSrvrMsgsRcvdPerSec_Type()
)
smtpSrvrMsgsRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsRcvdPerSec.setStatus("current")
_SmtpSrvrMsgsRfsdForAddrObjects_Type = Gauge32
_SmtpSrvrMsgsRfsdForAddrObjects_Object = MibTableColumn
smtpSrvrMsgsRfsdForAddrObjects = _SmtpSrvrMsgsRfsdForAddrObjects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 97),
    _SmtpSrvrMsgsRfsdForAddrObjects_Type()
)
smtpSrvrMsgsRfsdForAddrObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsRfsdForAddrObjects.setStatus("current")
_SmtpSrvrMsgsRfsdForMailObjects_Type = Gauge32
_SmtpSrvrMsgsRfsdForMailObjects_Object = MibTableColumn
smtpSrvrMsgsRfsdForMailObjects = _SmtpSrvrMsgsRfsdForMailObjects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 98),
    _SmtpSrvrMsgsRfsdForMailObjects_Type()
)
smtpSrvrMsgsRfsdForMailObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsRfsdForMailObjects.setStatus("current")
_SmtpSrvrMsgsRfsdForSize_Type = Gauge32
_SmtpSrvrMsgsRfsdForSize_Object = MibTableColumn
smtpSrvrMsgsRfsdForSize = _SmtpSrvrMsgsRfsdForSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 99),
    _SmtpSrvrMsgsRfsdForSize_Type()
)
smtpSrvrMsgsRfsdForSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsRfsdForSize.setStatus("current")
_SmtpSrvrMsgsSentTotal_Type = Gauge32
_SmtpSrvrMsgsSentTotal_Object = MibTableColumn
smtpSrvrMsgsSentTotal = _SmtpSrvrMsgsSentTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 100),
    _SmtpSrvrMsgsSentTotal_Type()
)
smtpSrvrMsgsSentTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsSentTotal.setStatus("current")
_SmtpSrvrMsgsSentPerSec_Type = Gauge32
_SmtpSrvrMsgsSentPerSec_Object = MibTableColumn
smtpSrvrMsgsSentPerSec = _SmtpSrvrMsgsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 101),
    _SmtpSrvrMsgsSentPerSec_Type()
)
smtpSrvrMsgsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrMsgsSentPerSec.setStatus("current")
_SmtpSrvrNDRsGenerated_Type = Gauge32
_SmtpSrvrNDRsGenerated_Object = MibTableColumn
smtpSrvrNDRsGenerated = _SmtpSrvrNDRsGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 102),
    _SmtpSrvrNDRsGenerated_Type()
)
smtpSrvrNDRsGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrNDRsGenerated.setStatus("current")
_SmtpSrvrNumberOfMailFilesOpen_Type = Gauge32
_SmtpSrvrNumberOfMailFilesOpen_Object = MibTableColumn
smtpSrvrNumberOfMailFilesOpen = _SmtpSrvrNumberOfMailFilesOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 103),
    _SmtpSrvrNumberOfMailFilesOpen_Type()
)
smtpSrvrNumberOfMailFilesOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrNumberOfMailFilesOpen.setStatus("current")
_SmtpSrvrNumberOfQueueFilesOpen_Type = Gauge32
_SmtpSrvrNumberOfQueueFilesOpen_Object = MibTableColumn
smtpSrvrNumberOfQueueFilesOpen = _SmtpSrvrNumberOfQueueFilesOpen_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 104),
    _SmtpSrvrNumberOfQueueFilesOpen_Type()
)
smtpSrvrNumberOfQueueFilesOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrNumberOfQueueFilesOpen.setStatus("current")
_SmtpSrvrOutboundConnsCurrent_Type = Gauge32
_SmtpSrvrOutboundConnsCurrent_Object = MibTableColumn
smtpSrvrOutboundConnsCurrent = _SmtpSrvrOutboundConnsCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 105),
    _SmtpSrvrOutboundConnsCurrent_Type()
)
smtpSrvrOutboundConnsCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrOutboundConnsCurrent.setStatus("current")
_SmtpSrvrOutboundConnsRfsd_Type = Gauge32
_SmtpSrvrOutboundConnsRfsd_Object = MibTableColumn
smtpSrvrOutboundConnsRfsd = _SmtpSrvrOutboundConnsRfsd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 106),
    _SmtpSrvrOutboundConnsRfsd_Type()
)
smtpSrvrOutboundConnsRfsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrOutboundConnsRfsd.setStatus("current")
_SmtpSrvrOutboundConnsTotal_Type = Gauge32
_SmtpSrvrOutboundConnsTotal_Object = MibTableColumn
smtpSrvrOutboundConnsTotal = _SmtpSrvrOutboundConnsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 107),
    _SmtpSrvrOutboundConnsTotal_Type()
)
smtpSrvrOutboundConnsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrOutboundConnsTotal.setStatus("current")
_SmtpSrvrPickupDirMsgsRtrvdTotal_Type = Gauge32
_SmtpSrvrPickupDirMsgsRtrvdTotal_Object = MibTableColumn
smtpSrvrPickupDirMsgsRtrvdTotal = _SmtpSrvrPickupDirMsgsRtrvdTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 108),
    _SmtpSrvrPickupDirMsgsRtrvdTotal_Type()
)
smtpSrvrPickupDirMsgsRtrvdTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrPickupDirMsgsRtrvdTotal.setStatus("current")
_SmtpSrvrPickupDirMsgsRtrvdPerSec_Type = Gauge32
_SmtpSrvrPickupDirMsgsRtrvdPerSec_Object = MibTableColumn
smtpSrvrPickupDirMsgsRtrvdPerSec = _SmtpSrvrPickupDirMsgsRtrvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 109),
    _SmtpSrvrPickupDirMsgsRtrvdPerSec_Type()
)
smtpSrvrPickupDirMsgsRtrvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrPickupDirMsgsRtrvdPerSec.setStatus("current")
_SmtpSrvrRemoteQueueLength_Type = Gauge32
_SmtpSrvrRemoteQueueLength_Object = MibTableColumn
smtpSrvrRemoteQueueLength = _SmtpSrvrRemoteQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 110),
    _SmtpSrvrRemoteQueueLength_Type()
)
smtpSrvrRemoteQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrRemoteQueueLength.setStatus("current")
_SmtpSrvrRemoteRetryQueueLength_Type = Gauge32
_SmtpSrvrRemoteRetryQueueLength_Object = MibTableColumn
smtpSrvrRemoteRetryQueueLength = _SmtpSrvrRemoteRetryQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 111),
    _SmtpSrvrRemoteRetryQueueLength_Type()
)
smtpSrvrRemoteRetryQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrRemoteRetryQueueLength.setStatus("current")
_SmtpSrvrRouteTableLookupsTotal_Type = Gauge32
_SmtpSrvrRouteTableLookupsTotal_Object = MibTableColumn
smtpSrvrRouteTableLookupsTotal = _SmtpSrvrRouteTableLookupsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 112),
    _SmtpSrvrRouteTableLookupsTotal_Type()
)
smtpSrvrRouteTableLookupsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrRouteTableLookupsTotal.setStatus("current")
_SmtpSrvrRouteTableLookupsPerSec_Type = Gauge32
_SmtpSrvrRouteTableLookupsPerSec_Object = MibTableColumn
smtpSrvrRouteTableLookupsPerSec = _SmtpSrvrRouteTableLookupsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 113),
    _SmtpSrvrRouteTableLookupsPerSec_Type()
)
smtpSrvrRouteTableLookupsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrRouteTableLookupsPerSec.setStatus("current")
_SmtpSrvrTotalConnErrors_Type = Gauge32
_SmtpSrvrTotalConnErrors_Object = MibTableColumn
smtpSrvrTotalConnErrors = _SmtpSrvrTotalConnErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 114),
    _SmtpSrvrTotalConnErrors_Type()
)
smtpSrvrTotalConnErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrTotalConnErrors.setStatus("current")
_SmtpSrvrTotalDSNFail_Type = Gauge32
_SmtpSrvrTotalDSNFail_Object = MibTableColumn
smtpSrvrTotalDSNFail = _SmtpSrvrTotalDSNFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 115),
    _SmtpSrvrTotalDSNFail_Type()
)
smtpSrvrTotalDSNFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrTotalDSNFail.setStatus("current")
_SmtpSrvrTotalMsgsSubmitted_Type = Gauge32
_SmtpSrvrTotalMsgsSubmitted_Object = MibTableColumn
smtpSrvrTotalMsgsSubmitted = _SmtpSrvrTotalMsgsSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 116),
    _SmtpSrvrTotalMsgsSubmitted_Type()
)
smtpSrvrTotalMsgsSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smtpSrvrTotalMsgsSubmitted.setStatus("current")
_System_ObjectIdentity = ObjectIdentity
system = _System_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77)
)
if mibBuilder.loadTexts:
    system.setStatus("current")
_SystemPercentRegistryQuotaInUse_Type = Gauge32
_SystemPercentRegistryQuotaInUse_Object = MibScalar
systemPercentRegistryQuotaInUse = _SystemPercentRegistryQuotaInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 1),
    _SystemPercentRegistryQuotaInUse_Type()
)
systemPercentRegistryQuotaInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemPercentRegistryQuotaInUse.setStatus("current")
_SystemAlignmentFixupsPerSec_Type = Gauge32
_SystemAlignmentFixupsPerSec_Object = MibScalar
systemAlignmentFixupsPerSec = _SystemAlignmentFixupsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 2),
    _SystemAlignmentFixupsPerSec_Type()
)
systemAlignmentFixupsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemAlignmentFixupsPerSec.setStatus("current")
_SystemContextSwitchesPerSec_Type = Gauge32
_SystemContextSwitchesPerSec_Object = MibScalar
systemContextSwitchesPerSec = _SystemContextSwitchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 3),
    _SystemContextSwitchesPerSec_Type()
)
systemContextSwitchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemContextSwitchesPerSec.setStatus("current")
_SystemExceptionDispatchesPerSec_Type = Gauge32
_SystemExceptionDispatchesPerSec_Object = MibScalar
systemExceptionDispatchesPerSec = _SystemExceptionDispatchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 4),
    _SystemExceptionDispatchesPerSec_Type()
)
systemExceptionDispatchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemExceptionDispatchesPerSec.setStatus("current")
_SystemFileControlBytesPerSec_Type = Gauge32
_SystemFileControlBytesPerSec_Object = MibScalar
systemFileControlBytesPerSec = _SystemFileControlBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 5),
    _SystemFileControlBytesPerSec_Type()
)
systemFileControlBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileControlBytesPerSec.setStatus("current")
_SystemFileControlOperationPerSec_Type = Gauge32
_SystemFileControlOperationPerSec_Object = MibScalar
systemFileControlOperationPerSec = _SystemFileControlOperationPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 6),
    _SystemFileControlOperationPerSec_Type()
)
systemFileControlOperationPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileControlOperationPerSec.setStatus("current")
_SystemFileDataOperationsPerSec_Type = Gauge32
_SystemFileDataOperationsPerSec_Object = MibScalar
systemFileDataOperationsPerSec = _SystemFileDataOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 7),
    _SystemFileDataOperationsPerSec_Type()
)
systemFileDataOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileDataOperationsPerSec.setStatus("current")
_SystemFileReadBytesPerSec_Type = Gauge32
_SystemFileReadBytesPerSec_Object = MibScalar
systemFileReadBytesPerSec = _SystemFileReadBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 8),
    _SystemFileReadBytesPerSec_Type()
)
systemFileReadBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileReadBytesPerSec.setStatus("current")
_SystemFileReadOperationsPerSec_Type = Gauge32
_SystemFileReadOperationsPerSec_Object = MibScalar
systemFileReadOperationsPerSec = _SystemFileReadOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 9),
    _SystemFileReadOperationsPerSec_Type()
)
systemFileReadOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileReadOperationsPerSec.setStatus("current")
_SystemFileWriteBytesPerSec_Type = Gauge32
_SystemFileWriteBytesPerSec_Object = MibScalar
systemFileWriteBytesPerSec = _SystemFileWriteBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 10),
    _SystemFileWriteBytesPerSec_Type()
)
systemFileWriteBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileWriteBytesPerSec.setStatus("current")
_SystemFileWriteOperationsPerSec_Type = Gauge32
_SystemFileWriteOperationsPerSec_Object = MibScalar
systemFileWriteOperationsPerSec = _SystemFileWriteOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 11),
    _SystemFileWriteOperationsPerSec_Type()
)
systemFileWriteOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFileWriteOperationsPerSec.setStatus("current")
_SystemFloatingEmulationsPerSec_Type = Gauge32
_SystemFloatingEmulationsPerSec_Object = MibScalar
systemFloatingEmulationsPerSec = _SystemFloatingEmulationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 12),
    _SystemFloatingEmulationsPerSec_Type()
)
systemFloatingEmulationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFloatingEmulationsPerSec.setStatus("current")
_SystemProcesses_Type = Gauge32
_SystemProcesses_Object = MibScalar
systemProcesses = _SystemProcesses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 13),
    _SystemProcesses_Type()
)
systemProcesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemProcesses.setStatus("current")
_SystemProcessorQueueLength_Type = Gauge32
_SystemProcessorQueueLength_Object = MibScalar
systemProcessorQueueLength = _SystemProcessorQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 14),
    _SystemProcessorQueueLength_Type()
)
systemProcessorQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemProcessorQueueLength.setStatus("current")
_SystemSystemCallsPerSec_Type = Gauge32
_SystemSystemCallsPerSec_Object = MibScalar
systemSystemCallsPerSec = _SystemSystemCallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 15),
    _SystemSystemCallsPerSec_Type()
)
systemSystemCallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemSystemCallsPerSec.setStatus("current")
_SystemSystemUpTime_Type = Gauge32
_SystemSystemUpTime_Object = MibScalar
systemSystemUpTime = _SystemSystemUpTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 16),
    _SystemSystemUpTime_Type()
)
systemSystemUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemSystemUpTime.setStatus("current")
_SystemThreads_Type = Gauge32
_SystemThreads_Object = MibScalar
systemThreads = _SystemThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 17),
    _SystemThreads_Type()
)
systemThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemThreads.setStatus("current")
_TcpV4_ObjectIdentity = ObjectIdentity
tcpV4 = _TcpV4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78)
)
if mibBuilder.loadTexts:
    tcpV4.setStatus("current")
_TcpV4ConnectionFailures_Type = Gauge32
_TcpV4ConnectionFailures_Object = MibScalar
tcpV4ConnectionFailures = _TcpV4ConnectionFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 1),
    _TcpV4ConnectionFailures_Type()
)
tcpV4ConnectionFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4ConnectionFailures.setStatus("current")
_TcpV4ConnectionsActive_Type = Gauge32
_TcpV4ConnectionsActive_Object = MibScalar
tcpV4ConnectionsActive = _TcpV4ConnectionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 2),
    _TcpV4ConnectionsActive_Type()
)
tcpV4ConnectionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4ConnectionsActive.setStatus("current")
_TcpV4ConnectionsEstablished_Type = Gauge32
_TcpV4ConnectionsEstablished_Object = MibScalar
tcpV4ConnectionsEstablished = _TcpV4ConnectionsEstablished_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 3),
    _TcpV4ConnectionsEstablished_Type()
)
tcpV4ConnectionsEstablished.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4ConnectionsEstablished.setStatus("current")
_TcpV4ConnectionsPassive_Type = Gauge32
_TcpV4ConnectionsPassive_Object = MibScalar
tcpV4ConnectionsPassive = _TcpV4ConnectionsPassive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 4),
    _TcpV4ConnectionsPassive_Type()
)
tcpV4ConnectionsPassive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4ConnectionsPassive.setStatus("current")
_TcpV4ConnectionsReset_Type = Gauge32
_TcpV4ConnectionsReset_Object = MibScalar
tcpV4ConnectionsReset = _TcpV4ConnectionsReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 5),
    _TcpV4ConnectionsReset_Type()
)
tcpV4ConnectionsReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4ConnectionsReset.setStatus("current")
_TcpV4SegmentsReceivedPerSec_Type = Gauge32
_TcpV4SegmentsReceivedPerSec_Object = MibScalar
tcpV4SegmentsReceivedPerSec = _TcpV4SegmentsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 6),
    _TcpV4SegmentsReceivedPerSec_Type()
)
tcpV4SegmentsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4SegmentsReceivedPerSec.setStatus("current")
_TcpV4SegmentsRetransmittedPerSec_Type = Gauge32
_TcpV4SegmentsRetransmittedPerSec_Object = MibScalar
tcpV4SegmentsRetransmittedPerSec = _TcpV4SegmentsRetransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 7),
    _TcpV4SegmentsRetransmittedPerSec_Type()
)
tcpV4SegmentsRetransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4SegmentsRetransmittedPerSec.setStatus("current")
_TcpV4SegmentsSentPerSec_Type = Gauge32
_TcpV4SegmentsSentPerSec_Object = MibScalar
tcpV4SegmentsSentPerSec = _TcpV4SegmentsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 8),
    _TcpV4SegmentsSentPerSec_Type()
)
tcpV4SegmentsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4SegmentsSentPerSec.setStatus("current")
_TcpV4SegmentsPerSec_Type = Gauge32
_TcpV4SegmentsPerSec_Object = MibScalar
tcpV4SegmentsPerSec = _TcpV4SegmentsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 9),
    _TcpV4SegmentsPerSec_Type()
)
tcpV4SegmentsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV4SegmentsPerSec.setStatus("current")
_TcpV6_ObjectIdentity = ObjectIdentity
tcpV6 = _TcpV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79)
)
_TcpV6ConnectionFailures_Type = Gauge32
_TcpV6ConnectionFailures_Object = MibScalar
tcpV6ConnectionFailures = _TcpV6ConnectionFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 1),
    _TcpV6ConnectionFailures_Type()
)
tcpV6ConnectionFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6ConnectionFailures.setStatus("current")
_TcpV6ConnectionsActive_Type = Gauge32
_TcpV6ConnectionsActive_Object = MibScalar
tcpV6ConnectionsActive = _TcpV6ConnectionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 2),
    _TcpV6ConnectionsActive_Type()
)
tcpV6ConnectionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6ConnectionsActive.setStatus("current")
_TcpV6ConnectionsEstablished_Type = Gauge32
_TcpV6ConnectionsEstablished_Object = MibScalar
tcpV6ConnectionsEstablished = _TcpV6ConnectionsEstablished_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 3),
    _TcpV6ConnectionsEstablished_Type()
)
tcpV6ConnectionsEstablished.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6ConnectionsEstablished.setStatus("current")
_TcpV6ConnectionsPassive_Type = Gauge32
_TcpV6ConnectionsPassive_Object = MibScalar
tcpV6ConnectionsPassive = _TcpV6ConnectionsPassive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 4),
    _TcpV6ConnectionsPassive_Type()
)
tcpV6ConnectionsPassive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6ConnectionsPassive.setStatus("current")
_TcpV6ConnectionsReset_Type = Gauge32
_TcpV6ConnectionsReset_Object = MibScalar
tcpV6ConnectionsReset = _TcpV6ConnectionsReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 5),
    _TcpV6ConnectionsReset_Type()
)
tcpV6ConnectionsReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6ConnectionsReset.setStatus("current")
_TcpV6SegmentsReceivedPerSec_Type = Gauge32
_TcpV6SegmentsReceivedPerSec_Object = MibScalar
tcpV6SegmentsReceivedPerSec = _TcpV6SegmentsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 6),
    _TcpV6SegmentsReceivedPerSec_Type()
)
tcpV6SegmentsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6SegmentsReceivedPerSec.setStatus("current")
_TcpV6SegmentsRetransmittedPerSec_Type = Gauge32
_TcpV6SegmentsRetransmittedPerSec_Object = MibScalar
tcpV6SegmentsRetransmittedPerSec = _TcpV6SegmentsRetransmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 7),
    _TcpV6SegmentsRetransmittedPerSec_Type()
)
tcpV6SegmentsRetransmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6SegmentsRetransmittedPerSec.setStatus("current")
_TcpV6SegmentsSentPerSec_Type = Gauge32
_TcpV6SegmentsSentPerSec_Object = MibScalar
tcpV6SegmentsSentPerSec = _TcpV6SegmentsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 8),
    _TcpV6SegmentsSentPerSec_Type()
)
tcpV6SegmentsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6SegmentsSentPerSec.setStatus("current")
_TcpV6SegmentsPerSec_Type = Gauge32
_TcpV6SegmentsPerSec_Object = MibScalar
tcpV6SegmentsPerSec = _TcpV6SegmentsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 9),
    _TcpV6SegmentsPerSec_Type()
)
tcpV6SegmentsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpV6SegmentsPerSec.setStatus("current")
_Telephony_ObjectIdentity = ObjectIdentity
telephony = _Telephony_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80)
)
if mibBuilder.loadTexts:
    telephony.setStatus("current")
_TelephonyActiveLines_Type = Gauge32
_TelephonyActiveLines_Object = MibScalar
telephonyActiveLines = _TelephonyActiveLines_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 1),
    _TelephonyActiveLines_Type()
)
telephonyActiveLines.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyActiveLines.setStatus("current")
_TelephonyActiveTelephones_Type = Gauge32
_TelephonyActiveTelephones_Object = MibScalar
telephonyActiveTelephones = _TelephonyActiveTelephones_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 2),
    _TelephonyActiveTelephones_Type()
)
telephonyActiveTelephones.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyActiveTelephones.setStatus("current")
_TelephonyClientApps_Type = Gauge32
_TelephonyClientApps_Object = MibScalar
telephonyClientApps = _TelephonyClientApps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 3),
    _TelephonyClientApps_Type()
)
telephonyClientApps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyClientApps.setStatus("current")
_TelephonyCurrentIncomingCalls_Type = Gauge32
_TelephonyCurrentIncomingCalls_Object = MibScalar
telephonyCurrentIncomingCalls = _TelephonyCurrentIncomingCalls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 4),
    _TelephonyCurrentIncomingCalls_Type()
)
telephonyCurrentIncomingCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyCurrentIncomingCalls.setStatus("current")
_TelephonyCurrentOutgoingCalls_Type = Gauge32
_TelephonyCurrentOutgoingCalls_Object = MibScalar
telephonyCurrentOutgoingCalls = _TelephonyCurrentOutgoingCalls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 5),
    _TelephonyCurrentOutgoingCalls_Type()
)
telephonyCurrentOutgoingCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyCurrentOutgoingCalls.setStatus("current")
_TelephonyIncomingCallsPerSec_Type = Gauge32
_TelephonyIncomingCallsPerSec_Object = MibScalar
telephonyIncomingCallsPerSec = _TelephonyIncomingCallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 6),
    _TelephonyIncomingCallsPerSec_Type()
)
telephonyIncomingCallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyIncomingCallsPerSec.setStatus("current")
_TelephonyLines_Type = Gauge32
_TelephonyLines_Object = MibScalar
telephonyLines = _TelephonyLines_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 7),
    _TelephonyLines_Type()
)
telephonyLines.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyLines.setStatus("current")
_TelephonyOutgoingCallsPerSec_Type = Gauge32
_TelephonyOutgoingCallsPerSec_Object = MibScalar
telephonyOutgoingCallsPerSec = _TelephonyOutgoingCallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 8),
    _TelephonyOutgoingCallsPerSec_Type()
)
telephonyOutgoingCallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyOutgoingCallsPerSec.setStatus("current")
_TelephonyTelephoneDevices_Type = Gauge32
_TelephonyTelephoneDevices_Object = MibScalar
telephonyTelephoneDevices = _TelephonyTelephoneDevices_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 9),
    _TelephonyTelephoneDevices_Type()
)
telephonyTelephoneDevices.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telephonyTelephoneDevices.setStatus("current")
_TerminalServices_ObjectIdentity = ObjectIdentity
terminalServices = _TerminalServices_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 81)
)
if mibBuilder.loadTexts:
    terminalServices.setStatus("current")
_TsActiveSessions_Type = Gauge32
_TsActiveSessions_Object = MibScalar
tsActiveSessions = _TsActiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 81, 1),
    _TsActiveSessions_Type()
)
tsActiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsActiveSessions.setStatus("current")
_TsInactiveSessions_Type = Gauge32
_TsInactiveSessions_Object = MibScalar
tsInactiveSessions = _TsInactiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 81, 2),
    _TsInactiveSessions_Type()
)
tsInactiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsInactiveSessions.setStatus("current")
_TsTotalSessions_Type = Gauge32
_TsTotalSessions_Object = MibScalar
tsTotalSessions = _TsTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 81, 3),
    _TsTotalSessions_Type()
)
tsTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsTotalSessions.setStatus("current")
_TerminalServicesSessionTable_Object = MibTable
terminalServicesSessionTable = _TerminalServicesSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82)
)
if mibBuilder.loadTexts:
    terminalServicesSessionTable.setStatus("current")
_TerminalServicesSessionEntry_Object = MibTableRow
terminalServicesSessionEntry = _TerminalServicesSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1)
)
terminalServicesSessionEntry.setIndexNames(
    (0, "INFORMANT-ADV", "tssInstance"),
)
if mibBuilder.loadTexts:
    terminalServicesSessionEntry.setStatus("current")
_TssInstance_Type = InstanceName
_TssInstance_Object = MibTableColumn
tssInstance = _TssInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 1),
    _TssInstance_Type()
)
tssInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInstance.setStatus("current")
_TssPercentPrivilegedTime_Type = Gauge32
_TssPercentPrivilegedTime_Object = MibTableColumn
tssPercentPrivilegedTime = _TssPercentPrivilegedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 2),
    _TssPercentPrivilegedTime_Type()
)
tssPercentPrivilegedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPercentPrivilegedTime.setStatus("current")
_TssPercentProcessorTime_Type = Gauge32
_TssPercentProcessorTime_Object = MibTableColumn
tssPercentProcessorTime = _TssPercentProcessorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 3),
    _TssPercentProcessorTime_Type()
)
tssPercentProcessorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPercentProcessorTime.setStatus("current")
_TssPercentUserTime_Type = Gauge32
_TssPercentUserTime_Object = MibTableColumn
tssPercentUserTime = _TssPercentUserTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 4),
    _TssPercentUserTime_Type()
)
tssPercentUserTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPercentUserTime.setStatus("current")
_TssHandleCount_Type = Gauge32
_TssHandleCount_Object = MibTableColumn
tssHandleCount = _TssHandleCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 5),
    _TssHandleCount_Type()
)
tssHandleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssHandleCount.setStatus("current")
_TssInputAsyncFrameError_Type = Gauge32
_TssInputAsyncFrameError_Object = MibTableColumn
tssInputAsyncFrameError = _TssInputAsyncFrameError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 6),
    _TssInputAsyncFrameError_Type()
)
tssInputAsyncFrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputAsyncFrameError.setStatus("current")
_TssInputAsyncOverflow_Type = Gauge32
_TssInputAsyncOverflow_Object = MibTableColumn
tssInputAsyncOverflow = _TssInputAsyncOverflow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 7),
    _TssInputAsyncOverflow_Type()
)
tssInputAsyncOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputAsyncOverflow.setStatus("current")
_TssInputAsyncOverrun_Type = Gauge32
_TssInputAsyncOverrun_Object = MibTableColumn
tssInputAsyncOverrun = _TssInputAsyncOverrun_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 8),
    _TssInputAsyncOverrun_Type()
)
tssInputAsyncOverrun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputAsyncOverrun.setStatus("current")
_TssInputAsyncParityError_Type = Gauge32
_TssInputAsyncParityError_Object = MibTableColumn
tssInputAsyncParityError = _TssInputAsyncParityError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 9),
    _TssInputAsyncParityError_Type()
)
tssInputAsyncParityError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputAsyncParityError.setStatus("current")
_TssInputBytes_Type = Gauge32
_TssInputBytes_Object = MibTableColumn
tssInputBytes = _TssInputBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 10),
    _TssInputBytes_Type()
)
tssInputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputBytes.setStatus("current")
_TssInputCompressFlushes_Type = Gauge32
_TssInputCompressFlushes_Object = MibTableColumn
tssInputCompressFlushes = _TssInputCompressFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 11),
    _TssInputCompressFlushes_Type()
)
tssInputCompressFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputCompressFlushes.setStatus("current")
_TssInputCompressedBytes_Type = Gauge32
_TssInputCompressedBytes_Object = MibTableColumn
tssInputCompressedBytes = _TssInputCompressedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 12),
    _TssInputCompressedBytes_Type()
)
tssInputCompressedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputCompressedBytes.setStatus("current")
_TssInputCompressionRatio_Type = Gauge32
_TssInputCompressionRatio_Object = MibTableColumn
tssInputCompressionRatio = _TssInputCompressionRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 13),
    _TssInputCompressionRatio_Type()
)
tssInputCompressionRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputCompressionRatio.setStatus("current")
_TssInputErrors_Type = Gauge32
_TssInputErrors_Object = MibTableColumn
tssInputErrors = _TssInputErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 14),
    _TssInputErrors_Type()
)
tssInputErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputErrors.setStatus("current")
_TssInputFrames_Type = Gauge32
_TssInputFrames_Object = MibTableColumn
tssInputFrames = _TssInputFrames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 15),
    _TssInputFrames_Type()
)
tssInputFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputFrames.setStatus("current")
_TssInputTimeouts_Type = Gauge32
_TssInputTimeouts_Object = MibTableColumn
tssInputTimeouts = _TssInputTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 16),
    _TssInputTimeouts_Type()
)
tssInputTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputTimeouts.setStatus("current")
_TssInputTransportErrors_Type = Gauge32
_TssInputTransportErrors_Object = MibTableColumn
tssInputTransportErrors = _TssInputTransportErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 17),
    _TssInputTransportErrors_Type()
)
tssInputTransportErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputTransportErrors.setStatus("current")
_TssInputWaitForOutBuf_Type = Gauge32
_TssInputWaitForOutBuf_Object = MibTableColumn
tssInputWaitForOutBuf = _TssInputWaitForOutBuf_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 18),
    _TssInputWaitForOutBuf_Type()
)
tssInputWaitForOutBuf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputWaitForOutBuf.setStatus("current")
_TssInputWdBytes_Type = Gauge32
_TssInputWdBytes_Object = MibTableColumn
tssInputWdBytes = _TssInputWdBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 19),
    _TssInputWdBytes_Type()
)
tssInputWdBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputWdBytes.setStatus("current")
_TssInputWdFrames_Type = Gauge32
_TssInputWdFrames_Object = MibTableColumn
tssInputWdFrames = _TssInputWdFrames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 20),
    _TssInputWdFrames_Type()
)
tssInputWdFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssInputWdFrames.setStatus("current")
_TssOutputAsyncFrameError_Type = Gauge32
_TssOutputAsyncFrameError_Object = MibTableColumn
tssOutputAsyncFrameError = _TssOutputAsyncFrameError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 21),
    _TssOutputAsyncFrameError_Type()
)
tssOutputAsyncFrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputAsyncFrameError.setStatus("current")
_TssOutputAsyncOverflow_Type = Gauge32
_TssOutputAsyncOverflow_Object = MibTableColumn
tssOutputAsyncOverflow = _TssOutputAsyncOverflow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 22),
    _TssOutputAsyncOverflow_Type()
)
tssOutputAsyncOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputAsyncOverflow.setStatus("current")
_TssOutputAsyncOverrun_Type = Gauge32
_TssOutputAsyncOverrun_Object = MibTableColumn
tssOutputAsyncOverrun = _TssOutputAsyncOverrun_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 23),
    _TssOutputAsyncOverrun_Type()
)
tssOutputAsyncOverrun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputAsyncOverrun.setStatus("current")
_TssOutputAsyncParityError_Type = Gauge32
_TssOutputAsyncParityError_Object = MibTableColumn
tssOutputAsyncParityError = _TssOutputAsyncParityError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 24),
    _TssOutputAsyncParityError_Type()
)
tssOutputAsyncParityError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputAsyncParityError.setStatus("current")
_TssOutputBytes_Type = Gauge32
_TssOutputBytes_Object = MibTableColumn
tssOutputBytes = _TssOutputBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 25),
    _TssOutputBytes_Type()
)
tssOutputBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputBytes.setStatus("current")
_TssOutputCompressFlushes_Type = Gauge32
_TssOutputCompressFlushes_Object = MibTableColumn
tssOutputCompressFlushes = _TssOutputCompressFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 26),
    _TssOutputCompressFlushes_Type()
)
tssOutputCompressFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputCompressFlushes.setStatus("current")
_TssOutputCompressedBytes_Type = Gauge32
_TssOutputCompressedBytes_Object = MibTableColumn
tssOutputCompressedBytes = _TssOutputCompressedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 27),
    _TssOutputCompressedBytes_Type()
)
tssOutputCompressedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputCompressedBytes.setStatus("current")
_TssOutputCompressionRatio_Type = Gauge32
_TssOutputCompressionRatio_Object = MibTableColumn
tssOutputCompressionRatio = _TssOutputCompressionRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 28),
    _TssOutputCompressionRatio_Type()
)
tssOutputCompressionRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputCompressionRatio.setStatus("current")
_TssOutputErrors_Type = Gauge32
_TssOutputErrors_Object = MibTableColumn
tssOutputErrors = _TssOutputErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 29),
    _TssOutputErrors_Type()
)
tssOutputErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputErrors.setStatus("current")
_TssOutputFrames_Type = Gauge32
_TssOutputFrames_Object = MibTableColumn
tssOutputFrames = _TssOutputFrames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 30),
    _TssOutputFrames_Type()
)
tssOutputFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputFrames.setStatus("current")
_TssOutputTimeouts_Type = Gauge32
_TssOutputTimeouts_Object = MibTableColumn
tssOutputTimeouts = _TssOutputTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 31),
    _TssOutputTimeouts_Type()
)
tssOutputTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputTimeouts.setStatus("current")
_TssOutputTransportErrors_Type = Gauge32
_TssOutputTransportErrors_Object = MibTableColumn
tssOutputTransportErrors = _TssOutputTransportErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 32),
    _TssOutputTransportErrors_Type()
)
tssOutputTransportErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputTransportErrors.setStatus("current")
_TssOutputWaitForOutBuf_Type = Gauge32
_TssOutputWaitForOutBuf_Object = MibTableColumn
tssOutputWaitForOutBuf = _TssOutputWaitForOutBuf_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 33),
    _TssOutputWaitForOutBuf_Type()
)
tssOutputWaitForOutBuf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputWaitForOutBuf.setStatus("current")
_TssOutputWdBytes_Type = Gauge32
_TssOutputWdBytes_Object = MibTableColumn
tssOutputWdBytes = _TssOutputWdBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 34),
    _TssOutputWdBytes_Type()
)
tssOutputWdBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputWdBytes.setStatus("current")
_TssOutputWdFrames_Type = Gauge32
_TssOutputWdFrames_Object = MibTableColumn
tssOutputWdFrames = _TssOutputWdFrames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 35),
    _TssOutputWdFrames_Type()
)
tssOutputWdFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssOutputWdFrames.setStatus("current")
_TssPageFaultsPerSec_Type = Gauge32
_TssPageFaultsPerSec_Object = MibTableColumn
tssPageFaultsPerSec = _TssPageFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 36),
    _TssPageFaultsPerSec_Type()
)
tssPageFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPageFaultsPerSec.setStatus("current")
_TssPageFileBytes_Type = Gauge32
_TssPageFileBytes_Object = MibTableColumn
tssPageFileBytes = _TssPageFileBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 37),
    _TssPageFileBytes_Type()
)
tssPageFileBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPageFileBytes.setStatus("current")
_TssPageFileBytesPeak_Type = Gauge32
_TssPageFileBytesPeak_Object = MibTableColumn
tssPageFileBytesPeak = _TssPageFileBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 38),
    _TssPageFileBytesPeak_Type()
)
tssPageFileBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPageFileBytesPeak.setStatus("current")
_TssPoolNonpagedBytes_Type = Gauge32
_TssPoolNonpagedBytes_Object = MibTableColumn
tssPoolNonpagedBytes = _TssPoolNonpagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 39),
    _TssPoolNonpagedBytes_Type()
)
tssPoolNonpagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPoolNonpagedBytes.setStatus("current")
_TssPoolPagedBytes_Type = Gauge32
_TssPoolPagedBytes_Object = MibTableColumn
tssPoolPagedBytes = _TssPoolPagedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 40),
    _TssPoolPagedBytes_Type()
)
tssPoolPagedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPoolPagedBytes.setStatus("current")
_TssPrivateBytes_Type = Gauge32
_TssPrivateBytes_Object = MibTableColumn
tssPrivateBytes = _TssPrivateBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 41),
    _TssPrivateBytes_Type()
)
tssPrivateBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssPrivateBytes.setStatus("current")
_TssProtocolBitmapCacheHitRatio_Type = Gauge32
_TssProtocolBitmapCacheHitRatio_Object = MibTableColumn
tssProtocolBitmapCacheHitRatio = _TssProtocolBitmapCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 42),
    _TssProtocolBitmapCacheHitRatio_Type()
)
tssProtocolBitmapCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolBitmapCacheHitRatio.setStatus("current")
_TssProtocolBitmapCacheHits_Type = Gauge32
_TssProtocolBitmapCacheHits_Object = MibTableColumn
tssProtocolBitmapCacheHits = _TssProtocolBitmapCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 43),
    _TssProtocolBitmapCacheHits_Type()
)
tssProtocolBitmapCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolBitmapCacheHits.setStatus("current")
_TssProtocolBitmapCacheReads_Type = Gauge32
_TssProtocolBitmapCacheReads_Object = MibTableColumn
tssProtocolBitmapCacheReads = _TssProtocolBitmapCacheReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 44),
    _TssProtocolBitmapCacheReads_Type()
)
tssProtocolBitmapCacheReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolBitmapCacheReads.setStatus("current")
_TssProtocolBrushCacheHitRatio_Type = Gauge32
_TssProtocolBrushCacheHitRatio_Object = MibTableColumn
tssProtocolBrushCacheHitRatio = _TssProtocolBrushCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 45),
    _TssProtocolBrushCacheHitRatio_Type()
)
tssProtocolBrushCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolBrushCacheHitRatio.setStatus("current")
_TssProtocolBrushCacheHits_Type = Gauge32
_TssProtocolBrushCacheHits_Object = MibTableColumn
tssProtocolBrushCacheHits = _TssProtocolBrushCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 46),
    _TssProtocolBrushCacheHits_Type()
)
tssProtocolBrushCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolBrushCacheHits.setStatus("current")
_TssProtocolBrushCacheReads_Type = Gauge32
_TssProtocolBrushCacheReads_Object = MibTableColumn
tssProtocolBrushCacheReads = _TssProtocolBrushCacheReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 47),
    _TssProtocolBrushCacheReads_Type()
)
tssProtocolBrushCacheReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolBrushCacheReads.setStatus("current")
_TssProtocolGlyphCacheHitRatio_Type = Gauge32
_TssProtocolGlyphCacheHitRatio_Object = MibTableColumn
tssProtocolGlyphCacheHitRatio = _TssProtocolGlyphCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 48),
    _TssProtocolGlyphCacheHitRatio_Type()
)
tssProtocolGlyphCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolGlyphCacheHitRatio.setStatus("current")
_TssProtocolGlyphCacheHits_Type = Gauge32
_TssProtocolGlyphCacheHits_Object = MibTableColumn
tssProtocolGlyphCacheHits = _TssProtocolGlyphCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 49),
    _TssProtocolGlyphCacheHits_Type()
)
tssProtocolGlyphCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolGlyphCacheHits.setStatus("current")
_TssProtocolGlyphCacheReads_Type = Gauge32
_TssProtocolGlyphCacheReads_Object = MibTableColumn
tssProtocolGlyphCacheReads = _TssProtocolGlyphCacheReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 50),
    _TssProtocolGlyphCacheReads_Type()
)
tssProtocolGlyphCacheReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolGlyphCacheReads.setStatus("current")
_TssProtocolSvScrnBtmpCachHtRatio_Type = Gauge32
_TssProtocolSvScrnBtmpCachHtRatio_Object = MibTableColumn
tssProtocolSvScrnBtmpCachHtRatio = _TssProtocolSvScrnBtmpCachHtRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 51),
    _TssProtocolSvScrnBtmpCachHtRatio_Type()
)
tssProtocolSvScrnBtmpCachHtRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolSvScrnBtmpCachHtRatio.setStatus("current")
_TssProtocolSvScrnBtmpCachHts_Type = Gauge32
_TssProtocolSvScrnBtmpCachHts_Object = MibTableColumn
tssProtocolSvScrnBtmpCachHts = _TssProtocolSvScrnBtmpCachHts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 52),
    _TssProtocolSvScrnBtmpCachHts_Type()
)
tssProtocolSvScrnBtmpCachHts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolSvScrnBtmpCachHts.setStatus("current")
_TssProtocolSvScrnBtmpCachReads_Type = Gauge32
_TssProtocolSvScrnBtmpCachReads_Object = MibTableColumn
tssProtocolSvScrnBtmpCachReads = _TssProtocolSvScrnBtmpCachReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 53),
    _TssProtocolSvScrnBtmpCachReads_Type()
)
tssProtocolSvScrnBtmpCachReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssProtocolSvScrnBtmpCachReads.setStatus("current")
_TssThreadCount_Type = Gauge32
_TssThreadCount_Object = MibTableColumn
tssThreadCount = _TssThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 54),
    _TssThreadCount_Type()
)
tssThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssThreadCount.setStatus("current")
_TssTotalAsyncFrameError_Type = Gauge32
_TssTotalAsyncFrameError_Object = MibTableColumn
tssTotalAsyncFrameError = _TssTotalAsyncFrameError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 55),
    _TssTotalAsyncFrameError_Type()
)
tssTotalAsyncFrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalAsyncFrameError.setStatus("current")
_TssTotalAsyncOverflow_Type = Gauge32
_TssTotalAsyncOverflow_Object = MibTableColumn
tssTotalAsyncOverflow = _TssTotalAsyncOverflow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 56),
    _TssTotalAsyncOverflow_Type()
)
tssTotalAsyncOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalAsyncOverflow.setStatus("current")
_TssTotalAsyncOverrun_Type = Gauge32
_TssTotalAsyncOverrun_Object = MibTableColumn
tssTotalAsyncOverrun = _TssTotalAsyncOverrun_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 57),
    _TssTotalAsyncOverrun_Type()
)
tssTotalAsyncOverrun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalAsyncOverrun.setStatus("current")
_TssTotalAsyncParityError_Type = Gauge32
_TssTotalAsyncParityError_Object = MibTableColumn
tssTotalAsyncParityError = _TssTotalAsyncParityError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 58),
    _TssTotalAsyncParityError_Type()
)
tssTotalAsyncParityError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalAsyncParityError.setStatus("current")
_TssTotalBytes_Type = Gauge32
_TssTotalBytes_Object = MibTableColumn
tssTotalBytes = _TssTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 59),
    _TssTotalBytes_Type()
)
tssTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalBytes.setStatus("current")
_TssTotalCompressFlushes_Type = Gauge32
_TssTotalCompressFlushes_Object = MibTableColumn
tssTotalCompressFlushes = _TssTotalCompressFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 60),
    _TssTotalCompressFlushes_Type()
)
tssTotalCompressFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalCompressFlushes.setStatus("current")
_TssTotalCompressedBytes_Type = Gauge32
_TssTotalCompressedBytes_Object = MibTableColumn
tssTotalCompressedBytes = _TssTotalCompressedBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 61),
    _TssTotalCompressedBytes_Type()
)
tssTotalCompressedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalCompressedBytes.setStatus("current")
_TssTotalCompressionRatio_Type = Gauge32
_TssTotalCompressionRatio_Object = MibTableColumn
tssTotalCompressionRatio = _TssTotalCompressionRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 62),
    _TssTotalCompressionRatio_Type()
)
tssTotalCompressionRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalCompressionRatio.setStatus("current")
_TssTotalErrors_Type = Gauge32
_TssTotalErrors_Object = MibTableColumn
tssTotalErrors = _TssTotalErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 63),
    _TssTotalErrors_Type()
)
tssTotalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalErrors.setStatus("current")
_TssTotalFrames_Type = Gauge32
_TssTotalFrames_Object = MibTableColumn
tssTotalFrames = _TssTotalFrames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 64),
    _TssTotalFrames_Type()
)
tssTotalFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalFrames.setStatus("current")
_TssTotalProtocolCacheHitRatio_Type = Gauge32
_TssTotalProtocolCacheHitRatio_Object = MibTableColumn
tssTotalProtocolCacheHitRatio = _TssTotalProtocolCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 65),
    _TssTotalProtocolCacheHitRatio_Type()
)
tssTotalProtocolCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalProtocolCacheHitRatio.setStatus("current")
_TssTotalProtocolCacheHits_Type = Gauge32
_TssTotalProtocolCacheHits_Object = MibTableColumn
tssTotalProtocolCacheHits = _TssTotalProtocolCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 66),
    _TssTotalProtocolCacheHits_Type()
)
tssTotalProtocolCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalProtocolCacheHits.setStatus("current")
_TssTotalProtocolCacheReads_Type = Gauge32
_TssTotalProtocolCacheReads_Object = MibTableColumn
tssTotalProtocolCacheReads = _TssTotalProtocolCacheReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 67),
    _TssTotalProtocolCacheReads_Type()
)
tssTotalProtocolCacheReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalProtocolCacheReads.setStatus("current")
_TssTotalTimeouts_Type = Gauge32
_TssTotalTimeouts_Object = MibTableColumn
tssTotalTimeouts = _TssTotalTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 68),
    _TssTotalTimeouts_Type()
)
tssTotalTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalTimeouts.setStatus("current")
_TssTotalTransportErrors_Type = Gauge32
_TssTotalTransportErrors_Object = MibTableColumn
tssTotalTransportErrors = _TssTotalTransportErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 69),
    _TssTotalTransportErrors_Type()
)
tssTotalTransportErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalTransportErrors.setStatus("current")
_TssTotalWaitForOutBuf_Type = Gauge32
_TssTotalWaitForOutBuf_Object = MibTableColumn
tssTotalWaitForOutBuf = _TssTotalWaitForOutBuf_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 70),
    _TssTotalWaitForOutBuf_Type()
)
tssTotalWaitForOutBuf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalWaitForOutBuf.setStatus("current")
_TssTotalWdBytes_Type = Gauge32
_TssTotalWdBytes_Object = MibTableColumn
tssTotalWdBytes = _TssTotalWdBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 71),
    _TssTotalWdBytes_Type()
)
tssTotalWdBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalWdBytes.setStatus("current")
_TssTotalWdFrames_Type = Gauge32
_TssTotalWdFrames_Object = MibTableColumn
tssTotalWdFrames = _TssTotalWdFrames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 72),
    _TssTotalWdFrames_Type()
)
tssTotalWdFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssTotalWdFrames.setStatus("current")
_TssVirtualBytes_Type = Gauge32
_TssVirtualBytes_Object = MibTableColumn
tssVirtualBytes = _TssVirtualBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 73),
    _TssVirtualBytes_Type()
)
tssVirtualBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssVirtualBytes.setStatus("current")
_TssVirtualBytesPeak_Type = Gauge32
_TssVirtualBytesPeak_Object = MibTableColumn
tssVirtualBytesPeak = _TssVirtualBytesPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 74),
    _TssVirtualBytesPeak_Type()
)
tssVirtualBytesPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssVirtualBytesPeak.setStatus("current")
_TssWorkingSet_Type = Gauge32
_TssWorkingSet_Object = MibTableColumn
tssWorkingSet = _TssWorkingSet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 75),
    _TssWorkingSet_Type()
)
tssWorkingSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssWorkingSet.setStatus("current")
_TssWorkingSetPeak_Type = Gauge32
_TssWorkingSetPeak_Object = MibTableColumn
tssWorkingSetPeak = _TssWorkingSetPeak_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 76),
    _TssWorkingSetPeak_Type()
)
tssWorkingSetPeak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tssWorkingSetPeak.setStatus("current")
_ThreadTable_Object = MibTable
threadTable = _ThreadTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83)
)
if mibBuilder.loadTexts:
    threadTable.setStatus("current")
_ThreadEntry_Object = MibTableRow
threadEntry = _ThreadEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1)
)
threadEntry.setIndexNames(
    (0, "INFORMANT-ADV", "threadInstance"),
)
if mibBuilder.loadTexts:
    threadEntry.setStatus("current")
_ThreadInstance_Type = InstanceName
_ThreadInstance_Object = MibTableColumn
threadInstance = _ThreadInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 1),
    _ThreadInstance_Type()
)
threadInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadInstance.setStatus("current")
_ThreadPercentPrivilegedTime_Type = Gauge32
_ThreadPercentPrivilegedTime_Object = MibTableColumn
threadPercentPrivilegedTime = _ThreadPercentPrivilegedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 2),
    _ThreadPercentPrivilegedTime_Type()
)
threadPercentPrivilegedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPercentPrivilegedTime.setStatus("current")
_ThreadPercentProcessorTime_Type = Gauge32
_ThreadPercentProcessorTime_Object = MibTableColumn
threadPercentProcessorTime = _ThreadPercentProcessorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 3),
    _ThreadPercentProcessorTime_Type()
)
threadPercentProcessorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPercentProcessorTime.setStatus("current")
_ThreadPercentUserTime_Type = Gauge32
_ThreadPercentUserTime_Object = MibTableColumn
threadPercentUserTime = _ThreadPercentUserTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 4),
    _ThreadPercentUserTime_Type()
)
threadPercentUserTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPercentUserTime.setStatus("current")
_ThreadContextSwitchesPerSec_Type = Gauge32
_ThreadContextSwitchesPerSec_Object = MibTableColumn
threadContextSwitchesPerSec = _ThreadContextSwitchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 5),
    _ThreadContextSwitchesPerSec_Type()
)
threadContextSwitchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadContextSwitchesPerSec.setStatus("current")
_ThreadElapsedTime_Type = Gauge32
_ThreadElapsedTime_Object = MibTableColumn
threadElapsedTime = _ThreadElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 6),
    _ThreadElapsedTime_Type()
)
threadElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadElapsedTime.setStatus("current")
_ThreadIDProcess_Type = Gauge32
_ThreadIDProcess_Object = MibTableColumn
threadIDProcess = _ThreadIDProcess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 7),
    _ThreadIDProcess_Type()
)
threadIDProcess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadIDProcess.setStatus("current")
_ThreadIDThread_Type = Gauge32
_ThreadIDThread_Object = MibTableColumn
threadIDThread = _ThreadIDThread_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 8),
    _ThreadIDThread_Type()
)
threadIDThread.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadIDThread.setStatus("current")
_ThreadPriorityBase_Type = Gauge32
_ThreadPriorityBase_Object = MibTableColumn
threadPriorityBase = _ThreadPriorityBase_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 9),
    _ThreadPriorityBase_Type()
)
threadPriorityBase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPriorityBase.setStatus("current")
_ThreadPriorityCurrent_Type = Gauge32
_ThreadPriorityCurrent_Object = MibTableColumn
threadPriorityCurrent = _ThreadPriorityCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 10),
    _ThreadPriorityCurrent_Type()
)
threadPriorityCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPriorityCurrent.setStatus("current")
_ThreadStartAddress_Type = Gauge32
_ThreadStartAddress_Object = MibTableColumn
threadStartAddress = _ThreadStartAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 11),
    _ThreadStartAddress_Type()
)
threadStartAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadStartAddress.setStatus("current")
_ThreadThreadState_Type = Gauge32
_ThreadThreadState_Object = MibTableColumn
threadThreadState = _ThreadThreadState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 12),
    _ThreadThreadState_Type()
)
threadThreadState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadThreadState.setStatus("current")
_ThreadThreadWaitReason_Type = Gauge32
_ThreadThreadWaitReason_Object = MibTableColumn
threadThreadWaitReason = _ThreadThreadWaitReason_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 13),
    _ThreadThreadWaitReason_Type()
)
threadThreadWaitReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadThreadWaitReason.setStatus("current")
_UdpV4_ObjectIdentity = ObjectIdentity
udpV4 = _UdpV4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 84)
)
if mibBuilder.loadTexts:
    udpV4.setStatus("current")
_UdpV4DatagramsNoPortPerSec_Type = Gauge32
_UdpV4DatagramsNoPortPerSec_Object = MibScalar
udpV4DatagramsNoPortPerSec = _UdpV4DatagramsNoPortPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 1),
    _UdpV4DatagramsNoPortPerSec_Type()
)
udpV4DatagramsNoPortPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV4DatagramsNoPortPerSec.setStatus("current")
_UdpV4DatagramsReceivedErrors_Type = Gauge32
_UdpV4DatagramsReceivedErrors_Object = MibScalar
udpV4DatagramsReceivedErrors = _UdpV4DatagramsReceivedErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 2),
    _UdpV4DatagramsReceivedErrors_Type()
)
udpV4DatagramsReceivedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV4DatagramsReceivedErrors.setStatus("current")
_UdpV4DatagramsReceivedPerSec_Type = Gauge32
_UdpV4DatagramsReceivedPerSec_Object = MibScalar
udpV4DatagramsReceivedPerSec = _UdpV4DatagramsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 3),
    _UdpV4DatagramsReceivedPerSec_Type()
)
udpV4DatagramsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV4DatagramsReceivedPerSec.setStatus("current")
_UdpV4DatagramsSentPerSec_Type = Gauge32
_UdpV4DatagramsSentPerSec_Object = MibScalar
udpV4DatagramsSentPerSec = _UdpV4DatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 4),
    _UdpV4DatagramsSentPerSec_Type()
)
udpV4DatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV4DatagramsSentPerSec.setStatus("current")
_UdpV4DatagramsPerSec_Type = Gauge32
_UdpV4DatagramsPerSec_Object = MibScalar
udpV4DatagramsPerSec = _UdpV4DatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 5),
    _UdpV4DatagramsPerSec_Type()
)
udpV4DatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV4DatagramsPerSec.setStatus("current")
_UdpV6_ObjectIdentity = ObjectIdentity
udpV6 = _UdpV6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 85)
)
_UdpV6DatagramsNoPortPerSec_Type = Gauge32
_UdpV6DatagramsNoPortPerSec_Object = MibScalar
udpV6DatagramsNoPortPerSec = _UdpV6DatagramsNoPortPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 1),
    _UdpV6DatagramsNoPortPerSec_Type()
)
udpV6DatagramsNoPortPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV6DatagramsNoPortPerSec.setStatus("current")
_UdpV6DatagramsReceivedErrors_Type = Gauge32
_UdpV6DatagramsReceivedErrors_Object = MibScalar
udpV6DatagramsReceivedErrors = _UdpV6DatagramsReceivedErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 2),
    _UdpV6DatagramsReceivedErrors_Type()
)
udpV6DatagramsReceivedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV6DatagramsReceivedErrors.setStatus("current")
_UdpV6DatagramsReceivedPerSec_Type = Gauge32
_UdpV6DatagramsReceivedPerSec_Object = MibScalar
udpV6DatagramsReceivedPerSec = _UdpV6DatagramsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 3),
    _UdpV6DatagramsReceivedPerSec_Type()
)
udpV6DatagramsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV6DatagramsReceivedPerSec.setStatus("current")
_UdpV6DatagramsSentPerSec_Type = Gauge32
_UdpV6DatagramsSentPerSec_Object = MibScalar
udpV6DatagramsSentPerSec = _UdpV6DatagramsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 4),
    _UdpV6DatagramsSentPerSec_Type()
)
udpV6DatagramsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV6DatagramsSentPerSec.setStatus("current")
_UdpV6DatagramsPerSec_Type = Gauge32
_UdpV6DatagramsPerSec_Object = MibScalar
udpV6DatagramsPerSec = _UdpV6DatagramsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 5),
    _UdpV6DatagramsPerSec_Type()
)
udpV6DatagramsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpV6DatagramsPerSec.setStatus("current")
_WebServiceTable_Object = MibTable
webServiceTable = _WebServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86)
)
if mibBuilder.loadTexts:
    webServiceTable.setStatus("current")
_WebServiceEntry_Object = MibTableRow
webServiceEntry = _WebServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1)
)
webServiceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wsInstance"),
)
if mibBuilder.loadTexts:
    webServiceEntry.setStatus("current")
_WsInstance_Type = InstanceName
_WsInstance_Object = MibTableColumn
wsInstance = _WsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 1),
    _WsInstance_Type()
)
wsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsInstance.setStatus("current")
_WsAnonymousUsersPerSec_Type = Gauge32
_WsAnonymousUsersPerSec_Object = MibTableColumn
wsAnonymousUsersPerSec = _WsAnonymousUsersPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 2),
    _WsAnonymousUsersPerSec_Type()
)
wsAnonymousUsersPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsAnonymousUsersPerSec.setStatus("current")
_WsBytesReceivedPerSec_Type = Gauge32
_WsBytesReceivedPerSec_Object = MibTableColumn
wsBytesReceivedPerSec = _WsBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 3),
    _WsBytesReceivedPerSec_Type()
)
wsBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsBytesReceivedPerSec.setStatus("current")
_WsBytesSentPerSec_Type = Gauge32
_WsBytesSentPerSec_Object = MibTableColumn
wsBytesSentPerSec = _WsBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 4),
    _WsBytesSentPerSec_Type()
)
wsBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsBytesSentPerSec.setStatus("current")
_WsBytesTotalPerSec_Type = Gauge32
_WsBytesTotalPerSec_Object = MibTableColumn
wsBytesTotalPerSec = _WsBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 5),
    _WsBytesTotalPerSec_Type()
)
wsBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsBytesTotalPerSec.setStatus("current")
_WsCGIRqstsPerSec_Type = Gauge32
_WsCGIRqstsPerSec_Object = MibTableColumn
wsCGIRqstsPerSec = _WsCGIRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 6),
    _WsCGIRqstsPerSec_Type()
)
wsCGIRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCGIRqstsPerSec.setStatus("current")
_WsConnAtmpsPerSec_Type = Gauge32
_WsConnAtmpsPerSec_Object = MibTableColumn
wsConnAtmpsPerSec = _WsConnAtmpsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 7),
    _WsConnAtmpsPerSec_Type()
)
wsConnAtmpsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsConnAtmpsPerSec.setStatus("current")
_WsCopyRqstsPerSec_Type = Gauge32
_WsCopyRqstsPerSec_Object = MibTableColumn
wsCopyRqstsPerSec = _WsCopyRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 8),
    _WsCopyRqstsPerSec_Type()
)
wsCopyRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCopyRqstsPerSec.setStatus("current")
_WsCurrentAnonymousUsers_Type = Gauge32
_WsCurrentAnonymousUsers_Object = MibTableColumn
wsCurrentAnonymousUsers = _WsCurrentAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 9),
    _WsCurrentAnonymousUsers_Type()
)
wsCurrentAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentAnonymousUsers.setStatus("current")
_WsCurrentBlkdAsyncIORqsts_Type = Gauge32
_WsCurrentBlkdAsyncIORqsts_Object = MibTableColumn
wsCurrentBlkdAsyncIORqsts = _WsCurrentBlkdAsyncIORqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 10),
    _WsCurrentBlkdAsyncIORqsts_Type()
)
wsCurrentBlkdAsyncIORqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentBlkdAsyncIORqsts.setStatus("current")
_WsCurrentCALCountForSSLConns_Type = Gauge32
_WsCurrentCALCountForSSLConns_Object = MibTableColumn
wsCurrentCALCountForSSLConns = _WsCurrentCALCountForSSLConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 11),
    _WsCurrentCALCountForSSLConns_Type()
)
wsCurrentCALCountForSSLConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentCALCountForSSLConns.setStatus("current")
_WsCurrentCALCountForAuthdUsers_Type = Gauge32
_WsCurrentCALCountForAuthdUsers_Object = MibTableColumn
wsCurrentCALCountForAuthdUsers = _WsCurrentCALCountForAuthdUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 12),
    _WsCurrentCALCountForAuthdUsers_Type()
)
wsCurrentCALCountForAuthdUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentCALCountForAuthdUsers.setStatus("current")
_WsCurrentCGIRqsts_Type = Gauge32
_WsCurrentCGIRqsts_Object = MibTableColumn
wsCurrentCGIRqsts = _WsCurrentCGIRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 13),
    _WsCurrentCGIRqsts_Type()
)
wsCurrentCGIRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentCGIRqsts.setStatus("current")
_WsCurrentConns_Type = Gauge32
_WsCurrentConns_Object = MibTableColumn
wsCurrentConns = _WsCurrentConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 14),
    _WsCurrentConns_Type()
)
wsCurrentConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentConns.setStatus("current")
_WsCurrentISAPIExtensionRqsts_Type = Gauge32
_WsCurrentISAPIExtensionRqsts_Object = MibTableColumn
wsCurrentISAPIExtensionRqsts = _WsCurrentISAPIExtensionRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 15),
    _WsCurrentISAPIExtensionRqsts_Type()
)
wsCurrentISAPIExtensionRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentISAPIExtensionRqsts.setStatus("current")
_WsCurrentNonAnonymousUsers_Type = Gauge32
_WsCurrentNonAnonymousUsers_Object = MibTableColumn
wsCurrentNonAnonymousUsers = _WsCurrentNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 16),
    _WsCurrentNonAnonymousUsers_Type()
)
wsCurrentNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentNonAnonymousUsers.setStatus("current")
_WsCurrentBlkdBandwidthBytes_Type = Gauge32
_WsCurrentBlkdBandwidthBytes_Object = MibTableColumn
wsCurrentBlkdBandwidthBytes = _WsCurrentBlkdBandwidthBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 17),
    _WsCurrentBlkdBandwidthBytes_Type()
)
wsCurrentBlkdBandwidthBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsCurrentBlkdBandwidthBytes.setStatus("current")
_WsDeleteRqstsPerSec_Type = Gauge32
_WsDeleteRqstsPerSec_Object = MibTableColumn
wsDeleteRqstsPerSec = _WsDeleteRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 18),
    _WsDeleteRqstsPerSec_Type()
)
wsDeleteRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsDeleteRqstsPerSec.setStatus("current")
_WsFilesReceivedPerSec_Type = Gauge32
_WsFilesReceivedPerSec_Object = MibTableColumn
wsFilesReceivedPerSec = _WsFilesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 19),
    _WsFilesReceivedPerSec_Type()
)
wsFilesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsFilesReceivedPerSec.setStatus("current")
_WsFilesSentPerSec_Type = Gauge32
_WsFilesSentPerSec_Object = MibTableColumn
wsFilesSentPerSec = _WsFilesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 20),
    _WsFilesSentPerSec_Type()
)
wsFilesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsFilesSentPerSec.setStatus("current")
_WsFilesPerSec_Type = Gauge32
_WsFilesPerSec_Object = MibTableColumn
wsFilesPerSec = _WsFilesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 21),
    _WsFilesPerSec_Type()
)
wsFilesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsFilesPerSec.setStatus("current")
_WsGetRqstsPerSec_Type = Gauge32
_WsGetRqstsPerSec_Object = MibTableColumn
wsGetRqstsPerSec = _WsGetRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 22),
    _WsGetRqstsPerSec_Type()
)
wsGetRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsGetRqstsPerSec.setStatus("current")
_WsHeadRqstsPerSec_Type = Gauge32
_WsHeadRqstsPerSec_Object = MibTableColumn
wsHeadRqstsPerSec = _WsHeadRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 23),
    _WsHeadRqstsPerSec_Type()
)
wsHeadRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsHeadRqstsPerSec.setStatus("current")
_WsISAPIExtensionRqstsPerSec_Type = Gauge32
_WsISAPIExtensionRqstsPerSec_Object = MibTableColumn
wsISAPIExtensionRqstsPerSec = _WsISAPIExtensionRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 24),
    _WsISAPIExtensionRqstsPerSec_Type()
)
wsISAPIExtensionRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsISAPIExtensionRqstsPerSec.setStatus("current")
_WsLockRqstsPerSec_Type = Gauge32
_WsLockRqstsPerSec_Object = MibTableColumn
wsLockRqstsPerSec = _WsLockRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 25),
    _WsLockRqstsPerSec_Type()
)
wsLockRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsLockRqstsPerSec.setStatus("current")
_WsLockedErrorsPerSec_Type = Gauge32
_WsLockedErrorsPerSec_Object = MibTableColumn
wsLockedErrorsPerSec = _WsLockedErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 26),
    _WsLockedErrorsPerSec_Type()
)
wsLockedErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsLockedErrorsPerSec.setStatus("current")
_WsLogonAtmpsPerSec_Type = Gauge32
_WsLogonAtmpsPerSec_Object = MibTableColumn
wsLogonAtmpsPerSec = _WsLogonAtmpsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 27),
    _WsLogonAtmpsPerSec_Type()
)
wsLogonAtmpsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsLogonAtmpsPerSec.setStatus("current")
_WsMaximumAnonymousUsers_Type = Gauge32
_WsMaximumAnonymousUsers_Object = MibTableColumn
wsMaximumAnonymousUsers = _WsMaximumAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 28),
    _WsMaximumAnonymousUsers_Type()
)
wsMaximumAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumAnonymousUsers.setStatus("current")
_WsMaximumCALCountForSSLConns_Type = Gauge32
_WsMaximumCALCountForSSLConns_Object = MibTableColumn
wsMaximumCALCountForSSLConns = _WsMaximumCALCountForSSLConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 29),
    _WsMaximumCALCountForSSLConns_Type()
)
wsMaximumCALCountForSSLConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumCALCountForSSLConns.setStatus("current")
_WsMaximumCALCountForAuthdUsers_Type = Gauge32
_WsMaximumCALCountForAuthdUsers_Object = MibTableColumn
wsMaximumCALCountForAuthdUsers = _WsMaximumCALCountForAuthdUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 30),
    _WsMaximumCALCountForAuthdUsers_Type()
)
wsMaximumCALCountForAuthdUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumCALCountForAuthdUsers.setStatus("current")
_WsMaximumCGIRqsts_Type = Gauge32
_WsMaximumCGIRqsts_Object = MibTableColumn
wsMaximumCGIRqsts = _WsMaximumCGIRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 31),
    _WsMaximumCGIRqsts_Type()
)
wsMaximumCGIRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumCGIRqsts.setStatus("current")
_WsMaximumConns_Type = Gauge32
_WsMaximumConns_Object = MibTableColumn
wsMaximumConns = _WsMaximumConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 32),
    _WsMaximumConns_Type()
)
wsMaximumConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumConns.setStatus("current")
_WsMaximumISAPIExtensionRqsts_Type = Gauge32
_WsMaximumISAPIExtensionRqsts_Object = MibTableColumn
wsMaximumISAPIExtensionRqsts = _WsMaximumISAPIExtensionRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 33),
    _WsMaximumISAPIExtensionRqsts_Type()
)
wsMaximumISAPIExtensionRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumISAPIExtensionRqsts.setStatus("current")
_WsMaximumNonAnonymousUsers_Type = Gauge32
_WsMaximumNonAnonymousUsers_Object = MibTableColumn
wsMaximumNonAnonymousUsers = _WsMaximumNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 34),
    _WsMaximumNonAnonymousUsers_Type()
)
wsMaximumNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMaximumNonAnonymousUsers.setStatus("current")
_WsMeasuredAsyncIOBandwidthUsage_Type = Gauge32
_WsMeasuredAsyncIOBandwidthUsage_Object = MibTableColumn
wsMeasuredAsyncIOBandwidthUsage = _WsMeasuredAsyncIOBandwidthUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 35),
    _WsMeasuredAsyncIOBandwidthUsage_Type()
)
wsMeasuredAsyncIOBandwidthUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMeasuredAsyncIOBandwidthUsage.setStatus("current")
_WsMkcolRqstsPerSec_Type = Gauge32
_WsMkcolRqstsPerSec_Object = MibTableColumn
wsMkcolRqstsPerSec = _WsMkcolRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 36),
    _WsMkcolRqstsPerSec_Type()
)
wsMkcolRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMkcolRqstsPerSec.setStatus("current")
_WsMoveRqstsPerSec_Type = Gauge32
_WsMoveRqstsPerSec_Object = MibTableColumn
wsMoveRqstsPerSec = _WsMoveRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 37),
    _WsMoveRqstsPerSec_Type()
)
wsMoveRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsMoveRqstsPerSec.setStatus("current")
_WsNonAnonymousUsersPerSec_Type = Gauge32
_WsNonAnonymousUsersPerSec_Object = MibTableColumn
wsNonAnonymousUsersPerSec = _WsNonAnonymousUsersPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 38),
    _WsNonAnonymousUsersPerSec_Type()
)
wsNonAnonymousUsersPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsNonAnonymousUsersPerSec.setStatus("current")
_WsNotFoundErrorsPerSec_Type = Gauge32
_WsNotFoundErrorsPerSec_Object = MibTableColumn
wsNotFoundErrorsPerSec = _WsNotFoundErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 39),
    _WsNotFoundErrorsPerSec_Type()
)
wsNotFoundErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsNotFoundErrorsPerSec.setStatus("current")
_WsOptionsRqstsPerSec_Type = Gauge32
_WsOptionsRqstsPerSec_Object = MibTableColumn
wsOptionsRqstsPerSec = _WsOptionsRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 40),
    _WsOptionsRqstsPerSec_Type()
)
wsOptionsRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsOptionsRqstsPerSec.setStatus("current")
_WsOtherRqstMethodsPerSec_Type = Gauge32
_WsOtherRqstMethodsPerSec_Object = MibTableColumn
wsOtherRqstMethodsPerSec = _WsOtherRqstMethodsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 41),
    _WsOtherRqstMethodsPerSec_Type()
)
wsOtherRqstMethodsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsOtherRqstMethodsPerSec.setStatus("current")
_WsPostRqstsPerSec_Type = Gauge32
_WsPostRqstsPerSec_Object = MibTableColumn
wsPostRqstsPerSec = _WsPostRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 42),
    _WsPostRqstsPerSec_Type()
)
wsPostRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsPostRqstsPerSec.setStatus("current")
_WsPropfindRqstsPerSec_Type = Gauge32
_WsPropfindRqstsPerSec_Object = MibTableColumn
wsPropfindRqstsPerSec = _WsPropfindRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 43),
    _WsPropfindRqstsPerSec_Type()
)
wsPropfindRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsPropfindRqstsPerSec.setStatus("current")
_WsProppatchRqstsPerSec_Type = Gauge32
_WsProppatchRqstsPerSec_Object = MibTableColumn
wsProppatchRqstsPerSec = _WsProppatchRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 44),
    _WsProppatchRqstsPerSec_Type()
)
wsProppatchRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsProppatchRqstsPerSec.setStatus("current")
_WsPutRqstsPerSec_Type = Gauge32
_WsPutRqstsPerSec_Object = MibTableColumn
wsPutRqstsPerSec = _WsPutRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 45),
    _WsPutRqstsPerSec_Type()
)
wsPutRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsPutRqstsPerSec.setStatus("current")
_WsSearchRqstsPerSec_Type = Gauge32
_WsSearchRqstsPerSec_Object = MibTableColumn
wsSearchRqstsPerSec = _WsSearchRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 46),
    _WsSearchRqstsPerSec_Type()
)
wsSearchRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsSearchRqstsPerSec.setStatus("current")
_WsServiceUptime_Type = Gauge32
_WsServiceUptime_Object = MibTableColumn
wsServiceUptime = _WsServiceUptime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 47),
    _WsServiceUptime_Type()
)
wsServiceUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsServiceUptime.setStatus("current")
_WsTotalAllowedAsyncIORqsts_Type = Gauge32
_WsTotalAllowedAsyncIORqsts_Object = MibTableColumn
wsTotalAllowedAsyncIORqsts = _WsTotalAllowedAsyncIORqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 48),
    _WsTotalAllowedAsyncIORqsts_Type()
)
wsTotalAllowedAsyncIORqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalAllowedAsyncIORqsts.setStatus("current")
_WsTotalAnonymousUsers_Type = Gauge32
_WsTotalAnonymousUsers_Object = MibTableColumn
wsTotalAnonymousUsers = _WsTotalAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 49),
    _WsTotalAnonymousUsers_Type()
)
wsTotalAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalAnonymousUsers.setStatus("current")
_WsTotalBlkdAsyncIORqsts_Type = Gauge32
_WsTotalBlkdAsyncIORqsts_Object = MibTableColumn
wsTotalBlkdAsyncIORqsts = _WsTotalBlkdAsyncIORqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 50),
    _WsTotalBlkdAsyncIORqsts_Type()
)
wsTotalBlkdAsyncIORqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalBlkdAsyncIORqsts.setStatus("current")
_WsTotalBytesReceived_Type = Gauge32
_WsTotalBytesReceived_Object = MibTableColumn
wsTotalBytesReceived = _WsTotalBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 51),
    _WsTotalBytesReceived_Type()
)
wsTotalBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalBytesReceived.setStatus("current")
_WsTotalBytesSent_Type = Gauge32
_WsTotalBytesSent_Object = MibTableColumn
wsTotalBytesSent = _WsTotalBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 52),
    _WsTotalBytesSent_Type()
)
wsTotalBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalBytesSent.setStatus("current")
_WsTotalBytesTransfered_Type = Gauge32
_WsTotalBytesTransfered_Object = MibTableColumn
wsTotalBytesTransfered = _WsTotalBytesTransfered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 53),
    _WsTotalBytesTransfered_Type()
)
wsTotalBytesTransfered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalBytesTransfered.setStatus("current")
_WsTotalCGIRqsts_Type = Gauge32
_WsTotalCGIRqsts_Object = MibTableColumn
wsTotalCGIRqsts = _WsTotalCGIRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 54),
    _WsTotalCGIRqsts_Type()
)
wsTotalCGIRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalCGIRqsts.setStatus("current")
_WsTotalConnAtmpsAllInstances_Type = Gauge32
_WsTotalConnAtmpsAllInstances_Object = MibTableColumn
wsTotalConnAtmpsAllInstances = _WsTotalConnAtmpsAllInstances_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 55),
    _WsTotalConnAtmpsAllInstances_Type()
)
wsTotalConnAtmpsAllInstances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalConnAtmpsAllInstances.setStatus("current")
_WsTotalCopyRqsts_Type = Gauge32
_WsTotalCopyRqsts_Object = MibTableColumn
wsTotalCopyRqsts = _WsTotalCopyRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 56),
    _WsTotalCopyRqsts_Type()
)
wsTotalCopyRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalCopyRqsts.setStatus("current")
_WsTotalDeleteRqsts_Type = Gauge32
_WsTotalDeleteRqsts_Object = MibTableColumn
wsTotalDeleteRqsts = _WsTotalDeleteRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 57),
    _WsTotalDeleteRqsts_Type()
)
wsTotalDeleteRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalDeleteRqsts.setStatus("current")
_WsTotalFilesReceived_Type = Gauge32
_WsTotalFilesReceived_Object = MibTableColumn
wsTotalFilesReceived = _WsTotalFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 58),
    _WsTotalFilesReceived_Type()
)
wsTotalFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalFilesReceived.setStatus("current")
_WsTotalFilesSent_Type = Gauge32
_WsTotalFilesSent_Object = MibTableColumn
wsTotalFilesSent = _WsTotalFilesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 59),
    _WsTotalFilesSent_Type()
)
wsTotalFilesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalFilesSent.setStatus("current")
_WsTotalFilesTransferred_Type = Gauge32
_WsTotalFilesTransferred_Object = MibTableColumn
wsTotalFilesTransferred = _WsTotalFilesTransferred_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 60),
    _WsTotalFilesTransferred_Type()
)
wsTotalFilesTransferred.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalFilesTransferred.setStatus("current")
_WsTotalGetRqsts_Type = Gauge32
_WsTotalGetRqsts_Object = MibTableColumn
wsTotalGetRqsts = _WsTotalGetRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 61),
    _WsTotalGetRqsts_Type()
)
wsTotalGetRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalGetRqsts.setStatus("current")
_WsTotalHeadRqsts_Type = Gauge32
_WsTotalHeadRqsts_Object = MibTableColumn
wsTotalHeadRqsts = _WsTotalHeadRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 62),
    _WsTotalHeadRqsts_Type()
)
wsTotalHeadRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalHeadRqsts.setStatus("current")
_WsTotalISAPIExtensionRqsts_Type = Gauge32
_WsTotalISAPIExtensionRqsts_Object = MibTableColumn
wsTotalISAPIExtensionRqsts = _WsTotalISAPIExtensionRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 63),
    _WsTotalISAPIExtensionRqsts_Type()
)
wsTotalISAPIExtensionRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalISAPIExtensionRqsts.setStatus("current")
_WsTotalLockRqsts_Type = Gauge32
_WsTotalLockRqsts_Object = MibTableColumn
wsTotalLockRqsts = _WsTotalLockRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 64),
    _WsTotalLockRqsts_Type()
)
wsTotalLockRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalLockRqsts.setStatus("current")
_WsTotalLockedErrors_Type = Gauge32
_WsTotalLockedErrors_Object = MibTableColumn
wsTotalLockedErrors = _WsTotalLockedErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 65),
    _WsTotalLockedErrors_Type()
)
wsTotalLockedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalLockedErrors.setStatus("current")
_WsTotalLogonAtmps_Type = Gauge32
_WsTotalLogonAtmps_Object = MibTableColumn
wsTotalLogonAtmps = _WsTotalLogonAtmps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 66),
    _WsTotalLogonAtmps_Type()
)
wsTotalLogonAtmps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalLogonAtmps.setStatus("current")
_WsTotalMethodRqsts_Type = Gauge32
_WsTotalMethodRqsts_Object = MibTableColumn
wsTotalMethodRqsts = _WsTotalMethodRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 67),
    _WsTotalMethodRqsts_Type()
)
wsTotalMethodRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalMethodRqsts.setStatus("current")
_WsTotalMethodRqstsPerSec_Type = Gauge32
_WsTotalMethodRqstsPerSec_Object = MibTableColumn
wsTotalMethodRqstsPerSec = _WsTotalMethodRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 68),
    _WsTotalMethodRqstsPerSec_Type()
)
wsTotalMethodRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalMethodRqstsPerSec.setStatus("current")
_WsTotalMkcolRqsts_Type = Gauge32
_WsTotalMkcolRqsts_Object = MibTableColumn
wsTotalMkcolRqsts = _WsTotalMkcolRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 69),
    _WsTotalMkcolRqsts_Type()
)
wsTotalMkcolRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalMkcolRqsts.setStatus("current")
_WsTotalMoveRqsts_Type = Gauge32
_WsTotalMoveRqsts_Object = MibTableColumn
wsTotalMoveRqsts = _WsTotalMoveRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 70),
    _WsTotalMoveRqsts_Type()
)
wsTotalMoveRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalMoveRqsts.setStatus("current")
_WsTotalNonAnonymousUsers_Type = Gauge32
_WsTotalNonAnonymousUsers_Object = MibTableColumn
wsTotalNonAnonymousUsers = _WsTotalNonAnonymousUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 71),
    _WsTotalNonAnonymousUsers_Type()
)
wsTotalNonAnonymousUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalNonAnonymousUsers.setStatus("current")
_WsTotalNotFoundErrors_Type = Gauge32
_WsTotalNotFoundErrors_Object = MibTableColumn
wsTotalNotFoundErrors = _WsTotalNotFoundErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 72),
    _WsTotalNotFoundErrors_Type()
)
wsTotalNotFoundErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalNotFoundErrors.setStatus("current")
_WsTotalOptionsRqsts_Type = Gauge32
_WsTotalOptionsRqsts_Object = MibTableColumn
wsTotalOptionsRqsts = _WsTotalOptionsRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 73),
    _WsTotalOptionsRqsts_Type()
)
wsTotalOptionsRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalOptionsRqsts.setStatus("current")
_WsTotalOtherRqstMethods_Type = Gauge32
_WsTotalOtherRqstMethods_Object = MibTableColumn
wsTotalOtherRqstMethods = _WsTotalOtherRqstMethods_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 74),
    _WsTotalOtherRqstMethods_Type()
)
wsTotalOtherRqstMethods.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalOtherRqstMethods.setStatus("current")
_WsTotalPostRqsts_Type = Gauge32
_WsTotalPostRqsts_Object = MibTableColumn
wsTotalPostRqsts = _WsTotalPostRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 75),
    _WsTotalPostRqsts_Type()
)
wsTotalPostRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalPostRqsts.setStatus("current")
_WsTotalPropfindRqsts_Type = Gauge32
_WsTotalPropfindRqsts_Object = MibTableColumn
wsTotalPropfindRqsts = _WsTotalPropfindRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 76),
    _WsTotalPropfindRqsts_Type()
)
wsTotalPropfindRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalPropfindRqsts.setStatus("current")
_WsTotalProppatchRqsts_Type = Gauge32
_WsTotalProppatchRqsts_Object = MibTableColumn
wsTotalProppatchRqsts = _WsTotalProppatchRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 77),
    _WsTotalProppatchRqsts_Type()
)
wsTotalProppatchRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalProppatchRqsts.setStatus("current")
_WsTotalPutRqsts_Type = Gauge32
_WsTotalPutRqsts_Object = MibTableColumn
wsTotalPutRqsts = _WsTotalPutRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 78),
    _WsTotalPutRqsts_Type()
)
wsTotalPutRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalPutRqsts.setStatus("current")
_WsTotalRejectedAsyncIORqsts_Type = Gauge32
_WsTotalRejectedAsyncIORqsts_Object = MibTableColumn
wsTotalRejectedAsyncIORqsts = _WsTotalRejectedAsyncIORqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 79),
    _WsTotalRejectedAsyncIORqsts_Type()
)
wsTotalRejectedAsyncIORqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalRejectedAsyncIORqsts.setStatus("current")
_WsTotalSearchRqsts_Type = Gauge32
_WsTotalSearchRqsts_Object = MibTableColumn
wsTotalSearchRqsts = _WsTotalSearchRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 80),
    _WsTotalSearchRqsts_Type()
)
wsTotalSearchRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalSearchRqsts.setStatus("current")
_WsTotalTraceRqsts_Type = Gauge32
_WsTotalTraceRqsts_Object = MibTableColumn
wsTotalTraceRqsts = _WsTotalTraceRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 81),
    _WsTotalTraceRqsts_Type()
)
wsTotalTraceRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalTraceRqsts.setStatus("current")
_WsTotalUnlockRqsts_Type = Gauge32
_WsTotalUnlockRqsts_Object = MibTableColumn
wsTotalUnlockRqsts = _WsTotalUnlockRqsts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 82),
    _WsTotalUnlockRqsts_Type()
)
wsTotalUnlockRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalUnlockRqsts.setStatus("current")
_WsTotalBlkdBandwidthBytes_Type = Gauge32
_WsTotalBlkdBandwidthBytes_Object = MibTableColumn
wsTotalBlkdBandwidthBytes = _WsTotalBlkdBandwidthBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 83),
    _WsTotalBlkdBandwidthBytes_Type()
)
wsTotalBlkdBandwidthBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalBlkdBandwidthBytes.setStatus("current")
_WsTotalCountFailCALRqstsSSLConns_Type = Gauge32
_WsTotalCountFailCALRqstsSSLConns_Object = MibTableColumn
wsTotalCountFailCALRqstsSSLConns = _WsTotalCountFailCALRqstsSSLConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 84),
    _WsTotalCountFailCALRqstsSSLConns_Type()
)
wsTotalCountFailCALRqstsSSLConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalCountFailCALRqstsSSLConns.setStatus("current")
_WsTotalCountFailCALRqstsAuthdUsr_Type = Gauge32
_WsTotalCountFailCALRqstsAuthdUsr_Object = MibTableColumn
wsTotalCountFailCALRqstsAuthdUsr = _WsTotalCountFailCALRqstsAuthdUsr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 85),
    _WsTotalCountFailCALRqstsAuthdUsr_Type()
)
wsTotalCountFailCALRqstsAuthdUsr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTotalCountFailCALRqstsAuthdUsr.setStatus("current")
_WsTraceRqstsPerSec_Type = Gauge32
_WsTraceRqstsPerSec_Object = MibTableColumn
wsTraceRqstsPerSec = _WsTraceRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 86),
    _WsTraceRqstsPerSec_Type()
)
wsTraceRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsTraceRqstsPerSec.setStatus("current")
_WsUnlockRqstsPerSec_Type = Gauge32
_WsUnlockRqstsPerSec_Object = MibTableColumn
wsUnlockRqstsPerSec = _WsUnlockRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 87),
    _WsUnlockRqstsPerSec_Type()
)
wsUnlockRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsUnlockRqstsPerSec.setStatus("current")
_WebServiceCache_ObjectIdentity = ObjectIdentity
webServiceCache = _WebServiceCache_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87)
)
if mibBuilder.loadTexts:
    webServiceCache.setStatus("current")
_WscActiveFlushedEntries_Type = Gauge32
_WscActiveFlushedEntries_Object = MibScalar
wscActiveFlushedEntries = _WscActiveFlushedEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 1),
    _WscActiveFlushedEntries_Type()
)
wscActiveFlushedEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscActiveFlushedEntries.setStatus("current")
_WscCurrentFileCacheMemoryUsage_Type = Gauge32
_WscCurrentFileCacheMemoryUsage_Object = MibScalar
wscCurrentFileCacheMemoryUsage = _WscCurrentFileCacheMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 2),
    _WscCurrentFileCacheMemoryUsage_Type()
)
wscCurrentFileCacheMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscCurrentFileCacheMemoryUsage.setStatus("current")
_WscCurrentFilesCached_Type = Gauge32
_WscCurrentFilesCached_Object = MibScalar
wscCurrentFilesCached = _WscCurrentFilesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 3),
    _WscCurrentFilesCached_Type()
)
wscCurrentFilesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscCurrentFilesCached.setStatus("current")
_WscCurrentMetadataCached_Type = Gauge32
_WscCurrentMetadataCached_Object = MibScalar
wscCurrentMetadataCached = _WscCurrentMetadataCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 4),
    _WscCurrentMetadataCached_Type()
)
wscCurrentMetadataCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscCurrentMetadataCached.setStatus("current")
_WscCurrentURIsCached_Type = Gauge32
_WscCurrentURIsCached_Object = MibScalar
wscCurrentURIsCached = _WscCurrentURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 5),
    _WscCurrentURIsCached_Type()
)
wscCurrentURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscCurrentURIsCached.setStatus("current")
_WscFileCacheFlushes_Type = Gauge32
_WscFileCacheFlushes_Object = MibScalar
wscFileCacheFlushes = _WscFileCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 6),
    _WscFileCacheFlushes_Type()
)
wscFileCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscFileCacheFlushes.setStatus("current")
_WscFileCacheHits_Type = Gauge32
_WscFileCacheHits_Object = MibScalar
wscFileCacheHits = _WscFileCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 7),
    _WscFileCacheHits_Type()
)
wscFileCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscFileCacheHits.setStatus("current")
_WscFileCacheHitsPercent_Type = Gauge32
_WscFileCacheHitsPercent_Object = MibScalar
wscFileCacheHitsPercent = _WscFileCacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 8),
    _WscFileCacheHitsPercent_Type()
)
wscFileCacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscFileCacheHitsPercent.setStatus("current")
_WscFileCacheMisses_Type = Gauge32
_WscFileCacheMisses_Object = MibScalar
wscFileCacheMisses = _WscFileCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 9),
    _WscFileCacheMisses_Type()
)
wscFileCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscFileCacheMisses.setStatus("current")
_WscKernelCurrentURIsCached_Type = Gauge32
_WscKernelCurrentURIsCached_Object = MibScalar
wscKernelCurrentURIsCached = _WscKernelCurrentURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 10),
    _WscKernelCurrentURIsCached_Type()
)
wscKernelCurrentURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelCurrentURIsCached.setStatus("current")
_WscKernelTotalFlushedURIs_Type = Gauge32
_WscKernelTotalFlushedURIs_Object = MibScalar
wscKernelTotalFlushedURIs = _WscKernelTotalFlushedURIs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 11),
    _WscKernelTotalFlushedURIs_Type()
)
wscKernelTotalFlushedURIs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelTotalFlushedURIs.setStatus("current")
_WscKernelTotalURIsCached_Type = Gauge32
_WscKernelTotalURIsCached_Object = MibScalar
wscKernelTotalURIsCached = _WscKernelTotalURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 12),
    _WscKernelTotalURIsCached_Type()
)
wscKernelTotalURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelTotalURIsCached.setStatus("current")
_WscKernelURICacheFlushes_Type = Gauge32
_WscKernelURICacheFlushes_Object = MibScalar
wscKernelURICacheFlushes = _WscKernelURICacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 13),
    _WscKernelURICacheFlushes_Type()
)
wscKernelURICacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelURICacheFlushes.setStatus("current")
_WscKernelURICacheHits_Type = Gauge32
_WscKernelURICacheHits_Object = MibScalar
wscKernelURICacheHits = _WscKernelURICacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 14),
    _WscKernelURICacheHits_Type()
)
wscKernelURICacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelURICacheHits.setStatus("current")
_WscKernelURICacheHitsPercent_Type = Gauge32
_WscKernelURICacheHitsPercent_Object = MibScalar
wscKernelURICacheHitsPercent = _WscKernelURICacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 15),
    _WscKernelURICacheHitsPercent_Type()
)
wscKernelURICacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelURICacheHitsPercent.setStatus("current")
_WscKernelURICacheMisses_Type = Gauge32
_WscKernelURICacheMisses_Object = MibScalar
wscKernelURICacheMisses = _WscKernelURICacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 16),
    _WscKernelURICacheMisses_Type()
)
wscKernelURICacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelURICacheMisses.setStatus("current")
_WscKernelUriCacheHitsPerSec_Type = Gauge32
_WscKernelUriCacheHitsPerSec_Object = MibScalar
wscKernelUriCacheHitsPerSec = _WscKernelUriCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 17),
    _WscKernelUriCacheHitsPerSec_Type()
)
wscKernelUriCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscKernelUriCacheHitsPerSec.setStatus("current")
_WscMaximumFileCacheMemoryUsage_Type = Gauge32
_WscMaximumFileCacheMemoryUsage_Object = MibScalar
wscMaximumFileCacheMemoryUsage = _WscMaximumFileCacheMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 18),
    _WscMaximumFileCacheMemoryUsage_Type()
)
wscMaximumFileCacheMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscMaximumFileCacheMemoryUsage.setStatus("current")
_WscMetadataCacheFlushes_Type = Gauge32
_WscMetadataCacheFlushes_Object = MibScalar
wscMetadataCacheFlushes = _WscMetadataCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 19),
    _WscMetadataCacheFlushes_Type()
)
wscMetadataCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscMetadataCacheFlushes.setStatus("current")
_WscMetadataCacheHits_Type = Gauge32
_WscMetadataCacheHits_Object = MibScalar
wscMetadataCacheHits = _WscMetadataCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 20),
    _WscMetadataCacheHits_Type()
)
wscMetadataCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscMetadataCacheHits.setStatus("current")
_WscMetadataCacheHitsPercent_Type = Gauge32
_WscMetadataCacheHitsPercent_Object = MibScalar
wscMetadataCacheHitsPercent = _WscMetadataCacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 21),
    _WscMetadataCacheHitsPercent_Type()
)
wscMetadataCacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscMetadataCacheHitsPercent.setStatus("current")
_WscMetadataCacheMisses_Type = Gauge32
_WscMetadataCacheMisses_Object = MibScalar
wscMetadataCacheMisses = _WscMetadataCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 22),
    _WscMetadataCacheMisses_Type()
)
wscMetadataCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscMetadataCacheMisses.setStatus("current")
_WscTotalFilesCached_Type = Gauge32
_WscTotalFilesCached_Object = MibScalar
wscTotalFilesCached = _WscTotalFilesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 23),
    _WscTotalFilesCached_Type()
)
wscTotalFilesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscTotalFilesCached.setStatus("current")
_WscTotalFlushedFiles_Type = Gauge32
_WscTotalFlushedFiles_Object = MibScalar
wscTotalFlushedFiles = _WscTotalFlushedFiles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 24),
    _WscTotalFlushedFiles_Type()
)
wscTotalFlushedFiles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscTotalFlushedFiles.setStatus("current")
_WscTotalFlushedMetadata_Type = Gauge32
_WscTotalFlushedMetadata_Object = MibScalar
wscTotalFlushedMetadata = _WscTotalFlushedMetadata_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 25),
    _WscTotalFlushedMetadata_Type()
)
wscTotalFlushedMetadata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscTotalFlushedMetadata.setStatus("current")
_WscTotalFlushedURIs_Type = Gauge32
_WscTotalFlushedURIs_Object = MibScalar
wscTotalFlushedURIs = _WscTotalFlushedURIs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 26),
    _WscTotalFlushedURIs_Type()
)
wscTotalFlushedURIs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscTotalFlushedURIs.setStatus("current")
_WscTotalMetadataCached_Type = Gauge32
_WscTotalMetadataCached_Object = MibScalar
wscTotalMetadataCached = _WscTotalMetadataCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 27),
    _WscTotalMetadataCached_Type()
)
wscTotalMetadataCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscTotalMetadataCached.setStatus("current")
_WscTotalURIsCached_Type = Gauge32
_WscTotalURIsCached_Object = MibScalar
wscTotalURIsCached = _WscTotalURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 28),
    _WscTotalURIsCached_Type()
)
wscTotalURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscTotalURIsCached.setStatus("current")
_WscURICacheFlushes_Type = Gauge32
_WscURICacheFlushes_Object = MibScalar
wscURICacheFlushes = _WscURICacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 29),
    _WscURICacheFlushes_Type()
)
wscURICacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscURICacheFlushes.setStatus("current")
_WscURICacheHits_Type = Gauge32
_WscURICacheHits_Object = MibScalar
wscURICacheHits = _WscURICacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 30),
    _WscURICacheHits_Type()
)
wscURICacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscURICacheHits.setStatus("current")
_WscURICacheHitsPercent_Type = Gauge32
_WscURICacheHitsPercent_Object = MibScalar
wscURICacheHitsPercent = _WscURICacheHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 31),
    _WscURICacheHitsPercent_Type()
)
wscURICacheHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscURICacheHitsPercent.setStatus("current")
_WscURICacheMisses_Type = Gauge32
_WscURICacheMisses_Object = MibScalar
wscURICacheMisses = _WscURICacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 32),
    _WscURICacheMisses_Type()
)
wscURICacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscURICacheMisses.setStatus("current")
_WscOutputCacheCurrentFlushedItem_Type = Gauge32
_WscOutputCacheCurrentFlushedItem_Object = MibScalar
wscOutputCacheCurrentFlushedItem = _WscOutputCacheCurrentFlushedItem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 33),
    _WscOutputCacheCurrentFlushedItem_Type()
)
wscOutputCacheCurrentFlushedItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheCurrentFlushedItem.setStatus("current")
_WscOutputCacheCurrentHitsPercent_Type = Gauge32
_WscOutputCacheCurrentHitsPercent_Object = MibScalar
wscOutputCacheCurrentHitsPercent = _WscOutputCacheCurrentHitsPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 34),
    _WscOutputCacheCurrentHitsPercent_Type()
)
wscOutputCacheCurrentHitsPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheCurrentHitsPercent.setStatus("current")
_WscOutputCacheCurrentItems_Type = Gauge32
_WscOutputCacheCurrentItems_Object = MibScalar
wscOutputCacheCurrentItems = _WscOutputCacheCurrentItems_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 35),
    _WscOutputCacheCurrentItems_Type()
)
wscOutputCacheCurrentItems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheCurrentItems.setStatus("current")
_WscOutputCacheCurrentMemoryUsage_Type = Gauge32
_WscOutputCacheCurrentMemoryUsage_Object = MibScalar
wscOutputCacheCurrentMemoryUsage = _WscOutputCacheCurrentMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 36),
    _WscOutputCacheCurrentMemoryUsage_Type()
)
wscOutputCacheCurrentMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheCurrentMemoryUsage.setStatus("current")
_WscOutputCacheTotalFlushedItems_Type = Gauge32
_WscOutputCacheTotalFlushedItems_Object = MibScalar
wscOutputCacheTotalFlushedItems = _WscOutputCacheTotalFlushedItems_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 37),
    _WscOutputCacheTotalFlushedItems_Type()
)
wscOutputCacheTotalFlushedItems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheTotalFlushedItems.setStatus("current")
_WscOutputCacheTotalFlushes_Type = Gauge32
_WscOutputCacheTotalFlushes_Object = MibScalar
wscOutputCacheTotalFlushes = _WscOutputCacheTotalFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 38),
    _WscOutputCacheTotalFlushes_Type()
)
wscOutputCacheTotalFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheTotalFlushes.setStatus("current")
_WscOutputCacheTotalHits_Type = Gauge32
_WscOutputCacheTotalHits_Object = MibScalar
wscOutputCacheTotalHits = _WscOutputCacheTotalHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 39),
    _WscOutputCacheTotalHits_Type()
)
wscOutputCacheTotalHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheTotalHits.setStatus("current")
_WscOutputCacheTotalMisses_Type = Gauge32
_WscOutputCacheTotalMisses_Object = MibScalar
wscOutputCacheTotalMisses = _WscOutputCacheTotalMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 40),
    _WscOutputCacheTotalMisses_Type()
)
wscOutputCacheTotalMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wscOutputCacheTotalMisses.setStatus("current")
_WindowsMediaServices_ObjectIdentity = ObjectIdentity
windowsMediaServices = _WindowsMediaServices_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88)
)
_WmsCurCacheDownloads_Type = Gauge32
_WmsCurCacheDownloads_Object = MibScalar
wmsCurCacheDownloads = _WmsCurCacheDownloads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 1),
    _WmsCurCacheDownloads_Type()
)
wmsCurCacheDownloads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurCacheDownloads.setStatus("current")
_WmsCurConnectedPlayers_Type = Gauge32
_WmsCurConnectedPlayers_Object = MibScalar
wmsCurConnectedPlayers = _WmsCurConnectedPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 2),
    _WmsCurConnectedPlayers_Type()
)
wmsCurConnectedPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurConnectedPlayers.setStatus("current")
_WmsCurConnectionQueueLength_Type = Gauge32
_WmsCurConnectionQueueLength_Object = MibScalar
wmsCurConnectionQueueLength = _WmsCurConnectionQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 3),
    _WmsCurConnectionQueueLength_Type()
)
wmsCurConnectionQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurConnectionQueueLength.setStatus("current")
_WmsCurConnectionRate_Type = Gauge32
_WmsCurConnectionRate_Object = MibScalar
wmsCurConnectionRate = _WmsCurConnectionRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 4),
    _WmsCurConnectionRate_Type()
)
wmsCurConnectionRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurConnectionRate.setStatus("current")
_WmsCurFileReadRateKbps_Type = Gauge32
_WmsCurFileReadRateKbps_Object = MibScalar
wmsCurFileReadRateKbps = _WmsCurFileReadRateKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 5),
    _WmsCurFileReadRateKbps_Type()
)
wmsCurFileReadRateKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurFileReadRateKbps.setStatus("current")
_WmsCurIncomingBandwidthKbps_Type = Gauge32
_WmsCurIncomingBandwidthKbps_Object = MibScalar
wmsCurIncomingBandwidthKbps = _WmsCurIncomingBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 6),
    _WmsCurIncomingBandwidthKbps_Type()
)
wmsCurIncomingBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurIncomingBandwidthKbps.setStatus("current")
_WmsCurLateReadRate_Type = Gauge32
_WmsCurLateReadRate_Object = MibScalar
wmsCurLateReadRate = _WmsCurLateReadRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 7),
    _WmsCurLateReadRate_Type()
)
wmsCurLateReadRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurLateReadRate.setStatus("current")
_WmsCurLateSendRate_Type = Gauge32
_WmsCurLateSendRate_Object = MibScalar
wmsCurLateSendRate = _WmsCurLateSendRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 8),
    _WmsCurLateSendRate_Type()
)
wmsCurLateSendRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurLateSendRate.setStatus("current")
_WmsCurOutDistAllocBandwidthKbps_Type = Gauge32
_WmsCurOutDistAllocBandwidthKbps_Object = MibScalar
wmsCurOutDistAllocBandwidthKbps = _WmsCurOutDistAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 9),
    _WmsCurOutDistAllocBandwidthKbps_Type()
)
wmsCurOutDistAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurOutDistAllocBandwidthKbps.setStatus("current")
_WmsCurOutDistConnections_Type = Gauge32
_WmsCurOutDistConnections_Object = MibScalar
wmsCurOutDistConnections = _WmsCurOutDistConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 10),
    _WmsCurOutDistConnections_Type()
)
wmsCurOutDistConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurOutDistConnections.setStatus("current")
_WmsCurOutDistSendRateKbps_Type = Gauge32
_WmsCurOutDistSendRateKbps_Object = MibScalar
wmsCurOutDistSendRateKbps = _WmsCurOutDistSendRateKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 11),
    _WmsCurOutDistSendRateKbps_Type()
)
wmsCurOutDistSendRateKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurOutDistSendRateKbps.setStatus("current")
_WmsCurPlayerAllocBandwidthKbps_Type = Gauge32
_WmsCurPlayerAllocBandwidthKbps_Object = MibScalar
wmsCurPlayerAllocBandwidthKbps = _WmsCurPlayerAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 12),
    _WmsCurPlayerAllocBandwidthKbps_Type()
)
wmsCurPlayerAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurPlayerAllocBandwidthKbps.setStatus("current")
_WmsCurPlayerSendRateKbps_Type = Gauge32
_WmsCurPlayerSendRateKbps_Object = MibScalar
wmsCurPlayerSendRateKbps = _WmsCurPlayerSendRateKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 13),
    _WmsCurPlayerSendRateKbps_Type()
)
wmsCurPlayerSendRateKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurPlayerSendRateKbps.setStatus("current")
_WmsCurStreamErrorRate_Type = Gauge32
_WmsCurStreamErrorRate_Object = MibScalar
wmsCurStreamErrorRate = _WmsCurStreamErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 14),
    _WmsCurStreamErrorRate_Type()
)
wmsCurStreamErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurStreamErrorRate.setStatus("current")
_WmsCurStreamingHTTPPlayers_Type = Gauge32
_WmsCurStreamingHTTPPlayers_Object = MibScalar
wmsCurStreamingHTTPPlayers = _WmsCurStreamingHTTPPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 15),
    _WmsCurStreamingHTTPPlayers_Type()
)
wmsCurStreamingHTTPPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurStreamingHTTPPlayers.setStatus("current")
_WmsCurStreamingMMSPlayers_Type = Gauge32
_WmsCurStreamingMMSPlayers_Object = MibScalar
wmsCurStreamingMMSPlayers = _WmsCurStreamingMMSPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 16),
    _WmsCurStreamingMMSPlayers_Type()
)
wmsCurStreamingMMSPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurStreamingMMSPlayers.setStatus("current")
_WmsCurStreamingPlayers_Type = Gauge32
_WmsCurStreamingPlayers_Object = MibScalar
wmsCurStreamingPlayers = _WmsCurStreamingPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 17),
    _WmsCurStreamingPlayers_Type()
)
wmsCurStreamingPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurStreamingPlayers.setStatus("current")
_WmsCurStreamingRTSPPlayers_Type = Gauge32
_WmsCurStreamingRTSPPlayers_Object = MibScalar
wmsCurStreamingRTSPPlayers = _WmsCurStreamingRTSPPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 18),
    _WmsCurStreamingRTSPPlayers_Type()
)
wmsCurStreamingRTSPPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurStreamingRTSPPlayers.setStatus("current")
_WmsCurUDPResendRequestsRate_Type = Gauge32
_WmsCurUDPResendRequestsRate_Object = MibScalar
wmsCurUDPResendRequestsRate = _WmsCurUDPResendRequestsRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 19),
    _WmsCurUDPResendRequestsRate_Type()
)
wmsCurUDPResendRequestsRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurUDPResendRequestsRate.setStatus("current")
_WmsCurUDPResendsSentRate_Type = Gauge32
_WmsCurUDPResendsSentRate_Object = MibScalar
wmsCurUDPResendsSentRate = _WmsCurUDPResendsSentRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 20),
    _WmsCurUDPResendsSentRate_Type()
)
wmsCurUDPResendsSentRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsCurUDPResendsSentRate.setStatus("current")
_WmsPeakConnectedPlayers_Type = Gauge32
_WmsPeakConnectedPlayers_Object = MibScalar
wmsPeakConnectedPlayers = _WmsPeakConnectedPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 21),
    _WmsPeakConnectedPlayers_Type()
)
wmsPeakConnectedPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakConnectedPlayers.setStatus("current")
_WmsPeakOutDistAllocBandwidthKbps_Type = Gauge32
_WmsPeakOutDistAllocBandwidthKbps_Object = MibScalar
wmsPeakOutDistAllocBandwidthKbps = _WmsPeakOutDistAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 22),
    _WmsPeakOutDistAllocBandwidthKbps_Type()
)
wmsPeakOutDistAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakOutDistAllocBandwidthKbps.setStatus("current")
_WmsPeakOutDistConnections_Type = Gauge32
_WmsPeakOutDistConnections_Object = MibScalar
wmsPeakOutDistConnections = _WmsPeakOutDistConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 23),
    _WmsPeakOutDistConnections_Type()
)
wmsPeakOutDistConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakOutDistConnections.setStatus("current")
_WmsPeakOutDistSendRateKbps_Type = Gauge32
_WmsPeakOutDistSendRateKbps_Object = MibScalar
wmsPeakOutDistSendRateKbps = _WmsPeakOutDistSendRateKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 24),
    _WmsPeakOutDistSendRateKbps_Type()
)
wmsPeakOutDistSendRateKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakOutDistSendRateKbps.setStatus("current")
_WmsPeakPlayerAllocBandwidthKbps_Type = Gauge32
_WmsPeakPlayerAllocBandwidthKbps_Object = MibScalar
wmsPeakPlayerAllocBandwidthKbps = _WmsPeakPlayerAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 25),
    _WmsPeakPlayerAllocBandwidthKbps_Type()
)
wmsPeakPlayerAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakPlayerAllocBandwidthKbps.setStatus("current")
_WmsPeakPlayerSendRateKbps_Type = Gauge32
_WmsPeakPlayerSendRateKbps_Object = MibScalar
wmsPeakPlayerSendRateKbps = _WmsPeakPlayerSendRateKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 26),
    _WmsPeakPlayerSendRateKbps_Type()
)
wmsPeakPlayerSendRateKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakPlayerSendRateKbps.setStatus("current")
_WmsPeakStreamingPlayers_Type = Gauge32
_WmsPeakStreamingPlayers_Object = MibScalar
wmsPeakStreamingPlayers = _WmsPeakStreamingPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 27),
    _WmsPeakStreamingPlayers_Type()
)
wmsPeakStreamingPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsPeakStreamingPlayers.setStatus("current")
_WmsTotalAdvertisements_Type = Gauge32
_WmsTotalAdvertisements_Object = MibScalar
wmsTotalAdvertisements = _WmsTotalAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 28),
    _WmsTotalAdvertisements_Type()
)
wmsTotalAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalAdvertisements.setStatus("current")
_WmsTotalConnectedPlayers_Type = Gauge32
_WmsTotalConnectedPlayers_Object = MibScalar
wmsTotalConnectedPlayers = _WmsTotalConnectedPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 29),
    _WmsTotalConnectedPlayers_Type()
)
wmsTotalConnectedPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalConnectedPlayers.setStatus("current")
_WmsTotalLateReads_Type = Gauge32
_WmsTotalLateReads_Object = MibScalar
wmsTotalLateReads = _WmsTotalLateReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 30),
    _WmsTotalLateReads_Type()
)
wmsTotalLateReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalLateReads.setStatus("current")
_WmsTotalLateSends_Type = Gauge32
_WmsTotalLateSends_Object = MibScalar
wmsTotalLateSends = _WmsTotalLateSends_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 31),
    _WmsTotalLateSends_Type()
)
wmsTotalLateSends.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalLateSends.setStatus("current")
_WmsTotalOutDistBytesSent_Type = Gauge32
_WmsTotalOutDistBytesSent_Object = MibScalar
wmsTotalOutDistBytesSent = _WmsTotalOutDistBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 32),
    _WmsTotalOutDistBytesSent_Type()
)
wmsTotalOutDistBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalOutDistBytesSent.setStatus("current")
_WmsTotalOutDistConnections_Type = Gauge32
_WmsTotalOutDistConnections_Object = MibScalar
wmsTotalOutDistConnections = _WmsTotalOutDistConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 33),
    _WmsTotalOutDistConnections_Type()
)
wmsTotalOutDistConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalOutDistConnections.setStatus("current")
_WmsTotalPlayerBytesSent_Type = Gauge32
_WmsTotalPlayerBytesSent_Object = MibScalar
wmsTotalPlayerBytesSent = _WmsTotalPlayerBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 34),
    _WmsTotalPlayerBytesSent_Type()
)
wmsTotalPlayerBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalPlayerBytesSent.setStatus("current")
_WmsTotalServerUptime_Type = Gauge32
_WmsTotalServerUptime_Object = MibScalar
wmsTotalServerUptime = _WmsTotalServerUptime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 35),
    _WmsTotalServerUptime_Type()
)
wmsTotalServerUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalServerUptime.setStatus("current")
_WmsTotalStreamDenials_Type = Gauge32
_WmsTotalStreamDenials_Object = MibScalar
wmsTotalStreamDenials = _WmsTotalStreamDenials_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 36),
    _WmsTotalStreamDenials_Type()
)
wmsTotalStreamDenials.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalStreamDenials.setStatus("current")
_WmsTotalStreamErrors_Type = Gauge32
_WmsTotalStreamErrors_Object = MibScalar
wmsTotalStreamErrors = _WmsTotalStreamErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 37),
    _WmsTotalStreamErrors_Type()
)
wmsTotalStreamErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalStreamErrors.setStatus("current")
_WmsTotalStreamTerminations_Type = Gauge32
_WmsTotalStreamTerminations_Object = MibScalar
wmsTotalStreamTerminations = _WmsTotalStreamTerminations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 38),
    _WmsTotalStreamTerminations_Type()
)
wmsTotalStreamTerminations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalStreamTerminations.setStatus("current")
_WmsTotalStreamingPlayers_Type = Gauge32
_WmsTotalStreamingPlayers_Object = MibScalar
wmsTotalStreamingPlayers = _WmsTotalStreamingPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 39),
    _WmsTotalStreamingPlayers_Type()
)
wmsTotalStreamingPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalStreamingPlayers.setStatus("current")
_WmsTotalUDPResendRequests_Type = Gauge32
_WmsTotalUDPResendRequests_Object = MibScalar
wmsTotalUDPResendRequests = _WmsTotalUDPResendRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 40),
    _WmsTotalUDPResendRequests_Type()
)
wmsTotalUDPResendRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalUDPResendRequests.setStatus("current")
_WmsTotalUDPResendsSent_Type = Gauge32
_WmsTotalUDPResendsSent_Object = MibScalar
wmsTotalUDPResendsSent = _WmsTotalUDPResendsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 41),
    _WmsTotalUDPResendsSent_Type()
)
wmsTotalUDPResendsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmsTotalUDPResendsSent.setStatus("current")
_WindowsMediaPublishingPointTable_Object = MibTable
windowsMediaPublishingPointTable = _WindowsMediaPublishingPointTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89)
)
if mibBuilder.loadTexts:
    windowsMediaPublishingPointTable.setStatus("current")
_WindowsMediaPublishingPointEntry_Object = MibTableRow
windowsMediaPublishingPointEntry = _WindowsMediaPublishingPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1)
)
windowsMediaPublishingPointEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wmppInstance"),
)
if mibBuilder.loadTexts:
    windowsMediaPublishingPointEntry.setStatus("current")
_WmppInstance_Type = InstanceName
_WmppInstance_Object = MibTableColumn
wmppInstance = _WmppInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 1),
    _WmppInstance_Type()
)
wmppInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppInstance.setStatus("current")
_WmppCurConnectedPlayers_Type = Gauge32
_WmppCurConnectedPlayers_Object = MibTableColumn
wmppCurConnectedPlayers = _WmppCurConnectedPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 2),
    _WmppCurConnectedPlayers_Type()
)
wmppCurConnectedPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurConnectedPlayers.setStatus("current")
_WmppCurFileReadRateKbps_Type = Gauge32
_WmppCurFileReadRateKbps_Object = MibTableColumn
wmppCurFileReadRateKbps = _WmppCurFileReadRateKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 3),
    _WmppCurFileReadRateKbps_Type()
)
wmppCurFileReadRateKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurFileReadRateKbps.setStatus("current")
_WmppCurLateReadRate_Type = Gauge32
_WmppCurLateReadRate_Object = MibTableColumn
wmppCurLateReadRate = _WmppCurLateReadRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 4),
    _WmppCurLateReadRate_Type()
)
wmppCurLateReadRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurLateReadRate.setStatus("current")
_WmppCurOutDistAllocBandwidthKbps_Type = Gauge32
_WmppCurOutDistAllocBandwidthKbps_Object = MibTableColumn
wmppCurOutDistAllocBandwidthKbps = _WmppCurOutDistAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 5),
    _WmppCurOutDistAllocBandwidthKbps_Type()
)
wmppCurOutDistAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurOutDistAllocBandwidthKbps.setStatus("current")
_WmppCurOutDistConnections_Type = Gauge32
_WmppCurOutDistConnections_Object = MibTableColumn
wmppCurOutDistConnections = _WmppCurOutDistConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 6),
    _WmppCurOutDistConnections_Type()
)
wmppCurOutDistConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurOutDistConnections.setStatus("current")
_WmppCurPlayerAllocBandwidthKbps_Type = Gauge32
_WmppCurPlayerAllocBandwidthKbps_Object = MibTableColumn
wmppCurPlayerAllocBandwidthKbps = _WmppCurPlayerAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 7),
    _WmppCurPlayerAllocBandwidthKbps_Type()
)
wmppCurPlayerAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurPlayerAllocBandwidthKbps.setStatus("current")
_WmppCurStreamErrorRate_Type = Gauge32
_WmppCurStreamErrorRate_Object = MibTableColumn
wmppCurStreamErrorRate = _WmppCurStreamErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 8),
    _WmppCurStreamErrorRate_Type()
)
wmppCurStreamErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurStreamErrorRate.setStatus("current")
_WmppCurStreamingHTTPPlayers_Type = Gauge32
_WmppCurStreamingHTTPPlayers_Object = MibTableColumn
wmppCurStreamingHTTPPlayers = _WmppCurStreamingHTTPPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 9),
    _WmppCurStreamingHTTPPlayers_Type()
)
wmppCurStreamingHTTPPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurStreamingHTTPPlayers.setStatus("current")
_WmppCurStreamingMMSPlayers_Type = Gauge32
_WmppCurStreamingMMSPlayers_Object = MibTableColumn
wmppCurStreamingMMSPlayers = _WmppCurStreamingMMSPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 10),
    _WmppCurStreamingMMSPlayers_Type()
)
wmppCurStreamingMMSPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurStreamingMMSPlayers.setStatus("current")
_WmppCurStreamingPlayers_Type = Gauge32
_WmppCurStreamingPlayers_Object = MibTableColumn
wmppCurStreamingPlayers = _WmppCurStreamingPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 11),
    _WmppCurStreamingPlayers_Type()
)
wmppCurStreamingPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurStreamingPlayers.setStatus("current")
_WmppCurStreamingRTSPPlayers_Type = Gauge32
_WmppCurStreamingRTSPPlayers_Object = MibTableColumn
wmppCurStreamingRTSPPlayers = _WmppCurStreamingRTSPPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 12),
    _WmppCurStreamingRTSPPlayers_Type()
)
wmppCurStreamingRTSPPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppCurStreamingRTSPPlayers.setStatus("current")
_WmppPeakConnectedPlayers_Type = Gauge32
_WmppPeakConnectedPlayers_Object = MibTableColumn
wmppPeakConnectedPlayers = _WmppPeakConnectedPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 13),
    _WmppPeakConnectedPlayers_Type()
)
wmppPeakConnectedPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppPeakConnectedPlayers.setStatus("current")
_WmppPeakOutDistAllocBandwdthKbps_Type = Gauge32
_WmppPeakOutDistAllocBandwdthKbps_Object = MibTableColumn
wmppPeakOutDistAllocBandwdthKbps = _WmppPeakOutDistAllocBandwdthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 14),
    _WmppPeakOutDistAllocBandwdthKbps_Type()
)
wmppPeakOutDistAllocBandwdthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppPeakOutDistAllocBandwdthKbps.setStatus("current")
_WmppPeakOutDistConnections_Type = Gauge32
_WmppPeakOutDistConnections_Object = MibTableColumn
wmppPeakOutDistConnections = _WmppPeakOutDistConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 15),
    _WmppPeakOutDistConnections_Type()
)
wmppPeakOutDistConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppPeakOutDistConnections.setStatus("current")
_WmppPeakPlayerAllocBandwidthKbps_Type = Gauge32
_WmppPeakPlayerAllocBandwidthKbps_Object = MibTableColumn
wmppPeakPlayerAllocBandwidthKbps = _WmppPeakPlayerAllocBandwidthKbps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 16),
    _WmppPeakPlayerAllocBandwidthKbps_Type()
)
wmppPeakPlayerAllocBandwidthKbps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppPeakPlayerAllocBandwidthKbps.setStatus("current")
_WmppPeakStreamingPlayers_Type = Gauge32
_WmppPeakStreamingPlayers_Object = MibTableColumn
wmppPeakStreamingPlayers = _WmppPeakStreamingPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 17),
    _WmppPeakStreamingPlayers_Type()
)
wmppPeakStreamingPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppPeakStreamingPlayers.setStatus("current")
_WmppTotalAdvertisements_Type = Gauge32
_WmppTotalAdvertisements_Object = MibTableColumn
wmppTotalAdvertisements = _WmppTotalAdvertisements_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 18),
    _WmppTotalAdvertisements_Type()
)
wmppTotalAdvertisements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalAdvertisements.setStatus("current")
_WmppTotalConnectedPlayers_Type = Gauge32
_WmppTotalConnectedPlayers_Object = MibTableColumn
wmppTotalConnectedPlayers = _WmppTotalConnectedPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 19),
    _WmppTotalConnectedPlayers_Type()
)
wmppTotalConnectedPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalConnectedPlayers.setStatus("current")
_WmppTotalFileBytesRead_Type = Gauge32
_WmppTotalFileBytesRead_Object = MibTableColumn
wmppTotalFileBytesRead = _WmppTotalFileBytesRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 20),
    _WmppTotalFileBytesRead_Type()
)
wmppTotalFileBytesRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalFileBytesRead.setStatus("current")
_WmppTotalLateReads_Type = Gauge32
_WmppTotalLateReads_Object = MibTableColumn
wmppTotalLateReads = _WmppTotalLateReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 21),
    _WmppTotalLateReads_Type()
)
wmppTotalLateReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalLateReads.setStatus("current")
_WmppTotalOutDistBytesSent_Type = Gauge32
_WmppTotalOutDistBytesSent_Object = MibTableColumn
wmppTotalOutDistBytesSent = _WmppTotalOutDistBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 22),
    _WmppTotalOutDistBytesSent_Type()
)
wmppTotalOutDistBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalOutDistBytesSent.setStatus("current")
_WmppTotalOutDistConnections_Type = Gauge32
_WmppTotalOutDistConnections_Object = MibTableColumn
wmppTotalOutDistConnections = _WmppTotalOutDistConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 23),
    _WmppTotalOutDistConnections_Type()
)
wmppTotalOutDistConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalOutDistConnections.setStatus("current")
_WmppTotalPlayerBytesSent_Type = Gauge32
_WmppTotalPlayerBytesSent_Object = MibTableColumn
wmppTotalPlayerBytesSent = _WmppTotalPlayerBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 24),
    _WmppTotalPlayerBytesSent_Type()
)
wmppTotalPlayerBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalPlayerBytesSent.setStatus("current")
_WmppTotalStreamDenials_Type = Gauge32
_WmppTotalStreamDenials_Object = MibTableColumn
wmppTotalStreamDenials = _WmppTotalStreamDenials_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 25),
    _WmppTotalStreamDenials_Type()
)
wmppTotalStreamDenials.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalStreamDenials.setStatus("current")
_WmppTotalStreamErrors_Type = Gauge32
_WmppTotalStreamErrors_Object = MibTableColumn
wmppTotalStreamErrors = _WmppTotalStreamErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 26),
    _WmppTotalStreamErrors_Type()
)
wmppTotalStreamErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalStreamErrors.setStatus("current")
_WmppTotalStreamTerminations_Type = Gauge32
_WmppTotalStreamTerminations_Object = MibTableColumn
wmppTotalStreamTerminations = _WmppTotalStreamTerminations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 27),
    _WmppTotalStreamTerminations_Type()
)
wmppTotalStreamTerminations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalStreamTerminations.setStatus("current")
_WmppTotalStreamingPlayers_Type = Gauge32
_WmppTotalStreamingPlayers_Object = MibTableColumn
wmppTotalStreamingPlayers = _WmppTotalStreamingPlayers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 28),
    _WmppTotalStreamingPlayers_Type()
)
wmppTotalStreamingPlayers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmppTotalStreamingPlayers.setStatus("current")
_WindowsMediaStationService_ObjectIdentity = ObjectIdentity
windowsMediaStationService = _WindowsMediaStationService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 90)
)
if mibBuilder.loadTexts:
    windowsMediaStationService.setStatus("current")
_WmssControllers_Type = Gauge32
_WmssControllers_Object = MibScalar
wmssControllers = _WmssControllers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 90, 1),
    _WmssControllers_Type()
)
wmssControllers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmssControllers.setStatus("current")
_WmssStations_Type = Gauge32
_WmssStations_Object = MibScalar
wmssStations = _WmssStations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 90, 2),
    _WmssStations_Type()
)
wmssStations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmssStations.setStatus("current")
_WmssStreams_Type = Gauge32
_WmssStreams_Object = MibScalar
wmssStreams = _WmssStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 90, 3),
    _WmssStreams_Type()
)
wmssStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmssStreams.setStatus("current")
_WindowsMediaUnicastService_ObjectIdentity = ObjectIdentity
windowsMediaUnicastService = _WindowsMediaUnicastService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91)
)
if mibBuilder.loadTexts:
    windowsMediaUnicastService.setStatus("current")
_WmusActiveLiveUnicastStreams_Type = Gauge32
_WmusActiveLiveUnicastStreams_Object = MibScalar
wmusActiveLiveUnicastStreams = _WmusActiveLiveUnicastStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 1),
    _WmusActiveLiveUnicastStreams_Type()
)
wmusActiveLiveUnicastStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusActiveLiveUnicastStreams.setStatus("current")
_WmusActiveStreams_Type = Gauge32
_WmusActiveStreams_Object = MibScalar
wmusActiveStreams = _WmusActiveStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 2),
    _WmusActiveStreams_Type()
)
wmusActiveStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusActiveStreams.setStatus("current")
_WmusActiveTCPStreams_Type = Gauge32
_WmusActiveTCPStreams_Object = MibScalar
wmusActiveTCPStreams = _WmusActiveTCPStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 3),
    _WmusActiveTCPStreams_Type()
)
wmusActiveTCPStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusActiveTCPStreams.setStatus("current")
_WmusActiveUDPStreams_Type = Gauge32
_WmusActiveUDPStreams_Object = MibScalar
wmusActiveUDPStreams = _WmusActiveUDPStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 4),
    _WmusActiveUDPStreams_Type()
)
wmusActiveUDPStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusActiveUDPStreams.setStatus("current")
_WmusAggregateReadRate_Type = Gauge32
_WmusAggregateReadRate_Object = MibScalar
wmusAggregateReadRate = _WmusAggregateReadRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 5),
    _WmusAggregateReadRate_Type()
)
wmusAggregateReadRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAggregateReadRate.setStatus("current")
_WmusAggregateSendRate_Type = Gauge32
_WmusAggregateSendRate_Object = MibScalar
wmusAggregateSendRate = _WmusAggregateSendRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 6),
    _WmusAggregateSendRate_Type()
)
wmusAggregateSendRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAggregateSendRate.setStatus("current")
_WmusAllocatedBandwidth_Type = Gauge32
_WmusAllocatedBandwidth_Object = MibScalar
wmusAllocatedBandwidth = _WmusAllocatedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 7),
    _WmusAllocatedBandwidth_Type()
)
wmusAllocatedBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAllocatedBandwidth.setStatus("current")
_WmusAuthenticationRequests_Type = Gauge32
_WmusAuthenticationRequests_Object = MibScalar
wmusAuthenticationRequests = _WmusAuthenticationRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 8),
    _WmusAuthenticationRequests_Type()
)
wmusAuthenticationRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAuthenticationRequests.setStatus("current")
_WmusAuthenticationsDenied_Type = Gauge32
_WmusAuthenticationsDenied_Object = MibScalar
wmusAuthenticationsDenied = _WmusAuthenticationsDenied_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 9),
    _WmusAuthenticationsDenied_Type()
)
wmusAuthenticationsDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAuthenticationsDenied.setStatus("current")
_WmusAuthorizationRequests_Type = Gauge32
_WmusAuthorizationRequests_Object = MibScalar
wmusAuthorizationRequests = _WmusAuthorizationRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 10),
    _WmusAuthorizationRequests_Type()
)
wmusAuthorizationRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAuthorizationRequests.setStatus("current")
_WmusAuthorizationsRefused_Type = Gauge32
_WmusAuthorizationsRefused_Object = MibScalar
wmusAuthorizationsRefused = _WmusAuthorizationsRefused_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 11),
    _WmusAuthorizationsRefused_Type()
)
wmusAuthorizationsRefused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusAuthorizationsRefused.setStatus("current")
_WmusConnectedClients_Type = Gauge32
_WmusConnectedClients_Object = MibScalar
wmusConnectedClients = _WmusConnectedClients_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 12),
    _WmusConnectedClients_Type()
)
wmusConnectedClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusConnectedClients.setStatus("current")
_WmusConnectionRate_Type = Gauge32
_WmusConnectionRate_Object = MibScalar
wmusConnectionRate = _WmusConnectionRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 13),
    _WmusConnectionRate_Type()
)
wmusConnectionRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusConnectionRate.setStatus("current")
_WmusHTTPStreams_Type = Gauge32
_WmusHTTPStreams_Object = MibScalar
wmusHTTPStreams = _WmusHTTPStreams_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 14),
    _WmusHTTPStreams_Type()
)
wmusHTTPStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusHTTPStreams.setStatus("current")
_WmusHTTPStreamsReadingHeader_Type = Gauge32
_WmusHTTPStreamsReadingHeader_Object = MibScalar
wmusHTTPStreamsReadingHeader = _WmusHTTPStreamsReadingHeader_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 15),
    _WmusHTTPStreamsReadingHeader_Type()
)
wmusHTTPStreamsReadingHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusHTTPStreamsReadingHeader.setStatus("current")
_WmusHTTPStreamsStreamingBody_Type = Gauge32
_WmusHTTPStreamsStreamingBody_Object = MibScalar
wmusHTTPStreamsStreamingBody = _WmusHTTPStreamsStreamingBody_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 16),
    _WmusHTTPStreamsStreamingBody_Type()
)
wmusHTTPStreamsStreamingBody.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusHTTPStreamsStreamingBody.setStatus("current")
_WmusLateReads_Type = Gauge32
_WmusLateReads_Object = MibScalar
wmusLateReads = _WmusLateReads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 17),
    _WmusLateReads_Type()
)
wmusLateReads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusLateReads.setStatus("current")
_WmusPendingConnections_Type = Gauge32
_WmusPendingConnections_Object = MibScalar
wmusPendingConnections = _WmusPendingConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 18),
    _WmusPendingConnections_Type()
)
wmusPendingConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusPendingConnections.setStatus("current")
_WmusPluginErrors_Type = Gauge32
_WmusPluginErrors_Object = MibScalar
wmusPluginErrors = _WmusPluginErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 19),
    _WmusPluginErrors_Type()
)
wmusPluginErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusPluginErrors.setStatus("current")
_WmusPluginEvents_Type = Gauge32
_WmusPluginEvents_Object = MibScalar
wmusPluginEvents = _WmusPluginEvents_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 20),
    _WmusPluginEvents_Type()
)
wmusPluginEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusPluginEvents.setStatus("current")
_WmusSchedulingRate_Type = Gauge32
_WmusSchedulingRate_Object = MibScalar
wmusSchedulingRate = _WmusSchedulingRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 21),
    _WmusSchedulingRate_Type()
)
wmusSchedulingRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusSchedulingRate.setStatus("current")
_WmusStreamErrors_Type = Gauge32
_WmusStreamErrors_Object = MibScalar
wmusStreamErrors = _WmusStreamErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 22),
    _WmusStreamErrors_Type()
)
wmusStreamErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusStreamErrors.setStatus("current")
_WmusStreamTerminations_Type = Gauge32
_WmusStreamTerminations_Object = MibScalar
wmusStreamTerminations = _WmusStreamTerminations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 23),
    _WmusStreamTerminations_Type()
)
wmusStreamTerminations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusStreamTerminations.setStatus("current")
_WmusUDPResendRequests_Type = Gauge32
_WmusUDPResendRequests_Object = MibScalar
wmusUDPResendRequests = _WmusUDPResendRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 24),
    _WmusUDPResendRequests_Type()
)
wmusUDPResendRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusUDPResendRequests.setStatus("current")
_WmusUDPResendsSent_Type = Gauge32
_WmusUDPResendsSent_Object = MibScalar
wmusUDPResendsSent = _WmusUDPResendsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 25),
    _WmusUDPResendsSent_Type()
)
wmusUDPResendsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmusUDPResendsSent.setStatus("current")
_WinsServer_ObjectIdentity = ObjectIdentity
winsServer = _WinsServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92)
)
_WinsSrvrFailedQueriesPerSec_Type = Gauge32
_WinsSrvrFailedQueriesPerSec_Object = MibScalar
winsSrvrFailedQueriesPerSec = _WinsSrvrFailedQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 1),
    _WinsSrvrFailedQueriesPerSec_Type()
)
winsSrvrFailedQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrFailedQueriesPerSec.setStatus("current")
_WinsSrvrFailedReleasesPerSec_Type = Gauge32
_WinsSrvrFailedReleasesPerSec_Object = MibScalar
winsSrvrFailedReleasesPerSec = _WinsSrvrFailedReleasesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 2),
    _WinsSrvrFailedReleasesPerSec_Type()
)
winsSrvrFailedReleasesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrFailedReleasesPerSec.setStatus("current")
_WinsSrvrGroupConflictsPerSec_Type = Gauge32
_WinsSrvrGroupConflictsPerSec_Object = MibScalar
winsSrvrGroupConflictsPerSec = _WinsSrvrGroupConflictsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 3),
    _WinsSrvrGroupConflictsPerSec_Type()
)
winsSrvrGroupConflictsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrGroupConflictsPerSec.setStatus("current")
_WinsSrvrGroupRegsPerSec_Type = Gauge32
_WinsSrvrGroupRegsPerSec_Object = MibScalar
winsSrvrGroupRegsPerSec = _WinsSrvrGroupRegsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 4),
    _WinsSrvrGroupRegsPerSec_Type()
)
winsSrvrGroupRegsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrGroupRegsPerSec.setStatus("current")
_WinsSrvrGroupRenewalsPerSec_Type = Gauge32
_WinsSrvrGroupRenewalsPerSec_Object = MibScalar
winsSrvrGroupRenewalsPerSec = _WinsSrvrGroupRenewalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 5),
    _WinsSrvrGroupRenewalsPerSec_Type()
)
winsSrvrGroupRenewalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrGroupRenewalsPerSec.setStatus("current")
_WinsSrvrQueriesPerSec_Type = Gauge32
_WinsSrvrQueriesPerSec_Object = MibScalar
winsSrvrQueriesPerSec = _WinsSrvrQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 6),
    _WinsSrvrQueriesPerSec_Type()
)
winsSrvrQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrQueriesPerSec.setStatus("current")
_WinsSrvrReleasesPerSec_Type = Gauge32
_WinsSrvrReleasesPerSec_Object = MibScalar
winsSrvrReleasesPerSec = _WinsSrvrReleasesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 7),
    _WinsSrvrReleasesPerSec_Type()
)
winsSrvrReleasesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrReleasesPerSec.setStatus("current")
_WinsSrvrSuccessfulQueriesPerSec_Type = Gauge32
_WinsSrvrSuccessfulQueriesPerSec_Object = MibScalar
winsSrvrSuccessfulQueriesPerSec = _WinsSrvrSuccessfulQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 8),
    _WinsSrvrSuccessfulQueriesPerSec_Type()
)
winsSrvrSuccessfulQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrSuccessfulQueriesPerSec.setStatus("current")
_WinsSrvrSuccessfulReleasesPerSec_Type = Gauge32
_WinsSrvrSuccessfulReleasesPerSec_Object = MibScalar
winsSrvrSuccessfulReleasesPerSec = _WinsSrvrSuccessfulReleasesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 9),
    _WinsSrvrSuccessfulReleasesPerSec_Type()
)
winsSrvrSuccessfulReleasesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrSuccessfulReleasesPerSec.setStatus("current")
_WinsSrvrTotalNumConflictsPerSec_Type = Gauge32
_WinsSrvrTotalNumConflictsPerSec_Object = MibScalar
winsSrvrTotalNumConflictsPerSec = _WinsSrvrTotalNumConflictsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 10),
    _WinsSrvrTotalNumConflictsPerSec_Type()
)
winsSrvrTotalNumConflictsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrTotalNumConflictsPerSec.setStatus("current")
_WinsSrvrTotalNumRegsPerSec_Type = Gauge32
_WinsSrvrTotalNumRegsPerSec_Object = MibScalar
winsSrvrTotalNumRegsPerSec = _WinsSrvrTotalNumRegsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 11),
    _WinsSrvrTotalNumRegsPerSec_Type()
)
winsSrvrTotalNumRegsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrTotalNumRegsPerSec.setStatus("current")
_WinsSrvrTotalNumRenewalsPerSec_Type = Gauge32
_WinsSrvrTotalNumRenewalsPerSec_Object = MibScalar
winsSrvrTotalNumRenewalsPerSec = _WinsSrvrTotalNumRenewalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 12),
    _WinsSrvrTotalNumRenewalsPerSec_Type()
)
winsSrvrTotalNumRenewalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrTotalNumRenewalsPerSec.setStatus("current")
_WinsSrvrUniqueConflictsPerSec_Type = Gauge32
_WinsSrvrUniqueConflictsPerSec_Object = MibScalar
winsSrvrUniqueConflictsPerSec = _WinsSrvrUniqueConflictsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 13),
    _WinsSrvrUniqueConflictsPerSec_Type()
)
winsSrvrUniqueConflictsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrUniqueConflictsPerSec.setStatus("current")
_WinsSrvrUniqueRegsPerSec_Type = Gauge32
_WinsSrvrUniqueRegsPerSec_Object = MibScalar
winsSrvrUniqueRegsPerSec = _WinsSrvrUniqueRegsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 14),
    _WinsSrvrUniqueRegsPerSec_Type()
)
winsSrvrUniqueRegsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrUniqueRegsPerSec.setStatus("current")
_WinsSrvrUniqueRenewalsPerSec_Type = Gauge32
_WinsSrvrUniqueRenewalsPerSec_Object = MibScalar
winsSrvrUniqueRenewalsPerSec = _WinsSrvrUniqueRenewalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 15),
    _WinsSrvrUniqueRenewalsPerSec_Type()
)
winsSrvrUniqueRenewalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    winsSrvrUniqueRenewalsPerSec.setStatus("current")
_WmiObjects_ObjectIdentity = ObjectIdentity
wmiObjects = _WmiObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 93)
)
if mibBuilder.loadTexts:
    wmiObjects.setStatus("current")
_WmiObjectsHiPerfClasses_Type = Gauge32
_WmiObjectsHiPerfClasses_Object = MibScalar
wmiObjectsHiPerfClasses = _WmiObjectsHiPerfClasses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 93, 1),
    _WmiObjectsHiPerfClasses_Type()
)
wmiObjectsHiPerfClasses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmiObjectsHiPerfClasses.setStatus("current")
_WmiObjectsHiPerfValidity_Type = Gauge32
_WmiObjectsHiPerfValidity_Object = MibScalar
wmiObjectsHiPerfValidity = _WmiObjectsHiPerfValidity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 93, 2),
    _WmiObjectsHiPerfValidity_Type()
)
wmiObjectsHiPerfValidity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wmiObjectsHiPerfValidity.setStatus("current")
_BitsNetUtilization_ObjectIdentity = ObjectIdentity
bitsNetUtilization = _BitsNetUtilization_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94)
)
if mibBuilder.loadTexts:
    bitsNetUtilization.setStatus("current")
_BnuBITSDownloadBlockSizeBytes_Type = Gauge32
_BnuBITSDownloadBlockSizeBytes_Object = MibScalar
bnuBITSDownloadBlockSizeBytes = _BnuBITSDownloadBlockSizeBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 1),
    _BnuBITSDownloadBlockSizeBytes_Type()
)
bnuBITSDownloadBlockSizeBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuBITSDownloadBlockSizeBytes.setStatus("current")
_BnuBITSDownloadResponseIntvlMsec_Type = Gauge32
_BnuBITSDownloadResponseIntvlMsec_Object = MibScalar
bnuBITSDownloadResponseIntvlMsec = _BnuBITSDownloadResponseIntvlMsec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 2),
    _BnuBITSDownloadResponseIntvlMsec_Type()
)
bnuBITSDownloadResponseIntvlMsec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuBITSDownloadResponseIntvlMsec.setStatus("current")
_BnuEstBWAvailRemoteBitsPerSec_Type = Gauge32
_BnuEstBWAvailRemoteBitsPerSec_Object = MibScalar
bnuEstBWAvailRemoteBitsPerSec = _BnuEstBWAvailRemoteBitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 3),
    _BnuEstBWAvailRemoteBitsPerSec_Type()
)
bnuEstBWAvailRemoteBitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuEstBWAvailRemoteBitsPerSec.setStatus("current")
_BnuIGDSpeedBitsPerSec_Type = Gauge32
_BnuIGDSpeedBitsPerSec_Object = MibScalar
bnuIGDSpeedBitsPerSec = _BnuIGDSpeedBitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 4),
    _BnuIGDSpeedBitsPerSec_Type()
)
bnuIGDSpeedBitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuIGDSpeedBitsPerSec.setStatus("current")
_BnuNetcardSpeedBitsPerSec_Type = Gauge32
_BnuNetcardSpeedBitsPerSec_Object = MibScalar
bnuNetcardSpeedBitsPerSec = _BnuNetcardSpeedBitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 5),
    _BnuNetcardSpeedBitsPerSec_Type()
)
bnuNetcardSpeedBitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuNetcardSpeedBitsPerSec.setStatus("current")
_BnuPercentIGDFree_Type = Gauge32
_BnuPercentIGDFree_Object = MibScalar
bnuPercentIGDFree = _BnuPercentIGDFree_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 6),
    _BnuPercentIGDFree_Type()
)
bnuPercentIGDFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuPercentIGDFree.setStatus("current")
_BnuPercentNetcardFree_Type = Gauge32
_BnuPercentNetcardFree_Object = MibScalar
bnuPercentNetcardFree = _BnuPercentNetcardFree_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 7),
    _BnuPercentNetcardFree_Type()
)
bnuPercentNetcardFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuPercentNetcardFree.setStatus("current")
_BnuRemoteServerSpeedBitsPerSec_Type = Gauge32
_BnuRemoteServerSpeedBitsPerSec_Object = MibScalar
bnuRemoteServerSpeedBitsPerSec = _BnuRemoteServerSpeedBitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 8),
    _BnuRemoteServerSpeedBitsPerSec_Type()
)
bnuRemoteServerSpeedBitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bnuRemoteServerSpeedBitsPerSec.setStatus("current")
_AdvDatabaseTable_Object = MibTable
advDatabaseTable = _AdvDatabaseTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95)
)
if mibBuilder.loadTexts:
    advDatabaseTable.setStatus("current")
_AdvDatabaseEntry_Object = MibTableRow
advDatabaseEntry = _AdvDatabaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1)
)
advDatabaseEntry.setIndexNames(
    (0, "INFORMANT-ADV", "adbInstance"),
)
if mibBuilder.loadTexts:
    advDatabaseEntry.setStatus("current")
_AdbInstance_Type = InstanceName
_AdbInstance_Object = MibTableColumn
adbInstance = _AdbInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 1),
    _AdbInstance_Type()
)
adbInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbInstance.setStatus("current")
_AdbDatabaseCachePercentHit_Type = Gauge32
_AdbDatabaseCachePercentHit_Object = MibTableColumn
adbDatabaseCachePercentHit = _AdbDatabaseCachePercentHit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 2),
    _AdbDatabaseCachePercentHit_Type()
)
adbDatabaseCachePercentHit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbDatabaseCachePercentHit.setStatus("current")
_AdbDatabaseCacheSize_Type = Gauge32
_AdbDatabaseCacheSize_Object = MibTableColumn
adbDatabaseCacheSize = _AdbDatabaseCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 3),
    _AdbDatabaseCacheSize_Type()
)
adbDatabaseCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbDatabaseCacheSize.setStatus("current")
_AdbDatabaseCacheSizeMB_Type = Gauge32
_AdbDatabaseCacheSizeMB_Object = MibTableColumn
adbDatabaseCacheSizeMB = _AdbDatabaseCacheSizeMB_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 4),
    _AdbDatabaseCacheSizeMB_Type()
)
adbDatabaseCacheSizeMB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbDatabaseCacheSizeMB.setStatus("current")
_AdbDatabasePageEvictionsPerSec_Type = Gauge32
_AdbDatabasePageEvictionsPerSec_Object = MibTableColumn
adbDatabasePageEvictionsPerSec = _AdbDatabasePageEvictionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 5),
    _AdbDatabasePageEvictionsPerSec_Type()
)
adbDatabasePageEvictionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbDatabasePageEvictionsPerSec.setStatus("current")
_AdbDatabasePageFaultStallsPerSec_Type = Gauge32
_AdbDatabasePageFaultStallsPerSec_Object = MibTableColumn
adbDatabasePageFaultStallsPerSec = _AdbDatabasePageFaultStallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 6),
    _AdbDatabasePageFaultStallsPerSec_Type()
)
adbDatabasePageFaultStallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbDatabasePageFaultStallsPerSec.setStatus("current")
_AdbDatabasePageFaultsPerSec_Type = Gauge32
_AdbDatabasePageFaultsPerSec_Object = MibTableColumn
adbDatabasePageFaultsPerSec = _AdbDatabasePageFaultsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 7),
    _AdbDatabasePageFaultsPerSec_Type()
)
adbDatabasePageFaultsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbDatabasePageFaultsPerSec.setStatus("current")
_AdbIPerODatabaseReadsAvgLatency_Type = Gauge32
_AdbIPerODatabaseReadsAvgLatency_Object = MibTableColumn
adbIPerODatabaseReadsAvgLatency = _AdbIPerODatabaseReadsAvgLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 8),
    _AdbIPerODatabaseReadsAvgLatency_Type()
)
adbIPerODatabaseReadsAvgLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerODatabaseReadsAvgLatency.setStatus("current")
_AdbIPerODatabaseReadsPerSec_Type = Gauge32
_AdbIPerODatabaseReadsPerSec_Object = MibTableColumn
adbIPerODatabaseReadsPerSec = _AdbIPerODatabaseReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 9),
    _AdbIPerODatabaseReadsPerSec_Type()
)
adbIPerODatabaseReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerODatabaseReadsPerSec.setStatus("current")
_AdbIPerODatabaseWritesAvgLatency_Type = Gauge32
_AdbIPerODatabaseWritesAvgLatency_Object = MibTableColumn
adbIPerODatabaseWritesAvgLatency = _AdbIPerODatabaseWritesAvgLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 10),
    _AdbIPerODatabaseWritesAvgLatency_Type()
)
adbIPerODatabaseWritesAvgLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerODatabaseWritesAvgLatency.setStatus("current")
_AdbIPerODatabaseWritesPerSec_Type = Gauge32
_AdbIPerODatabaseWritesPerSec_Object = MibTableColumn
adbIPerODatabaseWritesPerSec = _AdbIPerODatabaseWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 11),
    _AdbIPerODatabaseWritesPerSec_Type()
)
adbIPerODatabaseWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerODatabaseWritesPerSec.setStatus("current")
_AdbIPerOLogReadsPerSec_Type = Gauge32
_AdbIPerOLogReadsPerSec_Object = MibTableColumn
adbIPerOLogReadsPerSec = _AdbIPerOLogReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 12),
    _AdbIPerOLogReadsPerSec_Type()
)
adbIPerOLogReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerOLogReadsPerSec.setStatus("current")
_AdbIPerOLogWritesAverageLatency_Type = Gauge32
_AdbIPerOLogWritesAverageLatency_Object = MibTableColumn
adbIPerOLogWritesAverageLatency = _AdbIPerOLogWritesAverageLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 13),
    _AdbIPerOLogWritesAverageLatency_Type()
)
adbIPerOLogWritesAverageLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerOLogWritesAverageLatency.setStatus("current")
_AdbIPerOLogWritesPerSec_Type = Gauge32
_AdbIPerOLogWritesPerSec_Object = MibTableColumn
adbIPerOLogWritesPerSec = _AdbIPerOLogWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 14),
    _AdbIPerOLogWritesPerSec_Type()
)
adbIPerOLogWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIPerOLogWritesPerSec.setStatus("current")
_AdbLogBytesWritePerSec_Type = Gauge32
_AdbLogBytesWritePerSec_Object = MibTableColumn
adbLogBytesWritePerSec = _AdbLogBytesWritePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 15),
    _AdbLogBytesWritePerSec_Type()
)
adbLogBytesWritePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbLogBytesWritePerSec.setStatus("current")
_AdbLogRecordStallsPerSec_Type = Gauge32
_AdbLogRecordStallsPerSec_Object = MibTableColumn
adbLogRecordStallsPerSec = _AdbLogRecordStallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 16),
    _AdbLogRecordStallsPerSec_Type()
)
adbLogRecordStallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbLogRecordStallsPerSec.setStatus("current")
_AdbLogThreadsWaiting_Type = Gauge32
_AdbLogThreadsWaiting_Object = MibTableColumn
adbLogThreadsWaiting = _AdbLogThreadsWaiting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 17),
    _AdbLogThreadsWaiting_Type()
)
adbLogThreadsWaiting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbLogThreadsWaiting.setStatus("current")
_AdbLogWritesPerSec_Type = Gauge32
_AdbLogWritesPerSec_Object = MibTableColumn
adbLogWritesPerSec = _AdbLogWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 18),
    _AdbLogWritesPerSec_Type()
)
adbLogWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbLogWritesPerSec.setStatus("current")
_AdbPagesConverted_Type = Gauge32
_AdbPagesConverted_Object = MibTableColumn
adbPagesConverted = _AdbPagesConverted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 19),
    _AdbPagesConverted_Type()
)
adbPagesConverted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbPagesConverted.setStatus("current")
_AdbPagesConvertedPerSec_Type = Gauge32
_AdbPagesConvertedPerSec_Object = MibTableColumn
adbPagesConvertedPerSec = _AdbPagesConvertedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 20),
    _AdbPagesConvertedPerSec_Type()
)
adbPagesConvertedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbPagesConvertedPerSec.setStatus("current")
_AdbRecordsConverted_Type = Gauge32
_AdbRecordsConverted_Object = MibTableColumn
adbRecordsConverted = _AdbRecordsConverted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 21),
    _AdbRecordsConverted_Type()
)
adbRecordsConverted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbRecordsConverted.setStatus("current")
_AdbRecordsConvertedPerSec_Type = Gauge32
_AdbRecordsConvertedPerSec_Object = MibTableColumn
adbRecordsConvertedPerSec = _AdbRecordsConvertedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 22),
    _AdbRecordsConvertedPerSec_Type()
)
adbRecordsConvertedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbRecordsConvertedPerSec.setStatus("current")
_AdbSessionsPercentUsed_Type = Gauge32
_AdbSessionsPercentUsed_Object = MibTableColumn
adbSessionsPercentUsed = _AdbSessionsPercentUsed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 23),
    _AdbSessionsPercentUsed_Type()
)
adbSessionsPercentUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbSessionsPercentUsed.setStatus("current")
_AdbSessionsInUse_Type = Gauge32
_AdbSessionsInUse_Object = MibTableColumn
adbSessionsInUse = _AdbSessionsInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 24),
    _AdbSessionsInUse_Type()
)
adbSessionsInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbSessionsInUse.setStatus("current")
_AdbTableOpenCachePercentHit_Type = Gauge32
_AdbTableOpenCachePercentHit_Object = MibTableColumn
adbTableOpenCachePercentHit = _AdbTableOpenCachePercentHit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 25),
    _AdbTableOpenCachePercentHit_Type()
)
adbTableOpenCachePercentHit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbTableOpenCachePercentHit.setStatus("current")
_AdbTableOpenCacheHitsPerSec_Type = Gauge32
_AdbTableOpenCacheHitsPerSec_Object = MibTableColumn
adbTableOpenCacheHitsPerSec = _AdbTableOpenCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 26),
    _AdbTableOpenCacheHitsPerSec_Type()
)
adbTableOpenCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbTableOpenCacheHitsPerSec.setStatus("current")
_AdbTableOpenCacheMissesPerSec_Type = Gauge32
_AdbTableOpenCacheMissesPerSec_Object = MibTableColumn
adbTableOpenCacheMissesPerSec = _AdbTableOpenCacheMissesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 27),
    _AdbTableOpenCacheMissesPerSec_Type()
)
adbTableOpenCacheMissesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbTableOpenCacheMissesPerSec.setStatus("current")
_AdbTableOpensPerSec_Type = Gauge32
_AdbTableOpensPerSec_Object = MibTableColumn
adbTableOpensPerSec = _AdbTableOpensPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 28),
    _AdbTableOpensPerSec_Type()
)
adbTableOpensPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbTableOpensPerSec.setStatus("current")
_AdbVersionBucketsAllocated_Type = Gauge32
_AdbVersionBucketsAllocated_Object = MibTableColumn
adbVersionBucketsAllocated = _AdbVersionBucketsAllocated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 29),
    _AdbVersionBucketsAllocated_Type()
)
adbVersionBucketsAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbVersionBucketsAllocated.setStatus("current")
_AdvDatabaseInstancesTable_Object = MibTable
advDatabaseInstancesTable = _AdvDatabaseInstancesTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96)
)
if mibBuilder.loadTexts:
    advDatabaseInstancesTable.setStatus("current")
_AdvDatabaseInstancesEntry_Object = MibTableRow
advDatabaseInstancesEntry = _AdvDatabaseInstancesEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1)
)
advDatabaseInstancesEntry.setIndexNames(
    (0, "INFORMANT-ADV", "adbiInstance"),
)
if mibBuilder.loadTexts:
    advDatabaseInstancesEntry.setStatus("current")
_AdbiInstance_Type = InstanceName
_AdbiInstance_Object = MibTableColumn
adbiInstance = _AdbiInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 1),
    _AdbiInstance_Type()
)
adbiInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiInstance.setStatus("current")
_AdbIODatabaseReadsAverageLatency_Type = Gauge32
_AdbIODatabaseReadsAverageLatency_Object = MibTableColumn
adbIODatabaseReadsAverageLatency = _AdbIODatabaseReadsAverageLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 2),
    _AdbIODatabaseReadsAverageLatency_Type()
)
adbIODatabaseReadsAverageLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIODatabaseReadsAverageLatency.setStatus("current")
_AdbIODatabaseReadsPerSec_Type = Gauge32
_AdbIODatabaseReadsPerSec_Object = MibTableColumn
adbIODatabaseReadsPerSec = _AdbIODatabaseReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 3),
    _AdbIODatabaseReadsPerSec_Type()
)
adbIODatabaseReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIODatabaseReadsPerSec.setStatus("current")
_AdbIODatabaseWriteAverageLatency_Type = Gauge32
_AdbIODatabaseWriteAverageLatency_Object = MibTableColumn
adbIODatabaseWriteAverageLatency = _AdbIODatabaseWriteAverageLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 4),
    _AdbIODatabaseWriteAverageLatency_Type()
)
adbIODatabaseWriteAverageLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIODatabaseWriteAverageLatency.setStatus("current")
_AdbIODatabaseWritesPerSec_Type = Gauge32
_AdbIODatabaseWritesPerSec_Object = MibTableColumn
adbIODatabaseWritesPerSec = _AdbIODatabaseWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 5),
    _AdbIODatabaseWritesPerSec_Type()
)
adbIODatabaseWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIODatabaseWritesPerSec.setStatus("current")
_AdbIOLogReadsPerSec_Type = Gauge32
_AdbIOLogReadsPerSec_Object = MibTableColumn
adbIOLogReadsPerSec = _AdbIOLogReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 6),
    _AdbIOLogReadsPerSec_Type()
)
adbIOLogReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIOLogReadsPerSec.setStatus("current")
_AdbIOLogWritesAverageLatency_Type = Gauge32
_AdbIOLogWritesAverageLatency_Object = MibTableColumn
adbIOLogWritesAverageLatency = _AdbIOLogWritesAverageLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 7),
    _AdbIOLogWritesAverageLatency_Type()
)
adbIOLogWritesAverageLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIOLogWritesAverageLatency.setStatus("current")
_AdbIOLogWritesPerSec_Type = Gauge32
_AdbIOLogWritesPerSec_Object = MibTableColumn
adbIOLogWritesPerSec = _AdbIOLogWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 8),
    _AdbIOLogWritesPerSec_Type()
)
adbIOLogWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbIOLogWritesPerSec.setStatus("current")
_AdbiLogBytesWritePerSec_Type = Gauge32
_AdbiLogBytesWritePerSec_Object = MibTableColumn
adbiLogBytesWritePerSec = _AdbiLogBytesWritePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 9),
    _AdbiLogBytesWritePerSec_Type()
)
adbiLogBytesWritePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogBytesWritePerSec.setStatus("current")
_AdbiLogGenCheckpointDepth_Type = Gauge32
_AdbiLogGenCheckpointDepth_Object = MibTableColumn
adbiLogGenCheckpointDepth = _AdbiLogGenCheckpointDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 10),
    _AdbiLogGenCheckpointDepth_Type()
)
adbiLogGenCheckpointDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogGenCheckpointDepth.setStatus("current")
_AdbiLogGenCheckpointDepthMax_Type = Gauge32
_AdbiLogGenCheckpointDepthMax_Object = MibTableColumn
adbiLogGenCheckpointDepthMax = _AdbiLogGenCheckpointDepthMax_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 11),
    _AdbiLogGenCheckpointDepthMax_Type()
)
adbiLogGenCheckpointDepthMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogGenCheckpointDepthMax.setStatus("current")
_AdbiLogGenLossResiliencyDepth_Type = Gauge32
_AdbiLogGenLossResiliencyDepth_Object = MibTableColumn
adbiLogGenLossResiliencyDepth = _AdbiLogGenLossResiliencyDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 12),
    _AdbiLogGenLossResiliencyDepth_Type()
)
adbiLogGenLossResiliencyDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogGenLossResiliencyDepth.setStatus("current")
_AdbiLogRecordStallsPerSec_Type = Gauge32
_AdbiLogRecordStallsPerSec_Object = MibTableColumn
adbiLogRecordStallsPerSec = _AdbiLogRecordStallsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 13),
    _AdbiLogRecordStallsPerSec_Type()
)
adbiLogRecordStallsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogRecordStallsPerSec.setStatus("current")
_AdbiLogThreadsWaiting_Type = Gauge32
_AdbiLogThreadsWaiting_Object = MibTableColumn
adbiLogThreadsWaiting = _AdbiLogThreadsWaiting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 14),
    _AdbiLogThreadsWaiting_Type()
)
adbiLogThreadsWaiting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogThreadsWaiting.setStatus("current")
_AdbiLogWritesPerSec_Type = Gauge32
_AdbiLogWritesPerSec_Object = MibTableColumn
adbiLogWritesPerSec = _AdbiLogWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 15),
    _AdbiLogWritesPerSec_Type()
)
adbiLogWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiLogWritesPerSec.setStatus("current")
_AdbiPagesConverted_Type = Gauge32
_AdbiPagesConverted_Object = MibTableColumn
adbiPagesConverted = _AdbiPagesConverted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 16),
    _AdbiPagesConverted_Type()
)
adbiPagesConverted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiPagesConverted.setStatus("current")
_AdbiPagesConvertedPerSec_Type = Gauge32
_AdbiPagesConvertedPerSec_Object = MibTableColumn
adbiPagesConvertedPerSec = _AdbiPagesConvertedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 17),
    _AdbiPagesConvertedPerSec_Type()
)
adbiPagesConvertedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiPagesConvertedPerSec.setStatus("current")
_AdbiRecordsConverted_Type = Gauge32
_AdbiRecordsConverted_Object = MibTableColumn
adbiRecordsConverted = _AdbiRecordsConverted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 18),
    _AdbiRecordsConverted_Type()
)
adbiRecordsConverted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiRecordsConverted.setStatus("current")
_AdbiRecordsConvertedPerSec_Type = Gauge32
_AdbiRecordsConvertedPerSec_Object = MibTableColumn
adbiRecordsConvertedPerSec = _AdbiRecordsConvertedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 19),
    _AdbiRecordsConvertedPerSec_Type()
)
adbiRecordsConvertedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiRecordsConvertedPerSec.setStatus("current")
_AdbiSessionsPercentUsed_Type = Gauge32
_AdbiSessionsPercentUsed_Object = MibTableColumn
adbiSessionsPercentUsed = _AdbiSessionsPercentUsed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 20),
    _AdbiSessionsPercentUsed_Type()
)
adbiSessionsPercentUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiSessionsPercentUsed.setStatus("current")
_AdbiSessionsInUse_Type = Gauge32
_AdbiSessionsInUse_Object = MibTableColumn
adbiSessionsInUse = _AdbiSessionsInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 21),
    _AdbiSessionsInUse_Type()
)
adbiSessionsInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiSessionsInUse.setStatus("current")
_AdbiStreamBackupPagesReadPerSec_Type = Gauge32
_AdbiStreamBackupPagesReadPerSec_Object = MibTableColumn
adbiStreamBackupPagesReadPerSec = _AdbiStreamBackupPagesReadPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 22),
    _AdbiStreamBackupPagesReadPerSec_Type()
)
adbiStreamBackupPagesReadPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiStreamBackupPagesReadPerSec.setStatus("current")
_AdbiTableOpenCachePercentHit_Type = Gauge32
_AdbiTableOpenCachePercentHit_Object = MibTableColumn
adbiTableOpenCachePercentHit = _AdbiTableOpenCachePercentHit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 23),
    _AdbiTableOpenCachePercentHit_Type()
)
adbiTableOpenCachePercentHit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiTableOpenCachePercentHit.setStatus("current")
_AdbiTableOpenCacheHitsPerSec_Type = Gauge32
_AdbiTableOpenCacheHitsPerSec_Object = MibTableColumn
adbiTableOpenCacheHitsPerSec = _AdbiTableOpenCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 24),
    _AdbiTableOpenCacheHitsPerSec_Type()
)
adbiTableOpenCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiTableOpenCacheHitsPerSec.setStatus("current")
_AdbiTableOpenCacheMissesPerSec_Type = Gauge32
_AdbiTableOpenCacheMissesPerSec_Object = MibTableColumn
adbiTableOpenCacheMissesPerSec = _AdbiTableOpenCacheMissesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 25),
    _AdbiTableOpenCacheMissesPerSec_Type()
)
adbiTableOpenCacheMissesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiTableOpenCacheMissesPerSec.setStatus("current")
_AdbiTableOpensPerSec_Type = Gauge32
_AdbiTableOpensPerSec_Object = MibTableColumn
adbiTableOpensPerSec = _AdbiTableOpensPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 26),
    _AdbiTableOpensPerSec_Type()
)
adbiTableOpensPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiTableOpensPerSec.setStatus("current")
_AdbiVersionBucketsAllocated_Type = Gauge32
_AdbiVersionBucketsAllocated_Object = MibTableColumn
adbiVersionBucketsAllocated = _AdbiVersionBucketsAllocated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 27),
    _AdbiVersionBucketsAllocated_Type()
)
adbiVersionBucketsAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbiVersionBucketsAllocated.setStatus("current")
_AdvDatabaseTableClassesTable_Object = MibTable
advDatabaseTableClassesTable = _AdvDatabaseTableClassesTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 97)
)
if mibBuilder.loadTexts:
    advDatabaseTableClassesTable.setStatus("current")
_AdvDatabaseTableClassesEntry_Object = MibTableRow
advDatabaseTableClassesEntry = _AdvDatabaseTableClassesEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 97, 1)
)
advDatabaseTableClassesEntry.setIndexNames(
    (0, "INFORMANT-ADV", "adbtcInstance"),
)
if mibBuilder.loadTexts:
    advDatabaseTableClassesEntry.setStatus("current")
_AdbtcInstance_Type = InstanceName
_AdbtcInstance_Object = MibTableColumn
adbtcInstance = _AdbtcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 97, 1, 1),
    _AdbtcInstance_Type()
)
adbtcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbtcInstance.setStatus("current")
_AdbtcCacheSizeMB_Type = Gauge32
_AdbtcCacheSizeMB_Object = MibTableColumn
adbtcCacheSizeMB = _AdbtcCacheSizeMB_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 97, 1, 2),
    _AdbtcCacheSizeMB_Type()
)
adbtcCacheSizeMB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adbtcCacheSizeMB.setStatus("current")
_GenericIKEAndAuthIP_ObjectIdentity = ObjectIdentity
genericIKEAndAuthIP = _GenericIKEAndAuthIP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98)
)
if mibBuilder.loadTexts:
    genericIKEAndAuthIP.setStatus("current")
_GiaipAuthIPMainModeNegotTime_Type = Gauge32
_GiaipAuthIPMainModeNegotTime_Object = MibScalar
giaipAuthIPMainModeNegotTime = _GiaipAuthIPMainModeNegotTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 1),
    _GiaipAuthIPMainModeNegotTime_Type()
)
giaipAuthIPMainModeNegotTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipAuthIPMainModeNegotTime.setStatus("current")
_GiaipAuthIPQuickModeNegotTime_Type = Gauge32
_GiaipAuthIPQuickModeNegotTime_Object = MibScalar
giaipAuthIPQuickModeNegotTime = _GiaipAuthIPQuickModeNegotTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 2),
    _GiaipAuthIPQuickModeNegotTime_Type()
)
giaipAuthIPQuickModeNegotTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipAuthIPQuickModeNegotTime.setStatus("current")
_GiaipExtendedModeNegotiationTime_Type = Gauge32
_GiaipExtendedModeNegotiationTime_Object = MibScalar
giaipExtendedModeNegotiationTime = _GiaipExtendedModeNegotiationTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 3),
    _GiaipExtendedModeNegotiationTime_Type()
)
giaipExtendedModeNegotiationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipExtendedModeNegotiationTime.setStatus("current")
_GiaipFailedNegotiations_Type = Gauge32
_GiaipFailedNegotiations_Object = MibScalar
giaipFailedNegotiations = _GiaipFailedNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 4),
    _GiaipFailedNegotiations_Type()
)
giaipFailedNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipFailedNegotiations.setStatus("current")
_GiaipFailedNegotiationsPerSec_Type = Gauge32
_GiaipFailedNegotiationsPerSec_Object = MibScalar
giaipFailedNegotiationsPerSec = _GiaipFailedNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 5),
    _GiaipFailedNegotiationsPerSec_Type()
)
giaipFailedNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipFailedNegotiationsPerSec.setStatus("current")
_GiaipIKEMainModeNegotiationTime_Type = Gauge32
_GiaipIKEMainModeNegotiationTime_Object = MibScalar
giaipIKEMainModeNegotiationTime = _GiaipIKEMainModeNegotiationTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 6),
    _GiaipIKEMainModeNegotiationTime_Type()
)
giaipIKEMainModeNegotiationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipIKEMainModeNegotiationTime.setStatus("current")
_GiaipIKEQuickModeNegotiationTime_Type = Gauge32
_GiaipIKEQuickModeNegotiationTime_Object = MibScalar
giaipIKEQuickModeNegotiationTime = _GiaipIKEQuickModeNegotiationTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 7),
    _GiaipIKEQuickModeNegotiationTime_Type()
)
giaipIKEQuickModeNegotiationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipIKEQuickModeNegotiationTime.setStatus("current")
_GiaipInvalidPacketReceivedPerSec_Type = Gauge32
_GiaipInvalidPacketReceivedPerSec_Object = MibScalar
giaipInvalidPacketReceivedPerSec = _GiaipInvalidPacketReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 8),
    _GiaipInvalidPacketReceivedPerSec_Type()
)
giaipInvalidPacketReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipInvalidPacketReceivedPerSec.setStatus("current")
_GiaipPacketsReceivedPerSec_Type = Gauge32
_GiaipPacketsReceivedPerSec_Object = MibScalar
giaipPacketsReceivedPerSec = _GiaipPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 9),
    _GiaipPacketsReceivedPerSec_Type()
)
giaipPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipPacketsReceivedPerSec.setStatus("current")
_GiaipSuccessfulNegotiations_Type = Gauge32
_GiaipSuccessfulNegotiations_Object = MibScalar
giaipSuccessfulNegotiations = _GiaipSuccessfulNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 10),
    _GiaipSuccessfulNegotiations_Type()
)
giaipSuccessfulNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipSuccessfulNegotiations.setStatus("current")
_GiaipSuccessfulNegotiationPerSec_Type = Gauge32
_GiaipSuccessfulNegotiationPerSec_Object = MibScalar
giaipSuccessfulNegotiationPerSec = _GiaipSuccessfulNegotiationPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 11),
    _GiaipSuccessfulNegotiationPerSec_Type()
)
giaipSuccessfulNegotiationPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    giaipSuccessfulNegotiationPerSec.setStatus("current")
_HttpService_ObjectIdentity = ObjectIdentity
httpService = _HttpService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99)
)
if mibBuilder.loadTexts:
    httpService.setStatus("current")
_HttpServiceCurrentUrisCached_Type = Gauge32
_HttpServiceCurrentUrisCached_Object = MibScalar
httpServiceCurrentUrisCached = _HttpServiceCurrentUrisCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 1),
    _HttpServiceCurrentUrisCached_Type()
)
httpServiceCurrentUrisCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpServiceCurrentUrisCached.setStatus("current")
_HttpServiceTotalFlushedUris_Type = Gauge32
_HttpServiceTotalFlushedUris_Object = MibScalar
httpServiceTotalFlushedUris = _HttpServiceTotalFlushedUris_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 2),
    _HttpServiceTotalFlushedUris_Type()
)
httpServiceTotalFlushedUris.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpServiceTotalFlushedUris.setStatus("current")
_HttpServiceTotalUrisCached_Type = Gauge32
_HttpServiceTotalUrisCached_Object = MibScalar
httpServiceTotalUrisCached = _HttpServiceTotalUrisCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 3),
    _HttpServiceTotalUrisCached_Type()
)
httpServiceTotalUrisCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpServiceTotalUrisCached.setStatus("current")
_HttpServiceUriCacheFlushes_Type = Gauge32
_HttpServiceUriCacheFlushes_Object = MibScalar
httpServiceUriCacheFlushes = _HttpServiceUriCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 4),
    _HttpServiceUriCacheFlushes_Type()
)
httpServiceUriCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpServiceUriCacheFlushes.setStatus("current")
_HttpServiceUriCacheHits_Type = Gauge32
_HttpServiceUriCacheHits_Object = MibScalar
httpServiceUriCacheHits = _HttpServiceUriCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 5),
    _HttpServiceUriCacheHits_Type()
)
httpServiceUriCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpServiceUriCacheHits.setStatus("current")
_HttpServiceUriCacheMisses_Type = Gauge32
_HttpServiceUriCacheMisses_Object = MibScalar
httpServiceUriCacheMisses = _HttpServiceUriCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 6),
    _HttpServiceUriCacheMisses_Type()
)
httpServiceUriCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpServiceUriCacheMisses.setStatus("current")
_HttpServiceRequestQueuesTable_Object = MibTable
httpServiceRequestQueuesTable = _HttpServiceRequestQueuesTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100)
)
if mibBuilder.loadTexts:
    httpServiceRequestQueuesTable.setStatus("current")
_HttpServiceRequestQueuesEntry_Object = MibTableRow
httpServiceRequestQueuesEntry = _HttpServiceRequestQueuesEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1)
)
httpServiceRequestQueuesEntry.setIndexNames(
    (0, "INFORMANT-ADV", "httpsrqInstance"),
)
if mibBuilder.loadTexts:
    httpServiceRequestQueuesEntry.setStatus("current")
_HttpsrqInstance_Type = InstanceName
_HttpsrqInstance_Object = MibTableColumn
httpsrqInstance = _HttpsrqInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 1),
    _HttpsrqInstance_Type()
)
httpsrqInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqInstance.setStatus("current")
_HttpsrqArrivalRate_Type = Gauge32
_HttpsrqArrivalRate_Object = MibTableColumn
httpsrqArrivalRate = _HttpsrqArrivalRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 2),
    _HttpsrqArrivalRate_Type()
)
httpsrqArrivalRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqArrivalRate.setStatus("current")
_HttpsrqCacheHitRate_Type = Gauge32
_HttpsrqCacheHitRate_Object = MibTableColumn
httpsrqCacheHitRate = _HttpsrqCacheHitRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 3),
    _HttpsrqCacheHitRate_Type()
)
httpsrqCacheHitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqCacheHitRate.setStatus("current")
_HttpsrqCurrentQueueSize_Type = Gauge32
_HttpsrqCurrentQueueSize_Object = MibTableColumn
httpsrqCurrentQueueSize = _HttpsrqCurrentQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 4),
    _HttpsrqCurrentQueueSize_Type()
)
httpsrqCurrentQueueSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqCurrentQueueSize.setStatus("current")
_HttpsrqMaxQueueItemAge_Type = Gauge32
_HttpsrqMaxQueueItemAge_Object = MibTableColumn
httpsrqMaxQueueItemAge = _HttpsrqMaxQueueItemAge_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 5),
    _HttpsrqMaxQueueItemAge_Type()
)
httpsrqMaxQueueItemAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqMaxQueueItemAge.setStatus("current")
_HttpsrqRejectedRequests_Type = Gauge32
_HttpsrqRejectedRequests_Object = MibTableColumn
httpsrqRejectedRequests = _HttpsrqRejectedRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 6),
    _HttpsrqRejectedRequests_Type()
)
httpsrqRejectedRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqRejectedRequests.setStatus("current")
_HttpsrqRejectionRate_Type = Gauge32
_HttpsrqRejectionRate_Object = MibTableColumn
httpsrqRejectionRate = _HttpsrqRejectionRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 7),
    _HttpsrqRejectionRate_Type()
)
httpsrqRejectionRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsrqRejectionRate.setStatus("current")
_HttpServiceUrlGroupsTable_Object = MibTable
httpServiceUrlGroupsTable = _HttpServiceUrlGroupsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101)
)
if mibBuilder.loadTexts:
    httpServiceUrlGroupsTable.setStatus("current")
_HttpServiceUrlGroupsEntry_Object = MibTableRow
httpServiceUrlGroupsEntry = _HttpServiceUrlGroupsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1)
)
httpServiceUrlGroupsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "httpsugInstance"),
)
if mibBuilder.loadTexts:
    httpServiceUrlGroupsEntry.setStatus("current")
_HttpsugInstance_Type = InstanceName
_HttpsugInstance_Object = MibTableColumn
httpsugInstance = _HttpsugInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 1),
    _HttpsugInstance_Type()
)
httpsugInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugInstance.setStatus("current")
_HttpsugAllRequests_Type = Gauge32
_HttpsugAllRequests_Object = MibTableColumn
httpsugAllRequests = _HttpsugAllRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 2),
    _HttpsugAllRequests_Type()
)
httpsugAllRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugAllRequests.setStatus("current")
_HttpsugBytesReceivedRate_Type = Gauge32
_HttpsugBytesReceivedRate_Object = MibTableColumn
httpsugBytesReceivedRate = _HttpsugBytesReceivedRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 3),
    _HttpsugBytesReceivedRate_Type()
)
httpsugBytesReceivedRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugBytesReceivedRate.setStatus("current")
_HttpsugBytesSentRate_Type = Gauge32
_HttpsugBytesSentRate_Object = MibTableColumn
httpsugBytesSentRate = _HttpsugBytesSentRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 4),
    _HttpsugBytesSentRate_Type()
)
httpsugBytesSentRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugBytesSentRate.setStatus("current")
_HttpsugBytesTransferredRate_Type = Gauge32
_HttpsugBytesTransferredRate_Object = MibTableColumn
httpsugBytesTransferredRate = _HttpsugBytesTransferredRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 5),
    _HttpsugBytesTransferredRate_Type()
)
httpsugBytesTransferredRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugBytesTransferredRate.setStatus("current")
_HttpsugConnectionAttempts_Type = Gauge32
_HttpsugConnectionAttempts_Object = MibTableColumn
httpsugConnectionAttempts = _HttpsugConnectionAttempts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 6),
    _HttpsugConnectionAttempts_Type()
)
httpsugConnectionAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugConnectionAttempts.setStatus("current")
_HttpsugCurrentConnections_Type = Gauge32
_HttpsugCurrentConnections_Object = MibTableColumn
httpsugCurrentConnections = _HttpsugCurrentConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 7),
    _HttpsugCurrentConnections_Type()
)
httpsugCurrentConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugCurrentConnections.setStatus("current")
_HttpsugGetRequests_Type = Gauge32
_HttpsugGetRequests_Object = MibTableColumn
httpsugGetRequests = _HttpsugGetRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 8),
    _HttpsugGetRequests_Type()
)
httpsugGetRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugGetRequests.setStatus("current")
_HttpsugHeadRequests_Type = Gauge32
_HttpsugHeadRequests_Object = MibTableColumn
httpsugHeadRequests = _HttpsugHeadRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 9),
    _HttpsugHeadRequests_Type()
)
httpsugHeadRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugHeadRequests.setStatus("current")
_HttpsugMaxConnections_Type = Gauge32
_HttpsugMaxConnections_Object = MibTableColumn
httpsugMaxConnections = _HttpsugMaxConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 10),
    _HttpsugMaxConnections_Type()
)
httpsugMaxConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpsugMaxConnections.setStatus("current")
_SecurityPerProcessStatisticTable_Object = MibTable
securityPerProcessStatisticTable = _SecurityPerProcessStatisticTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 102)
)
if mibBuilder.loadTexts:
    securityPerProcessStatisticTable.setStatus("current")
_SecurityPerProcessStatisticEntry_Object = MibTableRow
securityPerProcessStatisticEntry = _SecurityPerProcessStatisticEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1)
)
securityPerProcessStatisticEntry.setIndexNames(
    (0, "INFORMANT-ADV", "sppsInstance"),
)
if mibBuilder.loadTexts:
    securityPerProcessStatisticEntry.setStatus("current")
_SppsInstance_Type = InstanceName
_SppsInstance_Object = MibTableColumn
sppsInstance = _SppsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1, 1),
    _SppsInstance_Type()
)
sppsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sppsInstance.setStatus("current")
_SppsContextHandles_Type = Gauge32
_SppsContextHandles_Object = MibTableColumn
sppsContextHandles = _SppsContextHandles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1, 2),
    _SppsContextHandles_Type()
)
sppsContextHandles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sppsContextHandles.setStatus("current")
_SppsCredentialHandles_Type = Gauge32
_SppsCredentialHandles_Object = MibTableColumn
sppsCredentialHandles = _SppsCredentialHandles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1, 3),
    _SppsCredentialHandles_Type()
)
sppsCredentialHandles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sppsCredentialHandles.setStatus("current")
_SecuritySystemWideStatistics_ObjectIdentity = ObjectIdentity
securitySystemWideStatistics = _SecuritySystemWideStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103)
)
if mibBuilder.loadTexts:
    securitySystemWideStatistics.setStatus("current")
_SswsActiveSChannelSessionCache_Type = Gauge32
_SswsActiveSChannelSessionCache_Object = MibScalar
sswsActiveSChannelSessionCache = _SswsActiveSChannelSessionCache_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 1),
    _SswsActiveSChannelSessionCache_Type()
)
sswsActiveSChannelSessionCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsActiveSChannelSessionCache.setStatus("current")
_SswsDigestAuthentications_Type = Gauge32
_SswsDigestAuthentications_Object = MibScalar
sswsDigestAuthentications = _SswsDigestAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 2),
    _SswsDigestAuthentications_Type()
)
sswsDigestAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsDigestAuthentications.setStatus("current")
_SswsKDCASRequests_Type = Gauge32
_SswsKDCASRequests_Object = MibScalar
sswsKDCASRequests = _SswsKDCASRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 3),
    _SswsKDCASRequests_Type()
)
sswsKDCASRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsKDCASRequests.setStatus("current")
_SswsKDCTGSRequests_Type = Gauge32
_SswsKDCTGSRequests_Object = MibScalar
sswsKDCTGSRequests = _SswsKDCTGSRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 4),
    _SswsKDCTGSRequests_Type()
)
sswsKDCTGSRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsKDCTGSRequests.setStatus("current")
_SswsKerberosAuthentications_Type = Gauge32
_SswsKerberosAuthentications_Object = MibScalar
sswsKerberosAuthentications = _SswsKerberosAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 5),
    _SswsKerberosAuthentications_Type()
)
sswsKerberosAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsKerberosAuthentications.setStatus("current")
_SswsNTLMAuthentications_Type = Gauge32
_SswsNTLMAuthentications_Object = MibScalar
sswsNTLMAuthentications = _SswsNTLMAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 6),
    _SswsNTLMAuthentications_Type()
)
sswsNTLMAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsNTLMAuthentications.setStatus("current")
_SswsSSLClientSideFullHandshakes_Type = Gauge32
_SswsSSLClientSideFullHandshakes_Object = MibScalar
sswsSSLClientSideFullHandshakes = _SswsSSLClientSideFullHandshakes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 7),
    _SswsSSLClientSideFullHandshakes_Type()
)
sswsSSLClientSideFullHandshakes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsSSLClientSideFullHandshakes.setStatus("current")
_SswsSSLClientSideReconHandshakes_Type = Gauge32
_SswsSSLClientSideReconHandshakes_Object = MibScalar
sswsSSLClientSideReconHandshakes = _SswsSSLClientSideReconHandshakes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 8),
    _SswsSSLClientSideReconHandshakes_Type()
)
sswsSSLClientSideReconHandshakes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsSSLClientSideReconHandshakes.setStatus("current")
_SswsSSLServerSideFullHandshakes_Type = Gauge32
_SswsSSLServerSideFullHandshakes_Object = MibScalar
sswsSSLServerSideFullHandshakes = _SswsSSLServerSideFullHandshakes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 9),
    _SswsSSLServerSideFullHandshakes_Type()
)
sswsSSLServerSideFullHandshakes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsSSLServerSideFullHandshakes.setStatus("current")
_SswsSSLServerSideReconHandshakes_Type = Gauge32
_SswsSSLServerSideReconHandshakes_Object = MibScalar
sswsSSLServerSideReconHandshakes = _SswsSSLServerSideReconHandshakes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 10),
    _SswsSSLServerSideReconHandshakes_Type()
)
sswsSSLServerSideReconHandshakes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsSSLServerSideReconHandshakes.setStatus("current")
_SswsSchannelSessionCacheEntries_Type = Gauge32
_SswsSchannelSessionCacheEntries_Object = MibScalar
sswsSchannelSessionCacheEntries = _SswsSchannelSessionCacheEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 11),
    _SswsSchannelSessionCacheEntries_Type()
)
sswsSchannelSessionCacheEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sswsSchannelSessionCacheEntries.setStatus("current")
_UsbTable_Object = MibTable
usbTable = _UsbTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104)
)
if mibBuilder.loadTexts:
    usbTable.setStatus("current")
_UsbEntry_Object = MibTableRow
usbEntry = _UsbEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1)
)
usbEntry.setIndexNames(
    (0, "INFORMANT-ADV", "usbInstance"),
)
if mibBuilder.loadTexts:
    usbEntry.setStatus("current")
_UsbInstance_Type = InstanceName
_UsbInstance_Object = MibTableColumn
usbInstance = _UsbInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 1),
    _UsbInstance_Type()
)
usbInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbInstance.setStatus("current")
_UsbPercentTotalBWUsedInterrupt_Type = Gauge32
_UsbPercentTotalBWUsedInterrupt_Object = MibTableColumn
usbPercentTotalBWUsedInterrupt = _UsbPercentTotalBWUsedInterrupt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 2),
    _UsbPercentTotalBWUsedInterrupt_Type()
)
usbPercentTotalBWUsedInterrupt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbPercentTotalBWUsedInterrupt.setStatus("current")
_UsbPercentTotalBWUseIsoTransfers_Type = Gauge32
_UsbPercentTotalBWUseIsoTransfers_Object = MibTableColumn
usbPercentTotalBWUseIsoTransfers = _UsbPercentTotalBWUseIsoTransfers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 3),
    _UsbPercentTotalBWUseIsoTransfers_Type()
)
usbPercentTotalBWUseIsoTransfers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbPercentTotalBWUseIsoTransfers.setStatus("current")
_UsbAvgMsLatencyForISOTransfers_Type = Gauge32
_UsbAvgMsLatencyForISOTransfers_Object = MibTableColumn
usbAvgMsLatencyForISOTransfers = _UsbAvgMsLatencyForISOTransfers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 4),
    _UsbAvgMsLatencyForISOTransfers_Type()
)
usbAvgMsLatencyForISOTransfers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbAvgMsLatencyForISOTransfers.setStatus("current")
_UsbAvgBytesPerTransfer_Type = Gauge32
_UsbAvgBytesPerTransfer_Object = MibTableColumn
usbAvgBytesPerTransfer = _UsbAvgBytesPerTransfer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 5),
    _UsbAvgBytesPerTransfer_Type()
)
usbAvgBytesPerTransfer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbAvgBytesPerTransfer.setStatus("current")
_UsbBulkBytesPerSec_Type = Gauge32
_UsbBulkBytesPerSec_Object = MibTableColumn
usbBulkBytesPerSec = _UsbBulkBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 6),
    _UsbBulkBytesPerSec_Type()
)
usbBulkBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbBulkBytesPerSec.setStatus("current")
_UsbControlDataBytesPerSec_Type = Gauge32
_UsbControlDataBytesPerSec_Object = MibTableColumn
usbControlDataBytesPerSec = _UsbControlDataBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 7),
    _UsbControlDataBytesPerSec_Type()
)
usbControlDataBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbControlDataBytesPerSec.setStatus("current")
_UsbControllerPCIInterruptsPerSec_Type = Gauge32
_UsbControllerPCIInterruptsPerSec_Object = MibTableColumn
usbControllerPCIInterruptsPerSec = _UsbControllerPCIInterruptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 8),
    _UsbControllerPCIInterruptsPerSec_Type()
)
usbControllerPCIInterruptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbControllerPCIInterruptsPerSec.setStatus("current")
_UsbControllerWorkSignalsPerSec_Type = Gauge32
_UsbControllerWorkSignalsPerSec_Object = MibTableColumn
usbControllerWorkSignalsPerSec = _UsbControllerWorkSignalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 9),
    _UsbControllerWorkSignalsPerSec_Type()
)
usbControllerWorkSignalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbControllerWorkSignalsPerSec.setStatus("current")
_UsbHostControlAsyncCacheFlush_Type = Gauge32
_UsbHostControlAsyncCacheFlush_Object = MibTableColumn
usbHostControlAsyncCacheFlush = _UsbHostControlAsyncCacheFlush_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 10),
    _UsbHostControlAsyncCacheFlush_Type()
)
usbHostControlAsyncCacheFlush.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbHostControlAsyncCacheFlush.setStatus("current")
_UsbHostControllerAsyncIdle_Type = Gauge32
_UsbHostControllerAsyncIdle_Object = MibTableColumn
usbHostControllerAsyncIdle = _UsbHostControllerAsyncIdle_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 11),
    _UsbHostControllerAsyncIdle_Type()
)
usbHostControllerAsyncIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbHostControllerAsyncIdle.setStatus("current")
_UsbHostControllerIdle_Type = Gauge32
_UsbHostControllerIdle_Object = MibTableColumn
usbHostControllerIdle = _UsbHostControllerIdle_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 12),
    _UsbHostControllerIdle_Type()
)
usbHostControllerIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbHostControllerIdle.setStatus("current")
_UsbHostControllerPerdiodicIdle_Type = Gauge32
_UsbHostControllerPerdiodicIdle_Object = MibTableColumn
usbHostControllerPerdiodicIdle = _UsbHostControllerPerdiodicIdle_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 13),
    _UsbHostControllerPerdiodicIdle_Type()
)
usbHostControllerPerdiodicIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbHostControllerPerdiodicIdle.setStatus("current")
_UsbHostControlPeriodicCacheFlush_Type = Gauge32
_UsbHostControlPeriodicCacheFlush_Object = MibTableColumn
usbHostControlPeriodicCacheFlush = _UsbHostControlPeriodicCacheFlush_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 14),
    _UsbHostControlPeriodicCacheFlush_Type()
)
usbHostControlPeriodicCacheFlush.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbHostControlPeriodicCacheFlush.setStatus("current")
_UsbInterruptBytesPerSec_Type = Gauge32
_UsbInterruptBytesPerSec_Object = MibTableColumn
usbInterruptBytesPerSec = _UsbInterruptBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 15),
    _UsbInterruptBytesPerSec_Type()
)
usbInterruptBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbInterruptBytesPerSec.setStatus("current")
_UsbIsoPacketErrorsPerSec_Type = Gauge32
_UsbIsoPacketErrorsPerSec_Object = MibTableColumn
usbIsoPacketErrorsPerSec = _UsbIsoPacketErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 16),
    _UsbIsoPacketErrorsPerSec_Type()
)
usbIsoPacketErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbIsoPacketErrorsPerSec.setStatus("current")
_UsbIsochronousBytesPerSec_Type = Gauge32
_UsbIsochronousBytesPerSec_Object = MibTableColumn
usbIsochronousBytesPerSec = _UsbIsochronousBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 17),
    _UsbIsochronousBytesPerSec_Type()
)
usbIsochronousBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbIsochronousBytesPerSec.setStatus("current")
_UsbTransferErrorsPerSec_Type = Gauge32
_UsbTransferErrorsPerSec_Object = MibTableColumn
usbTransferErrorsPerSec = _UsbTransferErrorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 18),
    _UsbTransferErrorsPerSec_Type()
)
usbTransferErrorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usbTransferErrorsPerSec.setStatus("current")
_VideoSchedulerTable_Object = MibTable
videoSchedulerTable = _VideoSchedulerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105)
)
if mibBuilder.loadTexts:
    videoSchedulerTable.setStatus("current")
_VideoSchedulerEntry_Object = MibTableRow
videoSchedulerEntry = _VideoSchedulerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1)
)
videoSchedulerEntry.setIndexNames(
    (0, "INFORMANT-ADV", "vschdInstance"),
)
if mibBuilder.loadTexts:
    videoSchedulerEntry.setStatus("current")
_VschdInstance_Type = InstanceName
_VschdInstance_Object = MibTableColumn
vschdInstance = _VschdInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 1),
    _VschdInstance_Type()
)
vschdInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdInstance.setStatus("current")
_VschdPercentGPUBusy_Type = Gauge32
_VschdPercentGPUBusy_Object = MibTableColumn
vschdPercentGPUBusy = _VschdPercentGPUBusy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 2),
    _VschdPercentGPUBusy_Type()
)
vschdPercentGPUBusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdPercentGPUBusy.setStatus("current")
_VschdDMABufferCompletedPerSec_Type = Gauge32
_VschdDMABufferCompletedPerSec_Object = MibTableColumn
vschdDMABufferCompletedPerSec = _VschdDMABufferCompletedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 3),
    _VschdDMABufferCompletedPerSec_Type()
)
vschdDMABufferCompletedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdDMABufferCompletedPerSec.setStatus("current")
_VschdDMABufferPreemptedPerSec_Type = Gauge32
_VschdDMABufferPreemptedPerSec_Object = MibTableColumn
vschdDMABufferPreemptedPerSec = _VschdDMABufferPreemptedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 4),
    _VschdDMABufferPreemptedPerSec_Type()
)
vschdDMABufferPreemptedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdDMABufferPreemptedPerSec.setStatus("current")
_VschdDMABufferSubmittedPerSec_Type = Gauge32
_VschdDMABufferSubmittedPerSec_Object = MibTableColumn
vschdDMABufferSubmittedPerSec = _VschdDMABufferSubmittedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 5),
    _VschdDMABufferSubmittedPerSec_Type()
)
vschdDMABufferSubmittedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdDMABufferSubmittedPerSec.setStatus("current")
_VschdGPUContext_Type = Gauge32
_VschdGPUContext_Object = MibTableColumn
vschdGPUContext = _VschdGPUContext_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 6),
    _VschdGPUContext_Type()
)
vschdGPUContext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdGPUContext.setStatus("current")
_VschdGPUContextSwitchPerSec_Type = Gauge32
_VschdGPUContextSwitchPerSec_Object = MibTableColumn
vschdGPUContextSwitchPerSec = _VschdGPUContextSwitchPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 7),
    _VschdGPUContextSwitchPerSec_Type()
)
vschdGPUContextSwitchPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdGPUContextSwitchPerSec.setStatus("current")
_VschdPresentPerSec_Type = Gauge32
_VschdPresentPerSec_Object = MibTableColumn
vschdPresentPerSec = _VschdPresentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 8),
    _VschdPresentPerSec_Type()
)
vschdPresentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vschdPresentPerSec.setStatus("current")
_WFP_ObjectIdentity = ObjectIdentity
wFP = _WFP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 106)
)
_WFPProviderCount_Type = Gauge32
_WFPProviderCount_Object = MibScalar
wFPProviderCount = _WFPProviderCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 106, 1),
    _WFPProviderCount_Type()
)
wFPProviderCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPProviderCount.setStatus("current")
_WFPv4_ObjectIdentity = ObjectIdentity
wFPv4 = _WFPv4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107)
)
if mibBuilder.loadTexts:
    wFPv4.setStatus("current")
_WFPv4ActiveInConnections_Type = Gauge32
_WFPv4ActiveInConnections_Object = MibScalar
wFPv4ActiveInConnections = _WFPv4ActiveInConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 1),
    _WFPv4ActiveInConnections_Type()
)
wFPv4ActiveInConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4ActiveInConnections.setStatus("current")
_WFPv4ActiveOutConnections_Type = Gauge32
_WFPv4ActiveOutConnections_Object = MibScalar
wFPv4ActiveOutConnections = _WFPv4ActiveOutConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 2),
    _WFPv4ActiveOutConnections_Type()
)
wFPv4ActiveOutConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4ActiveOutConnections.setStatus("current")
_WFPv4AllowedClassifiesPerSec_Type = Gauge32
_WFPv4AllowedClassifiesPerSec_Object = MibScalar
wFPv4AllowedClassifiesPerSec = _WFPv4AllowedClassifiesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 3),
    _WFPv4AllowedClassifiesPerSec_Type()
)
wFPv4AllowedClassifiesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4AllowedClassifiesPerSec.setStatus("current")
_WFPv4BlockedBinds_Type = Gauge32
_WFPv4BlockedBinds_Object = MibScalar
wFPv4BlockedBinds = _WFPv4BlockedBinds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 4),
    _WFPv4BlockedBinds_Type()
)
wFPv4BlockedBinds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4BlockedBinds.setStatus("current")
_WFPv4InConnections_Type = Gauge32
_WFPv4InConnections_Object = MibScalar
wFPv4InConnections = _WFPv4InConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 5),
    _WFPv4InConnections_Type()
)
wFPv4InConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4InConnections.setStatus("current")
_WFPv4InConnectionsAllowedPerSec_Type = Gauge32
_WFPv4InConnectionsAllowedPerSec_Object = MibScalar
wFPv4InConnectionsAllowedPerSec = _WFPv4InConnectionsAllowedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 6),
    _WFPv4InConnectionsAllowedPerSec_Type()
)
wFPv4InConnectionsAllowedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4InConnectionsAllowedPerSec.setStatus("current")
_WFPv4InConnectionsBlockedPerSec_Type = Gauge32
_WFPv4InConnectionsBlockedPerSec_Object = MibScalar
wFPv4InConnectionsBlockedPerSec = _WFPv4InConnectionsBlockedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 7),
    _WFPv4InConnectionsBlockedPerSec_Type()
)
wFPv4InConnectionsBlockedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4InConnectionsBlockedPerSec.setStatus("current")
_WFPv4InPacketsDiscardedPerSec_Type = Gauge32
_WFPv4InPacketsDiscardedPerSec_Object = MibScalar
wFPv4InPacketsDiscardedPerSec = _WFPv4InPacketsDiscardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 8),
    _WFPv4InPacketsDiscardedPerSec_Type()
)
wFPv4InPacketsDiscardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4InPacketsDiscardedPerSec.setStatus("current")
_WFPv4OutConnections_Type = Gauge32
_WFPv4OutConnections_Object = MibScalar
wFPv4OutConnections = _WFPv4OutConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 9),
    _WFPv4OutConnections_Type()
)
wFPv4OutConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4OutConnections.setStatus("current")
_WFPv4OutConnectionsAllowedPerSec_Type = Gauge32
_WFPv4OutConnectionsAllowedPerSec_Object = MibScalar
wFPv4OutConnectionsAllowedPerSec = _WFPv4OutConnectionsAllowedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 10),
    _WFPv4OutConnectionsAllowedPerSec_Type()
)
wFPv4OutConnectionsAllowedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4OutConnectionsAllowedPerSec.setStatus("current")
_WFPv4OutConnectionsBlockedPerSec_Type = Gauge32
_WFPv4OutConnectionsBlockedPerSec_Object = MibScalar
wFPv4OutConnectionsBlockedPerSec = _WFPv4OutConnectionsBlockedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 11),
    _WFPv4OutConnectionsBlockedPerSec_Type()
)
wFPv4OutConnectionsBlockedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4OutConnectionsBlockedPerSec.setStatus("current")
_WFPv4OutPacketsDiscardedPerSec_Type = Gauge32
_WFPv4OutPacketsDiscardedPerSec_Object = MibScalar
wFPv4OutPacketsDiscardedPerSec = _WFPv4OutPacketsDiscardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 12),
    _WFPv4OutPacketsDiscardedPerSec_Type()
)
wFPv4OutPacketsDiscardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4OutPacketsDiscardedPerSec.setStatus("current")
_WFPv4PacketsDiscardedPerSec_Type = Gauge32
_WFPv4PacketsDiscardedPerSec_Object = MibScalar
wFPv4PacketsDiscardedPerSec = _WFPv4PacketsDiscardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 13),
    _WFPv4PacketsDiscardedPerSec_Type()
)
wFPv4PacketsDiscardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv4PacketsDiscardedPerSec.setStatus("current")
_WFPv6_ObjectIdentity = ObjectIdentity
wFPv6 = _WFPv6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108)
)
if mibBuilder.loadTexts:
    wFPv6.setStatus("current")
_WFPv6ActiveInConnections_Type = Gauge32
_WFPv6ActiveInConnections_Object = MibScalar
wFPv6ActiveInConnections = _WFPv6ActiveInConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 1),
    _WFPv6ActiveInConnections_Type()
)
wFPv6ActiveInConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6ActiveInConnections.setStatus("current")
_WFPv6ActiveOutConnections_Type = Gauge32
_WFPv6ActiveOutConnections_Object = MibScalar
wFPv6ActiveOutConnections = _WFPv6ActiveOutConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 2),
    _WFPv6ActiveOutConnections_Type()
)
wFPv6ActiveOutConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6ActiveOutConnections.setStatus("current")
_WFPv6AllowedClassifiesPerSec_Type = Gauge32
_WFPv6AllowedClassifiesPerSec_Object = MibScalar
wFPv6AllowedClassifiesPerSec = _WFPv6AllowedClassifiesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 3),
    _WFPv6AllowedClassifiesPerSec_Type()
)
wFPv6AllowedClassifiesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6AllowedClassifiesPerSec.setStatus("current")
_WFPv6BlockedBinds_Type = Gauge32
_WFPv6BlockedBinds_Object = MibScalar
wFPv6BlockedBinds = _WFPv6BlockedBinds_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 4),
    _WFPv6BlockedBinds_Type()
)
wFPv6BlockedBinds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6BlockedBinds.setStatus("current")
_WFPv6InConnections_Type = Gauge32
_WFPv6InConnections_Object = MibScalar
wFPv6InConnections = _WFPv6InConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 5),
    _WFPv6InConnections_Type()
)
wFPv6InConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6InConnections.setStatus("current")
_WFPv6InConnectionsAllowedPerSec_Type = Gauge32
_WFPv6InConnectionsAllowedPerSec_Object = MibScalar
wFPv6InConnectionsAllowedPerSec = _WFPv6InConnectionsAllowedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 6),
    _WFPv6InConnectionsAllowedPerSec_Type()
)
wFPv6InConnectionsAllowedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6InConnectionsAllowedPerSec.setStatus("current")
_WFPv6InConnectionsBlockedPerSec_Type = Gauge32
_WFPv6InConnectionsBlockedPerSec_Object = MibScalar
wFPv6InConnectionsBlockedPerSec = _WFPv6InConnectionsBlockedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 7),
    _WFPv6InConnectionsBlockedPerSec_Type()
)
wFPv6InConnectionsBlockedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6InConnectionsBlockedPerSec.setStatus("current")
_WFPv6InPacketsDiscardedPerSec_Type = Gauge32
_WFPv6InPacketsDiscardedPerSec_Object = MibScalar
wFPv6InPacketsDiscardedPerSec = _WFPv6InPacketsDiscardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 8),
    _WFPv6InPacketsDiscardedPerSec_Type()
)
wFPv6InPacketsDiscardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6InPacketsDiscardedPerSec.setStatus("current")
_WFPv6OutConnections_Type = Gauge32
_WFPv6OutConnections_Object = MibScalar
wFPv6OutConnections = _WFPv6OutConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 9),
    _WFPv6OutConnections_Type()
)
wFPv6OutConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6OutConnections.setStatus("current")
_WFPv6OutConnectionsAllowedPerSec_Type = Gauge32
_WFPv6OutConnectionsAllowedPerSec_Object = MibScalar
wFPv6OutConnectionsAllowedPerSec = _WFPv6OutConnectionsAllowedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 10),
    _WFPv6OutConnectionsAllowedPerSec_Type()
)
wFPv6OutConnectionsAllowedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6OutConnectionsAllowedPerSec.setStatus("current")
_WFPv6OutConnectionsBlockedPerSec_Type = Gauge32
_WFPv6OutConnectionsBlockedPerSec_Object = MibScalar
wFPv6OutConnectionsBlockedPerSec = _WFPv6OutConnectionsBlockedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 11),
    _WFPv6OutConnectionsBlockedPerSec_Type()
)
wFPv6OutConnectionsBlockedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6OutConnectionsBlockedPerSec.setStatus("current")
_WFPv6OutPacketsDiscardedPerSec_Type = Gauge32
_WFPv6OutPacketsDiscardedPerSec_Object = MibScalar
wFPv6OutPacketsDiscardedPerSec = _WFPv6OutPacketsDiscardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 12),
    _WFPv6OutPacketsDiscardedPerSec_Type()
)
wFPv6OutPacketsDiscardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6OutPacketsDiscardedPerSec.setStatus("current")
_WFPv6PacketsDiscardedPerSec_Type = Gauge32
_WFPv6PacketsDiscardedPerSec_Object = MibScalar
wFPv6PacketsDiscardedPerSec = _WFPv6PacketsDiscardedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 13),
    _WFPv6PacketsDiscardedPerSec_Type()
)
wFPv6PacketsDiscardedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wFPv6PacketsDiscardedPerSec.setStatus("current")
_WindowsWorkflowFoundationTable_Object = MibTable
windowsWorkflowFoundationTable = _WindowsWorkflowFoundationTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109)
)
if mibBuilder.loadTexts:
    windowsWorkflowFoundationTable.setStatus("current")
_WindowsWorkflowFoundationEntry_Object = MibTableRow
windowsWorkflowFoundationEntry = _WindowsWorkflowFoundationEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1)
)
windowsWorkflowFoundationEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wwfInstance"),
)
if mibBuilder.loadTexts:
    windowsWorkflowFoundationEntry.setStatus("current")
_WwfInstance_Type = InstanceName
_WwfInstance_Object = MibTableColumn
wwfInstance = _WwfInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 1),
    _WwfInstance_Type()
)
wwfInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfInstance.setStatus("current")
_WwfWorkflowsAborted_Type = Gauge32
_WwfWorkflowsAborted_Object = MibTableColumn
wwfWorkflowsAborted = _WwfWorkflowsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 2),
    _WwfWorkflowsAborted_Type()
)
wwfWorkflowsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsAborted.setStatus("current")
_WwfWorkflowsAbortedPerSec_Type = Gauge32
_WwfWorkflowsAbortedPerSec_Object = MibTableColumn
wwfWorkflowsAbortedPerSec = _WwfWorkflowsAbortedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 3),
    _WwfWorkflowsAbortedPerSec_Type()
)
wwfWorkflowsAbortedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsAbortedPerSec.setStatus("current")
_WwfWorkflowsCompleted_Type = Gauge32
_WwfWorkflowsCompleted_Object = MibTableColumn
wwfWorkflowsCompleted = _WwfWorkflowsCompleted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 4),
    _WwfWorkflowsCompleted_Type()
)
wwfWorkflowsCompleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsCompleted.setStatus("current")
_WwfWorkflowsCompletedPerSec_Type = Gauge32
_WwfWorkflowsCompletedPerSec_Object = MibTableColumn
wwfWorkflowsCompletedPerSec = _WwfWorkflowsCompletedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 5),
    _WwfWorkflowsCompletedPerSec_Type()
)
wwfWorkflowsCompletedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsCompletedPerSec.setStatus("current")
_WwfWorkflowsCreated_Type = Gauge32
_WwfWorkflowsCreated_Object = MibTableColumn
wwfWorkflowsCreated = _WwfWorkflowsCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 6),
    _WwfWorkflowsCreated_Type()
)
wwfWorkflowsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsCreated.setStatus("current")
_WwfWorkflowsCreatedPerSec_Type = Gauge32
_WwfWorkflowsCreatedPerSec_Object = MibTableColumn
wwfWorkflowsCreatedPerSec = _WwfWorkflowsCreatedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 7),
    _WwfWorkflowsCreatedPerSec_Type()
)
wwfWorkflowsCreatedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsCreatedPerSec.setStatus("current")
_WwfWorkflowsExecuting_Type = Gauge32
_WwfWorkflowsExecuting_Object = MibTableColumn
wwfWorkflowsExecuting = _WwfWorkflowsExecuting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 8),
    _WwfWorkflowsExecuting_Type()
)
wwfWorkflowsExecuting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsExecuting.setStatus("current")
_WwfWorkflowsIdlePerSec_Type = Gauge32
_WwfWorkflowsIdlePerSec_Object = MibTableColumn
wwfWorkflowsIdlePerSec = _WwfWorkflowsIdlePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 9),
    _WwfWorkflowsIdlePerSec_Type()
)
wwfWorkflowsIdlePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsIdlePerSec.setStatus("current")
_WwfWorkflowsInMemory_Type = Gauge32
_WwfWorkflowsInMemory_Object = MibTableColumn
wwfWorkflowsInMemory = _WwfWorkflowsInMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 10),
    _WwfWorkflowsInMemory_Type()
)
wwfWorkflowsInMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsInMemory.setStatus("current")
_WwfWorkflowsLoaded_Type = Gauge32
_WwfWorkflowsLoaded_Object = MibTableColumn
wwfWorkflowsLoaded = _WwfWorkflowsLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 11),
    _WwfWorkflowsLoaded_Type()
)
wwfWorkflowsLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsLoaded.setStatus("current")
_WwfWorkflowsLoadedPerSec_Type = Gauge32
_WwfWorkflowsLoadedPerSec_Object = MibTableColumn
wwfWorkflowsLoadedPerSec = _WwfWorkflowsLoadedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 12),
    _WwfWorkflowsLoadedPerSec_Type()
)
wwfWorkflowsLoadedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsLoadedPerSec.setStatus("current")
_WwfWorkflowsPending_Type = Gauge32
_WwfWorkflowsPending_Object = MibTableColumn
wwfWorkflowsPending = _WwfWorkflowsPending_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 13),
    _WwfWorkflowsPending_Type()
)
wwfWorkflowsPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsPending.setStatus("current")
_WwfWorkflowsPersisted_Type = Gauge32
_WwfWorkflowsPersisted_Object = MibTableColumn
wwfWorkflowsPersisted = _WwfWorkflowsPersisted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 14),
    _WwfWorkflowsPersisted_Type()
)
wwfWorkflowsPersisted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsPersisted.setStatus("current")
_WwfWorkflowsPersistedPerSec_Type = Gauge32
_WwfWorkflowsPersistedPerSec_Object = MibTableColumn
wwfWorkflowsPersistedPerSec = _WwfWorkflowsPersistedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 15),
    _WwfWorkflowsPersistedPerSec_Type()
)
wwfWorkflowsPersistedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsPersistedPerSec.setStatus("current")
_WwfWorkflowsRunnable_Type = Gauge32
_WwfWorkflowsRunnable_Object = MibTableColumn
wwfWorkflowsRunnable = _WwfWorkflowsRunnable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 16),
    _WwfWorkflowsRunnable_Type()
)
wwfWorkflowsRunnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsRunnable.setStatus("current")
_WwfWorkflowsSuspended_Type = Gauge32
_WwfWorkflowsSuspended_Object = MibTableColumn
wwfWorkflowsSuspended = _WwfWorkflowsSuspended_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 17),
    _WwfWorkflowsSuspended_Type()
)
wwfWorkflowsSuspended.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsSuspended.setStatus("current")
_WwfWorkflowsSuspendedPerSec_Type = Gauge32
_WwfWorkflowsSuspendedPerSec_Object = MibTableColumn
wwfWorkflowsSuspendedPerSec = _WwfWorkflowsSuspendedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 18),
    _WwfWorkflowsSuspendedPerSec_Type()
)
wwfWorkflowsSuspendedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsSuspendedPerSec.setStatus("current")
_WwfWorkflowsTerminated_Type = Gauge32
_WwfWorkflowsTerminated_Object = MibTableColumn
wwfWorkflowsTerminated = _WwfWorkflowsTerminated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 19),
    _WwfWorkflowsTerminated_Type()
)
wwfWorkflowsTerminated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsTerminated.setStatus("current")
_WwfWorkflowsTerminatedPerSec_Type = Gauge32
_WwfWorkflowsTerminatedPerSec_Object = MibTableColumn
wwfWorkflowsTerminatedPerSec = _WwfWorkflowsTerminatedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 20),
    _WwfWorkflowsTerminatedPerSec_Type()
)
wwfWorkflowsTerminatedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsTerminatedPerSec.setStatus("current")
_WwfWorkflowsUnloaded_Type = Gauge32
_WwfWorkflowsUnloaded_Object = MibTableColumn
wwfWorkflowsUnloaded = _WwfWorkflowsUnloaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 21),
    _WwfWorkflowsUnloaded_Type()
)
wwfWorkflowsUnloaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsUnloaded.setStatus("current")
_WwfWorkflowsUnloadedPerSec_Type = Gauge32
_WwfWorkflowsUnloadedPerSec_Object = MibTableColumn
wwfWorkflowsUnloadedPerSec = _WwfWorkflowsUnloadedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 22),
    _WwfWorkflowsUnloadedPerSec_Type()
)
wwfWorkflowsUnloadedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wwfWorkflowsUnloadedPerSec.setStatus("current")
_ISCSIInitiatorInstanceTable_Object = MibTable
iSCSIInitiatorInstanceTable = _ISCSIInitiatorInstanceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110)
)
if mibBuilder.loadTexts:
    iSCSIInitiatorInstanceTable.setStatus("current")
_ISCSIInitiatorInstanceEntry_Object = MibTableRow
iSCSIInitiatorInstanceEntry = _ISCSIInitiatorInstanceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1)
)
iSCSIInitiatorInstanceEntry.setIndexNames(
    (0, "INFORMANT-ADV", "iscsiInstance"),
)
if mibBuilder.loadTexts:
    iSCSIInitiatorInstanceEntry.setStatus("current")
_IscsiInstance_Type = InstanceName
_IscsiInstance_Object = MibTableColumn
iscsiInstance = _IscsiInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 1),
    _IscsiInstance_Type()
)
iscsiInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iscsiInstance.setStatus("current")
_IscsiSessionCxnTimeoutErrors_Type = Gauge32
_IscsiSessionCxnTimeoutErrors_Object = MibTableColumn
iscsiSessionCxnTimeoutErrors = _IscsiSessionCxnTimeoutErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 2),
    _IscsiSessionCxnTimeoutErrors_Type()
)
iscsiSessionCxnTimeoutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iscsiSessionCxnTimeoutErrors.setStatus("current")
_IscsiSessionDigestErrors_Type = Gauge32
_IscsiSessionDigestErrors_Object = MibTableColumn
iscsiSessionDigestErrors = _IscsiSessionDigestErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 3),
    _IscsiSessionDigestErrors_Type()
)
iscsiSessionDigestErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iscsiSessionDigestErrors.setStatus("current")
_IscsiSessionFormatErrors_Type = Gauge32
_IscsiSessionFormatErrors_Object = MibTableColumn
iscsiSessionFormatErrors = _IscsiSessionFormatErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 4),
    _IscsiSessionFormatErrors_Type()
)
iscsiSessionFormatErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iscsiSessionFormatErrors.setStatus("current")
_IscsiSessionsFailed_Type = Gauge32
_IscsiSessionsFailed_Object = MibTableColumn
iscsiSessionsFailed = _IscsiSessionsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 5),
    _IscsiSessionsFailed_Type()
)
iscsiSessionsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iscsiSessionsFailed.setStatus("current")
_DtcBridge3_ObjectIdentity = ObjectIdentity
dtcBridge3 = _DtcBridge3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111)
)
if mibBuilder.loadTexts:
    dtcBridge3.setStatus("current")
_Dtcb3AvgParticipantCmtRspnsTime_Type = Gauge32
_Dtcb3AvgParticipantCmtRspnsTime_Object = MibScalar
dtcb3AvgParticipantCmtRspnsTime = _Dtcb3AvgParticipantCmtRspnsTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 1),
    _Dtcb3AvgParticipantCmtRspnsTime_Type()
)
dtcb3AvgParticipantCmtRspnsTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3AvgParticipantCmtRspnsTime.setStatus("current")
_Dtcb3AvgParticipantPrepRspnsTime_Type = Gauge32
_Dtcb3AvgParticipantPrepRspnsTime_Object = MibScalar
dtcb3AvgParticipantPrepRspnsTime = _Dtcb3AvgParticipantPrepRspnsTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 2),
    _Dtcb3AvgParticipantPrepRspnsTime_Type()
)
dtcb3AvgParticipantPrepRspnsTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3AvgParticipantPrepRspnsTime.setStatus("current")
_Dtcb3CommitRetryCountPerSec_Type = Gauge32
_Dtcb3CommitRetryCountPerSec_Object = MibScalar
dtcb3CommitRetryCountPerSec = _Dtcb3CommitRetryCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 3),
    _Dtcb3CommitRetryCountPerSec_Type()
)
dtcb3CommitRetryCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3CommitRetryCountPerSec.setStatus("current")
_Dtcb3FaultsReceivedCountPerSec_Type = Gauge32
_Dtcb3FaultsReceivedCountPerSec_Object = MibScalar
dtcb3FaultsReceivedCountPerSec = _Dtcb3FaultsReceivedCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 4),
    _Dtcb3FaultsReceivedCountPerSec_Type()
)
dtcb3FaultsReceivedCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3FaultsReceivedCountPerSec.setStatus("current")
_Dtcb3FaultsSentCountPerSec_Type = Gauge32
_Dtcb3FaultsSentCountPerSec_Object = MibScalar
dtcb3FaultsSentCountPerSec = _Dtcb3FaultsSentCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 5),
    _Dtcb3FaultsSentCountPerSec_Type()
)
dtcb3FaultsSentCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3FaultsSentCountPerSec.setStatus("current")
_Dtcb3MessageSendFailuresPerSec_Type = Gauge32
_Dtcb3MessageSendFailuresPerSec_Object = MibScalar
dtcb3MessageSendFailuresPerSec = _Dtcb3MessageSendFailuresPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 6),
    _Dtcb3MessageSendFailuresPerSec_Type()
)
dtcb3MessageSendFailuresPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3MessageSendFailuresPerSec.setStatus("current")
_Dtcb3PrepareRetryCountPerSec_Type = Gauge32
_Dtcb3PrepareRetryCountPerSec_Object = MibScalar
dtcb3PrepareRetryCountPerSec = _Dtcb3PrepareRetryCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 7),
    _Dtcb3PrepareRetryCountPerSec_Type()
)
dtcb3PrepareRetryCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3PrepareRetryCountPerSec.setStatus("current")
_Dtcb3PreparedRetryCountPerSec_Type = Gauge32
_Dtcb3PreparedRetryCountPerSec_Object = MibScalar
dtcb3PreparedRetryCountPerSec = _Dtcb3PreparedRetryCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 8),
    _Dtcb3PreparedRetryCountPerSec_Type()
)
dtcb3PreparedRetryCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3PreparedRetryCountPerSec.setStatus("current")
_Dtcb3ReplayRetryCountPerSec_Type = Gauge32
_Dtcb3ReplayRetryCountPerSec_Object = MibScalar
dtcb3ReplayRetryCountPerSec = _Dtcb3ReplayRetryCountPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 9),
    _Dtcb3ReplayRetryCountPerSec_Type()
)
dtcb3ReplayRetryCountPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dtcb3ReplayRetryCountPerSec.setStatus("current")
_ServiceModelEndpoint3Table_Object = MibTable
serviceModelEndpoint3Table = _ServiceModelEndpoint3Table_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112)
)
if mibBuilder.loadTexts:
    serviceModelEndpoint3Table.setStatus("current")
_ServiceModelEndpoint3Entry_Object = MibTableRow
serviceModelEndpoint3Entry = _ServiceModelEndpoint3Entry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1)
)
serviceModelEndpoint3Entry.setIndexNames(
    (0, "INFORMANT-ADV", "sme3Instance"),
)
if mibBuilder.loadTexts:
    serviceModelEndpoint3Entry.setStatus("current")
_Sme3Instance_Type = InstanceName
_Sme3Instance_Object = MibTableColumn
sme3Instance = _Sme3Instance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 1),
    _Sme3Instance_Type()
)
sme3Instance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3Instance.setStatus("current")
_Sme3Calls_Type = Gauge32
_Sme3Calls_Object = MibTableColumn
sme3Calls = _Sme3Calls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 2),
    _Sme3Calls_Type()
)
sme3Calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3Calls.setStatus("current")
_Sme3CallsDuration_Type = Gauge32
_Sme3CallsDuration_Object = MibTableColumn
sme3CallsDuration = _Sme3CallsDuration_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 3),
    _Sme3CallsDuration_Type()
)
sme3CallsDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsDuration.setStatus("current")
_Sme3CallsFailed_Type = Gauge32
_Sme3CallsFailed_Object = MibTableColumn
sme3CallsFailed = _Sme3CallsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 4),
    _Sme3CallsFailed_Type()
)
sme3CallsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsFailed.setStatus("current")
_Sme3CallsFailedPerSecond_Type = Gauge32
_Sme3CallsFailedPerSecond_Object = MibTableColumn
sme3CallsFailedPerSecond = _Sme3CallsFailedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 5),
    _Sme3CallsFailedPerSecond_Type()
)
sme3CallsFailedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsFailedPerSecond.setStatus("current")
_Sme3CallsFaulted_Type = Gauge32
_Sme3CallsFaulted_Object = MibTableColumn
sme3CallsFaulted = _Sme3CallsFaulted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 6),
    _Sme3CallsFaulted_Type()
)
sme3CallsFaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsFaulted.setStatus("current")
_Sme3CallsFaultedPerSecond_Type = Gauge32
_Sme3CallsFaultedPerSecond_Object = MibTableColumn
sme3CallsFaultedPerSecond = _Sme3CallsFaultedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 7),
    _Sme3CallsFaultedPerSecond_Type()
)
sme3CallsFaultedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsFaultedPerSecond.setStatus("current")
_Sme3CallsOutstanding_Type = Gauge32
_Sme3CallsOutstanding_Object = MibTableColumn
sme3CallsOutstanding = _Sme3CallsOutstanding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 8),
    _Sme3CallsOutstanding_Type()
)
sme3CallsOutstanding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsOutstanding.setStatus("current")
_Sme3CallsPerSecond_Type = Gauge32
_Sme3CallsPerSecond_Object = MibTableColumn
sme3CallsPerSecond = _Sme3CallsPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 9),
    _Sme3CallsPerSecond_Type()
)
sme3CallsPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsPerSecond.setStatus("current")
_Sme3ReliableMessagesDropped_Type = Gauge32
_Sme3ReliableMessagesDropped_Object = MibTableColumn
sme3ReliableMessagesDropped = _Sme3ReliableMessagesDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 10),
    _Sme3ReliableMessagesDropped_Type()
)
sme3ReliableMessagesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3ReliableMessagesDropped.setStatus("current")
_Sme3ReliableMessagesDropPerSec_Type = Gauge32
_Sme3ReliableMessagesDropPerSec_Object = MibTableColumn
sme3ReliableMessagesDropPerSec = _Sme3ReliableMessagesDropPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 11),
    _Sme3ReliableMessagesDropPerSec_Type()
)
sme3ReliableMessagesDropPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3ReliableMessagesDropPerSec.setStatus("current")
_Sme3ReliableSessionsFaulted_Type = Gauge32
_Sme3ReliableSessionsFaulted_Object = MibTableColumn
sme3ReliableSessionsFaulted = _Sme3ReliableSessionsFaulted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 12),
    _Sme3ReliableSessionsFaulted_Type()
)
sme3ReliableSessionsFaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3ReliableSessionsFaulted.setStatus("current")
_Sme3ReliableSessionsFaultPerSec_Type = Gauge32
_Sme3ReliableSessionsFaultPerSec_Object = MibTableColumn
sme3ReliableSessionsFaultPerSec = _Sme3ReliableSessionsFaultPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 13),
    _Sme3ReliableSessionsFaultPerSec_Type()
)
sme3ReliableSessionsFaultPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3ReliableSessionsFaultPerSec.setStatus("current")
_Sme3CallsNotAuthorized_Type = Gauge32
_Sme3CallsNotAuthorized_Object = MibTableColumn
sme3CallsNotAuthorized = _Sme3CallsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 14),
    _Sme3CallsNotAuthorized_Type()
)
sme3CallsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsNotAuthorized.setStatus("current")
_Sme3CallsNotAuthorizedPerSecond_Type = Gauge32
_Sme3CallsNotAuthorizedPerSecond_Object = MibTableColumn
sme3CallsNotAuthorizedPerSecond = _Sme3CallsNotAuthorizedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 15),
    _Sme3CallsNotAuthorizedPerSecond_Type()
)
sme3CallsNotAuthorizedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3CallsNotAuthorizedPerSecond.setStatus("current")
_Sme3ValidationAuthFail_Type = Gauge32
_Sme3ValidationAuthFail_Object = MibTableColumn
sme3ValidationAuthFail = _Sme3ValidationAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 16),
    _Sme3ValidationAuthFail_Type()
)
sme3ValidationAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3ValidationAuthFail.setStatus("current")
_Sme3ValidationAuthFailPerSec_Type = Gauge32
_Sme3ValidationAuthFailPerSec_Object = MibTableColumn
sme3ValidationAuthFailPerSec = _Sme3ValidationAuthFailPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 17),
    _Sme3ValidationAuthFailPerSec_Type()
)
sme3ValidationAuthFailPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3ValidationAuthFailPerSec.setStatus("current")
_Sme3TransactionsFlowed_Type = Gauge32
_Sme3TransactionsFlowed_Object = MibTableColumn
sme3TransactionsFlowed = _Sme3TransactionsFlowed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 18),
    _Sme3TransactionsFlowed_Type()
)
sme3TransactionsFlowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3TransactionsFlowed.setStatus("current")
_Sme3TransactionsFlowedPerSecond_Type = Gauge32
_Sme3TransactionsFlowedPerSecond_Object = MibTableColumn
sme3TransactionsFlowedPerSecond = _Sme3TransactionsFlowedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 19),
    _Sme3TransactionsFlowedPerSecond_Type()
)
sme3TransactionsFlowedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sme3TransactionsFlowedPerSecond.setStatus("current")
_ServiceModelOperation3Table_Object = MibTable
serviceModelOperation3Table = _ServiceModelOperation3Table_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113)
)
if mibBuilder.loadTexts:
    serviceModelOperation3Table.setStatus("current")
_ServiceModelOperation3Entry_Object = MibTableRow
serviceModelOperation3Entry = _ServiceModelOperation3Entry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1)
)
serviceModelOperation3Entry.setIndexNames(
    (0, "INFORMANT-ADV", "smo3Instance"),
)
if mibBuilder.loadTexts:
    serviceModelOperation3Entry.setStatus("current")
_Smo3Instance_Type = InstanceName
_Smo3Instance_Object = MibTableColumn
smo3Instance = _Smo3Instance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 1),
    _Smo3Instance_Type()
)
smo3Instance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3Instance.setStatus("current")
_Smo3CallFailedPerSecond_Type = Gauge32
_Smo3CallFailedPerSecond_Object = MibTableColumn
smo3CallFailedPerSecond = _Smo3CallFailedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 2),
    _Smo3CallFailedPerSecond_Type()
)
smo3CallFailedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallFailedPerSecond.setStatus("current")
_Smo3Calls_Type = Gauge32
_Smo3Calls_Object = MibTableColumn
smo3Calls = _Smo3Calls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 3),
    _Smo3Calls_Type()
)
smo3Calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3Calls.setStatus("current")
_Smo3CallsDuration_Type = Gauge32
_Smo3CallsDuration_Object = MibTableColumn
smo3CallsDuration = _Smo3CallsDuration_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 4),
    _Smo3CallsDuration_Type()
)
smo3CallsDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsDuration.setStatus("current")
_Smo3CallsFailed_Type = Gauge32
_Smo3CallsFailed_Object = MibTableColumn
smo3CallsFailed = _Smo3CallsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 5),
    _Smo3CallsFailed_Type()
)
smo3CallsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsFailed.setStatus("current")
_Smo3CallsFaulted_Type = Gauge32
_Smo3CallsFaulted_Object = MibTableColumn
smo3CallsFaulted = _Smo3CallsFaulted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 6),
    _Smo3CallsFaulted_Type()
)
smo3CallsFaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsFaulted.setStatus("current")
_Smo3CallsFaultedPerSecond_Type = Gauge32
_Smo3CallsFaultedPerSecond_Object = MibTableColumn
smo3CallsFaultedPerSecond = _Smo3CallsFaultedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 7),
    _Smo3CallsFaultedPerSecond_Type()
)
smo3CallsFaultedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsFaultedPerSecond.setStatus("current")
_Smo3CallsOutstanding_Type = Gauge32
_Smo3CallsOutstanding_Object = MibTableColumn
smo3CallsOutstanding = _Smo3CallsOutstanding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 8),
    _Smo3CallsOutstanding_Type()
)
smo3CallsOutstanding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsOutstanding.setStatus("current")
_Smo3CallsPerSecond_Type = Gauge32
_Smo3CallsPerSecond_Object = MibTableColumn
smo3CallsPerSecond = _Smo3CallsPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 9),
    _Smo3CallsPerSecond_Type()
)
smo3CallsPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsPerSecond.setStatus("current")
_Smo3CallsNotAuthorized_Type = Gauge32
_Smo3CallsNotAuthorized_Object = MibTableColumn
smo3CallsNotAuthorized = _Smo3CallsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 10),
    _Smo3CallsNotAuthorized_Type()
)
smo3CallsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsNotAuthorized.setStatus("current")
_Smo3CallsNotAuthorizedPerSec_Type = Gauge32
_Smo3CallsNotAuthorizedPerSec_Object = MibTableColumn
smo3CallsNotAuthorizedPerSec = _Smo3CallsNotAuthorizedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 11),
    _Smo3CallsNotAuthorizedPerSec_Type()
)
smo3CallsNotAuthorizedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3CallsNotAuthorizedPerSec.setStatus("current")
_Smo3ValidationAuthFail_Type = Gauge32
_Smo3ValidationAuthFail_Object = MibTableColumn
smo3ValidationAuthFail = _Smo3ValidationAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 12),
    _Smo3ValidationAuthFail_Type()
)
smo3ValidationAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3ValidationAuthFail.setStatus("current")
_Smo3ValidationAuthFailPerSec_Type = Gauge32
_Smo3ValidationAuthFailPerSec_Object = MibTableColumn
smo3ValidationAuthFailPerSec = _Smo3ValidationAuthFailPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 13),
    _Smo3ValidationAuthFailPerSec_Type()
)
smo3ValidationAuthFailPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3ValidationAuthFailPerSec.setStatus("current")
_Smo3TransactionsFlowed_Type = Gauge32
_Smo3TransactionsFlowed_Object = MibTableColumn
smo3TransactionsFlowed = _Smo3TransactionsFlowed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 14),
    _Smo3TransactionsFlowed_Type()
)
smo3TransactionsFlowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3TransactionsFlowed.setStatus("current")
_Smo3TransactionsFlowedPerSecond_Type = Gauge32
_Smo3TransactionsFlowedPerSecond_Object = MibTableColumn
smo3TransactionsFlowedPerSecond = _Smo3TransactionsFlowedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 15),
    _Smo3TransactionsFlowedPerSecond_Type()
)
smo3TransactionsFlowedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smo3TransactionsFlowedPerSecond.setStatus("current")
_ServiceModelService3Table_Object = MibTable
serviceModelService3Table = _ServiceModelService3Table_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114)
)
if mibBuilder.loadTexts:
    serviceModelService3Table.setStatus("current")
_ServiceModelService3Entry_Object = MibTableRow
serviceModelService3Entry = _ServiceModelService3Entry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1)
)
serviceModelService3Entry.setIndexNames(
    (0, "INFORMANT-ADV", "sms3Instance"),
)
if mibBuilder.loadTexts:
    serviceModelService3Entry.setStatus("current")
_Sms3Instance_Type = InstanceName
_Sms3Instance_Object = MibTableColumn
sms3Instance = _Sms3Instance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 1),
    _Sms3Instance_Type()
)
sms3Instance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3Instance.setStatus("current")
_Sms3Calls_Type = Gauge32
_Sms3Calls_Object = MibTableColumn
sms3Calls = _Sms3Calls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 2),
    _Sms3Calls_Type()
)
sms3Calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3Calls.setStatus("current")
_Sms3CallsDuration_Type = Gauge32
_Sms3CallsDuration_Object = MibTableColumn
sms3CallsDuration = _Sms3CallsDuration_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 3),
    _Sms3CallsDuration_Type()
)
sms3CallsDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsDuration.setStatus("current")
_Sms3CallsFailed_Type = Gauge32
_Sms3CallsFailed_Object = MibTableColumn
sms3CallsFailed = _Sms3CallsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 4),
    _Sms3CallsFailed_Type()
)
sms3CallsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsFailed.setStatus("current")
_Sms3CallsFailedPerSecond_Type = Gauge32
_Sms3CallsFailedPerSecond_Object = MibTableColumn
sms3CallsFailedPerSecond = _Sms3CallsFailedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 5),
    _Sms3CallsFailedPerSecond_Type()
)
sms3CallsFailedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsFailedPerSecond.setStatus("current")
_Sms3CallsFaulted_Type = Gauge32
_Sms3CallsFaulted_Object = MibTableColumn
sms3CallsFaulted = _Sms3CallsFaulted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 6),
    _Sms3CallsFaulted_Type()
)
sms3CallsFaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsFaulted.setStatus("current")
_Sms3CallsFaultedPerSecond_Type = Gauge32
_Sms3CallsFaultedPerSecond_Object = MibTableColumn
sms3CallsFaultedPerSecond = _Sms3CallsFaultedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 7),
    _Sms3CallsFaultedPerSecond_Type()
)
sms3CallsFaultedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsFaultedPerSecond.setStatus("current")
_Sms3CallsOutstanding_Type = Gauge32
_Sms3CallsOutstanding_Object = MibTableColumn
sms3CallsOutstanding = _Sms3CallsOutstanding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 8),
    _Sms3CallsOutstanding_Type()
)
sms3CallsOutstanding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsOutstanding.setStatus("current")
_Sms3CallsPerSecond_Type = Gauge32
_Sms3CallsPerSecond_Object = MibTableColumn
sms3CallsPerSecond = _Sms3CallsPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 9),
    _Sms3CallsPerSecond_Type()
)
sms3CallsPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsPerSecond.setStatus("current")
_Sms3Instances_Type = Gauge32
_Sms3Instances_Object = MibTableColumn
sms3Instances = _Sms3Instances_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 10),
    _Sms3Instances_Type()
)
sms3Instances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3Instances.setStatus("current")
_Sms3InstancesCreatedPerSecond_Type = Gauge32
_Sms3InstancesCreatedPerSecond_Object = MibTableColumn
sms3InstancesCreatedPerSecond = _Sms3InstancesCreatedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 11),
    _Sms3InstancesCreatedPerSecond_Type()
)
sms3InstancesCreatedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3InstancesCreatedPerSecond.setStatus("current")
_Sms3QueuedMessagesDropped_Type = Gauge32
_Sms3QueuedMessagesDropped_Object = MibTableColumn
sms3QueuedMessagesDropped = _Sms3QueuedMessagesDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 12),
    _Sms3QueuedMessagesDropped_Type()
)
sms3QueuedMessagesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3QueuedMessagesDropped.setStatus("current")
_Sms3QueuedMessagesDroppedPerSec_Type = Gauge32
_Sms3QueuedMessagesDroppedPerSec_Object = MibTableColumn
sms3QueuedMessagesDroppedPerSec = _Sms3QueuedMessagesDroppedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 13),
    _Sms3QueuedMessagesDroppedPerSec_Type()
)
sms3QueuedMessagesDroppedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3QueuedMessagesDroppedPerSec.setStatus("current")
_Sms3QueuedMessagesRejected_Type = Gauge32
_Sms3QueuedMessagesRejected_Object = MibTableColumn
sms3QueuedMessagesRejected = _Sms3QueuedMessagesRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 14),
    _Sms3QueuedMessagesRejected_Type()
)
sms3QueuedMessagesRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3QueuedMessagesRejected.setStatus("current")
_Sms3QueuedMessagesRejectedPerSec_Type = Gauge32
_Sms3QueuedMessagesRejectedPerSec_Object = MibTableColumn
sms3QueuedMessagesRejectedPerSec = _Sms3QueuedMessagesRejectedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 15),
    _Sms3QueuedMessagesRejectedPerSec_Type()
)
sms3QueuedMessagesRejectedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3QueuedMessagesRejectedPerSec.setStatus("current")
_Sms3QueuedPoisonMessages_Type = Gauge32
_Sms3QueuedPoisonMessages_Object = MibTableColumn
sms3QueuedPoisonMessages = _Sms3QueuedPoisonMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 16),
    _Sms3QueuedPoisonMessages_Type()
)
sms3QueuedPoisonMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3QueuedPoisonMessages.setStatus("current")
_Sms3QueuedPoisonMessagesPerSec_Type = Gauge32
_Sms3QueuedPoisonMessagesPerSec_Object = MibTableColumn
sms3QueuedPoisonMessagesPerSec = _Sms3QueuedPoisonMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 17),
    _Sms3QueuedPoisonMessagesPerSec_Type()
)
sms3QueuedPoisonMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3QueuedPoisonMessagesPerSec.setStatus("current")
_Sms3ReliableMessagesDrop_Type = Gauge32
_Sms3ReliableMessagesDrop_Object = MibTableColumn
sms3ReliableMessagesDrop = _Sms3ReliableMessagesDrop_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 18),
    _Sms3ReliableMessagesDrop_Type()
)
sms3ReliableMessagesDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3ReliableMessagesDrop.setStatus("current")
_Sms3ReliableMessagesDropPerSec_Type = Gauge32
_Sms3ReliableMessagesDropPerSec_Object = MibTableColumn
sms3ReliableMessagesDropPerSec = _Sms3ReliableMessagesDropPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 19),
    _Sms3ReliableMessagesDropPerSec_Type()
)
sms3ReliableMessagesDropPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3ReliableMessagesDropPerSec.setStatus("current")
_Sms3ReliableSessionsFaulted_Type = Gauge32
_Sms3ReliableSessionsFaulted_Object = MibTableColumn
sms3ReliableSessionsFaulted = _Sms3ReliableSessionsFaulted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 20),
    _Sms3ReliableSessionsFaulted_Type()
)
sms3ReliableSessionsFaulted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3ReliableSessionsFaulted.setStatus("current")
_Sms3ReliableSessionFaultedPerSec_Type = Gauge32
_Sms3ReliableSessionFaultedPerSec_Object = MibTableColumn
sms3ReliableSessionFaultedPerSec = _Sms3ReliableSessionFaultedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 21),
    _Sms3ReliableSessionFaultedPerSec_Type()
)
sms3ReliableSessionFaultedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3ReliableSessionFaultedPerSec.setStatus("current")
_Sms3CallsNotAuthorized_Type = Gauge32
_Sms3CallsNotAuthorized_Object = MibTableColumn
sms3CallsNotAuthorized = _Sms3CallsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 22),
    _Sms3CallsNotAuthorized_Type()
)
sms3CallsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsNotAuthorized.setStatus("current")
_Sms3CallsNotAuthorizedPerSec_Type = Gauge32
_Sms3CallsNotAuthorizedPerSec_Object = MibTableColumn
sms3CallsNotAuthorizedPerSec = _Sms3CallsNotAuthorizedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 23),
    _Sms3CallsNotAuthorizedPerSec_Type()
)
sms3CallsNotAuthorizedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3CallsNotAuthorizedPerSec.setStatus("current")
_Sms3ValidationAuthFail_Type = Gauge32
_Sms3ValidationAuthFail_Object = MibTableColumn
sms3ValidationAuthFail = _Sms3ValidationAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 24),
    _Sms3ValidationAuthFail_Type()
)
sms3ValidationAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3ValidationAuthFail.setStatus("current")
_Sms3ValidationAuthFailPerSec_Type = Gauge32
_Sms3ValidationAuthFailPerSec_Object = MibTableColumn
sms3ValidationAuthFailPerSec = _Sms3ValidationAuthFailPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 25),
    _Sms3ValidationAuthFailPerSec_Type()
)
sms3ValidationAuthFailPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3ValidationAuthFailPerSec.setStatus("current")
_Sms3TransactedOpsAborted_Type = Gauge32
_Sms3TransactedOpsAborted_Object = MibTableColumn
sms3TransactedOpsAborted = _Sms3TransactedOpsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 26),
    _Sms3TransactedOpsAborted_Type()
)
sms3TransactedOpsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactedOpsAborted.setStatus("current")
_Sms3TransactedOpsAbortedPerSec_Type = Gauge32
_Sms3TransactedOpsAbortedPerSec_Object = MibTableColumn
sms3TransactedOpsAbortedPerSec = _Sms3TransactedOpsAbortedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 27),
    _Sms3TransactedOpsAbortedPerSec_Type()
)
sms3TransactedOpsAbortedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactedOpsAbortedPerSec.setStatus("current")
_Sms3TransactedOpsCommit_Type = Gauge32
_Sms3TransactedOpsCommit_Object = MibTableColumn
sms3TransactedOpsCommit = _Sms3TransactedOpsCommit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 28),
    _Sms3TransactedOpsCommit_Type()
)
sms3TransactedOpsCommit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactedOpsCommit.setStatus("current")
_Sms3TransactedOpsCommitPerSec_Type = Gauge32
_Sms3TransactedOpsCommitPerSec_Object = MibTableColumn
sms3TransactedOpsCommitPerSec = _Sms3TransactedOpsCommitPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 29),
    _Sms3TransactedOpsCommitPerSec_Type()
)
sms3TransactedOpsCommitPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactedOpsCommitPerSec.setStatus("current")
_Sms3TransactedOpsInDoubt_Type = Gauge32
_Sms3TransactedOpsInDoubt_Object = MibTableColumn
sms3TransactedOpsInDoubt = _Sms3TransactedOpsInDoubt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 30),
    _Sms3TransactedOpsInDoubt_Type()
)
sms3TransactedOpsInDoubt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactedOpsInDoubt.setStatus("current")
_Sms3TransactedOpsInDoubtPerSec_Type = Gauge32
_Sms3TransactedOpsInDoubtPerSec_Object = MibTableColumn
sms3TransactedOpsInDoubtPerSec = _Sms3TransactedOpsInDoubtPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 31),
    _Sms3TransactedOpsInDoubtPerSec_Type()
)
sms3TransactedOpsInDoubtPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactedOpsInDoubtPerSec.setStatus("current")
_Sms3TransactionsFlowed_Type = Gauge32
_Sms3TransactionsFlowed_Object = MibTableColumn
sms3TransactionsFlowed = _Sms3TransactionsFlowed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 32),
    _Sms3TransactionsFlowed_Type()
)
sms3TransactionsFlowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactionsFlowed.setStatus("current")
_Sms3TransactionsFlowedPerSec_Type = Gauge32
_Sms3TransactionsFlowedPerSec_Object = MibTableColumn
sms3TransactionsFlowedPerSec = _Sms3TransactionsFlowedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 33),
    _Sms3TransactionsFlowedPerSec_Type()
)
sms3TransactionsFlowedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sms3TransactionsFlowedPerSec.setStatus("current")
_SvcHost3_ObjectIdentity = ObjectIdentity
svcHost3 = _SvcHost3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115)
)
if mibBuilder.loadTexts:
    svcHost3.setStatus("current")
_Smsh3ConnsAcceptedOverNetPipe_Type = Gauge32
_Smsh3ConnsAcceptedOverNetPipe_Object = MibScalar
smsh3ConnsAcceptedOverNetPipe = _Smsh3ConnsAcceptedOverNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 1),
    _Smsh3ConnsAcceptedOverNetPipe_Type()
)
smsh3ConnsAcceptedOverNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3ConnsAcceptedOverNetPipe.setStatus("current")
_Smsh3ConnsAcceptedOverNetTcp_Type = Gauge32
_Smsh3ConnsAcceptedOverNetTcp_Object = MibScalar
smsh3ConnsAcceptedOverNetTcp = _Smsh3ConnsAcceptedOverNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 2),
    _Smsh3ConnsAcceptedOverNetTcp_Type()
)
smsh3ConnsAcceptedOverNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3ConnsAcceptedOverNetTcp.setStatus("current")
_Smsh3ConnsDispatchedOverNetPipe_Type = Gauge32
_Smsh3ConnsDispatchedOverNetPipe_Object = MibScalar
smsh3ConnsDispatchedOverNetPipe = _Smsh3ConnsDispatchedOverNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 3),
    _Smsh3ConnsDispatchedOverNetPipe_Type()
)
smsh3ConnsDispatchedOverNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3ConnsDispatchedOverNetPipe.setStatus("current")
_Smsh3ConnsDispatchedOverNetTcp_Type = Gauge32
_Smsh3ConnsDispatchedOverNetTcp_Object = MibScalar
smsh3ConnsDispatchedOverNetTcp = _Smsh3ConnsDispatchedOverNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 4),
    _Smsh3ConnsDispatchedOverNetTcp_Type()
)
smsh3ConnsDispatchedOverNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3ConnsDispatchedOverNetTcp.setStatus("current")
_Smsh3DispatchFailuresOverNetPipe_Type = Gauge32
_Smsh3DispatchFailuresOverNetPipe_Object = MibScalar
smsh3DispatchFailuresOverNetPipe = _Smsh3DispatchFailuresOverNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 5),
    _Smsh3DispatchFailuresOverNetPipe_Type()
)
smsh3DispatchFailuresOverNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3DispatchFailuresOverNetPipe.setStatus("current")
_Smsh3DispatchFailuresOverNetTcp_Type = Gauge32
_Smsh3DispatchFailuresOverNetTcp_Object = MibScalar
smsh3DispatchFailuresOverNetTcp = _Smsh3DispatchFailuresOverNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 6),
    _Smsh3DispatchFailuresOverNetTcp_Type()
)
smsh3DispatchFailuresOverNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3DispatchFailuresOverNetTcp.setStatus("current")
_Smsh3ProtocolFailuresOverNetPipe_Type = Gauge32
_Smsh3ProtocolFailuresOverNetPipe_Object = MibScalar
smsh3ProtocolFailuresOverNetPipe = _Smsh3ProtocolFailuresOverNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 7),
    _Smsh3ProtocolFailuresOverNetPipe_Type()
)
smsh3ProtocolFailuresOverNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3ProtocolFailuresOverNetPipe.setStatus("current")
_Smsh3ProtocolFailuresOverNetTcp_Type = Gauge32
_Smsh3ProtocolFailuresOverNetTcp_Object = MibScalar
smsh3ProtocolFailuresOverNetTcp = _Smsh3ProtocolFailuresOverNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 8),
    _Smsh3ProtocolFailuresOverNetTcp_Type()
)
smsh3ProtocolFailuresOverNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3ProtocolFailuresOverNetTcp.setStatus("current")
_Smsh3RegActiveForNetPipe_Type = Gauge32
_Smsh3RegActiveForNetPipe_Object = MibScalar
smsh3RegActiveForNetPipe = _Smsh3RegActiveForNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 9),
    _Smsh3RegActiveForNetPipe_Type()
)
smsh3RegActiveForNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3RegActiveForNetPipe.setStatus("current")
_Smsh3RegActiveForNetTcp_Type = Gauge32
_Smsh3RegActiveForNetTcp_Object = MibScalar
smsh3RegActiveForNetTcp = _Smsh3RegActiveForNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 10),
    _Smsh3RegActiveForNetTcp_Type()
)
smsh3RegActiveForNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3RegActiveForNetTcp.setStatus("current")
_Smsh3UrisRegisteredForNetPipe_Type = Gauge32
_Smsh3UrisRegisteredForNetPipe_Object = MibScalar
smsh3UrisRegisteredForNetPipe = _Smsh3UrisRegisteredForNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 11),
    _Smsh3UrisRegisteredForNetPipe_Type()
)
smsh3UrisRegisteredForNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3UrisRegisteredForNetPipe.setStatus("current")
_Smsh3UrisRegisteredForNetTcp_Type = Gauge32
_Smsh3UrisRegisteredForNetTcp_Object = MibScalar
smsh3UrisRegisteredForNetTcp = _Smsh3UrisRegisteredForNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 12),
    _Smsh3UrisRegisteredForNetTcp_Type()
)
smsh3UrisRegisteredForNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3UrisRegisteredForNetTcp.setStatus("current")
_Smsh3UrisUnregisteredForNetPipe_Type = Gauge32
_Smsh3UrisUnregisteredForNetPipe_Object = MibScalar
smsh3UrisUnregisteredForNetPipe = _Smsh3UrisUnregisteredForNetPipe_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 13),
    _Smsh3UrisUnregisteredForNetPipe_Type()
)
smsh3UrisUnregisteredForNetPipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3UrisUnregisteredForNetPipe.setStatus("current")
_Smsh3UrisUnregisteredForNetTcp_Type = Gauge32
_Smsh3UrisUnregisteredForNetTcp_Object = MibScalar
smsh3UrisUnregisteredForNetTcp = _Smsh3UrisUnregisteredForNetTcp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 14),
    _Smsh3UrisUnregisteredForNetTcp_Type()
)
smsh3UrisUnregisteredForNetTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    smsh3UrisUnregisteredForNetTcp.setStatus("current")
_AspDotNETv1_ObjectIdentity = ObjectIdentity
aspDotNETv1 = _AspDotNETv1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116)
)
_Adn1ApplicationRestarts_Type = Gauge32
_Adn1ApplicationRestarts_Object = MibScalar
adn1ApplicationRestarts = _Adn1ApplicationRestarts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 1),
    _Adn1ApplicationRestarts_Type()
)
adn1ApplicationRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1ApplicationRestarts.setStatus("current")
_Adn1ApplicationsRunning_Type = Gauge32
_Adn1ApplicationsRunning_Object = MibScalar
adn1ApplicationsRunning = _Adn1ApplicationsRunning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 2),
    _Adn1ApplicationsRunning_Type()
)
adn1ApplicationsRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1ApplicationsRunning.setStatus("current")
_Adn1RequestExecutionTime_Type = Gauge32
_Adn1RequestExecutionTime_Object = MibScalar
adn1RequestExecutionTime = _Adn1RequestExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 3),
    _Adn1RequestExecutionTime_Type()
)
adn1RequestExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1RequestExecutionTime.setStatus("current")
_Adn1RequestWaitTime_Type = Gauge32
_Adn1RequestWaitTime_Object = MibScalar
adn1RequestWaitTime = _Adn1RequestWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 4),
    _Adn1RequestWaitTime_Type()
)
adn1RequestWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1RequestWaitTime.setStatus("current")
_Adn1RequestsCurrent_Type = Gauge32
_Adn1RequestsCurrent_Object = MibScalar
adn1RequestsCurrent = _Adn1RequestsCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 5),
    _Adn1RequestsCurrent_Type()
)
adn1RequestsCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1RequestsCurrent.setStatus("current")
_Adn1RequestsDisconnected_Type = Gauge32
_Adn1RequestsDisconnected_Object = MibScalar
adn1RequestsDisconnected = _Adn1RequestsDisconnected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 6),
    _Adn1RequestsDisconnected_Type()
)
adn1RequestsDisconnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1RequestsDisconnected.setStatus("current")
_Adn1RequestsQueued_Type = Gauge32
_Adn1RequestsQueued_Object = MibScalar
adn1RequestsQueued = _Adn1RequestsQueued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 7),
    _Adn1RequestsQueued_Type()
)
adn1RequestsQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1RequestsQueued.setStatus("current")
_Adn1RequestsRejected_Type = Gauge32
_Adn1RequestsRejected_Object = MibScalar
adn1RequestsRejected = _Adn1RequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 8),
    _Adn1RequestsRejected_Type()
)
adn1RequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1RequestsRejected.setStatus("current")
_Adn1StateServerSessionsAbandoned_Type = Gauge32
_Adn1StateServerSessionsAbandoned_Object = MibScalar
adn1StateServerSessionsAbandoned = _Adn1StateServerSessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 9),
    _Adn1StateServerSessionsAbandoned_Type()
)
adn1StateServerSessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1StateServerSessionsAbandoned.setStatus("current")
_Adn1StateServerSessionsActive_Type = Gauge32
_Adn1StateServerSessionsActive_Object = MibScalar
adn1StateServerSessionsActive = _Adn1StateServerSessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 10),
    _Adn1StateServerSessionsActive_Type()
)
adn1StateServerSessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1StateServerSessionsActive.setStatus("current")
_Adn1StateServerSessionsTimedOut_Type = Gauge32
_Adn1StateServerSessionsTimedOut_Object = MibScalar
adn1StateServerSessionsTimedOut = _Adn1StateServerSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 11),
    _Adn1StateServerSessionsTimedOut_Type()
)
adn1StateServerSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1StateServerSessionsTimedOut.setStatus("current")
_Adn1StateServerSessionsTotal_Type = Gauge32
_Adn1StateServerSessionsTotal_Object = MibScalar
adn1StateServerSessionsTotal = _Adn1StateServerSessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 12),
    _Adn1StateServerSessionsTotal_Type()
)
adn1StateServerSessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1StateServerSessionsTotal.setStatus("current")
_Adn1WorkerProcessRestarts_Type = Gauge32
_Adn1WorkerProcessRestarts_Object = MibScalar
adn1WorkerProcessRestarts = _Adn1WorkerProcessRestarts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 13),
    _Adn1WorkerProcessRestarts_Type()
)
adn1WorkerProcessRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1WorkerProcessRestarts.setStatus("current")
_Adn1WorkerProcessesRunning_Type = Gauge32
_Adn1WorkerProcessesRunning_Object = MibScalar
adn1WorkerProcessesRunning = _Adn1WorkerProcessesRunning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 14),
    _Adn1WorkerProcessesRunning_Type()
)
adn1WorkerProcessesRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn1WorkerProcessesRunning.setStatus("current")
_AspDotNETApplicationsV1Table_Object = MibTable
aspDotNETApplicationsV1Table = _AspDotNETApplicationsV1Table_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117)
)
if mibBuilder.loadTexts:
    aspDotNETApplicationsV1Table.setStatus("current")
_AspDotNETApplicationsV1Entry_Object = MibTableRow
aspDotNETApplicationsV1Entry = _AspDotNETApplicationsV1Entry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1)
)
aspDotNETApplicationsV1Entry.setIndexNames(
    (0, "INFORMANT-ADV", "adnAppl1Instance"),
)
if mibBuilder.loadTexts:
    aspDotNETApplicationsV1Entry.setStatus("current")
_AdnAppl1Instance_Type = InstanceName
_AdnAppl1Instance_Object = MibTableColumn
adnAppl1Instance = _AdnAppl1Instance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 1),
    _AdnAppl1Instance_Type()
)
adnAppl1Instance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1Instance.setStatus("current")
_AdnAppl1AnonymousRequests_Type = Gauge32
_AdnAppl1AnonymousRequests_Object = MibTableColumn
adnAppl1AnonymousRequests = _AdnAppl1AnonymousRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 2),
    _AdnAppl1AnonymousRequests_Type()
)
adnAppl1AnonymousRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1AnonymousRequests.setStatus("current")
_AdnAppl1AnonymousRequestsPerSec_Type = Gauge32
_AdnAppl1AnonymousRequestsPerSec_Object = MibTableColumn
adnAppl1AnonymousRequestsPerSec = _AdnAppl1AnonymousRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 3),
    _AdnAppl1AnonymousRequestsPerSec_Type()
)
adnAppl1AnonymousRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1AnonymousRequestsPerSec.setStatus("current")
_AdnAppl1CacheAPIEntries_Type = Gauge32
_AdnAppl1CacheAPIEntries_Object = MibTableColumn
adnAppl1CacheAPIEntries = _AdnAppl1CacheAPIEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 4),
    _AdnAppl1CacheAPIEntries_Type()
)
adnAppl1CacheAPIEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheAPIEntries.setStatus("current")
_AdnAppl1CacheAPIHitRatio_Type = Gauge32
_AdnAppl1CacheAPIHitRatio_Object = MibTableColumn
adnAppl1CacheAPIHitRatio = _AdnAppl1CacheAPIHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 5),
    _AdnAppl1CacheAPIHitRatio_Type()
)
adnAppl1CacheAPIHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheAPIHitRatio.setStatus("current")
_AdnAppl1CacheAPIHits_Type = Gauge32
_AdnAppl1CacheAPIHits_Object = MibTableColumn
adnAppl1CacheAPIHits = _AdnAppl1CacheAPIHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 6),
    _AdnAppl1CacheAPIHits_Type()
)
adnAppl1CacheAPIHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheAPIHits.setStatus("current")
_AdnAppl1CacheAPIMisses_Type = Gauge32
_AdnAppl1CacheAPIMisses_Object = MibTableColumn
adnAppl1CacheAPIMisses = _AdnAppl1CacheAPIMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 7),
    _AdnAppl1CacheAPIMisses_Type()
)
adnAppl1CacheAPIMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheAPIMisses.setStatus("current")
_AdnAppl1CacheAPITurnoverRate_Type = Gauge32
_AdnAppl1CacheAPITurnoverRate_Object = MibTableColumn
adnAppl1CacheAPITurnoverRate = _AdnAppl1CacheAPITurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 8),
    _AdnAppl1CacheAPITurnoverRate_Type()
)
adnAppl1CacheAPITurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheAPITurnoverRate.setStatus("current")
_AdnAppl1CacheTotalEntries_Type = Gauge32
_AdnAppl1CacheTotalEntries_Object = MibTableColumn
adnAppl1CacheTotalEntries = _AdnAppl1CacheTotalEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 9),
    _AdnAppl1CacheTotalEntries_Type()
)
adnAppl1CacheTotalEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheTotalEntries.setStatus("current")
_AdnAppl1CacheTotalHitRatio_Type = Gauge32
_AdnAppl1CacheTotalHitRatio_Object = MibTableColumn
adnAppl1CacheTotalHitRatio = _AdnAppl1CacheTotalHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 10),
    _AdnAppl1CacheTotalHitRatio_Type()
)
adnAppl1CacheTotalHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheTotalHitRatio.setStatus("current")
_AdnAppl1CacheTotalHits_Type = Gauge32
_AdnAppl1CacheTotalHits_Object = MibTableColumn
adnAppl1CacheTotalHits = _AdnAppl1CacheTotalHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 11),
    _AdnAppl1CacheTotalHits_Type()
)
adnAppl1CacheTotalHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheTotalHits.setStatus("current")
_AdnAppl1CacheTotalMisses_Type = Gauge32
_AdnAppl1CacheTotalMisses_Object = MibTableColumn
adnAppl1CacheTotalMisses = _AdnAppl1CacheTotalMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 12),
    _AdnAppl1CacheTotalMisses_Type()
)
adnAppl1CacheTotalMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheTotalMisses.setStatus("current")
_AdnAppl1CacheTotalTurnoverRate_Type = Gauge32
_AdnAppl1CacheTotalTurnoverRate_Object = MibTableColumn
adnAppl1CacheTotalTurnoverRate = _AdnAppl1CacheTotalTurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 13),
    _AdnAppl1CacheTotalTurnoverRate_Type()
)
adnAppl1CacheTotalTurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CacheTotalTurnoverRate.setStatus("current")
_AdnAppl1CompilationsTotal_Type = Gauge32
_AdnAppl1CompilationsTotal_Object = MibTableColumn
adnAppl1CompilationsTotal = _AdnAppl1CompilationsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 14),
    _AdnAppl1CompilationsTotal_Type()
)
adnAppl1CompilationsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1CompilationsTotal.setStatus("current")
_AdnAppl1DebuggingRequests_Type = Gauge32
_AdnAppl1DebuggingRequests_Object = MibTableColumn
adnAppl1DebuggingRequests = _AdnAppl1DebuggingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 15),
    _AdnAppl1DebuggingRequests_Type()
)
adnAppl1DebuggingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1DebuggingRequests.setStatus("current")
_AdnAppl1ErrorsDuringCompilation_Type = Gauge32
_AdnAppl1ErrorsDuringCompilation_Object = MibTableColumn
adnAppl1ErrorsDuringCompilation = _AdnAppl1ErrorsDuringCompilation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 16),
    _AdnAppl1ErrorsDuringCompilation_Type()
)
adnAppl1ErrorsDuringCompilation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorsDuringCompilation.setStatus("current")
_AdnAppl1ErrorsDuringExecution_Type = Gauge32
_AdnAppl1ErrorsDuringExecution_Object = MibTableColumn
adnAppl1ErrorsDuringExecution = _AdnAppl1ErrorsDuringExecution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 17),
    _AdnAppl1ErrorsDuringExecution_Type()
)
adnAppl1ErrorsDuringExecution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorsDuringExecution.setStatus("current")
_AdnAppl1ErrorDuringPreprocessing_Type = Gauge32
_AdnAppl1ErrorDuringPreprocessing_Object = MibTableColumn
adnAppl1ErrorDuringPreprocessing = _AdnAppl1ErrorDuringPreprocessing_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 18),
    _AdnAppl1ErrorDuringPreprocessing_Type()
)
adnAppl1ErrorDuringPreprocessing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorDuringPreprocessing.setStatus("current")
_AdnAppl1ErrorsTotal_Type = Gauge32
_AdnAppl1ErrorsTotal_Object = MibTableColumn
adnAppl1ErrorsTotal = _AdnAppl1ErrorsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 19),
    _AdnAppl1ErrorsTotal_Type()
)
adnAppl1ErrorsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorsTotal.setStatus("current")
_AdnAppl1ErrorsTotalPerSec_Type = Gauge32
_AdnAppl1ErrorsTotalPerSec_Object = MibTableColumn
adnAppl1ErrorsTotalPerSec = _AdnAppl1ErrorsTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 20),
    _AdnAppl1ErrorsTotalPerSec_Type()
)
adnAppl1ErrorsTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorsTotalPerSec.setStatus("current")
_AdnAppl1ErrorUnhandledDuringExec_Type = Gauge32
_AdnAppl1ErrorUnhandledDuringExec_Object = MibTableColumn
adnAppl1ErrorUnhandledDuringExec = _AdnAppl1ErrorUnhandledDuringExec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 21),
    _AdnAppl1ErrorUnhandledDuringExec_Type()
)
adnAppl1ErrorUnhandledDuringExec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorUnhandledDuringExec.setStatus("current")
_AdnAppl1ErrorUnhandledExecPerSec_Type = Gauge32
_AdnAppl1ErrorUnhandledExecPerSec_Object = MibTableColumn
adnAppl1ErrorUnhandledExecPerSec = _AdnAppl1ErrorUnhandledExecPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 22),
    _AdnAppl1ErrorUnhandledExecPerSec_Type()
)
adnAppl1ErrorUnhandledExecPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1ErrorUnhandledExecPerSec.setStatus("current")
_AdnAppl1OutputCacheEntries_Type = Gauge32
_AdnAppl1OutputCacheEntries_Object = MibTableColumn
adnAppl1OutputCacheEntries = _AdnAppl1OutputCacheEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 23),
    _AdnAppl1OutputCacheEntries_Type()
)
adnAppl1OutputCacheEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1OutputCacheEntries.setStatus("current")
_AdnAppl1OutputCacheHitRatio_Type = Gauge32
_AdnAppl1OutputCacheHitRatio_Object = MibTableColumn
adnAppl1OutputCacheHitRatio = _AdnAppl1OutputCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 24),
    _AdnAppl1OutputCacheHitRatio_Type()
)
adnAppl1OutputCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1OutputCacheHitRatio.setStatus("current")
_AdnAppl1OutputCacheHits_Type = Gauge32
_AdnAppl1OutputCacheHits_Object = MibTableColumn
adnAppl1OutputCacheHits = _AdnAppl1OutputCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 25),
    _AdnAppl1OutputCacheHits_Type()
)
adnAppl1OutputCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1OutputCacheHits.setStatus("current")
_AdnAppl1OutputCacheMisses_Type = Gauge32
_AdnAppl1OutputCacheMisses_Object = MibTableColumn
adnAppl1OutputCacheMisses = _AdnAppl1OutputCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 26),
    _AdnAppl1OutputCacheMisses_Type()
)
adnAppl1OutputCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1OutputCacheMisses.setStatus("current")
_AdnAppl1OutputCacheTurnoverRate_Type = Gauge32
_AdnAppl1OutputCacheTurnoverRate_Object = MibTableColumn
adnAppl1OutputCacheTurnoverRate = _AdnAppl1OutputCacheTurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 27),
    _AdnAppl1OutputCacheTurnoverRate_Type()
)
adnAppl1OutputCacheTurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1OutputCacheTurnoverRate.setStatus("current")
_AdnAppl1PipelineInstanceCount_Type = Gauge32
_AdnAppl1PipelineInstanceCount_Object = MibTableColumn
adnAppl1PipelineInstanceCount = _AdnAppl1PipelineInstanceCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 28),
    _AdnAppl1PipelineInstanceCount_Type()
)
adnAppl1PipelineInstanceCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1PipelineInstanceCount.setStatus("current")
_AdnAppl1RequestBytesInTotal_Type = Gauge32
_AdnAppl1RequestBytesInTotal_Object = MibTableColumn
adnAppl1RequestBytesInTotal = _AdnAppl1RequestBytesInTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 29),
    _AdnAppl1RequestBytesInTotal_Type()
)
adnAppl1RequestBytesInTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestBytesInTotal.setStatus("current")
_AdnAppl1RequestBytesOutTotal_Type = Gauge32
_AdnAppl1RequestBytesOutTotal_Object = MibTableColumn
adnAppl1RequestBytesOutTotal = _AdnAppl1RequestBytesOutTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 30),
    _AdnAppl1RequestBytesOutTotal_Type()
)
adnAppl1RequestBytesOutTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestBytesOutTotal.setStatus("current")
_AdnAppl1RequestsExecuting_Type = Gauge32
_AdnAppl1RequestsExecuting_Object = MibTableColumn
adnAppl1RequestsExecuting = _AdnAppl1RequestsExecuting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 31),
    _AdnAppl1RequestsExecuting_Type()
)
adnAppl1RequestsExecuting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsExecuting.setStatus("current")
_AdnAppl1RequestsFailed_Type = Gauge32
_AdnAppl1RequestsFailed_Object = MibTableColumn
adnAppl1RequestsFailed = _AdnAppl1RequestsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 32),
    _AdnAppl1RequestsFailed_Type()
)
adnAppl1RequestsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsFailed.setStatus("current")
_AdnAppl1RequestsInApplQueue_Type = Gauge32
_AdnAppl1RequestsInApplQueue_Object = MibTableColumn
adnAppl1RequestsInApplQueue = _AdnAppl1RequestsInApplQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 33),
    _AdnAppl1RequestsInApplQueue_Type()
)
adnAppl1RequestsInApplQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsInApplQueue.setStatus("current")
_AdnAppl1RequestsNotAuthorized_Type = Gauge32
_AdnAppl1RequestsNotAuthorized_Object = MibTableColumn
adnAppl1RequestsNotAuthorized = _AdnAppl1RequestsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 34),
    _AdnAppl1RequestsNotAuthorized_Type()
)
adnAppl1RequestsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsNotAuthorized.setStatus("current")
_AdnAppl1RequestsNotFound_Type = Gauge32
_AdnAppl1RequestsNotFound_Object = MibTableColumn
adnAppl1RequestsNotFound = _AdnAppl1RequestsNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 35),
    _AdnAppl1RequestsNotFound_Type()
)
adnAppl1RequestsNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsNotFound.setStatus("current")
_AdnAppl1RequestsSucceeded_Type = Gauge32
_AdnAppl1RequestsSucceeded_Object = MibTableColumn
adnAppl1RequestsSucceeded = _AdnAppl1RequestsSucceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 36),
    _AdnAppl1RequestsSucceeded_Type()
)
adnAppl1RequestsSucceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsSucceeded.setStatus("current")
_AdnAppl1RequestsTimedOut_Type = Gauge32
_AdnAppl1RequestsTimedOut_Object = MibTableColumn
adnAppl1RequestsTimedOut = _AdnAppl1RequestsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 37),
    _AdnAppl1RequestsTimedOut_Type()
)
adnAppl1RequestsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsTimedOut.setStatus("current")
_AdnAppl1RequestsTotal_Type = Gauge32
_AdnAppl1RequestsTotal_Object = MibTableColumn
adnAppl1RequestsTotal = _AdnAppl1RequestsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 38),
    _AdnAppl1RequestsTotal_Type()
)
adnAppl1RequestsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsTotal.setStatus("current")
_AdnAppl1RequestsPerSec_Type = Gauge32
_AdnAppl1RequestsPerSec_Object = MibTableColumn
adnAppl1RequestsPerSec = _AdnAppl1RequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 39),
    _AdnAppl1RequestsPerSec_Type()
)
adnAppl1RequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1RequestsPerSec.setStatus("current")
_AdnAppl1SessionSQLSvrConnTotal_Type = Gauge32
_AdnAppl1SessionSQLSvrConnTotal_Object = MibTableColumn
adnAppl1SessionSQLSvrConnTotal = _AdnAppl1SessionSQLSvrConnTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 40),
    _AdnAppl1SessionSQLSvrConnTotal_Type()
)
adnAppl1SessionSQLSvrConnTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1SessionSQLSvrConnTotal.setStatus("current")
_AdnAppl1SessionStateSvrConnTotal_Type = Gauge32
_AdnAppl1SessionStateSvrConnTotal_Object = MibTableColumn
adnAppl1SessionStateSvrConnTotal = _AdnAppl1SessionStateSvrConnTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 41),
    _AdnAppl1SessionStateSvrConnTotal_Type()
)
adnAppl1SessionStateSvrConnTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1SessionStateSvrConnTotal.setStatus("current")
_AdnAppl1SessionsAbandoned_Type = Gauge32
_AdnAppl1SessionsAbandoned_Object = MibTableColumn
adnAppl1SessionsAbandoned = _AdnAppl1SessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 42),
    _AdnAppl1SessionsAbandoned_Type()
)
adnAppl1SessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1SessionsAbandoned.setStatus("current")
_AdnAppl1SessionsActive_Type = Gauge32
_AdnAppl1SessionsActive_Object = MibTableColumn
adnAppl1SessionsActive = _AdnAppl1SessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 43),
    _AdnAppl1SessionsActive_Type()
)
adnAppl1SessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1SessionsActive.setStatus("current")
_AdnAppl1SessionsTimedOut_Type = Gauge32
_AdnAppl1SessionsTimedOut_Object = MibTableColumn
adnAppl1SessionsTimedOut = _AdnAppl1SessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 44),
    _AdnAppl1SessionsTimedOut_Type()
)
adnAppl1SessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1SessionsTimedOut.setStatus("current")
_AdnAppl1SessionsTotal_Type = Gauge32
_AdnAppl1SessionsTotal_Object = MibTableColumn
adnAppl1SessionsTotal = _AdnAppl1SessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 45),
    _AdnAppl1SessionsTotal_Type()
)
adnAppl1SessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1SessionsTotal.setStatus("current")
_AdnAppl1TransactionsAborted_Type = Gauge32
_AdnAppl1TransactionsAborted_Object = MibTableColumn
adnAppl1TransactionsAborted = _AdnAppl1TransactionsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 46),
    _AdnAppl1TransactionsAborted_Type()
)
adnAppl1TransactionsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1TransactionsAborted.setStatus("current")
_AdnAppl1TransactionsCommitted_Type = Gauge32
_AdnAppl1TransactionsCommitted_Object = MibTableColumn
adnAppl1TransactionsCommitted = _AdnAppl1TransactionsCommitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 47),
    _AdnAppl1TransactionsCommitted_Type()
)
adnAppl1TransactionsCommitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1TransactionsCommitted.setStatus("current")
_AdnAppl1TransactionsPending_Type = Gauge32
_AdnAppl1TransactionsPending_Object = MibTableColumn
adnAppl1TransactionsPending = _AdnAppl1TransactionsPending_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 48),
    _AdnAppl1TransactionsPending_Type()
)
adnAppl1TransactionsPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1TransactionsPending.setStatus("current")
_AdnAppl1TransactionsTotal_Type = Gauge32
_AdnAppl1TransactionsTotal_Object = MibTableColumn
adnAppl1TransactionsTotal = _AdnAppl1TransactionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 49),
    _AdnAppl1TransactionsTotal_Type()
)
adnAppl1TransactionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1TransactionsTotal.setStatus("current")
_AdnAppl1TransactionsPerSec_Type = Gauge32
_AdnAppl1TransactionsPerSec_Object = MibTableColumn
adnAppl1TransactionsPerSec = _AdnAppl1TransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 50),
    _AdnAppl1TransactionsPerSec_Type()
)
adnAppl1TransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl1TransactionsPerSec.setStatus("current")
_AspDotNETv2_ObjectIdentity = ObjectIdentity
aspDotNETv2 = _AspDotNETv2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118)
)
_Adn2ApplicationRestarts_Type = Gauge32
_Adn2ApplicationRestarts_Object = MibScalar
adn2ApplicationRestarts = _Adn2ApplicationRestarts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 1),
    _Adn2ApplicationRestarts_Type()
)
adn2ApplicationRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2ApplicationRestarts.setStatus("current")
_Adn2ApplicationsRunning_Type = Gauge32
_Adn2ApplicationsRunning_Object = MibScalar
adn2ApplicationsRunning = _Adn2ApplicationsRunning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 2),
    _Adn2ApplicationsRunning_Type()
)
adn2ApplicationsRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2ApplicationsRunning.setStatus("current")
_Adn2AuditFailureEventsRaised_Type = Gauge32
_Adn2AuditFailureEventsRaised_Object = MibScalar
adn2AuditFailureEventsRaised = _Adn2AuditFailureEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 3),
    _Adn2AuditFailureEventsRaised_Type()
)
adn2AuditFailureEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2AuditFailureEventsRaised.setStatus("current")
_Adn2AuditSuccessEventsRaised_Type = Gauge32
_Adn2AuditSuccessEventsRaised_Object = MibScalar
adn2AuditSuccessEventsRaised = _Adn2AuditSuccessEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 4),
    _Adn2AuditSuccessEventsRaised_Type()
)
adn2AuditSuccessEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2AuditSuccessEventsRaised.setStatus("current")
_Adn2ErrorEventsRaised_Type = Gauge32
_Adn2ErrorEventsRaised_Object = MibScalar
adn2ErrorEventsRaised = _Adn2ErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 5),
    _Adn2ErrorEventsRaised_Type()
)
adn2ErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2ErrorEventsRaised.setStatus("current")
_Adn2InfraErrorEventsRaised_Type = Gauge32
_Adn2InfraErrorEventsRaised_Object = MibScalar
adn2InfraErrorEventsRaised = _Adn2InfraErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 6),
    _Adn2InfraErrorEventsRaised_Type()
)
adn2InfraErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2InfraErrorEventsRaised.setStatus("current")
_Adn2RequestErrorEventsRaised_Type = Gauge32
_Adn2RequestErrorEventsRaised_Object = MibScalar
adn2RequestErrorEventsRaised = _Adn2RequestErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 7),
    _Adn2RequestErrorEventsRaised_Type()
)
adn2RequestErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestErrorEventsRaised.setStatus("current")
_Adn2RequestExecutionTime_Type = Gauge32
_Adn2RequestExecutionTime_Object = MibScalar
adn2RequestExecutionTime = _Adn2RequestExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 8),
    _Adn2RequestExecutionTime_Type()
)
adn2RequestExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestExecutionTime.setStatus("current")
_Adn2RequestWaitTime_Type = Gauge32
_Adn2RequestWaitTime_Object = MibScalar
adn2RequestWaitTime = _Adn2RequestWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 9),
    _Adn2RequestWaitTime_Type()
)
adn2RequestWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestWaitTime.setStatus("current")
_Adn2RequestsCurrent_Type = Gauge32
_Adn2RequestsCurrent_Object = MibScalar
adn2RequestsCurrent = _Adn2RequestsCurrent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 10),
    _Adn2RequestsCurrent_Type()
)
adn2RequestsCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestsCurrent.setStatus("current")
_Adn2RequestsDisconnected_Type = Gauge32
_Adn2RequestsDisconnected_Object = MibScalar
adn2RequestsDisconnected = _Adn2RequestsDisconnected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 11),
    _Adn2RequestsDisconnected_Type()
)
adn2RequestsDisconnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestsDisconnected.setStatus("current")
_Adn2RequestsQueued_Type = Gauge32
_Adn2RequestsQueued_Object = MibScalar
adn2RequestsQueued = _Adn2RequestsQueued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 12),
    _Adn2RequestsQueued_Type()
)
adn2RequestsQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestsQueued.setStatus("current")
_Adn2RequestsRejected_Type = Gauge32
_Adn2RequestsRejected_Object = MibScalar
adn2RequestsRejected = _Adn2RequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 13),
    _Adn2RequestsRejected_Type()
)
adn2RequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2RequestsRejected.setStatus("current")
_Adn2StateServerSessionsAbandoned_Type = Gauge32
_Adn2StateServerSessionsAbandoned_Object = MibScalar
adn2StateServerSessionsAbandoned = _Adn2StateServerSessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 14),
    _Adn2StateServerSessionsAbandoned_Type()
)
adn2StateServerSessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2StateServerSessionsAbandoned.setStatus("current")
_Adn2StateServerSessionsActive_Type = Gauge32
_Adn2StateServerSessionsActive_Object = MibScalar
adn2StateServerSessionsActive = _Adn2StateServerSessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 15),
    _Adn2StateServerSessionsActive_Type()
)
adn2StateServerSessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2StateServerSessionsActive.setStatus("current")
_Adn2StateServerSessionsTimedOut_Type = Gauge32
_Adn2StateServerSessionsTimedOut_Object = MibScalar
adn2StateServerSessionsTimedOut = _Adn2StateServerSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 16),
    _Adn2StateServerSessionsTimedOut_Type()
)
adn2StateServerSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2StateServerSessionsTimedOut.setStatus("current")
_Adn2StateServerSessionsTotal_Type = Gauge32
_Adn2StateServerSessionsTotal_Object = MibScalar
adn2StateServerSessionsTotal = _Adn2StateServerSessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 17),
    _Adn2StateServerSessionsTotal_Type()
)
adn2StateServerSessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2StateServerSessionsTotal.setStatus("current")
_Adn2WorkerProcessRestarts_Type = Gauge32
_Adn2WorkerProcessRestarts_Object = MibScalar
adn2WorkerProcessRestarts = _Adn2WorkerProcessRestarts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 18),
    _Adn2WorkerProcessRestarts_Type()
)
adn2WorkerProcessRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2WorkerProcessRestarts.setStatus("current")
_Adn2WorkerProcessesRunning_Type = Gauge32
_Adn2WorkerProcessesRunning_Object = MibScalar
adn2WorkerProcessesRunning = _Adn2WorkerProcessesRunning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 19),
    _Adn2WorkerProcessesRunning_Type()
)
adn2WorkerProcessesRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adn2WorkerProcessesRunning.setStatus("current")
_AspDotNETApplicationsV2Table_Object = MibTable
aspDotNETApplicationsV2Table = _AspDotNETApplicationsV2Table_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119)
)
if mibBuilder.loadTexts:
    aspDotNETApplicationsV2Table.setStatus("current")
_AspDotNETApplicationsV2Entry_Object = MibTableRow
aspDotNETApplicationsV2Entry = _AspDotNETApplicationsV2Entry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1)
)
aspDotNETApplicationsV2Entry.setIndexNames(
    (0, "INFORMANT-ADV", "adnAppl2Instance"),
)
if mibBuilder.loadTexts:
    aspDotNETApplicationsV2Entry.setStatus("current")
_AdnAppl2Instance_Type = InstanceName
_AdnAppl2Instance_Object = MibTableColumn
adnAppl2Instance = _AdnAppl2Instance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 1),
    _AdnAppl2Instance_Type()
)
adnAppl2Instance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2Instance.setStatus("current")
_AdnAppl2AnonymousRequests_Type = Gauge32
_AdnAppl2AnonymousRequests_Object = MibTableColumn
adnAppl2AnonymousRequests = _AdnAppl2AnonymousRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 2),
    _AdnAppl2AnonymousRequests_Type()
)
adnAppl2AnonymousRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2AnonymousRequests.setStatus("current")
_AdnAppl2AnonymousRequestsPerSec_Type = Gauge32
_AdnAppl2AnonymousRequestsPerSec_Object = MibTableColumn
adnAppl2AnonymousRequestsPerSec = _AdnAppl2AnonymousRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 3),
    _AdnAppl2AnonymousRequestsPerSec_Type()
)
adnAppl2AnonymousRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2AnonymousRequestsPerSec.setStatus("current")
_AdnAppl2ApplLifetimeEvents_Type = Gauge32
_AdnAppl2ApplLifetimeEvents_Object = MibTableColumn
adnAppl2ApplLifetimeEvents = _AdnAppl2ApplLifetimeEvents_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 4),
    _AdnAppl2ApplLifetimeEvents_Type()
)
adnAppl2ApplLifetimeEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ApplLifetimeEvents.setStatus("current")
_AdnAppl2ApplLifetimeEventsPerSec_Type = Gauge32
_AdnAppl2ApplLifetimeEventsPerSec_Object = MibTableColumn
adnAppl2ApplLifetimeEventsPerSec = _AdnAppl2ApplLifetimeEventsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 5),
    _AdnAppl2ApplLifetimeEventsPerSec_Type()
)
adnAppl2ApplLifetimeEventsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ApplLifetimeEventsPerSec.setStatus("current")
_AdnAppl2AuditFailureEventsRaised_Type = Gauge32
_AdnAppl2AuditFailureEventsRaised_Object = MibTableColumn
adnAppl2AuditFailureEventsRaised = _AdnAppl2AuditFailureEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 6),
    _AdnAppl2AuditFailureEventsRaised_Type()
)
adnAppl2AuditFailureEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2AuditFailureEventsRaised.setStatus("current")
_AdnAppl2AuditSuccessEventsRaised_Type = Gauge32
_AdnAppl2AuditSuccessEventsRaised_Object = MibTableColumn
adnAppl2AuditSuccessEventsRaised = _AdnAppl2AuditSuccessEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 7),
    _AdnAppl2AuditSuccessEventsRaised_Type()
)
adnAppl2AuditSuccessEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2AuditSuccessEventsRaised.setStatus("current")
_AdnAppl2CachePctMachMemLimUsed_Type = Gauge32
_AdnAppl2CachePctMachMemLimUsed_Object = MibTableColumn
adnAppl2CachePctMachMemLimUsed = _AdnAppl2CachePctMachMemLimUsed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 8),
    _AdnAppl2CachePctMachMemLimUsed_Type()
)
adnAppl2CachePctMachMemLimUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CachePctMachMemLimUsed.setStatus("current")
_AdnAppl2CachePctProcMemLimUsed_Type = Gauge32
_AdnAppl2CachePctProcMemLimUsed_Object = MibTableColumn
adnAppl2CachePctProcMemLimUsed = _AdnAppl2CachePctProcMemLimUsed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 9),
    _AdnAppl2CachePctProcMemLimUsed_Type()
)
adnAppl2CachePctProcMemLimUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CachePctProcMemLimUsed.setStatus("current")
_AdnAppl2CacheAPIEntries_Type = Gauge32
_AdnAppl2CacheAPIEntries_Object = MibTableColumn
adnAppl2CacheAPIEntries = _AdnAppl2CacheAPIEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 10),
    _AdnAppl2CacheAPIEntries_Type()
)
adnAppl2CacheAPIEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheAPIEntries.setStatus("current")
_AdnAppl2CacheAPIHitRatio_Type = Gauge32
_AdnAppl2CacheAPIHitRatio_Object = MibTableColumn
adnAppl2CacheAPIHitRatio = _AdnAppl2CacheAPIHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 11),
    _AdnAppl2CacheAPIHitRatio_Type()
)
adnAppl2CacheAPIHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheAPIHitRatio.setStatus("current")
_AdnAppl2CacheAPIHits_Type = Gauge32
_AdnAppl2CacheAPIHits_Object = MibTableColumn
adnAppl2CacheAPIHits = _AdnAppl2CacheAPIHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 12),
    _AdnAppl2CacheAPIHits_Type()
)
adnAppl2CacheAPIHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheAPIHits.setStatus("current")
_AdnAppl2CacheAPIMisses_Type = Gauge32
_AdnAppl2CacheAPIMisses_Object = MibTableColumn
adnAppl2CacheAPIMisses = _AdnAppl2CacheAPIMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 13),
    _AdnAppl2CacheAPIMisses_Type()
)
adnAppl2CacheAPIMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheAPIMisses.setStatus("current")
_AdnAppl2CacheAPITrims_Type = Gauge32
_AdnAppl2CacheAPITrims_Object = MibTableColumn
adnAppl2CacheAPITrims = _AdnAppl2CacheAPITrims_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 14),
    _AdnAppl2CacheAPITrims_Type()
)
adnAppl2CacheAPITrims.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheAPITrims.setStatus("current")
_AdnAppl2CacheAPITurnoverRate_Type = Gauge32
_AdnAppl2CacheAPITurnoverRate_Object = MibTableColumn
adnAppl2CacheAPITurnoverRate = _AdnAppl2CacheAPITurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 15),
    _AdnAppl2CacheAPITurnoverRate_Type()
)
adnAppl2CacheAPITurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheAPITurnoverRate.setStatus("current")
_AdnAppl2CacheTotalEntries_Type = Gauge32
_AdnAppl2CacheTotalEntries_Object = MibTableColumn
adnAppl2CacheTotalEntries = _AdnAppl2CacheTotalEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 16),
    _AdnAppl2CacheTotalEntries_Type()
)
adnAppl2CacheTotalEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheTotalEntries.setStatus("current")
_AdnAppl2CacheTotalHitRatio_Type = Gauge32
_AdnAppl2CacheTotalHitRatio_Object = MibTableColumn
adnAppl2CacheTotalHitRatio = _AdnAppl2CacheTotalHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 17),
    _AdnAppl2CacheTotalHitRatio_Type()
)
adnAppl2CacheTotalHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheTotalHitRatio.setStatus("current")
_AdnAppl2CacheTotalHits_Type = Gauge32
_AdnAppl2CacheTotalHits_Object = MibTableColumn
adnAppl2CacheTotalHits = _AdnAppl2CacheTotalHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 18),
    _AdnAppl2CacheTotalHits_Type()
)
adnAppl2CacheTotalHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheTotalHits.setStatus("current")
_AdnAppl2CacheTotalMisses_Type = Gauge32
_AdnAppl2CacheTotalMisses_Object = MibTableColumn
adnAppl2CacheTotalMisses = _AdnAppl2CacheTotalMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 19),
    _AdnAppl2CacheTotalMisses_Type()
)
adnAppl2CacheTotalMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheTotalMisses.setStatus("current")
_AdnAppl2CacheTotalTrims_Type = Gauge32
_AdnAppl2CacheTotalTrims_Object = MibTableColumn
adnAppl2CacheTotalTrims = _AdnAppl2CacheTotalTrims_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 20),
    _AdnAppl2CacheTotalTrims_Type()
)
adnAppl2CacheTotalTrims.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheTotalTrims.setStatus("current")
_AdnAppl2CacheTotalTurnoverRate_Type = Gauge32
_AdnAppl2CacheTotalTurnoverRate_Object = MibTableColumn
adnAppl2CacheTotalTurnoverRate = _AdnAppl2CacheTotalTurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 21),
    _AdnAppl2CacheTotalTurnoverRate_Type()
)
adnAppl2CacheTotalTurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CacheTotalTurnoverRate.setStatus("current")
_AdnAppl2CompilationsTotal_Type = Gauge32
_AdnAppl2CompilationsTotal_Object = MibTableColumn
adnAppl2CompilationsTotal = _AdnAppl2CompilationsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 22),
    _AdnAppl2CompilationsTotal_Type()
)
adnAppl2CompilationsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2CompilationsTotal.setStatus("current")
_AdnAppl2DebuggingRequests_Type = Gauge32
_AdnAppl2DebuggingRequests_Object = MibTableColumn
adnAppl2DebuggingRequests = _AdnAppl2DebuggingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 23),
    _AdnAppl2DebuggingRequests_Type()
)
adnAppl2DebuggingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2DebuggingRequests.setStatus("current")
_AdnAppl2ErrorEventsRaised_Type = Gauge32
_AdnAppl2ErrorEventsRaised_Object = MibTableColumn
adnAppl2ErrorEventsRaised = _AdnAppl2ErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 24),
    _AdnAppl2ErrorEventsRaised_Type()
)
adnAppl2ErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorEventsRaised.setStatus("current")
_AdnAppl2ErrorEventsRaisedPerSec_Type = Gauge32
_AdnAppl2ErrorEventsRaisedPerSec_Object = MibTableColumn
adnAppl2ErrorEventsRaisedPerSec = _AdnAppl2ErrorEventsRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 25),
    _AdnAppl2ErrorEventsRaisedPerSec_Type()
)
adnAppl2ErrorEventsRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorEventsRaisedPerSec.setStatus("current")
_AdnAppl2ErrorsDuringCompilation_Type = Gauge32
_AdnAppl2ErrorsDuringCompilation_Object = MibTableColumn
adnAppl2ErrorsDuringCompilation = _AdnAppl2ErrorsDuringCompilation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 26),
    _AdnAppl2ErrorsDuringCompilation_Type()
)
adnAppl2ErrorsDuringCompilation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorsDuringCompilation.setStatus("current")
_AdnAppl2ErrorsDuringExecution_Type = Gauge32
_AdnAppl2ErrorsDuringExecution_Object = MibTableColumn
adnAppl2ErrorsDuringExecution = _AdnAppl2ErrorsDuringExecution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 27),
    _AdnAppl2ErrorsDuringExecution_Type()
)
adnAppl2ErrorsDuringExecution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorsDuringExecution.setStatus("current")
_AdnAppl2ErrorDuringPreprocessing_Type = Gauge32
_AdnAppl2ErrorDuringPreprocessing_Object = MibTableColumn
adnAppl2ErrorDuringPreprocessing = _AdnAppl2ErrorDuringPreprocessing_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 28),
    _AdnAppl2ErrorDuringPreprocessing_Type()
)
adnAppl2ErrorDuringPreprocessing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorDuringPreprocessing.setStatus("current")
_AdnAppl2ErrorsTotal_Type = Gauge32
_AdnAppl2ErrorsTotal_Object = MibTableColumn
adnAppl2ErrorsTotal = _AdnAppl2ErrorsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 29),
    _AdnAppl2ErrorsTotal_Type()
)
adnAppl2ErrorsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorsTotal.setStatus("current")
_AdnAppl2ErrorsTotalPerSec_Type = Gauge32
_AdnAppl2ErrorsTotalPerSec_Object = MibTableColumn
adnAppl2ErrorsTotalPerSec = _AdnAppl2ErrorsTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 30),
    _AdnAppl2ErrorsTotalPerSec_Type()
)
adnAppl2ErrorsTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorsTotalPerSec.setStatus("current")
_AdnAppl2ErrorUnhandledDuringExec_Type = Gauge32
_AdnAppl2ErrorUnhandledDuringExec_Object = MibTableColumn
adnAppl2ErrorUnhandledDuringExec = _AdnAppl2ErrorUnhandledDuringExec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 31),
    _AdnAppl2ErrorUnhandledDuringExec_Type()
)
adnAppl2ErrorUnhandledDuringExec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorUnhandledDuringExec.setStatus("current")
_AdnAppl2ErrorUnhandledExecPerSec_Type = Gauge32
_AdnAppl2ErrorUnhandledExecPerSec_Object = MibTableColumn
adnAppl2ErrorUnhandledExecPerSec = _AdnAppl2ErrorUnhandledExecPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 32),
    _AdnAppl2ErrorUnhandledExecPerSec_Type()
)
adnAppl2ErrorUnhandledExecPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ErrorUnhandledExecPerSec.setStatus("current")
_AdnAppl2EventsRaised_Type = Gauge32
_AdnAppl2EventsRaised_Object = MibTableColumn
adnAppl2EventsRaised = _AdnAppl2EventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 33),
    _AdnAppl2EventsRaised_Type()
)
adnAppl2EventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2EventsRaised.setStatus("current")
_AdnAppl2EventsRaisedPerSec_Type = Gauge32
_AdnAppl2EventsRaisedPerSec_Object = MibTableColumn
adnAppl2EventsRaisedPerSec = _AdnAppl2EventsRaisedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 34),
    _AdnAppl2EventsRaisedPerSec_Type()
)
adnAppl2EventsRaisedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2EventsRaisedPerSec.setStatus("current")
_AdnAppl2FormsAuthenticationFail_Type = Gauge32
_AdnAppl2FormsAuthenticationFail_Object = MibTableColumn
adnAppl2FormsAuthenticationFail = _AdnAppl2FormsAuthenticationFail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 35),
    _AdnAppl2FormsAuthenticationFail_Type()
)
adnAppl2FormsAuthenticationFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2FormsAuthenticationFail.setStatus("current")
_AdnAppl2FormsAuthenticationSucc_Type = Gauge32
_AdnAppl2FormsAuthenticationSucc_Object = MibTableColumn
adnAppl2FormsAuthenticationSucc = _AdnAppl2FormsAuthenticationSucc_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 36),
    _AdnAppl2FormsAuthenticationSucc_Type()
)
adnAppl2FormsAuthenticationSucc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2FormsAuthenticationSucc.setStatus("current")
_AdnAppl2InfraErrorEventsRaised_Type = Gauge32
_AdnAppl2InfraErrorEventsRaised_Object = MibTableColumn
adnAppl2InfraErrorEventsRaised = _AdnAppl2InfraErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 37),
    _AdnAppl2InfraErrorEventsRaised_Type()
)
adnAppl2InfraErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2InfraErrorEventsRaised.setStatus("current")
_AdnAppl2InfraErrEventRaisePerSec_Type = Gauge32
_AdnAppl2InfraErrEventRaisePerSec_Object = MibTableColumn
adnAppl2InfraErrEventRaisePerSec = _AdnAppl2InfraErrEventRaisePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 38),
    _AdnAppl2InfraErrEventRaisePerSec_Type()
)
adnAppl2InfraErrEventRaisePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2InfraErrEventRaisePerSec.setStatus("current")
_AdnAppl2MembershipAuthFailure_Type = Gauge32
_AdnAppl2MembershipAuthFailure_Object = MibTableColumn
adnAppl2MembershipAuthFailure = _AdnAppl2MembershipAuthFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 39),
    _AdnAppl2MembershipAuthFailure_Type()
)
adnAppl2MembershipAuthFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2MembershipAuthFailure.setStatus("current")
_AdnAppl2MembershipAuthSuccess_Type = Gauge32
_AdnAppl2MembershipAuthSuccess_Object = MibTableColumn
adnAppl2MembershipAuthSuccess = _AdnAppl2MembershipAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 40),
    _AdnAppl2MembershipAuthSuccess_Type()
)
adnAppl2MembershipAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2MembershipAuthSuccess.setStatus("current")
_AdnAppl2OutputCacheEntries_Type = Gauge32
_AdnAppl2OutputCacheEntries_Object = MibTableColumn
adnAppl2OutputCacheEntries = _AdnAppl2OutputCacheEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 41),
    _AdnAppl2OutputCacheEntries_Type()
)
adnAppl2OutputCacheEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2OutputCacheEntries.setStatus("current")
_AdnAppl2OutputCacheHitRatio_Type = Gauge32
_AdnAppl2OutputCacheHitRatio_Object = MibTableColumn
adnAppl2OutputCacheHitRatio = _AdnAppl2OutputCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 42),
    _AdnAppl2OutputCacheHitRatio_Type()
)
adnAppl2OutputCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2OutputCacheHitRatio.setStatus("current")
_AdnAppl2OutputCacheHits_Type = Gauge32
_AdnAppl2OutputCacheHits_Object = MibTableColumn
adnAppl2OutputCacheHits = _AdnAppl2OutputCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 43),
    _AdnAppl2OutputCacheHits_Type()
)
adnAppl2OutputCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2OutputCacheHits.setStatus("current")
_AdnAppl2OutputCacheMisses_Type = Gauge32
_AdnAppl2OutputCacheMisses_Object = MibTableColumn
adnAppl2OutputCacheMisses = _AdnAppl2OutputCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 44),
    _AdnAppl2OutputCacheMisses_Type()
)
adnAppl2OutputCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2OutputCacheMisses.setStatus("current")
_AdnAppl2OutputCacheTrims_Type = Gauge32
_AdnAppl2OutputCacheTrims_Object = MibTableColumn
adnAppl2OutputCacheTrims = _AdnAppl2OutputCacheTrims_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 45),
    _AdnAppl2OutputCacheTrims_Type()
)
adnAppl2OutputCacheTrims.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2OutputCacheTrims.setStatus("current")
_AdnAppl2OutputCacheTurnoverRate_Type = Gauge32
_AdnAppl2OutputCacheTurnoverRate_Object = MibTableColumn
adnAppl2OutputCacheTurnoverRate = _AdnAppl2OutputCacheTurnoverRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 46),
    _AdnAppl2OutputCacheTurnoverRate_Type()
)
adnAppl2OutputCacheTurnoverRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2OutputCacheTurnoverRate.setStatus("current")
_AdnAppl2PipelineInstanceCount_Type = Gauge32
_AdnAppl2PipelineInstanceCount_Object = MibTableColumn
adnAppl2PipelineInstanceCount = _AdnAppl2PipelineInstanceCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 47),
    _AdnAppl2PipelineInstanceCount_Type()
)
adnAppl2PipelineInstanceCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2PipelineInstanceCount.setStatus("current")
_AdnAppl2RequestBytesInTotal_Type = Gauge32
_AdnAppl2RequestBytesInTotal_Object = MibTableColumn
adnAppl2RequestBytesInTotal = _AdnAppl2RequestBytesInTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 48),
    _AdnAppl2RequestBytesInTotal_Type()
)
adnAppl2RequestBytesInTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestBytesInTotal.setStatus("current")
_AdnAppl2RequestBytesOutTotal_Type = Gauge32
_AdnAppl2RequestBytesOutTotal_Object = MibTableColumn
adnAppl2RequestBytesOutTotal = _AdnAppl2RequestBytesOutTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 49),
    _AdnAppl2RequestBytesOutTotal_Type()
)
adnAppl2RequestBytesOutTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestBytesOutTotal.setStatus("current")
_AdnAppl2RequestErrorEventsRaised_Type = Gauge32
_AdnAppl2RequestErrorEventsRaised_Object = MibTableColumn
adnAppl2RequestErrorEventsRaised = _AdnAppl2RequestErrorEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 50),
    _AdnAppl2RequestErrorEventsRaised_Type()
)
adnAppl2RequestErrorEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestErrorEventsRaised.setStatus("current")
_AdnAppl2ReqErrorEventRaisePerSec_Type = Gauge32
_AdnAppl2ReqErrorEventRaisePerSec_Object = MibTableColumn
adnAppl2ReqErrorEventRaisePerSec = _AdnAppl2ReqErrorEventRaisePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 51),
    _AdnAppl2ReqErrorEventRaisePerSec_Type()
)
adnAppl2ReqErrorEventRaisePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ReqErrorEventRaisePerSec.setStatus("current")
_AdnAppl2RequestEventsRaised_Type = Gauge32
_AdnAppl2RequestEventsRaised_Object = MibTableColumn
adnAppl2RequestEventsRaised = _AdnAppl2RequestEventsRaised_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 52),
    _AdnAppl2RequestEventsRaised_Type()
)
adnAppl2RequestEventsRaised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestEventsRaised.setStatus("current")
_AdnAppl2RequestEventsRaisePerSec_Type = Gauge32
_AdnAppl2RequestEventsRaisePerSec_Object = MibTableColumn
adnAppl2RequestEventsRaisePerSec = _AdnAppl2RequestEventsRaisePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 53),
    _AdnAppl2RequestEventsRaisePerSec_Type()
)
adnAppl2RequestEventsRaisePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestEventsRaisePerSec.setStatus("current")
_AdnAppl2RequestExecutionTime_Type = Gauge32
_AdnAppl2RequestExecutionTime_Object = MibTableColumn
adnAppl2RequestExecutionTime = _AdnAppl2RequestExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 54),
    _AdnAppl2RequestExecutionTime_Type()
)
adnAppl2RequestExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestExecutionTime.setStatus("current")
_AdnAppl2RequestWaitTime_Type = Gauge32
_AdnAppl2RequestWaitTime_Object = MibTableColumn
adnAppl2RequestWaitTime = _AdnAppl2RequestWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 55),
    _AdnAppl2RequestWaitTime_Type()
)
adnAppl2RequestWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestWaitTime.setStatus("current")
_AdnAppl2RequestsDisconnected_Type = Gauge32
_AdnAppl2RequestsDisconnected_Object = MibTableColumn
adnAppl2RequestsDisconnected = _AdnAppl2RequestsDisconnected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 56),
    _AdnAppl2RequestsDisconnected_Type()
)
adnAppl2RequestsDisconnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsDisconnected.setStatus("current")
_AdnAppl2RequestsExecuting_Type = Gauge32
_AdnAppl2RequestsExecuting_Object = MibTableColumn
adnAppl2RequestsExecuting = _AdnAppl2RequestsExecuting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 57),
    _AdnAppl2RequestsExecuting_Type()
)
adnAppl2RequestsExecuting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsExecuting.setStatus("current")
_AdnAppl2RequestsFailed_Type = Gauge32
_AdnAppl2RequestsFailed_Object = MibTableColumn
adnAppl2RequestsFailed = _AdnAppl2RequestsFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 58),
    _AdnAppl2RequestsFailed_Type()
)
adnAppl2RequestsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsFailed.setStatus("current")
_AdnAppl2RequestsInApplQueue_Type = Gauge32
_AdnAppl2RequestsInApplQueue_Object = MibTableColumn
adnAppl2RequestsInApplQueue = _AdnAppl2RequestsInApplQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 59),
    _AdnAppl2RequestsInApplQueue_Type()
)
adnAppl2RequestsInApplQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsInApplQueue.setStatus("current")
_AdnAppl2RequestsNotAuthorized_Type = Gauge32
_AdnAppl2RequestsNotAuthorized_Object = MibTableColumn
adnAppl2RequestsNotAuthorized = _AdnAppl2RequestsNotAuthorized_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 60),
    _AdnAppl2RequestsNotAuthorized_Type()
)
adnAppl2RequestsNotAuthorized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsNotAuthorized.setStatus("current")
_AdnAppl2RequestsNotFound_Type = Gauge32
_AdnAppl2RequestsNotFound_Object = MibTableColumn
adnAppl2RequestsNotFound = _AdnAppl2RequestsNotFound_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 61),
    _AdnAppl2RequestsNotFound_Type()
)
adnAppl2RequestsNotFound.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsNotFound.setStatus("current")
_AdnAppl2RequestsRejected_Type = Gauge32
_AdnAppl2RequestsRejected_Object = MibTableColumn
adnAppl2RequestsRejected = _AdnAppl2RequestsRejected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 62),
    _AdnAppl2RequestsRejected_Type()
)
adnAppl2RequestsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsRejected.setStatus("current")
_AdnAppl2RequestsSucceeded_Type = Gauge32
_AdnAppl2RequestsSucceeded_Object = MibTableColumn
adnAppl2RequestsSucceeded = _AdnAppl2RequestsSucceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 63),
    _AdnAppl2RequestsSucceeded_Type()
)
adnAppl2RequestsSucceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsSucceeded.setStatus("current")
_AdnAppl2RequestsTimedOut_Type = Gauge32
_AdnAppl2RequestsTimedOut_Object = MibTableColumn
adnAppl2RequestsTimedOut = _AdnAppl2RequestsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 64),
    _AdnAppl2RequestsTimedOut_Type()
)
adnAppl2RequestsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsTimedOut.setStatus("current")
_AdnAppl2RequestsTotal_Type = Gauge32
_AdnAppl2RequestsTotal_Object = MibTableColumn
adnAppl2RequestsTotal = _AdnAppl2RequestsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 65),
    _AdnAppl2RequestsTotal_Type()
)
adnAppl2RequestsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsTotal.setStatus("current")
_AdnAppl2RequestsPerSec_Type = Gauge32
_AdnAppl2RequestsPerSec_Object = MibTableColumn
adnAppl2RequestsPerSec = _AdnAppl2RequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 66),
    _AdnAppl2RequestsPerSec_Type()
)
adnAppl2RequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2RequestsPerSec.setStatus("current")
_AdnAppl2SessionSQLSvrConnTotal_Type = Gauge32
_AdnAppl2SessionSQLSvrConnTotal_Object = MibTableColumn
adnAppl2SessionSQLSvrConnTotal = _AdnAppl2SessionSQLSvrConnTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 67),
    _AdnAppl2SessionSQLSvrConnTotal_Type()
)
adnAppl2SessionSQLSvrConnTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2SessionSQLSvrConnTotal.setStatus("current")
_AdnAppl2SessionStateSvrConnTotal_Type = Gauge32
_AdnAppl2SessionStateSvrConnTotal_Object = MibTableColumn
adnAppl2SessionStateSvrConnTotal = _AdnAppl2SessionStateSvrConnTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 68),
    _AdnAppl2SessionStateSvrConnTotal_Type()
)
adnAppl2SessionStateSvrConnTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2SessionStateSvrConnTotal.setStatus("current")
_AdnAppl2SessionsAbandoned_Type = Gauge32
_AdnAppl2SessionsAbandoned_Object = MibTableColumn
adnAppl2SessionsAbandoned = _AdnAppl2SessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 69),
    _AdnAppl2SessionsAbandoned_Type()
)
adnAppl2SessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2SessionsAbandoned.setStatus("current")
_AdnAppl2SessionsActive_Type = Gauge32
_AdnAppl2SessionsActive_Object = MibTableColumn
adnAppl2SessionsActive = _AdnAppl2SessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 70),
    _AdnAppl2SessionsActive_Type()
)
adnAppl2SessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2SessionsActive.setStatus("current")
_AdnAppl2SessionsTimedOut_Type = Gauge32
_AdnAppl2SessionsTimedOut_Object = MibTableColumn
adnAppl2SessionsTimedOut = _AdnAppl2SessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 71),
    _AdnAppl2SessionsTimedOut_Type()
)
adnAppl2SessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2SessionsTimedOut.setStatus("current")
_AdnAppl2SessionsTotal_Type = Gauge32
_AdnAppl2SessionsTotal_Object = MibTableColumn
adnAppl2SessionsTotal = _AdnAppl2SessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 72),
    _AdnAppl2SessionsTotal_Type()
)
adnAppl2SessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2SessionsTotal.setStatus("current")
_AdnAppl2TransactionsAborted_Type = Gauge32
_AdnAppl2TransactionsAborted_Object = MibTableColumn
adnAppl2TransactionsAborted = _AdnAppl2TransactionsAborted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 73),
    _AdnAppl2TransactionsAborted_Type()
)
adnAppl2TransactionsAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2TransactionsAborted.setStatus("current")
_AdnAppl2TransactionsCommitted_Type = Gauge32
_AdnAppl2TransactionsCommitted_Object = MibTableColumn
adnAppl2TransactionsCommitted = _AdnAppl2TransactionsCommitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 74),
    _AdnAppl2TransactionsCommitted_Type()
)
adnAppl2TransactionsCommitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2TransactionsCommitted.setStatus("current")
_AdnAppl2TransactionsPending_Type = Gauge32
_AdnAppl2TransactionsPending_Object = MibTableColumn
adnAppl2TransactionsPending = _AdnAppl2TransactionsPending_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 75),
    _AdnAppl2TransactionsPending_Type()
)
adnAppl2TransactionsPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2TransactionsPending.setStatus("current")
_AdnAppl2TransactionsTotal_Type = Gauge32
_AdnAppl2TransactionsTotal_Object = MibTableColumn
adnAppl2TransactionsTotal = _AdnAppl2TransactionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 76),
    _AdnAppl2TransactionsTotal_Type()
)
adnAppl2TransactionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2TransactionsTotal.setStatus("current")
_AdnAppl2TransactionsPerSec_Type = Gauge32
_AdnAppl2TransactionsPerSec_Object = MibTableColumn
adnAppl2TransactionsPerSec = _AdnAppl2TransactionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 77),
    _AdnAppl2TransactionsPerSec_Type()
)
adnAppl2TransactionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2TransactionsPerSec.setStatus("current")
_AdnAppl2ViewstateMACValidFailure_Type = Gauge32
_AdnAppl2ViewstateMACValidFailure_Object = MibTableColumn
adnAppl2ViewstateMACValidFailure = _AdnAppl2ViewstateMACValidFailure_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 78),
    _AdnAppl2ViewstateMACValidFailure_Type()
)
adnAppl2ViewstateMACValidFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnAppl2ViewstateMACValidFailure.setStatus("current")
_AspDotNETStateService_ObjectIdentity = ObjectIdentity
aspDotNETStateService = _AspDotNETStateService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 120)
)
_AdnssSessionsAbandoned_Type = Gauge32
_AdnssSessionsAbandoned_Object = MibScalar
adnssSessionsAbandoned = _AdnssSessionsAbandoned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 1),
    _AdnssSessionsAbandoned_Type()
)
adnssSessionsAbandoned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnssSessionsAbandoned.setStatus("current")
_AdnssSessionsActive_Type = Gauge32
_AdnssSessionsActive_Object = MibScalar
adnssSessionsActive = _AdnssSessionsActive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 2),
    _AdnssSessionsActive_Type()
)
adnssSessionsActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnssSessionsActive.setStatus("current")
_AdnssSessionsTimedOut_Type = Gauge32
_AdnssSessionsTimedOut_Object = MibScalar
adnssSessionsTimedOut = _AdnssSessionsTimedOut_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 3),
    _AdnssSessionsTimedOut_Type()
)
adnssSessionsTimedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnssSessionsTimedOut.setStatus("current")
_AdnssSessionsTotal_Type = Gauge32
_AdnssSessionsTotal_Object = MibScalar
adnssSessionsTotal = _AdnssSessionsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 4),
    _AdnssSessionsTotal_Type()
)
adnssSessionsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adnssSessionsTotal.setStatus("current")
_AuthorizationManagerApplTable_Object = MibTable
authorizationManagerApplTable = _AuthorizationManagerApplTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 121)
)
if mibBuilder.loadTexts:
    authorizationManagerApplTable.setStatus("current")
_AuthorizationManagerApplEntry_Object = MibTableRow
authorizationManagerApplEntry = _AuthorizationManagerApplEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1)
)
authorizationManagerApplEntry.setIndexNames(
    (0, "INFORMANT-ADV", "amaInstance"),
)
if mibBuilder.loadTexts:
    authorizationManagerApplEntry.setStatus("current")
_AmaInstance_Type = InstanceName
_AmaInstance_Object = MibTableColumn
amaInstance = _AmaInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1, 1),
    _AmaInstance_Type()
)
amaInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    amaInstance.setStatus("current")
_AmaNumberOfScopesLoadedInMemory_Type = Gauge32
_AmaNumberOfScopesLoadedInMemory_Object = MibTableColumn
amaNumberOfScopesLoadedInMemory = _AmaNumberOfScopesLoadedInMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1, 2),
    _AmaNumberOfScopesLoadedInMemory_Type()
)
amaNumberOfScopesLoadedInMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    amaNumberOfScopesLoadedInMemory.setStatus("current")
_AmaTotalNumberOfScopes_Type = Gauge32
_AmaTotalNumberOfScopes_Object = MibTableColumn
amaTotalNumberOfScopes = _AmaTotalNumberOfScopes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1, 3),
    _AmaTotalNumberOfScopes_Type()
)
amaTotalNumberOfScopes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    amaTotalNumberOfScopes.setStatus("current")
_CertificationAuthorityTable_Object = MibTable
certificationAuthorityTable = _CertificationAuthorityTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122)
)
if mibBuilder.loadTexts:
    certificationAuthorityTable.setStatus("current")
_CertificationAuthorityEntry_Object = MibTableRow
certificationAuthorityEntry = _CertificationAuthorityEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1)
)
certificationAuthorityEntry.setIndexNames(
    (0, "INFORMANT-ADV", "caInstance"),
)
if mibBuilder.loadTexts:
    certificationAuthorityEntry.setStatus("current")
_CaInstance_Type = InstanceName
_CaInstance_Object = MibTableColumn
caInstance = _CaInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 1),
    _CaInstance_Type()
)
caInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caInstance.setStatus("current")
_CaFailedRequestsPerSec_Type = Gauge32
_CaFailedRequestsPerSec_Object = MibTableColumn
caFailedRequestsPerSec = _CaFailedRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 2),
    _CaFailedRequestsPerSec_Type()
)
caFailedRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caFailedRequestsPerSec.setStatus("current")
_CaIssuedRequestsPerSec_Type = Gauge32
_CaIssuedRequestsPerSec_Object = MibTableColumn
caIssuedRequestsPerSec = _CaIssuedRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 3),
    _CaIssuedRequestsPerSec_Type()
)
caIssuedRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caIssuedRequestsPerSec.setStatus("current")
_CaPendingRequestsPerSec_Type = Gauge32
_CaPendingRequestsPerSec_Object = MibTableColumn
caPendingRequestsPerSec = _CaPendingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 4),
    _CaPendingRequestsPerSec_Type()
)
caPendingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caPendingRequestsPerSec.setStatus("current")
_CaRequestCryptographicSignTimeMs_Type = Gauge32
_CaRequestCryptographicSignTimeMs_Object = MibTableColumn
caRequestCryptographicSignTimeMs = _CaRequestCryptographicSignTimeMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 5),
    _CaRequestCryptographicSignTimeMs_Type()
)
caRequestCryptographicSignTimeMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caRequestCryptographicSignTimeMs.setStatus("current")
_CaRequestPolicyModulePrcTimeMs_Type = Gauge32
_CaRequestPolicyModulePrcTimeMs_Object = MibTableColumn
caRequestPolicyModulePrcTimeMs = _CaRequestPolicyModulePrcTimeMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 6),
    _CaRequestPolicyModulePrcTimeMs_Type()
)
caRequestPolicyModulePrcTimeMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caRequestPolicyModulePrcTimeMs.setStatus("current")
_CaRequestProcessingTimeMs_Type = Gauge32
_CaRequestProcessingTimeMs_Object = MibTableColumn
caRequestProcessingTimeMs = _CaRequestProcessingTimeMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 7),
    _CaRequestProcessingTimeMs_Type()
)
caRequestProcessingTimeMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caRequestProcessingTimeMs.setStatus("current")
_CaRequestsPerSec_Type = Gauge32
_CaRequestsPerSec_Object = MibTableColumn
caRequestsPerSec = _CaRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 8),
    _CaRequestsPerSec_Type()
)
caRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caRequestsPerSec.setStatus("current")
_CaRetrievalProcessingTimeMs_Type = Gauge32
_CaRetrievalProcessingTimeMs_Object = MibTableColumn
caRetrievalProcessingTimeMs = _CaRetrievalProcessingTimeMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 9),
    _CaRetrievalProcessingTimeMs_Type()
)
caRetrievalProcessingTimeMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caRetrievalProcessingTimeMs.setStatus("current")
_CaRetrievalsPerSec_Type = Gauge32
_CaRetrievalsPerSec_Object = MibTableColumn
caRetrievalsPerSec = _CaRetrievalsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 10),
    _CaRetrievalsPerSec_Type()
)
caRetrievalsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    caRetrievalsPerSec.setStatus("current")
_CertificationAuthorityConnTable_Object = MibTable
certificationAuthorityConnTable = _CertificationAuthorityConnTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 123)
)
if mibBuilder.loadTexts:
    certificationAuthorityConnTable.setStatus("current")
_CertificationAuthorityConnEntry_Object = MibTableRow
certificationAuthorityConnEntry = _CertificationAuthorityConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 123, 1)
)
certificationAuthorityConnEntry.setIndexNames(
    (0, "INFORMANT-ADV", "cacInstance"),
)
if mibBuilder.loadTexts:
    certificationAuthorityConnEntry.setStatus("current")
_CacInstance_Type = InstanceName
_CacInstance_Object = MibTableColumn
cacInstance = _CacInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 123, 1, 1),
    _CacInstance_Type()
)
cacInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacInstance.setStatus("current")
_CacActiveConnections_Type = Gauge32
_CacActiveConnections_Object = MibTableColumn
cacActiveConnections = _CacActiveConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 123, 1, 2),
    _CacActiveConnections_Type()
)
cacActiveConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cacActiveConnections.setStatus("current")
_DirectoryServicesTable_Object = MibTable
directoryServicesTable = _DirectoryServicesTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124)
)
if mibBuilder.loadTexts:
    directoryServicesTable.setStatus("current")
_DirectoryServicesEntry_Object = MibTableRow
directoryServicesEntry = _DirectoryServicesEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1)
)
directoryServicesEntry.setIndexNames(
    (0, "INFORMANT-ADV", "dsInstance"),
)
if mibBuilder.loadTexts:
    directoryServicesEntry.setStatus("current")
_DsInstance_Type = InstanceName
_DsInstance_Object = MibTableColumn
dsInstance = _DsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 1),
    _DsInstance_Type()
)
dsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsInstance.setStatus("current")
_DsABANRPerSec_Type = Gauge32
_DsABANRPerSec_Object = MibTableColumn
dsABANRPerSec = _DsABANRPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 2),
    _DsABANRPerSec_Type()
)
dsABANRPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABANRPerSec.setStatus("current")
_DsABBrowsesPerSec_Type = Gauge32
_DsABBrowsesPerSec_Object = MibTableColumn
dsABBrowsesPerSec = _DsABBrowsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 3),
    _DsABBrowsesPerSec_Type()
)
dsABBrowsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABBrowsesPerSec.setStatus("current")
_DsABClientSessions_Type = Gauge32
_DsABClientSessions_Object = MibTableColumn
dsABClientSessions = _DsABClientSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 4),
    _DsABClientSessions_Type()
)
dsABClientSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABClientSessions.setStatus("current")
_DsABMatchesPerSec_Type = Gauge32
_DsABMatchesPerSec_Object = MibTableColumn
dsABMatchesPerSec = _DsABMatchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 5),
    _DsABMatchesPerSec_Type()
)
dsABMatchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABMatchesPerSec.setStatus("current")
_DsABPropertyReadsPerSec_Type = Gauge32
_DsABPropertyReadsPerSec_Object = MibTableColumn
dsABPropertyReadsPerSec = _DsABPropertyReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 6),
    _DsABPropertyReadsPerSec_Type()
)
dsABPropertyReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABPropertyReadsPerSec.setStatus("current")
_DsABProxyLookupsPerSec_Type = Gauge32
_DsABProxyLookupsPerSec_Object = MibTableColumn
dsABProxyLookupsPerSec = _DsABProxyLookupsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 7),
    _DsABProxyLookupsPerSec_Type()
)
dsABProxyLookupsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABProxyLookupsPerSec.setStatus("current")
_DsABSearchesPerSec_Type = Gauge32
_DsABSearchesPerSec_Object = MibTableColumn
dsABSearchesPerSec = _DsABSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 8),
    _DsABSearchesPerSec_Type()
)
dsABSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsABSearchesPerSec.setStatus("current")
_DsATQEstimatedQueueDelay_Type = Gauge32
_DsATQEstimatedQueueDelay_Object = MibTableColumn
dsATQEstimatedQueueDelay = _DsATQEstimatedQueueDelay_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 9),
    _DsATQEstimatedQueueDelay_Type()
)
dsATQEstimatedQueueDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsATQEstimatedQueueDelay.setStatus("current")
_DsATQOutstandingQueuedRequests_Type = Gauge32
_DsATQOutstandingQueuedRequests_Object = MibTableColumn
dsATQOutstandingQueuedRequests = _DsATQOutstandingQueuedRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 10),
    _DsATQOutstandingQueuedRequests_Type()
)
dsATQOutstandingQueuedRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsATQOutstandingQueuedRequests.setStatus("current")
_DsATQRequestLatency_Type = Gauge32
_DsATQRequestLatency_Object = MibTableColumn
dsATQRequestLatency = _DsATQRequestLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 11),
    _DsATQRequestLatency_Type()
)
dsATQRequestLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsATQRequestLatency.setStatus("current")
_DsATQThreadsLDAP_Type = Gauge32
_DsATQThreadsLDAP_Object = MibTableColumn
dsATQThreadsLDAP = _DsATQThreadsLDAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 12),
    _DsATQThreadsLDAP_Type()
)
dsATQThreadsLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsATQThreadsLDAP.setStatus("current")
_DsATQThreadsOther_Type = Gauge32
_DsATQThreadsOther_Object = MibTableColumn
dsATQThreadsOther = _DsATQThreadsOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 13),
    _DsATQThreadsOther_Type()
)
dsATQThreadsOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsATQThreadsOther.setStatus("current")
_DsATQThreadsTotal_Type = Gauge32
_DsATQThreadsTotal_Object = MibTableColumn
dsATQThreadsTotal = _DsATQThreadsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 14),
    _DsATQThreadsTotal_Type()
)
dsATQThreadsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsATQThreadsTotal.setStatus("current")
_DsBaseSearchesPerSec_Type = Gauge32
_DsBaseSearchesPerSec_Object = MibTableColumn
dsBaseSearchesPerSec = _DsBaseSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 15),
    _DsBaseSearchesPerSec_Type()
)
dsBaseSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsBaseSearchesPerSec.setStatus("current")
_DsDRAHighestUSNCommittedHighPart_Type = Gauge32
_DsDRAHighestUSNCommittedHighPart_Object = MibTableColumn
dsDRAHighestUSNCommittedHighPart = _DsDRAHighestUSNCommittedHighPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 16),
    _DsDRAHighestUSNCommittedHighPart_Type()
)
dsDRAHighestUSNCommittedHighPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAHighestUSNCommittedHighPart.setStatus("current")
_DsDRAHighestUSNCommittedLowPart_Type = Gauge32
_DsDRAHighestUSNCommittedLowPart_Object = MibTableColumn
dsDRAHighestUSNCommittedLowPart = _DsDRAHighestUSNCommittedLowPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 17),
    _DsDRAHighestUSNCommittedLowPart_Type()
)
dsDRAHighestUSNCommittedLowPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAHighestUSNCommittedLowPart.setStatus("current")
_DsDRAHighestUSNIssuedHighPart_Type = Gauge32
_DsDRAHighestUSNIssuedHighPart_Object = MibTableColumn
dsDRAHighestUSNIssuedHighPart = _DsDRAHighestUSNIssuedHighPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 18),
    _DsDRAHighestUSNIssuedHighPart_Type()
)
dsDRAHighestUSNIssuedHighPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAHighestUSNIssuedHighPart.setStatus("current")
_DsDRAHighestUSNIssuedLowPart_Type = Gauge32
_DsDRAHighestUSNIssuedLowPart_Object = MibTableColumn
dsDRAHighestUSNIssuedLowPart = _DsDRAHighestUSNIssuedLowPart_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 19),
    _DsDRAHighestUSNIssuedLowPart_Type()
)
dsDRAHighestUSNIssuedLowPart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAHighestUSNIssuedLowPart.setStatus("current")
_DsDRAInCmpBtwSiteAftCmpSinceBoot_Type = Gauge32
_DsDRAInCmpBtwSiteAftCmpSinceBoot_Object = MibTableColumn
dsDRAInCmpBtwSiteAftCmpSinceBoot = _DsDRAInCmpBtwSiteAftCmpSinceBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 20),
    _DsDRAInCmpBtwSiteAftCmpSinceBoot_Type()
)
dsDRAInCmpBtwSiteAftCmpSinceBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInCmpBtwSiteAftCmpSinceBoot.setStatus("current")
_DsDRAInCmpBtwSitesAfterCmpPerSec_Type = Gauge32
_DsDRAInCmpBtwSitesAfterCmpPerSec_Object = MibTableColumn
dsDRAInCmpBtwSitesAfterCmpPerSec = _DsDRAInCmpBtwSitesAfterCmpPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 21),
    _DsDRAInCmpBtwSitesAfterCmpPerSec_Type()
)
dsDRAInCmpBtwSitesAfterCmpPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInCmpBtwSitesAfterCmpPerSec.setStatus("current")
_DsDRAInCmpBtwSiteBfrCmpSinceBoot_Type = Gauge32
_DsDRAInCmpBtwSiteBfrCmpSinceBoot_Object = MibTableColumn
dsDRAInCmpBtwSiteBfrCmpSinceBoot = _DsDRAInCmpBtwSiteBfrCmpSinceBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 22),
    _DsDRAInCmpBtwSiteBfrCmpSinceBoot_Type()
)
dsDRAInCmpBtwSiteBfrCmpSinceBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInCmpBtwSiteBfrCmpSinceBoot.setStatus("current")
_DsDRAInCmpBtwSitesBeforCmpPerSec_Type = Gauge32
_DsDRAInCmpBtwSitesBeforCmpPerSec_Object = MibTableColumn
dsDRAInCmpBtwSitesBeforCmpPerSec = _DsDRAInCmpBtwSitesBeforCmpPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 23),
    _DsDRAInCmpBtwSitesBeforCmpPerSec_Type()
)
dsDRAInCmpBtwSitesBeforCmpPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInCmpBtwSitesBeforCmpPerSec.setStatus("current")
_DsDRAInNotCmpWithinSiteSinceBoot_Type = Gauge32
_DsDRAInNotCmpWithinSiteSinceBoot_Object = MibTableColumn
dsDRAInNotCmpWithinSiteSinceBoot = _DsDRAInNotCmpWithinSiteSinceBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 24),
    _DsDRAInNotCmpWithinSiteSinceBoot_Type()
)
dsDRAInNotCmpWithinSiteSinceBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInNotCmpWithinSiteSinceBoot.setStatus("current")
_DsDRAInNotCmpWithinSitePerSec_Type = Gauge32
_DsDRAInNotCmpWithinSitePerSec_Object = MibTableColumn
dsDRAInNotCmpWithinSitePerSec = _DsDRAInNotCmpWithinSitePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 25),
    _DsDRAInNotCmpWithinSitePerSec_Type()
)
dsDRAInNotCmpWithinSitePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInNotCmpWithinSitePerSec.setStatus("current")
_DsDRAInBytesTotalSinceBoot_Type = Gauge32
_DsDRAInBytesTotalSinceBoot_Object = MibTableColumn
dsDRAInBytesTotalSinceBoot = _DsDRAInBytesTotalSinceBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 26),
    _DsDRAInBytesTotalSinceBoot_Type()
)
dsDRAInBytesTotalSinceBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInBytesTotalSinceBoot.setStatus("current")
_DsDRAInBytesTotalPerSec_Type = Gauge32
_DsDRAInBytesTotalPerSec_Object = MibTableColumn
dsDRAInBytesTotalPerSec = _DsDRAInBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 27),
    _DsDRAInBytesTotalPerSec_Type()
)
dsDRAInBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInBytesTotalPerSec.setStatus("current")
_DsDRAInFullSyncObjectsRemaining_Type = Gauge32
_DsDRAInFullSyncObjectsRemaining_Object = MibTableColumn
dsDRAInFullSyncObjectsRemaining = _DsDRAInFullSyncObjectsRemaining_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 28),
    _DsDRAInFullSyncObjectsRemaining_Type()
)
dsDRAInFullSyncObjectsRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInFullSyncObjectsRemaining.setStatus("current")
_DsDRAInLinkValueUpdRemainInPkt_Type = Gauge32
_DsDRAInLinkValueUpdRemainInPkt_Object = MibTableColumn
dsDRAInLinkValueUpdRemainInPkt = _DsDRAInLinkValueUpdRemainInPkt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 29),
    _DsDRAInLinkValueUpdRemainInPkt_Type()
)
dsDRAInLinkValueUpdRemainInPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInLinkValueUpdRemainInPkt.setStatus("current")
_DsDRAInObjectUpdRemainInPkt_Type = Gauge32
_DsDRAInObjectUpdRemainInPkt_Object = MibTableColumn
dsDRAInObjectUpdRemainInPkt = _DsDRAInObjectUpdRemainInPkt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 30),
    _DsDRAInObjectUpdRemainInPkt_Type()
)
dsDRAInObjectUpdRemainInPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInObjectUpdRemainInPkt.setStatus("current")
_DsDRAInObjectsAppliedPerSec_Type = Gauge32
_DsDRAInObjectsAppliedPerSec_Object = MibTableColumn
dsDRAInObjectsAppliedPerSec = _DsDRAInObjectsAppliedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 31),
    _DsDRAInObjectsAppliedPerSec_Type()
)
dsDRAInObjectsAppliedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInObjectsAppliedPerSec.setStatus("current")
_DsDRAInObjectsFilteredPerSec_Type = Gauge32
_DsDRAInObjectsFilteredPerSec_Object = MibTableColumn
dsDRAInObjectsFilteredPerSec = _DsDRAInObjectsFilteredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 32),
    _DsDRAInObjectsFilteredPerSec_Type()
)
dsDRAInObjectsFilteredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInObjectsFilteredPerSec.setStatus("current")
_DsDRAInObjectsPerSec_Type = Gauge32
_DsDRAInObjectsPerSec_Object = MibTableColumn
dsDRAInObjectsPerSec = _DsDRAInObjectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 33),
    _DsDRAInObjectsPerSec_Type()
)
dsDRAInObjectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInObjectsPerSec.setStatus("current")
_DsDRAInPropertiesAppliedPerSec_Type = Gauge32
_DsDRAInPropertiesAppliedPerSec_Object = MibTableColumn
dsDRAInPropertiesAppliedPerSec = _DsDRAInPropertiesAppliedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 34),
    _DsDRAInPropertiesAppliedPerSec_Type()
)
dsDRAInPropertiesAppliedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInPropertiesAppliedPerSec.setStatus("current")
_DsDRAInPropertiesFilteredPerSec_Type = Gauge32
_DsDRAInPropertiesFilteredPerSec_Object = MibTableColumn
dsDRAInPropertiesFilteredPerSec = _DsDRAInPropertiesFilteredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 35),
    _DsDRAInPropertiesFilteredPerSec_Type()
)
dsDRAInPropertiesFilteredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInPropertiesFilteredPerSec.setStatus("current")
_DsDRAInPropertiesTotalPerSec_Type = Gauge32
_DsDRAInPropertiesTotalPerSec_Object = MibTableColumn
dsDRAInPropertiesTotalPerSec = _DsDRAInPropertiesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 36),
    _DsDRAInPropertiesTotalPerSec_Type()
)
dsDRAInPropertiesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInPropertiesTotalPerSec.setStatus("current")
_DsDRAInTotalUpdRemainInPkt_Type = Gauge32
_DsDRAInTotalUpdRemainInPkt_Object = MibTableColumn
dsDRAInTotalUpdRemainInPkt = _DsDRAInTotalUpdRemainInPkt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 37),
    _DsDRAInTotalUpdRemainInPkt_Type()
)
dsDRAInTotalUpdRemainInPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInTotalUpdRemainInPkt.setStatus("current")
_DsDRAInValuesDNsOnlyPerSec_Type = Gauge32
_DsDRAInValuesDNsOnlyPerSec_Object = MibTableColumn
dsDRAInValuesDNsOnlyPerSec = _DsDRAInValuesDNsOnlyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 38),
    _DsDRAInValuesDNsOnlyPerSec_Type()
)
dsDRAInValuesDNsOnlyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInValuesDNsOnlyPerSec.setStatus("current")
_DsDRAInValuesTotalPerSec_Type = Gauge32
_DsDRAInValuesTotalPerSec_Object = MibTableColumn
dsDRAInValuesTotalPerSec = _DsDRAInValuesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 39),
    _DsDRAInValuesTotalPerSec_Type()
)
dsDRAInValuesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAInValuesTotalPerSec.setStatus("current")
_DsDRAOutCmpBtwSitesAftCmpSinceBt_Type = Gauge32
_DsDRAOutCmpBtwSitesAftCmpSinceBt_Object = MibTableColumn
dsDRAOutCmpBtwSitesAftCmpSinceBt = _DsDRAOutCmpBtwSitesAftCmpSinceBt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 40),
    _DsDRAOutCmpBtwSitesAftCmpSinceBt_Type()
)
dsDRAOutCmpBtwSitesAftCmpSinceBt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutCmpBtwSitesAftCmpSinceBt.setStatus("current")
_DsDRAOutCmpBtwSitesAftCmpPerSec_Type = Gauge32
_DsDRAOutCmpBtwSitesAftCmpPerSec_Object = MibTableColumn
dsDRAOutCmpBtwSitesAftCmpPerSec = _DsDRAOutCmpBtwSitesAftCmpPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 41),
    _DsDRAOutCmpBtwSitesAftCmpPerSec_Type()
)
dsDRAOutCmpBtwSitesAftCmpPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutCmpBtwSitesAftCmpPerSec.setStatus("current")
_DsDRAOutCmpBtwSitesBfrCmpSinceBt_Type = Gauge32
_DsDRAOutCmpBtwSitesBfrCmpSinceBt_Object = MibTableColumn
dsDRAOutCmpBtwSitesBfrCmpSinceBt = _DsDRAOutCmpBtwSitesBfrCmpSinceBt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 42),
    _DsDRAOutCmpBtwSitesBfrCmpSinceBt_Type()
)
dsDRAOutCmpBtwSitesBfrCmpSinceBt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutCmpBtwSitesBfrCmpSinceBt.setStatus("current")
_DsDRAOutCmpBtwSitesBfrCmpPerSec_Type = Gauge32
_DsDRAOutCmpBtwSitesBfrCmpPerSec_Object = MibTableColumn
dsDRAOutCmpBtwSitesBfrCmpPerSec = _DsDRAOutCmpBtwSitesBfrCmpPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 43),
    _DsDRAOutCmpBtwSitesBfrCmpPerSec_Type()
)
dsDRAOutCmpBtwSitesBfrCmpPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutCmpBtwSitesBfrCmpPerSec.setStatus("current")
_DsDRAOutNotCmpWithinSiteSinceBt_Type = Gauge32
_DsDRAOutNotCmpWithinSiteSinceBt_Object = MibTableColumn
dsDRAOutNotCmpWithinSiteSinceBt = _DsDRAOutNotCmpWithinSiteSinceBt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 44),
    _DsDRAOutNotCmpWithinSiteSinceBt_Type()
)
dsDRAOutNotCmpWithinSiteSinceBt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutNotCmpWithinSiteSinceBt.setStatus("current")
_DsDRAOutNotCmpWithinSitePerSec_Type = Gauge32
_DsDRAOutNotCmpWithinSitePerSec_Object = MibTableColumn
dsDRAOutNotCmpWithinSitePerSec = _DsDRAOutNotCmpWithinSitePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 45),
    _DsDRAOutNotCmpWithinSitePerSec_Type()
)
dsDRAOutNotCmpWithinSitePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutNotCmpWithinSitePerSec.setStatus("current")
_DsDRAOutboundBytesTotalSinceBoot_Type = Gauge32
_DsDRAOutboundBytesTotalSinceBoot_Object = MibTableColumn
dsDRAOutboundBytesTotalSinceBoot = _DsDRAOutboundBytesTotalSinceBoot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 46),
    _DsDRAOutboundBytesTotalSinceBoot_Type()
)
dsDRAOutboundBytesTotalSinceBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutboundBytesTotalSinceBoot.setStatus("current")
_DsDRAOutboundBytesTotalPerSec_Type = Gauge32
_DsDRAOutboundBytesTotalPerSec_Object = MibTableColumn
dsDRAOutboundBytesTotalPerSec = _DsDRAOutboundBytesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 47),
    _DsDRAOutboundBytesTotalPerSec_Type()
)
dsDRAOutboundBytesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutboundBytesTotalPerSec.setStatus("current")
_DsDRAOutObjectsFilteredPerSec_Type = Gauge32
_DsDRAOutObjectsFilteredPerSec_Object = MibTableColumn
dsDRAOutObjectsFilteredPerSec = _DsDRAOutObjectsFilteredPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 48),
    _DsDRAOutObjectsFilteredPerSec_Type()
)
dsDRAOutObjectsFilteredPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutObjectsFilteredPerSec.setStatus("current")
_DsDRAOutboundObjectsPerSec_Type = Gauge32
_DsDRAOutboundObjectsPerSec_Object = MibTableColumn
dsDRAOutboundObjectsPerSec = _DsDRAOutboundObjectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 49),
    _DsDRAOutboundObjectsPerSec_Type()
)
dsDRAOutboundObjectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutboundObjectsPerSec.setStatus("current")
_DsDRAOutboundPropertiesPerSec_Type = Gauge32
_DsDRAOutboundPropertiesPerSec_Object = MibTableColumn
dsDRAOutboundPropertiesPerSec = _DsDRAOutboundPropertiesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 50),
    _DsDRAOutboundPropertiesPerSec_Type()
)
dsDRAOutboundPropertiesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutboundPropertiesPerSec.setStatus("current")
_DsDRAOutboundValuesDNsOnlyPerSec_Type = Gauge32
_DsDRAOutboundValuesDNsOnlyPerSec_Object = MibTableColumn
dsDRAOutboundValuesDNsOnlyPerSec = _DsDRAOutboundValuesDNsOnlyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 51),
    _DsDRAOutboundValuesDNsOnlyPerSec_Type()
)
dsDRAOutboundValuesDNsOnlyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutboundValuesDNsOnlyPerSec.setStatus("current")
_DsDRAOutboundValuesTotalPerSec_Type = Gauge32
_DsDRAOutboundValuesTotalPerSec_Object = MibTableColumn
dsDRAOutboundValuesTotalPerSec = _DsDRAOutboundValuesTotalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 52),
    _DsDRAOutboundValuesTotalPerSec_Type()
)
dsDRAOutboundValuesTotalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAOutboundValuesTotalPerSec.setStatus("current")
_DsDRAPendingReplicationOperation_Type = Gauge32
_DsDRAPendingReplicationOperation_Object = MibTableColumn
dsDRAPendingReplicationOperation = _DsDRAPendingReplicationOperation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 53),
    _DsDRAPendingReplicationOperation_Type()
)
dsDRAPendingReplicationOperation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAPendingReplicationOperation.setStatus("current")
_DsDRAPendingReplicationSync_Type = Gauge32
_DsDRAPendingReplicationSync_Object = MibTableColumn
dsDRAPendingReplicationSync = _DsDRAPendingReplicationSync_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 54),
    _DsDRAPendingReplicationSync_Type()
)
dsDRAPendingReplicationSync.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAPendingReplicationSync.setStatus("current")
_DsDRASyncFailsOnSchemaMismatch_Type = Gauge32
_DsDRASyncFailsOnSchemaMismatch_Object = MibTableColumn
dsDRASyncFailsOnSchemaMismatch = _DsDRASyncFailsOnSchemaMismatch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 55),
    _DsDRASyncFailsOnSchemaMismatch_Type()
)
dsDRASyncFailsOnSchemaMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRASyncFailsOnSchemaMismatch.setStatus("current")
_DsDRASyncRequestsMade_Type = Gauge32
_DsDRASyncRequestsMade_Object = MibTableColumn
dsDRASyncRequestsMade = _DsDRASyncRequestsMade_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 56),
    _DsDRASyncRequestsMade_Type()
)
dsDRASyncRequestsMade.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRASyncRequestsMade.setStatus("current")
_DsDRASyncRequestsSuccessful_Type = Gauge32
_DsDRASyncRequestsSuccessful_Object = MibTableColumn
dsDRASyncRequestsSuccessful = _DsDRASyncRequestsSuccessful_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 57),
    _DsDRASyncRequestsSuccessful_Type()
)
dsDRASyncRequestsSuccessful.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRASyncRequestsSuccessful.setStatus("current")
_DsDRAThreadsGettingNCChanges_Type = Gauge32
_DsDRAThreadsGettingNCChanges_Object = MibTableColumn
dsDRAThreadsGettingNCChanges = _DsDRAThreadsGettingNCChanges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 58),
    _DsDRAThreadsGettingNCChanges_Type()
)
dsDRAThreadsGettingNCChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAThreadsGettingNCChanges.setStatus("current")
_DsDRAThreadsNCChgHoldSemaphore_Type = Gauge32
_DsDRAThreadsNCChgHoldSemaphore_Object = MibTableColumn
dsDRAThreadsNCChgHoldSemaphore = _DsDRAThreadsNCChgHoldSemaphore_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 59),
    _DsDRAThreadsNCChgHoldSemaphore_Type()
)
dsDRAThreadsNCChgHoldSemaphore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDRAThreadsNCChgHoldSemaphore.setStatus("current")
_DsDSPercentReadsOther_Type = Gauge32
_DsDSPercentReadsOther_Object = MibTableColumn
dsDSPercentReadsOther = _DsDSPercentReadsOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 60),
    _DsDSPercentReadsOther_Type()
)
dsDSPercentReadsOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsOther.setStatus("current")
_DsDSPercentReadsFromDRA_Type = Gauge32
_DsDSPercentReadsFromDRA_Object = MibTableColumn
dsDSPercentReadsFromDRA = _DsDSPercentReadsFromDRA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 61),
    _DsDSPercentReadsFromDRA_Type()
)
dsDSPercentReadsFromDRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsFromDRA.setStatus("current")
_DsDSPercentReadsFromKCC_Type = Gauge32
_DsDSPercentReadsFromKCC_Object = MibTableColumn
dsDSPercentReadsFromKCC = _DsDSPercentReadsFromKCC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 62),
    _DsDSPercentReadsFromKCC_Type()
)
dsDSPercentReadsFromKCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsFromKCC.setStatus("current")
_DsDSPercentReadsFromLSA_Type = Gauge32
_DsDSPercentReadsFromLSA_Object = MibTableColumn
dsDSPercentReadsFromLSA = _DsDSPercentReadsFromLSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 63),
    _DsDSPercentReadsFromLSA_Type()
)
dsDSPercentReadsFromLSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsFromLSA.setStatus("current")
_DsDSPercentReadsFromNSPI_Type = Gauge32
_DsDSPercentReadsFromNSPI_Object = MibTableColumn
dsDSPercentReadsFromNSPI = _DsDSPercentReadsFromNSPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 64),
    _DsDSPercentReadsFromNSPI_Type()
)
dsDSPercentReadsFromNSPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsFromNSPI.setStatus("current")
_DsDSPercentReadsFromNTDSAPI_Type = Gauge32
_DsDSPercentReadsFromNTDSAPI_Object = MibTableColumn
dsDSPercentReadsFromNTDSAPI = _DsDSPercentReadsFromNTDSAPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 65),
    _DsDSPercentReadsFromNTDSAPI_Type()
)
dsDSPercentReadsFromNTDSAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsFromNTDSAPI.setStatus("current")
_DsDSPercentReadsFromSAM_Type = Gauge32
_DsDSPercentReadsFromSAM_Object = MibTableColumn
dsDSPercentReadsFromSAM = _DsDSPercentReadsFromSAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 66),
    _DsDSPercentReadsFromSAM_Type()
)
dsDSPercentReadsFromSAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentReadsFromSAM.setStatus("current")
_DsDSPercentSearchesOther_Type = Gauge32
_DsDSPercentSearchesOther_Object = MibTableColumn
dsDSPercentSearchesOther = _DsDSPercentSearchesOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 67),
    _DsDSPercentSearchesOther_Type()
)
dsDSPercentSearchesOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesOther.setStatus("current")
_DsDSPercentSearchesFromDRA_Type = Gauge32
_DsDSPercentSearchesFromDRA_Object = MibTableColumn
dsDSPercentSearchesFromDRA = _DsDSPercentSearchesFromDRA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 68),
    _DsDSPercentSearchesFromDRA_Type()
)
dsDSPercentSearchesFromDRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromDRA.setStatus("current")
_DsDSPercentSearchesFromKCC_Type = Gauge32
_DsDSPercentSearchesFromKCC_Object = MibTableColumn
dsDSPercentSearchesFromKCC = _DsDSPercentSearchesFromKCC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 69),
    _DsDSPercentSearchesFromKCC_Type()
)
dsDSPercentSearchesFromKCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromKCC.setStatus("current")
_DsDSPercentSearchesFromLDAP_Type = Gauge32
_DsDSPercentSearchesFromLDAP_Object = MibTableColumn
dsDSPercentSearchesFromLDAP = _DsDSPercentSearchesFromLDAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 70),
    _DsDSPercentSearchesFromLDAP_Type()
)
dsDSPercentSearchesFromLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromLDAP.setStatus("current")
_DsDSPercentSearchesFromLSA_Type = Gauge32
_DsDSPercentSearchesFromLSA_Object = MibTableColumn
dsDSPercentSearchesFromLSA = _DsDSPercentSearchesFromLSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 71),
    _DsDSPercentSearchesFromLSA_Type()
)
dsDSPercentSearchesFromLSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromLSA.setStatus("current")
_DsDSPercentSearchesFromNSPI_Type = Gauge32
_DsDSPercentSearchesFromNSPI_Object = MibTableColumn
dsDSPercentSearchesFromNSPI = _DsDSPercentSearchesFromNSPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 72),
    _DsDSPercentSearchesFromNSPI_Type()
)
dsDSPercentSearchesFromNSPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromNSPI.setStatus("current")
_DsDSPercentSearchesFromNTDSAPI_Type = Gauge32
_DsDSPercentSearchesFromNTDSAPI_Object = MibTableColumn
dsDSPercentSearchesFromNTDSAPI = _DsDSPercentSearchesFromNTDSAPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 73),
    _DsDSPercentSearchesFromNTDSAPI_Type()
)
dsDSPercentSearchesFromNTDSAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromNTDSAPI.setStatus("current")
_DsDSPercentSearchesFromSAM_Type = Gauge32
_DsDSPercentSearchesFromSAM_Object = MibTableColumn
dsDSPercentSearchesFromSAM = _DsDSPercentSearchesFromSAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 74),
    _DsDSPercentSearchesFromSAM_Type()
)
dsDSPercentSearchesFromSAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentSearchesFromSAM.setStatus("current")
_DsDSPercentWritesOther_Type = Gauge32
_DsDSPercentWritesOther_Object = MibTableColumn
dsDSPercentWritesOther = _DsDSPercentWritesOther_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 75),
    _DsDSPercentWritesOther_Type()
)
dsDSPercentWritesOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesOther.setStatus("current")
_DsDSPercentWritesFromDRA_Type = Gauge32
_DsDSPercentWritesFromDRA_Object = MibTableColumn
dsDSPercentWritesFromDRA = _DsDSPercentWritesFromDRA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 76),
    _DsDSPercentWritesFromDRA_Type()
)
dsDSPercentWritesFromDRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromDRA.setStatus("current")
_DsDSPercentWritesFromKCC_Type = Gauge32
_DsDSPercentWritesFromKCC_Object = MibTableColumn
dsDSPercentWritesFromKCC = _DsDSPercentWritesFromKCC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 77),
    _DsDSPercentWritesFromKCC_Type()
)
dsDSPercentWritesFromKCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromKCC.setStatus("current")
_DsDSPercentWritesFromLDAP_Type = Gauge32
_DsDSPercentWritesFromLDAP_Object = MibTableColumn
dsDSPercentWritesFromLDAP = _DsDSPercentWritesFromLDAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 78),
    _DsDSPercentWritesFromLDAP_Type()
)
dsDSPercentWritesFromLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromLDAP.setStatus("current")
_DsDSPercentWritesFromLSA_Type = Gauge32
_DsDSPercentWritesFromLSA_Object = MibTableColumn
dsDSPercentWritesFromLSA = _DsDSPercentWritesFromLSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 79),
    _DsDSPercentWritesFromLSA_Type()
)
dsDSPercentWritesFromLSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromLSA.setStatus("current")
_DsDSPercentWritesFromNSPI_Type = Gauge32
_DsDSPercentWritesFromNSPI_Object = MibTableColumn
dsDSPercentWritesFromNSPI = _DsDSPercentWritesFromNSPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 80),
    _DsDSPercentWritesFromNSPI_Type()
)
dsDSPercentWritesFromNSPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromNSPI.setStatus("current")
_DsDSPercentWritesFromNTDSAPI_Type = Gauge32
_DsDSPercentWritesFromNTDSAPI_Object = MibTableColumn
dsDSPercentWritesFromNTDSAPI = _DsDSPercentWritesFromNTDSAPI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 81),
    _DsDSPercentWritesFromNTDSAPI_Type()
)
dsDSPercentWritesFromNTDSAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromNTDSAPI.setStatus("current")
_DsDSPercentWritesFromSAM_Type = Gauge32
_DsDSPercentWritesFromSAM_Object = MibTableColumn
dsDSPercentWritesFromSAM = _DsDSPercentWritesFromSAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 82),
    _DsDSPercentWritesFromSAM_Type()
)
dsDSPercentWritesFromSAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSPercentWritesFromSAM.setStatus("current")
_DsDSClientBindsPerSec_Type = Gauge32
_DsDSClientBindsPerSec_Object = MibTableColumn
dsDSClientBindsPerSec = _DsDSClientBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 83),
    _DsDSClientBindsPerSec_Type()
)
dsDSClientBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSClientBindsPerSec.setStatus("current")
_DsDSClientNameTranslationsPerSec_Type = Gauge32
_DsDSClientNameTranslationsPerSec_Object = MibTableColumn
dsDSClientNameTranslationsPerSec = _DsDSClientNameTranslationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 84),
    _DsDSClientNameTranslationsPerSec_Type()
)
dsDSClientNameTranslationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSClientNameTranslationsPerSec.setStatus("current")
_DsDSDirectoryReadsPerSec_Type = Gauge32
_DsDSDirectoryReadsPerSec_Object = MibTableColumn
dsDSDirectoryReadsPerSec = _DsDSDirectoryReadsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 85),
    _DsDSDirectoryReadsPerSec_Type()
)
dsDSDirectoryReadsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSDirectoryReadsPerSec.setStatus("current")
_DsDSDirectorySearchesPerSec_Type = Gauge32
_DsDSDirectorySearchesPerSec_Object = MibTableColumn
dsDSDirectorySearchesPerSec = _DsDSDirectorySearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 86),
    _DsDSDirectorySearchesPerSec_Type()
)
dsDSDirectorySearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSDirectorySearchesPerSec.setStatus("current")
_DsDSDirectoryWritesPerSec_Type = Gauge32
_DsDSDirectoryWritesPerSec_Object = MibTableColumn
dsDSDirectoryWritesPerSec = _DsDSDirectoryWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 87),
    _DsDSDirectoryWritesPerSec_Type()
)
dsDSDirectoryWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSDirectoryWritesPerSec.setStatus("current")
_DsDSMonitorListSize_Type = Gauge32
_DsDSMonitorListSize_Object = MibTableColumn
dsDSMonitorListSize = _DsDSMonitorListSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 88),
    _DsDSMonitorListSize_Type()
)
dsDSMonitorListSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSMonitorListSize.setStatus("current")
_DsDSNameCacheHitRate_Type = Gauge32
_DsDSNameCacheHitRate_Object = MibTableColumn
dsDSNameCacheHitRate = _DsDSNameCacheHitRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 89),
    _DsDSNameCacheHitRate_Type()
)
dsDSNameCacheHitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSNameCacheHitRate.setStatus("current")
_DsDSNotifyQueueSize_Type = Gauge32
_DsDSNotifyQueueSize_Object = MibTableColumn
dsDSNotifyQueueSize = _DsDSNotifyQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 90),
    _DsDSNotifyQueueSize_Type()
)
dsDSNotifyQueueSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSNotifyQueueSize.setStatus("current")
_DsDSSearchSubOperationsPerSec_Type = Gauge32
_DsDSSearchSubOperationsPerSec_Object = MibTableColumn
dsDSSearchSubOperationsPerSec = _DsDSSearchSubOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 91),
    _DsDSSearchSubOperationsPerSec_Type()
)
dsDSSearchSubOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSSearchSubOperationsPerSec.setStatus("current")
_DsDSSecurityDescriptorPropEvents_Type = Gauge32
_DsDSSecurityDescriptorPropEvents_Object = MibTableColumn
dsDSSecurityDescriptorPropEvents = _DsDSSecurityDescriptorPropEvents_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 92),
    _DsDSSecurityDescriptorPropEvents_Type()
)
dsDSSecurityDescriptorPropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSSecurityDescriptorPropEvents.setStatus("current")
_DsDSSecurityDescPropAvgExclTime_Type = Gauge32
_DsDSSecurityDescPropAvgExclTime_Object = MibTableColumn
dsDSSecurityDescPropAvgExclTime = _DsDSSecurityDescPropAvgExclTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 93),
    _DsDSSecurityDescPropAvgExclTime_Type()
)
dsDSSecurityDescPropAvgExclTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSSecurityDescPropAvgExclTime.setStatus("current")
_DsDSSecurityDescPropRuntimeQueue_Type = Gauge32
_DsDSSecurityDescPropRuntimeQueue_Object = MibTableColumn
dsDSSecurityDescPropRuntimeQueue = _DsDSSecurityDescPropRuntimeQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 94),
    _DsDSSecurityDescPropRuntimeQueue_Type()
)
dsDSSecurityDescPropRuntimeQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSSecurityDescPropRuntimeQueue.setStatus("current")
_DsDSSecurityDescSubOpsPerSec_Type = Gauge32
_DsDSSecurityDescSubOpsPerSec_Object = MibTableColumn
dsDSSecurityDescSubOpsPerSec = _DsDSSecurityDescSubOpsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 95),
    _DsDSSecurityDescSubOpsPerSec_Type()
)
dsDSSecurityDescSubOpsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSSecurityDescSubOpsPerSec.setStatus("current")
_DsDSServerBindsPerSec_Type = Gauge32
_DsDSServerBindsPerSec_Object = MibTableColumn
dsDSServerBindsPerSec = _DsDSServerBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 96),
    _DsDSServerBindsPerSec_Type()
)
dsDSServerBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSServerBindsPerSec.setStatus("current")
_DsDSServerNameTranslationsPerSec_Type = Gauge32
_DsDSServerNameTranslationsPerSec_Object = MibTableColumn
dsDSServerNameTranslationsPerSec = _DsDSServerNameTranslationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 97),
    _DsDSServerNameTranslationsPerSec_Type()
)
dsDSServerNameTranslationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSServerNameTranslationsPerSec.setStatus("current")
_DsDSThreadsInUse_Type = Gauge32
_DsDSThreadsInUse_Object = MibTableColumn
dsDSThreadsInUse = _DsDSThreadsInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 98),
    _DsDSThreadsInUse_Type()
)
dsDSThreadsInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDSThreadsInUse.setStatus("current")
_DsDatabaseAddsPerSec_Type = Gauge32
_DsDatabaseAddsPerSec_Object = MibTableColumn
dsDatabaseAddsPerSec = _DsDatabaseAddsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 99),
    _DsDatabaseAddsPerSec_Type()
)
dsDatabaseAddsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDatabaseAddsPerSec.setStatus("current")
_DsDatabaseDeletesPerSec_Type = Gauge32
_DsDatabaseDeletesPerSec_Object = MibTableColumn
dsDatabaseDeletesPerSec = _DsDatabaseDeletesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 100),
    _DsDatabaseDeletesPerSec_Type()
)
dsDatabaseDeletesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDatabaseDeletesPerSec.setStatus("current")
_DsDatabaseModifysPerSec_Type = Gauge32
_DsDatabaseModifysPerSec_Object = MibTableColumn
dsDatabaseModifysPerSec = _DsDatabaseModifysPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 101),
    _DsDatabaseModifysPerSec_Type()
)
dsDatabaseModifysPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDatabaseModifysPerSec.setStatus("current")
_DsDigestBindsPerSec_Type = Gauge32
_DsDigestBindsPerSec_Object = MibTableColumn
dsDigestBindsPerSec = _DsDigestBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 102),
    _DsDigestBindsPerSec_Type()
)
dsDigestBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsDigestBindsPerSec.setStatus("current")
_DsExternalBindsPerSec_Type = Gauge32
_DsExternalBindsPerSec_Object = MibTableColumn
dsExternalBindsPerSec = _DsExternalBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 103),
    _DsExternalBindsPerSec_Type()
)
dsExternalBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsExternalBindsPerSec.setStatus("current")
_DsFastBindsPerSec_Type = Gauge32
_DsFastBindsPerSec_Object = MibTableColumn
dsFastBindsPerSec = _DsFastBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 104),
    _DsFastBindsPerSec_Type()
)
dsFastBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsFastBindsPerSec.setStatus("current")
_DsLDAPActiveThreads_Type = Gauge32
_DsLDAPActiveThreads_Object = MibTableColumn
dsLDAPActiveThreads = _DsLDAPActiveThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 105),
    _DsLDAPActiveThreads_Type()
)
dsLDAPActiveThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPActiveThreads.setStatus("current")
_DsLDAPBindTime_Type = Gauge32
_DsLDAPBindTime_Object = MibTableColumn
dsLDAPBindTime = _DsLDAPBindTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 106),
    _DsLDAPBindTime_Type()
)
dsLDAPBindTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPBindTime.setStatus("current")
_DsLDAPClientSessions_Type = Gauge32
_DsLDAPClientSessions_Object = MibTableColumn
dsLDAPClientSessions = _DsLDAPClientSessions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 107),
    _DsLDAPClientSessions_Type()
)
dsLDAPClientSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPClientSessions.setStatus("current")
_DsLDAPClosedConnectionsPerSec_Type = Gauge32
_DsLDAPClosedConnectionsPerSec_Object = MibTableColumn
dsLDAPClosedConnectionsPerSec = _DsLDAPClosedConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 108),
    _DsLDAPClosedConnectionsPerSec_Type()
)
dsLDAPClosedConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPClosedConnectionsPerSec.setStatus("current")
_DsLDAPNewConnectionsPerSec_Type = Gauge32
_DsLDAPNewConnectionsPerSec_Object = MibTableColumn
dsLDAPNewConnectionsPerSec = _DsLDAPNewConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 109),
    _DsLDAPNewConnectionsPerSec_Type()
)
dsLDAPNewConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPNewConnectionsPerSec.setStatus("current")
_DsLDAPNewSSLConnectionsPerSec_Type = Gauge32
_DsLDAPNewSSLConnectionsPerSec_Object = MibTableColumn
dsLDAPNewSSLConnectionsPerSec = _DsLDAPNewSSLConnectionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 110),
    _DsLDAPNewSSLConnectionsPerSec_Type()
)
dsLDAPNewSSLConnectionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPNewSSLConnectionsPerSec.setStatus("current")
_DsLDAPSearchesPerSec_Type = Gauge32
_DsLDAPSearchesPerSec_Object = MibTableColumn
dsLDAPSearchesPerSec = _DsLDAPSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 111),
    _DsLDAPSearchesPerSec_Type()
)
dsLDAPSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPSearchesPerSec.setStatus("current")
_DsLDAPSuccessfulBindsPerSec_Type = Gauge32
_DsLDAPSuccessfulBindsPerSec_Object = MibTableColumn
dsLDAPSuccessfulBindsPerSec = _DsLDAPSuccessfulBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 112),
    _DsLDAPSuccessfulBindsPerSec_Type()
)
dsLDAPSuccessfulBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPSuccessfulBindsPerSec.setStatus("current")
_DsLDAPUDPOperationsPerSec_Type = Gauge32
_DsLDAPUDPOperationsPerSec_Object = MibTableColumn
dsLDAPUDPOperationsPerSec = _DsLDAPUDPOperationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 113),
    _DsLDAPUDPOperationsPerSec_Type()
)
dsLDAPUDPOperationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPUDPOperationsPerSec.setStatus("current")
_DsLDAPWritesPerSec_Type = Gauge32
_DsLDAPWritesPerSec_Object = MibTableColumn
dsLDAPWritesPerSec = _DsLDAPWritesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 114),
    _DsLDAPWritesPerSec_Type()
)
dsLDAPWritesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLDAPWritesPerSec.setStatus("current")
_DsLinkValuesCleanedPerSec_Type = Gauge32
_DsLinkValuesCleanedPerSec_Object = MibTableColumn
dsLinkValuesCleanedPerSec = _DsLinkValuesCleanedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 115),
    _DsLinkValuesCleanedPerSec_Type()
)
dsLinkValuesCleanedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsLinkValuesCleanedPerSec.setStatus("current")
_DsNTLMBindsPerSec_Type = Gauge32
_DsNTLMBindsPerSec_Object = MibTableColumn
dsNTLMBindsPerSec = _DsNTLMBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 116),
    _DsNTLMBindsPerSec_Type()
)
dsNTLMBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsNTLMBindsPerSec.setStatus("current")
_DsNegotiatedBindsPerSec_Type = Gauge32
_DsNegotiatedBindsPerSec_Object = MibTableColumn
dsNegotiatedBindsPerSec = _DsNegotiatedBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 117),
    _DsNegotiatedBindsPerSec_Type()
)
dsNegotiatedBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsNegotiatedBindsPerSec.setStatus("current")
_DsOnelevelSearchesPerSec_Type = Gauge32
_DsOnelevelSearchesPerSec_Object = MibTableColumn
dsOnelevelSearchesPerSec = _DsOnelevelSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 118),
    _DsOnelevelSearchesPerSec_Type()
)
dsOnelevelSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsOnelevelSearchesPerSec.setStatus("current")
_DsPhantomsCleanedPerSec_Type = Gauge32
_DsPhantomsCleanedPerSec_Object = MibTableColumn
dsPhantomsCleanedPerSec = _DsPhantomsCleanedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 119),
    _DsPhantomsCleanedPerSec_Type()
)
dsPhantomsCleanedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsPhantomsCleanedPerSec.setStatus("current")
_DsPhantomsVisitedPerSec_Type = Gauge32
_DsPhantomsVisitedPerSec_Object = MibTableColumn
dsPhantomsVisitedPerSec = _DsPhantomsVisitedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 120),
    _DsPhantomsVisitedPerSec_Type()
)
dsPhantomsVisitedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsPhantomsVisitedPerSec.setStatus("current")
_DsSAMAccountGroupEvalLatency_Type = Gauge32
_DsSAMAccountGroupEvalLatency_Object = MibTableColumn
dsSAMAccountGroupEvalLatency = _DsSAMAccountGroupEvalLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 121),
    _DsSAMAccountGroupEvalLatency_Type()
)
dsSAMAccountGroupEvalLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMAccountGroupEvalLatency.setStatus("current")
_DsSAMDisplayInfoQueriesPerSec_Type = Gauge32
_DsSAMDisplayInfoQueriesPerSec_Object = MibTableColumn
dsSAMDisplayInfoQueriesPerSec = _DsSAMDisplayInfoQueriesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 122),
    _DsSAMDisplayInfoQueriesPerSec_Type()
)
dsSAMDisplayInfoQueriesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMDisplayInfoQueriesPerSec.setStatus("current")
_DsSAMDomainLocalGrpMemEvalPerSec_Type = Gauge32
_DsSAMDomainLocalGrpMemEvalPerSec_Object = MibTableColumn
dsSAMDomainLocalGrpMemEvalPerSec = _DsSAMDomainLocalGrpMemEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 123),
    _DsSAMDomainLocalGrpMemEvalPerSec_Type()
)
dsSAMDomainLocalGrpMemEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMDomainLocalGrpMemEvalPerSec.setStatus("current")
_DsSAMEnumerationsPerSec_Type = Gauge32
_DsSAMEnumerationsPerSec_Object = MibTableColumn
dsSAMEnumerationsPerSec = _DsSAMEnumerationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 124),
    _DsSAMEnumerationsPerSec_Type()
)
dsSAMEnumerationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMEnumerationsPerSec.setStatus("current")
_DsSAMGCEvaluationsPerSec_Type = Gauge32
_DsSAMGCEvaluationsPerSec_Object = MibTableColumn
dsSAMGCEvaluationsPerSec = _DsSAMGCEvaluationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 125),
    _DsSAMGCEvaluationsPerSec_Type()
)
dsSAMGCEvaluationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMGCEvaluationsPerSec.setStatus("current")
_DsSAMGlobalGroupMembEvalPerSec_Type = Gauge32
_DsSAMGlobalGroupMembEvalPerSec_Object = MibTableColumn
dsSAMGlobalGroupMembEvalPerSec = _DsSAMGlobalGroupMembEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 126),
    _DsSAMGlobalGroupMembEvalPerSec_Type()
)
dsSAMGlobalGroupMembEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMGlobalGroupMembEvalPerSec.setStatus("current")
_DsSAMMachineCreationAttpsPerSec_Type = Gauge32
_DsSAMMachineCreationAttpsPerSec_Object = MibTableColumn
dsSAMMachineCreationAttpsPerSec = _DsSAMMachineCreationAttpsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 127),
    _DsSAMMachineCreationAttpsPerSec_Type()
)
dsSAMMachineCreationAttpsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMMachineCreationAttpsPerSec.setStatus("current")
_DsSAMMembershipChangesPerSec_Type = Gauge32
_DsSAMMembershipChangesPerSec_Object = MibTableColumn
dsSAMMembershipChangesPerSec = _DsSAMMembershipChangesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 128),
    _DsSAMMembershipChangesPerSec_Type()
)
dsSAMMembershipChangesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMMembershipChangesPerSec.setStatus("current")
_DsSAMNonTransitiveMembEvalPerSec_Type = Gauge32
_DsSAMNonTransitiveMembEvalPerSec_Object = MibTableColumn
dsSAMNonTransitiveMembEvalPerSec = _DsSAMNonTransitiveMembEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 129),
    _DsSAMNonTransitiveMembEvalPerSec_Type()
)
dsSAMNonTransitiveMembEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMNonTransitiveMembEvalPerSec.setStatus("current")
_DsSAMPasswordChangesPerSec_Type = Gauge32
_DsSAMPasswordChangesPerSec_Object = MibTableColumn
dsSAMPasswordChangesPerSec = _DsSAMPasswordChangesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 130),
    _DsSAMPasswordChangesPerSec_Type()
)
dsSAMPasswordChangesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMPasswordChangesPerSec.setStatus("current")
_DsSAMResourceGroupEvalLatency_Type = Gauge32
_DsSAMResourceGroupEvalLatency_Object = MibTableColumn
dsSAMResourceGroupEvalLatency = _DsSAMResourceGroupEvalLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 131),
    _DsSAMResourceGroupEvalLatency_Type()
)
dsSAMResourceGroupEvalLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMResourceGroupEvalLatency.setStatus("current")
_DsSAMSuccCmpCrtPerSecInclAllRqst_Type = Gauge32
_DsSAMSuccCmpCrtPerSecInclAllRqst_Object = MibTableColumn
dsSAMSuccCmpCrtPerSecInclAllRqst = _DsSAMSuccCmpCrtPerSecInclAllRqst_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 132),
    _DsSAMSuccCmpCrtPerSecInclAllRqst_Type()
)
dsSAMSuccCmpCrtPerSecInclAllRqst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMSuccCmpCrtPerSecInclAllRqst.setStatus("current")
_DsSAMSuccessUserCreationsPerSec_Type = Gauge32
_DsSAMSuccessUserCreationsPerSec_Object = MibTableColumn
dsSAMSuccessUserCreationsPerSec = _DsSAMSuccessUserCreationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 133),
    _DsSAMSuccessUserCreationsPerSec_Type()
)
dsSAMSuccessUserCreationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMSuccessUserCreationsPerSec.setStatus("current")
_DsSAMTransitiveMemberEvalPerSec_Type = Gauge32
_DsSAMTransitiveMemberEvalPerSec_Object = MibTableColumn
dsSAMTransitiveMemberEvalPerSec = _DsSAMTransitiveMemberEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 134),
    _DsSAMTransitiveMemberEvalPerSec_Type()
)
dsSAMTransitiveMemberEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMTransitiveMemberEvalPerSec.setStatus("current")
_DsSAMUniversalGrpMembEvalPerSec_Type = Gauge32
_DsSAMUniversalGrpMembEvalPerSec_Object = MibTableColumn
dsSAMUniversalGrpMembEvalPerSec = _DsSAMUniversalGrpMembEvalPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 135),
    _DsSAMUniversalGrpMembEvalPerSec_Type()
)
dsSAMUniversalGrpMembEvalPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMUniversalGrpMembEvalPerSec.setStatus("current")
_DsSAMUserCreationAttemptsPerSec_Type = Gauge32
_DsSAMUserCreationAttemptsPerSec_Object = MibTableColumn
dsSAMUserCreationAttemptsPerSec = _DsSAMUserCreationAttemptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 136),
    _DsSAMUserCreationAttemptsPerSec_Type()
)
dsSAMUserCreationAttemptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSAMUserCreationAttemptsPerSec.setStatus("current")
_DsSimpleBindsPerSec_Type = Gauge32
_DsSimpleBindsPerSec_Object = MibTableColumn
dsSimpleBindsPerSec = _DsSimpleBindsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 137),
    _DsSimpleBindsPerSec_Type()
)
dsSimpleBindsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSimpleBindsPerSec.setStatus("current")
_DsSubtreeSearchesPerSec_Type = Gauge32
_DsSubtreeSearchesPerSec_Object = MibTableColumn
dsSubtreeSearchesPerSec = _DsSubtreeSearchesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 138),
    _DsSubtreeSearchesPerSec_Type()
)
dsSubtreeSearchesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsSubtreeSearchesPerSec.setStatus("current")
_DsTombstonesGarbageCollPerSec_Type = Gauge32
_DsTombstonesGarbageCollPerSec_Object = MibTableColumn
dsTombstonesGarbageCollPerSec = _DsTombstonesGarbageCollPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 139),
    _DsTombstonesGarbageCollPerSec_Type()
)
dsTombstonesGarbageCollPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsTombstonesGarbageCollPerSec.setStatus("current")
_DsTombstonesVisitedPerSec_Type = Gauge32
_DsTombstonesVisitedPerSec_Object = MibTableColumn
dsTombstonesVisitedPerSec = _DsTombstonesVisitedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 140),
    _DsTombstonesVisitedPerSec_Type()
)
dsTombstonesVisitedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsTombstonesVisitedPerSec.setStatus("current")
_DfsReplicatedFoldersTable_Object = MibTable
dfsReplicatedFoldersTable = _DfsReplicatedFoldersTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125)
)
if mibBuilder.loadTexts:
    dfsReplicatedFoldersTable.setStatus("current")
_DfsReplicatedFoldersEntry_Object = MibTableRow
dfsReplicatedFoldersEntry = _DfsReplicatedFoldersEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1)
)
dfsReplicatedFoldersEntry.setIndexNames(
    (0, "INFORMANT-ADV", "dfsrfInstance"),
)
if mibBuilder.loadTexts:
    dfsReplicatedFoldersEntry.setStatus("current")
_DfsrfInstance_Type = InstanceName
_DfsrfInstance_Object = MibTableColumn
dfsrfInstance = _DfsrfInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 1),
    _DfsrfInstance_Type()
)
dfsrfInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfInstance.setStatus("current")
_DfsrfBandwidthSavings_Type = Gauge32
_DfsrfBandwidthSavings_Object = MibTableColumn
dfsrfBandwidthSavings = _DfsrfBandwidthSavings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 2),
    _DfsrfBandwidthSavings_Type()
)
dfsrfBandwidthSavings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfBandwidthSavings.setStatus("current")
_DfsrfCompressedSizeOfFilesRcvd_Type = Gauge32
_DfsrfCompressedSizeOfFilesRcvd_Object = MibTableColumn
dfsrfCompressedSizeOfFilesRcvd = _DfsrfCompressedSizeOfFilesRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 3),
    _DfsrfCompressedSizeOfFilesRcvd_Type()
)
dfsrfCompressedSizeOfFilesRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfCompressedSizeOfFilesRcvd.setStatus("current")
_DfsrfConflictBytesCleanedUp_Type = Gauge32
_DfsrfConflictBytesCleanedUp_Object = MibTableColumn
dfsrfConflictBytesCleanedUp = _DfsrfConflictBytesCleanedUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 4),
    _DfsrfConflictBytesCleanedUp_Type()
)
dfsrfConflictBytesCleanedUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfConflictBytesCleanedUp.setStatus("current")
_DfsrfConflictBytesGenerated_Type = Gauge32
_DfsrfConflictBytesGenerated_Object = MibTableColumn
dfsrfConflictBytesGenerated = _DfsrfConflictBytesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 5),
    _DfsrfConflictBytesGenerated_Type()
)
dfsrfConflictBytesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfConflictBytesGenerated.setStatus("current")
_DfsrfConflictFilesCleanedUp_Type = Gauge32
_DfsrfConflictFilesCleanedUp_Object = MibTableColumn
dfsrfConflictFilesCleanedUp = _DfsrfConflictFilesCleanedUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 6),
    _DfsrfConflictFilesCleanedUp_Type()
)
dfsrfConflictFilesCleanedUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfConflictFilesCleanedUp.setStatus("current")
_DfsrfConflictFilesGenerated_Type = Gauge32
_DfsrfConflictFilesGenerated_Object = MibTableColumn
dfsrfConflictFilesGenerated = _DfsrfConflictFilesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 7),
    _DfsrfConflictFilesGenerated_Type()
)
dfsrfConflictFilesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfConflictFilesGenerated.setStatus("current")
_DfsrfConflictFolderCleanupsComp_Type = Gauge32
_DfsrfConflictFolderCleanupsComp_Object = MibTableColumn
dfsrfConflictFolderCleanupsComp = _DfsrfConflictFolderCleanupsComp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 8),
    _DfsrfConflictFolderCleanupsComp_Type()
)
dfsrfConflictFolderCleanupsComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfConflictFolderCleanupsComp.setStatus("current")
_DfsrfConflictSpaceInUse_Type = Gauge32
_DfsrfConflictSpaceInUse_Object = MibTableColumn
dfsrfConflictSpaceInUse = _DfsrfConflictSpaceInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 9),
    _DfsrfConflictSpaceInUse_Type()
)
dfsrfConflictSpaceInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfConflictSpaceInUse.setStatus("current")
_DfsrfDeletedBytesCleanedUp_Type = Gauge32
_DfsrfDeletedBytesCleanedUp_Object = MibTableColumn
dfsrfDeletedBytesCleanedUp = _DfsrfDeletedBytesCleanedUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 10),
    _DfsrfDeletedBytesCleanedUp_Type()
)
dfsrfDeletedBytesCleanedUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfDeletedBytesCleanedUp.setStatus("current")
_DfsrfDeletedBytesGenerated_Type = Gauge32
_DfsrfDeletedBytesGenerated_Object = MibTableColumn
dfsrfDeletedBytesGenerated = _DfsrfDeletedBytesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 11),
    _DfsrfDeletedBytesGenerated_Type()
)
dfsrfDeletedBytesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfDeletedBytesGenerated.setStatus("current")
_DfsrfDeletedFilesCleanedUp_Type = Gauge32
_DfsrfDeletedFilesCleanedUp_Object = MibTableColumn
dfsrfDeletedFilesCleanedUp = _DfsrfDeletedFilesCleanedUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 12),
    _DfsrfDeletedFilesCleanedUp_Type()
)
dfsrfDeletedFilesCleanedUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfDeletedFilesCleanedUp.setStatus("current")
_DfsrfDeletedFilesGenerated_Type = Gauge32
_DfsrfDeletedFilesGenerated_Object = MibTableColumn
dfsrfDeletedFilesGenerated = _DfsrfDeletedFilesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 13),
    _DfsrfDeletedFilesGenerated_Type()
)
dfsrfDeletedFilesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfDeletedFilesGenerated.setStatus("current")
_DfsrfDeletedSpaceInUse_Type = Gauge32
_DfsrfDeletedSpaceInUse_Object = MibTableColumn
dfsrfDeletedSpaceInUse = _DfsrfDeletedSpaceInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 14),
    _DfsrfDeletedSpaceInUse_Type()
)
dfsrfDeletedSpaceInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfDeletedSpaceInUse.setStatus("current")
_DfsrfFileInstallsRetried_Type = Gauge32
_DfsrfFileInstallsRetried_Object = MibTableColumn
dfsrfFileInstallsRetried = _DfsrfFileInstallsRetried_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 15),
    _DfsrfFileInstallsRetried_Type()
)
dfsrfFileInstallsRetried.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfFileInstallsRetried.setStatus("current")
_DfsrfFileInstallsSucceeded_Type = Gauge32
_DfsrfFileInstallsSucceeded_Object = MibTableColumn
dfsrfFileInstallsSucceeded = _DfsrfFileInstallsSucceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 16),
    _DfsrfFileInstallsSucceeded_Type()
)
dfsrfFileInstallsSucceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfFileInstallsSucceeded.setStatus("current")
_DfsrfRDCBytesReceived_Type = Gauge32
_DfsrfRDCBytesReceived_Object = MibTableColumn
dfsrfRDCBytesReceived = _DfsrfRDCBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 17),
    _DfsrfRDCBytesReceived_Type()
)
dfsrfRDCBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfRDCBytesReceived.setStatus("current")
_DfsrfRDCCompressSizeOfFilesRcvd_Type = Gauge32
_DfsrfRDCCompressSizeOfFilesRcvd_Object = MibTableColumn
dfsrfRDCCompressSizeOfFilesRcvd = _DfsrfRDCCompressSizeOfFilesRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 18),
    _DfsrfRDCCompressSizeOfFilesRcvd_Type()
)
dfsrfRDCCompressSizeOfFilesRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfRDCCompressSizeOfFilesRcvd.setStatus("current")
_DfsrfRDCNumberOfFilesReceived_Type = Gauge32
_DfsrfRDCNumberOfFilesReceived_Object = MibTableColumn
dfsrfRDCNumberOfFilesReceived = _DfsrfRDCNumberOfFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 19),
    _DfsrfRDCNumberOfFilesReceived_Type()
)
dfsrfRDCNumberOfFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfRDCNumberOfFilesReceived.setStatus("current")
_DfsrfRDCSizeOfFilesReceived_Type = Gauge32
_DfsrfRDCSizeOfFilesReceived_Object = MibTableColumn
dfsrfRDCSizeOfFilesReceived = _DfsrfRDCSizeOfFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 20),
    _DfsrfRDCSizeOfFilesReceived_Type()
)
dfsrfRDCSizeOfFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfRDCSizeOfFilesReceived.setStatus("current")
_DfsrfSizeOfFilesReceived_Type = Gauge32
_DfsrfSizeOfFilesReceived_Object = MibTableColumn
dfsrfSizeOfFilesReceived = _DfsrfSizeOfFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 21),
    _DfsrfSizeOfFilesReceived_Type()
)
dfsrfSizeOfFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfSizeOfFilesReceived.setStatus("current")
_DfsrfStagingBytesCleanedUp_Type = Gauge32
_DfsrfStagingBytesCleanedUp_Object = MibTableColumn
dfsrfStagingBytesCleanedUp = _DfsrfStagingBytesCleanedUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 22),
    _DfsrfStagingBytesCleanedUp_Type()
)
dfsrfStagingBytesCleanedUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfStagingBytesCleanedUp.setStatus("current")
_DfsrfStagingBytesGenerated_Type = Gauge32
_DfsrfStagingBytesGenerated_Object = MibTableColumn
dfsrfStagingBytesGenerated = _DfsrfStagingBytesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 23),
    _DfsrfStagingBytesGenerated_Type()
)
dfsrfStagingBytesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfStagingBytesGenerated.setStatus("current")
_DfsrfStagingFilesCleanedUp_Type = Gauge32
_DfsrfStagingFilesCleanedUp_Object = MibTableColumn
dfsrfStagingFilesCleanedUp = _DfsrfStagingFilesCleanedUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 24),
    _DfsrfStagingFilesCleanedUp_Type()
)
dfsrfStagingFilesCleanedUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfStagingFilesCleanedUp.setStatus("current")
_DfsrfStagingFilesGenerated_Type = Gauge32
_DfsrfStagingFilesGenerated_Object = MibTableColumn
dfsrfStagingFilesGenerated = _DfsrfStagingFilesGenerated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 25),
    _DfsrfStagingFilesGenerated_Type()
)
dfsrfStagingFilesGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfStagingFilesGenerated.setStatus("current")
_DfsrfStagingSpaceInUse_Type = Gauge32
_DfsrfStagingSpaceInUse_Object = MibTableColumn
dfsrfStagingSpaceInUse = _DfsrfStagingSpaceInUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 26),
    _DfsrfStagingSpaceInUse_Type()
)
dfsrfStagingSpaceInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfStagingSpaceInUse.setStatus("current")
_DfsrfTotalFilesReceived_Type = Gauge32
_DfsrfTotalFilesReceived_Object = MibTableColumn
dfsrfTotalFilesReceived = _DfsrfTotalFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 27),
    _DfsrfTotalFilesReceived_Type()
)
dfsrfTotalFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfTotalFilesReceived.setStatus("current")
_DfsrfUpdatesDropped_Type = Gauge32
_DfsrfUpdatesDropped_Object = MibTableColumn
dfsrfUpdatesDropped = _DfsrfUpdatesDropped_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 28),
    _DfsrfUpdatesDropped_Type()
)
dfsrfUpdatesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrfUpdatesDropped.setStatus("current")
_DfsReplicationConnectionsTable_Object = MibTable
dfsReplicationConnectionsTable = _DfsReplicationConnectionsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126)
)
if mibBuilder.loadTexts:
    dfsReplicationConnectionsTable.setStatus("current")
_DfsReplicationConnectionsEntry_Object = MibTableRow
dfsReplicationConnectionsEntry = _DfsReplicationConnectionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1)
)
dfsReplicationConnectionsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "dfsrcInstance"),
)
if mibBuilder.loadTexts:
    dfsReplicationConnectionsEntry.setStatus("current")
_DfsrcInstance_Type = InstanceName
_DfsrcInstance_Object = MibTableColumn
dfsrcInstance = _DfsrcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 1),
    _DfsrcInstance_Type()
)
dfsrcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcInstance.setStatus("current")
_DfsrcBandwidthSavings_Type = Gauge32
_DfsrcBandwidthSavings_Object = MibTableColumn
dfsrcBandwidthSavings = _DfsrcBandwidthSavings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 2),
    _DfsrcBandwidthSavings_Type()
)
dfsrcBandwidthSavings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcBandwidthSavings.setStatus("current")
_DfsrcBytesReceivedPerSecond_Type = Gauge32
_DfsrcBytesReceivedPerSecond_Object = MibTableColumn
dfsrcBytesReceivedPerSecond = _DfsrcBytesReceivedPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 3),
    _DfsrcBytesReceivedPerSecond_Type()
)
dfsrcBytesReceivedPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcBytesReceivedPerSecond.setStatus("current")
_DfsrcCompressedSizeOfFilesRcvd_Type = Gauge32
_DfsrcCompressedSizeOfFilesRcvd_Object = MibTableColumn
dfsrcCompressedSizeOfFilesRcvd = _DfsrcCompressedSizeOfFilesRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 4),
    _DfsrcCompressedSizeOfFilesRcvd_Type()
)
dfsrcCompressedSizeOfFilesRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcCompressedSizeOfFilesRcvd.setStatus("current")
_DfsrcRDCBytesReceived_Type = Gauge32
_DfsrcRDCBytesReceived_Object = MibTableColumn
dfsrcRDCBytesReceived = _DfsrcRDCBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 5),
    _DfsrcRDCBytesReceived_Type()
)
dfsrcRDCBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcRDCBytesReceived.setStatus("current")
_DfsrcRDCCompressSizeOfFilesRcvd_Type = Gauge32
_DfsrcRDCCompressSizeOfFilesRcvd_Object = MibTableColumn
dfsrcRDCCompressSizeOfFilesRcvd = _DfsrcRDCCompressSizeOfFilesRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 6),
    _DfsrcRDCCompressSizeOfFilesRcvd_Type()
)
dfsrcRDCCompressSizeOfFilesRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcRDCCompressSizeOfFilesRcvd.setStatus("current")
_DfsrcRDCNumberOfFilesReceived_Type = Gauge32
_DfsrcRDCNumberOfFilesReceived_Object = MibTableColumn
dfsrcRDCNumberOfFilesReceived = _DfsrcRDCNumberOfFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 7),
    _DfsrcRDCNumberOfFilesReceived_Type()
)
dfsrcRDCNumberOfFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcRDCNumberOfFilesReceived.setStatus("current")
_DfsrcRDCSizeOfFilesReceived_Type = Gauge32
_DfsrcRDCSizeOfFilesReceived_Object = MibTableColumn
dfsrcRDCSizeOfFilesReceived = _DfsrcRDCSizeOfFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 8),
    _DfsrcRDCSizeOfFilesReceived_Type()
)
dfsrcRDCSizeOfFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcRDCSizeOfFilesReceived.setStatus("current")
_DfsrcSizeOfFilesReceived_Type = Gauge32
_DfsrcSizeOfFilesReceived_Object = MibTableColumn
dfsrcSizeOfFilesReceived = _DfsrcSizeOfFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 9),
    _DfsrcSizeOfFilesReceived_Type()
)
dfsrcSizeOfFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcSizeOfFilesReceived.setStatus("current")
_DfsrcTotalBytesReceived_Type = Gauge32
_DfsrcTotalBytesReceived_Object = MibTableColumn
dfsrcTotalBytesReceived = _DfsrcTotalBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 10),
    _DfsrcTotalBytesReceived_Type()
)
dfsrcTotalBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcTotalBytesReceived.setStatus("current")
_DfsrcTotalFilesReceived_Type = Gauge32
_DfsrcTotalFilesReceived_Object = MibTableColumn
dfsrcTotalFilesReceived = _DfsrcTotalFilesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 11),
    _DfsrcTotalFilesReceived_Type()
)
dfsrcTotalFilesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrcTotalFilesReceived.setStatus("current")
_DfsReplicationServiceVolumeTable_Object = MibTable
dfsReplicationServiceVolumeTable = _DfsReplicationServiceVolumeTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127)
)
if mibBuilder.loadTexts:
    dfsReplicationServiceVolumeTable.setStatus("current")
_DfsReplicationServiceVolumeEntry_Object = MibTableRow
dfsReplicationServiceVolumeEntry = _DfsReplicationServiceVolumeEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1)
)
dfsReplicationServiceVolumeEntry.setIndexNames(
    (0, "INFORMANT-ADV", "dfsrsvInstance"),
)
if mibBuilder.loadTexts:
    dfsReplicationServiceVolumeEntry.setStatus("current")
_DfsrsvInstance_Type = InstanceName
_DfsrsvInstance_Object = MibTableColumn
dfsrsvInstance = _DfsrsvInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 1),
    _DfsrsvInstance_Type()
)
dfsrsvInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrsvInstance.setStatus("current")
_DfsrsvDatabaseCommits_Type = Gauge32
_DfsrsvDatabaseCommits_Object = MibTableColumn
dfsrsvDatabaseCommits = _DfsrsvDatabaseCommits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 2),
    _DfsrsvDatabaseCommits_Type()
)
dfsrsvDatabaseCommits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrsvDatabaseCommits.setStatus("current")
_DfsrsvDatabaseLookups_Type = Gauge32
_DfsrsvDatabaseLookups_Object = MibTableColumn
dfsrsvDatabaseLookups = _DfsrsvDatabaseLookups_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 3),
    _DfsrsvDatabaseLookups_Type()
)
dfsrsvDatabaseLookups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrsvDatabaseLookups.setStatus("current")
_DfsrsvUSNJournalRecordsAccepted_Type = Gauge32
_DfsrsvUSNJournalRecordsAccepted_Object = MibTableColumn
dfsrsvUSNJournalRecordsAccepted = _DfsrsvUSNJournalRecordsAccepted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 4),
    _DfsrsvUSNJournalRecordsAccepted_Type()
)
dfsrsvUSNJournalRecordsAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrsvUSNJournalRecordsAccepted.setStatus("current")
_DfsrsvUSNJournalRecordsRead_Type = Gauge32
_DfsrsvUSNJournalRecordsRead_Object = MibTableColumn
dfsrsvUSNJournalRecordsRead = _DfsrsvUSNJournalRecordsRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 5),
    _DfsrsvUSNJournalRecordsRead_Type()
)
dfsrsvUSNJournalRecordsRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrsvUSNJournalRecordsRead.setStatus("current")
_DfsrsvUSNJournalUnreadPercentage_Type = Gauge32
_DfsrsvUSNJournalUnreadPercentage_Object = MibTableColumn
dfsrsvUSNJournalUnreadPercentage = _DfsrsvUSNJournalUnreadPercentage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 6),
    _DfsrsvUSNJournalUnreadPercentage_Type()
)
dfsrsvUSNJournalUnreadPercentage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dfsrsvUSNJournalUnreadPercentage.setStatus("current")
_FaxService_ObjectIdentity = ObjectIdentity
faxService = _FaxService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128)
)
_FaxsBytesReceived_Type = Gauge32
_FaxsBytesReceived_Object = MibScalar
faxsBytesReceived = _FaxsBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 1),
    _FaxsBytesReceived_Type()
)
faxsBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsBytesReceived.setStatus("current")
_FaxsBytesSent_Type = Gauge32
_FaxsBytesSent_Object = MibScalar
faxsBytesSent = _FaxsBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 2),
    _FaxsBytesSent_Type()
)
faxsBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsBytesSent.setStatus("current")
_FaxsFailedFaxesTransmissions_Type = Gauge32
_FaxsFailedFaxesTransmissions_Object = MibScalar
faxsFailedFaxesTransmissions = _FaxsFailedFaxesTransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 3),
    _FaxsFailedFaxesTransmissions_Type()
)
faxsFailedFaxesTransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsFailedFaxesTransmissions.setStatus("current")
_FaxsFailedOutgoingConnections_Type = Gauge32
_FaxsFailedOutgoingConnections_Object = MibScalar
faxsFailedOutgoingConnections = _FaxsFailedOutgoingConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 4),
    _FaxsFailedOutgoingConnections_Type()
)
faxsFailedOutgoingConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsFailedOutgoingConnections.setStatus("current")
_FaxsFailedReceptions_Type = Gauge32
_FaxsFailedReceptions_Object = MibScalar
faxsFailedReceptions = _FaxsFailedReceptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 5),
    _FaxsFailedReceptions_Type()
)
faxsFailedReceptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsFailedReceptions.setStatus("current")
_FaxsFaxesSent_Type = Gauge32
_FaxsFaxesSent_Object = MibScalar
faxsFaxesSent = _FaxsFaxesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 6),
    _FaxsFaxesSent_Type()
)
faxsFaxesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsFaxesSent.setStatus("current")
_FaxsMinutesReceiving_Type = Gauge32
_FaxsMinutesReceiving_Object = MibScalar
faxsMinutesReceiving = _FaxsMinutesReceiving_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 7),
    _FaxsMinutesReceiving_Type()
)
faxsMinutesReceiving.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsMinutesReceiving.setStatus("current")
_FaxsMinutesSending_Type = Gauge32
_FaxsMinutesSending_Object = MibScalar
faxsMinutesSending = _FaxsMinutesSending_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 8),
    _FaxsMinutesSending_Type()
)
faxsMinutesSending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsMinutesSending.setStatus("current")
_FaxsPagesSent_Type = Gauge32
_FaxsPagesSent_Object = MibScalar
faxsPagesSent = _FaxsPagesSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 9),
    _FaxsPagesSent_Type()
)
faxsPagesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsPagesSent.setStatus("current")
_FaxsReceivedFaxes_Type = Gauge32
_FaxsReceivedFaxes_Object = MibScalar
faxsReceivedFaxes = _FaxsReceivedFaxes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 10),
    _FaxsReceivedFaxes_Type()
)
faxsReceivedFaxes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsReceivedFaxes.setStatus("current")
_FaxsReceivedPages_Type = Gauge32
_FaxsReceivedPages_Object = MibScalar
faxsReceivedPages = _FaxsReceivedPages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 11),
    _FaxsReceivedPages_Type()
)
faxsReceivedPages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsReceivedPages.setStatus("current")
_FaxsTotalBytes_Type = Gauge32
_FaxsTotalBytes_Object = MibScalar
faxsTotalBytes = _FaxsTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 12),
    _FaxsTotalBytes_Type()
)
faxsTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsTotalBytes.setStatus("current")
_FaxsTotalFaxesSentAndReceived_Type = Gauge32
_FaxsTotalFaxesSentAndReceived_Object = MibScalar
faxsTotalFaxesSentAndReceived = _FaxsTotalFaxesSentAndReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 13),
    _FaxsTotalFaxesSentAndReceived_Type()
)
faxsTotalFaxesSentAndReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsTotalFaxesSentAndReceived.setStatus("current")
_FaxsTotalMinutesSendAndReceive_Type = Gauge32
_FaxsTotalMinutesSendAndReceive_Object = MibScalar
faxsTotalMinutesSendAndReceive = _FaxsTotalMinutesSendAndReceive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 14),
    _FaxsTotalMinutesSendAndReceive_Type()
)
faxsTotalMinutesSendAndReceive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsTotalMinutesSendAndReceive.setStatus("current")
_FaxsTotalPages_Type = Gauge32
_FaxsTotalPages_Object = MibScalar
faxsTotalPages = _FaxsTotalPages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 15),
    _FaxsTotalPages_Type()
)
faxsTotalPages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    faxsTotalPages.setStatus("current")
_HcapCounters_ObjectIdentity = ObjectIdentity
hcapCounters = _HcapCounters_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129)
)
_HcapcAverageNPSValidationTime_Type = Gauge32
_HcapcAverageNPSValidationTime_Object = MibScalar
hcapcAverageNPSValidationTime = _HcapcAverageNPSValidationTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 1),
    _HcapcAverageNPSValidationTime_Type()
)
hcapcAverageNPSValidationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcAverageNPSValidationTime.setStatus("current")
_HcapcLastNPSValidationTime_Type = Gauge32
_HcapcLastNPSValidationTime_Object = MibScalar
hcapcLastNPSValidationTime = _HcapcLastNPSValidationTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 2),
    _HcapcLastNPSValidationTime_Type()
)
hcapcLastNPSValidationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcLastNPSValidationTime.setStatus("current")
_HcapcPostureValidFailureResponse_Type = Gauge32
_HcapcPostureValidFailureResponse_Object = MibScalar
hcapcPostureValidFailureResponse = _HcapcPostureValidFailureResponse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 3),
    _HcapcPostureValidFailureResponse_Type()
)
hcapcPostureValidFailureResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcPostureValidFailureResponse.setStatus("current")
_HcapcPostureValidationRequests_Type = Gauge32
_HcapcPostureValidationRequests_Object = MibScalar
hcapcPostureValidationRequests = _HcapcPostureValidationRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 4),
    _HcapcPostureValidationRequests_Type()
)
hcapcPostureValidationRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcPostureValidationRequests.setStatus("current")
_HcapcPostureValidSuccessResponse_Type = Gauge32
_HcapcPostureValidSuccessResponse_Object = MibScalar
hcapcPostureValidSuccessResponse = _HcapcPostureValidSuccessResponse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 5),
    _HcapcPostureValidSuccessResponse_Type()
)
hcapcPostureValidSuccessResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcPostureValidSuccessResponse.setStatus("current")
_HcapcVersionNegotiationRequests_Type = Gauge32
_HcapcVersionNegotiationRequests_Object = MibScalar
hcapcVersionNegotiationRequests = _HcapcVersionNegotiationRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 6),
    _HcapcVersionNegotiationRequests_Type()
)
hcapcVersionNegotiationRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcVersionNegotiationRequests.setStatus("current")
_HcapcVersionNegotiationResponses_Type = Gauge32
_HcapcVersionNegotiationResponses_Object = MibScalar
hcapcVersionNegotiationResponses = _HcapcVersionNegotiationResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 7),
    _HcapcVersionNegotiationResponses_Type()
)
hcapcVersionNegotiationResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcapcVersionNegotiationResponses.setStatus("current")
_HraStatistics_ObjectIdentity = ObjectIdentity
hraStatistics = _HraStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130)
)
if mibBuilder.loadTexts:
    hraStatistics.setStatus("current")
_HrasCertificationTimeMs_Type = Gauge32
_HrasCertificationTimeMs_Object = MibScalar
hrasCertificationTimeMs = _HrasCertificationTimeMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 1),
    _HrasCertificationTimeMs_Type()
)
hrasCertificationTimeMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasCertificationTimeMs.setStatus("current")
_HrasHCEPFailedRequests_Type = Gauge32
_HrasHCEPFailedRequests_Object = MibScalar
hrasHCEPFailedRequests = _HrasHCEPFailedRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 2),
    _HrasHCEPFailedRequests_Type()
)
hrasHCEPFailedRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasHCEPFailedRequests.setStatus("current")
_HrasHCEPRequests_Type = Gauge32
_HrasHCEPRequests_Object = MibScalar
hrasHCEPRequests = _HrasHCEPRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 3),
    _HrasHCEPRequests_Type()
)
hrasHCEPRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasHCEPRequests.setStatus("current")
_HrasHCEPSuccessfulRequests_Type = Gauge32
_HrasHCEPSuccessfulRequests_Object = MibScalar
hrasHCEPSuccessfulRequests = _HrasHCEPSuccessfulRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 4),
    _HrasHCEPSuccessfulRequests_Type()
)
hrasHCEPSuccessfulRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasHCEPSuccessfulRequests.setStatus("current")
_HrasNPSValidationTimeMs_Type = Gauge32
_HrasNPSValidationTimeMs_Object = MibScalar
hrasNPSValidationTimeMs = _HrasNPSValidationTimeMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 5),
    _HrasNPSValidationTimeMs_Type()
)
hrasNPSValidationTimeMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasNPSValidationTimeMs.setStatus("current")
_HrasNPSSuccessfulRequests_Type = Gauge32
_HrasNPSSuccessfulRequests_Object = MibScalar
hrasNPSSuccessfulRequests = _HrasNPSSuccessfulRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 6),
    _HrasNPSSuccessfulRequests_Type()
)
hrasNPSSuccessfulRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasNPSSuccessfulRequests.setStatus("current")
_HrasSuccessCertificationRequests_Type = Gauge32
_HrasSuccessCertificationRequests_Object = MibScalar
hrasSuccessCertificationRequests = _HrasSuccessCertificationRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 7),
    _HrasSuccessCertificationRequests_Type()
)
hrasSuccessCertificationRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasSuccessCertificationRequests.setStatus("current")
_HrasSumOfTimePerRequestMs_Type = Gauge32
_HrasSumOfTimePerRequestMs_Object = MibScalar
hrasSumOfTimePerRequestMs = _HrasSumOfTimePerRequestMs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 8),
    _HrasSumOfTimePerRequestMs_Type()
)
hrasSumOfTimePerRequestMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hrasSumOfTimePerRequestMs.setStatus("current")
_IpSecAuthIPv4_ObjectIdentity = ObjectIdentity
ipSecAuthIPv4 = _IpSecAuthIPv4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131)
)
_Ipsa4ActiveExtendedModeSAs_Type = Gauge32
_Ipsa4ActiveExtendedModeSAs_Object = MibScalar
ipsa4ActiveExtendedModeSAs = _Ipsa4ActiveExtendedModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 1),
    _Ipsa4ActiveExtendedModeSAs_Type()
)
ipsa4ActiveExtendedModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4ActiveExtendedModeSAs.setStatus("current")
_Ipsa4ActiveMainModeSAs_Type = Gauge32
_Ipsa4ActiveMainModeSAs_Object = MibScalar
ipsa4ActiveMainModeSAs = _Ipsa4ActiveMainModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 2),
    _Ipsa4ActiveMainModeSAs_Type()
)
ipsa4ActiveMainModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4ActiveMainModeSAs.setStatus("current")
_Ipsa4ActiveQuickModeSAs_Type = Gauge32
_Ipsa4ActiveQuickModeSAs_Object = MibScalar
ipsa4ActiveQuickModeSAs = _Ipsa4ActiveQuickModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 3),
    _Ipsa4ActiveQuickModeSAs_Type()
)
ipsa4ActiveQuickModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4ActiveQuickModeSAs.setStatus("current")
_Ipsa4ExtendedModeNegotiations_Type = Gauge32
_Ipsa4ExtendedModeNegotiations_Object = MibScalar
ipsa4ExtendedModeNegotiations = _Ipsa4ExtendedModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 4),
    _Ipsa4ExtendedModeNegotiations_Type()
)
ipsa4ExtendedModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4ExtendedModeNegotiations.setStatus("current")
_Ipsa4ExtendModeNegotiationPerSec_Type = Gauge32
_Ipsa4ExtendModeNegotiationPerSec_Object = MibScalar
ipsa4ExtendModeNegotiationPerSec = _Ipsa4ExtendModeNegotiationPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 5),
    _Ipsa4ExtendModeNegotiationPerSec_Type()
)
ipsa4ExtendModeNegotiationPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4ExtendModeNegotiationPerSec.setStatus("current")
_Ipsa4ExtModeSAsThatUsedImperson_Type = Gauge32
_Ipsa4ExtModeSAsThatUsedImperson_Object = MibScalar
ipsa4ExtModeSAsThatUsedImperson = _Ipsa4ExtModeSAsThatUsedImperson_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 6),
    _Ipsa4ExtModeSAsThatUsedImperson_Type()
)
ipsa4ExtModeSAsThatUsedImperson.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4ExtModeSAsThatUsedImperson.setStatus("current")
_Ipsa4FailExtendedModeNegotiation_Type = Gauge32
_Ipsa4FailExtendedModeNegotiation_Object = MibScalar
ipsa4FailExtendedModeNegotiation = _Ipsa4FailExtendedModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 7),
    _Ipsa4FailExtendedModeNegotiation_Type()
)
ipsa4FailExtendedModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4FailExtendedModeNegotiation.setStatus("current")
_Ipsa4FailExtendModeNegotPerSec_Type = Gauge32
_Ipsa4FailExtendModeNegotPerSec_Object = MibScalar
ipsa4FailExtendModeNegotPerSec = _Ipsa4FailExtendModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 8),
    _Ipsa4FailExtendModeNegotPerSec_Type()
)
ipsa4FailExtendModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4FailExtendModeNegotPerSec.setStatus("current")
_Ipsa4FailedMainModeNegotiations_Type = Gauge32
_Ipsa4FailedMainModeNegotiations_Object = MibScalar
ipsa4FailedMainModeNegotiations = _Ipsa4FailedMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 9),
    _Ipsa4FailedMainModeNegotiations_Type()
)
ipsa4FailedMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4FailedMainModeNegotiations.setStatus("current")
_Ipsa4FailedMainModeNegPerSec_Type = Gauge32
_Ipsa4FailedMainModeNegPerSec_Object = MibScalar
ipsa4FailedMainModeNegPerSec = _Ipsa4FailedMainModeNegPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 10),
    _Ipsa4FailedMainModeNegPerSec_Type()
)
ipsa4FailedMainModeNegPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4FailedMainModeNegPerSec.setStatus("current")
_Ipsa4FailedQuickModeNegotiations_Type = Gauge32
_Ipsa4FailedQuickModeNegotiations_Object = MibScalar
ipsa4FailedQuickModeNegotiations = _Ipsa4FailedQuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 11),
    _Ipsa4FailedQuickModeNegotiations_Type()
)
ipsa4FailedQuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4FailedQuickModeNegotiations.setStatus("current")
_Ipsa4FailQuickModeNegPerSec_Type = Gauge32
_Ipsa4FailQuickModeNegPerSec_Object = MibScalar
ipsa4FailQuickModeNegPerSec = _Ipsa4FailQuickModeNegPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 12),
    _Ipsa4FailQuickModeNegPerSec_Type()
)
ipsa4FailQuickModeNegPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4FailQuickModeNegPerSec.setStatus("current")
_Ipsa4MainModeNegRqstReceived_Type = Gauge32
_Ipsa4MainModeNegRqstReceived_Object = MibScalar
ipsa4MainModeNegRqstReceived = _Ipsa4MainModeNegRqstReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 13),
    _Ipsa4MainModeNegRqstReceived_Type()
)
ipsa4MainModeNegRqstReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4MainModeNegRqstReceived.setStatus("current")
_Ipsa4MainModeNegRequestRcvPerSec_Type = Gauge32
_Ipsa4MainModeNegRequestRcvPerSec_Object = MibScalar
ipsa4MainModeNegRequestRcvPerSec = _Ipsa4MainModeNegRequestRcvPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 14),
    _Ipsa4MainModeNegRequestRcvPerSec_Type()
)
ipsa4MainModeNegRequestRcvPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4MainModeNegRequestRcvPerSec.setStatus("current")
_Ipsa4MainModeNegotiations_Type = Gauge32
_Ipsa4MainModeNegotiations_Object = MibScalar
ipsa4MainModeNegotiations = _Ipsa4MainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 15),
    _Ipsa4MainModeNegotiations_Type()
)
ipsa4MainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4MainModeNegotiations.setStatus("current")
_Ipsa4MainModeNegotiationsPerSec_Type = Gauge32
_Ipsa4MainModeNegotiationsPerSec_Object = MibScalar
ipsa4MainModeNegotiationsPerSec = _Ipsa4MainModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 16),
    _Ipsa4MainModeNegotiationsPerSec_Type()
)
ipsa4MainModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4MainModeNegotiationsPerSec.setStatus("current")
_Ipsa4MainModeSAsUseImpersonation_Type = Gauge32
_Ipsa4MainModeSAsUseImpersonation_Object = MibScalar
ipsa4MainModeSAsUseImpersonation = _Ipsa4MainModeSAsUseImpersonation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 17),
    _Ipsa4MainModeSAsUseImpersonation_Type()
)
ipsa4MainModeSAsUseImpersonation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4MainModeSAsUseImpersonation.setStatus("current")
_Ipsa4MainModeSAUseImpersonPerSec_Type = Gauge32
_Ipsa4MainModeSAUseImpersonPerSec_Object = MibScalar
ipsa4MainModeSAUseImpersonPerSec = _Ipsa4MainModeSAUseImpersonPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 18),
    _Ipsa4MainModeSAUseImpersonPerSec_Type()
)
ipsa4MainModeSAUseImpersonPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4MainModeSAUseImpersonPerSec.setStatus("current")
_Ipsa4PendExtendModeNegotiations_Type = Gauge32
_Ipsa4PendExtendModeNegotiations_Object = MibScalar
ipsa4PendExtendModeNegotiations = _Ipsa4PendExtendModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 19),
    _Ipsa4PendExtendModeNegotiations_Type()
)
ipsa4PendExtendModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4PendExtendModeNegotiations.setStatus("current")
_Ipsa4PendingMainModeNegotiations_Type = Gauge32
_Ipsa4PendingMainModeNegotiations_Object = MibScalar
ipsa4PendingMainModeNegotiations = _Ipsa4PendingMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 20),
    _Ipsa4PendingMainModeNegotiations_Type()
)
ipsa4PendingMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4PendingMainModeNegotiations.setStatus("current")
_Ipsa4PendingQuickModeNegotiation_Type = Gauge32
_Ipsa4PendingQuickModeNegotiation_Object = MibScalar
ipsa4PendingQuickModeNegotiation = _Ipsa4PendingQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 21),
    _Ipsa4PendingQuickModeNegotiation_Type()
)
ipsa4PendingQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4PendingQuickModeNegotiation.setStatus("current")
_Ipsa4QuickModeNegotiations_Type = Gauge32
_Ipsa4QuickModeNegotiations_Object = MibScalar
ipsa4QuickModeNegotiations = _Ipsa4QuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 22),
    _Ipsa4QuickModeNegotiations_Type()
)
ipsa4QuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4QuickModeNegotiations.setStatus("current")
_Ipsa4QuickModeNegotiationsPerSec_Type = Gauge32
_Ipsa4QuickModeNegotiationsPerSec_Object = MibScalar
ipsa4QuickModeNegotiationsPerSec = _Ipsa4QuickModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 23),
    _Ipsa4QuickModeNegotiationsPerSec_Type()
)
ipsa4QuickModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4QuickModeNegotiationsPerSec.setStatus("current")
_Ipsa4SuccExtendedModeNegotiation_Type = Gauge32
_Ipsa4SuccExtendedModeNegotiation_Object = MibScalar
ipsa4SuccExtendedModeNegotiation = _Ipsa4SuccExtendedModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 24),
    _Ipsa4SuccExtendedModeNegotiation_Type()
)
ipsa4SuccExtendedModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4SuccExtendedModeNegotiation.setStatus("current")
_Ipsa4SuccExtendModeNegotPerSec_Type = Gauge32
_Ipsa4SuccExtendModeNegotPerSec_Object = MibScalar
ipsa4SuccExtendModeNegotPerSec = _Ipsa4SuccExtendModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 25),
    _Ipsa4SuccExtendModeNegotPerSec_Type()
)
ipsa4SuccExtendModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4SuccExtendModeNegotPerSec.setStatus("current")
_Ipsa4SuccessMainModeNegotiations_Type = Gauge32
_Ipsa4SuccessMainModeNegotiations_Object = MibScalar
ipsa4SuccessMainModeNegotiations = _Ipsa4SuccessMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 26),
    _Ipsa4SuccessMainModeNegotiations_Type()
)
ipsa4SuccessMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4SuccessMainModeNegotiations.setStatus("current")
_Ipsa4SuccessMainModeNegotPerSec_Type = Gauge32
_Ipsa4SuccessMainModeNegotPerSec_Object = MibScalar
ipsa4SuccessMainModeNegotPerSec = _Ipsa4SuccessMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 27),
    _Ipsa4SuccessMainModeNegotPerSec_Type()
)
ipsa4SuccessMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4SuccessMainModeNegotPerSec.setStatus("current")
_Ipsa4SuccessQuickModeNegotiation_Type = Gauge32
_Ipsa4SuccessQuickModeNegotiation_Object = MibScalar
ipsa4SuccessQuickModeNegotiation = _Ipsa4SuccessQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 28),
    _Ipsa4SuccessQuickModeNegotiation_Type()
)
ipsa4SuccessQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4SuccessQuickModeNegotiation.setStatus("current")
_Ipsa4SuccessQuickModeNegotPerSec_Type = Gauge32
_Ipsa4SuccessQuickModeNegotPerSec_Object = MibScalar
ipsa4SuccessQuickModeNegotPerSec = _Ipsa4SuccessQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 29),
    _Ipsa4SuccessQuickModeNegotPerSec_Type()
)
ipsa4SuccessQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa4SuccessQuickModeNegotPerSec.setStatus("current")
_IpSecAuthIPv6_ObjectIdentity = ObjectIdentity
ipSecAuthIPv6 = _IpSecAuthIPv6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132)
)
_Ipsa6ActiveExtendedModeSAs_Type = Gauge32
_Ipsa6ActiveExtendedModeSAs_Object = MibScalar
ipsa6ActiveExtendedModeSAs = _Ipsa6ActiveExtendedModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 1),
    _Ipsa6ActiveExtendedModeSAs_Type()
)
ipsa6ActiveExtendedModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6ActiveExtendedModeSAs.setStatus("current")
_Ipsa6ActiveMainModeSAs_Type = Gauge32
_Ipsa6ActiveMainModeSAs_Object = MibScalar
ipsa6ActiveMainModeSAs = _Ipsa6ActiveMainModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 2),
    _Ipsa6ActiveMainModeSAs_Type()
)
ipsa6ActiveMainModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6ActiveMainModeSAs.setStatus("current")
_Ipsa6ActiveQuickModeSAs_Type = Gauge32
_Ipsa6ActiveQuickModeSAs_Object = MibScalar
ipsa6ActiveQuickModeSAs = _Ipsa6ActiveQuickModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 3),
    _Ipsa6ActiveQuickModeSAs_Type()
)
ipsa6ActiveQuickModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6ActiveQuickModeSAs.setStatus("current")
_Ipsa6ExtendedModeNegotiations_Type = Gauge32
_Ipsa6ExtendedModeNegotiations_Object = MibScalar
ipsa6ExtendedModeNegotiations = _Ipsa6ExtendedModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 4),
    _Ipsa6ExtendedModeNegotiations_Type()
)
ipsa6ExtendedModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6ExtendedModeNegotiations.setStatus("current")
_Ipsa6ExtendModeNegotiationPerSec_Type = Gauge32
_Ipsa6ExtendModeNegotiationPerSec_Object = MibScalar
ipsa6ExtendModeNegotiationPerSec = _Ipsa6ExtendModeNegotiationPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 5),
    _Ipsa6ExtendModeNegotiationPerSec_Type()
)
ipsa6ExtendModeNegotiationPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6ExtendModeNegotiationPerSec.setStatus("current")
_Ipsa6ExtendedModeSAsUsedImperson_Type = Gauge32
_Ipsa6ExtendedModeSAsUsedImperson_Object = MibScalar
ipsa6ExtendedModeSAsUsedImperson = _Ipsa6ExtendedModeSAsUsedImperson_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 6),
    _Ipsa6ExtendedModeSAsUsedImperson_Type()
)
ipsa6ExtendedModeSAsUsedImperson.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6ExtendedModeSAsUsedImperson.setStatus("current")
_Ipsa6FailExtendModeNegotiations_Type = Gauge32
_Ipsa6FailExtendModeNegotiations_Object = MibScalar
ipsa6FailExtendModeNegotiations = _Ipsa6FailExtendModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 7),
    _Ipsa6FailExtendModeNegotiations_Type()
)
ipsa6FailExtendModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6FailExtendModeNegotiations.setStatus("current")
_Ipsa6FailedExtendModeNegotPerSec_Type = Gauge32
_Ipsa6FailedExtendModeNegotPerSec_Object = MibScalar
ipsa6FailedExtendModeNegotPerSec = _Ipsa6FailedExtendModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 8),
    _Ipsa6FailedExtendModeNegotPerSec_Type()
)
ipsa6FailedExtendModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6FailedExtendModeNegotPerSec.setStatus("current")
_Ipsa6FailedMainModeNegotiations_Type = Gauge32
_Ipsa6FailedMainModeNegotiations_Object = MibScalar
ipsa6FailedMainModeNegotiations = _Ipsa6FailedMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 9),
    _Ipsa6FailedMainModeNegotiations_Type()
)
ipsa6FailedMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6FailedMainModeNegotiations.setStatus("current")
_Ipsa6FailMainModeNegotPerSec_Type = Gauge32
_Ipsa6FailMainModeNegotPerSec_Object = MibScalar
ipsa6FailMainModeNegotPerSec = _Ipsa6FailMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 10),
    _Ipsa6FailMainModeNegotPerSec_Type()
)
ipsa6FailMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6FailMainModeNegotPerSec.setStatus("current")
_Ipsa6FailedQuickModeNegotiations_Type = Gauge32
_Ipsa6FailedQuickModeNegotiations_Object = MibScalar
ipsa6FailedQuickModeNegotiations = _Ipsa6FailedQuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 11),
    _Ipsa6FailedQuickModeNegotiations_Type()
)
ipsa6FailedQuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6FailedQuickModeNegotiations.setStatus("current")
_Ipsa6FailQuickModeNegotPerSec_Type = Gauge32
_Ipsa6FailQuickModeNegotPerSec_Object = MibScalar
ipsa6FailQuickModeNegotPerSec = _Ipsa6FailQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 12),
    _Ipsa6FailQuickModeNegotPerSec_Type()
)
ipsa6FailQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6FailQuickModeNegotPerSec.setStatus("current")
_Ipsa6MainModeNegotiationRqstRcvd_Type = Gauge32
_Ipsa6MainModeNegotiationRqstRcvd_Object = MibScalar
ipsa6MainModeNegotiationRqstRcvd = _Ipsa6MainModeNegotiationRqstRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 13),
    _Ipsa6MainModeNegotiationRqstRcvd_Type()
)
ipsa6MainModeNegotiationRqstRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6MainModeNegotiationRqstRcvd.setStatus("current")
_Ipsa6MainModeNegotRqstRcvdPerSec_Type = Gauge32
_Ipsa6MainModeNegotRqstRcvdPerSec_Object = MibScalar
ipsa6MainModeNegotRqstRcvdPerSec = _Ipsa6MainModeNegotRqstRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 14),
    _Ipsa6MainModeNegotRqstRcvdPerSec_Type()
)
ipsa6MainModeNegotRqstRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6MainModeNegotRqstRcvdPerSec.setStatus("current")
_Ipsa6MainModeNegotiations_Type = Gauge32
_Ipsa6MainModeNegotiations_Object = MibScalar
ipsa6MainModeNegotiations = _Ipsa6MainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 15),
    _Ipsa6MainModeNegotiations_Type()
)
ipsa6MainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6MainModeNegotiations.setStatus("current")
_Ipsa6MainModeNegotiationsPerSec_Type = Gauge32
_Ipsa6MainModeNegotiationsPerSec_Object = MibScalar
ipsa6MainModeNegotiationsPerSec = _Ipsa6MainModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 16),
    _Ipsa6MainModeNegotiationsPerSec_Type()
)
ipsa6MainModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6MainModeNegotiationsPerSec.setStatus("current")
_Ipsa6MainModeSAsUseImpersonation_Type = Gauge32
_Ipsa6MainModeSAsUseImpersonation_Object = MibScalar
ipsa6MainModeSAsUseImpersonation = _Ipsa6MainModeSAsUseImpersonation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 17),
    _Ipsa6MainModeSAsUseImpersonation_Type()
)
ipsa6MainModeSAsUseImpersonation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6MainModeSAsUseImpersonation.setStatus("current")
_Ipsa6MainModeSAUseImpersonPerSec_Type = Gauge32
_Ipsa6MainModeSAUseImpersonPerSec_Object = MibScalar
ipsa6MainModeSAUseImpersonPerSec = _Ipsa6MainModeSAUseImpersonPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 18),
    _Ipsa6MainModeSAUseImpersonPerSec_Type()
)
ipsa6MainModeSAUseImpersonPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6MainModeSAUseImpersonPerSec.setStatus("current")
_Ipsa6PendExtendModeNegotiations_Type = Gauge32
_Ipsa6PendExtendModeNegotiations_Object = MibScalar
ipsa6PendExtendModeNegotiations = _Ipsa6PendExtendModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 19),
    _Ipsa6PendExtendModeNegotiations_Type()
)
ipsa6PendExtendModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6PendExtendModeNegotiations.setStatus("current")
_Ipsa6PendingMainModeNegotiations_Type = Gauge32
_Ipsa6PendingMainModeNegotiations_Object = MibScalar
ipsa6PendingMainModeNegotiations = _Ipsa6PendingMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 20),
    _Ipsa6PendingMainModeNegotiations_Type()
)
ipsa6PendingMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6PendingMainModeNegotiations.setStatus("current")
_Ipsa6PendingQuickModeNegotiation_Type = Gauge32
_Ipsa6PendingQuickModeNegotiation_Object = MibScalar
ipsa6PendingQuickModeNegotiation = _Ipsa6PendingQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 21),
    _Ipsa6PendingQuickModeNegotiation_Type()
)
ipsa6PendingQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6PendingQuickModeNegotiation.setStatus("current")
_Ipsa6QuickModeNegotiations_Type = Gauge32
_Ipsa6QuickModeNegotiations_Object = MibScalar
ipsa6QuickModeNegotiations = _Ipsa6QuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 22),
    _Ipsa6QuickModeNegotiations_Type()
)
ipsa6QuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6QuickModeNegotiations.setStatus("current")
_Ipsa6QuickModeNegotiationsPerSec_Type = Gauge32
_Ipsa6QuickModeNegotiationsPerSec_Object = MibScalar
ipsa6QuickModeNegotiationsPerSec = _Ipsa6QuickModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 23),
    _Ipsa6QuickModeNegotiationsPerSec_Type()
)
ipsa6QuickModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6QuickModeNegotiationsPerSec.setStatus("current")
_Ipsa6SuccExtendedModeNegotiation_Type = Gauge32
_Ipsa6SuccExtendedModeNegotiation_Object = MibScalar
ipsa6SuccExtendedModeNegotiation = _Ipsa6SuccExtendedModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 24),
    _Ipsa6SuccExtendedModeNegotiation_Type()
)
ipsa6SuccExtendedModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6SuccExtendedModeNegotiation.setStatus("current")
_Ipsa6SuccExtendModeNegotPerSec_Type = Gauge32
_Ipsa6SuccExtendModeNegotPerSec_Object = MibScalar
ipsa6SuccExtendModeNegotPerSec = _Ipsa6SuccExtendModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 25),
    _Ipsa6SuccExtendModeNegotPerSec_Type()
)
ipsa6SuccExtendModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6SuccExtendModeNegotPerSec.setStatus("current")
_Ipsa6SuccessMainModeNegotiations_Type = Gauge32
_Ipsa6SuccessMainModeNegotiations_Object = MibScalar
ipsa6SuccessMainModeNegotiations = _Ipsa6SuccessMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 26),
    _Ipsa6SuccessMainModeNegotiations_Type()
)
ipsa6SuccessMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6SuccessMainModeNegotiations.setStatus("current")
_Ipsa6SuccessMainModeNegotPerSec_Type = Gauge32
_Ipsa6SuccessMainModeNegotPerSec_Object = MibScalar
ipsa6SuccessMainModeNegotPerSec = _Ipsa6SuccessMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 27),
    _Ipsa6SuccessMainModeNegotPerSec_Type()
)
ipsa6SuccessMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6SuccessMainModeNegotPerSec.setStatus("current")
_Ipsa6SuccessQuickModeNegotiation_Type = Gauge32
_Ipsa6SuccessQuickModeNegotiation_Object = MibScalar
ipsa6SuccessQuickModeNegotiation = _Ipsa6SuccessQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 28),
    _Ipsa6SuccessQuickModeNegotiation_Type()
)
ipsa6SuccessQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6SuccessQuickModeNegotiation.setStatus("current")
_Ipsa6SuccessQuickModeNegotPerSec_Type = Gauge32
_Ipsa6SuccessQuickModeNegotPerSec_Object = MibScalar
ipsa6SuccessQuickModeNegotPerSec = _Ipsa6SuccessQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 29),
    _Ipsa6SuccessQuickModeNegotPerSec_Type()
)
ipsa6SuccessQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsa6SuccessQuickModeNegotPerSec.setStatus("current")
_IpSecDriver_ObjectIdentity = ObjectIdentity
ipSecDriver = _IpSecDriver_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133)
)
_IpsdActiveSecurityAssociations_Type = Gauge32
_IpsdActiveSecurityAssociations_Object = MibScalar
ipsdActiveSecurityAssociations = _IpsdActiveSecurityAssociations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 1),
    _IpsdActiveSecurityAssociations_Type()
)
ipsdActiveSecurityAssociations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdActiveSecurityAssociations.setStatus("current")
_IpsdByteRcvInTransportModePerSec_Type = Gauge32
_IpsdByteRcvInTransportModePerSec_Object = MibScalar
ipsdByteRcvInTransportModePerSec = _IpsdByteRcvInTransportModePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 2),
    _IpsdByteRcvInTransportModePerSec_Type()
)
ipsdByteRcvInTransportModePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdByteRcvInTransportModePerSec.setStatus("current")
_IpsdBytesRcvdInTunnelModePerSec_Type = Gauge32
_IpsdBytesRcvdInTunnelModePerSec_Object = MibScalar
ipsdBytesRcvdInTunnelModePerSec = _IpsdBytesRcvdInTunnelModePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 3),
    _IpsdBytesRcvdInTunnelModePerSec_Type()
)
ipsdBytesRcvdInTunnelModePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdBytesRcvdInTunnelModePerSec.setStatus("current")
_IpsdByteSntInTransportModePerSec_Type = Gauge32
_IpsdByteSntInTransportModePerSec_Object = MibScalar
ipsdByteSntInTransportModePerSec = _IpsdByteSntInTransportModePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 4),
    _IpsdByteSntInTransportModePerSec_Type()
)
ipsdByteSntInTransportModePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdByteSntInTransportModePerSec.setStatus("current")
_IpsdBytesSentInTunnelModePerSec_Type = Gauge32
_IpsdBytesSentInTunnelModePerSec_Object = MibScalar
ipsdBytesSentInTunnelModePerSec = _IpsdBytesSentInTunnelModePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 5),
    _IpsdBytesSentInTunnelModePerSec_Type()
)
ipsdBytesSentInTunnelModePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdBytesSentInTunnelModePerSec.setStatus("current")
_IpsdIncorrectSPIPackets_Type = Gauge32
_IpsdIncorrectSPIPackets_Object = MibScalar
ipsdIncorrectSPIPackets = _IpsdIncorrectSPIPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 6),
    _IpsdIncorrectSPIPackets_Type()
)
ipsdIncorrectSPIPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdIncorrectSPIPackets.setStatus("current")
_IpsdOffloadedBytesReceivedPerSec_Type = Gauge32
_IpsdOffloadedBytesReceivedPerSec_Object = MibScalar
ipsdOffloadedBytesReceivedPerSec = _IpsdOffloadedBytesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 7),
    _IpsdOffloadedBytesReceivedPerSec_Type()
)
ipsdOffloadedBytesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdOffloadedBytesReceivedPerSec.setStatus("current")
_IpsdOffloadedBytesSentPerSec_Type = Gauge32
_IpsdOffloadedBytesSentPerSec_Object = MibScalar
ipsdOffloadedBytesSentPerSec = _IpsdOffloadedBytesSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 8),
    _IpsdOffloadedBytesSentPerSec_Type()
)
ipsdOffloadedBytesSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdOffloadedBytesSentPerSec.setStatus("current")
_IpsdOffloadedSecurityAssociation_Type = Gauge32
_IpsdOffloadedSecurityAssociation_Object = MibScalar
ipsdOffloadedSecurityAssociation = _IpsdOffloadedSecurityAssociation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 9),
    _IpsdOffloadedSecurityAssociation_Type()
)
ipsdOffloadedSecurityAssociation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdOffloadedSecurityAssociation.setStatus("current")
_IpsdPacketsNotAuthenticated_Type = Gauge32
_IpsdPacketsNotAuthenticated_Object = MibScalar
ipsdPacketsNotAuthenticated = _IpsdPacketsNotAuthenticated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 10),
    _IpsdPacketsNotAuthenticated_Type()
)
ipsdPacketsNotAuthenticated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPacketsNotAuthenticated.setStatus("current")
_IpsdPacketsNotDecrypted_Type = Gauge32
_IpsdPacketsNotDecrypted_Object = MibScalar
ipsdPacketsNotDecrypted = _IpsdPacketsNotDecrypted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 11),
    _IpsdPacketsNotDecrypted_Type()
)
ipsdPacketsNotDecrypted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPacketsNotDecrypted.setStatus("current")
_IpsdPacketsReceivedOverWrongSA_Type = Gauge32
_IpsdPacketsReceivedOverWrongSA_Object = MibScalar
ipsdPacketsReceivedOverWrongSA = _IpsdPacketsReceivedOverWrongSA_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 12),
    _IpsdPacketsReceivedOverWrongSA_Type()
)
ipsdPacketsReceivedOverWrongSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPacketsReceivedOverWrongSA.setStatus("current")
_IpsdPacketsFailedESPValidation_Type = Gauge32
_IpsdPacketsFailedESPValidation_Object = MibScalar
ipsdPacketsFailedESPValidation = _IpsdPacketsFailedESPValidation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 13),
    _IpsdPacketsFailedESPValidation_Type()
)
ipsdPacketsFailedESPValidation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPacketsFailedESPValidation.setStatus("current")
_IpsdPacketsFailedReplayDetection_Type = Gauge32
_IpsdPacketsFailedReplayDetection_Object = MibScalar
ipsdPacketsFailedReplayDetection = _IpsdPacketsFailedReplayDetection_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 14),
    _IpsdPacketsFailedReplayDetection_Type()
)
ipsdPacketsFailedReplayDetection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPacketsFailedReplayDetection.setStatus("current")
_IpsdPacketsFailUDPESPValidation_Type = Gauge32
_IpsdPacketsFailUDPESPValidation_Object = MibScalar
ipsdPacketsFailUDPESPValidation = _IpsdPacketsFailUDPESPValidation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 15),
    _IpsdPacketsFailUDPESPValidation_Type()
)
ipsdPacketsFailUDPESPValidation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPacketsFailUDPESPValidation.setStatus("current")
_IpsdPendingSecurityAssociations_Type = Gauge32
_IpsdPendingSecurityAssociations_Object = MibScalar
ipsdPendingSecurityAssociations = _IpsdPendingSecurityAssociations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 16),
    _IpsdPendingSecurityAssociations_Type()
)
ipsdPendingSecurityAssociations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPendingSecurityAssociations.setStatus("current")
_IpsdPlaintextPacketsReceived_Type = Gauge32
_IpsdPlaintextPacketsReceived_Object = MibScalar
ipsdPlaintextPacketsReceived = _IpsdPlaintextPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 17),
    _IpsdPlaintextPacketsReceived_Type()
)
ipsdPlaintextPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdPlaintextPacketsReceived.setStatus("current")
_IpsdSARekeys_Type = Gauge32
_IpsdSARekeys_Object = MibScalar
ipsdSARekeys = _IpsdSARekeys_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 18),
    _IpsdSARekeys_Type()
)
ipsdSARekeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdSARekeys.setStatus("current")
_IpsdSecurityAssociationsAdded_Type = Gauge32
_IpsdSecurityAssociationsAdded_Object = MibScalar
ipsdSecurityAssociationsAdded = _IpsdSecurityAssociationsAdded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 19),
    _IpsdSecurityAssociationsAdded_Type()
)
ipsdSecurityAssociationsAdded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsdSecurityAssociationsAdded.setStatus("current")
_IpSecIKEv4_ObjectIdentity = ObjectIdentity
ipSecIKEv4 = _IpSecIKEv4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134)
)
_Ipsi4ActiveMainModeSAs_Type = Gauge32
_Ipsi4ActiveMainModeSAs_Object = MibScalar
ipsi4ActiveMainModeSAs = _Ipsi4ActiveMainModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 1),
    _Ipsi4ActiveMainModeSAs_Type()
)
ipsi4ActiveMainModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4ActiveMainModeSAs.setStatus("current")
_Ipsi4ActiveQuickModeSAs_Type = Gauge32
_Ipsi4ActiveQuickModeSAs_Object = MibScalar
ipsi4ActiveQuickModeSAs = _Ipsi4ActiveQuickModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 2),
    _Ipsi4ActiveQuickModeSAs_Type()
)
ipsi4ActiveQuickModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4ActiveQuickModeSAs.setStatus("current")
_Ipsi4FailedMainModeNegotiations_Type = Gauge32
_Ipsi4FailedMainModeNegotiations_Object = MibScalar
ipsi4FailedMainModeNegotiations = _Ipsi4FailedMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 3),
    _Ipsi4FailedMainModeNegotiations_Type()
)
ipsi4FailedMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4FailedMainModeNegotiations.setStatus("current")
_Ipsi4FailedMainModeNegotPerSec_Type = Gauge32
_Ipsi4FailedMainModeNegotPerSec_Object = MibScalar
ipsi4FailedMainModeNegotPerSec = _Ipsi4FailedMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 4),
    _Ipsi4FailedMainModeNegotPerSec_Type()
)
ipsi4FailedMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4FailedMainModeNegotPerSec.setStatus("current")
_Ipsi4FailedQuickModeNegotiations_Type = Gauge32
_Ipsi4FailedQuickModeNegotiations_Object = MibScalar
ipsi4FailedQuickModeNegotiations = _Ipsi4FailedQuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 5),
    _Ipsi4FailedQuickModeNegotiations_Type()
)
ipsi4FailedQuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4FailedQuickModeNegotiations.setStatus("current")
_Ipsi4FailedQuickModeNegotPerSec_Type = Gauge32
_Ipsi4FailedQuickModeNegotPerSec_Object = MibScalar
ipsi4FailedQuickModeNegotPerSec = _Ipsi4FailedQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 6),
    _Ipsi4FailedQuickModeNegotPerSec_Type()
)
ipsi4FailedQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4FailedQuickModeNegotPerSec.setStatus("current")
_Ipsi4MainModeNegotiationRqstRcvd_Type = Gauge32
_Ipsi4MainModeNegotiationRqstRcvd_Object = MibScalar
ipsi4MainModeNegotiationRqstRcvd = _Ipsi4MainModeNegotiationRqstRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 7),
    _Ipsi4MainModeNegotiationRqstRcvd_Type()
)
ipsi4MainModeNegotiationRqstRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4MainModeNegotiationRqstRcvd.setStatus("current")
_Ipsi4MainModeNegotRqstRcvdPerSec_Type = Gauge32
_Ipsi4MainModeNegotRqstRcvdPerSec_Object = MibScalar
ipsi4MainModeNegotRqstRcvdPerSec = _Ipsi4MainModeNegotRqstRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 8),
    _Ipsi4MainModeNegotRqstRcvdPerSec_Type()
)
ipsi4MainModeNegotRqstRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4MainModeNegotRqstRcvdPerSec.setStatus("current")
_Ipsi4MainModeNegotiations_Type = Gauge32
_Ipsi4MainModeNegotiations_Object = MibScalar
ipsi4MainModeNegotiations = _Ipsi4MainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 9),
    _Ipsi4MainModeNegotiations_Type()
)
ipsi4MainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4MainModeNegotiations.setStatus("current")
_Ipsi4MainModeNegotiationsPerSec_Type = Gauge32
_Ipsi4MainModeNegotiationsPerSec_Object = MibScalar
ipsi4MainModeNegotiationsPerSec = _Ipsi4MainModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 10),
    _Ipsi4MainModeNegotiationsPerSec_Type()
)
ipsi4MainModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4MainModeNegotiationsPerSec.setStatus("current")
_Ipsi4PendingMainModeNegotiations_Type = Gauge32
_Ipsi4PendingMainModeNegotiations_Object = MibScalar
ipsi4PendingMainModeNegotiations = _Ipsi4PendingMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 11),
    _Ipsi4PendingMainModeNegotiations_Type()
)
ipsi4PendingMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4PendingMainModeNegotiations.setStatus("current")
_Ipsi4PendingQuickModeNegotiation_Type = Gauge32
_Ipsi4PendingQuickModeNegotiation_Object = MibScalar
ipsi4PendingQuickModeNegotiation = _Ipsi4PendingQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 12),
    _Ipsi4PendingQuickModeNegotiation_Type()
)
ipsi4PendingQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4PendingQuickModeNegotiation.setStatus("current")
_Ipsi4QuickModeNegotiations_Type = Gauge32
_Ipsi4QuickModeNegotiations_Object = MibScalar
ipsi4QuickModeNegotiations = _Ipsi4QuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 13),
    _Ipsi4QuickModeNegotiations_Type()
)
ipsi4QuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4QuickModeNegotiations.setStatus("current")
_Ipsi4QuickModeNegotiationsPerSec_Type = Gauge32
_Ipsi4QuickModeNegotiationsPerSec_Object = MibScalar
ipsi4QuickModeNegotiationsPerSec = _Ipsi4QuickModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 14),
    _Ipsi4QuickModeNegotiationsPerSec_Type()
)
ipsi4QuickModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4QuickModeNegotiationsPerSec.setStatus("current")
_Ipsi4SuccessMainModeNegotiations_Type = Gauge32
_Ipsi4SuccessMainModeNegotiations_Object = MibScalar
ipsi4SuccessMainModeNegotiations = _Ipsi4SuccessMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 15),
    _Ipsi4SuccessMainModeNegotiations_Type()
)
ipsi4SuccessMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4SuccessMainModeNegotiations.setStatus("current")
_Ipsi4SuccessMainModeNegotPerSec_Type = Gauge32
_Ipsi4SuccessMainModeNegotPerSec_Object = MibScalar
ipsi4SuccessMainModeNegotPerSec = _Ipsi4SuccessMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 16),
    _Ipsi4SuccessMainModeNegotPerSec_Type()
)
ipsi4SuccessMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4SuccessMainModeNegotPerSec.setStatus("current")
_Ipsi4SuccessQuickModeNegotiation_Type = Gauge32
_Ipsi4SuccessQuickModeNegotiation_Object = MibScalar
ipsi4SuccessQuickModeNegotiation = _Ipsi4SuccessQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 17),
    _Ipsi4SuccessQuickModeNegotiation_Type()
)
ipsi4SuccessQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4SuccessQuickModeNegotiation.setStatus("current")
_Ipsi4SuccessQuickModeNegotPerSec_Type = Gauge32
_Ipsi4SuccessQuickModeNegotPerSec_Object = MibScalar
ipsi4SuccessQuickModeNegotPerSec = _Ipsi4SuccessQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 18),
    _Ipsi4SuccessQuickModeNegotPerSec_Type()
)
ipsi4SuccessQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi4SuccessQuickModeNegotPerSec.setStatus("current")
_IpSecIKEv6_ObjectIdentity = ObjectIdentity
ipSecIKEv6 = _IpSecIKEv6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135)
)
_Ipsi6ActiveMainModeSAs_Type = Gauge32
_Ipsi6ActiveMainModeSAs_Object = MibScalar
ipsi6ActiveMainModeSAs = _Ipsi6ActiveMainModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 1),
    _Ipsi6ActiveMainModeSAs_Type()
)
ipsi6ActiveMainModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6ActiveMainModeSAs.setStatus("current")
_Ipsi6ActiveQuickModeSAs_Type = Gauge32
_Ipsi6ActiveQuickModeSAs_Object = MibScalar
ipsi6ActiveQuickModeSAs = _Ipsi6ActiveQuickModeSAs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 2),
    _Ipsi6ActiveQuickModeSAs_Type()
)
ipsi6ActiveQuickModeSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6ActiveQuickModeSAs.setStatus("current")
_Ipsi6FailedMainModeNegotiations_Type = Gauge32
_Ipsi6FailedMainModeNegotiations_Object = MibScalar
ipsi6FailedMainModeNegotiations = _Ipsi6FailedMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 3),
    _Ipsi6FailedMainModeNegotiations_Type()
)
ipsi6FailedMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6FailedMainModeNegotiations.setStatus("current")
_Ipsi6FailedMainModeNegotPerSec_Type = Gauge32
_Ipsi6FailedMainModeNegotPerSec_Object = MibScalar
ipsi6FailedMainModeNegotPerSec = _Ipsi6FailedMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 4),
    _Ipsi6FailedMainModeNegotPerSec_Type()
)
ipsi6FailedMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6FailedMainModeNegotPerSec.setStatus("current")
_Ipsi6FailedQuickModeNegotiations_Type = Gauge32
_Ipsi6FailedQuickModeNegotiations_Object = MibScalar
ipsi6FailedQuickModeNegotiations = _Ipsi6FailedQuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 5),
    _Ipsi6FailedQuickModeNegotiations_Type()
)
ipsi6FailedQuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6FailedQuickModeNegotiations.setStatus("current")
_Ipsi6FailedQuickModeNegotPerSec_Type = Gauge32
_Ipsi6FailedQuickModeNegotPerSec_Object = MibScalar
ipsi6FailedQuickModeNegotPerSec = _Ipsi6FailedQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 6),
    _Ipsi6FailedQuickModeNegotPerSec_Type()
)
ipsi6FailedQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6FailedQuickModeNegotPerSec.setStatus("current")
_Ipsi6MainModeNegotiationRqstRcvd_Type = Gauge32
_Ipsi6MainModeNegotiationRqstRcvd_Object = MibScalar
ipsi6MainModeNegotiationRqstRcvd = _Ipsi6MainModeNegotiationRqstRcvd_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 7),
    _Ipsi6MainModeNegotiationRqstRcvd_Type()
)
ipsi6MainModeNegotiationRqstRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6MainModeNegotiationRqstRcvd.setStatus("current")
_Ipsi6MainModeNegotRqstRcvdPerSec_Type = Gauge32
_Ipsi6MainModeNegotRqstRcvdPerSec_Object = MibScalar
ipsi6MainModeNegotRqstRcvdPerSec = _Ipsi6MainModeNegotRqstRcvdPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 8),
    _Ipsi6MainModeNegotRqstRcvdPerSec_Type()
)
ipsi6MainModeNegotRqstRcvdPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6MainModeNegotRqstRcvdPerSec.setStatus("current")
_Ipsi6MainModeNegotiations_Type = Gauge32
_Ipsi6MainModeNegotiations_Object = MibScalar
ipsi6MainModeNegotiations = _Ipsi6MainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 9),
    _Ipsi6MainModeNegotiations_Type()
)
ipsi6MainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6MainModeNegotiations.setStatus("current")
_Ipsi6MainModeNegotiationsPerSec_Type = Gauge32
_Ipsi6MainModeNegotiationsPerSec_Object = MibScalar
ipsi6MainModeNegotiationsPerSec = _Ipsi6MainModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 10),
    _Ipsi6MainModeNegotiationsPerSec_Type()
)
ipsi6MainModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6MainModeNegotiationsPerSec.setStatus("current")
_Ipsi6PendingMainModeNegotiations_Type = Gauge32
_Ipsi6PendingMainModeNegotiations_Object = MibScalar
ipsi6PendingMainModeNegotiations = _Ipsi6PendingMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 11),
    _Ipsi6PendingMainModeNegotiations_Type()
)
ipsi6PendingMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6PendingMainModeNegotiations.setStatus("current")
_Ipsi6PendingQuickModeNegotiation_Type = Gauge32
_Ipsi6PendingQuickModeNegotiation_Object = MibScalar
ipsi6PendingQuickModeNegotiation = _Ipsi6PendingQuickModeNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 12),
    _Ipsi6PendingQuickModeNegotiation_Type()
)
ipsi6PendingQuickModeNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6PendingQuickModeNegotiation.setStatus("current")
_Ipsi6QuickModeNegotiations_Type = Gauge32
_Ipsi6QuickModeNegotiations_Object = MibScalar
ipsi6QuickModeNegotiations = _Ipsi6QuickModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 13),
    _Ipsi6QuickModeNegotiations_Type()
)
ipsi6QuickModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6QuickModeNegotiations.setStatus("current")
_Ipsi6QuickModeNegotiationsPerSec_Type = Gauge32
_Ipsi6QuickModeNegotiationsPerSec_Object = MibScalar
ipsi6QuickModeNegotiationsPerSec = _Ipsi6QuickModeNegotiationsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 14),
    _Ipsi6QuickModeNegotiationsPerSec_Type()
)
ipsi6QuickModeNegotiationsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6QuickModeNegotiationsPerSec.setStatus("current")
_Ipsi6SuccessMainModeNegotiations_Type = Gauge32
_Ipsi6SuccessMainModeNegotiations_Object = MibScalar
ipsi6SuccessMainModeNegotiations = _Ipsi6SuccessMainModeNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 15),
    _Ipsi6SuccessMainModeNegotiations_Type()
)
ipsi6SuccessMainModeNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6SuccessMainModeNegotiations.setStatus("current")
_Ipsi6SuccessMainModeNegotPerSec_Type = Gauge32
_Ipsi6SuccessMainModeNegotPerSec_Object = MibScalar
ipsi6SuccessMainModeNegotPerSec = _Ipsi6SuccessMainModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 16),
    _Ipsi6SuccessMainModeNegotPerSec_Type()
)
ipsi6SuccessMainModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6SuccessMainModeNegotPerSec.setStatus("current")
_Ipsi6SuccessfulQuickModeNegot_Type = Gauge32
_Ipsi6SuccessfulQuickModeNegot_Object = MibScalar
ipsi6SuccessfulQuickModeNegot = _Ipsi6SuccessfulQuickModeNegot_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 17),
    _Ipsi6SuccessfulQuickModeNegot_Type()
)
ipsi6SuccessfulQuickModeNegot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6SuccessfulQuickModeNegot.setStatus("current")
_Ipsi6SuccessQuickModeNegotPerSec_Type = Gauge32
_Ipsi6SuccessQuickModeNegotPerSec_Object = MibScalar
ipsi6SuccessQuickModeNegotPerSec = _Ipsi6SuccessQuickModeNegotPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 18),
    _Ipsi6SuccessQuickModeNegotPerSec_Type()
)
ipsi6SuccessQuickModeNegotPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipsi6SuccessQuickModeNegotPerSec.setStatus("current")
_MsmqIncomingHTTPTraffic_ObjectIdentity = ObjectIdentity
msmqIncomingHTTPTraffic = _MsmqIncomingHTTPTraffic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 136)
)
if mibBuilder.loadTexts:
    msmqIncomingHTTPTraffic.setStatus("current")
_MsmqitIncomingHTTPBytes_Type = Gauge32
_MsmqitIncomingHTTPBytes_Object = MibScalar
msmqitIncomingHTTPBytes = _MsmqitIncomingHTTPBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 1),
    _MsmqitIncomingHTTPBytes_Type()
)
msmqitIncomingHTTPBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqitIncomingHTTPBytes.setStatus("current")
_MsmqitIncomingHTTPBytesPerSec_Type = Gauge32
_MsmqitIncomingHTTPBytesPerSec_Object = MibScalar
msmqitIncomingHTTPBytesPerSec = _MsmqitIncomingHTTPBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 2),
    _MsmqitIncomingHTTPBytesPerSec_Type()
)
msmqitIncomingHTTPBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqitIncomingHTTPBytesPerSec.setStatus("current")
_MsmqitIncomingHTTPMessages_Type = Gauge32
_MsmqitIncomingHTTPMessages_Object = MibScalar
msmqitIncomingHTTPMessages = _MsmqitIncomingHTTPMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 3),
    _MsmqitIncomingHTTPMessages_Type()
)
msmqitIncomingHTTPMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqitIncomingHTTPMessages.setStatus("current")
_MsmqitIncomingHTTPMessagesPerSec_Type = Gauge32
_MsmqitIncomingHTTPMessagesPerSec_Object = MibScalar
msmqitIncomingHTTPMessagesPerSec = _MsmqitIncomingHTTPMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 4),
    _MsmqitIncomingHTTPMessagesPerSec_Type()
)
msmqitIncomingHTTPMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqitIncomingHTTPMessagesPerSec.setStatus("current")
_MsmqInMulticastSessionTable_Object = MibTable
msmqInMulticastSessionTable = _MsmqInMulticastSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137)
)
if mibBuilder.loadTexts:
    msmqInMulticastSessionTable.setStatus("current")
_MsmqInMulticastSessionEntry_Object = MibTableRow
msmqInMulticastSessionEntry = _MsmqInMulticastSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1)
)
msmqInMulticastSessionEntry.setIndexNames(
    (0, "INFORMANT-ADV", "msmqimsInstance"),
)
if mibBuilder.loadTexts:
    msmqInMulticastSessionEntry.setStatus("current")
_MsmqimsInstance_Type = InstanceName
_MsmqimsInstance_Object = MibTableColumn
msmqimsInstance = _MsmqimsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 1),
    _MsmqimsInstance_Type()
)
msmqimsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqimsInstance.setStatus("current")
_MsmqimsIncomingMulticastBytes_Type = Gauge32
_MsmqimsIncomingMulticastBytes_Object = MibTableColumn
msmqimsIncomingMulticastBytes = _MsmqimsIncomingMulticastBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 2),
    _MsmqimsIncomingMulticastBytes_Type()
)
msmqimsIncomingMulticastBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqimsIncomingMulticastBytes.setStatus("current")
_MsmqimsInMulticastBytesPerSec_Type = Gauge32
_MsmqimsInMulticastBytesPerSec_Object = MibTableColumn
msmqimsInMulticastBytesPerSec = _MsmqimsInMulticastBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 3),
    _MsmqimsInMulticastBytesPerSec_Type()
)
msmqimsInMulticastBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqimsInMulticastBytesPerSec.setStatus("current")
_MsmqimsIncomingMulticastMessages_Type = Gauge32
_MsmqimsIncomingMulticastMessages_Object = MibTableColumn
msmqimsIncomingMulticastMessages = _MsmqimsIncomingMulticastMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 4),
    _MsmqimsIncomingMulticastMessages_Type()
)
msmqimsIncomingMulticastMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqimsIncomingMulticastMessages.setStatus("current")
_MsmqimsInMulticastMessagesPerSec_Type = Gauge32
_MsmqimsInMulticastMessagesPerSec_Object = MibTableColumn
msmqimsInMulticastMessagesPerSec = _MsmqimsInMulticastMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 5),
    _MsmqimsInMulticastMessagesPerSec_Type()
)
msmqimsInMulticastMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqimsInMulticastMessagesPerSec.setStatus("current")
_MsmqOutgoingHTTPSessionTable_Object = MibTable
msmqOutgoingHTTPSessionTable = _MsmqOutgoingHTTPSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138)
)
if mibBuilder.loadTexts:
    msmqOutgoingHTTPSessionTable.setStatus("current")
_MsmqOutgoingHTTPSessionEntry_Object = MibTableRow
msmqOutgoingHTTPSessionEntry = _MsmqOutgoingHTTPSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1)
)
msmqOutgoingHTTPSessionEntry.setIndexNames(
    (0, "INFORMANT-ADV", "msmqosInstance"),
)
if mibBuilder.loadTexts:
    msmqOutgoingHTTPSessionEntry.setStatus("current")
_MsmqosInstance_Type = InstanceName
_MsmqosInstance_Object = MibTableColumn
msmqosInstance = _MsmqosInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 1),
    _MsmqosInstance_Type()
)
msmqosInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqosInstance.setStatus("current")
_MsmqosOutgoingHTTPBytes_Type = Gauge32
_MsmqosOutgoingHTTPBytes_Object = MibTableColumn
msmqosOutgoingHTTPBytes = _MsmqosOutgoingHTTPBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 2),
    _MsmqosOutgoingHTTPBytes_Type()
)
msmqosOutgoingHTTPBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqosOutgoingHTTPBytes.setStatus("current")
_MsmqosOutgoingHTTPBytesPerSec_Type = Gauge32
_MsmqosOutgoingHTTPBytesPerSec_Object = MibTableColumn
msmqosOutgoingHTTPBytesPerSec = _MsmqosOutgoingHTTPBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 3),
    _MsmqosOutgoingHTTPBytesPerSec_Type()
)
msmqosOutgoingHTTPBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqosOutgoingHTTPBytesPerSec.setStatus("current")
_MsmqosOutgoingHTTPMessages_Type = Gauge32
_MsmqosOutgoingHTTPMessages_Object = MibTableColumn
msmqosOutgoingHTTPMessages = _MsmqosOutgoingHTTPMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 4),
    _MsmqosOutgoingHTTPMessages_Type()
)
msmqosOutgoingHTTPMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqosOutgoingHTTPMessages.setStatus("current")
_MsmqosOutgoingHTTPMessagesPerSec_Type = Gauge32
_MsmqosOutgoingHTTPMessagesPerSec_Object = MibTableColumn
msmqosOutgoingHTTPMessagesPerSec = _MsmqosOutgoingHTTPMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 5),
    _MsmqosOutgoingHTTPMessagesPerSec_Type()
)
msmqosOutgoingHTTPMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqosOutgoingHTTPMessagesPerSec.setStatus("current")
_MsmqOutMulticastSessionTable_Object = MibTable
msmqOutMulticastSessionTable = _MsmqOutMulticastSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139)
)
if mibBuilder.loadTexts:
    msmqOutMulticastSessionTable.setStatus("current")
_MsmqOutMulticastSessionEntry_Object = MibTableRow
msmqOutMulticastSessionEntry = _MsmqOutMulticastSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1)
)
msmqOutMulticastSessionEntry.setIndexNames(
    (0, "INFORMANT-ADV", "msmqomsInstance"),
)
if mibBuilder.loadTexts:
    msmqOutMulticastSessionEntry.setStatus("current")
_MsmqomsInstance_Type = InstanceName
_MsmqomsInstance_Object = MibTableColumn
msmqomsInstance = _MsmqomsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 1),
    _MsmqomsInstance_Type()
)
msmqomsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqomsInstance.setStatus("current")
_MsmqomsOutgoingMulticastBytes_Type = Gauge32
_MsmqomsOutgoingMulticastBytes_Object = MibTableColumn
msmqomsOutgoingMulticastBytes = _MsmqomsOutgoingMulticastBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 2),
    _MsmqomsOutgoingMulticastBytes_Type()
)
msmqomsOutgoingMulticastBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqomsOutgoingMulticastBytes.setStatus("current")
_MsmqomsOutMulticastBytesPerSec_Type = Gauge32
_MsmqomsOutMulticastBytesPerSec_Object = MibTableColumn
msmqomsOutMulticastBytesPerSec = _MsmqomsOutMulticastBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 3),
    _MsmqomsOutMulticastBytesPerSec_Type()
)
msmqomsOutMulticastBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqomsOutMulticastBytesPerSec.setStatus("current")
_MsmqomsOutgoingMulticastMessages_Type = Gauge32
_MsmqomsOutgoingMulticastMessages_Object = MibTableColumn
msmqomsOutgoingMulticastMessages = _MsmqomsOutgoingMulticastMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 4),
    _MsmqomsOutgoingMulticastMessages_Type()
)
msmqomsOutgoingMulticastMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqomsOutgoingMulticastMessages.setStatus("current")
_MsmqomsOutMulticastMessagePerSec_Type = Gauge32
_MsmqomsOutMulticastMessagePerSec_Object = MibTableColumn
msmqomsOutMulticastMessagePerSec = _MsmqomsOutMulticastMessagePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 5),
    _MsmqomsOutMulticastMessagePerSec_Type()
)
msmqomsOutMulticastMessagePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqomsOutMulticastMessagePerSec.setStatus("current")
_MsmqSessionTable_Object = MibTable
msmqSessionTable = _MsmqSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140)
)
if mibBuilder.loadTexts:
    msmqSessionTable.setStatus("current")
_MsmqSessionEntry_Object = MibTableRow
msmqSessionEntry = _MsmqSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1)
)
msmqSessionEntry.setIndexNames(
    (0, "INFORMANT-ADV", "msmqsInstance"),
)
if mibBuilder.loadTexts:
    msmqSessionEntry.setStatus("current")
_MsmqsInstance_Type = InstanceName
_MsmqsInstance_Object = MibTableColumn
msmqsInstance = _MsmqsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 1),
    _MsmqsInstance_Type()
)
msmqsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsInstance.setStatus("current")
_MsmqsIncomingBytes_Type = Gauge32
_MsmqsIncomingBytes_Object = MibTableColumn
msmqsIncomingBytes = _MsmqsIncomingBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 2),
    _MsmqsIncomingBytes_Type()
)
msmqsIncomingBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsIncomingBytes.setStatus("current")
_MsmqsIncomingBytesPerSec_Type = Gauge32
_MsmqsIncomingBytesPerSec_Object = MibTableColumn
msmqsIncomingBytesPerSec = _MsmqsIncomingBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 3),
    _MsmqsIncomingBytesPerSec_Type()
)
msmqsIncomingBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsIncomingBytesPerSec.setStatus("current")
_MsmqsIncomingMessages_Type = Gauge32
_MsmqsIncomingMessages_Object = MibTableColumn
msmqsIncomingMessages = _MsmqsIncomingMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 4),
    _MsmqsIncomingMessages_Type()
)
msmqsIncomingMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsIncomingMessages.setStatus("current")
_MsmqsIncomingMessagesPerSec_Type = Gauge32
_MsmqsIncomingMessagesPerSec_Object = MibTableColumn
msmqsIncomingMessagesPerSec = _MsmqsIncomingMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 5),
    _MsmqsIncomingMessagesPerSec_Type()
)
msmqsIncomingMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsIncomingMessagesPerSec.setStatus("current")
_MsmqsOutgoingBytes_Type = Gauge32
_MsmqsOutgoingBytes_Object = MibTableColumn
msmqsOutgoingBytes = _MsmqsOutgoingBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 6),
    _MsmqsOutgoingBytes_Type()
)
msmqsOutgoingBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsOutgoingBytes.setStatus("current")
_MsmqsOutgoingBytesPerSec_Type = Gauge32
_MsmqsOutgoingBytesPerSec_Object = MibTableColumn
msmqsOutgoingBytesPerSec = _MsmqsOutgoingBytesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 7),
    _MsmqsOutgoingBytesPerSec_Type()
)
msmqsOutgoingBytesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsOutgoingBytesPerSec.setStatus("current")
_MsmqsOutgoingMessages_Type = Gauge32
_MsmqsOutgoingMessages_Object = MibTableColumn
msmqsOutgoingMessages = _MsmqsOutgoingMessages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 8),
    _MsmqsOutgoingMessages_Type()
)
msmqsOutgoingMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsOutgoingMessages.setStatus("current")
_MsmqsOutgoingMessagesPerSec_Type = Gauge32
_MsmqsOutgoingMessagesPerSec_Object = MibTableColumn
msmqsOutgoingMessagesPerSec = _MsmqsOutgoingMessagesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 9),
    _MsmqsOutgoingMessagesPerSec_Type()
)
msmqsOutgoingMessagesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msmqsOutgoingMessagesPerSec.setStatus("current")
_NetlogonTable_Object = MibTable
netlogonTable = _NetlogonTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141)
)
if mibBuilder.loadTexts:
    netlogonTable.setStatus("current")
_NetlogonEntry_Object = MibTableRow
netlogonEntry = _NetlogonEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1)
)
netlogonEntry.setIndexNames(
    (0, "INFORMANT-ADV", "netlogonInstance"),
)
if mibBuilder.loadTexts:
    netlogonEntry.setStatus("current")
_NetlogonInstance_Type = InstanceName
_NetlogonInstance_Object = MibTableColumn
netlogonInstance = _NetlogonInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 1),
    _NetlogonInstance_Type()
)
netlogonInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netlogonInstance.setStatus("current")
_NetlogonAverageSemaphoreHoldTime_Type = Gauge32
_NetlogonAverageSemaphoreHoldTime_Object = MibTableColumn
netlogonAverageSemaphoreHoldTime = _NetlogonAverageSemaphoreHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 2),
    _NetlogonAverageSemaphoreHoldTime_Type()
)
netlogonAverageSemaphoreHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netlogonAverageSemaphoreHoldTime.setStatus("current")
_NetlogonSemaphoreAcquires_Type = Gauge32
_NetlogonSemaphoreAcquires_Object = MibTableColumn
netlogonSemaphoreAcquires = _NetlogonSemaphoreAcquires_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 3),
    _NetlogonSemaphoreAcquires_Type()
)
netlogonSemaphoreAcquires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netlogonSemaphoreAcquires.setStatus("current")
_NetlogonSemaphoreHolders_Type = Gauge32
_NetlogonSemaphoreHolders_Object = MibTableColumn
netlogonSemaphoreHolders = _NetlogonSemaphoreHolders_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 4),
    _NetlogonSemaphoreHolders_Type()
)
netlogonSemaphoreHolders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netlogonSemaphoreHolders.setStatus("current")
_NetlogonSemaphoreTimeouts_Type = Gauge32
_NetlogonSemaphoreTimeouts_Object = MibTableColumn
netlogonSemaphoreTimeouts = _NetlogonSemaphoreTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 5),
    _NetlogonSemaphoreTimeouts_Type()
)
netlogonSemaphoreTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netlogonSemaphoreTimeouts.setStatus("current")
_NetlogonSemaphoreWaiters_Type = Gauge32
_NetlogonSemaphoreWaiters_Object = MibTableColumn
netlogonSemaphoreWaiters = _NetlogonSemaphoreWaiters_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 6),
    _NetlogonSemaphoreWaiters_Type()
)
netlogonSemaphoreWaiters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netlogonSemaphoreWaiters.setStatus("current")
_NpsAccountingClientsTable_Object = MibTable
npsAccountingClientsTable = _NpsAccountingClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142)
)
if mibBuilder.loadTexts:
    npsAccountingClientsTable.setStatus("current")
_NpsAccountingClientsEntry_Object = MibTableRow
npsAccountingClientsEntry = _NpsAccountingClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1)
)
npsAccountingClientsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "npsaccInstance"),
)
if mibBuilder.loadTexts:
    npsAccountingClientsEntry.setStatus("current")
_NpsaccInstance_Type = InstanceName
_NpsaccInstance_Object = MibTableColumn
npsaccInstance = _NpsaccInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 1),
    _NpsaccInstance_Type()
)
npsaccInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccInstance.setStatus("current")
_NpsaccAccountingRequests_Type = Gauge32
_NpsaccAccountingRequests_Object = MibTableColumn
npsaccAccountingRequests = _NpsaccAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 2),
    _NpsaccAccountingRequests_Type()
)
npsaccAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccAccountingRequests.setStatus("current")
_NpsaccAccountingRequestsPerSec_Type = Gauge32
_NpsaccAccountingRequestsPerSec_Object = MibTableColumn
npsaccAccountingRequestsPerSec = _NpsaccAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 3),
    _NpsaccAccountingRequestsPerSec_Type()
)
npsaccAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccAccountingRequestsPerSec.setStatus("current")
_NpsaccAccountingResponses_Type = Gauge32
_NpsaccAccountingResponses_Object = MibTableColumn
npsaccAccountingResponses = _NpsaccAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 4),
    _NpsaccAccountingResponses_Type()
)
npsaccAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccAccountingResponses.setStatus("current")
_NpsaccAccountingResponsesPerSec_Type = Gauge32
_NpsaccAccountingResponsesPerSec_Object = MibTableColumn
npsaccAccountingResponsesPerSec = _NpsaccAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 5),
    _NpsaccAccountingResponsesPerSec_Type()
)
npsaccAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccAccountingResponsesPerSec.setStatus("current")
_NpsaccBadAuthenticators_Type = Gauge32
_NpsaccBadAuthenticators_Object = MibTableColumn
npsaccBadAuthenticators = _NpsaccBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 6),
    _NpsaccBadAuthenticators_Type()
)
npsaccBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccBadAuthenticators.setStatus("current")
_NpsaccBadAuthenticatorsPerSec_Type = Gauge32
_NpsaccBadAuthenticatorsPerSec_Object = MibTableColumn
npsaccBadAuthenticatorsPerSec = _NpsaccBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 7),
    _NpsaccBadAuthenticatorsPerSec_Type()
)
npsaccBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccBadAuthenticatorsPerSec.setStatus("current")
_NpsaccDroppedPackets_Type = Gauge32
_NpsaccDroppedPackets_Object = MibTableColumn
npsaccDroppedPackets = _NpsaccDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 8),
    _NpsaccDroppedPackets_Type()
)
npsaccDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccDroppedPackets.setStatus("current")
_NpsaccDroppedPacketsPerSec_Type = Gauge32
_NpsaccDroppedPacketsPerSec_Object = MibTableColumn
npsaccDroppedPacketsPerSec = _NpsaccDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 9),
    _NpsaccDroppedPacketsPerSec_Type()
)
npsaccDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccDroppedPacketsPerSec.setStatus("current")
_NpsaccDupAccountingRequests_Type = Gauge32
_NpsaccDupAccountingRequests_Object = MibTableColumn
npsaccDupAccountingRequests = _NpsaccDupAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 10),
    _NpsaccDupAccountingRequests_Type()
)
npsaccDupAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccDupAccountingRequests.setStatus("current")
_NpsaccDupAccountingRequestPerSec_Type = Gauge32
_NpsaccDupAccountingRequestPerSec_Object = MibTableColumn
npsaccDupAccountingRequestPerSec = _NpsaccDupAccountingRequestPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 11),
    _NpsaccDupAccountingRequestPerSec_Type()
)
npsaccDupAccountingRequestPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccDupAccountingRequestPerSec.setStatus("current")
_NpsaccMalformedPackets_Type = Gauge32
_NpsaccMalformedPackets_Object = MibTableColumn
npsaccMalformedPackets = _NpsaccMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 12),
    _NpsaccMalformedPackets_Type()
)
npsaccMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccMalformedPackets.setStatus("current")
_NpsaccMalformedPacketsPerSec_Type = Gauge32
_NpsaccMalformedPacketsPerSec_Object = MibTableColumn
npsaccMalformedPacketsPerSec = _NpsaccMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 13),
    _NpsaccMalformedPacketsPerSec_Type()
)
npsaccMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccMalformedPacketsPerSec.setStatus("current")
_NpsaccNoRecord_Type = Gauge32
_NpsaccNoRecord_Object = MibTableColumn
npsaccNoRecord = _NpsaccNoRecord_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 14),
    _NpsaccNoRecord_Type()
)
npsaccNoRecord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccNoRecord.setStatus("current")
_NpsaccNoRecordPerSec_Type = Gauge32
_NpsaccNoRecordPerSec_Object = MibTableColumn
npsaccNoRecordPerSec = _NpsaccNoRecordPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 15),
    _NpsaccNoRecordPerSec_Type()
)
npsaccNoRecordPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccNoRecordPerSec.setStatus("current")
_NpsaccPacketsReceived_Type = Gauge32
_NpsaccPacketsReceived_Object = MibTableColumn
npsaccPacketsReceived = _NpsaccPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 16),
    _NpsaccPacketsReceived_Type()
)
npsaccPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccPacketsReceived.setStatus("current")
_NpsaccPacketsReceivedPerSec_Type = Gauge32
_NpsaccPacketsReceivedPerSec_Object = MibTableColumn
npsaccPacketsReceivedPerSec = _NpsaccPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 17),
    _NpsaccPacketsReceivedPerSec_Type()
)
npsaccPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccPacketsReceivedPerSec.setStatus("current")
_NpsaccPacketsSent_Type = Gauge32
_NpsaccPacketsSent_Object = MibTableColumn
npsaccPacketsSent = _NpsaccPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 18),
    _NpsaccPacketsSent_Type()
)
npsaccPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccPacketsSent.setStatus("current")
_NpsaccPacketsSentPerSec_Type = Gauge32
_NpsaccPacketsSentPerSec_Object = MibTableColumn
npsaccPacketsSentPerSec = _NpsaccPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 19),
    _NpsaccPacketsSentPerSec_Type()
)
npsaccPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccPacketsSentPerSec.setStatus("current")
_NpsaccUnknownType_Type = Gauge32
_NpsaccUnknownType_Object = MibTableColumn
npsaccUnknownType = _NpsaccUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 20),
    _NpsaccUnknownType_Type()
)
npsaccUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccUnknownType.setStatus("current")
_NpsaccUnknownTypePerSec_Type = Gauge32
_NpsaccUnknownTypePerSec_Object = MibTableColumn
npsaccUnknownTypePerSec = _NpsaccUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 21),
    _NpsaccUnknownTypePerSec_Type()
)
npsaccUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaccUnknownTypePerSec.setStatus("current")
_NpsAccountingProxy_ObjectIdentity = ObjectIdentity
npsAccountingProxy = _NpsAccountingProxy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143)
)
_NpsacpAccountingRequests_Type = Gauge32
_NpsacpAccountingRequests_Object = MibScalar
npsacpAccountingRequests = _NpsacpAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 1),
    _NpsacpAccountingRequests_Type()
)
npsacpAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpAccountingRequests.setStatus("current")
_NpsacpAccountingRequestsPerSec_Type = Gauge32
_NpsacpAccountingRequestsPerSec_Object = MibScalar
npsacpAccountingRequestsPerSec = _NpsacpAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 2),
    _NpsacpAccountingRequestsPerSec_Type()
)
npsacpAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpAccountingRequestsPerSec.setStatus("current")
_NpsacpAccountingResponses_Type = Gauge32
_NpsacpAccountingResponses_Object = MibScalar
npsacpAccountingResponses = _NpsacpAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 3),
    _NpsacpAccountingResponses_Type()
)
npsacpAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpAccountingResponses.setStatus("current")
_NpsacpAccountingResponsesPerSec_Type = Gauge32
_NpsacpAccountingResponsesPerSec_Object = MibScalar
npsacpAccountingResponsesPerSec = _NpsacpAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 4),
    _NpsacpAccountingResponsesPerSec_Type()
)
npsacpAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpAccountingResponsesPerSec.setStatus("current")
_NpsacpBadAuthenticators_Type = Gauge32
_NpsacpBadAuthenticators_Object = MibScalar
npsacpBadAuthenticators = _NpsacpBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 5),
    _NpsacpBadAuthenticators_Type()
)
npsacpBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpBadAuthenticators.setStatus("current")
_NpsacpBadAuthenticatorsPerSec_Type = Gauge32
_NpsacpBadAuthenticatorsPerSec_Object = MibScalar
npsacpBadAuthenticatorsPerSec = _NpsacpBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 6),
    _NpsacpBadAuthenticatorsPerSec_Type()
)
npsacpBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpBadAuthenticatorsPerSec.setStatus("current")
_NpsacpDroppedPackets_Type = Gauge32
_NpsacpDroppedPackets_Object = MibScalar
npsacpDroppedPackets = _NpsacpDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 7),
    _NpsacpDroppedPackets_Type()
)
npsacpDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpDroppedPackets.setStatus("current")
_NpsacpDroppedPacketsPerSec_Type = Gauge32
_NpsacpDroppedPacketsPerSec_Object = MibScalar
npsacpDroppedPacketsPerSec = _NpsacpDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 8),
    _NpsacpDroppedPacketsPerSec_Type()
)
npsacpDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpDroppedPacketsPerSec.setStatus("current")
_NpsacpInvalidAddresses_Type = Gauge32
_NpsacpInvalidAddresses_Object = MibScalar
npsacpInvalidAddresses = _NpsacpInvalidAddresses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 9),
    _NpsacpInvalidAddresses_Type()
)
npsacpInvalidAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpInvalidAddresses.setStatus("current")
_NpsacpInvalidAddressesPerSec_Type = Gauge32
_NpsacpInvalidAddressesPerSec_Object = MibScalar
npsacpInvalidAddressesPerSec = _NpsacpInvalidAddressesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 10),
    _NpsacpInvalidAddressesPerSec_Type()
)
npsacpInvalidAddressesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpInvalidAddressesPerSec.setStatus("current")
_NpsacpMalformedPackets_Type = Gauge32
_NpsacpMalformedPackets_Object = MibScalar
npsacpMalformedPackets = _NpsacpMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 11),
    _NpsacpMalformedPackets_Type()
)
npsacpMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpMalformedPackets.setStatus("current")
_NpsacpMalformedPacketsPerSec_Type = Gauge32
_NpsacpMalformedPacketsPerSec_Object = MibScalar
npsacpMalformedPacketsPerSec = _NpsacpMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 12),
    _NpsacpMalformedPacketsPerSec_Type()
)
npsacpMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpMalformedPacketsPerSec.setStatus("current")
_NpsacpPacketsReceived_Type = Gauge32
_NpsacpPacketsReceived_Object = MibScalar
npsacpPacketsReceived = _NpsacpPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 13),
    _NpsacpPacketsReceived_Type()
)
npsacpPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpPacketsReceived.setStatus("current")
_NpsacpPacketsReceivedPerSec_Type = Gauge32
_NpsacpPacketsReceivedPerSec_Object = MibScalar
npsacpPacketsReceivedPerSec = _NpsacpPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 14),
    _NpsacpPacketsReceivedPerSec_Type()
)
npsacpPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpPacketsReceivedPerSec.setStatus("current")
_NpsacpPendingRequests_Type = Gauge32
_NpsacpPendingRequests_Object = MibScalar
npsacpPendingRequests = _NpsacpPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 15),
    _NpsacpPendingRequests_Type()
)
npsacpPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpPendingRequests.setStatus("current")
_NpsacpRequestTimeouts_Type = Gauge32
_NpsacpRequestTimeouts_Object = MibScalar
npsacpRequestTimeouts = _NpsacpRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 16),
    _NpsacpRequestTimeouts_Type()
)
npsacpRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpRequestTimeouts.setStatus("current")
_NpsacpRequestTimeoutsPerSec_Type = Gauge32
_NpsacpRequestTimeoutsPerSec_Object = MibScalar
npsacpRequestTimeoutsPerSec = _NpsacpRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 17),
    _NpsacpRequestTimeoutsPerSec_Type()
)
npsacpRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpRequestTimeoutsPerSec.setStatus("current")
_NpsacpRetransmissions_Type = Gauge32
_NpsacpRetransmissions_Object = MibScalar
npsacpRetransmissions = _NpsacpRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 18),
    _NpsacpRetransmissions_Type()
)
npsacpRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpRetransmissions.setStatus("current")
_NpsacpRetransmissionsPerSec_Type = Gauge32
_NpsacpRetransmissionsPerSec_Object = MibScalar
npsacpRetransmissionsPerSec = _NpsacpRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 19),
    _NpsacpRetransmissionsPerSec_Type()
)
npsacpRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpRetransmissionsPerSec.setStatus("current")
_NpsacpUnknownType_Type = Gauge32
_NpsacpUnknownType_Object = MibScalar
npsacpUnknownType = _NpsacpUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 20),
    _NpsacpUnknownType_Type()
)
npsacpUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpUnknownType.setStatus("current")
_NpsacpUnknownTypePerSec_Type = Gauge32
_NpsacpUnknownTypePerSec_Object = MibScalar
npsacpUnknownTypePerSec = _NpsacpUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 21),
    _NpsacpUnknownTypePerSec_Type()
)
npsacpUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacpUnknownTypePerSec.setStatus("current")
_NpsAccountingServer_ObjectIdentity = ObjectIdentity
npsAccountingServer = _NpsAccountingServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144)
)
_NpsacsAccountingRequests_Type = Gauge32
_NpsacsAccountingRequests_Object = MibScalar
npsacsAccountingRequests = _NpsacsAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 1),
    _NpsacsAccountingRequests_Type()
)
npsacsAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsAccountingRequests.setStatus("current")
_NpsacsAccountingRequestsPerSec_Type = Gauge32
_NpsacsAccountingRequestsPerSec_Object = MibScalar
npsacsAccountingRequestsPerSec = _NpsacsAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 2),
    _NpsacsAccountingRequestsPerSec_Type()
)
npsacsAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsAccountingRequestsPerSec.setStatus("current")
_NpsacsAccountingResponses_Type = Gauge32
_NpsacsAccountingResponses_Object = MibScalar
npsacsAccountingResponses = _NpsacsAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 3),
    _NpsacsAccountingResponses_Type()
)
npsacsAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsAccountingResponses.setStatus("current")
_NpsacsAccountingResponsesPerSec_Type = Gauge32
_NpsacsAccountingResponsesPerSec_Object = MibScalar
npsacsAccountingResponsesPerSec = _NpsacsAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 4),
    _NpsacsAccountingResponsesPerSec_Type()
)
npsacsAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsAccountingResponsesPerSec.setStatus("current")
_NpsacsBadAuthenticators_Type = Gauge32
_NpsacsBadAuthenticators_Object = MibScalar
npsacsBadAuthenticators = _NpsacsBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 5),
    _NpsacsBadAuthenticators_Type()
)
npsacsBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsBadAuthenticators.setStatus("current")
_NpsacsBadAuthenticatorsPerSec_Type = Gauge32
_NpsacsBadAuthenticatorsPerSec_Object = MibScalar
npsacsBadAuthenticatorsPerSec = _NpsacsBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 6),
    _NpsacsBadAuthenticatorsPerSec_Type()
)
npsacsBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsBadAuthenticatorsPerSec.setStatus("current")
_NpsacsDroppedPackets_Type = Gauge32
_NpsacsDroppedPackets_Object = MibScalar
npsacsDroppedPackets = _NpsacsDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 7),
    _NpsacsDroppedPackets_Type()
)
npsacsDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsDroppedPackets.setStatus("current")
_NpsacsDroppedPacketsPerSec_Type = Gauge32
_NpsacsDroppedPacketsPerSec_Object = MibScalar
npsacsDroppedPacketsPerSec = _NpsacsDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 8),
    _NpsacsDroppedPacketsPerSec_Type()
)
npsacsDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsDroppedPacketsPerSec.setStatus("current")
_NpsacsDupAccountingRequests_Type = Gauge32
_NpsacsDupAccountingRequests_Object = MibScalar
npsacsDupAccountingRequests = _NpsacsDupAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 9),
    _NpsacsDupAccountingRequests_Type()
)
npsacsDupAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsDupAccountingRequests.setStatus("current")
_NpsacsDupAccountingRequestPerSec_Type = Gauge32
_NpsacsDupAccountingRequestPerSec_Object = MibScalar
npsacsDupAccountingRequestPerSec = _NpsacsDupAccountingRequestPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 10),
    _NpsacsDupAccountingRequestPerSec_Type()
)
npsacsDupAccountingRequestPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsDupAccountingRequestPerSec.setStatus("current")
_NpsacsInvalidRequests_Type = Gauge32
_NpsacsInvalidRequests_Object = MibScalar
npsacsInvalidRequests = _NpsacsInvalidRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 11),
    _NpsacsInvalidRequests_Type()
)
npsacsInvalidRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsInvalidRequests.setStatus("current")
_NpsacsInvalidRequestsPerSec_Type = Gauge32
_NpsacsInvalidRequestsPerSec_Object = MibScalar
npsacsInvalidRequestsPerSec = _NpsacsInvalidRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 12),
    _NpsacsInvalidRequestsPerSec_Type()
)
npsacsInvalidRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsInvalidRequestsPerSec.setStatus("current")
_NpsacsMalformedPackets_Type = Gauge32
_NpsacsMalformedPackets_Object = MibScalar
npsacsMalformedPackets = _NpsacsMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 13),
    _NpsacsMalformedPackets_Type()
)
npsacsMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsMalformedPackets.setStatus("current")
_NpsacsMalformedPacketsPerSec_Type = Gauge32
_NpsacsMalformedPacketsPerSec_Object = MibScalar
npsacsMalformedPacketsPerSec = _NpsacsMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 14),
    _NpsacsMalformedPacketsPerSec_Type()
)
npsacsMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsMalformedPacketsPerSec.setStatus("current")
_NpsacsNoRecord_Type = Gauge32
_NpsacsNoRecord_Object = MibScalar
npsacsNoRecord = _NpsacsNoRecord_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 15),
    _NpsacsNoRecord_Type()
)
npsacsNoRecord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsNoRecord.setStatus("current")
_NpsacsNoRecordPerSec_Type = Gauge32
_NpsacsNoRecordPerSec_Object = MibScalar
npsacsNoRecordPerSec = _NpsacsNoRecordPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 16),
    _NpsacsNoRecordPerSec_Type()
)
npsacsNoRecordPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsNoRecordPerSec.setStatus("current")
_NpsacsPacketsReceived_Type = Gauge32
_NpsacsPacketsReceived_Object = MibScalar
npsacsPacketsReceived = _NpsacsPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 17),
    _NpsacsPacketsReceived_Type()
)
npsacsPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsPacketsReceived.setStatus("current")
_NpsacsPacketsReceivedPerSec_Type = Gauge32
_NpsacsPacketsReceivedPerSec_Object = MibScalar
npsacsPacketsReceivedPerSec = _NpsacsPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 18),
    _NpsacsPacketsReceivedPerSec_Type()
)
npsacsPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsPacketsReceivedPerSec.setStatus("current")
_NpsacsPacketsSent_Type = Gauge32
_NpsacsPacketsSent_Object = MibScalar
npsacsPacketsSent = _NpsacsPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 19),
    _NpsacsPacketsSent_Type()
)
npsacsPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsPacketsSent.setStatus("current")
_NpsacsPacketsSentPerSec_Type = Gauge32
_NpsacsPacketsSentPerSec_Object = MibScalar
npsacsPacketsSentPerSec = _NpsacsPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 20),
    _NpsacsPacketsSentPerSec_Type()
)
npsacsPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsPacketsSentPerSec.setStatus("current")
_NpsacsServerResetTime_Type = Gauge32
_NpsacsServerResetTime_Object = MibScalar
npsacsServerResetTime = _NpsacsServerResetTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 21),
    _NpsacsServerResetTime_Type()
)
npsacsServerResetTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsServerResetTime.setStatus("current")
_NpsacsServerUpTime_Type = Gauge32
_NpsacsServerUpTime_Object = MibScalar
npsacsServerUpTime = _NpsacsServerUpTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 22),
    _NpsacsServerUpTime_Type()
)
npsacsServerUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsServerUpTime.setStatus("current")
_NpsacsUnknownType_Type = Gauge32
_NpsacsUnknownType_Object = MibScalar
npsacsUnknownType = _NpsacsUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 23),
    _NpsacsUnknownType_Type()
)
npsacsUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsUnknownType.setStatus("current")
_NpsacsUnknownTypePerSec_Type = Gauge32
_NpsacsUnknownTypePerSec_Object = MibScalar
npsacsUnknownTypePerSec = _NpsacsUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 24),
    _NpsacsUnknownTypePerSec_Type()
)
npsacsUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsacsUnknownTypePerSec.setStatus("current")
_NpsAuthenticationClientsTable_Object = MibTable
npsAuthenticationClientsTable = _NpsAuthenticationClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145)
)
if mibBuilder.loadTexts:
    npsAuthenticationClientsTable.setStatus("current")
_NpsAuthenticationClientsEntry_Object = MibTableRow
npsAuthenticationClientsEntry = _NpsAuthenticationClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1)
)
npsAuthenticationClientsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "npsaucInstance"),
)
if mibBuilder.loadTexts:
    npsAuthenticationClientsEntry.setStatus("current")
_NpsaucInstance_Type = InstanceName
_NpsaucInstance_Object = MibTableColumn
npsaucInstance = _NpsaucInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 1),
    _NpsaucInstance_Type()
)
npsaucInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucInstance.setStatus("current")
_NpsaucAccessAccepts_Type = Gauge32
_NpsaucAccessAccepts_Object = MibTableColumn
npsaucAccessAccepts = _NpsaucAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 2),
    _NpsaucAccessAccepts_Type()
)
npsaucAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessAccepts.setStatus("current")
_NpsaucAccessAcceptsPerSec_Type = Gauge32
_NpsaucAccessAcceptsPerSec_Object = MibTableColumn
npsaucAccessAcceptsPerSec = _NpsaucAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 3),
    _NpsaucAccessAcceptsPerSec_Type()
)
npsaucAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessAcceptsPerSec.setStatus("current")
_NpsaucAccessChallenges_Type = Gauge32
_NpsaucAccessChallenges_Object = MibTableColumn
npsaucAccessChallenges = _NpsaucAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 4),
    _NpsaucAccessChallenges_Type()
)
npsaucAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessChallenges.setStatus("current")
_NpsaucAccessChallengesPerSec_Type = Gauge32
_NpsaucAccessChallengesPerSec_Object = MibTableColumn
npsaucAccessChallengesPerSec = _NpsaucAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 5),
    _NpsaucAccessChallengesPerSec_Type()
)
npsaucAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessChallengesPerSec.setStatus("current")
_NpsaucAccessRejects_Type = Gauge32
_NpsaucAccessRejects_Object = MibTableColumn
npsaucAccessRejects = _NpsaucAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 6),
    _NpsaucAccessRejects_Type()
)
npsaucAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessRejects.setStatus("current")
_NpsaucAccessRejectsPerSec_Type = Gauge32
_NpsaucAccessRejectsPerSec_Object = MibTableColumn
npsaucAccessRejectsPerSec = _NpsaucAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 7),
    _NpsaucAccessRejectsPerSec_Type()
)
npsaucAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessRejectsPerSec.setStatus("current")
_NpsaucAccessRequests_Type = Gauge32
_NpsaucAccessRequests_Object = MibTableColumn
npsaucAccessRequests = _NpsaucAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 8),
    _NpsaucAccessRequests_Type()
)
npsaucAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessRequests.setStatus("current")
_NpsaucAccessRequestsPerSec_Type = Gauge32
_NpsaucAccessRequestsPerSec_Object = MibTableColumn
npsaucAccessRequestsPerSec = _NpsaucAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 9),
    _NpsaucAccessRequestsPerSec_Type()
)
npsaucAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucAccessRequestsPerSec.setStatus("current")
_NpsaucBadAuthenticators_Type = Gauge32
_NpsaucBadAuthenticators_Object = MibTableColumn
npsaucBadAuthenticators = _NpsaucBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 10),
    _NpsaucBadAuthenticators_Type()
)
npsaucBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucBadAuthenticators.setStatus("current")
_NpsaucBadAuthenticatorsPerSec_Type = Gauge32
_NpsaucBadAuthenticatorsPerSec_Object = MibTableColumn
npsaucBadAuthenticatorsPerSec = _NpsaucBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 11),
    _NpsaucBadAuthenticatorsPerSec_Type()
)
npsaucBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucBadAuthenticatorsPerSec.setStatus("current")
_NpsaucDroppedPackets_Type = Gauge32
_NpsaucDroppedPackets_Object = MibTableColumn
npsaucDroppedPackets = _NpsaucDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 12),
    _NpsaucDroppedPackets_Type()
)
npsaucDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucDroppedPackets.setStatus("current")
_NpsaucDroppedPacketsPerSec_Type = Gauge32
_NpsaucDroppedPacketsPerSec_Object = MibTableColumn
npsaucDroppedPacketsPerSec = _NpsaucDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 13),
    _NpsaucDroppedPacketsPerSec_Type()
)
npsaucDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucDroppedPacketsPerSec.setStatus("current")
_NpsaucDuplicateAccessRequests_Type = Gauge32
_NpsaucDuplicateAccessRequests_Object = MibTableColumn
npsaucDuplicateAccessRequests = _NpsaucDuplicateAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 14),
    _NpsaucDuplicateAccessRequests_Type()
)
npsaucDuplicateAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucDuplicateAccessRequests.setStatus("current")
_NpsaucDupAccessRequestsPerSec_Type = Gauge32
_NpsaucDupAccessRequestsPerSec_Object = MibTableColumn
npsaucDupAccessRequestsPerSec = _NpsaucDupAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 15),
    _NpsaucDupAccessRequestsPerSec_Type()
)
npsaucDupAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucDupAccessRequestsPerSec.setStatus("current")
_NpsaucFullAccessDecisions_Type = Gauge32
_NpsaucFullAccessDecisions_Object = MibTableColumn
npsaucFullAccessDecisions = _NpsaucFullAccessDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 16),
    _NpsaucFullAccessDecisions_Type()
)
npsaucFullAccessDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucFullAccessDecisions.setStatus("current")
_NpsaucFullAccessDecisionsPerSec_Type = Gauge32
_NpsaucFullAccessDecisionsPerSec_Object = MibTableColumn
npsaucFullAccessDecisionsPerSec = _NpsaucFullAccessDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 17),
    _NpsaucFullAccessDecisionsPerSec_Type()
)
npsaucFullAccessDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucFullAccessDecisionsPerSec.setStatus("current")
_NpsaucMalformedPackets_Type = Gauge32
_NpsaucMalformedPackets_Object = MibTableColumn
npsaucMalformedPackets = _NpsaucMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 18),
    _NpsaucMalformedPackets_Type()
)
npsaucMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucMalformedPackets.setStatus("current")
_NpsaucMalformedPacketsPerSec_Type = Gauge32
_NpsaucMalformedPacketsPerSec_Object = MibTableColumn
npsaucMalformedPacketsPerSec = _NpsaucMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 19),
    _NpsaucMalformedPacketsPerSec_Type()
)
npsaucMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucMalformedPacketsPerSec.setStatus("current")
_NpsaucPacketsReceived_Type = Gauge32
_NpsaucPacketsReceived_Object = MibTableColumn
npsaucPacketsReceived = _NpsaucPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 20),
    _NpsaucPacketsReceived_Type()
)
npsaucPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucPacketsReceived.setStatus("current")
_NpsaucPacketsReceivedPerSec_Type = Gauge32
_NpsaucPacketsReceivedPerSec_Object = MibTableColumn
npsaucPacketsReceivedPerSec = _NpsaucPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 21),
    _NpsaucPacketsReceivedPerSec_Type()
)
npsaucPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucPacketsReceivedPerSec.setStatus("current")
_NpsaucPacketsSent_Type = Gauge32
_NpsaucPacketsSent_Object = MibTableColumn
npsaucPacketsSent = _NpsaucPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 22),
    _NpsaucPacketsSent_Type()
)
npsaucPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucPacketsSent.setStatus("current")
_NpsaucPacketsSentPerSec_Type = Gauge32
_NpsaucPacketsSentPerSec_Object = MibTableColumn
npsaucPacketsSentPerSec = _NpsaucPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 23),
    _NpsaucPacketsSentPerSec_Type()
)
npsaucPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucPacketsSentPerSec.setStatus("current")
_NpsaucProbationDecisions_Type = Gauge32
_NpsaucProbationDecisions_Object = MibTableColumn
npsaucProbationDecisions = _NpsaucProbationDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 24),
    _NpsaucProbationDecisions_Type()
)
npsaucProbationDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucProbationDecisions.setStatus("current")
_NpsaucProbationDecisionsPerSec_Type = Gauge32
_NpsaucProbationDecisionsPerSec_Object = MibTableColumn
npsaucProbationDecisionsPerSec = _NpsaucProbationDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 25),
    _NpsaucProbationDecisionsPerSec_Type()
)
npsaucProbationDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucProbationDecisionsPerSec.setStatus("current")
_NpsaucQuarantineDecisions_Type = Gauge32
_NpsaucQuarantineDecisions_Object = MibTableColumn
npsaucQuarantineDecisions = _NpsaucQuarantineDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 26),
    _NpsaucQuarantineDecisions_Type()
)
npsaucQuarantineDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucQuarantineDecisions.setStatus("current")
_NpsaucQuarantineDecisionsPerSec_Type = Gauge32
_NpsaucQuarantineDecisionsPerSec_Object = MibTableColumn
npsaucQuarantineDecisionsPerSec = _NpsaucQuarantineDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 27),
    _NpsaucQuarantineDecisionsPerSec_Type()
)
npsaucQuarantineDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucQuarantineDecisionsPerSec.setStatus("current")
_NpsaucUnknownType_Type = Gauge32
_NpsaucUnknownType_Object = MibTableColumn
npsaucUnknownType = _NpsaucUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 28),
    _NpsaucUnknownType_Type()
)
npsaucUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucUnknownType.setStatus("current")
_NpsaucUnknownTypePerSec_Type = Gauge32
_NpsaucUnknownTypePerSec_Object = MibTableColumn
npsaucUnknownTypePerSec = _NpsaucUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 29),
    _NpsaucUnknownTypePerSec_Type()
)
npsaucUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaucUnknownTypePerSec.setStatus("current")
_NpsAuthenticationProxy_ObjectIdentity = ObjectIdentity
npsAuthenticationProxy = _NpsAuthenticationProxy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146)
)
_NpsaupAccessAccepts_Type = Gauge32
_NpsaupAccessAccepts_Object = MibScalar
npsaupAccessAccepts = _NpsaupAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 1),
    _NpsaupAccessAccepts_Type()
)
npsaupAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessAccepts.setStatus("current")
_NpsaupAccessAcceptsPerSec_Type = Gauge32
_NpsaupAccessAcceptsPerSec_Object = MibScalar
npsaupAccessAcceptsPerSec = _NpsaupAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 2),
    _NpsaupAccessAcceptsPerSec_Type()
)
npsaupAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessAcceptsPerSec.setStatus("current")
_NpsaupAccessChallenges_Type = Gauge32
_NpsaupAccessChallenges_Object = MibScalar
npsaupAccessChallenges = _NpsaupAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 3),
    _NpsaupAccessChallenges_Type()
)
npsaupAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessChallenges.setStatus("current")
_NpsaupAccessChallengesPerSec_Type = Gauge32
_NpsaupAccessChallengesPerSec_Object = MibScalar
npsaupAccessChallengesPerSec = _NpsaupAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 4),
    _NpsaupAccessChallengesPerSec_Type()
)
npsaupAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessChallengesPerSec.setStatus("current")
_NpsaupAccessRejects_Type = Gauge32
_NpsaupAccessRejects_Object = MibScalar
npsaupAccessRejects = _NpsaupAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 5),
    _NpsaupAccessRejects_Type()
)
npsaupAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessRejects.setStatus("current")
_NpsaupAccessRejectsPerSec_Type = Gauge32
_NpsaupAccessRejectsPerSec_Object = MibScalar
npsaupAccessRejectsPerSec = _NpsaupAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 6),
    _NpsaupAccessRejectsPerSec_Type()
)
npsaupAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessRejectsPerSec.setStatus("current")
_NpsaupAccessRequests_Type = Gauge32
_NpsaupAccessRequests_Object = MibScalar
npsaupAccessRequests = _NpsaupAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 7),
    _NpsaupAccessRequests_Type()
)
npsaupAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessRequests.setStatus("current")
_NpsaupAccessRequestsPerSec_Type = Gauge32
_NpsaupAccessRequestsPerSec_Object = MibScalar
npsaupAccessRequestsPerSec = _NpsaupAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 8),
    _NpsaupAccessRequestsPerSec_Type()
)
npsaupAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupAccessRequestsPerSec.setStatus("current")
_NpsaupBadAuthenticators_Type = Gauge32
_NpsaupBadAuthenticators_Object = MibScalar
npsaupBadAuthenticators = _NpsaupBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 9),
    _NpsaupBadAuthenticators_Type()
)
npsaupBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupBadAuthenticators.setStatus("current")
_NpsaupBadAuthenticatorsPerSec_Type = Gauge32
_NpsaupBadAuthenticatorsPerSec_Object = MibScalar
npsaupBadAuthenticatorsPerSec = _NpsaupBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 10),
    _NpsaupBadAuthenticatorsPerSec_Type()
)
npsaupBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupBadAuthenticatorsPerSec.setStatus("current")
_NpsaupDroppedPackets_Type = Gauge32
_NpsaupDroppedPackets_Object = MibScalar
npsaupDroppedPackets = _NpsaupDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 11),
    _NpsaupDroppedPackets_Type()
)
npsaupDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupDroppedPackets.setStatus("current")
_NpsaupDroppedPacketsPerSec_Type = Gauge32
_NpsaupDroppedPacketsPerSec_Object = MibScalar
npsaupDroppedPacketsPerSec = _NpsaupDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 12),
    _NpsaupDroppedPacketsPerSec_Type()
)
npsaupDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupDroppedPacketsPerSec.setStatus("current")
_NpsaupFullAccessDecisions_Type = Gauge32
_NpsaupFullAccessDecisions_Object = MibScalar
npsaupFullAccessDecisions = _NpsaupFullAccessDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 13),
    _NpsaupFullAccessDecisions_Type()
)
npsaupFullAccessDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupFullAccessDecisions.setStatus("current")
_NpsaupFullAccessDecisionsPerSec_Type = Gauge32
_NpsaupFullAccessDecisionsPerSec_Object = MibScalar
npsaupFullAccessDecisionsPerSec = _NpsaupFullAccessDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 14),
    _NpsaupFullAccessDecisionsPerSec_Type()
)
npsaupFullAccessDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupFullAccessDecisionsPerSec.setStatus("current")
_NpsaupInvalidAddresses_Type = Gauge32
_NpsaupInvalidAddresses_Object = MibScalar
npsaupInvalidAddresses = _NpsaupInvalidAddresses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 15),
    _NpsaupInvalidAddresses_Type()
)
npsaupInvalidAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupInvalidAddresses.setStatus("current")
_NpsaupInvalidAddressesPerSec_Type = Gauge32
_NpsaupInvalidAddressesPerSec_Object = MibScalar
npsaupInvalidAddressesPerSec = _NpsaupInvalidAddressesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 16),
    _NpsaupInvalidAddressesPerSec_Type()
)
npsaupInvalidAddressesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupInvalidAddressesPerSec.setStatus("current")
_NpsaupMalformedPackets_Type = Gauge32
_NpsaupMalformedPackets_Object = MibScalar
npsaupMalformedPackets = _NpsaupMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 17),
    _NpsaupMalformedPackets_Type()
)
npsaupMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupMalformedPackets.setStatus("current")
_NpsaupMalformedPacketsPerSec_Type = Gauge32
_NpsaupMalformedPacketsPerSec_Object = MibScalar
npsaupMalformedPacketsPerSec = _NpsaupMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 18),
    _NpsaupMalformedPacketsPerSec_Type()
)
npsaupMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupMalformedPacketsPerSec.setStatus("current")
_NpsaupPacketsReceived_Type = Gauge32
_NpsaupPacketsReceived_Object = MibScalar
npsaupPacketsReceived = _NpsaupPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 19),
    _NpsaupPacketsReceived_Type()
)
npsaupPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupPacketsReceived.setStatus("current")
_NpsaupPacketsReceivedPerSec_Type = Gauge32
_NpsaupPacketsReceivedPerSec_Object = MibScalar
npsaupPacketsReceivedPerSec = _NpsaupPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 20),
    _NpsaupPacketsReceivedPerSec_Type()
)
npsaupPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupPacketsReceivedPerSec.setStatus("current")
_NpsaupPendingRequests_Type = Gauge32
_NpsaupPendingRequests_Object = MibScalar
npsaupPendingRequests = _NpsaupPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 21),
    _NpsaupPendingRequests_Type()
)
npsaupPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupPendingRequests.setStatus("current")
_NpsaupProbationDecisions_Type = Gauge32
_NpsaupProbationDecisions_Object = MibScalar
npsaupProbationDecisions = _NpsaupProbationDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 22),
    _NpsaupProbationDecisions_Type()
)
npsaupProbationDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupProbationDecisions.setStatus("current")
_NpsaupProbationDecisionsPerSec_Type = Gauge32
_NpsaupProbationDecisionsPerSec_Object = MibScalar
npsaupProbationDecisionsPerSec = _NpsaupProbationDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 23),
    _NpsaupProbationDecisionsPerSec_Type()
)
npsaupProbationDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupProbationDecisionsPerSec.setStatus("current")
_NpsaupQuarantineDecisions_Type = Gauge32
_NpsaupQuarantineDecisions_Object = MibScalar
npsaupQuarantineDecisions = _NpsaupQuarantineDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 24),
    _NpsaupQuarantineDecisions_Type()
)
npsaupQuarantineDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupQuarantineDecisions.setStatus("current")
_NpsaupQuarantineDecisionsPerSec_Type = Gauge32
_NpsaupQuarantineDecisionsPerSec_Object = MibScalar
npsaupQuarantineDecisionsPerSec = _NpsaupQuarantineDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 25),
    _NpsaupQuarantineDecisionsPerSec_Type()
)
npsaupQuarantineDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupQuarantineDecisionsPerSec.setStatus("current")
_NpsaupRequestTimeouts_Type = Gauge32
_NpsaupRequestTimeouts_Object = MibScalar
npsaupRequestTimeouts = _NpsaupRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 26),
    _NpsaupRequestTimeouts_Type()
)
npsaupRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupRequestTimeouts.setStatus("current")
_NpsaupRequestTimeoutsPerSec_Type = Gauge32
_NpsaupRequestTimeoutsPerSec_Object = MibScalar
npsaupRequestTimeoutsPerSec = _NpsaupRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 27),
    _NpsaupRequestTimeoutsPerSec_Type()
)
npsaupRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupRequestTimeoutsPerSec.setStatus("current")
_NpsaupRetransmissions_Type = Gauge32
_NpsaupRetransmissions_Object = MibScalar
npsaupRetransmissions = _NpsaupRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 28),
    _NpsaupRetransmissions_Type()
)
npsaupRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupRetransmissions.setStatus("current")
_NpsaupRetransmissionsPerSec_Type = Gauge32
_NpsaupRetransmissionsPerSec_Object = MibScalar
npsaupRetransmissionsPerSec = _NpsaupRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 29),
    _NpsaupRetransmissionsPerSec_Type()
)
npsaupRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupRetransmissionsPerSec.setStatus("current")
_NpsaupUnknownType_Type = Gauge32
_NpsaupUnknownType_Object = MibScalar
npsaupUnknownType = _NpsaupUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 30),
    _NpsaupUnknownType_Type()
)
npsaupUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupUnknownType.setStatus("current")
_NpsaupUnknownTypePerSec_Type = Gauge32
_NpsaupUnknownTypePerSec_Object = MibScalar
npsaupUnknownTypePerSec = _NpsaupUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 31),
    _NpsaupUnknownTypePerSec_Type()
)
npsaupUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsaupUnknownTypePerSec.setStatus("current")
_NpsAuthenticationServer_ObjectIdentity = ObjectIdentity
npsAuthenticationServer = _NpsAuthenticationServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147)
)
_NpsausAccessAccepts_Type = Gauge32
_NpsausAccessAccepts_Object = MibScalar
npsausAccessAccepts = _NpsausAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 1),
    _NpsausAccessAccepts_Type()
)
npsausAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessAccepts.setStatus("current")
_NpsausAccessAcceptsPerSec_Type = Gauge32
_NpsausAccessAcceptsPerSec_Object = MibScalar
npsausAccessAcceptsPerSec = _NpsausAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 2),
    _NpsausAccessAcceptsPerSec_Type()
)
npsausAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessAcceptsPerSec.setStatus("current")
_NpsausAccessChallenges_Type = Gauge32
_NpsausAccessChallenges_Object = MibScalar
npsausAccessChallenges = _NpsausAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 3),
    _NpsausAccessChallenges_Type()
)
npsausAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessChallenges.setStatus("current")
_NpsausAccessChallengesPerSec_Type = Gauge32
_NpsausAccessChallengesPerSec_Object = MibScalar
npsausAccessChallengesPerSec = _NpsausAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 4),
    _NpsausAccessChallengesPerSec_Type()
)
npsausAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessChallengesPerSec.setStatus("current")
_NpsausAccessRejects_Type = Gauge32
_NpsausAccessRejects_Object = MibScalar
npsausAccessRejects = _NpsausAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 5),
    _NpsausAccessRejects_Type()
)
npsausAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessRejects.setStatus("current")
_NpsausAccessRejectsPerSec_Type = Gauge32
_NpsausAccessRejectsPerSec_Object = MibScalar
npsausAccessRejectsPerSec = _NpsausAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 6),
    _NpsausAccessRejectsPerSec_Type()
)
npsausAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessRejectsPerSec.setStatus("current")
_NpsausAccessRequests_Type = Gauge32
_NpsausAccessRequests_Object = MibScalar
npsausAccessRequests = _NpsausAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 7),
    _NpsausAccessRequests_Type()
)
npsausAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessRequests.setStatus("current")
_NpsausAccessRequestsPerSec_Type = Gauge32
_NpsausAccessRequestsPerSec_Object = MibScalar
npsausAccessRequestsPerSec = _NpsausAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 8),
    _NpsausAccessRequestsPerSec_Type()
)
npsausAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausAccessRequestsPerSec.setStatus("current")
_NpsausBadAuthenticators_Type = Gauge32
_NpsausBadAuthenticators_Object = MibScalar
npsausBadAuthenticators = _NpsausBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 9),
    _NpsausBadAuthenticators_Type()
)
npsausBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausBadAuthenticators.setStatus("current")
_NpsausBadAuthenticatorsPerSec_Type = Gauge32
_NpsausBadAuthenticatorsPerSec_Object = MibScalar
npsausBadAuthenticatorsPerSec = _NpsausBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 10),
    _NpsausBadAuthenticatorsPerSec_Type()
)
npsausBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausBadAuthenticatorsPerSec.setStatus("current")
_NpsausDroppedPackets_Type = Gauge32
_NpsausDroppedPackets_Object = MibScalar
npsausDroppedPackets = _NpsausDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 11),
    _NpsausDroppedPackets_Type()
)
npsausDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausDroppedPackets.setStatus("current")
_NpsausDroppedPacketsPerSec_Type = Gauge32
_NpsausDroppedPacketsPerSec_Object = MibScalar
npsausDroppedPacketsPerSec = _NpsausDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 12),
    _NpsausDroppedPacketsPerSec_Type()
)
npsausDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausDroppedPacketsPerSec.setStatus("current")
_NpsausDuplicateAccessRequests_Type = Gauge32
_NpsausDuplicateAccessRequests_Object = MibScalar
npsausDuplicateAccessRequests = _NpsausDuplicateAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 13),
    _NpsausDuplicateAccessRequests_Type()
)
npsausDuplicateAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausDuplicateAccessRequests.setStatus("current")
_NpsausDupAccessRequestsPerSec_Type = Gauge32
_NpsausDupAccessRequestsPerSec_Object = MibScalar
npsausDupAccessRequestsPerSec = _NpsausDupAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 14),
    _NpsausDupAccessRequestsPerSec_Type()
)
npsausDupAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausDupAccessRequestsPerSec.setStatus("current")
_NpsausFullAccessDecisions_Type = Gauge32
_NpsausFullAccessDecisions_Object = MibScalar
npsausFullAccessDecisions = _NpsausFullAccessDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 15),
    _NpsausFullAccessDecisions_Type()
)
npsausFullAccessDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausFullAccessDecisions.setStatus("current")
_NpsausFullAccessDecisionsPerSec_Type = Gauge32
_NpsausFullAccessDecisionsPerSec_Object = MibScalar
npsausFullAccessDecisionsPerSec = _NpsausFullAccessDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 16),
    _NpsausFullAccessDecisionsPerSec_Type()
)
npsausFullAccessDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausFullAccessDecisionsPerSec.setStatus("current")
_NpsausInvalidRequests_Type = Gauge32
_NpsausInvalidRequests_Object = MibScalar
npsausInvalidRequests = _NpsausInvalidRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 17),
    _NpsausInvalidRequests_Type()
)
npsausInvalidRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausInvalidRequests.setStatus("current")
_NpsausInvalidRequestsPerSec_Type = Gauge32
_NpsausInvalidRequestsPerSec_Object = MibScalar
npsausInvalidRequestsPerSec = _NpsausInvalidRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 18),
    _NpsausInvalidRequestsPerSec_Type()
)
npsausInvalidRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausInvalidRequestsPerSec.setStatus("current")
_NpsausMalformedPackets_Type = Gauge32
_NpsausMalformedPackets_Object = MibScalar
npsausMalformedPackets = _NpsausMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 19),
    _NpsausMalformedPackets_Type()
)
npsausMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausMalformedPackets.setStatus("current")
_NpsausMalformedPacketsPerSec_Type = Gauge32
_NpsausMalformedPacketsPerSec_Object = MibScalar
npsausMalformedPacketsPerSec = _NpsausMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 20),
    _NpsausMalformedPacketsPerSec_Type()
)
npsausMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausMalformedPacketsPerSec.setStatus("current")
_NpsausPacketsReceived_Type = Gauge32
_NpsausPacketsReceived_Object = MibScalar
npsausPacketsReceived = _NpsausPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 21),
    _NpsausPacketsReceived_Type()
)
npsausPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausPacketsReceived.setStatus("current")
_NpsausPacketsReceivedPerSec_Type = Gauge32
_NpsausPacketsReceivedPerSec_Object = MibScalar
npsausPacketsReceivedPerSec = _NpsausPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 22),
    _NpsausPacketsReceivedPerSec_Type()
)
npsausPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausPacketsReceivedPerSec.setStatus("current")
_NpsausPacketsSent_Type = Gauge32
_NpsausPacketsSent_Object = MibScalar
npsausPacketsSent = _NpsausPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 23),
    _NpsausPacketsSent_Type()
)
npsausPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausPacketsSent.setStatus("current")
_NpsausPacketsSentPerSec_Type = Gauge32
_NpsausPacketsSentPerSec_Object = MibScalar
npsausPacketsSentPerSec = _NpsausPacketsSentPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 24),
    _NpsausPacketsSentPerSec_Type()
)
npsausPacketsSentPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausPacketsSentPerSec.setStatus("current")
_NpsausProbationDecisions_Type = Gauge32
_NpsausProbationDecisions_Object = MibScalar
npsausProbationDecisions = _NpsausProbationDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 25),
    _NpsausProbationDecisions_Type()
)
npsausProbationDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausProbationDecisions.setStatus("current")
_NpsausProbationDecisionsPerSec_Type = Gauge32
_NpsausProbationDecisionsPerSec_Object = MibScalar
npsausProbationDecisionsPerSec = _NpsausProbationDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 26),
    _NpsausProbationDecisionsPerSec_Type()
)
npsausProbationDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausProbationDecisionsPerSec.setStatus("current")
_NpsausQuarantineDecisions_Type = Gauge32
_NpsausQuarantineDecisions_Object = MibScalar
npsausQuarantineDecisions = _NpsausQuarantineDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 27),
    _NpsausQuarantineDecisions_Type()
)
npsausQuarantineDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausQuarantineDecisions.setStatus("current")
_NpsausQuarantineDecisionsPerSec_Type = Gauge32
_NpsausQuarantineDecisionsPerSec_Object = MibScalar
npsausQuarantineDecisionsPerSec = _NpsausQuarantineDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 28),
    _NpsausQuarantineDecisionsPerSec_Type()
)
npsausQuarantineDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausQuarantineDecisionsPerSec.setStatus("current")
_NpsausServerResetTime_Type = Gauge32
_NpsausServerResetTime_Object = MibScalar
npsausServerResetTime = _NpsausServerResetTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 29),
    _NpsausServerResetTime_Type()
)
npsausServerResetTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausServerResetTime.setStatus("current")
_NpsausServerUpTime_Type = Gauge32
_NpsausServerUpTime_Object = MibScalar
npsausServerUpTime = _NpsausServerUpTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 30),
    _NpsausServerUpTime_Type()
)
npsausServerUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausServerUpTime.setStatus("current")
_NpsausUnknownType_Type = Gauge32
_NpsausUnknownType_Object = MibScalar
npsausUnknownType = _NpsausUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 31),
    _NpsausUnknownType_Type()
)
npsausUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausUnknownType.setStatus("current")
_NpsausUnknownTypePerSec_Type = Gauge32
_NpsausUnknownTypePerSec_Object = MibScalar
npsausUnknownTypePerSec = _NpsausUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 32),
    _NpsausUnknownTypePerSec_Type()
)
npsausUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsausUnknownTypePerSec.setStatus("current")
_NpsPolicyEngine_ObjectIdentity = ObjectIdentity
npsPolicyEngine = _NpsPolicyEngine_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 148)
)
_NpspeLastRoundTripTime_Type = Gauge32
_NpspeLastRoundTripTime_Object = MibScalar
npspeLastRoundTripTime = _NpspeLastRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 1),
    _NpspeLastRoundTripTime_Type()
)
npspeLastRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npspeLastRoundTripTime.setStatus("current")
_NpspeMatchedRemoteAccessPolicies_Type = Gauge32
_NpspeMatchedRemoteAccessPolicies_Object = MibScalar
npspeMatchedRemoteAccessPolicies = _NpspeMatchedRemoteAccessPolicies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 2),
    _NpspeMatchedRemoteAccessPolicies_Type()
)
npspeMatchedRemoteAccessPolicies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npspeMatchedRemoteAccessPolicies.setStatus("current")
_NpspeMatchRemoteAccPolicyPerSec_Type = Gauge32
_NpspeMatchRemoteAccPolicyPerSec_Object = MibScalar
npspeMatchRemoteAccPolicyPerSec = _NpspeMatchRemoteAccPolicyPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 3),
    _NpspeMatchRemoteAccPolicyPerSec_Type()
)
npspeMatchRemoteAccPolicyPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npspeMatchRemoteAccPolicyPerSec.setStatus("current")
_NpspePendingRequests_Type = Gauge32
_NpspePendingRequests_Object = MibScalar
npspePendingRequests = _NpspePendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 4),
    _NpspePendingRequests_Type()
)
npspePendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npspePendingRequests.setStatus("current")
_NpsRemoteAccountingServersTable_Object = MibTable
npsRemoteAccountingServersTable = _NpsRemoteAccountingServersTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149)
)
if mibBuilder.loadTexts:
    npsRemoteAccountingServersTable.setStatus("current")
_NpsRemoteAccountingServersEntry_Object = MibTableRow
npsRemoteAccountingServersEntry = _NpsRemoteAccountingServersEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1)
)
npsRemoteAccountingServersEntry.setIndexNames(
    (0, "INFORMANT-ADV", "npsracsInstance"),
)
if mibBuilder.loadTexts:
    npsRemoteAccountingServersEntry.setStatus("current")
_NpsracsInstance_Type = InstanceName
_NpsracsInstance_Object = MibTableColumn
npsracsInstance = _NpsracsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 1),
    _NpsracsInstance_Type()
)
npsracsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsInstance.setStatus("current")
_NpsracsAccountingRequests_Type = Gauge32
_NpsracsAccountingRequests_Object = MibTableColumn
npsracsAccountingRequests = _NpsracsAccountingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 2),
    _NpsracsAccountingRequests_Type()
)
npsracsAccountingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsAccountingRequests.setStatus("current")
_NpsracsAccountingRequestsPerSec_Type = Gauge32
_NpsracsAccountingRequestsPerSec_Object = MibTableColumn
npsracsAccountingRequestsPerSec = _NpsracsAccountingRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 3),
    _NpsracsAccountingRequestsPerSec_Type()
)
npsracsAccountingRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsAccountingRequestsPerSec.setStatus("current")
_NpsracsAccountingResponses_Type = Gauge32
_NpsracsAccountingResponses_Object = MibTableColumn
npsracsAccountingResponses = _NpsracsAccountingResponses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 4),
    _NpsracsAccountingResponses_Type()
)
npsracsAccountingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsAccountingResponses.setStatus("current")
_NpsracsAccountingResponsesPerSec_Type = Gauge32
_NpsracsAccountingResponsesPerSec_Object = MibTableColumn
npsracsAccountingResponsesPerSec = _NpsracsAccountingResponsesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 5),
    _NpsracsAccountingResponsesPerSec_Type()
)
npsracsAccountingResponsesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsAccountingResponsesPerSec.setStatus("current")
_NpsracsBadAuthenticators_Type = Gauge32
_NpsracsBadAuthenticators_Object = MibTableColumn
npsracsBadAuthenticators = _NpsracsBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 6),
    _NpsracsBadAuthenticators_Type()
)
npsracsBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsBadAuthenticators.setStatus("current")
_NpsracsBadAuthenticatorsPerSec_Type = Gauge32
_NpsracsBadAuthenticatorsPerSec_Object = MibTableColumn
npsracsBadAuthenticatorsPerSec = _NpsracsBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 7),
    _NpsracsBadAuthenticatorsPerSec_Type()
)
npsracsBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsBadAuthenticatorsPerSec.setStatus("current")
_NpsracsDroppedPackets_Type = Gauge32
_NpsracsDroppedPackets_Object = MibTableColumn
npsracsDroppedPackets = _NpsracsDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 8),
    _NpsracsDroppedPackets_Type()
)
npsracsDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsDroppedPackets.setStatus("current")
_NpsracsDroppedPacketsPerSec_Type = Gauge32
_NpsracsDroppedPacketsPerSec_Object = MibTableColumn
npsracsDroppedPacketsPerSec = _NpsracsDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 9),
    _NpsracsDroppedPacketsPerSec_Type()
)
npsracsDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsDroppedPacketsPerSec.setStatus("current")
_NpsracsLastRoundTripTime_Type = Gauge32
_NpsracsLastRoundTripTime_Object = MibTableColumn
npsracsLastRoundTripTime = _NpsracsLastRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 10),
    _NpsracsLastRoundTripTime_Type()
)
npsracsLastRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsLastRoundTripTime.setStatus("current")
_NpsracsMalformedPackets_Type = Gauge32
_NpsracsMalformedPackets_Object = MibTableColumn
npsracsMalformedPackets = _NpsracsMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 11),
    _NpsracsMalformedPackets_Type()
)
npsracsMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsMalformedPackets.setStatus("current")
_NpsracsMalformedPacketsPerSec_Type = Gauge32
_NpsracsMalformedPacketsPerSec_Object = MibTableColumn
npsracsMalformedPacketsPerSec = _NpsracsMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 12),
    _NpsracsMalformedPacketsPerSec_Type()
)
npsracsMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsMalformedPacketsPerSec.setStatus("current")
_NpsracsPacketsReceived_Type = Gauge32
_NpsracsPacketsReceived_Object = MibTableColumn
npsracsPacketsReceived = _NpsracsPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 13),
    _NpsracsPacketsReceived_Type()
)
npsracsPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsPacketsReceived.setStatus("current")
_NpsracsPacketsReceivedPerSec_Type = Gauge32
_NpsracsPacketsReceivedPerSec_Object = MibTableColumn
npsracsPacketsReceivedPerSec = _NpsracsPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 14),
    _NpsracsPacketsReceivedPerSec_Type()
)
npsracsPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsPacketsReceivedPerSec.setStatus("current")
_NpsracsPendingRequests_Type = Gauge32
_NpsracsPendingRequests_Object = MibTableColumn
npsracsPendingRequests = _NpsracsPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 15),
    _NpsracsPendingRequests_Type()
)
npsracsPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsPendingRequests.setStatus("current")
_NpsracsPortNumber_Type = Gauge32
_NpsracsPortNumber_Object = MibTableColumn
npsracsPortNumber = _NpsracsPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 16),
    _NpsracsPortNumber_Type()
)
npsracsPortNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsPortNumber.setStatus("current")
_NpsracsRequestTimeouts_Type = Gauge32
_NpsracsRequestTimeouts_Object = MibTableColumn
npsracsRequestTimeouts = _NpsracsRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 17),
    _NpsracsRequestTimeouts_Type()
)
npsracsRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsRequestTimeouts.setStatus("current")
_NpsracsRequestTimeoutsPerSec_Type = Gauge32
_NpsracsRequestTimeoutsPerSec_Object = MibTableColumn
npsracsRequestTimeoutsPerSec = _NpsracsRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 18),
    _NpsracsRequestTimeoutsPerSec_Type()
)
npsracsRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsRequestTimeoutsPerSec.setStatus("current")
_NpsracsRetransmissions_Type = Gauge32
_NpsracsRetransmissions_Object = MibTableColumn
npsracsRetransmissions = _NpsracsRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 19),
    _NpsracsRetransmissions_Type()
)
npsracsRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsRetransmissions.setStatus("current")
_NpsracsRetransmissionsPerSec_Type = Gauge32
_NpsracsRetransmissionsPerSec_Object = MibTableColumn
npsracsRetransmissionsPerSec = _NpsracsRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 20),
    _NpsracsRetransmissionsPerSec_Type()
)
npsracsRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsRetransmissionsPerSec.setStatus("current")
_NpsracsUnknownType_Type = Gauge32
_NpsracsUnknownType_Object = MibTableColumn
npsracsUnknownType = _NpsracsUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 21),
    _NpsracsUnknownType_Type()
)
npsracsUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsUnknownType.setStatus("current")
_NpsracsUnknownTypePerSec_Type = Gauge32
_NpsracsUnknownTypePerSec_Object = MibTableColumn
npsracsUnknownTypePerSec = _NpsracsUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 22),
    _NpsracsUnknownTypePerSec_Type()
)
npsracsUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsracsUnknownTypePerSec.setStatus("current")
_NpsRemoteAuthServersTable_Object = MibTable
npsRemoteAuthServersTable = _NpsRemoteAuthServersTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150)
)
if mibBuilder.loadTexts:
    npsRemoteAuthServersTable.setStatus("current")
_NpsRemoteAuthServersEntry_Object = MibTableRow
npsRemoteAuthServersEntry = _NpsRemoteAuthServersEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1)
)
npsRemoteAuthServersEntry.setIndexNames(
    (0, "INFORMANT-ADV", "npsrausInstance"),
)
if mibBuilder.loadTexts:
    npsRemoteAuthServersEntry.setStatus("current")
_NpsrausInstance_Type = InstanceName
_NpsrausInstance_Object = MibTableColumn
npsrausInstance = _NpsrausInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 1),
    _NpsrausInstance_Type()
)
npsrausInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausInstance.setStatus("current")
_NpsrausAccessAccepts_Type = Gauge32
_NpsrausAccessAccepts_Object = MibTableColumn
npsrausAccessAccepts = _NpsrausAccessAccepts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 2),
    _NpsrausAccessAccepts_Type()
)
npsrausAccessAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessAccepts.setStatus("current")
_NpsrausAccessAcceptsPerSec_Type = Gauge32
_NpsrausAccessAcceptsPerSec_Object = MibTableColumn
npsrausAccessAcceptsPerSec = _NpsrausAccessAcceptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 3),
    _NpsrausAccessAcceptsPerSec_Type()
)
npsrausAccessAcceptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessAcceptsPerSec.setStatus("current")
_NpsrausAccessChallenges_Type = Gauge32
_NpsrausAccessChallenges_Object = MibTableColumn
npsrausAccessChallenges = _NpsrausAccessChallenges_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 4),
    _NpsrausAccessChallenges_Type()
)
npsrausAccessChallenges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessChallenges.setStatus("current")
_NpsrausAccessChallengesPerSec_Type = Gauge32
_NpsrausAccessChallengesPerSec_Object = MibTableColumn
npsrausAccessChallengesPerSec = _NpsrausAccessChallengesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 5),
    _NpsrausAccessChallengesPerSec_Type()
)
npsrausAccessChallengesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessChallengesPerSec.setStatus("current")
_NpsrausAccessRejects_Type = Gauge32
_NpsrausAccessRejects_Object = MibTableColumn
npsrausAccessRejects = _NpsrausAccessRejects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 6),
    _NpsrausAccessRejects_Type()
)
npsrausAccessRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessRejects.setStatus("current")
_NpsrausAccessRejectsPerSec_Type = Gauge32
_NpsrausAccessRejectsPerSec_Object = MibTableColumn
npsrausAccessRejectsPerSec = _NpsrausAccessRejectsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 7),
    _NpsrausAccessRejectsPerSec_Type()
)
npsrausAccessRejectsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessRejectsPerSec.setStatus("current")
_NpsrausAccessRequests_Type = Gauge32
_NpsrausAccessRequests_Object = MibTableColumn
npsrausAccessRequests = _NpsrausAccessRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 8),
    _NpsrausAccessRequests_Type()
)
npsrausAccessRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessRequests.setStatus("current")
_NpsrausAccessRequestsPerSec_Type = Gauge32
_NpsrausAccessRequestsPerSec_Object = MibTableColumn
npsrausAccessRequestsPerSec = _NpsrausAccessRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 9),
    _NpsrausAccessRequestsPerSec_Type()
)
npsrausAccessRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausAccessRequestsPerSec.setStatus("current")
_NpsrausBadAuthenticators_Type = Gauge32
_NpsrausBadAuthenticators_Object = MibTableColumn
npsrausBadAuthenticators = _NpsrausBadAuthenticators_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 10),
    _NpsrausBadAuthenticators_Type()
)
npsrausBadAuthenticators.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausBadAuthenticators.setStatus("current")
_NpsrausBadAuthenticatorsPerSec_Type = Gauge32
_NpsrausBadAuthenticatorsPerSec_Object = MibTableColumn
npsrausBadAuthenticatorsPerSec = _NpsrausBadAuthenticatorsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 11),
    _NpsrausBadAuthenticatorsPerSec_Type()
)
npsrausBadAuthenticatorsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausBadAuthenticatorsPerSec.setStatus("current")
_NpsrausDroppedPackets_Type = Gauge32
_NpsrausDroppedPackets_Object = MibTableColumn
npsrausDroppedPackets = _NpsrausDroppedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 12),
    _NpsrausDroppedPackets_Type()
)
npsrausDroppedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausDroppedPackets.setStatus("current")
_NpsrausDroppedPacketsPerSec_Type = Gauge32
_NpsrausDroppedPacketsPerSec_Object = MibTableColumn
npsrausDroppedPacketsPerSec = _NpsrausDroppedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 13),
    _NpsrausDroppedPacketsPerSec_Type()
)
npsrausDroppedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausDroppedPacketsPerSec.setStatus("current")
_NpsrausFullAccessDecisions_Type = Gauge32
_NpsrausFullAccessDecisions_Object = MibTableColumn
npsrausFullAccessDecisions = _NpsrausFullAccessDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 14),
    _NpsrausFullAccessDecisions_Type()
)
npsrausFullAccessDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausFullAccessDecisions.setStatus("current")
_NpsrausFullAccessDecisionsPerSec_Type = Gauge32
_NpsrausFullAccessDecisionsPerSec_Object = MibTableColumn
npsrausFullAccessDecisionsPerSec = _NpsrausFullAccessDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 15),
    _NpsrausFullAccessDecisionsPerSec_Type()
)
npsrausFullAccessDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausFullAccessDecisionsPerSec.setStatus("current")
_NpsrausLastRoundTripTime_Type = Gauge32
_NpsrausLastRoundTripTime_Object = MibTableColumn
npsrausLastRoundTripTime = _NpsrausLastRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 16),
    _NpsrausLastRoundTripTime_Type()
)
npsrausLastRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausLastRoundTripTime.setStatus("current")
_NpsrausMalformedPackets_Type = Gauge32
_NpsrausMalformedPackets_Object = MibTableColumn
npsrausMalformedPackets = _NpsrausMalformedPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 17),
    _NpsrausMalformedPackets_Type()
)
npsrausMalformedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausMalformedPackets.setStatus("current")
_NpsrausMalformedPacketsPerSec_Type = Gauge32
_NpsrausMalformedPacketsPerSec_Object = MibTableColumn
npsrausMalformedPacketsPerSec = _NpsrausMalformedPacketsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 18),
    _NpsrausMalformedPacketsPerSec_Type()
)
npsrausMalformedPacketsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausMalformedPacketsPerSec.setStatus("current")
_NpsrausPacketsReceived_Type = Gauge32
_NpsrausPacketsReceived_Object = MibTableColumn
npsrausPacketsReceived = _NpsrausPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 19),
    _NpsrausPacketsReceived_Type()
)
npsrausPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausPacketsReceived.setStatus("current")
_NpsrausPacketsReceivedPerSec_Type = Gauge32
_NpsrausPacketsReceivedPerSec_Object = MibTableColumn
npsrausPacketsReceivedPerSec = _NpsrausPacketsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 20),
    _NpsrausPacketsReceivedPerSec_Type()
)
npsrausPacketsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausPacketsReceivedPerSec.setStatus("current")
_NpsrausPendingRequests_Type = Gauge32
_NpsrausPendingRequests_Object = MibTableColumn
npsrausPendingRequests = _NpsrausPendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 21),
    _NpsrausPendingRequests_Type()
)
npsrausPendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausPendingRequests.setStatus("current")
_NpsrausPortNumber_Type = Gauge32
_NpsrausPortNumber_Object = MibTableColumn
npsrausPortNumber = _NpsrausPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 22),
    _NpsrausPortNumber_Type()
)
npsrausPortNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausPortNumber.setStatus("current")
_NpsrausProbationDecisions_Type = Gauge32
_NpsrausProbationDecisions_Object = MibTableColumn
npsrausProbationDecisions = _NpsrausProbationDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 23),
    _NpsrausProbationDecisions_Type()
)
npsrausProbationDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausProbationDecisions.setStatus("current")
_NpsrausProbationDecisionsPerSec_Type = Gauge32
_NpsrausProbationDecisionsPerSec_Object = MibTableColumn
npsrausProbationDecisionsPerSec = _NpsrausProbationDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 24),
    _NpsrausProbationDecisionsPerSec_Type()
)
npsrausProbationDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausProbationDecisionsPerSec.setStatus("current")
_NpsrausQuarantineDecisions_Type = Gauge32
_NpsrausQuarantineDecisions_Object = MibTableColumn
npsrausQuarantineDecisions = _NpsrausQuarantineDecisions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 25),
    _NpsrausQuarantineDecisions_Type()
)
npsrausQuarantineDecisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausQuarantineDecisions.setStatus("current")
_NpsrausQuarantineDecisionsPerSec_Type = Gauge32
_NpsrausQuarantineDecisionsPerSec_Object = MibTableColumn
npsrausQuarantineDecisionsPerSec = _NpsrausQuarantineDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 26),
    _NpsrausQuarantineDecisionsPerSec_Type()
)
npsrausQuarantineDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausQuarantineDecisionsPerSec.setStatus("current")
_NpsrausRequestTimeouts_Type = Gauge32
_NpsrausRequestTimeouts_Object = MibTableColumn
npsrausRequestTimeouts = _NpsrausRequestTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 27),
    _NpsrausRequestTimeouts_Type()
)
npsrausRequestTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausRequestTimeouts.setStatus("current")
_NpsrausRequestTimeoutsPerSec_Type = Gauge32
_NpsrausRequestTimeoutsPerSec_Object = MibTableColumn
npsrausRequestTimeoutsPerSec = _NpsrausRequestTimeoutsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 28),
    _NpsrausRequestTimeoutsPerSec_Type()
)
npsrausRequestTimeoutsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausRequestTimeoutsPerSec.setStatus("current")
_NpsrausRetransmissions_Type = Gauge32
_NpsrausRetransmissions_Object = MibTableColumn
npsrausRetransmissions = _NpsrausRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 29),
    _NpsrausRetransmissions_Type()
)
npsrausRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausRetransmissions.setStatus("current")
_NpsrausRetransmissionsPerSec_Type = Gauge32
_NpsrausRetransmissionsPerSec_Object = MibTableColumn
npsrausRetransmissionsPerSec = _NpsrausRetransmissionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 30),
    _NpsrausRetransmissionsPerSec_Type()
)
npsrausRetransmissionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausRetransmissionsPerSec.setStatus("current")
_NpsrausUnknownType_Type = Gauge32
_NpsrausUnknownType_Object = MibTableColumn
npsrausUnknownType = _NpsrausUnknownType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 31),
    _NpsrausUnknownType_Type()
)
npsrausUnknownType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausUnknownType.setStatus("current")
_NpsrausUnknownTypePerSec_Type = Gauge32
_NpsrausUnknownTypePerSec_Object = MibTableColumn
npsrausUnknownTypePerSec = _NpsrausUnknownTypePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 32),
    _NpsrausUnknownTypePerSec_Type()
)
npsrausUnknownTypePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsrausUnknownTypePerSec.setStatus("current")
_NpsSystemHealthValidatorsTable_Object = MibTable
npsSystemHealthValidatorsTable = _NpsSystemHealthValidatorsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151)
)
if mibBuilder.loadTexts:
    npsSystemHealthValidatorsTable.setStatus("current")
_NpsSystemHealthValidatorsEntry_Object = MibTableRow
npsSystemHealthValidatorsEntry = _NpsSystemHealthValidatorsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1)
)
npsSystemHealthValidatorsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "npsshvInstance"),
)
if mibBuilder.loadTexts:
    npsSystemHealthValidatorsEntry.setStatus("current")
_NpsshvInstance_Type = InstanceName
_NpsshvInstance_Object = MibTableColumn
npsshvInstance = _NpsshvInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 1),
    _NpsshvInstance_Type()
)
npsshvInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvInstance.setStatus("current")
_NpsshvShvClientCommFailures_Type = Gauge32
_NpsshvShvClientCommFailures_Object = MibTableColumn
npsshvShvClientCommFailures = _NpsshvShvClientCommFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 2),
    _NpsshvShvClientCommFailures_Type()
)
npsshvShvClientCommFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvClientCommFailures.setStatus("current")
_NpsshvShvClientCommFailurePerSec_Type = Gauge32
_NpsshvShvClientCommFailurePerSec_Object = MibTableColumn
npsshvShvClientCommFailurePerSec = _NpsshvShvClientCommFailurePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 3),
    _NpsshvShvClientCommFailurePerSec_Type()
)
npsshvShvClientCommFailurePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvClientCommFailurePerSec.setStatus("current")
_NpsshvShvClientComponentFailures_Type = Gauge32
_NpsshvShvClientComponentFailures_Object = MibTableColumn
npsshvShvClientComponentFailures = _NpsshvShvClientComponentFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 4),
    _NpsshvShvClientComponentFailures_Type()
)
npsshvShvClientComponentFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvClientComponentFailures.setStatus("current")
_NpsshvShvClientComponentFailSec_Type = Gauge32
_NpsshvShvClientComponentFailSec_Object = MibTableColumn
npsshvShvClientComponentFailSec = _NpsshvShvClientComponentFailSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 5),
    _NpsshvShvClientComponentFailSec_Type()
)
npsshvShvClientComponentFailSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvClientComponentFailSec.setStatus("current")
_NpsshvShvCompliances_Type = Gauge32
_NpsshvShvCompliances_Object = MibTableColumn
npsshvShvCompliances = _NpsshvShvCompliances_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 6),
    _NpsshvShvCompliances_Type()
)
npsshvShvCompliances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvCompliances.setStatus("current")
_NpsshvShvCompliancesPerSec_Type = Gauge32
_NpsshvShvCompliancesPerSec_Object = MibTableColumn
npsshvShvCompliancesPerSec = _NpsshvShvCompliancesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 7),
    _NpsshvShvCompliancesPerSec_Type()
)
npsshvShvCompliancesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvCompliancesPerSec.setStatus("current")
_NpsshvShvLastRoundTripTime_Type = Gauge32
_NpsshvShvLastRoundTripTime_Object = MibTableColumn
npsshvShvLastRoundTripTime = _NpsshvShvLastRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 8),
    _NpsshvShvLastRoundTripTime_Type()
)
npsshvShvLastRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvLastRoundTripTime.setStatus("current")
_NpsshvShvNonCompliances_Type = Gauge32
_NpsshvShvNonCompliances_Object = MibTableColumn
npsshvShvNonCompliances = _NpsshvShvNonCompliances_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 9),
    _NpsshvShvNonCompliances_Type()
)
npsshvShvNonCompliances.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvNonCompliances.setStatus("current")
_NpsshvShvNonCompliancesPerSec_Type = Gauge32
_NpsshvShvNonCompliancesPerSec_Object = MibTableColumn
npsshvShvNonCompliancesPerSec = _NpsshvShvNonCompliancesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 10),
    _NpsshvShvNonCompliancesPerSec_Type()
)
npsshvShvNonCompliancesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvNonCompliancesPerSec.setStatus("current")
_NpsshvShvNoneFailures_Type = Gauge32
_NpsshvShvNoneFailures_Object = MibTableColumn
npsshvShvNoneFailures = _NpsshvShvNoneFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 11),
    _NpsshvShvNoneFailures_Type()
)
npsshvShvNoneFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvNoneFailures.setStatus("current")
_NpsshvShvNoneFailuresPerSec_Type = Gauge32
_NpsshvShvNoneFailuresPerSec_Object = MibTableColumn
npsshvShvNoneFailuresPerSec = _NpsshvShvNoneFailuresPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 12),
    _NpsshvShvNoneFailuresPerSec_Type()
)
npsshvShvNoneFailuresPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvNoneFailuresPerSec.setStatus("current")
_NpsshvShvOtherFailures_Type = Gauge32
_NpsshvShvOtherFailures_Object = MibTableColumn
npsshvShvOtherFailures = _NpsshvShvOtherFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 13),
    _NpsshvShvOtherFailures_Type()
)
npsshvShvOtherFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvOtherFailures.setStatus("current")
_NpsshvShvOtherFailuresPerSec_Type = Gauge32
_NpsshvShvOtherFailuresPerSec_Object = MibTableColumn
npsshvShvOtherFailuresPerSec = _NpsshvShvOtherFailuresPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 14),
    _NpsshvShvOtherFailuresPerSec_Type()
)
npsshvShvOtherFailuresPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvOtherFailuresPerSec.setStatus("current")
_NpsshvShvServerCommFailures_Type = Gauge32
_NpsshvShvServerCommFailures_Object = MibTableColumn
npsshvShvServerCommFailures = _NpsshvShvServerCommFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 15),
    _NpsshvShvServerCommFailures_Type()
)
npsshvShvServerCommFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvServerCommFailures.setStatus("current")
_NpsshvShvServerCommnFailPerSec_Type = Gauge32
_NpsshvShvServerCommnFailPerSec_Object = MibTableColumn
npsshvShvServerCommnFailPerSec = _NpsshvShvServerCommnFailPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 16),
    _NpsshvShvServerCommnFailPerSec_Type()
)
npsshvShvServerCommnFailPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvServerCommnFailPerSec.setStatus("current")
_NpsshvShvServerComponentFailures_Type = Gauge32
_NpsshvShvServerComponentFailures_Object = MibTableColumn
npsshvShvServerComponentFailures = _NpsshvShvServerComponentFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 17),
    _NpsshvShvServerComponentFailures_Type()
)
npsshvShvServerComponentFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvServerComponentFailures.setStatus("current")
_NpsshvShvServerCompFailurePerSec_Type = Gauge32
_NpsshvShvServerCompFailurePerSec_Object = MibTableColumn
npsshvShvServerCompFailurePerSec = _NpsshvShvServerCompFailurePerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 18),
    _NpsshvShvServerCompFailurePerSec_Type()
)
npsshvShvServerCompFailurePerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    npsshvShvServerCompFailurePerSec.setStatus("current")
_OcspServerConnectionsTable_Object = MibTable
ocspServerConnectionsTable = _OcspServerConnectionsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 152)
)
if mibBuilder.loadTexts:
    ocspServerConnectionsTable.setStatus("current")
_OcspServerConnectionsEntry_Object = MibTableRow
ocspServerConnectionsEntry = _OcspServerConnectionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 152, 1)
)
ocspServerConnectionsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "ocspscInstance"),
)
if mibBuilder.loadTexts:
    ocspServerConnectionsEntry.setStatus("current")
_OcspscInstance_Type = InstanceName
_OcspscInstance_Object = MibTableColumn
ocspscInstance = _OcspscInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 152, 1, 1),
    _OcspscInstance_Type()
)
ocspscInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocspscInstance.setStatus("current")
_OcspscActiveConnections_Type = Gauge32
_OcspscActiveConnections_Object = MibTableColumn
ocspscActiveConnections = _OcspscActiveConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 152, 1, 2),
    _OcspscActiveConnections_Type()
)
ocspscActiveConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ocspscActiveConnections.setStatus("current")
_RpcPerHTTPProxy_ObjectIdentity = ObjectIdentity
rpcPerHTTPProxy = _RpcPerHTTPProxy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153)
)
if mibBuilder.loadTexts:
    rpcPerHTTPProxy.setStatus("current")
_RpcpAttemptLoadBalBrkRqstsPerSec_Type = Gauge32
_RpcpAttemptLoadBalBrkRqstsPerSec_Object = MibScalar
rpcpAttemptLoadBalBrkRqstsPerSec = _RpcpAttemptLoadBalBrkRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 1),
    _RpcpAttemptLoadBalBrkRqstsPerSec_Type()
)
rpcpAttemptLoadBalBrkRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpAttemptLoadBalBrkRqstsPerSec.setStatus("current")
_RpcpAttemptLoadBalDecisionPerSec_Type = Gauge32
_RpcpAttemptLoadBalDecisionPerSec_Object = MibScalar
rpcpAttemptLoadBalDecisionPerSec = _RpcpAttemptLoadBalDecisionPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 2),
    _RpcpAttemptLoadBalDecisionPerSec_Type()
)
rpcpAttemptLoadBalDecisionPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpAttemptLoadBalDecisionPerSec.setStatus("current")
_RpcpCurNumInRPCOverHTTPConn_Type = Gauge32
_RpcpCurNumInRPCOverHTTPConn_Object = MibScalar
rpcpCurNumInRPCOverHTTPConn = _RpcpCurNumInRPCOverHTTPConn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 3),
    _RpcpCurNumInRPCOverHTTPConn_Type()
)
rpcpCurNumInRPCOverHTTPConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpCurNumInRPCOverHTTPConn.setStatus("current")
_RpcpCurrentNumberOfUniqueUsers_Type = Gauge32
_RpcpCurrentNumberOfUniqueUsers_Object = MibScalar
rpcpCurrentNumberOfUniqueUsers = _RpcpCurrentNumberOfUniqueUsers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 4),
    _RpcpCurrentNumberOfUniqueUsers_Type()
)
rpcpCurrentNumberOfUniqueUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpCurrentNumberOfUniqueUsers.setStatus("current")
_RpcpFailLoadBalBrokerRqstsPerSec_Type = Gauge32
_RpcpFailLoadBalBrokerRqstsPerSec_Object = MibScalar
rpcpFailLoadBalBrokerRqstsPerSec = _RpcpFailLoadBalBrokerRqstsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 5),
    _RpcpFailLoadBalBrokerRqstsPerSec_Type()
)
rpcpFailLoadBalBrokerRqstsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpFailLoadBalBrokerRqstsPerSec.setStatus("current")
_RpcpFailLoadBalDecisionsPerSec_Type = Gauge32
_RpcpFailLoadBalDecisionsPerSec_Object = MibScalar
rpcpFailLoadBalDecisionsPerSec = _RpcpFailLoadBalDecisionsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 6),
    _RpcpFailLoadBalDecisionsPerSec_Type()
)
rpcpFailLoadBalDecisionsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpFailLoadBalDecisionsPerSec.setStatus("current")
_RpcpNumBackEndConnAttemptsPerSec_Type = Gauge32
_RpcpNumBackEndConnAttemptsPerSec_Object = MibScalar
rpcpNumBackEndConnAttemptsPerSec = _RpcpNumBackEndConnAttemptsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 7),
    _RpcpNumBackEndConnAttemptsPerSec_Type()
)
rpcpNumBackEndConnAttemptsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpNumBackEndConnAttemptsPerSec.setStatus("current")
_RpcpNumFailBackEndConnAttmPerSec_Type = Gauge32
_RpcpNumFailBackEndConnAttmPerSec_Object = MibScalar
rpcpNumFailBackEndConnAttmPerSec = _RpcpNumFailBackEndConnAttmPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 8),
    _RpcpNumFailBackEndConnAttmPerSec_Type()
)
rpcpNumFailBackEndConnAttmPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpNumFailBackEndConnAttmPerSec.setStatus("current")
_RpcpRPCPerHTTPRequestsPerSecond_Type = Gauge32
_RpcpRPCPerHTTPRequestsPerSecond_Object = MibScalar
rpcpRPCPerHTTPRequestsPerSecond = _RpcpRPCPerHTTPRequestsPerSecond_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 9),
    _RpcpRPCPerHTTPRequestsPerSecond_Type()
)
rpcpRPCPerHTTPRequestsPerSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpRPCPerHTTPRequestsPerSecond.setStatus("current")
_RpcpTotalInBandwidthBackEndSrvrs_Type = Gauge32
_RpcpTotalInBandwidthBackEndSrvrs_Object = MibScalar
rpcpTotalInBandwidthBackEndSrvrs = _RpcpTotalInBandwidthBackEndSrvrs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 10),
    _RpcpTotalInBandwidthBackEndSrvrs_Type()
)
rpcpTotalInBandwidthBackEndSrvrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpTotalInBandwidthBackEndSrvrs.setStatus("current")
_RpcpTotalOutBandwidthBackEndSrvr_Type = Gauge32
_RpcpTotalOutBandwidthBackEndSrvr_Object = MibScalar
rpcpTotalOutBandwidthBackEndSrvr = _RpcpTotalOutBandwidthBackEndSrvr_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 11),
    _RpcpTotalOutBandwidthBackEndSrvr_Type()
)
rpcpTotalOutBandwidthBackEndSrvr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpTotalOutBandwidthBackEndSrvr.setStatus("current")
_RpcPerHTTPProxyPerServerTable_Object = MibTable
rpcPerHTTPProxyPerServerTable = _RpcPerHTTPProxyPerServerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 154)
)
if mibBuilder.loadTexts:
    rpcPerHTTPProxyPerServerTable.setStatus("current")
_RpcPerHTTPProxyPerServerEntry_Object = MibTableRow
rpcPerHTTPProxyPerServerEntry = _RpcPerHTTPProxyPerServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 154, 1)
)
rpcPerHTTPProxyPerServerEntry.setIndexNames(
    (0, "INFORMANT-ADV", "rpcpsInstance"),
)
if mibBuilder.loadTexts:
    rpcPerHTTPProxyPerServerEntry.setStatus("current")
_RpcpsInstance_Type = InstanceName
_RpcpsInstance_Object = MibTableColumn
rpcpsInstance = _RpcpsInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 154, 1, 1),
    _RpcpsInstance_Type()
)
rpcpsInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpsInstance.setStatus("current")
_RpcpsCurrentNumberOfBackendConns_Type = Gauge32
_RpcpsCurrentNumberOfBackendConns_Object = MibTableColumn
rpcpsCurrentNumberOfBackendConns = _RpcpsCurrentNumberOfBackendConns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 154, 1, 2),
    _RpcpsCurrentNumberOfBackendConns_Type()
)
rpcpsCurrentNumberOfBackendConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rpcpsCurrentNumberOfBackendConns.setStatus("current")
_SearchGatherer_ObjectIdentity = ObjectIdentity
searchGatherer = _SearchGatherer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155)
)
if mibBuilder.loadTexts:
    searchGatherer.setStatus("current")
_SgActiveQueueLength_Type = Gauge32
_SgActiveQueueLength_Object = MibScalar
sgActiveQueueLength = _SgActiveQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 1),
    _SgActiveQueueLength_Type()
)
sgActiveQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgActiveQueueLength.setStatus("current")
_SgAdminClients_Type = Gauge32
_SgAdminClients_Object = MibScalar
sgAdminClients = _SgAdminClients_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 2),
    _SgAdminClients_Type()
)
sgAdminClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgAdminClients.setStatus("current")
_SgAllNotificationsReceived_Type = Gauge32
_SgAllNotificationsReceived_Object = MibScalar
sgAllNotificationsReceived = _SgAllNotificationsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 3),
    _SgAllNotificationsReceived_Type()
)
sgAllNotificationsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgAllNotificationsReceived.setStatus("current")
_SgDelayedDocuments_Type = Gauge32
_SgDelayedDocuments_Object = MibScalar
sgDelayedDocuments = _SgDelayedDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 4),
    _SgDelayedDocuments_Type()
)
sgDelayedDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDelayedDocuments.setStatus("current")
_SgDocumentEntries_Type = Gauge32
_SgDocumentEntries_Object = MibScalar
sgDocumentEntries = _SgDocumentEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 5),
    _SgDocumentEntries_Type()
)
sgDocumentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDocumentEntries.setStatus("current")
_SgDocumentsDelayedRetry_Type = Gauge32
_SgDocumentsDelayedRetry_Object = MibScalar
sgDocumentsDelayedRetry = _SgDocumentsDelayedRetry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 6),
    _SgDocumentsDelayedRetry_Type()
)
sgDocumentsDelayedRetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDocumentsDelayedRetry.setStatus("current")
_SgDocumentsFiltered_Type = Gauge32
_SgDocumentsFiltered_Object = MibScalar
sgDocumentsFiltered = _SgDocumentsFiltered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 7),
    _SgDocumentsFiltered_Type()
)
sgDocumentsFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDocumentsFiltered.setStatus("current")
_SgDocumentsFilteredRate_Type = Gauge32
_SgDocumentsFilteredRate_Object = MibScalar
sgDocumentsFilteredRate = _SgDocumentsFilteredRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 8),
    _SgDocumentsFilteredRate_Type()
)
sgDocumentsFilteredRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDocumentsFilteredRate.setStatus("current")
_SgDocumentsSuccessfullyFiltered_Type = Gauge32
_SgDocumentsSuccessfullyFiltered_Object = MibScalar
sgDocumentsSuccessfullyFiltered = _SgDocumentsSuccessfullyFiltered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 9),
    _SgDocumentsSuccessfullyFiltered_Type()
)
sgDocumentsSuccessfullyFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDocumentsSuccessfullyFiltered.setStatus("current")
_SgDocumentsSuccessFilteredRate_Type = Gauge32
_SgDocumentsSuccessFilteredRate_Object = MibScalar
sgDocumentsSuccessFilteredRate = _SgDocumentsSuccessFilteredRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 10),
    _SgDocumentsSuccessFilteredRate_Type()
)
sgDocumentsSuccessFilteredRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgDocumentsSuccessFilteredRate.setStatus("current")
_SgExtNotificationsRate_Type = Gauge32
_SgExtNotificationsRate_Object = MibScalar
sgExtNotificationsRate = _SgExtNotificationsRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 11),
    _SgExtNotificationsRate_Type()
)
sgExtNotificationsRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgExtNotificationsRate.setStatus("current")
_SgExtNotificationsReceived_Type = Gauge32
_SgExtNotificationsReceived_Object = MibScalar
sgExtNotificationsReceived = _SgExtNotificationsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 12),
    _SgExtNotificationsReceived_Type()
)
sgExtNotificationsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgExtNotificationsReceived.setStatus("current")
_SgFilterObjects_Type = Gauge32
_SgFilterObjects_Object = MibScalar
sgFilterObjects = _SgFilterObjects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 13),
    _SgFilterObjects_Type()
)
sgFilterObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgFilterObjects.setStatus("current")
_SgFilterProcessCreated_Type = Gauge32
_SgFilterProcessCreated_Object = MibScalar
sgFilterProcessCreated = _SgFilterProcessCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 14),
    _SgFilterProcessCreated_Type()
)
sgFilterProcessCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgFilterProcessCreated.setStatus("current")
_SgFilterProcesses_Type = Gauge32
_SgFilterProcesses_Object = MibScalar
sgFilterProcesses = _SgFilterProcesses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 15),
    _SgFilterProcesses_Type()
)
sgFilterProcesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgFilterProcesses.setStatus("current")
_SgFilterProcessesMax_Type = Gauge32
_SgFilterProcessesMax_Object = MibScalar
sgFilterProcessesMax = _SgFilterProcessesMax_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 16),
    _SgFilterProcessesMax_Type()
)
sgFilterProcessesMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgFilterProcessesMax.setStatus("current")
_SgFilteringThreads_Type = Gauge32
_SgFilteringThreads_Object = MibScalar
sgFilteringThreads = _SgFilteringThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 17),
    _SgFilteringThreads_Type()
)
sgFilteringThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgFilteringThreads.setStatus("current")
_SgHeartbeats_Type = Gauge32
_SgHeartbeats_Object = MibScalar
sgHeartbeats = _SgHeartbeats_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 18),
    _SgHeartbeats_Type()
)
sgHeartbeats.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgHeartbeats.setStatus("current")
_SgHeartbeatsRate_Type = Gauge32
_SgHeartbeatsRate_Object = MibScalar
sgHeartbeatsRate = _SgHeartbeatsRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 19),
    _SgHeartbeatsRate_Type()
)
sgHeartbeatsRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgHeartbeatsRate.setStatus("current")
_SgIdleThreads_Type = Gauge32
_SgIdleThreads_Object = MibScalar
sgIdleThreads = _SgIdleThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 20),
    _SgIdleThreads_Type()
)
sgIdleThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgIdleThreads.setStatus("current")
_SgNotificationSources_Type = Gauge32
_SgNotificationSources_Object = MibScalar
sgNotificationSources = _SgNotificationSources_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 21),
    _SgNotificationSources_Type()
)
sgNotificationSources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgNotificationSources.setStatus("current")
_SgNotificationsRate_Type = Gauge32
_SgNotificationsRate_Object = MibScalar
sgNotificationsRate = _SgNotificationsRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 22),
    _SgNotificationsRate_Type()
)
sgNotificationsRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgNotificationsRate.setStatus("current")
_SgPerformanceLevel_Type = Gauge32
_SgPerformanceLevel_Object = MibScalar
sgPerformanceLevel = _SgPerformanceLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 23),
    _SgPerformanceLevel_Type()
)
sgPerformanceLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgPerformanceLevel.setStatus("current")
_SgReasonToBackOff_Type = Gauge32
_SgReasonToBackOff_Object = MibScalar
sgReasonToBackOff = _SgReasonToBackOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 24),
    _SgReasonToBackOff_Type()
)
sgReasonToBackOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgReasonToBackOff.setStatus("current")
_SgServerObjects_Type = Gauge32
_SgServerObjects_Object = MibScalar
sgServerObjects = _SgServerObjects_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 25),
    _SgServerObjects_Type()
)
sgServerObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgServerObjects.setStatus("current")
_SgServerObjectsCreated_Type = Gauge32
_SgServerObjectsCreated_Object = MibScalar
sgServerObjectsCreated = _SgServerObjectsCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 26),
    _SgServerObjectsCreated_Type()
)
sgServerObjectsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgServerObjectsCreated.setStatus("current")
_SgServersCurrentlyUnavailable_Type = Gauge32
_SgServersCurrentlyUnavailable_Object = MibScalar
sgServersCurrentlyUnavailable = _SgServersCurrentlyUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 27),
    _SgServersCurrentlyUnavailable_Type()
)
sgServersCurrentlyUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgServersCurrentlyUnavailable.setStatus("current")
_SgServersUnavailable_Type = Gauge32
_SgServersUnavailable_Object = MibScalar
sgServersUnavailable = _SgServersUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 28),
    _SgServersUnavailable_Type()
)
sgServersUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgServersUnavailable.setStatus("current")
_SgStemmersCached_Type = Gauge32
_SgStemmersCached_Object = MibScalar
sgStemmersCached = _SgStemmersCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 29),
    _SgStemmersCached_Type()
)
sgStemmersCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgStemmersCached.setStatus("current")
_SgSystemIOTrafficRate_Type = Gauge32
_SgSystemIOTrafficRate_Object = MibScalar
sgSystemIOTrafficRate = _SgSystemIOTrafficRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 30),
    _SgSystemIOTrafficRate_Type()
)
sgSystemIOTrafficRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgSystemIOTrafficRate.setStatus("current")
_SgThreadsAccessingNetwork_Type = Gauge32
_SgThreadsAccessingNetwork_Object = MibScalar
sgThreadsAccessingNetwork = _SgThreadsAccessingNetwork_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 31),
    _SgThreadsAccessingNetwork_Type()
)
sgThreadsAccessingNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgThreadsAccessingNetwork.setStatus("current")
_SgThreadsInPlugIns_Type = Gauge32
_SgThreadsInPlugIns_Object = MibScalar
sgThreadsInPlugIns = _SgThreadsInPlugIns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 32),
    _SgThreadsInPlugIns_Type()
)
sgThreadsInPlugIns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgThreadsInPlugIns.setStatus("current")
_SgThreadsBlockedDueToBackOff_Type = Gauge32
_SgThreadsBlockedDueToBackOff_Object = MibScalar
sgThreadsBlockedDueToBackOff = _SgThreadsBlockedDueToBackOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 33),
    _SgThreadsBlockedDueToBackOff_Type()
)
sgThreadsBlockedDueToBackOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgThreadsBlockedDueToBackOff.setStatus("current")
_SgTimeOuts_Type = Gauge32
_SgTimeOuts_Object = MibScalar
sgTimeOuts = _SgTimeOuts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 34),
    _SgTimeOuts_Type()
)
sgTimeOuts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgTimeOuts.setStatus("current")
_SgWordBreakersCached_Type = Gauge32
_SgWordBreakersCached_Object = MibScalar
sgWordBreakersCached = _SgWordBreakersCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 35),
    _SgWordBreakersCached_Type()
)
sgWordBreakersCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgWordBreakersCached.setStatus("current")
_SearchGathererProjectsTable_Object = MibTable
searchGathererProjectsTable = _SearchGathererProjectsTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156)
)
if mibBuilder.loadTexts:
    searchGathererProjectsTable.setStatus("current")
_SearchGathererProjectsEntry_Object = MibTableRow
searchGathererProjectsEntry = _SearchGathererProjectsEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1)
)
searchGathererProjectsEntry.setIndexNames(
    (0, "INFORMANT-ADV", "sgpInstance"),
)
if mibBuilder.loadTexts:
    searchGathererProjectsEntry.setStatus("current")
_SgpInstance_Type = InstanceName
_SgpInstance_Object = MibTableColumn
sgpInstance = _SgpInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 1),
    _SgpInstance_Type()
)
sgpInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpInstance.setStatus("current")
_SgpAccessedFileRate_Type = Gauge32
_SgpAccessedFileRate_Object = MibTableColumn
sgpAccessedFileRate = _SgpAccessedFileRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 2),
    _SgpAccessedFileRate_Type()
)
sgpAccessedFileRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpAccessedFileRate.setStatus("current")
_SgpAccessedFiles_Type = Gauge32
_SgpAccessedFiles_Object = MibTableColumn
sgpAccessedFiles = _SgpAccessedFiles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 3),
    _SgpAccessedFiles_Type()
)
sgpAccessedFiles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpAccessedFiles.setStatus("current")
_SgpAdaptiveCrawlErrors_Type = Gauge32
_SgpAdaptiveCrawlErrors_Object = MibTableColumn
sgpAdaptiveCrawlErrors = _SgpAdaptiveCrawlErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 4),
    _SgpAdaptiveCrawlErrors_Type()
)
sgpAdaptiveCrawlErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpAdaptiveCrawlErrors.setStatus("current")
_SgpChangedDocuments_Type = Gauge32
_SgpChangedDocuments_Object = MibTableColumn
sgpChangedDocuments = _SgpChangedDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 5),
    _SgpChangedDocuments_Type()
)
sgpChangedDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpChangedDocuments.setStatus("current")
_SgpCrawlsInProgress_Type = Gauge32
_SgpCrawlsInProgress_Object = MibTableColumn
sgpCrawlsInProgress = _SgpCrawlsInProgress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 6),
    _SgpCrawlsInProgress_Type()
)
sgpCrawlsInProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpCrawlsInProgress.setStatus("current")
_SgpDelayedDocuments_Type = Gauge32
_SgpDelayedDocuments_Object = MibTableColumn
sgpDelayedDocuments = _SgpDelayedDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 7),
    _SgpDelayedDocuments_Type()
)
sgpDelayedDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDelayedDocuments.setStatus("current")
_SgpDocumentAddRate_Type = Gauge32
_SgpDocumentAddRate_Object = MibTableColumn
sgpDocumentAddRate = _SgpDocumentAddRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 8),
    _SgpDocumentAddRate_Type()
)
sgpDocumentAddRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentAddRate.setStatus("current")
_SgpDocumentAdditions_Type = Gauge32
_SgpDocumentAdditions_Object = MibTableColumn
sgpDocumentAdditions = _SgpDocumentAdditions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 9),
    _SgpDocumentAdditions_Type()
)
sgpDocumentAdditions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentAdditions.setStatus("current")
_SgpDocumentDeleteRate_Type = Gauge32
_SgpDocumentDeleteRate_Object = MibTableColumn
sgpDocumentDeleteRate = _SgpDocumentDeleteRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 10),
    _SgpDocumentDeleteRate_Type()
)
sgpDocumentDeleteRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentDeleteRate.setStatus("current")
_SgpDocumentDeletes_Type = Gauge32
_SgpDocumentDeletes_Object = MibTableColumn
sgpDocumentDeletes = _SgpDocumentDeletes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 11),
    _SgpDocumentDeletes_Type()
)
sgpDocumentDeletes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentDeletes.setStatus("current")
_SgpDocumentModifies_Type = Gauge32
_SgpDocumentModifies_Object = MibTableColumn
sgpDocumentModifies = _SgpDocumentModifies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 12),
    _SgpDocumentModifies_Type()
)
sgpDocumentModifies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentModifies.setStatus("current")
_SgpDocumentModifiesRate_Type = Gauge32
_SgpDocumentModifiesRate_Object = MibTableColumn
sgpDocumentModifiesRate = _SgpDocumentModifiesRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 13),
    _SgpDocumentModifiesRate_Type()
)
sgpDocumentModifiesRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentModifiesRate.setStatus("current")
_SgpDocumentMoveAndRenameRate_Type = Gauge32
_SgpDocumentMoveAndRenameRate_Object = MibTableColumn
sgpDocumentMoveAndRenameRate = _SgpDocumentMoveAndRenameRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 14),
    _SgpDocumentMoveAndRenameRate_Type()
)
sgpDocumentMoveAndRenameRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentMoveAndRenameRate.setStatus("current")
_SgpDocumentMovesPerRenames_Type = Gauge32
_SgpDocumentMovesPerRenames_Object = MibTableColumn
sgpDocumentMovesPerRenames = _SgpDocumentMovesPerRenames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 15),
    _SgpDocumentMovesPerRenames_Type()
)
sgpDocumentMovesPerRenames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentMovesPerRenames.setStatus("current")
_SgpDocumentsInProgress_Type = Gauge32
_SgpDocumentsInProgress_Object = MibTableColumn
sgpDocumentsInProgress = _SgpDocumentsInProgress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 16),
    _SgpDocumentsInProgress_Type()
)
sgpDocumentsInProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentsInProgress.setStatus("current")
_SgpDocumentsOnHold_Type = Gauge32
_SgpDocumentsOnHold_Object = MibTableColumn
sgpDocumentsOnHold = _SgpDocumentsOnHold_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 17),
    _SgpDocumentsOnHold_Type()
)
sgpDocumentsOnHold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpDocumentsOnHold.setStatus("current")
_SgpErrorRate_Type = Gauge32
_SgpErrorRate_Object = MibTableColumn
sgpErrorRate = _SgpErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 18),
    _SgpErrorRate_Type()
)
sgpErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpErrorRate.setStatus("current")
_SgpFileErrors_Type = Gauge32
_SgpFileErrors_Object = MibTableColumn
sgpFileErrors = _SgpFileErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 19),
    _SgpFileErrors_Type()
)
sgpFileErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFileErrors.setStatus("current")
_SgpFileErrorsRate_Type = Gauge32
_SgpFileErrorsRate_Object = MibTableColumn
sgpFileErrorsRate = _SgpFileErrorsRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 20),
    _SgpFileErrorsRate_Type()
)
sgpFileErrorsRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFileErrorsRate.setStatus("current")
_SgpFilteredOffice_Type = Gauge32
_SgpFilteredOffice_Object = MibTableColumn
sgpFilteredOffice = _SgpFilteredOffice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 21),
    _SgpFilteredOffice_Type()
)
sgpFilteredOffice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFilteredOffice.setStatus("current")
_SgpFilteredOfficeRate_Type = Gauge32
_SgpFilteredOfficeRate_Object = MibTableColumn
sgpFilteredOfficeRate = _SgpFilteredOfficeRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 22),
    _SgpFilteredOfficeRate_Type()
)
sgpFilteredOfficeRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFilteredOfficeRate.setStatus("current")
_SgpFilteredText_Type = Gauge32
_SgpFilteredText_Object = MibTableColumn
sgpFilteredText = _SgpFilteredText_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 23),
    _SgpFilteredText_Type()
)
sgpFilteredText.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFilteredText.setStatus("current")
_SgpFilteredTextRate_Type = Gauge32
_SgpFilteredTextRate_Object = MibTableColumn
sgpFilteredTextRate = _SgpFilteredTextRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 24),
    _SgpFilteredTextRate_Type()
)
sgpFilteredTextRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFilteredTextRate.setStatus("current")
_SgpFilteringDocuments_Type = Gauge32
_SgpFilteringDocuments_Object = MibTableColumn
sgpFilteringDocuments = _SgpFilteringDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 25),
    _SgpFilteringDocuments_Type()
)
sgpFilteringDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpFilteringDocuments.setStatus("current")
_SgpGathererPausedFlag_Type = Gauge32
_SgpGathererPausedFlag_Object = MibTableColumn
sgpGathererPausedFlag = _SgpGathererPausedFlag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 26),
    _SgpGathererPausedFlag_Type()
)
sgpGathererPausedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpGathererPausedFlag.setStatus("current")
_SgpHistoryRecoveryProgress_Type = Gauge32
_SgpHistoryRecoveryProgress_Object = MibTableColumn
sgpHistoryRecoveryProgress = _SgpHistoryRecoveryProgress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 27),
    _SgpHistoryRecoveryProgress_Type()
)
sgpHistoryRecoveryProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpHistoryRecoveryProgress.setStatus("current")
_SgpIncrementalCrawls_Type = Gauge32
_SgpIncrementalCrawls_Object = MibTableColumn
sgpIncrementalCrawls = _SgpIncrementalCrawls_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 28),
    _SgpIncrementalCrawls_Type()
)
sgpIncrementalCrawls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpIncrementalCrawls.setStatus("current")
_SgpIteratingHistInProgressFlag_Type = Gauge32
_SgpIteratingHistInProgressFlag_Object = MibTableColumn
sgpIteratingHistInProgressFlag = _SgpIteratingHistInProgressFlag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 29),
    _SgpIteratingHistInProgressFlag_Type()
)
sgpIteratingHistInProgressFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpIteratingHistInProgressFlag.setStatus("current")
_SgpNotModified_Type = Gauge32
_SgpNotModified_Object = MibTableColumn
sgpNotModified = _SgpNotModified_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 30),
    _SgpNotModified_Type()
)
sgpNotModified.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpNotModified.setStatus("current")
_SgpProcessedDocuments_Type = Gauge32
_SgpProcessedDocuments_Object = MibTableColumn
sgpProcessedDocuments = _SgpProcessedDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 31),
    _SgpProcessedDocuments_Type()
)
sgpProcessedDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpProcessedDocuments.setStatus("current")
_SgpProcessedDocumentsRate_Type = Gauge32
_SgpProcessedDocumentsRate_Object = MibTableColumn
sgpProcessedDocumentsRate = _SgpProcessedDocumentsRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 32),
    _SgpProcessedDocumentsRate_Type()
)
sgpProcessedDocumentsRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpProcessedDocumentsRate.setStatus("current")
_SgpRecoveryInProgressFlag_Type = Gauge32
_SgpRecoveryInProgressFlag_Object = MibTableColumn
sgpRecoveryInProgressFlag = _SgpRecoveryInProgressFlag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 33),
    _SgpRecoveryInProgressFlag_Type()
)
sgpRecoveryInProgressFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpRecoveryInProgressFlag.setStatus("current")
_SgpRetries_Type = Gauge32
_SgpRetries_Object = MibTableColumn
sgpRetries = _SgpRetries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 34),
    _SgpRetries_Type()
)
sgpRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpRetries.setStatus("current")
_SgpRetriesRate_Type = Gauge32
_SgpRetriesRate_Object = MibTableColumn
sgpRetriesRate = _SgpRetriesRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 35),
    _SgpRetriesRate_Type()
)
sgpRetriesRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpRetriesRate.setStatus("current")
_SgpStartedDocuments_Type = Gauge32
_SgpStartedDocuments_Object = MibTableColumn
sgpStartedDocuments = _SgpStartedDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 36),
    _SgpStartedDocuments_Type()
)
sgpStartedDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpStartedDocuments.setStatus("current")
_SgpStatusError_Type = Gauge32
_SgpStatusError_Object = MibTableColumn
sgpStatusError = _SgpStatusError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 37),
    _SgpStatusError_Type()
)
sgpStatusError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpStatusError.setStatus("current")
_SgpStatusSuccess_Type = Gauge32
_SgpStatusSuccess_Object = MibTableColumn
sgpStatusSuccess = _SgpStatusSuccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 38),
    _SgpStatusSuccess_Type()
)
sgpStatusSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpStatusSuccess.setStatus("current")
_SgpSuccessRate_Type = Gauge32
_SgpSuccessRate_Object = MibTableColumn
sgpSuccessRate = _SgpSuccessRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 39),
    _SgpSuccessRate_Type()
)
sgpSuccessRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpSuccessRate.setStatus("current")
_SgpURLsInHistory_Type = Gauge32
_SgpURLsInHistory_Object = MibTableColumn
sgpURLsInHistory = _SgpURLsInHistory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 40),
    _SgpURLsInHistory_Type()
)
sgpURLsInHistory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpURLsInHistory.setStatus("current")
_SgpUniqueDocuments_Type = Gauge32
_SgpUniqueDocuments_Object = MibTableColumn
sgpUniqueDocuments = _SgpUniqueDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 41),
    _SgpUniqueDocuments_Type()
)
sgpUniqueDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpUniqueDocuments.setStatus("current")
_SgpWaitingDocuments_Type = Gauge32
_SgpWaitingDocuments_Object = MibTableColumn
sgpWaitingDocuments = _SgpWaitingDocuments_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 42),
    _SgpWaitingDocuments_Type()
)
sgpWaitingDocuments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sgpWaitingDocuments.setStatus("current")
_SearchIndexerTable_Object = MibTable
searchIndexerTable = _SearchIndexerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157)
)
if mibBuilder.loadTexts:
    searchIndexerTable.setStatus("current")
_SearchIndexerEntry_Object = MibTableRow
searchIndexerEntry = _SearchIndexerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1)
)
searchIndexerEntry.setIndexNames(
    (0, "INFORMANT-ADV", "siInstance"),
)
if mibBuilder.loadTexts:
    searchIndexerEntry.setStatus("current")
_SiInstance_Type = InstanceName
_SiInstance_Object = MibTableColumn
siInstance = _SiInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 1),
    _SiInstance_Type()
)
siInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siInstance.setStatus("current")
_SiActiveConnections_Type = Gauge32
_SiActiveConnections_Object = MibTableColumn
siActiveConnections = _SiActiveConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 2),
    _SiActiveConnections_Type()
)
siActiveConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siActiveConnections.setStatus("current")
_SiCleanWidSets_Type = Gauge32
_SiCleanWidSets_Object = MibTableColumn
siCleanWidSets = _SiCleanWidSets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 3),
    _SiCleanWidSets_Type()
)
siCleanWidSets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siCleanWidSets.setStatus("current")
_SiDirtyWidSets_Type = Gauge32
_SiDirtyWidSets_Object = MibTableColumn
siDirtyWidSets = _SiDirtyWidSets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 4),
    _SiDirtyWidSets_Type()
)
siDirtyWidSets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siDirtyWidSets.setStatus("current")
_SiDocumentsFiltered_Type = Gauge32
_SiDocumentsFiltered_Object = MibTableColumn
siDocumentsFiltered = _SiDocumentsFiltered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 5),
    _SiDocumentsFiltered_Type()
)
siDocumentsFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siDocumentsFiltered.setStatus("current")
_SiIndexSize_Type = Gauge32
_SiIndexSize_Object = MibTableColumn
siIndexSize = _SiIndexSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 6),
    _SiIndexSize_Type()
)
siIndexSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siIndexSize.setStatus("current")
_SiL0IndexesWordlists_Type = Gauge32
_SiL0IndexesWordlists_Object = MibTableColumn
siL0IndexesWordlists = _SiL0IndexesWordlists_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 7),
    _SiL0IndexesWordlists_Type()
)
siL0IndexesWordlists.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL0IndexesWordlists.setStatus("current")
_SiL0MergeFlushCount_Type = Gauge32
_SiL0MergeFlushCount_Object = MibTableColumn
siL0MergeFlushCount = _SiL0MergeFlushCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 8),
    _SiL0MergeFlushCount_Type()
)
siL0MergeFlushCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL0MergeFlushCount.setStatus("current")
_SiL0MergeFlushSpeedAverage_Type = Gauge32
_SiL0MergeFlushSpeedAverage_Object = MibTableColumn
siL0MergeFlushSpeedAverage = _SiL0MergeFlushSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 9),
    _SiL0MergeFlushSpeedAverage_Type()
)
siL0MergeFlushSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL0MergeFlushSpeedAverage.setStatus("current")
_SiL0MergeFlushSpeedLast_Type = Gauge32
_SiL0MergeFlushSpeedLast_Object = MibTableColumn
siL0MergeFlushSpeedLast = _SiL0MergeFlushSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 10),
    _SiL0MergeFlushSpeedLast_Type()
)
siL0MergeFlushSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL0MergeFlushSpeedLast.setStatus("current")
_SiL0MergesFlushesNow_Type = Gauge32
_SiL0MergesFlushesNow_Object = MibTableColumn
siL0MergesFlushesNow = _SiL0MergesFlushesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 11),
    _SiL0MergesFlushesNow_Type()
)
siL0MergesFlushesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL0MergesFlushesNow.setStatus("current")
_SiL1MergeCount_Type = Gauge32
_SiL1MergeCount_Object = MibTableColumn
siL1MergeCount = _SiL1MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 12),
    _SiL1MergeCount_Type()
)
siL1MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL1MergeCount.setStatus("current")
_SiL1MergeSpeedAverage_Type = Gauge32
_SiL1MergeSpeedAverage_Object = MibTableColumn
siL1MergeSpeedAverage = _SiL1MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 13),
    _SiL1MergeSpeedAverage_Type()
)
siL1MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL1MergeSpeedAverage.setStatus("current")
_SiL1MergeSpeedLast_Type = Gauge32
_SiL1MergeSpeedLast_Object = MibTableColumn
siL1MergeSpeedLast = _SiL1MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 14),
    _SiL1MergeSpeedLast_Type()
)
siL1MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL1MergeSpeedLast.setStatus("current")
_SiL1MergesNow_Type = Gauge32
_SiL1MergesNow_Object = MibTableColumn
siL1MergesNow = _SiL1MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 15),
    _SiL1MergesNow_Type()
)
siL1MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL1MergesNow.setStatus("current")
_SiL2MergeCount_Type = Gauge32
_SiL2MergeCount_Object = MibTableColumn
siL2MergeCount = _SiL2MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 16),
    _SiL2MergeCount_Type()
)
siL2MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL2MergeCount.setStatus("current")
_SiL2MergeSpeedAverage_Type = Gauge32
_SiL2MergeSpeedAverage_Object = MibTableColumn
siL2MergeSpeedAverage = _SiL2MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 17),
    _SiL2MergeSpeedAverage_Type()
)
siL2MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL2MergeSpeedAverage.setStatus("current")
_SiL2MergeSpeedLast_Type = Gauge32
_SiL2MergeSpeedLast_Object = MibTableColumn
siL2MergeSpeedLast = _SiL2MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 18),
    _SiL2MergeSpeedLast_Type()
)
siL2MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL2MergeSpeedLast.setStatus("current")
_SiL2MergesNow_Type = Gauge32
_SiL2MergesNow_Object = MibTableColumn
siL2MergesNow = _SiL2MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 19),
    _SiL2MergesNow_Type()
)
siL2MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL2MergesNow.setStatus("current")
_SiL3MergeCount_Type = Gauge32
_SiL3MergeCount_Object = MibTableColumn
siL3MergeCount = _SiL3MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 20),
    _SiL3MergeCount_Type()
)
siL3MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL3MergeCount.setStatus("current")
_SiL3MergeSpeedAverage_Type = Gauge32
_SiL3MergeSpeedAverage_Object = MibTableColumn
siL3MergeSpeedAverage = _SiL3MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 21),
    _SiL3MergeSpeedAverage_Type()
)
siL3MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL3MergeSpeedAverage.setStatus("current")
_SiL3MergeSpeedLast_Type = Gauge32
_SiL3MergeSpeedLast_Object = MibTableColumn
siL3MergeSpeedLast = _SiL3MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 22),
    _SiL3MergeSpeedLast_Type()
)
siL3MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL3MergeSpeedLast.setStatus("current")
_SiL3MergesNow_Type = Gauge32
_SiL3MergesNow_Object = MibTableColumn
siL3MergesNow = _SiL3MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 23),
    _SiL3MergesNow_Type()
)
siL3MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL3MergesNow.setStatus("current")
_SiL4MergeCount_Type = Gauge32
_SiL4MergeCount_Object = MibTableColumn
siL4MergeCount = _SiL4MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 24),
    _SiL4MergeCount_Type()
)
siL4MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL4MergeCount.setStatus("current")
_SiL4MergeSpeedAverage_Type = Gauge32
_SiL4MergeSpeedAverage_Object = MibTableColumn
siL4MergeSpeedAverage = _SiL4MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 25),
    _SiL4MergeSpeedAverage_Type()
)
siL4MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL4MergeSpeedAverage.setStatus("current")
_SiL4MergeSpeedLast_Type = Gauge32
_SiL4MergeSpeedLast_Object = MibTableColumn
siL4MergeSpeedLast = _SiL4MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 26),
    _SiL4MergeSpeedLast_Type()
)
siL4MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL4MergeSpeedLast.setStatus("current")
_SiL4MergesNow_Type = Gauge32
_SiL4MergesNow_Object = MibTableColumn
siL4MergesNow = _SiL4MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 27),
    _SiL4MergesNow_Type()
)
siL4MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL4MergesNow.setStatus("current")
_SiL5MergeCount_Type = Gauge32
_SiL5MergeCount_Object = MibTableColumn
siL5MergeCount = _SiL5MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 28),
    _SiL5MergeCount_Type()
)
siL5MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL5MergeCount.setStatus("current")
_SiL5MergeSpeedAverage_Type = Gauge32
_SiL5MergeSpeedAverage_Object = MibTableColumn
siL5MergeSpeedAverage = _SiL5MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 29),
    _SiL5MergeSpeedAverage_Type()
)
siL5MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL5MergeSpeedAverage.setStatus("current")
_SiL5MergeSpeedLast_Type = Gauge32
_SiL5MergeSpeedLast_Object = MibTableColumn
siL5MergeSpeedLast = _SiL5MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 30),
    _SiL5MergeSpeedLast_Type()
)
siL5MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL5MergeSpeedLast.setStatus("current")
_SiL5MergesNow_Type = Gauge32
_SiL5MergesNow_Object = MibTableColumn
siL5MergesNow = _SiL5MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 31),
    _SiL5MergesNow_Type()
)
siL5MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL5MergesNow.setStatus("current")
_SiL6MergeCount_Type = Gauge32
_SiL6MergeCount_Object = MibTableColumn
siL6MergeCount = _SiL6MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 32),
    _SiL6MergeCount_Type()
)
siL6MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL6MergeCount.setStatus("current")
_SiL6MergeSpeedAverage_Type = Gauge32
_SiL6MergeSpeedAverage_Object = MibTableColumn
siL6MergeSpeedAverage = _SiL6MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 33),
    _SiL6MergeSpeedAverage_Type()
)
siL6MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL6MergeSpeedAverage.setStatus("current")
_SiL6MergeSpeedLast_Type = Gauge32
_SiL6MergeSpeedLast_Object = MibTableColumn
siL6MergeSpeedLast = _SiL6MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 34),
    _SiL6MergeSpeedLast_Type()
)
siL6MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL6MergeSpeedLast.setStatus("current")
_SiL6MergesNow_Type = Gauge32
_SiL6MergesNow_Object = MibTableColumn
siL6MergesNow = _SiL6MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 35),
    _SiL6MergesNow_Type()
)
siL6MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL6MergesNow.setStatus("current")
_SiL7MergeCount_Type = Gauge32
_SiL7MergeCount_Object = MibTableColumn
siL7MergeCount = _SiL7MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 36),
    _SiL7MergeCount_Type()
)
siL7MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL7MergeCount.setStatus("current")
_SiL7MergeSpeedAverage_Type = Gauge32
_SiL7MergeSpeedAverage_Object = MibTableColumn
siL7MergeSpeedAverage = _SiL7MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 37),
    _SiL7MergeSpeedAverage_Type()
)
siL7MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL7MergeSpeedAverage.setStatus("current")
_SiL7MergeSpeedLast_Type = Gauge32
_SiL7MergeSpeedLast_Object = MibTableColumn
siL7MergeSpeedLast = _SiL7MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 38),
    _SiL7MergeSpeedLast_Type()
)
siL7MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL7MergeSpeedLast.setStatus("current")
_SiL7MergesNow_Type = Gauge32
_SiL7MergesNow_Object = MibTableColumn
siL7MergesNow = _SiL7MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 39),
    _SiL7MergesNow_Type()
)
siL7MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL7MergesNow.setStatus("current")
_SiL8MergeCount_Type = Gauge32
_SiL8MergeCount_Object = MibTableColumn
siL8MergeCount = _SiL8MergeCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 40),
    _SiL8MergeCount_Type()
)
siL8MergeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL8MergeCount.setStatus("current")
_SiL8MergeSpeedAverage_Type = Gauge32
_SiL8MergeSpeedAverage_Object = MibTableColumn
siL8MergeSpeedAverage = _SiL8MergeSpeedAverage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 41),
    _SiL8MergeSpeedAverage_Type()
)
siL8MergeSpeedAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL8MergeSpeedAverage.setStatus("current")
_SiL8MergeSpeedLast_Type = Gauge32
_SiL8MergeSpeedLast_Object = MibTableColumn
siL8MergeSpeedLast = _SiL8MergeSpeedLast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 42),
    _SiL8MergeSpeedLast_Type()
)
siL8MergeSpeedLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL8MergeSpeedLast.setStatus("current")
_SiL8MergesNow_Type = Gauge32
_SiL8MergesNow_Object = MibTableColumn
siL8MergesNow = _SiL8MergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 43),
    _SiL8MergesNow_Type()
)
siL8MergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siL8MergesNow.setStatus("current")
_SiMasterIndexLevel_Type = Gauge32
_SiMasterIndexLevel_Object = MibTableColumn
siMasterIndexLevel = _SiMasterIndexLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 44),
    _SiMasterIndexLevel_Type()
)
siMasterIndexLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siMasterIndexLevel.setStatus("current")
_SiMasterMergeProgress_Type = Gauge32
_SiMasterMergeProgress_Object = MibTableColumn
siMasterMergeProgress = _SiMasterMergeProgress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 45),
    _SiMasterMergeProgress_Type()
)
siMasterMergeProgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siMasterMergeProgress.setStatus("current")
_SiMasterMergesNow_Type = Gauge32
_SiMasterMergesNow_Object = MibTableColumn
siMasterMergesNow = _SiMasterMergesNow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 46),
    _SiMasterMergesNow_Type()
)
siMasterMergesNow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siMasterMergesNow.setStatus("current")
_SiMasterMergesToDate_Type = Gauge32
_SiMasterMergesToDate_Object = MibTableColumn
siMasterMergesToDate = _SiMasterMergesToDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 47),
    _SiMasterMergesToDate_Type()
)
siMasterMergesToDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siMasterMergesToDate.setStatus("current")
_SiPersistentIndexes_Type = Gauge32
_SiPersistentIndexes_Object = MibTableColumn
siPersistentIndexes = _SiPersistentIndexes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 48),
    _SiPersistentIndexes_Type()
)
siPersistentIndexes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexes.setStatus("current")
_SiPersistentIndexesL1_Type = Gauge32
_SiPersistentIndexesL1_Object = MibTableColumn
siPersistentIndexesL1 = _SiPersistentIndexesL1_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 49),
    _SiPersistentIndexesL1_Type()
)
siPersistentIndexesL1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL1.setStatus("current")
_SiPersistentIndexesL2_Type = Gauge32
_SiPersistentIndexesL2_Object = MibTableColumn
siPersistentIndexesL2 = _SiPersistentIndexesL2_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 50),
    _SiPersistentIndexesL2_Type()
)
siPersistentIndexesL2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL2.setStatus("current")
_SiPersistentIndexesL3_Type = Gauge32
_SiPersistentIndexesL3_Object = MibTableColumn
siPersistentIndexesL3 = _SiPersistentIndexesL3_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 51),
    _SiPersistentIndexesL3_Type()
)
siPersistentIndexesL3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL3.setStatus("current")
_SiPersistentIndexesL4_Type = Gauge32
_SiPersistentIndexesL4_Object = MibTableColumn
siPersistentIndexesL4 = _SiPersistentIndexesL4_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 52),
    _SiPersistentIndexesL4_Type()
)
siPersistentIndexesL4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL4.setStatus("current")
_SiPersistentIndexesL5_Type = Gauge32
_SiPersistentIndexesL5_Object = MibTableColumn
siPersistentIndexesL5 = _SiPersistentIndexesL5_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 53),
    _SiPersistentIndexesL5_Type()
)
siPersistentIndexesL5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL5.setStatus("current")
_SiPersistentIndexesL6_Type = Gauge32
_SiPersistentIndexesL6_Object = MibTableColumn
siPersistentIndexesL6 = _SiPersistentIndexesL6_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 54),
    _SiPersistentIndexesL6_Type()
)
siPersistentIndexesL6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL6.setStatus("current")
_SiPersistentIndexesL7_Type = Gauge32
_SiPersistentIndexesL7_Object = MibTableColumn
siPersistentIndexesL7 = _SiPersistentIndexesL7_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 55),
    _SiPersistentIndexesL7_Type()
)
siPersistentIndexesL7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL7.setStatus("current")
_SiPersistentIndexesL8_Type = Gauge32
_SiPersistentIndexesL8_Object = MibTableColumn
siPersistentIndexesL8 = _SiPersistentIndexesL8_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 56),
    _SiPersistentIndexesL8_Type()
)
siPersistentIndexesL8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siPersistentIndexesL8.setStatus("current")
_SiQueries_Type = Gauge32
_SiQueries_Object = MibTableColumn
siQueries = _SiQueries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 57),
    _SiQueries_Type()
)
siQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siQueries.setStatus("current")
_SiQueriesFailed_Type = Gauge32
_SiQueriesFailed_Object = MibTableColumn
siQueriesFailed = _SiQueriesFailed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 58),
    _SiQueriesFailed_Type()
)
siQueriesFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siQueriesFailed.setStatus("current")
_SiQueriesSucceeded_Type = Gauge32
_SiQueriesSucceeded_Object = MibTableColumn
siQueriesSucceeded = _SiQueriesSucceeded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 59),
    _SiQueriesSucceeded_Type()
)
siQueriesSucceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siQueriesSucceeded.setStatus("current")
_SiShadowMergeLevels_Type = Gauge32
_SiShadowMergeLevels_Object = MibTableColumn
siShadowMergeLevels = _SiShadowMergeLevels_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 60),
    _SiShadowMergeLevels_Type()
)
siShadowMergeLevels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siShadowMergeLevels.setStatus("current")
_SiShadowMergeLevelsThreshold_Type = Gauge32
_SiShadowMergeLevelsThreshold_Object = MibTableColumn
siShadowMergeLevelsThreshold = _SiShadowMergeLevelsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 61),
    _SiShadowMergeLevelsThreshold_Type()
)
siShadowMergeLevelsThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siShadowMergeLevelsThreshold.setStatus("current")
_SiUniqueKeys_Type = Gauge32
_SiUniqueKeys_Object = MibTableColumn
siUniqueKeys = _SiUniqueKeys_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 62),
    _SiUniqueKeys_Type()
)
siUniqueKeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siUniqueKeys.setStatus("current")
_SiWorkItemsCreated_Type = Gauge32
_SiWorkItemsCreated_Object = MibTableColumn
siWorkItemsCreated = _SiWorkItemsCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 63),
    _SiWorkItemsCreated_Type()
)
siWorkItemsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siWorkItemsCreated.setStatus("current")
_SiWorkItemsDeleted_Type = Gauge32
_SiWorkItemsDeleted_Object = MibTableColumn
siWorkItemsDeleted = _SiWorkItemsDeleted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 64),
    _SiWorkItemsDeleted_Type()
)
siWorkItemsDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siWorkItemsDeleted.setStatus("current")
_ServerForNFS_ObjectIdentity = ObjectIdentity
serverForNFS = _ServerForNFS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158)
)
if mibBuilder.loadTexts:
    serverForNFS.setStatus("current")
_SnfsAnonymousAccesses_Type = Gauge32
_SnfsAnonymousAccesses_Object = MibScalar
snfsAnonymousAccesses = _SnfsAnonymousAccesses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 1),
    _SnfsAnonymousAccesses_Type()
)
snfsAnonymousAccesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsAnonymousAccesses.setStatus("current")
_SnfsBytesRead_Type = Gauge32
_SnfsBytesRead_Object = MibScalar
snfsBytesRead = _SnfsBytesRead_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 2),
    _SnfsBytesRead_Type()
)
snfsBytesRead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsBytesRead.setStatus("current")
_SnfsBytesReadPerSec_Type = Gauge32
_SnfsBytesReadPerSec_Object = MibScalar
snfsBytesReadPerSec = _SnfsBytesReadPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 3),
    _SnfsBytesReadPerSec_Type()
)
snfsBytesReadPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsBytesReadPerSec.setStatus("current")
_SnfsBytesWritten_Type = Gauge32
_SnfsBytesWritten_Object = MibScalar
snfsBytesWritten = _SnfsBytesWritten_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 4),
    _SnfsBytesWritten_Type()
)
snfsBytesWritten.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsBytesWritten.setStatus("current")
_SnfsBytesWrittenPerSec_Type = Gauge32
_SnfsBytesWrittenPerSec_Object = MibScalar
snfsBytesWrittenPerSec = _SnfsBytesWrittenPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 5),
    _SnfsBytesWrittenPerSec_Type()
)
snfsBytesWrittenPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsBytesWrittenPerSec.setStatus("current")
_SnfsDRCHits_Type = Gauge32
_SnfsDRCHits_Object = MibScalar
snfsDRCHits = _SnfsDRCHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 6),
    _SnfsDRCHits_Type()
)
snfsDRCHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsDRCHits.setStatus("current")
_SnfsDRCReplies_Type = Gauge32
_SnfsDRCReplies_Object = MibScalar
snfsDRCReplies = _SnfsDRCReplies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 7),
    _SnfsDRCReplies_Type()
)
snfsDRCReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsDRCReplies.setStatus("current")
_SnfsDRCReplyPresent_Type = Gauge32
_SnfsDRCReplyPresent_Object = MibScalar
snfsDRCReplyPresent = _SnfsDRCReplyPresent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 8),
    _SnfsDRCReplyPresent_Type()
)
snfsDRCReplyPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsDRCReplyPresent.setStatus("current")
_SnfsDRCSendErrors_Type = Gauge32
_SnfsDRCSendErrors_Object = MibScalar
snfsDRCSendErrors = _SnfsDRCSendErrors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 9),
    _SnfsDRCSendErrors_Type()
)
snfsDRCSendErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsDRCSendErrors.setStatus("current")
_SnfsDiscardedDRCPackets_Type = Gauge32
_SnfsDiscardedDRCPackets_Object = MibScalar
snfsDiscardedDRCPackets = _SnfsDiscardedDRCPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 10),
    _SnfsDiscardedDRCPackets_Type()
)
snfsDiscardedDRCPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsDiscardedDRCPackets.setStatus("current")
_SnfsMOUNTErrorsV1_Type = Gauge32
_SnfsMOUNTErrorsV1_Object = MibScalar
snfsMOUNTErrorsV1 = _SnfsMOUNTErrorsV1_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 11),
    _SnfsMOUNTErrorsV1_Type()
)
snfsMOUNTErrorsV1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMOUNTErrorsV1.setStatus("current")
_SnfsMOUNTErrorsV3_Type = Gauge32
_SnfsMOUNTErrorsV3_Object = MibScalar
snfsMOUNTErrorsV3 = _SnfsMOUNTErrorsV3_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 12),
    _SnfsMOUNTErrorsV3_Type()
)
snfsMOUNTErrorsV3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMOUNTErrorsV3.setStatus("current")
_SnfsMV100NULLMount_Type = Gauge32
_SnfsMV100NULLMount_Object = MibScalar
snfsMV100NULLMount = _SnfsMV100NULLMount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 13),
    _SnfsMV100NULLMount_Type()
)
snfsMV100NULLMount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV100NULLMount.setStatus("current")
_SnfsMV101Mount_Type = Gauge32
_SnfsMV101Mount_Object = MibScalar
snfsMV101Mount = _SnfsMV101Mount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 14),
    _SnfsMV101Mount_Type()
)
snfsMV101Mount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV101Mount.setStatus("current")
_SnfsMV102DumpMounts_Type = Gauge32
_SnfsMV102DumpMounts_Object = MibScalar
snfsMV102DumpMounts = _SnfsMV102DumpMounts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 15),
    _SnfsMV102DumpMounts_Type()
)
snfsMV102DumpMounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV102DumpMounts.setStatus("current")
_SnfsMV103Unmount_Type = Gauge32
_SnfsMV103Unmount_Object = MibScalar
snfsMV103Unmount = _SnfsMV103Unmount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 16),
    _SnfsMV103Unmount_Type()
)
snfsMV103Unmount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV103Unmount.setStatus("current")
_SnfsMV104UnmountAll_Type = Gauge32
_SnfsMV104UnmountAll_Object = MibScalar
snfsMV104UnmountAll = _SnfsMV104UnmountAll_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 17),
    _SnfsMV104UnmountAll_Type()
)
snfsMV104UnmountAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV104UnmountAll.setStatus("current")
_SnfsMV105ExportList_Type = Gauge32
_SnfsMV105ExportList_Object = MibScalar
snfsMV105ExportList = _SnfsMV105ExportList_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 18),
    _SnfsMV105ExportList_Type()
)
snfsMV105ExportList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV105ExportList.setStatus("current")
_SnfsMV300NULLMount_Type = Gauge32
_SnfsMV300NULLMount_Object = MibScalar
snfsMV300NULLMount = _SnfsMV300NULLMount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 19),
    _SnfsMV300NULLMount_Type()
)
snfsMV300NULLMount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV300NULLMount.setStatus("current")
_SnfsMV301Mount_Type = Gauge32
_SnfsMV301Mount_Object = MibScalar
snfsMV301Mount = _SnfsMV301Mount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 20),
    _SnfsMV301Mount_Type()
)
snfsMV301Mount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV301Mount.setStatus("current")
_SnfsMV302DumpMounts_Type = Gauge32
_SnfsMV302DumpMounts_Object = MibScalar
snfsMV302DumpMounts = _SnfsMV302DumpMounts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 21),
    _SnfsMV302DumpMounts_Type()
)
snfsMV302DumpMounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV302DumpMounts.setStatus("current")
_SnfsMV303Unmount_Type = Gauge32
_SnfsMV303Unmount_Object = MibScalar
snfsMV303Unmount = _SnfsMV303Unmount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 22),
    _SnfsMV303Unmount_Type()
)
snfsMV303Unmount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV303Unmount.setStatus("current")
_SnfsMV304UnmountAll_Type = Gauge32
_SnfsMV304UnmountAll_Object = MibScalar
snfsMV304UnmountAll = _SnfsMV304UnmountAll_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 23),
    _SnfsMV304UnmountAll_Type()
)
snfsMV304UnmountAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV304UnmountAll.setStatus("current")
_SnfsMV305ExportList_Type = Gauge32
_SnfsMV305ExportList_Object = MibScalar
snfsMV305ExportList = _SnfsMV305ExportList_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 24),
    _SnfsMV305ExportList_Type()
)
snfsMV305ExportList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsMV305ExportList.setStatus("current")
_SnfsNFSErrorsV2_Type = Gauge32
_SnfsNFSErrorsV2_Object = MibScalar
snfsNFSErrorsV2 = _SnfsNFSErrorsV2_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 25),
    _SnfsNFSErrorsV2_Type()
)
snfsNFSErrorsV2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsNFSErrorsV2.setStatus("current")
_SnfsNFSErrorsV3_Type = Gauge32
_SnfsNFSErrorsV3_Object = MibScalar
snfsNFSErrorsV3 = _SnfsNFSErrorsV3_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 26),
    _SnfsNFSErrorsV3_Type()
)
snfsNFSErrorsV3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsNFSErrorsV3.setStatus("current")
_SnfsPendingDRCPackets_Type = Gauge32
_SnfsPendingDRCPackets_Object = MibScalar
snfsPendingDRCPackets = _SnfsPendingDRCPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 27),
    _SnfsPendingDRCPackets_Type()
)
snfsPendingDRCPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsPendingDRCPackets.setStatus("current")
_SnfsRPCCallPacketsCreated_Type = Gauge32
_SnfsRPCCallPacketsCreated_Object = MibScalar
snfsRPCCallPacketsCreated = _SnfsRPCCallPacketsCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 28),
    _SnfsRPCCallPacketsCreated_Type()
)
snfsRPCCallPacketsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsRPCCallPacketsCreated.setStatus("current")
_SnfsRPCCallsReceivedPerSec_Type = Gauge32
_SnfsRPCCallsReceivedPerSec_Object = MibScalar
snfsRPCCallsReceivedPerSec = _SnfsRPCCallsReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 29),
    _SnfsRPCCallsReceivedPerSec_Type()
)
snfsRPCCallsReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsRPCCallsReceivedPerSec.setStatus("current")
_SnfsRPCFailures_Type = Gauge32
_SnfsRPCFailures_Object = MibScalar
snfsRPCFailures = _SnfsRPCFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 30),
    _SnfsRPCFailures_Type()
)
snfsRPCFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsRPCFailures.setStatus("current")
_SnfsRPCRepliesReceivedPerSec_Type = Gauge32
_SnfsRPCRepliesReceivedPerSec_Object = MibScalar
snfsRPCRepliesReceivedPerSec = _SnfsRPCRepliesReceivedPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 31),
    _SnfsRPCRepliesReceivedPerSec_Type()
)
snfsRPCRepliesReceivedPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsRPCRepliesReceivedPerSec.setStatus("current")
_SnfsRPCReplyPacketsCreated_Type = Gauge32
_SnfsRPCReplyPacketsCreated_Object = MibScalar
snfsRPCReplyPacketsCreated = _SnfsRPCReplyPacketsCreated_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 32),
    _SnfsRPCReplyPacketsCreated_Type()
)
snfsRPCReplyPacketsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsRPCReplyPacketsCreated.setStatus("current")
_SnfsThreadsTotal_Type = Gauge32
_SnfsThreadsTotal_Object = MibScalar
snfsThreadsTotal = _SnfsThreadsTotal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 33),
    _SnfsThreadsTotal_Type()
)
snfsThreadsTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsThreadsTotal.setStatus("current")
_SnfsThreadsWaiting_Type = Gauge32
_SnfsThreadsWaiting_Object = MibScalar
snfsThreadsWaiting = _SnfsThreadsWaiting_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 34),
    _SnfsThreadsWaiting_Type()
)
snfsThreadsWaiting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsThreadsWaiting.setStatus("current")
_SnfsTotalMountCallsV1_Type = Gauge32
_SnfsTotalMountCallsV1_Object = MibScalar
snfsTotalMountCallsV1 = _SnfsTotalMountCallsV1_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 35),
    _SnfsTotalMountCallsV1_Type()
)
snfsTotalMountCallsV1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsTotalMountCallsV1.setStatus("current")
_SnfsTotalMountCallsV3_Type = Gauge32
_SnfsTotalMountCallsV3_Object = MibScalar
snfsTotalMountCallsV3 = _SnfsTotalMountCallsV3_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 36),
    _SnfsTotalMountCallsV3_Type()
)
snfsTotalMountCallsV3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsTotalMountCallsV3.setStatus("current")
_SnfsTotalNFSCallsV2_Type = Gauge32
_SnfsTotalNFSCallsV2_Object = MibScalar
snfsTotalNFSCallsV2 = _SnfsTotalNFSCallsV2_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 37),
    _SnfsTotalNFSCallsV2_Type()
)
snfsTotalNFSCallsV2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsTotalNFSCallsV2.setStatus("current")
_SnfsTotalNFSCallsV3_Type = Gauge32
_SnfsTotalNFSCallsV3_Object = MibScalar
snfsTotalNFSCallsV3 = _SnfsTotalNFSCallsV3_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 38),
    _SnfsTotalNFSCallsV3_Type()
)
snfsTotalNFSCallsV3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsTotalNFSCallsV3.setStatus("current")
_SnfsTotalRPCCallsReceived_Type = Gauge32
_SnfsTotalRPCCallsReceived_Object = MibScalar
snfsTotalRPCCallsReceived = _SnfsTotalRPCCallsReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 39),
    _SnfsTotalRPCCallsReceived_Type()
)
snfsTotalRPCCallsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsTotalRPCCallsReceived.setStatus("current")
_SnfsTotalRPCRepliesReceived_Type = Gauge32
_SnfsTotalRPCRepliesReceived_Object = MibScalar
snfsTotalRPCRepliesReceived = _SnfsTotalRPCRepliesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 40),
    _SnfsTotalRPCRepliesReceived_Type()
)
snfsTotalRPCRepliesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsTotalRPCRepliesReceived.setStatus("current")
_SnfsUnrecognizedRPCPackets_Type = Gauge32
_SnfsUnrecognizedRPCPackets_Object = MibScalar
snfsUnrecognizedRPCPackets = _SnfsUnrecognizedRPCPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 41),
    _SnfsUnrecognizedRPCPackets_Type()
)
snfsUnrecognizedRPCPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsUnrecognizedRPCPackets.setStatus("current")
_SnfsV200NULL_Type = Gauge32
_SnfsV200NULL_Object = MibScalar
snfsV200NULL = _SnfsV200NULL_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 42),
    _SnfsV200NULL_Type()
)
snfsV200NULL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV200NULL.setStatus("current")
_SnfsV201GetAttributes_Type = Gauge32
_SnfsV201GetAttributes_Object = MibScalar
snfsV201GetAttributes = _SnfsV201GetAttributes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 43),
    _SnfsV201GetAttributes_Type()
)
snfsV201GetAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV201GetAttributes.setStatus("current")
_SnfsV202SetAttributes_Type = Gauge32
_SnfsV202SetAttributes_Object = MibScalar
snfsV202SetAttributes = _SnfsV202SetAttributes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 44),
    _SnfsV202SetAttributes_Type()
)
snfsV202SetAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV202SetAttributes.setStatus("current")
_SnfsV203Root_Type = Gauge32
_SnfsV203Root_Object = MibScalar
snfsV203Root = _SnfsV203Root_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 45),
    _SnfsV203Root_Type()
)
snfsV203Root.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV203Root.setStatus("current")
_SnfsV204Lookup_Type = Gauge32
_SnfsV204Lookup_Object = MibScalar
snfsV204Lookup = _SnfsV204Lookup_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 46),
    _SnfsV204Lookup_Type()
)
snfsV204Lookup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV204Lookup.setStatus("current")
_SnfsV205ReadLink_Type = Gauge32
_SnfsV205ReadLink_Object = MibScalar
snfsV205ReadLink = _SnfsV205ReadLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 47),
    _SnfsV205ReadLink_Type()
)
snfsV205ReadLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV205ReadLink.setStatus("current")
_SnfsV206Read_Type = Gauge32
_SnfsV206Read_Object = MibScalar
snfsV206Read = _SnfsV206Read_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 48),
    _SnfsV206Read_Type()
)
snfsV206Read.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV206Read.setStatus("current")
_SnfsV207WriteCache_Type = Gauge32
_SnfsV207WriteCache_Object = MibScalar
snfsV207WriteCache = _SnfsV207WriteCache_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 49),
    _SnfsV207WriteCache_Type()
)
snfsV207WriteCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV207WriteCache.setStatus("current")
_SnfsV208Write_Type = Gauge32
_SnfsV208Write_Object = MibScalar
snfsV208Write = _SnfsV208Write_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 50),
    _SnfsV208Write_Type()
)
snfsV208Write.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV208Write.setStatus("current")
_SnfsV209Create_Type = Gauge32
_SnfsV209Create_Object = MibScalar
snfsV209Create = _SnfsV209Create_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 51),
    _SnfsV209Create_Type()
)
snfsV209Create.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV209Create.setStatus("current")
_SnfsV210Remove_Type = Gauge32
_SnfsV210Remove_Object = MibScalar
snfsV210Remove = _SnfsV210Remove_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 52),
    _SnfsV210Remove_Type()
)
snfsV210Remove.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV210Remove.setStatus("current")
_SnfsV211Rename_Type = Gauge32
_SnfsV211Rename_Object = MibScalar
snfsV211Rename = _SnfsV211Rename_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 53),
    _SnfsV211Rename_Type()
)
snfsV211Rename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV211Rename.setStatus("current")
_SnfsV212Link_Type = Gauge32
_SnfsV212Link_Object = MibScalar
snfsV212Link = _SnfsV212Link_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 54),
    _SnfsV212Link_Type()
)
snfsV212Link.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV212Link.setStatus("current")
_SnfsV213SymbolicLink_Type = Gauge32
_SnfsV213SymbolicLink_Object = MibScalar
snfsV213SymbolicLink = _SnfsV213SymbolicLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 55),
    _SnfsV213SymbolicLink_Type()
)
snfsV213SymbolicLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV213SymbolicLink.setStatus("current")
_SnfsV214MakeDirectory_Type = Gauge32
_SnfsV214MakeDirectory_Object = MibScalar
snfsV214MakeDirectory = _SnfsV214MakeDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 56),
    _SnfsV214MakeDirectory_Type()
)
snfsV214MakeDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV214MakeDirectory.setStatus("current")
_SnfsV215RemoveDirectory_Type = Gauge32
_SnfsV215RemoveDirectory_Object = MibScalar
snfsV215RemoveDirectory = _SnfsV215RemoveDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 57),
    _SnfsV215RemoveDirectory_Type()
)
snfsV215RemoveDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV215RemoveDirectory.setStatus("current")
_SnfsV216ReadDirectory_Type = Gauge32
_SnfsV216ReadDirectory_Object = MibScalar
snfsV216ReadDirectory = _SnfsV216ReadDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 58),
    _SnfsV216ReadDirectory_Type()
)
snfsV216ReadDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV216ReadDirectory.setStatus("current")
_SnfsV217StatFileSystem_Type = Gauge32
_SnfsV217StatFileSystem_Object = MibScalar
snfsV217StatFileSystem = _SnfsV217StatFileSystem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 59),
    _SnfsV217StatFileSystem_Type()
)
snfsV217StatFileSystem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV217StatFileSystem.setStatus("current")
_SnfsV300NULL_Type = Gauge32
_SnfsV300NULL_Object = MibScalar
snfsV300NULL = _SnfsV300NULL_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 60),
    _SnfsV300NULL_Type()
)
snfsV300NULL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV300NULL.setStatus("current")
_SnfsV301GetAttributes_Type = Gauge32
_SnfsV301GetAttributes_Object = MibScalar
snfsV301GetAttributes = _SnfsV301GetAttributes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 61),
    _SnfsV301GetAttributes_Type()
)
snfsV301GetAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV301GetAttributes.setStatus("current")
_SnfsV302SetAttributes_Type = Gauge32
_SnfsV302SetAttributes_Object = MibScalar
snfsV302SetAttributes = _SnfsV302SetAttributes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 62),
    _SnfsV302SetAttributes_Type()
)
snfsV302SetAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV302SetAttributes.setStatus("current")
_SnfsV303Lookup_Type = Gauge32
_SnfsV303Lookup_Object = MibScalar
snfsV303Lookup = _SnfsV303Lookup_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 63),
    _SnfsV303Lookup_Type()
)
snfsV303Lookup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV303Lookup.setStatus("current")
_SnfsV304Access_Type = Gauge32
_SnfsV304Access_Object = MibScalar
snfsV304Access = _SnfsV304Access_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 64),
    _SnfsV304Access_Type()
)
snfsV304Access.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV304Access.setStatus("current")
_SnfsV305ReadLinkV3_Type = Gauge32
_SnfsV305ReadLinkV3_Object = MibScalar
snfsV305ReadLinkV3 = _SnfsV305ReadLinkV3_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 65),
    _SnfsV305ReadLinkV3_Type()
)
snfsV305ReadLinkV3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV305ReadLinkV3.setStatus("current")
_SnfsV306Read_Type = Gauge32
_SnfsV306Read_Object = MibScalar
snfsV306Read = _SnfsV306Read_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 66),
    _SnfsV306Read_Type()
)
snfsV306Read.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV306Read.setStatus("current")
_SnfsV307Write_Type = Gauge32
_SnfsV307Write_Object = MibScalar
snfsV307Write = _SnfsV307Write_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 67),
    _SnfsV307Write_Type()
)
snfsV307Write.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV307Write.setStatus("current")
_SnfsV308Create_Type = Gauge32
_SnfsV308Create_Object = MibScalar
snfsV308Create = _SnfsV308Create_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 68),
    _SnfsV308Create_Type()
)
snfsV308Create.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV308Create.setStatus("current")
_SnfsV309MakeDirectory_Type = Gauge32
_SnfsV309MakeDirectory_Object = MibScalar
snfsV309MakeDirectory = _SnfsV309MakeDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 69),
    _SnfsV309MakeDirectory_Type()
)
snfsV309MakeDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV309MakeDirectory.setStatus("current")
_SnfsV310SymbolicLink_Type = Gauge32
_SnfsV310SymbolicLink_Object = MibScalar
snfsV310SymbolicLink = _SnfsV310SymbolicLink_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 70),
    _SnfsV310SymbolicLink_Type()
)
snfsV310SymbolicLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV310SymbolicLink.setStatus("current")
_SnfsV311MakeNode_Type = Gauge32
_SnfsV311MakeNode_Object = MibScalar
snfsV311MakeNode = _SnfsV311MakeNode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 71),
    _SnfsV311MakeNode_Type()
)
snfsV311MakeNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV311MakeNode.setStatus("current")
_SnfsV312Remove_Type = Gauge32
_SnfsV312Remove_Object = MibScalar
snfsV312Remove = _SnfsV312Remove_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 72),
    _SnfsV312Remove_Type()
)
snfsV312Remove.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV312Remove.setStatus("current")
_SnfsV313RemoveDirectory_Type = Gauge32
_SnfsV313RemoveDirectory_Object = MibScalar
snfsV313RemoveDirectory = _SnfsV313RemoveDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 73),
    _SnfsV313RemoveDirectory_Type()
)
snfsV313RemoveDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV313RemoveDirectory.setStatus("current")
_SnfsV314Rename_Type = Gauge32
_SnfsV314Rename_Object = MibScalar
snfsV314Rename = _SnfsV314Rename_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 74),
    _SnfsV314Rename_Type()
)
snfsV314Rename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV314Rename.setStatus("current")
_SnfsV315Link_Type = Gauge32
_SnfsV315Link_Object = MibScalar
snfsV315Link = _SnfsV315Link_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 75),
    _SnfsV315Link_Type()
)
snfsV315Link.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV315Link.setStatus("current")
_SnfsV316ReadDirectory_Type = Gauge32
_SnfsV316ReadDirectory_Object = MibScalar
snfsV316ReadDirectory = _SnfsV316ReadDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 76),
    _SnfsV316ReadDirectory_Type()
)
snfsV316ReadDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV316ReadDirectory.setStatus("current")
_SnfsV317ReadDirectory_Type = Gauge32
_SnfsV317ReadDirectory_Object = MibScalar
snfsV317ReadDirectory = _SnfsV317ReadDirectory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 77),
    _SnfsV317ReadDirectory_Type()
)
snfsV317ReadDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV317ReadDirectory.setStatus("current")
_SnfsV318FileSystemStat_Type = Gauge32
_SnfsV318FileSystemStat_Object = MibScalar
snfsV318FileSystemStat = _SnfsV318FileSystemStat_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 78),
    _SnfsV318FileSystemStat_Type()
)
snfsV318FileSystemStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV318FileSystemStat.setStatus("current")
_SnfsV319FileSystemInfo_Type = Gauge32
_SnfsV319FileSystemInfo_Object = MibScalar
snfsV319FileSystemInfo = _SnfsV319FileSystemInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 79),
    _SnfsV319FileSystemInfo_Type()
)
snfsV319FileSystemInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV319FileSystemInfo.setStatus("current")
_SnfsV320PathConfiguration_Type = Gauge32
_SnfsV320PathConfiguration_Object = MibScalar
snfsV320PathConfiguration = _SnfsV320PathConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 80),
    _SnfsV320PathConfiguration_Type()
)
snfsV320PathConfiguration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV320PathConfiguration.setStatus("current")
_SnfsV321Commit_Type = Gauge32
_SnfsV321Commit_Object = MibScalar
snfsV321Commit = _SnfsV321Commit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 81),
    _SnfsV321Commit_Type()
)
snfsV321Commit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsV321Commit.setStatus("current")
_SnfsWorkQueueSize_Type = Gauge32
_SnfsWorkQueueSize_Object = MibScalar
snfsWorkQueueSize = _SnfsWorkQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 82),
    _SnfsWorkQueueSize_Type()
)
snfsWorkQueueSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsWorkQueueSize.setStatus("current")
_SnfsXDRFailures_Type = Gauge32
_SnfsXDRFailures_Object = MibScalar
snfsXDRFailures = _SnfsXDRFailures_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 83),
    _SnfsXDRFailures_Type()
)
snfsXDRFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snfsXDRFailures.setStatus("current")
_TbsCounters_ObjectIdentity = ObjectIdentity
tbsCounters = _TbsCounters_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 159)
)
if mibBuilder.loadTexts:
    tbsCounters.setStatus("current")
_TbscCurrentContexts_Type = Gauge32
_TbscCurrentContexts_Object = MibScalar
tbscCurrentContexts = _TbscCurrentContexts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 159, 1),
    _TbscCurrentContexts_Type()
)
tbscCurrentContexts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tbscCurrentContexts.setStatus("current")
_TbscCurrentResources_Type = Gauge32
_TbscCurrentResources_Object = MibScalar
tbscCurrentResources = _TbscCurrentResources_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 159, 2),
    _TbscCurrentResources_Type()
)
tbscCurrentResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tbscCurrentResources.setStatus("current")
_TerminalServiceGateway_ObjectIdentity = ObjectIdentity
terminalServiceGateway = _TerminalServiceGateway_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160)
)
_TsgConnectionRequestAuthTime_Type = Gauge32
_TsgConnectionRequestAuthTime_Object = MibScalar
tsgConnectionRequestAuthTime = _TsgConnectionRequestAuthTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 1),
    _TsgConnectionRequestAuthTime_Type()
)
tsgConnectionRequestAuthTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsgConnectionRequestAuthTime.setStatus("current")
_TsgCurrentConnections_Type = Gauge32
_TsgCurrentConnections_Object = MibScalar
tsgCurrentConnections = _TsgCurrentConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 2),
    _TsgCurrentConnections_Type()
)
tsgCurrentConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsgCurrentConnections.setStatus("current")
_TsgFailedConnectionAuthorization_Type = Gauge32
_TsgFailedConnectionAuthorization_Object = MibScalar
tsgFailedConnectionAuthorization = _TsgFailedConnectionAuthorization_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 3),
    _TsgFailedConnectionAuthorization_Type()
)
tsgFailedConnectionAuthorization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsgFailedConnectionAuthorization.setStatus("current")
_TsgFailedResourceAuthoization_Type = Gauge32
_TsgFailedResourceAuthoization_Object = MibScalar
tsgFailedResourceAuthoization = _TsgFailedResourceAuthoization_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 4),
    _TsgFailedResourceAuthoization_Type()
)
tsgFailedResourceAuthoization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsgFailedResourceAuthoization.setStatus("current")
_TsgFailedConnections_Type = Gauge32
_TsgFailedConnections_Object = MibScalar
tsgFailedConnections = _TsgFailedConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 5),
    _TsgFailedConnections_Type()
)
tsgFailedConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsgFailedConnections.setStatus("current")
_TsgSuccessfulConnections_Type = Gauge32
_TsgSuccessfulConnections_Object = MibScalar
tsgSuccessfulConnections = _TsgSuccessfulConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 6),
    _TsgSuccessfulConnections_Type()
)
tsgSuccessfulConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tsgSuccessfulConnections.setStatus("current")
_UddiAPICounts_ObjectIdentity = ObjectIdentity
uddiAPICounts = _UddiAPICounts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161)
)
_UddicAddpublisherAssertions_Type = Gauge32
_UddicAddpublisherAssertions_Object = MibScalar
uddicAddpublisherAssertions = _UddicAddpublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 1),
    _UddicAddpublisherAssertions_Type()
)
uddicAddpublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicAddpublisherAssertions.setStatus("current")
_UddicDeletebinding_Type = Gauge32
_UddicDeletebinding_Object = MibScalar
uddicDeletebinding = _UddicDeletebinding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 2),
    _UddicDeletebinding_Type()
)
uddicDeletebinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDeletebinding.setStatus("current")
_UddicDeletebusiness_Type = Gauge32
_UddicDeletebusiness_Object = MibScalar
uddicDeletebusiness = _UddicDeletebusiness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 3),
    _UddicDeletebusiness_Type()
)
uddicDeletebusiness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDeletebusiness.setStatus("current")
_UddicDeletepublisherAssertions_Type = Gauge32
_UddicDeletepublisherAssertions_Object = MibScalar
uddicDeletepublisherAssertions = _UddicDeletepublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 4),
    _UddicDeletepublisherAssertions_Type()
)
uddicDeletepublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDeletepublisherAssertions.setStatus("current")
_UddicDeleteservice_Type = Gauge32
_UddicDeleteservice_Object = MibScalar
uddicDeleteservice = _UddicDeleteservice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 5),
    _UddicDeleteservice_Type()
)
uddicDeleteservice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDeleteservice.setStatus("current")
_UddicDeletetModel_Type = Gauge32
_UddicDeletetModel_Object = MibScalar
uddicDeletetModel = _UddicDeletetModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 6),
    _UddicDeletetModel_Type()
)
uddicDeletetModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDeletetModel.setStatus("current")
_UddicDiscardauthToken_Type = Gauge32
_UddicDiscardauthToken_Object = MibScalar
uddicDiscardauthToken = _UddicDiscardauthToken_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 7),
    _UddicDiscardauthToken_Type()
)
uddicDiscardauthToken.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDiscardauthToken.setStatus("current")
_UddicDoping_Type = Gauge32
_UddicDoping_Object = MibScalar
uddicDoping = _UddicDoping_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 8),
    _UddicDoping_Type()
)
uddicDoping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicDoping.setStatus("current")
_UddicFindbinding_Type = Gauge32
_UddicFindbinding_Object = MibScalar
uddicFindbinding = _UddicFindbinding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 9),
    _UddicFindbinding_Type()
)
uddicFindbinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicFindbinding.setStatus("current")
_UddicFindbusiness_Type = Gauge32
_UddicFindbusiness_Object = MibScalar
uddicFindbusiness = _UddicFindbusiness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 10),
    _UddicFindbusiness_Type()
)
uddicFindbusiness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicFindbusiness.setStatus("current")
_UddicFindrelatedBusinesses_Type = Gauge32
_UddicFindrelatedBusinesses_Object = MibScalar
uddicFindrelatedBusinesses = _UddicFindrelatedBusinesses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 11),
    _UddicFindrelatedBusinesses_Type()
)
uddicFindrelatedBusinesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicFindrelatedBusinesses.setStatus("current")
_UddicFindservice_Type = Gauge32
_UddicFindservice_Object = MibScalar
uddicFindservice = _UddicFindservice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 12),
    _UddicFindservice_Type()
)
uddicFindservice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicFindservice.setStatus("current")
_UddicFindtModel_Type = Gauge32
_UddicFindtModel_Object = MibScalar
uddicFindtModel = _UddicFindtModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 13),
    _UddicFindtModel_Type()
)
uddicFindtModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicFindtModel.setStatus("current")
_UddicGetassertionStatusReport_Type = Gauge32
_UddicGetassertionStatusReport_Object = MibScalar
uddicGetassertionStatusReport = _UddicGetassertionStatusReport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 14),
    _UddicGetassertionStatusReport_Type()
)
uddicGetassertionStatusReport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetassertionStatusReport.setStatus("current")
_UddicGetauthToken_Type = Gauge32
_UddicGetauthToken_Object = MibScalar
uddicGetauthToken = _UddicGetauthToken_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 15),
    _UddicGetauthToken_Type()
)
uddicGetauthToken.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetauthToken.setStatus("current")
_UddicGetbindingDetail_Type = Gauge32
_UddicGetbindingDetail_Object = MibScalar
uddicGetbindingDetail = _UddicGetbindingDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 16),
    _UddicGetbindingDetail_Type()
)
uddicGetbindingDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetbindingDetail.setStatus("current")
_UddicGetbusinessDetail_Type = Gauge32
_UddicGetbusinessDetail_Object = MibScalar
uddicGetbusinessDetail = _UddicGetbusinessDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 17),
    _UddicGetbusinessDetail_Type()
)
uddicGetbusinessDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetbusinessDetail.setStatus("current")
_UddicGetbusinessDetailExt_Type = Gauge32
_UddicGetbusinessDetailExt_Object = MibScalar
uddicGetbusinessDetailExt = _UddicGetbusinessDetailExt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 18),
    _UddicGetbusinessDetailExt_Type()
)
uddicGetbusinessDetailExt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetbusinessDetailExt.setStatus("current")
_UddicGetchangeRecords_Type = Gauge32
_UddicGetchangeRecords_Object = MibScalar
uddicGetchangeRecords = _UddicGetchangeRecords_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 19),
    _UddicGetchangeRecords_Type()
)
uddicGetchangeRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetchangeRecords.setStatus("current")
_UddicGethighWaterMarks_Type = Gauge32
_UddicGethighWaterMarks_Object = MibScalar
uddicGethighWaterMarks = _UddicGethighWaterMarks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 20),
    _UddicGethighWaterMarks_Type()
)
uddicGethighWaterMarks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGethighWaterMarks.setStatus("current")
_UddicGetpublisherAssertions_Type = Gauge32
_UddicGetpublisherAssertions_Object = MibScalar
uddicGetpublisherAssertions = _UddicGetpublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 21),
    _UddicGetpublisherAssertions_Type()
)
uddicGetpublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetpublisherAssertions.setStatus("current")
_UddicGetregisteredInfo_Type = Gauge32
_UddicGetregisteredInfo_Object = MibScalar
uddicGetregisteredInfo = _UddicGetregisteredInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 22),
    _UddicGetregisteredInfo_Type()
)
uddicGetregisteredInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetregisteredInfo.setStatus("current")
_UddicGetrelatedCategories_Type = Gauge32
_UddicGetrelatedCategories_Object = MibScalar
uddicGetrelatedCategories = _UddicGetrelatedCategories_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 23),
    _UddicGetrelatedCategories_Type()
)
uddicGetrelatedCategories.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetrelatedCategories.setStatus("current")
_UddicGetserviceDetail_Type = Gauge32
_UddicGetserviceDetail_Object = MibScalar
uddicGetserviceDetail = _UddicGetserviceDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 24),
    _UddicGetserviceDetail_Type()
)
uddicGetserviceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGetserviceDetail.setStatus("current")
_UddicGettModelDetail_Type = Gauge32
_UddicGettModelDetail_Object = MibScalar
uddicGettModelDetail = _UddicGettModelDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 25),
    _UddicGettModelDetail_Type()
)
uddicGettModelDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicGettModelDetail.setStatus("current")
_UddicNotifychangeRecordAvailable_Type = Gauge32
_UddicNotifychangeRecordAvailable_Object = MibScalar
uddicNotifychangeRecordAvailable = _UddicNotifychangeRecordAvailable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 26),
    _UddicNotifychangeRecordAvailable_Type()
)
uddicNotifychangeRecordAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicNotifychangeRecordAvailable.setStatus("current")
_UddicSavebinding_Type = Gauge32
_UddicSavebinding_Object = MibScalar
uddicSavebinding = _UddicSavebinding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 27),
    _UddicSavebinding_Type()
)
uddicSavebinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicSavebinding.setStatus("current")
_UddicSavebusiness_Type = Gauge32
_UddicSavebusiness_Object = MibScalar
uddicSavebusiness = _UddicSavebusiness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 28),
    _UddicSavebusiness_Type()
)
uddicSavebusiness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicSavebusiness.setStatus("current")
_UddicSaveservice_Type = Gauge32
_UddicSaveservice_Object = MibScalar
uddicSaveservice = _UddicSaveservice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 29),
    _UddicSaveservice_Type()
)
uddicSaveservice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicSaveservice.setStatus("current")
_UddicSavetModel_Type = Gauge32
_UddicSavetModel_Object = MibScalar
uddicSavetModel = _UddicSavetModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 30),
    _UddicSavetModel_Type()
)
uddicSavetModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicSavetModel.setStatus("current")
_UddicSetpublisherAssertions_Type = Gauge32
_UddicSetpublisherAssertions_Object = MibScalar
uddicSetpublisherAssertions = _UddicSetpublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 31),
    _UddicSetpublisherAssertions_Type()
)
uddicSetpublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicSetpublisherAssertions.setStatus("current")
_UddicValidatecategorization_Type = Gauge32
_UddicValidatecategorization_Object = MibScalar
uddicValidatecategorization = _UddicValidatecategorization_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 32),
    _UddicValidatecategorization_Type()
)
uddicValidatecategorization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    uddicValidatecategorization.setStatus("current")
_UddiAPITimes_ObjectIdentity = ObjectIdentity
uddiAPITimes = _UddiAPITimes_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162)
)
_UdditAddpublisherAssertions_Type = Gauge32
_UdditAddpublisherAssertions_Object = MibScalar
udditAddpublisherAssertions = _UdditAddpublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 1),
    _UdditAddpublisherAssertions_Type()
)
udditAddpublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditAddpublisherAssertions.setStatus("current")
_UdditDeletebinding_Type = Gauge32
_UdditDeletebinding_Object = MibScalar
udditDeletebinding = _UdditDeletebinding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 2),
    _UdditDeletebinding_Type()
)
udditDeletebinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDeletebinding.setStatus("current")
_UdditDeletebusiness_Type = Gauge32
_UdditDeletebusiness_Object = MibScalar
udditDeletebusiness = _UdditDeletebusiness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 3),
    _UdditDeletebusiness_Type()
)
udditDeletebusiness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDeletebusiness.setStatus("current")
_UdditDeletepublisherAssertions_Type = Gauge32
_UdditDeletepublisherAssertions_Object = MibScalar
udditDeletepublisherAssertions = _UdditDeletepublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 4),
    _UdditDeletepublisherAssertions_Type()
)
udditDeletepublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDeletepublisherAssertions.setStatus("current")
_UdditDeleteservice_Type = Gauge32
_UdditDeleteservice_Object = MibScalar
udditDeleteservice = _UdditDeleteservice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 5),
    _UdditDeleteservice_Type()
)
udditDeleteservice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDeleteservice.setStatus("current")
_UdditDeletetModel_Type = Gauge32
_UdditDeletetModel_Object = MibScalar
udditDeletetModel = _UdditDeletetModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 6),
    _UdditDeletetModel_Type()
)
udditDeletetModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDeletetModel.setStatus("current")
_UdditDiscardauthToken_Type = Gauge32
_UdditDiscardauthToken_Object = MibScalar
udditDiscardauthToken = _UdditDiscardauthToken_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 7),
    _UdditDiscardauthToken_Type()
)
udditDiscardauthToken.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDiscardauthToken.setStatus("current")
_UdditDoping_Type = Gauge32
_UdditDoping_Object = MibScalar
udditDoping = _UdditDoping_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 8),
    _UdditDoping_Type()
)
udditDoping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditDoping.setStatus("current")
_UdditFindbinding_Type = Gauge32
_UdditFindbinding_Object = MibScalar
udditFindbinding = _UdditFindbinding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 9),
    _UdditFindbinding_Type()
)
udditFindbinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditFindbinding.setStatus("current")
_UdditFindbusiness_Type = Gauge32
_UdditFindbusiness_Object = MibScalar
udditFindbusiness = _UdditFindbusiness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 10),
    _UdditFindbusiness_Type()
)
udditFindbusiness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditFindbusiness.setStatus("current")
_UdditFindrelatedBusinesses_Type = Gauge32
_UdditFindrelatedBusinesses_Object = MibScalar
udditFindrelatedBusinesses = _UdditFindrelatedBusinesses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 11),
    _UdditFindrelatedBusinesses_Type()
)
udditFindrelatedBusinesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditFindrelatedBusinesses.setStatus("current")
_UdditFindservice_Type = Gauge32
_UdditFindservice_Object = MibScalar
udditFindservice = _UdditFindservice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 12),
    _UdditFindservice_Type()
)
udditFindservice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditFindservice.setStatus("current")
_UdditFindtModel_Type = Gauge32
_UdditFindtModel_Object = MibScalar
udditFindtModel = _UdditFindtModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 13),
    _UdditFindtModel_Type()
)
udditFindtModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditFindtModel.setStatus("current")
_UdditGetassertionStatusReport_Type = Gauge32
_UdditGetassertionStatusReport_Object = MibScalar
udditGetassertionStatusReport = _UdditGetassertionStatusReport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 14),
    _UdditGetassertionStatusReport_Type()
)
udditGetassertionStatusReport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetassertionStatusReport.setStatus("current")
_UdditGetauthToken_Type = Gauge32
_UdditGetauthToken_Object = MibScalar
udditGetauthToken = _UdditGetauthToken_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 15),
    _UdditGetauthToken_Type()
)
udditGetauthToken.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetauthToken.setStatus("current")
_UdditGetbindingDetail_Type = Gauge32
_UdditGetbindingDetail_Object = MibScalar
udditGetbindingDetail = _UdditGetbindingDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 16),
    _UdditGetbindingDetail_Type()
)
udditGetbindingDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetbindingDetail.setStatus("current")
_UdditGetbusinessDetail_Type = Gauge32
_UdditGetbusinessDetail_Object = MibScalar
udditGetbusinessDetail = _UdditGetbusinessDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 17),
    _UdditGetbusinessDetail_Type()
)
udditGetbusinessDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetbusinessDetail.setStatus("current")
_UdditGetbusinessDetailExt_Type = Gauge32
_UdditGetbusinessDetailExt_Object = MibScalar
udditGetbusinessDetailExt = _UdditGetbusinessDetailExt_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 18),
    _UdditGetbusinessDetailExt_Type()
)
udditGetbusinessDetailExt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetbusinessDetailExt.setStatus("current")
_UdditGetchangeRecords_Type = Gauge32
_UdditGetchangeRecords_Object = MibScalar
udditGetchangeRecords = _UdditGetchangeRecords_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 19),
    _UdditGetchangeRecords_Type()
)
udditGetchangeRecords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetchangeRecords.setStatus("current")
_UdditGethighWaterMarks_Type = Gauge32
_UdditGethighWaterMarks_Object = MibScalar
udditGethighWaterMarks = _UdditGethighWaterMarks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 20),
    _UdditGethighWaterMarks_Type()
)
udditGethighWaterMarks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGethighWaterMarks.setStatus("current")
_UdditGetpublisherAssertions_Type = Gauge32
_UdditGetpublisherAssertions_Object = MibScalar
udditGetpublisherAssertions = _UdditGetpublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 21),
    _UdditGetpublisherAssertions_Type()
)
udditGetpublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetpublisherAssertions.setStatus("current")
_UdditGetregisteredInfo_Type = Gauge32
_UdditGetregisteredInfo_Object = MibScalar
udditGetregisteredInfo = _UdditGetregisteredInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 22),
    _UdditGetregisteredInfo_Type()
)
udditGetregisteredInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetregisteredInfo.setStatus("current")
_UdditGetrelatedCategories_Type = Gauge32
_UdditGetrelatedCategories_Object = MibScalar
udditGetrelatedCategories = _UdditGetrelatedCategories_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 23),
    _UdditGetrelatedCategories_Type()
)
udditGetrelatedCategories.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetrelatedCategories.setStatus("current")
_UdditGetserviceDetail_Type = Gauge32
_UdditGetserviceDetail_Object = MibScalar
udditGetserviceDetail = _UdditGetserviceDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 24),
    _UdditGetserviceDetail_Type()
)
udditGetserviceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGetserviceDetail.setStatus("current")
_UdditGettModelDetail_Type = Gauge32
_UdditGettModelDetail_Object = MibScalar
udditGettModelDetail = _UdditGettModelDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 25),
    _UdditGettModelDetail_Type()
)
udditGettModelDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditGettModelDetail.setStatus("current")
_UdditNotifychangeRecordAvailable_Type = Gauge32
_UdditNotifychangeRecordAvailable_Object = MibScalar
udditNotifychangeRecordAvailable = _UdditNotifychangeRecordAvailable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 26),
    _UdditNotifychangeRecordAvailable_Type()
)
udditNotifychangeRecordAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditNotifychangeRecordAvailable.setStatus("current")
_UdditSavebinding_Type = Gauge32
_UdditSavebinding_Object = MibScalar
udditSavebinding = _UdditSavebinding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 27),
    _UdditSavebinding_Type()
)
udditSavebinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditSavebinding.setStatus("current")
_UdditSavebusiness_Type = Gauge32
_UdditSavebusiness_Object = MibScalar
udditSavebusiness = _UdditSavebusiness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 28),
    _UdditSavebusiness_Type()
)
udditSavebusiness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditSavebusiness.setStatus("current")
_UdditSaveservice_Type = Gauge32
_UdditSaveservice_Object = MibScalar
udditSaveservice = _UdditSaveservice_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 29),
    _UdditSaveservice_Type()
)
udditSaveservice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditSaveservice.setStatus("current")
_UdditSavetModel_Type = Gauge32
_UdditSavetModel_Object = MibScalar
udditSavetModel = _UdditSavetModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 30),
    _UdditSavetModel_Type()
)
udditSavetModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditSavetModel.setStatus("current")
_UdditSetpublisherAssertions_Type = Gauge32
_UdditSetpublisherAssertions_Object = MibScalar
udditSetpublisherAssertions = _UdditSetpublisherAssertions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 31),
    _UdditSetpublisherAssertions_Type()
)
udditSetpublisherAssertions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditSetpublisherAssertions.setStatus("current")
_UdditValidatecategorization_Type = Gauge32
_UdditValidatecategorization_Object = MibScalar
udditValidatecategorization = _UdditValidatecategorization_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 32),
    _UdditValidatecategorization_Type()
)
udditValidatecategorization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udditValidatecategorization.setStatus("current")
_W3svcW3WPTable_Object = MibTable
w3svcW3WPTable = _W3svcW3WPTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163)
)
if mibBuilder.loadTexts:
    w3svcW3WPTable.setStatus("current")
_W3svcW3WPEntry_Object = MibTableRow
w3svcW3WPEntry = _W3svcW3WPEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1)
)
w3svcW3WPEntry.setIndexNames(
    (0, "INFORMANT-ADV", "w3svcInstance"),
)
if mibBuilder.loadTexts:
    w3svcW3WPEntry.setStatus("current")
_W3svcInstance_Type = InstanceName
_W3svcInstance_Object = MibTableColumn
w3svcInstance = _W3svcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 1),
    _W3svcInstance_Type()
)
w3svcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcInstance.setStatus("current")
_W3svcActiveFlushedEntries_Type = Gauge32
_W3svcActiveFlushedEntries_Object = MibTableColumn
w3svcActiveFlushedEntries = _W3svcActiveFlushedEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 2),
    _W3svcActiveFlushedEntries_Type()
)
w3svcActiveFlushedEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcActiveFlushedEntries.setStatus("current")
_W3svcActiveRequests_Type = Gauge32
_W3svcActiveRequests_Object = MibTableColumn
w3svcActiveRequests = _W3svcActiveRequests_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 3),
    _W3svcActiveRequests_Type()
)
w3svcActiveRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcActiveRequests.setStatus("current")
_W3svcActiveThreadsCount_Type = Gauge32
_W3svcActiveThreadsCount_Object = MibTableColumn
w3svcActiveThreadsCount = _W3svcActiveThreadsCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 4),
    _W3svcActiveThreadsCount_Type()
)
w3svcActiveThreadsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcActiveThreadsCount.setStatus("current")
_W3svcCurrentFileCacheMemoryUsage_Type = Gauge32
_W3svcCurrentFileCacheMemoryUsage_Object = MibTableColumn
w3svcCurrentFileCacheMemoryUsage = _W3svcCurrentFileCacheMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 5),
    _W3svcCurrentFileCacheMemoryUsage_Type()
)
w3svcCurrentFileCacheMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcCurrentFileCacheMemoryUsage.setStatus("current")
_W3svcCurrentFilesCached_Type = Gauge32
_W3svcCurrentFilesCached_Object = MibTableColumn
w3svcCurrentFilesCached = _W3svcCurrentFilesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 6),
    _W3svcCurrentFilesCached_Type()
)
w3svcCurrentFilesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcCurrentFilesCached.setStatus("current")
_W3svcCurrentMetadataCached_Type = Gauge32
_W3svcCurrentMetadataCached_Object = MibTableColumn
w3svcCurrentMetadataCached = _W3svcCurrentMetadataCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 7),
    _W3svcCurrentMetadataCached_Type()
)
w3svcCurrentMetadataCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcCurrentMetadataCached.setStatus("current")
_W3svcCurrentURIsCached_Type = Gauge32
_W3svcCurrentURIsCached_Object = MibTableColumn
w3svcCurrentURIsCached = _W3svcCurrentURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 8),
    _W3svcCurrentURIsCached_Type()
)
w3svcCurrentURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcCurrentURIsCached.setStatus("current")
_W3svcFileCacheFlushes_Type = Gauge32
_W3svcFileCacheFlushes_Object = MibTableColumn
w3svcFileCacheFlushes = _W3svcFileCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 9),
    _W3svcFileCacheFlushes_Type()
)
w3svcFileCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcFileCacheFlushes.setStatus("current")
_W3svcFileCacheHits_Type = Gauge32
_W3svcFileCacheHits_Object = MibTableColumn
w3svcFileCacheHits = _W3svcFileCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 10),
    _W3svcFileCacheHits_Type()
)
w3svcFileCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcFileCacheHits.setStatus("current")
_W3svcFileCacheHitsPerSec_Type = Gauge32
_W3svcFileCacheHitsPerSec_Object = MibTableColumn
w3svcFileCacheHitsPerSec = _W3svcFileCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 11),
    _W3svcFileCacheHitsPerSec_Type()
)
w3svcFileCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcFileCacheHitsPerSec.setStatus("current")
_W3svcFileCacheMisses_Type = Gauge32
_W3svcFileCacheMisses_Object = MibTableColumn
w3svcFileCacheMisses = _W3svcFileCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 12),
    _W3svcFileCacheMisses_Type()
)
w3svcFileCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcFileCacheMisses.setStatus("current")
_W3svcFileCacheMissesPerSec_Type = Gauge32
_W3svcFileCacheMissesPerSec_Object = MibTableColumn
w3svcFileCacheMissesPerSec = _W3svcFileCacheMissesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 13),
    _W3svcFileCacheMissesPerSec_Type()
)
w3svcFileCacheMissesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcFileCacheMissesPerSec.setStatus("current")
_W3svcMaximumFileCacheMemoryUsage_Type = Gauge32
_W3svcMaximumFileCacheMemoryUsage_Object = MibTableColumn
w3svcMaximumFileCacheMemoryUsage = _W3svcMaximumFileCacheMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 14),
    _W3svcMaximumFileCacheMemoryUsage_Type()
)
w3svcMaximumFileCacheMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMaximumFileCacheMemoryUsage.setStatus("current")
_W3svcMaximumThreadsCount_Type = Gauge32
_W3svcMaximumThreadsCount_Object = MibTableColumn
w3svcMaximumThreadsCount = _W3svcMaximumThreadsCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 15),
    _W3svcMaximumThreadsCount_Type()
)
w3svcMaximumThreadsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMaximumThreadsCount.setStatus("current")
_W3svcMetadataCacheFlushes_Type = Gauge32
_W3svcMetadataCacheFlushes_Object = MibTableColumn
w3svcMetadataCacheFlushes = _W3svcMetadataCacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 16),
    _W3svcMetadataCacheFlushes_Type()
)
w3svcMetadataCacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMetadataCacheFlushes.setStatus("current")
_W3svcMetadataCacheHits_Type = Gauge32
_W3svcMetadataCacheHits_Object = MibTableColumn
w3svcMetadataCacheHits = _W3svcMetadataCacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 17),
    _W3svcMetadataCacheHits_Type()
)
w3svcMetadataCacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMetadataCacheHits.setStatus("current")
_W3svcMetadataCacheHitsPerSec_Type = Gauge32
_W3svcMetadataCacheHitsPerSec_Object = MibTableColumn
w3svcMetadataCacheHitsPerSec = _W3svcMetadataCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 18),
    _W3svcMetadataCacheHitsPerSec_Type()
)
w3svcMetadataCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMetadataCacheHitsPerSec.setStatus("current")
_W3svcMetadataCacheMisses_Type = Gauge32
_W3svcMetadataCacheMisses_Object = MibTableColumn
w3svcMetadataCacheMisses = _W3svcMetadataCacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 19),
    _W3svcMetadataCacheMisses_Type()
)
w3svcMetadataCacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMetadataCacheMisses.setStatus("current")
_W3svcMetadataCacheMissesPerSec_Type = Gauge32
_W3svcMetadataCacheMissesPerSec_Object = MibTableColumn
w3svcMetadataCacheMissesPerSec = _W3svcMetadataCacheMissesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 20),
    _W3svcMetadataCacheMissesPerSec_Type()
)
w3svcMetadataCacheMissesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcMetadataCacheMissesPerSec.setStatus("current")
_W3svcOutputCacheCurrentFlushItem_Type = Gauge32
_W3svcOutputCacheCurrentFlushItem_Object = MibTableColumn
w3svcOutputCacheCurrentFlushItem = _W3svcOutputCacheCurrentFlushItem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 21),
    _W3svcOutputCacheCurrentFlushItem_Type()
)
w3svcOutputCacheCurrentFlushItem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheCurrentFlushItem.setStatus("current")
_W3svcOutputCacheCurrentItems_Type = Gauge32
_W3svcOutputCacheCurrentItems_Object = MibTableColumn
w3svcOutputCacheCurrentItems = _W3svcOutputCacheCurrentItems_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 22),
    _W3svcOutputCacheCurrentItems_Type()
)
w3svcOutputCacheCurrentItems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheCurrentItems.setStatus("current")
_W3svcOutputCacheCurrentMemUsage_Type = Gauge32
_W3svcOutputCacheCurrentMemUsage_Object = MibTableColumn
w3svcOutputCacheCurrentMemUsage = _W3svcOutputCacheCurrentMemUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 23),
    _W3svcOutputCacheCurrentMemUsage_Type()
)
w3svcOutputCacheCurrentMemUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheCurrentMemUsage.setStatus("current")
_W3svcOutputCacheHitsPerSec_Type = Gauge32
_W3svcOutputCacheHitsPerSec_Object = MibTableColumn
w3svcOutputCacheHitsPerSec = _W3svcOutputCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 24),
    _W3svcOutputCacheHitsPerSec_Type()
)
w3svcOutputCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheHitsPerSec.setStatus("current")
_W3svcOutputCacheMissesPerSec_Type = Gauge32
_W3svcOutputCacheMissesPerSec_Object = MibTableColumn
w3svcOutputCacheMissesPerSec = _W3svcOutputCacheMissesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 25),
    _W3svcOutputCacheMissesPerSec_Type()
)
w3svcOutputCacheMissesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheMissesPerSec.setStatus("current")
_W3svcOutputCacheTotalFlushItems_Type = Gauge32
_W3svcOutputCacheTotalFlushItems_Object = MibTableColumn
w3svcOutputCacheTotalFlushItems = _W3svcOutputCacheTotalFlushItems_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 26),
    _W3svcOutputCacheTotalFlushItems_Type()
)
w3svcOutputCacheTotalFlushItems.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheTotalFlushItems.setStatus("current")
_W3svcOutputCacheTotalFlushes_Type = Gauge32
_W3svcOutputCacheTotalFlushes_Object = MibTableColumn
w3svcOutputCacheTotalFlushes = _W3svcOutputCacheTotalFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 27),
    _W3svcOutputCacheTotalFlushes_Type()
)
w3svcOutputCacheTotalFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheTotalFlushes.setStatus("current")
_W3svcOutputCacheTotalHits_Type = Gauge32
_W3svcOutputCacheTotalHits_Object = MibTableColumn
w3svcOutputCacheTotalHits = _W3svcOutputCacheTotalHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 28),
    _W3svcOutputCacheTotalHits_Type()
)
w3svcOutputCacheTotalHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheTotalHits.setStatus("current")
_W3svcOutputCacheTotalMisses_Type = Gauge32
_W3svcOutputCacheTotalMisses_Object = MibTableColumn
w3svcOutputCacheTotalMisses = _W3svcOutputCacheTotalMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 29),
    _W3svcOutputCacheTotalMisses_Type()
)
w3svcOutputCacheTotalMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcOutputCacheTotalMisses.setStatus("current")
_W3svcRequestsPerSec_Type = Gauge32
_W3svcRequestsPerSec_Object = MibTableColumn
w3svcRequestsPerSec = _W3svcRequestsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 30),
    _W3svcRequestsPerSec_Type()
)
w3svcRequestsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcRequestsPerSec.setStatus("current")
_W3svcTotalFilesCached_Type = Gauge32
_W3svcTotalFilesCached_Object = MibTableColumn
w3svcTotalFilesCached = _W3svcTotalFilesCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 31),
    _W3svcTotalFilesCached_Type()
)
w3svcTotalFilesCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalFilesCached.setStatus("current")
_W3svcTotalFlushedFiles_Type = Gauge32
_W3svcTotalFlushedFiles_Object = MibTableColumn
w3svcTotalFlushedFiles = _W3svcTotalFlushedFiles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 32),
    _W3svcTotalFlushedFiles_Type()
)
w3svcTotalFlushedFiles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalFlushedFiles.setStatus("current")
_W3svcTotalFlushedMetadata_Type = Gauge32
_W3svcTotalFlushedMetadata_Object = MibTableColumn
w3svcTotalFlushedMetadata = _W3svcTotalFlushedMetadata_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 33),
    _W3svcTotalFlushedMetadata_Type()
)
w3svcTotalFlushedMetadata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalFlushedMetadata.setStatus("current")
_W3svcTotalFlushedURIs_Type = Gauge32
_W3svcTotalFlushedURIs_Object = MibTableColumn
w3svcTotalFlushedURIs = _W3svcTotalFlushedURIs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 34),
    _W3svcTotalFlushedURIs_Type()
)
w3svcTotalFlushedURIs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalFlushedURIs.setStatus("current")
_W3svcTotalHTTPRequestsServed_Type = Gauge32
_W3svcTotalHTTPRequestsServed_Object = MibTableColumn
w3svcTotalHTTPRequestsServed = _W3svcTotalHTTPRequestsServed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 35),
    _W3svcTotalHTTPRequestsServed_Type()
)
w3svcTotalHTTPRequestsServed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalHTTPRequestsServed.setStatus("current")
_W3svcTotalMetadataCached_Type = Gauge32
_W3svcTotalMetadataCached_Object = MibTableColumn
w3svcTotalMetadataCached = _W3svcTotalMetadataCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 36),
    _W3svcTotalMetadataCached_Type()
)
w3svcTotalMetadataCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalMetadataCached.setStatus("current")
_W3svcTotalThreads_Type = Gauge32
_W3svcTotalThreads_Object = MibTableColumn
w3svcTotalThreads = _W3svcTotalThreads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 37),
    _W3svcTotalThreads_Type()
)
w3svcTotalThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalThreads.setStatus("current")
_W3svcTotalURIsCached_Type = Gauge32
_W3svcTotalURIsCached_Object = MibTableColumn
w3svcTotalURIsCached = _W3svcTotalURIsCached_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 38),
    _W3svcTotalURIsCached_Type()
)
w3svcTotalURIsCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcTotalURIsCached.setStatus("current")
_W3svcURICacheFlushes_Type = Gauge32
_W3svcURICacheFlushes_Object = MibTableColumn
w3svcURICacheFlushes = _W3svcURICacheFlushes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 39),
    _W3svcURICacheFlushes_Type()
)
w3svcURICacheFlushes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcURICacheFlushes.setStatus("current")
_W3svcURICacheHits_Type = Gauge32
_W3svcURICacheHits_Object = MibTableColumn
w3svcURICacheHits = _W3svcURICacheHits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 40),
    _W3svcURICacheHits_Type()
)
w3svcURICacheHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcURICacheHits.setStatus("current")
_W3svcURICacheMisses_Type = Gauge32
_W3svcURICacheMisses_Object = MibTableColumn
w3svcURICacheMisses = _W3svcURICacheMisses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 41),
    _W3svcURICacheMisses_Type()
)
w3svcURICacheMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcURICacheMisses.setStatus("current")
_W3svcUriCacheHitsPerSec_Type = Gauge32
_W3svcUriCacheHitsPerSec_Object = MibTableColumn
w3svcUriCacheHitsPerSec = _W3svcUriCacheHitsPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 42),
    _W3svcUriCacheHitsPerSec_Type()
)
w3svcUriCacheHitsPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcUriCacheHitsPerSec.setStatus("current")
_W3svcUriCacheMissesPerSec_Type = Gauge32
_W3svcUriCacheMissesPerSec_Object = MibTableColumn
w3svcUriCacheMissesPerSec = _W3svcUriCacheMissesPerSec_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 43),
    _W3svcUriCacheMissesPerSec_Type()
)
w3svcUriCacheMissesPerSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    w3svcUriCacheMissesPerSec.setStatus("current")
_WasW3WPTable_Object = MibTable
wasW3WPTable = _WasW3WPTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164)
)
if mibBuilder.loadTexts:
    wasW3WPTable.setStatus("current")
_WasW3WPEntry_Object = MibTableRow
wasW3WPEntry = _WasW3WPEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1)
)
wasW3WPEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wasInstance"),
)
if mibBuilder.loadTexts:
    wasW3WPEntry.setStatus("current")
_WasInstance_Type = InstanceName
_WasInstance_Object = MibTableColumn
wasInstance = _WasInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 1),
    _WasInstance_Type()
)
wasInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasInstance.setStatus("current")
_WasActiveListenerChannels_Type = Gauge32
_WasActiveListenerChannels_Object = MibTableColumn
wasActiveListenerChannels = _WasActiveListenerChannels_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 2),
    _WasActiveListenerChannels_Type()
)
wasActiveListenerChannels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasActiveListenerChannels.setStatus("current")
_WasActiveProtocolHandlers_Type = Gauge32
_WasActiveProtocolHandlers_Object = MibTableColumn
wasActiveProtocolHandlers = _WasActiveProtocolHandlers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 3),
    _WasActiveProtocolHandlers_Type()
)
wasActiveProtocolHandlers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasActiveProtocolHandlers.setStatus("current")
_WasHealthPingReplyLatency_Type = Gauge32
_WasHealthPingReplyLatency_Object = MibTableColumn
wasHealthPingReplyLatency = _WasHealthPingReplyLatency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 4),
    _WasHealthPingReplyLatency_Type()
)
wasHealthPingReplyLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasHealthPingReplyLatency.setStatus("current")
_WasTotalHealthPings_Type = Gauge32
_WasTotalHealthPings_Object = MibTableColumn
wasTotalHealthPings = _WasTotalHealthPings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 5),
    _WasTotalHealthPings_Type()
)
wasTotalHealthPings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasTotalHealthPings.setStatus("current")
_WasTotalMessagesSentToWAS_Type = Gauge32
_WasTotalMessagesSentToWAS_Object = MibTableColumn
wasTotalMessagesSentToWAS = _WasTotalMessagesSentToWAS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 6),
    _WasTotalMessagesSentToWAS_Type()
)
wasTotalMessagesSentToWAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasTotalMessagesSentToWAS.setStatus("current")
_WasTotalRequestsServed_Type = Gauge32
_WasTotalRequestsServed_Object = MibTableColumn
wasTotalRequestsServed = _WasTotalRequestsServed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 7),
    _WasTotalRequestsServed_Type()
)
wasTotalRequestsServed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasTotalRequestsServed.setStatus("current")
_WasTotalRuntimeStatusQueries_Type = Gauge32
_WasTotalRuntimeStatusQueries_Object = MibTableColumn
wasTotalRuntimeStatusQueries = _WasTotalRuntimeStatusQueries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 8),
    _WasTotalRuntimeStatusQueries_Type()
)
wasTotalRuntimeStatusQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasTotalRuntimeStatusQueries.setStatus("current")
_WasTotalWASMessagesReceived_Type = Gauge32
_WasTotalWASMessagesReceived_Object = MibTableColumn
wasTotalWASMessagesReceived = _WasTotalWASMessagesReceived_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 9),
    _WasTotalWASMessagesReceived_Type()
)
wasTotalWASMessagesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wasTotalWASMessagesReceived.setStatus("current")
_WsrmPolicyTable_Object = MibTable
wsrmPolicyTable = _WsrmPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 165)
)
if mibBuilder.loadTexts:
    wsrmPolicyTable.setStatus("current")
_WsrmPolicyEntry_Object = MibTableRow
wsrmPolicyEntry = _WsrmPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 165, 1)
)
wsrmPolicyEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wsrmplInstance"),
)
if mibBuilder.loadTexts:
    wsrmPolicyEntry.setStatus("current")
_WsrmplInstance_Type = InstanceName
_WsrmplInstance_Object = MibTableColumn
wsrmplInstance = _WsrmplInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 165, 1, 1),
    _WsrmplInstance_Type()
)
wsrmplInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmplInstance.setStatus("current")
_WsrmplSystemManagedCPUPercent_Type = Gauge32
_WsrmplSystemManagedCPUPercent_Object = MibTableColumn
wsrmplSystemManagedCPUPercent = _WsrmplSystemManagedCPUPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 165, 1, 2),
    _WsrmplSystemManagedCPUPercent_Type()
)
wsrmplSystemManagedCPUPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmplSystemManagedCPUPercent.setStatus("current")
_WsrmProcessTable_Object = MibTable
wsrmProcessTable = _WsrmProcessTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 166)
)
if mibBuilder.loadTexts:
    wsrmProcessTable.setStatus("current")
_WsrmProcessEntry_Object = MibTableRow
wsrmProcessEntry = _WsrmProcessEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 166, 1)
)
wsrmProcessEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wsrmprInstance"),
)
if mibBuilder.loadTexts:
    wsrmProcessEntry.setStatus("current")
_WsrmprInstance_Type = InstanceName
_WsrmprInstance_Object = MibTableColumn
wsrmprInstance = _WsrmprInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 166, 1, 1),
    _WsrmprInstance_Type()
)
wsrmprInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmprInstance.setStatus("current")
_WsrmprActualManagedCPUPercent_Type = Gauge32
_WsrmprActualManagedCPUPercent_Object = MibTableColumn
wsrmprActualManagedCPUPercent = _WsrmprActualManagedCPUPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 166, 1, 2),
    _WsrmprActualManagedCPUPercent_Type()
)
wsrmprActualManagedCPUPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmprActualManagedCPUPercent.setStatus("current")
_WsrmProcessMatchingCriteriaTable_Object = MibTable
wsrmProcessMatchingCriteriaTable = _WsrmProcessMatchingCriteriaTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167)
)
if mibBuilder.loadTexts:
    wsrmProcessMatchingCriteriaTable.setStatus("current")
_WsrmProcessMatchingCriteriaEntry_Object = MibTableRow
wsrmProcessMatchingCriteriaEntry = _WsrmProcessMatchingCriteriaEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1)
)
wsrmProcessMatchingCriteriaEntry.setIndexNames(
    (0, "INFORMANT-ADV", "wsrmpmcInstance"),
)
if mibBuilder.loadTexts:
    wsrmProcessMatchingCriteriaEntry.setStatus("current")
_WsrmpmcInstance_Type = InstanceName
_WsrmpmcInstance_Object = MibTableColumn
wsrmpmcInstance = _WsrmpmcInstance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 1),
    _WsrmpmcInstance_Type()
)
wsrmpmcInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcInstance.setStatus("current")
_WsrmpmcActualManagedCPUPercent_Type = Gauge32
_WsrmpmcActualManagedCPUPercent_Object = MibTableColumn
wsrmpmcActualManagedCPUPercent = _WsrmpmcActualManagedCPUPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 2),
    _WsrmpmcActualManagedCPUPercent_Type()
)
wsrmpmcActualManagedCPUPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcActualManagedCPUPercent.setStatus("current")
_WsrmpmcManagedCPUPercent_Type = Gauge32
_WsrmpmcManagedCPUPercent_Object = MibTableColumn
wsrmpmcManagedCPUPercent = _WsrmpmcManagedCPUPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 3),
    _WsrmpmcManagedCPUPercent_Type()
)
wsrmpmcManagedCPUPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcManagedCPUPercent.setStatus("current")
_WsrmpmcPageFileMBytes_Type = Gauge32
_WsrmpmcPageFileMBytes_Object = MibTableColumn
wsrmpmcPageFileMBytes = _WsrmpmcPageFileMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 4),
    _WsrmpmcPageFileMBytes_Type()
)
wsrmpmcPageFileMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcPageFileMBytes.setStatus("current")
_WsrmpmcProcessCount_Type = Gauge32
_WsrmpmcProcessCount_Object = MibTableColumn
wsrmpmcProcessCount = _WsrmpmcProcessCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 5),
    _WsrmpmcProcessCount_Type()
)
wsrmpmcProcessCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcProcessCount.setStatus("current")
_WsrmpmcTargetManagedCPUPercent_Type = Gauge32
_WsrmpmcTargetManagedCPUPercent_Object = MibTableColumn
wsrmpmcTargetManagedCPUPercent = _WsrmpmcTargetManagedCPUPercent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 6),
    _WsrmpmcTargetManagedCPUPercent_Type()
)
wsrmpmcTargetManagedCPUPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcTargetManagedCPUPercent.setStatus("current")
_WsrmpmcWorkingSetMBytes_Type = Gauge32
_WsrmpmcWorkingSetMBytes_Object = MibTableColumn
wsrmpmcWorkingSetMBytes = _WsrmpmcWorkingSetMBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 7),
    _WsrmpmcWorkingSetMBytes_Type()
)
wsrmpmcWorkingSetMBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmpmcWorkingSetMBytes.setStatus("current")

# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "INFORMANT-ADV",
    **{"advanced": advanced,
       "acsPerRsvpServiceTable": acsPerRsvpServiceTable,
       "acsPerRsvpServiceEntry": acsPerRsvpServiceEntry,
       "acsPerRsvpSvcInstance": acsPerRsvpSvcInstance,
       "acsPerRsvpSvcBytesInQoSNotify": acsPerRsvpSvcBytesInQoSNotify,
       "acsPerRsvpSvcFailedQoSRequests": acsPerRsvpSvcFailedQoSRequests,
       "acsPerRsvpSvcFailedQoSSends": acsPerRsvpSvcFailedQoSSends,
       "acsPerRsvpSvcNetworkInterfaces": acsPerRsvpSvcNetworkInterfaces,
       "acsPerRsvpSvcNetworkSockets": acsPerRsvpSvcNetworkSockets,
       "acsPerRsvpSvcQoSNotifications": acsPerRsvpSvcQoSNotifications,
       "acsPerRsvpSvcQoSSockets": acsPerRsvpSvcQoSSockets,
       "acsPerRsvpSvcQoSEnabledReceivers": acsPerRsvpSvcQoSEnabledReceivers,
       "acsPerRsvpSvcQoSEnabledSenders": acsPerRsvpSvcQoSEnabledSenders,
       "acsPerRsvpSvcRSVPSessions": acsPerRsvpSvcRSVPSessions,
       "acsPerRsvpSvcTimers": acsPerRsvpSvcTimers,
       "activeServerPages": activeServerPages,
       "aspDebuggingRequests": aspDebuggingRequests,
       "aspEngineFlushNotifications": aspEngineFlushNotifications,
       "aspErrorsDuringScriptRuntime": aspErrorsDuringScriptRuntime,
       "aspErrorsFromASPPreprocessor": aspErrorsFromASPPreprocessor,
       "aspErrorsFromScriptCompilers": aspErrorsFromScriptCompilers,
       "aspErrorsPerSec": aspErrorsPerSec,
       "aspInMemoryTemplateCacheHitRate": aspInMemoryTemplateCacheHitRate,
       "aspInMemoryTemplatesCached": aspInMemoryTemplatesCached,
       "aspRequestBytesInTotal": aspRequestBytesInTotal,
       "aspRequestBytesOutTotal": aspRequestBytesOutTotal,
       "aspRequestExecutionTime": aspRequestExecutionTime,
       "aspRequestWaitTime": aspRequestWaitTime,
       "aspRequestsDisconnected": aspRequestsDisconnected,
       "aspRequestsExecuting": aspRequestsExecuting,
       "aspRequestsFailedTotal": aspRequestsFailedTotal,
       "aspRequestsNotAuthorized": aspRequestsNotAuthorized,
       "aspRequestsNotFound": aspRequestsNotFound,
       "aspRequestsQueued": aspRequestsQueued,
       "aspRequestsRejected": aspRequestsRejected,
       "aspRequestsSucceeded": aspRequestsSucceeded,
       "aspRequestsTimedOut": aspRequestsTimedOut,
       "aspRequestsTotal": aspRequestsTotal,
       "aspRequestsPerSec": aspRequestsPerSec,
       "aspScriptEngineCacheHitRate": aspScriptEngineCacheHitRate,
       "aspScriptEnginesCached": aspScriptEnginesCached,
       "aspSessionDuration": aspSessionDuration,
       "aspSessionsCurrent": aspSessionsCurrent,
       "aspSessionsTimedOut": aspSessionsTimedOut,
       "aspSessionsTotal": aspSessionsTotal,
       "aspTemplateCacheHitRate": aspTemplateCacheHitRate,
       "aspTemplateNotifications": aspTemplateNotifications,
       "aspTemplatesCached": aspTemplatesCached,
       "aspTransactionsAborted": aspTransactionsAborted,
       "aspTransactionsCommitted": aspTransactionsCommitted,
       "aspTransactionsPending": aspTransactionsPending,
       "aspTransactionsTotal": aspTransactionsTotal,
       "aspTransactionsPerSec": aspTransactionsPerSec,
       "appleTalkTable": appleTalkTable,
       "appleTalkEntry": appleTalkEntry,
       "atInstance": atInstance,
       "atAARPPacketsPerSec": atAARPPacketsPerSec,
       "atATPALOResponsePerSec": atATPALOResponsePerSec,
       "atATPPacketsPerSec": atATPPacketsPerSec,
       "atATPRecvdReleasePerSec": atATPRecvdReleasePerSec,
       "atATPResponseTimouts": atATPResponseTimouts,
       "atATPRetriesLocal": atATPRetriesLocal,
       "atATPRetriesRemote": atATPRetriesRemote,
       "atATPXOResponsePerSec": atATPXOResponsePerSec,
       "atAverageTimePerAARPPacket": atAverageTimePerAARPPacket,
       "atAverageTimePerATPPacket": atAverageTimePerATPPacket,
       "atAverageTimePerDDPPacket": atAverageTimePerDDPPacket,
       "atAverageTimePerNBPPacket": atAverageTimePerNBPPacket,
       "atAverageTimePerRTMPPacket": atAverageTimePerRTMPPacket,
       "atAverageTimePerZIPPacket": atAverageTimePerZIPPacket,
       "atBytesInPerSec": atBytesInPerSec,
       "atBytesOutPerSec": atBytesOutPerSec,
       "atCurrentNonPagedPool": atCurrentNonPagedPool,
       "atDDPPacketsPerSec": atDDPPacketsPerSec,
       "atNBPPacketsPerSec": atNBPPacketsPerSec,
       "atPacketsInPerSec": atPacketsInPerSec,
       "atPacketsOutPerSec": atPacketsOutPerSec,
       "atPacketsRoutedInPerSec": atPacketsRoutedInPerSec,
       "atPacketsRoutedOutPerSec": atPacketsRoutedOutPerSec,
       "atPacketsDropped": atPacketsDropped,
       "atRTMPPacketsPerSec": atRTMPPacketsPerSec,
       "atZIPPacketsPerSec": atZIPPacketsPerSec,
       "aspDotNET": aspDotNET,
       "adnApplicationRestarts": adnApplicationRestarts,
       "adnApplicationsRunning": adnApplicationsRunning,
       "adnRequestExecutionTime": adnRequestExecutionTime,
       "adnRequestWaitTime": adnRequestWaitTime,
       "adnRequestsCurrent": adnRequestsCurrent,
       "adnRequestsDisconnected": adnRequestsDisconnected,
       "adnRequestsQueued": adnRequestsQueued,
       "adnRequestsRejected": adnRequestsRejected,
       "adnStateServerSessionsAbandoned": adnStateServerSessionsAbandoned,
       "adnStateServerSessionsActive": adnStateServerSessionsActive,
       "adnStateServerSessionsTimedOut": adnStateServerSessionsTimedOut,
       "adnStateServerSessionsTotal": adnStateServerSessionsTotal,
       "adnWorkerProcessRestarts": adnWorkerProcessRestarts,
       "adnWorkerProcessesRunning": adnWorkerProcessesRunning,
       "adnAuditFailureEventsRaised": adnAuditFailureEventsRaised,
       "adnAuditSuccessEventsRaised": adnAuditSuccessEventsRaised,
       "adnErrorEventsRaised": adnErrorEventsRaised,
       "adnInfrastructErrorEventsRaised": adnInfrastructErrorEventsRaised,
       "adnRequestErrorEventsRaised": adnRequestErrorEventsRaised,
       "aspDotNETApplicationsTable": aspDotNETApplicationsTable,
       "aspDotNETApplicationsEntry": aspDotNETApplicationsEntry,
       "adnApplInstance": adnApplInstance,
       "adnApplAnonymousRequests": adnApplAnonymousRequests,
       "adnApplAnonymousRequestsPerSec": adnApplAnonymousRequestsPerSec,
       "adnApplCacheAPIEntries": adnApplCacheAPIEntries,
       "adnApplCacheAPIHitRatio": adnApplCacheAPIHitRatio,
       "adnApplCacheAPIHits": adnApplCacheAPIHits,
       "adnApplCacheAPIMisses": adnApplCacheAPIMisses,
       "adnApplCacheAPITurnoverRate": adnApplCacheAPITurnoverRate,
       "adnApplCacheTotalEntries": adnApplCacheTotalEntries,
       "adnApplCacheTotalHitRatio": adnApplCacheTotalHitRatio,
       "adnApplCacheTotalHits": adnApplCacheTotalHits,
       "adnApplCacheTotalMisses": adnApplCacheTotalMisses,
       "adnApplCacheTotalTurnoverRate": adnApplCacheTotalTurnoverRate,
       "adnApplCompilationsTotal": adnApplCompilationsTotal,
       "adnApplDebuggingRequests": adnApplDebuggingRequests,
       "adnApplErrorsCompilation": adnApplErrorsCompilation,
       "adnApplErrorsExecution": adnApplErrorsExecution,
       "adnApplErrorsPreprocessing": adnApplErrorsPreprocessing,
       "adnApplErrorsTotal": adnApplErrorsTotal,
       "adnApplErrorsTotalPerSec": adnApplErrorsTotalPerSec,
       "adnApplErrorsUnhandledExec": adnApplErrorsUnhandledExec,
       "adnApplErrorsUnhandledExecPerSec": adnApplErrorsUnhandledExecPerSec,
       "adnApplOutputCacheEntries": adnApplOutputCacheEntries,
       "adnApplOutputCacheHitRatio": adnApplOutputCacheHitRatio,
       "adnApplOutputCacheHits": adnApplOutputCacheHits,
       "adnApplOutputCacheMisses": adnApplOutputCacheMisses,
       "adnApplOutputCacheTurnoverRate": adnApplOutputCacheTurnoverRate,
       "adnApplPipelineInstanceCount": adnApplPipelineInstanceCount,
       "adnApplRequestBytesInTotal": adnApplRequestBytesInTotal,
       "adnApplRequestBytesOutTotal": adnApplRequestBytesOutTotal,
       "adnApplRequestsExecuting": adnApplRequestsExecuting,
       "adnApplRequestsFailed": adnApplRequestsFailed,
       "adnApplRequestsInApplQueue": adnApplRequestsInApplQueue,
       "adnApplRequestsNotAuthorized": adnApplRequestsNotAuthorized,
       "adnApplRequestsNotFound": adnApplRequestsNotFound,
       "adnApplRequestsSucceeded": adnApplRequestsSucceeded,
       "adnApplRequestsTimedOut": adnApplRequestsTimedOut,
       "adnApplRequestsTotal": adnApplRequestsTotal,
       "adnApplRequestsPerSec": adnApplRequestsPerSec,
       "adnApplSessionSQLSrvrConnTotal": adnApplSessionSQLSrvrConnTotal,
       "adnApplSessionStateSrvrConnTotal": adnApplSessionStateSrvrConnTotal,
       "adnApplSessionsAbandoned": adnApplSessionsAbandoned,
       "adnApplSessionsActive": adnApplSessionsActive,
       "adnApplSessionsTimedOut": adnApplSessionsTimedOut,
       "adnApplSessionsTotal": adnApplSessionsTotal,
       "adnApplTransactionsAborted": adnApplTransactionsAborted,
       "adnApplTransactionsCommitted": adnApplTransactionsCommitted,
       "adnApplTransactionsPending": adnApplTransactionsPending,
       "adnApplTransactionsTotal": adnApplTransactionsTotal,
       "adnApplTransactionsPerSec": adnApplTransactionsPerSec,
       "adnApplApplicationLifetimeEvents": adnApplApplicationLifetimeEvents,
       "adnApplApplLifetimeEventsPerSec": adnApplApplLifetimeEventsPerSec,
       "adnApplAuditFailureEventsRaised": adnApplAuditFailureEventsRaised,
       "adnApplAuditSuccessEventsRaised": adnApplAuditSuccessEventsRaised,
       "adnApplErrorEventsRaised": adnApplErrorEventsRaised,
       "adnApplErrorEventsRaisedPerSec": adnApplErrorEventsRaisedPerSec,
       "adnApplEventsRaised": adnApplEventsRaised,
       "adnApplEventsRaisedPerSec": adnApplEventsRaisedPerSec,
       "adnApplFormAuthenticationFailure": adnApplFormAuthenticationFailure,
       "adnApplFormAuthenticationSuccess": adnApplFormAuthenticationSuccess,
       "adnApplInfraErrEventRaised": adnApplInfraErrEventRaised,
       "adnApplInfraErrEventRaisedPerSec": adnApplInfraErrEventRaisedPerSec,
       "adnApplMembershipAuthFailure": adnApplMembershipAuthFailure,
       "adnApplMembershipAuthSuccess": adnApplMembershipAuthSuccess,
       "adnApplReqErrorEventRaised": adnApplReqErrorEventRaised,
       "adnApplReqErrorEventRaisedPerSec": adnApplReqErrorEventRaisedPerSec,
       "adnApplRequestEventsRaised": adnApplRequestEventsRaised,
       "adnApplRequestEventsRaisedPerSec": adnApplRequestEventsRaisedPerSec,
       "adnApplRequestExecutionTime": adnApplRequestExecutionTime,
       "adnApplRequestWaitTime": adnApplRequestWaitTime,
       "adnApplRequestsDisconnected": adnApplRequestsDisconnected,
       "adnApplRequestsRejected": adnApplRequestsRejected,
       "adnApplViewstateMACValidFailure": adnApplViewstateMACValidFailure,
       "adnApplCachePrcntMchneMemLimUsed": adnApplCachePrcntMchneMemLimUsed,
       "adnApplCachePrcntPrcMemLimitUsed": adnApplCachePrcntPrcMemLimitUsed,
       "adnApplCacheAPITrims": adnApplCacheAPITrims,
       "adnApplCacheTotalTrims": adnApplCacheTotalTrims,
       "adnApplOutputCacheTrims": adnApplOutputCacheTrims,
       "browser": browser,
       "browserAnnouncementsDomainPerSec": browserAnnouncementsDomainPerSec,
       "browserAnnouncementsServerPerSec": browserAnnouncementsServerPerSec,
       "browserAnnouncementsTotalPerSec": browserAnnouncementsTotalPerSec,
       "browserDuplicateMasterAnnounce": browserDuplicateMasterAnnounce,
       "browserElectionPacketsPerSec": browserElectionPacketsPerSec,
       "browserEnumerationsDomainPerSec": browserEnumerationsDomainPerSec,
       "browserEnumerationsOtherPerSec": browserEnumerationsOtherPerSec,
       "browserEnumerationsServerPerSec": browserEnumerationsServerPerSec,
       "browserEnumerationsTotalPerSec": browserEnumerationsTotalPerSec,
       "browserIllegalDatagramsPerSec": browserIllegalDatagramsPerSec,
       "browserMailslotAllocationsFailed": browserMailslotAllocationsFailed,
       "browserMailslotOpensFailedPerSec": browserMailslotOpensFailedPerSec,
       "browserMailslotReceivesFailed": browserMailslotReceivesFailed,
       "browserMailslotWritesFailed": browserMailslotWritesFailed,
       "browserMailslotWritesPerSec": browserMailslotWritesPerSec,
       "browserMissedMailslotDatagrams": browserMissedMailslotDatagrams,
       "browserMissedServerAnnouncements": browserMissedServerAnnouncements,
       "browserMissedServerListRequests": browserMissedServerListRequests,
       "browserServerAllocFailedPerSec": browserServerAllocFailedPerSec,
       "browserServerListRequestsPerSec": browserServerListRequestsPerSec,
       "cache": cache,
       "cacheAsyncCopyReadsPerSec": cacheAsyncCopyReadsPerSec,
       "cacheAsyncDataMapsPerSec": cacheAsyncDataMapsPerSec,
       "cacheAsyncFastReadsPerSec": cacheAsyncFastReadsPerSec,
       "cacheAsyncMDLReadsPerSec": cacheAsyncMDLReadsPerSec,
       "cacheAsyncPinReadsPerSec": cacheAsyncPinReadsPerSec,
       "cacheCopyReadHitsPercent": cacheCopyReadHitsPercent,
       "cacheCopyReadsPerSec": cacheCopyReadsPerSec,
       "cacheDataFlushPagesPerSec": cacheDataFlushPagesPerSec,
       "cacheDataFlushesPerSec": cacheDataFlushesPerSec,
       "cacheDataMapHitsPercent": cacheDataMapHitsPercent,
       "cacheDataMapPinsPerSec": cacheDataMapPinsPerSec,
       "cacheDataMapsPerSec": cacheDataMapsPerSec,
       "cacheFastReadNotPossiblesPerSec": cacheFastReadNotPossiblesPerSec,
       "cacheFastReadResourceMissPerSec": cacheFastReadResourceMissPerSec,
       "cacheFastReadsPerSec": cacheFastReadsPerSec,
       "cacheLazyWriteFlushesPerSec": cacheLazyWriteFlushesPerSec,
       "cacheLazyWritePagesPerSec": cacheLazyWritePagesPerSec,
       "cacheMDLReadHitsPercent": cacheMDLReadHitsPercent,
       "cacheMDLReadsPerSec": cacheMDLReadsPerSec,
       "cachePinReadHitsPercent": cachePinReadHitsPercent,
       "cachePinReadsPerSec": cachePinReadsPerSec,
       "cacheReadAheadsPerSec": cacheReadAheadsPerSec,
       "cacheSyncCopyReadsPerSec": cacheSyncCopyReadsPerSec,
       "cacheSyncDataMapsPerSec": cacheSyncDataMapsPerSec,
       "cacheSyncFastReadsPerSec": cacheSyncFastReadsPerSec,
       "cacheSyncMDLReadsPerSec": cacheSyncMDLReadsPerSec,
       "cacheSyncPinReadsPerSec": cacheSyncPinReadsPerSec,
       "dhcpServer": dhcpServer,
       "dhcpSrvAcksPerSec": dhcpSrvAcksPerSec,
       "dhcpSrvActiveQueueLength": dhcpSrvActiveQueueLength,
       "dhcpSrvConflictCheckQueueLength": dhcpSrvConflictCheckQueueLength,
       "dhcpSrvDeclinesPerSec": dhcpSrvDeclinesPerSec,
       "dhcpSrvDiscoversPerSec": dhcpSrvDiscoversPerSec,
       "dhcpSrvDuplicatesDroppedPerSec": dhcpSrvDuplicatesDroppedPerSec,
       "dhcpSrvInformsPerSec": dhcpSrvInformsPerSec,
       "dhcpSrvMillisecondsPerPacketAvg": dhcpSrvMillisecondsPerPacketAvg,
       "dhcpSrvNacksPerSec": dhcpSrvNacksPerSec,
       "dhcpSrvOffersPerSec": dhcpSrvOffersPerSec,
       "dhcpSrvPacketsExpiredPerSec": dhcpSrvPacketsExpiredPerSec,
       "dhcpSrvPacketsReceivedPerSec": dhcpSrvPacketsReceivedPerSec,
       "dhcpSrvReleasesPerSec": dhcpSrvReleasesPerSec,
       "dhcpSrvRequestsPerSec": dhcpSrvRequestsPerSec,
       "distributeTransactionCoordinator": distributeTransactionCoordinator,
       "dtcAbortedTransactions": dtcAbortedTransactions,
       "dtcAbortedTransactionsPerSec": dtcAbortedTransactionsPerSec,
       "dtcActiveTransactions": dtcActiveTransactions,
       "dtcActiveTransactionsMaximum": dtcActiveTransactionsMaximum,
       "dtcCommittedTransactions": dtcCommittedTransactions,
       "dtcCommittedTransactionsPerSec": dtcCommittedTransactionsPerSec,
       "dtcForceAbortedTransactions": dtcForceAbortedTransactions,
       "dtcForceCommittedTransactions": dtcForceCommittedTransactions,
       "dtcInDoubtTransactions": dtcInDoubtTransactions,
       "dtcResponseTimeAverage": dtcResponseTimeAverage,
       "dtcResponseTimeMaximum": dtcResponseTimeMaximum,
       "dtcResponseTimeMinimum": dtcResponseTimeMinimum,
       "dtcTransactionsPerSec": dtcTransactionsPerSec,
       "dns": dns,
       "dnsAXFRRequestReceived": dnsAXFRRequestReceived,
       "dnsAXFRRequestSent": dnsAXFRRequestSent,
       "dnsAXFRResponseReceived": dnsAXFRResponseReceived,
       "dnsAXFRSuccessReceived": dnsAXFRSuccessReceived,
       "dnsAXFRSuccessSent": dnsAXFRSuccessSent,
       "dnsCachingMemory": dnsCachingMemory,
       "dnsDatabaseNodeMemory": dnsDatabaseNodeMemory,
       "dnsDynamicUpdateNoOperation": dnsDynamicUpdateNoOperation,
       "dnsDynamicUpdateNoOpPerSec": dnsDynamicUpdateNoOpPerSec,
       "dnsDynamicUpdateQueued": dnsDynamicUpdateQueued,
       "dnsDynamicUpdateReceived": dnsDynamicUpdateReceived,
       "dnsDynamicUpdateReceivedPerSec": dnsDynamicUpdateReceivedPerSec,
       "dnsDynamicUpdateRejected": dnsDynamicUpdateRejected,
       "dnsDynamicUpdateTimeOuts": dnsDynamicUpdateTimeOuts,
       "dnsDynamicUpdateWriteToDB": dnsDynamicUpdateWriteToDB,
       "dnsDynamicUpdateWriteToDBPerSec": dnsDynamicUpdateWriteToDBPerSec,
       "dnsIXFRRequestReceived": dnsIXFRRequestReceived,
       "dnsIXFRRequestSent": dnsIXFRRequestSent,
       "dnsIXFRResponseReceived": dnsIXFRResponseReceived,
       "dnsIXFRSuccessReceived": dnsIXFRSuccessReceived,
       "dnsIXFRSuccessSent": dnsIXFRSuccessSent,
       "dnsIXFRTCPSuccessReceived": dnsIXFRTCPSuccessReceived,
       "dnsIXFRUDPSuccessReceived": dnsIXFRUDPSuccessReceived,
       "dnsNbstatMemory": dnsNbstatMemory,
       "dnsNotifyReceived": dnsNotifyReceived,
       "dnsNotifySent": dnsNotifySent,
       "dnsRecordFlowMemory": dnsRecordFlowMemory,
       "dnsRecursiveQueries": dnsRecursiveQueries,
       "dnsRecursiveQueriesPerSec": dnsRecursiveQueriesPerSec,
       "dnsRecursiveQueryFailure": dnsRecursiveQueryFailure,
       "dnsRecursiveQueryFailurePerSec": dnsRecursiveQueryFailurePerSec,
       "dnsRecursiveSendTimeOuts": dnsRecursiveSendTimeOuts,
       "dnsRecursiveTimeOutPerSec": dnsRecursiveTimeOutPerSec,
       "dnsSecureUpdateFailure": dnsSecureUpdateFailure,
       "dnsSecureUpdateReceived": dnsSecureUpdateReceived,
       "dnsSecureUpdateReceivedPerSec": dnsSecureUpdateReceivedPerSec,
       "dnsTCPMessageMemory": dnsTCPMessageMemory,
       "dnsTCPQueryReceived": dnsTCPQueryReceived,
       "dnsTCPQueryReceivedPerSec": dnsTCPQueryReceivedPerSec,
       "dnsTCPResponseSent": dnsTCPResponseSent,
       "dnsTCPResponseSentPerSec": dnsTCPResponseSentPerSec,
       "dnsTotalQueryReceived": dnsTotalQueryReceived,
       "dnsTotalQueryReceivedPerSec": dnsTotalQueryReceivedPerSec,
       "dnsTotalResponseSent": dnsTotalResponseSent,
       "dnsTotalResponseSentPerSec": dnsTotalResponseSentPerSec,
       "dnsUDPMessageMemory": dnsUDPMessageMemory,
       "dnsUDPQueryReceived": dnsUDPQueryReceived,
       "dnsUDPQueryReceivedPerSec": dnsUDPQueryReceivedPerSec,
       "dnsUDPResponseSent": dnsUDPResponseSent,
       "dnsUDPResponseSentPerSec": dnsUDPResponseSentPerSec,
       "dnsWINSLookupReceived": dnsWINSLookupReceived,
       "dnsWINSLookupReceivedPerSec": dnsWINSLookupReceivedPerSec,
       "dnsWINSResponseSent": dnsWINSResponseSent,
       "dnsWINSResponseSentPerSec": dnsWINSResponseSentPerSec,
       "dnsWINSReverseLookupReceived": dnsWINSReverseLookupReceived,
       "dnsWINSReverseLookupRcvPerSec": dnsWINSReverseLookupRcvPerSec,
       "dnsWINSReverseResponseSent": dnsWINSReverseResponseSent,
       "dnsWINSReverseResponseSentPerSec": dnsWINSReverseResponseSentPerSec,
       "dnsZoneTransferFailure": dnsZoneTransferFailure,
       "dnsZoneTransferRequestReceived": dnsZoneTransferRequestReceived,
       "dnsZoneTransferSOARequestSent": dnsZoneTransferSOARequestSent,
       "dnsZoneTransferSuccess": dnsZoneTransferSuccess,
       "dotNETCLRDataTable": dotNETCLRDataTable,
       "dotNETCLRDataEntry": dotNETCLRDataEntry,
       "ncdInstance": ncdInstance,
       "ncdSQLClntCurNumConnPools": ncdSQLClntCurNumConnPools,
       "ncdSQLClntCurNumConns": ncdSQLClntCurNumConns,
       "ncdSQLClntCurNumPoolConns": ncdSQLClntCurNumPoolConns,
       "ncdSQLClntPeakNumPoolConns": ncdSQLClntPeakNumPoolConns,
       "ncdSQLClntTotalNumFailedCommands": ncdSQLClntTotalNumFailedCommands,
       "ncdSQLClntTotalNumFailedConnects": ncdSQLClntTotalNumFailedConnects,
       "dotNETCLRExceptionsTable": dotNETCLRExceptionsTable,
       "dotNETCLRExceptionsEntry": dotNETCLRExceptionsEntry,
       "nceInstance": nceInstance,
       "nceNumOfExcepsThrown": nceNumOfExcepsThrown,
       "nceNumOfExcepsThrownPerSec": nceNumOfExcepsThrownPerSec,
       "nceNumOfFiltersPerSec": nceNumOfFiltersPerSec,
       "nceNumOfFinallysPerSec": nceNumOfFinallysPerSec,
       "nceThrowToCatchDepthPerSec": nceThrowToCatchDepthPerSec,
       "dotNETCLRInteropTable": dotNETCLRInteropTable,
       "dotNETCLRInteropEntry": dotNETCLRInteropEntry,
       "nciInstance": nciInstance,
       "nciNumOfCCWs": nciNumOfCCWs,
       "nciNumOfStubs": nciNumOfStubs,
       "nciNumOfTLBExportsPerSec": nciNumOfTLBExportsPerSec,
       "nciNumOfTLBImportsPerSec": nciNumOfTLBImportsPerSec,
       "nciNumOfMarshalling": nciNumOfMarshalling,
       "dotNETCLRJitTable": dotNETCLRJitTable,
       "dotNETCLRJitEntry": dotNETCLRJitEntry,
       "ncjInstance": ncjInstance,
       "ncjNumOfILBytesJitted": ncjNumOfILBytesJitted,
       "ncjNumOfMethodsJitted": ncjNumOfMethodsJitted,
       "ncjPercentTimeInJit": ncjPercentTimeInJit,
       "ncjILBytesJittedPerSec": ncjILBytesJittedPerSec,
       "ncjStandardJitFailures": ncjStandardJitFailures,
       "ncjTotalNumOfILBytesJitted": ncjTotalNumOfILBytesJitted,
       "dotNETCLRLoadingTable": dotNETCLRLoadingTable,
       "dotNETCLRLoadingEntry": dotNETCLRLoadingEntry,
       "nclInstance": nclInstance,
       "nclPercentTimeLoading": nclPercentTimeLoading,
       "nclAssemblySearchLength": nclAssemblySearchLength,
       "nclBytesInLoaderHeap": nclBytesInLoaderHeap,
       "nclCurrentAssemblies": nclCurrentAssemblies,
       "nclCurrentClassesLoaded": nclCurrentClassesLoaded,
       "nclCurrentAppdomains": nclCurrentAppdomains,
       "nclRateOfAssemblies": nclRateOfAssemblies,
       "nclRateOfClassesLoaded": nclRateOfClassesLoaded,
       "nclRateOfLoadFailures": nclRateOfLoadFailures,
       "nclRateOfAppdomains": nclRateOfAppdomains,
       "nclRateOfAppdomainsUnloaded": nclRateOfAppdomainsUnloaded,
       "nclTotalNumOfLoadFailures": nclTotalNumOfLoadFailures,
       "nclTotalAppdomains": nclTotalAppdomains,
       "nclTotalAssemblies": nclTotalAssemblies,
       "nclTotalClassesLoaded": nclTotalClassesLoaded,
       "nclTotalAppdomainsUnloaded": nclTotalAppdomainsUnloaded,
       "dotNETCLRLocksAndThreadsTable": dotNETCLRLocksAndThreadsTable,
       "dotNETCLRLocksAndThreadsEntry": dotNETCLRLocksAndThreadsEntry,
       "ncltInstance": ncltInstance,
       "ncltNumOfCurrentLogicalThread": ncltNumOfCurrentLogicalThread,
       "ncltNumOfCurrentPhysicalThread": ncltNumOfCurrentPhysicalThread,
       "ncltNumOfCurrentRecognizedThread": ncltNumOfCurrentRecognizedThread,
       "ncltNumOfTotalRecognizedThread": ncltNumOfTotalRecognizedThread,
       "ncltContentionRatePerSec": ncltContentionRatePerSec,
       "ncltCurrentQueueLength": ncltCurrentQueueLength,
       "ncltQueueLengthPerSec": ncltQueueLengthPerSec,
       "ncltQueueLengthPeak": ncltQueueLengthPeak,
       "ncltTotalNumOfContentions": ncltTotalNumOfContentions,
       "ncltRateOfRecognizedThreadPerSec": ncltRateOfRecognizedThreadPerSec,
       "dotNETCLRMemoryTable": dotNETCLRMemoryTable,
       "dotNETCLRMemoryEntry": dotNETCLRMemoryEntry,
       "ncmInstance": ncmInstance,
       "ncmNumBytesInAllHeaps": ncmNumBytesInAllHeaps,
       "ncmNumGCHandles": ncmNumGCHandles,
       "ncmNumGen0Collections": ncmNumGen0Collections,
       "ncmNumGen1Collections": ncmNumGen1Collections,
       "ncmNumGen2Collections": ncmNumGen2Collections,
       "ncmNumInducedGC": ncmNumInducedGC,
       "ncmNumTotalCommittedBytes": ncmNumTotalCommittedBytes,
       "ncmNumTotalReservedBytes": ncmNumTotalReservedBytes,
       "ncmNumOfPinnedObjects": ncmNumOfPinnedObjects,
       "ncmNumOfSinkBlocksInUse": ncmNumOfSinkBlocksInUse,
       "ncmPercentTimeInGC": ncmPercentTimeInGC,
       "ncmAllocatedBytesPerSec": ncmAllocatedBytesPerSec,
       "ncmFinalizationSurvivors": ncmFinalizationSurvivors,
       "ncmGen0PromotedBytesPerSec": ncmGen0PromotedBytesPerSec,
       "ncmGen0HeapSize": ncmGen0HeapSize,
       "ncmGen1PromotedBytesPerSec": ncmGen1PromotedBytesPerSec,
       "ncmGen1HeapSize": ncmGen1HeapSize,
       "ncmGen2HeapSize": ncmGen2HeapSize,
       "ncmLargeObjectHeapSize": ncmLargeObjectHeapSize,
       "ncmPromotFinalizationMemoryGen0": ncmPromotFinalizationMemoryGen0,
       "ncmPromotFinalizationMemoryGen1": ncmPromotFinalizationMemoryGen1,
       "ncmPromotedMemoryFromGen0": ncmPromotedMemoryFromGen0,
       "ncmPromotedMemoryFromGen1": ncmPromotedMemoryFromGen1,
       "ncmProcessID": ncmProcessID,
       "dotNETCLRNetworkingTable": dotNETCLRNetworkingTable,
       "dotNETCLRNetworkingEntry": dotNETCLRNetworkingEntry,
       "ncnInstance": ncnInstance,
       "ncnBytesReceived": ncnBytesReceived,
       "ncnBytesSent": ncnBytesSent,
       "ncnConnectionsEstablished": ncnConnectionsEstablished,
       "ncnDatagramsReceived": ncnDatagramsReceived,
       "ncnDatagramsSent": ncnDatagramsSent,
       "dotNETCLRRemotingTable": dotNETCLRRemotingTable,
       "dotNETCLRRemotingEntry": dotNETCLRRemotingEntry,
       "ncrInstance": ncrInstance,
       "ncrChannels": ncrChannels,
       "ncrContextProxies": ncrContextProxies,
       "ncrContextBoundClassesLoaded": ncrContextBoundClassesLoaded,
       "ncrContextBoundObjsAllocPerSec": ncrContextBoundObjsAllocPerSec,
       "ncrContexts": ncrContexts,
       "ncrRemoteCallsPerSec": ncrRemoteCallsPerSec,
       "ncrTotalRemoteCalls": ncrTotalRemoteCalls,
       "dotNETCLRSecurityTable": dotNETCLRSecurityTable,
       "dotNETCLRSecurityEntry": dotNETCLRSecurityEntry,
       "ncsInstance": ncsInstance,
       "ncsNumLinkTimeChecks": ncsNumLinkTimeChecks,
       "ncsPercentTimeSigAuthenticating": ncsPercentTimeSigAuthenticating,
       "ncsPercentTimeInRTChecks": ncsPercentTimeInRTChecks,
       "ncsStackWalkDepth": ncsStackWalkDepth,
       "ncsTotalRuntimeChecks": ncsTotalRuntimeChecks,
       "fileReplicaConnTable": fileReplicaConnTable,
       "fileReplicaConnEntry": fileReplicaConnEntry,
       "frcInstance": frcInstance,
       "frcAuthentications": frcAuthentications,
       "frcAuthenticationsInError": frcAuthenticationsInError,
       "frcBindings": frcBindings,
       "frcBindingsInError": frcBindingsInError,
       "frcCommunicationTimeouts": frcCommunicationTimeouts,
       "frcFetchBlocksReceived": frcFetchBlocksReceived,
       "frcFetchBlocksReceivedInBytes": frcFetchBlocksReceivedInBytes,
       "frcFetchBlocksSent": frcFetchBlocksSent,
       "frcFetchBlocksSentInBytes": frcFetchBlocksSentInBytes,
       "frcFetchRequestsReceived": frcFetchRequestsReceived,
       "frcFetchRequestsSent": frcFetchRequestsSent,
       "frcInboundChangeOrdersDampened": frcInboundChangeOrdersDampened,
       "frcJoinNotificationsReceived": frcJoinNotificationsReceived,
       "frcJoinNotificationsSent": frcJoinNotificationsSent,
       "frcJoins": frcJoins,
       "frcLocalChangeOrdersSent": frcLocalChangeOrdersSent,
       "frcLocalChangeOrdersSentAtJoin": frcLocalChangeOrdersSentAtJoin,
       "frcOutboundChangeOrdersDampened": frcOutboundChangeOrdersDampened,
       "frcPacketsSent": frcPacketsSent,
       "frcPacketsSentInBytes": frcPacketsSentInBytes,
       "frcPacketsSentInError": frcPacketsSentInError,
       "frcRemoteChangeOrdersReceived": frcRemoteChangeOrdersReceived,
       "frcRemoteChangeOrdersSent": frcRemoteChangeOrdersSent,
       "frcUnjoins": frcUnjoins,
       "fileReplicaSetTable": fileReplicaSetTable,
       "fileReplicaSetEntry": fileReplicaSetEntry,
       "frsInstance": frsInstance,
       "frsAuthentications": frsAuthentications,
       "frsAuthenticationsInError": frsAuthenticationsInError,
       "frsBindings": frsBindings,
       "frsBindingsInError": frsBindingsInError,
       "frsBytesOfFilesInstalled": frsBytesOfFilesInstalled,
       "frsBytesOfStagingFetched": frsBytesOfStagingFetched,
       "frsBytesOfStagingGenerated": frsBytesOfStagingGenerated,
       "frsBytesOfStagingRegenerated": frsBytesOfStagingRegenerated,
       "frsChgOrdersAborted": frsChgOrdersAborted,
       "frsChgOrdersEvaporated": frsChgOrdersEvaporated,
       "frsChgOrdersIssued": frsChgOrdersIssued,
       "frsChgOrdersMorphed": frsChgOrdersMorphed,
       "frsChgOrdersPropagated": frsChgOrdersPropagated,
       "frsChgOrdersReceived": frsChgOrdersReceived,
       "frsChgOrdersRetired": frsChgOrdersRetired,
       "frsChgOrdersRetried": frsChgOrdersRetried,
       "frsChgOrdersRetriedFetch": frsChgOrdersRetriedFetch,
       "frsChgOrdersRetriedGenerate": frsChgOrdersRetriedGenerate,
       "frsChgOrdersRetriedInstall": frsChgOrdersRetriedInstall,
       "frsChgOrdersRetriedRename": frsChgOrdersRetriedRename,
       "frsChgOrdersSent": frsChgOrdersSent,
       "frsCommunicationTimeouts": frsCommunicationTimeouts,
       "frsDSBindings": frsDSBindings,
       "frsDSBindingsInError": frsDSBindingsInError,
       "frsDSObjects": frsDSObjects,
       "frsDSObjectsInError": frsDSObjectsInError,
       "frsDSPolls": frsDSPolls,
       "frsDSPollsWithChgs": frsDSPollsWithChgs,
       "frsDSPollsWithoutChgs": frsDSPollsWithoutChgs,
       "frsDSSearches": frsDSSearches,
       "frsDSSearchesInError": frsDSSearchesInError,
       "frsFetchBlocksReceived": frsFetchBlocksReceived,
       "frsFetchBlocksReceivedInBytes": frsFetchBlocksReceivedInBytes,
       "frsFetchBlocksSent": frsFetchBlocksSent,
       "frsFetchBlocksSentInBytes": frsFetchBlocksSentInBytes,
       "frsFetchRequestsReceived": frsFetchRequestsReceived,
       "frsFetchRequestsSent": frsFetchRequestsSent,
       "frsFilesInstalled": frsFilesInstalled,
       "frsFilesInstalledWithError": frsFilesInstalledWithError,
       "frsInboundChgOrdersDampened": frsInboundChgOrdersDampened,
       "frsJoinNotificationsReceived": frsJoinNotificationsReceived,
       "frsJoinNotificationsSent": frsJoinNotificationsSent,
       "frsJoins": frsJoins,
       "frsKBOfStagingSpaceFree": frsKBOfStagingSpaceFree,
       "frsKBOfStagingSpaceInUse": frsKBOfStagingSpaceInUse,
       "frsLocalChgOrdersAborted": frsLocalChgOrdersAborted,
       "frsLocalChgOrdersIssued": frsLocalChgOrdersIssued,
       "frsLocalChgOrdersMorphed": frsLocalChgOrdersMorphed,
       "frsLocalChgOrdersPropagated": frsLocalChgOrdersPropagated,
       "frsLocalChgOrdersRetired": frsLocalChgOrdersRetired,
       "frsLocalChgOrdersRetried": frsLocalChgOrdersRetried,
       "frsLocalChgOrdersRetriedFetch": frsLocalChgOrdersRetriedFetch,
       "frsLocalChgOrdersRetriedGenerate": frsLocalChgOrdersRetriedGenerate,
       "frsLocalChgOrdersRetriedInstall": frsLocalChgOrdersRetriedInstall,
       "frsLocalChgOrdersRetriedRename": frsLocalChgOrdersRetriedRename,
       "frsLocalChgOrdersSent": frsLocalChgOrdersSent,
       "frsLocalChgOrdersSentJoin": frsLocalChgOrdersSentJoin,
       "frsOutboundChgOrdersDampened": frsOutboundChgOrdersDampened,
       "frsPacketsReceived": frsPacketsReceived,
       "frsPacketsReceivedInBytes": frsPacketsReceivedInBytes,
       "frsPacketsReceivedInError": frsPacketsReceivedInError,
       "frsPacketsSent": frsPacketsSent,
       "frsPacketsSentInBytes": frsPacketsSentInBytes,
       "frsPacketsSentInError": frsPacketsSentInError,
       "frsRemoteChgOrdersAborted": frsRemoteChgOrdersAborted,
       "frsRemoteChgOrdersIssued": frsRemoteChgOrdersIssued,
       "frsRemoteChgOrdersMorphed": frsRemoteChgOrdersMorphed,
       "frsRemoteChgOrdersPropagated": frsRemoteChgOrdersPropagated,
       "frsRemoteChgOrdersReceived": frsRemoteChgOrdersReceived,
       "frsRemoteChgOrdersRetired": frsRemoteChgOrdersRetired,
       "frsRemoteChgOrdersRetried": frsRemoteChgOrdersRetried,
       "frsRemoteChgOrdersRetriedFetch": frsRemoteChgOrdersRetriedFetch,
       "frsRemoteChgOrdersRetriedGenerat": frsRemoteChgOrdersRetriedGenerat,
       "frsRemoteChgOrdersRetriedInstall": frsRemoteChgOrdersRetriedInstall,
       "frsRemoteChgOrdersRetriedRename": frsRemoteChgOrdersRetriedRename,
       "frsRemoteChgOrdersSent": frsRemoteChgOrdersSent,
       "frsReplicaSetsCreated": frsReplicaSetsCreated,
       "frsReplicaSetsDeleted": frsReplicaSetsDeleted,
       "frsReplicaSetsRemoved": frsReplicaSetsRemoved,
       "frsReplicaSetsStarted": frsReplicaSetsStarted,
       "frsStagingFilesFetched": frsStagingFilesFetched,
       "frsStagingFilesGenerated": frsStagingFilesGenerated,
       "frsStagingFilesGeneratedWithErr": frsStagingFilesGeneratedWithErr,
       "frsStagingFilesRegenerated": frsStagingFilesRegenerated,
       "frsThreadsExited": frsThreadsExited,
       "frsThreadsStarted": frsThreadsStarted,
       "frsUnjoins": frsUnjoins,
       "frsUsnReads": frsUsnReads,
       "frsUsnRecordsAccepted": frsUsnRecordsAccepted,
       "frsUsnRecordsExamined": frsUsnRecordsExamined,
       "frsUsnRecordsRejected": frsUsnRecordsRejected,
       "ftpServiceTable": ftpServiceTable,
       "ftpServiceEntry": ftpServiceEntry,
       "ftpSvcInstance": ftpSvcInstance,
       "ftpSvcBytesReceivedPerSec": ftpSvcBytesReceivedPerSec,
       "ftpSvcBytesSentPerSec": ftpSvcBytesSentPerSec,
       "ftpSvcBytesTotalPerSec": ftpSvcBytesTotalPerSec,
       "ftpSvcCurrentAnonymousUsers": ftpSvcCurrentAnonymousUsers,
       "ftpSvcCurrentConnections": ftpSvcCurrentConnections,
       "ftpSvcCurrentNonAnonymousUsers": ftpSvcCurrentNonAnonymousUsers,
       "ftpSvcFTPServiceUptime": ftpSvcFTPServiceUptime,
       "ftpSvcMaximumAnonymousUsers": ftpSvcMaximumAnonymousUsers,
       "ftpSvcMaximumConnections": ftpSvcMaximumConnections,
       "ftpSvcMaximumNonAnonymousUsers": ftpSvcMaximumNonAnonymousUsers,
       "ftpSvcTotalAnonymousUsers": ftpSvcTotalAnonymousUsers,
       "ftpSvcTotalConnAttemptsAllInst": ftpSvcTotalConnAttemptsAllInst,
       "ftpSvcTotalFilesReceived": ftpSvcTotalFilesReceived,
       "ftpSvcTotalFilesSent": ftpSvcTotalFilesSent,
       "ftpSvcTotalFilesTransferred": ftpSvcTotalFilesTransferred,
       "ftpSvcTotalLogonAttempts": ftpSvcTotalLogonAttempts,
       "ftpSvcTotalNonAnonymousUsers": ftpSvcTotalNonAnonymousUsers,
       "gatewayServiceForNetWare": gatewayServiceForNetWare,
       "nwBytesReceivedPerSec": nwBytesReceivedPerSec,
       "nwBytesTotalPerSec": nwBytesTotalPerSec,
       "nwBytesTransmittedPerSec": nwBytesTransmittedPerSec,
       "nwConnectNetWare2X": nwConnectNetWare2X,
       "nwConnectNetWare3X": nwConnectNetWare3X,
       "nwConnectNetWare4X": nwConnectNetWare4X,
       "nwFileDataOperationsPerSec": nwFileDataOperationsPerSec,
       "nwFileReadOperationsPerSec": nwFileReadOperationsPerSec,
       "nwFileWriteOperationsPerSec": nwFileWriteOperationsPerSec,
       "nwPacketBurstIOPerSec": nwPacketBurstIOPerSec,
       "nwPacketBurstReadNCPCountPerSec": nwPacketBurstReadNCPCountPerSec,
       "nwPacketBurstReadTimeoutsPerSec": nwPacketBurstReadTimeoutsPerSec,
       "nwPacketBurstWriteNCPCountPerSec": nwPacketBurstWriteNCPCountPerSec,
       "nwPacketBurstWriteTimeoutsPerSec": nwPacketBurstWriteTimeoutsPerSec,
       "nwPacketsReceivedPerSec": nwPacketsReceivedPerSec,
       "nwPacketsTransmittedPerSec": nwPacketsTransmittedPerSec,
       "nwPacketsPerSec": nwPacketsPerSec,
       "nwReadOperationsRandomPerSec": nwReadOperationsRandomPerSec,
       "nwReadPacketsPerSec": nwReadPacketsPerSec,
       "nwServerDisconnects": nwServerDisconnects,
       "nwServerReconnects": nwServerReconnects,
       "nwServerSessions": nwServerSessions,
       "nwWriteOperationsRandomPerSec": nwWriteOperationsRandomPerSec,
       "nwWritePacketsPerSec": nwWritePacketsPerSec,
       "iasAccountingClientsTable": iasAccountingClientsTable,
       "iasAccountingClientsEntry": iasAccountingClientsEntry,
       "iccInstance": iccInstance,
       "iccAccountingRequests": iccAccountingRequests,
       "iccAccountingRequestsPerSec": iccAccountingRequestsPerSec,
       "iccAccountingResponses": iccAccountingResponses,
       "iccAccountingResponsesPerSec": iccAccountingResponsesPerSec,
       "iccBadAuthenticators": iccBadAuthenticators,
       "iccBadAuthenticatorsPerSec": iccBadAuthenticatorsPerSec,
       "iccDroppedPackets": iccDroppedPackets,
       "iccDroppedPacketsPerSec": iccDroppedPacketsPerSec,
       "iccDuplicateAccountingRequests": iccDuplicateAccountingRequests,
       "iccDuplicateAccountingRqstPerSec": iccDuplicateAccountingRqstPerSec,
       "iccMalformedPackets": iccMalformedPackets,
       "iccMalformedPacketsPerSec": iccMalformedPacketsPerSec,
       "iccNoRecord": iccNoRecord,
       "iccNoRecordPerSec": iccNoRecordPerSec,
       "iccPacketsReceived": iccPacketsReceived,
       "iccPacketsReceivedPerSec": iccPacketsReceivedPerSec,
       "iccPacketsSent": iccPacketsSent,
       "iccPacketsSentPerSec": iccPacketsSentPerSec,
       "iccUnknownType": iccUnknownType,
       "iccUnknownTypePerSec": iccUnknownTypePerSec,
       "iasAccountingProxy": iasAccountingProxy,
       "icpAccountingRequests": icpAccountingRequests,
       "icpAccountingRequestsPerSec": icpAccountingRequestsPerSec,
       "icpAccountingResponses": icpAccountingResponses,
       "icpAccountingResponsesPerSec": icpAccountingResponsesPerSec,
       "icpBadAuthenticators": icpBadAuthenticators,
       "icpBadAuthenticatorsPerSec": icpBadAuthenticatorsPerSec,
       "icpDroppedPackets": icpDroppedPackets,
       "icpDroppedPacketsPerSec": icpDroppedPacketsPerSec,
       "icpInvalidAddresses": icpInvalidAddresses,
       "icpInvalidAddressesPerSec": icpInvalidAddressesPerSec,
       "icpMalformedPackets": icpMalformedPackets,
       "icpMalformedPacketsPerSec": icpMalformedPacketsPerSec,
       "icpPacketsReceived": icpPacketsReceived,
       "icpPacketsReceivedPerSec": icpPacketsReceivedPerSec,
       "icpPendingRequests": icpPendingRequests,
       "icpRequestTimeouts": icpRequestTimeouts,
       "icpRequestTimeoutsPerSec": icpRequestTimeoutsPerSec,
       "icpRetransmissions": icpRetransmissions,
       "icpRetransmissionsPerSec": icpRetransmissionsPerSec,
       "icpUnknownType": icpUnknownType,
       "icpUnknownTypePerSec": icpUnknownTypePerSec,
       "iasAccountingServer": iasAccountingServer,
       "icsAccountingRequests": icsAccountingRequests,
       "icsAccountingRequestsPerSec": icsAccountingRequestsPerSec,
       "icsAccountingResponses": icsAccountingResponses,
       "icsAccountingResponsesPerSec": icsAccountingResponsesPerSec,
       "icsBadAuthenticators": icsBadAuthenticators,
       "icsBadAuthenticatorsPerSec": icsBadAuthenticatorsPerSec,
       "icsDroppedPackets": icsDroppedPackets,
       "icsDroppedPacketsPerSec": icsDroppedPacketsPerSec,
       "icsDuplicateAccountingRequests": icsDuplicateAccountingRequests,
       "icsDuplicateAccountingRqstPerSec": icsDuplicateAccountingRqstPerSec,
       "icsInvalidRequests": icsInvalidRequests,
       "icsInvalidRequestsPerSec": icsInvalidRequestsPerSec,
       "icsMalformedPackets": icsMalformedPackets,
       "icsMalformedPacketsPerSec": icsMalformedPacketsPerSec,
       "icsNoRecord": icsNoRecord,
       "icsNoRecordPerSec": icsNoRecordPerSec,
       "icsPacketsReceived": icsPacketsReceived,
       "icsPacketsReceivedPerSec": icsPacketsReceivedPerSec,
       "icsPacketsSent": icsPacketsSent,
       "icsPacketsSentPerSec": icsPacketsSentPerSec,
       "icsServerResetTime": icsServerResetTime,
       "icsServerUpTime": icsServerUpTime,
       "icsUnknownType": icsUnknownType,
       "icsUnknownTypePerSec": icsUnknownTypePerSec,
       "iasAuthenticationClientsTable": iasAuthenticationClientsTable,
       "iasAuthenticationClientsEntry": iasAuthenticationClientsEntry,
       "iucInstance": iucInstance,
       "iucAccessAccepts": iucAccessAccepts,
       "iucAccessAcceptsPerSec": iucAccessAcceptsPerSec,
       "iucAccessChallenges": iucAccessChallenges,
       "iucAccessChallengesPerSec": iucAccessChallengesPerSec,
       "iucAccessRejects": iucAccessRejects,
       "iucAccessRejectsPerSec": iucAccessRejectsPerSec,
       "iucAccessRequests": iucAccessRequests,
       "iucAccessRequestsPerSec": iucAccessRequestsPerSec,
       "iucBadAuthenticators": iucBadAuthenticators,
       "iucBadAuthenticatorsPerSec": iucBadAuthenticatorsPerSec,
       "iucDroppedPackets": iucDroppedPackets,
       "iucDroppedPacketsPerSec": iucDroppedPacketsPerSec,
       "iucDuplicateAccessRequests": iucDuplicateAccessRequests,
       "iucDuplicateAccessRequestsPerSec": iucDuplicateAccessRequestsPerSec,
       "iucMalformedPackets": iucMalformedPackets,
       "iucMalformedPacketsPerSec": iucMalformedPacketsPerSec,
       "iucPacketsReceived": iucPacketsReceived,
       "iucPacketsReceivedPerSec": iucPacketsReceivedPerSec,
       "iucPacketsSent": iucPacketsSent,
       "iucPacketsSentPerSec": iucPacketsSentPerSec,
       "iucUnknownType": iucUnknownType,
       "iucUnknownTypePerSec": iucUnknownTypePerSec,
       "iasAuthenticationProxy": iasAuthenticationProxy,
       "iupAccessAccepts": iupAccessAccepts,
       "iupAccessAcceptsPerSec": iupAccessAcceptsPerSec,
       "iupAccessChallenges": iupAccessChallenges,
       "iupAccessChallengesPerSec": iupAccessChallengesPerSec,
       "iupAccessRejects": iupAccessRejects,
       "iupAccessRejectsPerSec": iupAccessRejectsPerSec,
       "iupAccessRequests": iupAccessRequests,
       "iupAccessRequestsPerSec": iupAccessRequestsPerSec,
       "iupBadAuthenticators": iupBadAuthenticators,
       "iupBadAuthenticatorsPerSec": iupBadAuthenticatorsPerSec,
       "iupDroppedPackets": iupDroppedPackets,
       "iupDroppedPacketsPerSec": iupDroppedPacketsPerSec,
       "iupInvalidAddresses": iupInvalidAddresses,
       "iupInvalidAddressesPerSec": iupInvalidAddressesPerSec,
       "iupMalformedPackets": iupMalformedPackets,
       "iupMalformedPacketsPerSec": iupMalformedPacketsPerSec,
       "iupPacketsReceived": iupPacketsReceived,
       "iupPacketsReceivedPerSec": iupPacketsReceivedPerSec,
       "iupPendingRequests": iupPendingRequests,
       "iupRequestTimeouts": iupRequestTimeouts,
       "iupRequestTimeoutsPerSec": iupRequestTimeoutsPerSec,
       "iupRetransmissions": iupRetransmissions,
       "iupRetransmissionsPerSec": iupRetransmissionsPerSec,
       "iupUnknownType": iupUnknownType,
       "iupUnknownTypePerSec": iupUnknownTypePerSec,
       "iasAuthenticationServer": iasAuthenticationServer,
       "iusAccessAccepts": iusAccessAccepts,
       "iusAccessAcceptsPerSec": iusAccessAcceptsPerSec,
       "iusAccessChallenges": iusAccessChallenges,
       "iusAccessChallengesPerSec": iusAccessChallengesPerSec,
       "iusAccessRejects": iusAccessRejects,
       "iusAccessRejectsPerSec": iusAccessRejectsPerSec,
       "iusAccessRequests": iusAccessRequests,
       "iusAccessRequestsPerSec": iusAccessRequestsPerSec,
       "iusBadAuthenticators": iusBadAuthenticators,
       "iusBadAuthenticatorsPerSec": iusBadAuthenticatorsPerSec,
       "iusDroppedPackets": iusDroppedPackets,
       "iusDroppedPacketsPerSec": iusDroppedPacketsPerSec,
       "iusDuplicateAccessRequests": iusDuplicateAccessRequests,
       "iusDuplicateAccessRequestsPerSec": iusDuplicateAccessRequestsPerSec,
       "iusInvalidRequests": iusInvalidRequests,
       "iusInvalidRequestsPerSec": iusInvalidRequestsPerSec,
       "iusMalformedPackets": iusMalformedPackets,
       "iusMalformedPacketsPerSec": iusMalformedPacketsPerSec,
       "iusPacketsReceived": iusPacketsReceived,
       "iusPacketsReceivedPerSec": iusPacketsReceivedPerSec,
       "iusPacketsSent": iusPacketsSent,
       "iusPacketsSentPerSec": iusPacketsSentPerSec,
       "iusServerResetTime": iusServerResetTime,
       "iusServerUpTime": iusServerUpTime,
       "iusUnknownType": iusUnknownType,
       "iusUnknownTypePerSec": iusUnknownTypePerSec,
       "iasRemoteAccountingServersTable": iasRemoteAccountingServersTable,
       "iasRemoteAccountingServersEntry": iasRemoteAccountingServersEntry,
       "ircsInstance": ircsInstance,
       "ircsAccountingRequests": ircsAccountingRequests,
       "ircsAccountingRequestsPerSec": ircsAccountingRequestsPerSec,
       "ircsAccountingResponses": ircsAccountingResponses,
       "ircsAccountingResponsesPerSec": ircsAccountingResponsesPerSec,
       "ircsBadAuthenticators": ircsBadAuthenticators,
       "ircsBadAuthenticatorsPerSec": ircsBadAuthenticatorsPerSec,
       "ircsDroppedPackets": ircsDroppedPackets,
       "ircsDroppedPacketsPerSec": ircsDroppedPacketsPerSec,
       "ircsLastRoundTripTime": ircsLastRoundTripTime,
       "ircsMalformedPackets": ircsMalformedPackets,
       "ircsMalformedPacketsPerSec": ircsMalformedPacketsPerSec,
       "ircsPacketsReceived": ircsPacketsReceived,
       "ircsPacketsReceivedPerSec": ircsPacketsReceivedPerSec,
       "ircsPendingRequests": ircsPendingRequests,
       "ircsPortNumber": ircsPortNumber,
       "ircsRequestTimeouts": ircsRequestTimeouts,
       "ircsRequestTimeoutsPerSec": ircsRequestTimeoutsPerSec,
       "ircsRetransmissions": ircsRetransmissions,
       "ircsRetransmissionsPerSec": ircsRetransmissionsPerSec,
       "ircsUnknownType": ircsUnknownType,
       "ircsUnknownTypePerSec": ircsUnknownTypePerSec,
       "iasRemoteAuthenticationSrvrTable": iasRemoteAuthenticationSrvrTable,
       "iasRemoteAuthenticationSrvrEntry": iasRemoteAuthenticationSrvrEntry,
       "irusInstance": irusInstance,
       "irusAccessAccepts": irusAccessAccepts,
       "irusAccessAcceptsPerSec": irusAccessAcceptsPerSec,
       "irusAccessChallenges": irusAccessChallenges,
       "irusAccessChallengesPerSec": irusAccessChallengesPerSec,
       "irusAccessRejects": irusAccessRejects,
       "irusAccessRejectsPerSec": irusAccessRejectsPerSec,
       "irusAccessRequests": irusAccessRequests,
       "irusAccessRequestsPerSec": irusAccessRequestsPerSec,
       "irusBadAuthenticators": irusBadAuthenticators,
       "irusBadAuthenticatorsPerSec": irusBadAuthenticatorsPerSec,
       "irusDroppedPackets": irusDroppedPackets,
       "irusDroppedPacketsPerSec": irusDroppedPacketsPerSec,
       "irusLastRoundTripTime": irusLastRoundTripTime,
       "irusMalformedPackets": irusMalformedPackets,
       "irusMalformedPacketsPerSec": irusMalformedPacketsPerSec,
       "irusPacketsReceived": irusPacketsReceived,
       "irusPacketsReceivedPerSec": irusPacketsReceivedPerSec,
       "irusPendingRequests": irusPendingRequests,
       "irusPortNumber": irusPortNumber,
       "irusRequestTimeouts": irusRequestTimeouts,
       "irusRequestTimeoutsPerSec": irusRequestTimeoutsPerSec,
       "irusRetransmissions": irusRetransmissions,
       "irusRetransmissionsPerSec": irusRetransmissionsPerSec,
       "irusUnknownType": irusUnknownType,
       "irusUnknownTypePerSec": irusUnknownTypePerSec,
       "icmpV4": icmpV4,
       "icmpV4MessagesOutboundErrors": icmpV4MessagesOutboundErrors,
       "icmpV4MessagesReceivedErrors": icmpV4MessagesReceivedErrors,
       "icmpV4MessagesReceivedPerSec": icmpV4MessagesReceivedPerSec,
       "icmpV4MessagesSentPerSec": icmpV4MessagesSentPerSec,
       "icmpV4MessagesPerSec": icmpV4MessagesPerSec,
       "icmpV4RcvdAddressMask": icmpV4RcvdAddressMask,
       "icmpV4RcvdAddressMaskReply": icmpV4RcvdAddressMaskReply,
       "icmpV4RcvdDestUnreachable": icmpV4RcvdDestUnreachable,
       "icmpV4RcvdEchoReplyPerSec": icmpV4RcvdEchoReplyPerSec,
       "icmpV4RcvdEchoPerSec": icmpV4RcvdEchoPerSec,
       "icmpV4RcvdParameterProblem": icmpV4RcvdParameterProblem,
       "icmpV4RcvdRedirectPerSec": icmpV4RcvdRedirectPerSec,
       "icmpV4RcvdSourceQuench": icmpV4RcvdSourceQuench,
       "icmpV4RcvdTimeExceeded": icmpV4RcvdTimeExceeded,
       "icmpV4RcvdTimestampReplyPerSec": icmpV4RcvdTimestampReplyPerSec,
       "icmpV4RcvdTimestampPerSec": icmpV4RcvdTimestampPerSec,
       "icmpV4SentAddressMask": icmpV4SentAddressMask,
       "icmpV4SentAddressMaskReply": icmpV4SentAddressMaskReply,
       "icmpV4SentDestinationUnreachable": icmpV4SentDestinationUnreachable,
       "icmpV4SentEchoReplyPerSec": icmpV4SentEchoReplyPerSec,
       "icmpV4SentEchoPerSec": icmpV4SentEchoPerSec,
       "icmpV4SentParameterProblem": icmpV4SentParameterProblem,
       "icmpV4SentRedirectPerSec": icmpV4SentRedirectPerSec,
       "icmpV4SentSourceQuench": icmpV4SentSourceQuench,
       "icmpV4SentTimeExceeded": icmpV4SentTimeExceeded,
       "icmpV4SentTimestampReplyPerSec": icmpV4SentTimestampReplyPerSec,
       "icmpV4SentTimestampPerSec": icmpV4SentTimestampPerSec,
       "icmpV6": icmpV6,
       "icmpV6MessagesOutboundErrors": icmpV6MessagesOutboundErrors,
       "icmpV6MessagesReceivedErrors": icmpV6MessagesReceivedErrors,
       "icmpV6MessagesReceivedPerSec": icmpV6MessagesReceivedPerSec,
       "icmpV6MessagesSentPerSec": icmpV6MessagesSentPerSec,
       "icmpV6MessagesPerSec": icmpV6MessagesPerSec,
       "icmpV6ReceivedDestUnreachable": icmpV6ReceivedDestUnreachable,
       "icmpV6ReceivedEchoReplyPerSec": icmpV6ReceivedEchoReplyPerSec,
       "icmpV6ReceivedEchoPerSec": icmpV6ReceivedEchoPerSec,
       "icmpV6ReceivedMembershipQuery": icmpV6ReceivedMembershipQuery,
       "icmpV6ReceivedMembershipReduct": icmpV6ReceivedMembershipReduct,
       "icmpV6ReceivedMembershipReport": icmpV6ReceivedMembershipReport,
       "icmpV6ReceivedNeighborAdvert": icmpV6ReceivedNeighborAdvert,
       "icmpV6ReceivedNeighborSolicit": icmpV6ReceivedNeighborSolicit,
       "icmpV6ReceivedPacketTooBig": icmpV6ReceivedPacketTooBig,
       "icmpV6ReceivedParameterProblem": icmpV6ReceivedParameterProblem,
       "icmpV6ReceivedRedirectPerSec": icmpV6ReceivedRedirectPerSec,
       "icmpV6ReceivedRouterAdvert": icmpV6ReceivedRouterAdvert,
       "icmpV6ReceivedRouterSolicit": icmpV6ReceivedRouterSolicit,
       "icmpV6ReceivedTimeExceeded": icmpV6ReceivedTimeExceeded,
       "icmpV6SentDestinationUnreachable": icmpV6SentDestinationUnreachable,
       "icmpV6SentEchoReplyPerSec": icmpV6SentEchoReplyPerSec,
       "icmpV6SentEchoPerSec": icmpV6SentEchoPerSec,
       "icmpV6SentMembershipQuery": icmpV6SentMembershipQuery,
       "icmpV6SentMembershipReduction": icmpV6SentMembershipReduction,
       "icmpV6SentMembershipReport": icmpV6SentMembershipReport,
       "icmpV6SentNeighborAdvert": icmpV6SentNeighborAdvert,
       "icmpV6SentNeighborSolicit": icmpV6SentNeighborSolicit,
       "icmpV6SentPacketTooBig": icmpV6SentPacketTooBig,
       "icmpV6SentParameterProblem": icmpV6SentParameterProblem,
       "icmpV6SentRedirectPerSec": icmpV6SentRedirectPerSec,
       "icmpV6SentRouterAdvert": icmpV6SentRouterAdvert,
       "icmpV6SentRouterSolicit": icmpV6SentRouterSolicit,
       "icmpV6SentTimeExceeded": icmpV6SentTimeExceeded,
       "indexingServiceTable": indexingServiceTable,
       "indexingServiceEntry": indexingServiceEntry,
       "idxSvcInstance": idxSvcInstance,
       "idxSvcNumDocumentsIndexed": idxSvcNumDocumentsIndexed,
       "idxSvcDeferredForIndexing": idxSvcDeferredForIndexing,
       "idxSvcFilesToBeIndexed": idxSvcFilesToBeIndexed,
       "idxSvcIndexSizeMB": idxSvcIndexSizeMB,
       "idxSvcMergeProgress": idxSvcMergeProgress,
       "idxSvcRunningQueries": idxSvcRunningQueries,
       "idxSvcSavedIndexes": idxSvcSavedIndexes,
       "idxSvcTotalNumDocuments": idxSvcTotalNumDocuments,
       "idxSvcTotalNumOfQueries": idxSvcTotalNumOfQueries,
       "idxSvcUniqueKeys": idxSvcUniqueKeys,
       "idxSvcWordLists": idxSvcWordLists,
       "indexingServiceFilterTable": indexingServiceFilterTable,
       "indexingServiceFilterEntry": indexingServiceFilterEntry,
       "idxSvcFilterInstance": idxSvcFilterInstance,
       "idxSvcFilterBindingTimeMsec": idxSvcFilterBindingTimeMsec,
       "idxSvcFilterIdxSpeedMBPerHr": idxSvcFilterIdxSpeedMBPerHr,
       "idxSvcFilterTotalIdxSpeedMBPerHr": idxSvcFilterTotalIdxSpeedMBPerHr,
       "internetInformationServiceGlobal": internetInformationServiceGlobal,
       "iisGlobalActiveFlushedEntries": iisGlobalActiveFlushedEntries,
       "iisGlobalBLOBCacheFlushes": iisGlobalBLOBCacheFlushes,
       "iisGlobalBLOBCacheHits": iisGlobalBLOBCacheHits,
       "iisGlobalBLOBCacheHitsPercent": iisGlobalBLOBCacheHitsPercent,
       "iisGlobalBLOBCacheMisses": iisGlobalBLOBCacheMisses,
       "iisGlobalCurBLOBsCached": iisGlobalCurBLOBsCached,
       "iisGlobalCurBlockAsyncIORequests": iisGlobalCurBlockAsyncIORequests,
       "iisGlobalCurFileCacheMemUsage": iisGlobalCurFileCacheMemUsage,
       "iisGlobalCurFilesCached": iisGlobalCurFilesCached,
       "iisGlobalCurURIsCached": iisGlobalCurURIsCached,
       "iisGlobalFileCacheFlushes": iisGlobalFileCacheFlushes,
       "iisGlobalFileCacheHits": iisGlobalFileCacheHits,
       "iisGlobalFileCacheHitsPercent": iisGlobalFileCacheHitsPercent,
       "iisGlobalFileCacheMisses": iisGlobalFileCacheMisses,
       "iisGlobalMaxFileCacheMemUsage": iisGlobalMaxFileCacheMemUsage,
       "iisGlobalMeasuredAsyncIOBwUsage": iisGlobalMeasuredAsyncIOBwUsage,
       "iisGlobalTotalAllowedAsyncIOReqs": iisGlobalTotalAllowedAsyncIOReqs,
       "iisGlobalTotalBLOBsCached": iisGlobalTotalBLOBsCached,
       "iisGlobalTotalBlockAsyncIOReqs": iisGlobalTotalBlockAsyncIOReqs,
       "iisGlobalTotalFilesCached": iisGlobalTotalFilesCached,
       "iisGlobalTotalFlushedBLOBs": iisGlobalTotalFlushedBLOBs,
       "iisGlobalTotalFlushedFiles": iisGlobalTotalFlushedFiles,
       "iisGlobalTotalFlushedURIs": iisGlobalTotalFlushedURIs,
       "iisGlobalTotalRejectedAsyncIOReq": iisGlobalTotalRejectedAsyncIOReq,
       "iisGlobalTotalURIsCached": iisGlobalTotalURIsCached,
       "iisGlobalURICacheFlushes": iisGlobalURICacheFlushes,
       "iisGlobalURICacheHits": iisGlobalURICacheHits,
       "iisGlobalURICacheHitsPercent": iisGlobalURICacheHitsPercent,
       "iisGlobalURICacheMisses": iisGlobalURICacheMisses,
       "ipV4": ipV4,
       "ipV4DatagramsForwardedPerSec": ipV4DatagramsForwardedPerSec,
       "ipV4DatagramsOutboundDiscarded": ipV4DatagramsOutboundDiscarded,
       "ipV4DatagramsOutboundNoRoute": ipV4DatagramsOutboundNoRoute,
       "ipV4DatagramsRcvdAddressErrors": ipV4DatagramsRcvdAddressErrors,
       "ipV4DatagramsRcvdDeliveredPerSec": ipV4DatagramsRcvdDeliveredPerSec,
       "ipV4DatagramsRcvdDiscarded": ipV4DatagramsRcvdDiscarded,
       "ipV4DatagramsRcvdHeaderErrors": ipV4DatagramsRcvdHeaderErrors,
       "ipV4DatagramsRcvdUnknownProtocol": ipV4DatagramsRcvdUnknownProtocol,
       "ipV4DatagramsRcvdPerSec": ipV4DatagramsRcvdPerSec,
       "ipV4DatagramsSentPerSec": ipV4DatagramsSentPerSec,
       "ipV4DatagramsPerSec": ipV4DatagramsPerSec,
       "ipV4FragmentReassemblyFailures": ipV4FragmentReassemblyFailures,
       "ipV4FragmentationFailures": ipV4FragmentationFailures,
       "ipV4FragmentedDatagramsPerSec": ipV4FragmentedDatagramsPerSec,
       "ipV4FragmentsCreatedPerSec": ipV4FragmentsCreatedPerSec,
       "ipV4FragmentsReassembledPerSec": ipV4FragmentsReassembledPerSec,
       "ipV4FragmentsRcvdPerSec": ipV4FragmentsRcvdPerSec,
       "ipV6": ipV6,
       "ipV6DatagramsForwardedPerSec": ipV6DatagramsForwardedPerSec,
       "ipV6DatagramsOutboundDiscarded": ipV6DatagramsOutboundDiscarded,
       "ipV6DatagramsOutboundNoRoute": ipV6DatagramsOutboundNoRoute,
       "ipV6DatagramsRcvdAddressErrors": ipV6DatagramsRcvdAddressErrors,
       "ipV6DatagramsRcvdDeliveredPerSec": ipV6DatagramsRcvdDeliveredPerSec,
       "ipV6DatagramsRcvdDiscarded": ipV6DatagramsRcvdDiscarded,
       "ipV6DatagramsRcvdHeaderErrors": ipV6DatagramsRcvdHeaderErrors,
       "ipV6DatagramsRcvdUnknownProtocol": ipV6DatagramsRcvdUnknownProtocol,
       "ipV6DatagramsRcvdPerSec": ipV6DatagramsRcvdPerSec,
       "ipV6DatagramsSentPerSec": ipV6DatagramsSentPerSec,
       "ipV6DatagramsPerSec": ipV6DatagramsPerSec,
       "ipV6FragmentReassemblyFailures": ipV6FragmentReassemblyFailures,
       "ipV6FragmentationFailures": ipV6FragmentationFailures,
       "ipV6FragmentedDatagramsPerSec": ipV6FragmentedDatagramsPerSec,
       "ipV6FragmentsCreatedPerSec": ipV6FragmentsCreatedPerSec,
       "ipV6FragmentsReassembledPerSec": ipV6FragmentsReassembledPerSec,
       "ipV6FragmentsRcvdPerSec": ipV6FragmentsRcvdPerSec,
       "ipSecV4Driver": ipSecV4Driver,
       "is4dActiveSecurityAssociations": is4dActiveSecurityAssociations,
       "is4dOffloadedSecurityAssociation": is4dOffloadedSecurityAssociation,
       "is4dPendingKeyExchangeOperations": is4dPendingKeyExchangeOperations,
       "is4dTotalBadSPIPackets": is4dTotalBadSPIPackets,
       "is4dTotalBytesReceivedInTunnels": is4dTotalBytesReceivedInTunnels,
       "is4dTotalBytesSentInTunnels": is4dTotalBytesSentInTunnels,
       "is4dTotalOffloadedBytesReceived": is4dTotalOffloadedBytesReceived,
       "is4dTotalOffloadedBytesSent": is4dTotalOffloadedBytesSent,
       "is4dTotalPktsFailReplayDetection": is4dTotalPktsFailReplayDetection,
       "is4dTotalPktsNotAuthenticated": is4dTotalPktsNotAuthenticated,
       "is4dTotalPktsNotDecrypted": is4dTotalPktsNotDecrypted,
       "is4dTotalSARekeys": is4dTotalSARekeys,
       "is4dTotalTransportBytesReceived": is4dTotalTransportBytesReceived,
       "is4dTotalTransportBytesSent": is4dTotalTransportBytesSent,
       "ipSecV4IKE": ipSecV4IKE,
       "is4iAcquireHeapSize": is4iAcquireHeapSize,
       "is4iMainModeSAListEntries": is4iMainModeSAListEntries,
       "is4iQuickModeSAListEntries": is4iQuickModeSAListEntries,
       "is4iReceiveHeapSize": is4iReceiveHeapSize,
       "is4iTotalAuthenticationFailures": is4iTotalAuthenticationFailures,
       "is4iTotalMainModeSAs": is4iTotalMainModeSAs,
       "is4iTotalNegotiationFailures": is4iTotalNegotiationFailures,
       "is4iTotalQuickModeSAs": is4iTotalQuickModeSAs,
       "is4iTotalSoftAssociations": is4iTotalSoftAssociations,
       "jobObjectTable": jobObjectTable,
       "jobObjectEntry": jobObjectEntry,
       "joInstance": joInstance,
       "joCurrentPercentKernelModeTime": joCurrentPercentKernelModeTime,
       "joCurrentPercentProcessorTime": joCurrentPercentProcessorTime,
       "joCurrentPercentUserModeTime": joCurrentPercentUserModeTime,
       "joPagesPerSec": joPagesPerSec,
       "joProcessCountActive": joProcessCountActive,
       "joProcessCountTerminated": joProcessCountTerminated,
       "joProcessCountTotal": joProcessCountTotal,
       "joThisPeriodMSecKernelMode": joThisPeriodMSecKernelMode,
       "joThisPeriodMSecProcessor": joThisPeriodMSecProcessor,
       "joThisPeriodMSecUserMode": joThisPeriodMSecUserMode,
       "joTotalMSecKernelMode": joTotalMSecKernelMode,
       "joTotalMSecProcessor": joTotalMSecProcessor,
       "joTotalMSecUserMode": joTotalMSecUserMode,
       "jobObjectDetailsTable": jobObjectDetailsTable,
       "jobObjectDetailsEntry": jobObjectDetailsEntry,
       "jodInstance": jodInstance,
       "jodPercentPrivilegedTime": jodPercentPrivilegedTime,
       "jodPercentProcessorTime": jodPercentProcessorTime,
       "jodPercentUserTime": jodPercentUserTime,
       "jodCreatingProcessID": jodCreatingProcessID,
       "jodElapsedTime": jodElapsedTime,
       "jodHandleCount": jodHandleCount,
       "jodIDProcess": jodIDProcess,
       "jodIODataBytesPerSec": jodIODataBytesPerSec,
       "jodIODataOperationsPerSec": jodIODataOperationsPerSec,
       "jodIOOtherBytesPerSec": jodIOOtherBytesPerSec,
       "jodIOOtherOperationsPerSec": jodIOOtherOperationsPerSec,
       "jodIOReadBytesPerSec": jodIOReadBytesPerSec,
       "jodIOReadOperationsPerSec": jodIOReadOperationsPerSec,
       "jodIOWriteBytesPerSec": jodIOWriteBytesPerSec,
       "jodIOWriteOperationsPerSec": jodIOWriteOperationsPerSec,
       "jodPageFaultsPerSec": jodPageFaultsPerSec,
       "jodPageFileBytes": jodPageFileBytes,
       "jodPageFileBytesPeak": jodPageFileBytesPeak,
       "jodPoolNonpagedBytes": jodPoolNonpagedBytes,
       "jodPoolPagedBytes": jodPoolPagedBytes,
       "jodPriorityBase": jodPriorityBase,
       "jodPrivateBytes": jodPrivateBytes,
       "jodThreadCount": jodThreadCount,
       "jodVirtualBytes": jodVirtualBytes,
       "jodVirtualBytesPeak": jodVirtualBytesPeak,
       "jodWorkingSet": jodWorkingSet,
       "jodWorkingSetPeak": jodWorkingSetPeak,
       "logicalDiskTable": logicalDiskTable,
       "logicalDiskEntry": logicalDiskEntry,
       "lDiskInstance": lDiskInstance,
       "lDiskPercentDiskReadTime": lDiskPercentDiskReadTime,
       "lDiskPercentDiskTime": lDiskPercentDiskTime,
       "lDiskPercentDiskWriteTime": lDiskPercentDiskWriteTime,
       "lDiskPercentFreeSpace": lDiskPercentFreeSpace,
       "lDiskPercentIdleTime": lDiskPercentIdleTime,
       "lDiskAvgDiskBytesPerRead": lDiskAvgDiskBytesPerRead,
       "lDiskAvgDiskBytesPerTransfer": lDiskAvgDiskBytesPerTransfer,
       "lDiskAvgDiskBytesPerWrite": lDiskAvgDiskBytesPerWrite,
       "lDiskAvgDiskQueueLength": lDiskAvgDiskQueueLength,
       "lDiskAvgDiskReadQueueLength": lDiskAvgDiskReadQueueLength,
       "lDiskAvgDiskWriteQueueLength": lDiskAvgDiskWriteQueueLength,
       "lDiskAvgDiskSecPerRead": lDiskAvgDiskSecPerRead,
       "lDiskAvgDiskSecPerTransfer": lDiskAvgDiskSecPerTransfer,
       "lDiskAvgDiskSecPerWrite": lDiskAvgDiskSecPerWrite,
       "lDiskCurrentDiskQueueLength": lDiskCurrentDiskQueueLength,
       "lDiskDiskBytesPerSec": lDiskDiskBytesPerSec,
       "lDiskDiskReadBytesPerSec": lDiskDiskReadBytesPerSec,
       "lDiskDiskReadsPerSec": lDiskDiskReadsPerSec,
       "lDiskDiskTransfersPerSec": lDiskDiskTransfersPerSec,
       "lDiskDiskWriteBytesPerSec": lDiskDiskWriteBytesPerSec,
       "lDiskDiskWritesPerSec": lDiskDiskWritesPerSec,
       "lDiskFreeMegabytes": lDiskFreeMegabytes,
       "lDiskSplitIOPerSec": lDiskSplitIOPerSec,
       "macFileServer": macFileServer,
       "mfsCurrentFilesOpen": mfsCurrentFilesOpen,
       "mfsCurrentNonPagedMemory": mfsCurrentNonPagedMemory,
       "mfsCurrentPagedMemory": mfsCurrentPagedMemory,
       "mfsCurrentQueueLength": mfsCurrentQueueLength,
       "mfsCurrentSessions": mfsCurrentSessions,
       "mfsCurrentThreads": mfsCurrentThreads,
       "mfsDataReadPerSec": mfsDataReadPerSec,
       "mfsDataReceivedPerSec": mfsDataReceivedPerSec,
       "mfsDataTransmittedPerSec": mfsDataTransmittedPerSec,
       "mfsDataWrittenPerSec": mfsDataWrittenPerSec,
       "mfsFailedLogons": mfsFailedLogons,
       "mfsMaxNonPagedMemory": mfsMaxNonPagedMemory,
       "mfsMaxPagedMemory": mfsMaxPagedMemory,
       "mfsMaximumFilesOpen": mfsMaximumFilesOpen,
       "mfsMaximumQueueLength": mfsMaximumQueueLength,
       "mfsMaximumSessions": mfsMaximumSessions,
       "mfsMaximumThreads": mfsMaximumThreads,
       "memory": memory,
       "memoryPercentCommittedBytesInUse": memoryPercentCommittedBytesInUse,
       "memoryAvailableBytes": memoryAvailableBytes,
       "memoryAvailableKBytes": memoryAvailableKBytes,
       "memoryAvailableMBytes": memoryAvailableMBytes,
       "memoryCacheBytes": memoryCacheBytes,
       "memoryCacheBytesPeak": memoryCacheBytesPeak,
       "memoryCacheFaultsPerSec": memoryCacheFaultsPerSec,
       "memoryCommitLimit": memoryCommitLimit,
       "memoryCommittedBytes": memoryCommittedBytes,
       "memoryDemandZeroFaultsPerSec": memoryDemandZeroFaultsPerSec,
       "memoryFreeSystemPageTableEntries": memoryFreeSystemPageTableEntries,
       "memoryPageFaultsPerSec": memoryPageFaultsPerSec,
       "memoryPageReadsPerSec": memoryPageReadsPerSec,
       "memoryPageWritesPerSec": memoryPageWritesPerSec,
       "memoryPagesInputPerSec": memoryPagesInputPerSec,
       "memoryPagesOutputPerSec": memoryPagesOutputPerSec,
       "memoryPagesPerSec": memoryPagesPerSec,
       "memoryPoolNonpagedAllocs": memoryPoolNonpagedAllocs,
       "memoryPoolNonpagedBytes": memoryPoolNonpagedBytes,
       "memoryPoolPagedAllocs": memoryPoolPagedAllocs,
       "memoryPoolPagedBytes": memoryPoolPagedBytes,
       "memoryPoolPagedResidentBytes": memoryPoolPagedResidentBytes,
       "memorySystemCacheResidentBytes": memorySystemCacheResidentBytes,
       "memorySystemCodeResidentBytes": memorySystemCodeResidentBytes,
       "memorySystemCodeTotalBytes": memorySystemCodeTotalBytes,
       "memorySystemDriverResidentBytes": memorySystemDriverResidentBytes,
       "memorySystemDriverTotalBytes": memorySystemDriverTotalBytes,
       "memoryTranFaultsPerSec": memoryTranFaultsPerSec,
       "memoryTranPagesRePurposedPerSec": memoryTranPagesRePurposedPerSec,
       "memoryWriteCopiesPerSec": memoryWriteCopiesPerSec,
       "memoryCacheKBytes": memoryCacheKBytes,
       "memoryCacheKBytesPeak": memoryCacheKBytesPeak,
       "memoryCommittedKBytes": memoryCommittedKBytes,
       "memoryPoolNonpagedKBytes": memoryPoolNonpagedKBytes,
       "memoryPoolPagedKBytes": memoryPoolPagedKBytes,
       "memoryPoolPagedResidentKBytes": memoryPoolPagedResidentKBytes,
       "memorySystemCacheResidentKBytes": memorySystemCacheResidentKBytes,
       "memorySystemCodeResidentKBytes": memorySystemCodeResidentKBytes,
       "memorySystemCodeTotalKBytes": memorySystemCodeTotalKBytes,
       "memorySystemDriverResidentKBytes": memorySystemDriverResidentKBytes,
       "memorySystemDriverTotalKBytes": memorySystemDriverTotalKBytes,
       "memoryCacheMBytes": memoryCacheMBytes,
       "memoryCacheMBytesPeak": memoryCacheMBytesPeak,
       "memoryCommittedMBytes": memoryCommittedMBytes,
       "memoryPoolNonpagedMBytes": memoryPoolNonpagedMBytes,
       "memoryPoolPagedMBytes": memoryPoolPagedMBytes,
       "memoryPoolPagedResidentMBytes": memoryPoolPagedResidentMBytes,
       "memorySystemCacheResidentMBytes": memorySystemCacheResidentMBytes,
       "memorySystemCodeResidentMBytes": memorySystemCodeResidentMBytes,
       "memorySystemCodeTotalMBytes": memorySystemCodeTotalMBytes,
       "memorySystemDriverResidentMBytes": memorySystemDriverResidentMBytes,
       "memorySystemDriverTotalMBytes": memorySystemDriverTotalMBytes,
       "memoryFreeZeroPageListBytes": memoryFreeZeroPageListBytes,
       "memoryFreeZeroPageListKBytes": memoryFreeZeroPageListKBytes,
       "memoryFreeZeroPageListMBytes": memoryFreeZeroPageListMBytes,
       "memoryModifiedPageListBytes": memoryModifiedPageListBytes,
       "memoryModifiedPageListKBytes": memoryModifiedPageListKBytes,
       "memoryModifiedPageListMBytes": memoryModifiedPageListMBytes,
       "memoryStbyCacheCoreBytes": memoryStbyCacheCoreBytes,
       "memoryStbyCacheCoreKBytes": memoryStbyCacheCoreKBytes,
       "memoryStbyCacheCoreMBytes": memoryStbyCacheCoreMBytes,
       "memoryStbyCacheNormPriorityBytes": memoryStbyCacheNormPriorityBytes,
       "memoryStbyCacheNormPriorityKByte": memoryStbyCacheNormPriorityKByte,
       "memoryStbyCacheNormPriorityMByte": memoryStbyCacheNormPriorityMByte,
       "memoryStbyCacheReserveBytes": memoryStbyCacheReserveBytes,
       "memoryStbyCacheReserveKBytes": memoryStbyCacheReserveKBytes,
       "memoryStbyCacheReserveMBytes": memoryStbyCacheReserveMBytes,
       "memoryTransPagesRePurposedPerSec": memoryTransPagesRePurposedPerSec,
       "memoryCommitLimitKBytes": memoryCommitLimitKBytes,
       "memoryCommitLimitMBytes": memoryCommitLimitMBytes,
       "msmqQueueTable": msmqQueueTable,
       "msmqQueueEntry": msmqQueueEntry,
       "msmqInstance": msmqInstance,
       "msmqBytesInJournalQueue": msmqBytesInJournalQueue,
       "msmqBytesInQueue": msmqBytesInQueue,
       "msmqMessagesInJournalQueue": msmqMessagesInJournalQueue,
       "msmqMessagesInQueue": msmqMessagesInQueue,
       "msmqService": msmqService,
       "msmqSvcIPSessions": msmqSvcIPSessions,
       "msmqSvcIPXSessions": msmqSvcIPXSessions,
       "msmqSvcIncomingMessagesPerSec": msmqSvcIncomingMessagesPerSec,
       "msmqSvcMSMQIncomingMessages": msmqSvcMSMQIncomingMessages,
       "msmqSvcMSMQOutgoingMessages": msmqSvcMSMQOutgoingMessages,
       "msmqSvcOutgoingMessagesPerSec": msmqSvcOutgoingMessagesPerSec,
       "msmqSvcSessions": msmqSvcSessions,
       "msmqSvcTotalBytesInAllQueues": msmqSvcTotalBytesInAllQueues,
       "msmqSvcTotalMessagesInAllQueues": msmqSvcTotalMessagesInAllQueues,
       "msmqSvcIncomingMulticastSessions": msmqSvcIncomingMulticastSessions,
       "msmqSvcOutgoingHTTPSessions": msmqSvcOutgoingHTTPSessions,
       "msmqSvcOutgoingMulticastSessions": msmqSvcOutgoingMulticastSessions,
       "nbtConnectionTable": nbtConnectionTable,
       "nbtConnectionEntry": nbtConnectionEntry,
       "nbtConnectionInstance": nbtConnectionInstance,
       "nbtConnectionBytesReceivedPerSec": nbtConnectionBytesReceivedPerSec,
       "nbtConnectionBytesSentPerSec": nbtConnectionBytesSentPerSec,
       "nbtConnectionBytesTotalPerSec": nbtConnectionBytesTotalPerSec,
       "netBEUITable": netBEUITable,
       "netBEUIEntry": netBEUIEntry,
       "netBEUIInstance": netBEUIInstance,
       "netBEUIBytesTotalPerSec": netBEUIBytesTotalPerSec,
       "netBEUIConnectionSessionTimeouts": netBEUIConnectionSessionTimeouts,
       "netBEUIConnectionsCanceled": netBEUIConnectionsCanceled,
       "netBEUIConnectionsNoRetries": netBEUIConnectionsNoRetries,
       "netBEUIConnectionsOpen": netBEUIConnectionsOpen,
       "netBEUIConnectionsWithRetries": netBEUIConnectionsWithRetries,
       "netBEUIDatagramBytesRcvdPerSec": netBEUIDatagramBytesRcvdPerSec,
       "netBEUIDatagramBytesSentPerSec": netBEUIDatagramBytesSentPerSec,
       "netBEUIDatagramBytesPerSec": netBEUIDatagramBytesPerSec,
       "netBEUIDatagramsReceivedPerSec": netBEUIDatagramsReceivedPerSec,
       "netBEUIDatagramsSentPerSec": netBEUIDatagramsSentPerSec,
       "netBEUIDatagramsPerSec": netBEUIDatagramsPerSec,
       "netBEUIDisconnectsLocal": netBEUIDisconnectsLocal,
       "netBEUIDisconnectsRemote": netBEUIDisconnectsRemote,
       "netBEUIExpirationsAck": netBEUIExpirationsAck,
       "netBEUIExpirationsResponse": netBEUIExpirationsResponse,
       "netBEUIFailuresAdapter": netBEUIFailuresAdapter,
       "netBEUIFailuresLink": netBEUIFailuresLink,
       "netBEUIFailuresNoListen": netBEUIFailuresNoListen,
       "netBEUIFailuresNotFound": netBEUIFailuresNotFound,
       "netBEUIFailuresResourceLocal": netBEUIFailuresResourceLocal,
       "netBEUIFailuresResourceRemote": netBEUIFailuresResourceRemote,
       "netBEUIFrameBytesReSentPerSec": netBEUIFrameBytesReSentPerSec,
       "netBEUIFrameBytesReceivedPerSec": netBEUIFrameBytesReceivedPerSec,
       "netBEUIFrameBytesRejectedPerSec": netBEUIFrameBytesRejectedPerSec,
       "netBEUIFrameBytesSentPerSec": netBEUIFrameBytesSentPerSec,
       "netBEUIFrameBytesPerSec": netBEUIFrameBytesPerSec,
       "netBEUIFramesReSentPerSec": netBEUIFramesReSentPerSec,
       "netBEUIFramesReceivedPerSec": netBEUIFramesReceivedPerSec,
       "netBEUIFramesRejectedPerSec": netBEUIFramesRejectedPerSec,
       "netBEUIFramesSentPerSec": netBEUIFramesSentPerSec,
       "netBEUIFramesPerSec": netBEUIFramesPerSec,
       "netBEUIPacketsReceivedPerSec": netBEUIPacketsReceivedPerSec,
       "netBEUIPacketsSentPerSec": netBEUIPacketsSentPerSec,
       "netBEUIPacketsPerSec": netBEUIPacketsPerSec,
       "netBEUIPiggybackAckQueuedPerSec": netBEUIPiggybackAckQueuedPerSec,
       "netBEUIPiggybackAckTimeouts": netBEUIPiggybackAckTimeouts,
       "netBEUIWindowSendAverage": netBEUIWindowSendAverage,
       "netBEUIWindowSendMaximum": netBEUIWindowSendMaximum,
       "netBEUIResourceTable": netBEUIResourceTable,
       "netBEUIResourceEntry": netBEUIResourceEntry,
       "netBEUIResourceInstance": netBEUIResourceInstance,
       "netBEUIResourceTimesExhausted": netBEUIResourceTimesExhausted,
       "netBEUIResourceUsedAverage": netBEUIResourceUsedAverage,
       "netBEUIResourceUsedMaximum": netBEUIResourceUsedMaximum,
       "networkInterfaceTable": networkInterfaceTable,
       "networkInterfaceEntry": networkInterfaceEntry,
       "netInstance": netInstance,
       "netBytesReceivedPerSec": netBytesReceivedPerSec,
       "netBytesSentPerSec": netBytesSentPerSec,
       "netBytesTotalPerSec": netBytesTotalPerSec,
       "netCurrentBandwidth": netCurrentBandwidth,
       "netOutputQueueLength": netOutputQueueLength,
       "netPacketsOutboundDiscarded": netPacketsOutboundDiscarded,
       "netPacketsOutboundErrors": netPacketsOutboundErrors,
       "netPacketsReceivedDiscarded": netPacketsReceivedDiscarded,
       "netPacketsReceivedErrors": netPacketsReceivedErrors,
       "netPacketsRcvdNonUnicastPerSec": netPacketsRcvdNonUnicastPerSec,
       "netPacketsReceivedUnicastPerSec": netPacketsReceivedUnicastPerSec,
       "netPacketsReceivedUnknown": netPacketsReceivedUnknown,
       "netPacketsReceivedPerSec": netPacketsReceivedPerSec,
       "netPacketsSentNonUnicastPerSec": netPacketsSentNonUnicastPerSec,
       "netPacketsSentUnicastPerSec": netPacketsSentUnicastPerSec,
       "netPacketsSentPerSec": netPacketsSentPerSec,
       "netPacketsPerSec": netPacketsPerSec,
       "nntpCommandsTable": nntpCommandsTable,
       "nntpCommandsEntry": nntpCommandsEntry,
       "nntpCmdsInstance": nntpCmdsInstance,
       "nntpCmdsArticleCmds": nntpCmdsArticleCmds,
       "nntpCmdsArticleCmdsPerSec": nntpCmdsArticleCmdsPerSec,
       "nntpCmdsCheckCmds": nntpCmdsCheckCmds,
       "nntpCmdsCheckCmdsPerSec": nntpCmdsCheckCmdsPerSec,
       "nntpCmdsGroupCmds": nntpCmdsGroupCmds,
       "nntpCmdsGroupCmdsPerSec": nntpCmdsGroupCmdsPerSec,
       "nntpCmdsHelpCmds": nntpCmdsHelpCmds,
       "nntpCmdsHelpCmdsPerSec": nntpCmdsHelpCmdsPerSec,
       "nntpCmdsIHaveCmds": nntpCmdsIHaveCmds,
       "nntpCmdsIHaveCmdsPerSec": nntpCmdsIHaveCmdsPerSec,
       "nntpCmdsLastCmds": nntpCmdsLastCmds,
       "nntpCmdsLastCmdsPerSec": nntpCmdsLastCmdsPerSec,
       "nntpCmdsListCmds": nntpCmdsListCmds,
       "nntpCmdsListCmdsPerSec": nntpCmdsListCmdsPerSec,
       "nntpCmdsLogonAttempts": nntpCmdsLogonAttempts,
       "nntpCmdsLogonAttemptsPerSec": nntpCmdsLogonAttemptsPerSec,
       "nntpCmdsLogonFailures": nntpCmdsLogonFailures,
       "nntpCmdsLogonFailuresPerSec": nntpCmdsLogonFailuresPerSec,
       "nntpCmdsModeCmds": nntpCmdsModeCmds,
       "nntpCmdsModeCmdsPerSec": nntpCmdsModeCmdsPerSec,
       "nntpCmdsNewgroupsCmds": nntpCmdsNewgroupsCmds,
       "nntpCmdsNewgroupsCmdsPerSec": nntpCmdsNewgroupsCmdsPerSec,
       "nntpCmdsNewnewsCmds": nntpCmdsNewnewsCmds,
       "nntpCmdsNewnewsCmdsPerSec": nntpCmdsNewnewsCmdsPerSec,
       "nntpCmdsNextCmds": nntpCmdsNextCmds,
       "nntpCmdsNextCmdsPerSec": nntpCmdsNextCmdsPerSec,
       "nntpCmdsPostCmds": nntpCmdsPostCmds,
       "nntpCmdsPostCmdsPerSec": nntpCmdsPostCmdsPerSec,
       "nntpCmdsQuitCmds": nntpCmdsQuitCmds,
       "nntpCmdsQuitCmdsPerSec": nntpCmdsQuitCmdsPerSec,
       "nntpCmdsSearchCmds": nntpCmdsSearchCmds,
       "nntpCmdsSearchCmdsPerSec": nntpCmdsSearchCmdsPerSec,
       "nntpCmdsStatCmds": nntpCmdsStatCmds,
       "nntpCmdsStatCmdsPerSec": nntpCmdsStatCmdsPerSec,
       "nntpCmdsTakethisCmds": nntpCmdsTakethisCmds,
       "nntpCmdsTakethisCmdsPerSec": nntpCmdsTakethisCmdsPerSec,
       "nntpCmdsXHdrCmds": nntpCmdsXHdrCmds,
       "nntpCmdsXHdrCmdsPerSec": nntpCmdsXHdrCmdsPerSec,
       "nntpCmdsXOverCmds": nntpCmdsXOverCmds,
       "nntpCmdsXOverCmdsPerSec": nntpCmdsXOverCmdsPerSec,
       "nntpCmdsXPatCmds": nntpCmdsXPatCmds,
       "nntpCmdsXPatCmdsPerSec": nntpCmdsXPatCmdsPerSec,
       "nntpCmdsXReplicCmds": nntpCmdsXReplicCmds,
       "nntpCmdsXReplicCmdsPerSec": nntpCmdsXReplicCmdsPerSec,
       "nntpServerTable": nntpServerTable,
       "nntpServerEntry": nntpServerEntry,
       "nntpSrvrInstance": nntpSrvrInstance,
       "nntpSrvrArticleMapEntries": nntpSrvrArticleMapEntries,
       "nntpSrvrArticleMapEntriesPerSec": nntpSrvrArticleMapEntriesPerSec,
       "nntpSrvrArticlesDeleted": nntpSrvrArticlesDeleted,
       "nntpSrvrArticlesDeletedPerSec": nntpSrvrArticlesDeletedPerSec,
       "nntpSrvrArticlesPosted": nntpSrvrArticlesPosted,
       "nntpSrvrArticlesPostedPerSec": nntpSrvrArticlesPostedPerSec,
       "nntpSrvrArticlesReceived": nntpSrvrArticlesReceived,
       "nntpSrvrArticlesReceivedPerSec": nntpSrvrArticlesReceivedPerSec,
       "nntpSrvrArticlesSent": nntpSrvrArticlesSent,
       "nntpSrvrArticlesSentPerSec": nntpSrvrArticlesSentPerSec,
       "nntpSrvrArticlesTotal": nntpSrvrArticlesTotal,
       "nntpSrvrBytesReceivedPerSec": nntpSrvrBytesReceivedPerSec,
       "nntpSrvrBytesSentPerSec": nntpSrvrBytesSentPerSec,
       "nntpSrvrBytesTotalPerSec": nntpSrvrBytesTotalPerSec,
       "nntpSrvrControlMessagesFailed": nntpSrvrControlMessagesFailed,
       "nntpSrvrControlMessagesReceived": nntpSrvrControlMessagesReceived,
       "nntpSrvrCurrentAnonymousUsers": nntpSrvrCurrentAnonymousUsers,
       "nntpSrvrCurrentConnections": nntpSrvrCurrentConnections,
       "nntpSrvrCurrentNonAnonymousUsers": nntpSrvrCurrentNonAnonymousUsers,
       "nntpSrvrCurrentOutboundConns": nntpSrvrCurrentOutboundConns,
       "nntpSrvrFailedOutboundLogons": nntpSrvrFailedOutboundLogons,
       "nntpSrvrHistoryMapEntries": nntpSrvrHistoryMapEntries,
       "nntpSrvrHistoryMapEntriesPerSec": nntpSrvrHistoryMapEntriesPerSec,
       "nntpSrvrMaximumAnonymousUsers": nntpSrvrMaximumAnonymousUsers,
       "nntpSrvrMaximumConnections": nntpSrvrMaximumConnections,
       "nntpSrvrMaximumNonAnonymousUsers": nntpSrvrMaximumNonAnonymousUsers,
       "nntpSrvrModeratedPostingsFailed": nntpSrvrModeratedPostingsFailed,
       "nntpSrvrModeratedPostingsSent": nntpSrvrModeratedPostingsSent,
       "nntpSrvrSessionsFlowControlled": nntpSrvrSessionsFlowControlled,
       "nntpSrvrTotalAnonymousUsers": nntpSrvrTotalAnonymousUsers,
       "nntpSrvrTotalConnections": nntpSrvrTotalConnections,
       "nntpSrvrTotalNonAnonymousUsers": nntpSrvrTotalNonAnonymousUsers,
       "nntpSrvrTotalOutboundConnections": nntpSrvrTotalOutboundConnections,
       "nntpSrvrTotalOutboundConnsFailed": nntpSrvrTotalOutboundConnsFailed,
       "nntpSrvrTotalPassiveFeeds": nntpSrvrTotalPassiveFeeds,
       "nntpSrvrTotalPullFeeds": nntpSrvrTotalPullFeeds,
       "nntpSrvrTotalPushFeeds": nntpSrvrTotalPushFeeds,
       "nntpSrvrTotalSSLConnections": nntpSrvrTotalSSLConnections,
       "nntpSrvrXoverEntries": nntpSrvrXoverEntries,
       "nntpSrvrXoverEntriesPerSec": nntpSrvrXoverEntriesPerSec,
       "ntds": ntds,
       "ntdsABANRPerSec": ntdsABANRPerSec,
       "ntdsABBrowsesPerSec": ntdsABBrowsesPerSec,
       "ntdsABClientSessions": ntdsABClientSessions,
       "ntdsABMatchesPerSec": ntdsABMatchesPerSec,
       "ntdsABPropertyReadsPerSec": ntdsABPropertyReadsPerSec,
       "ntdsABProxyLookupsPerSec": ntdsABProxyLookupsPerSec,
       "ntdsABSearchesPerSec": ntdsABSearchesPerSec,
       "ntdsATQThreadsLDAP": ntdsATQThreadsLDAP,
       "ntdsATQThreadsOther": ntdsATQThreadsOther,
       "ntdsATQThreadsTotal": ntdsATQThreadsTotal,
       "ntdsDRAHighestUSNCommitHighPart": ntdsDRAHighestUSNCommitHighPart,
       "ntdsDRAHighestUSNCommitLowPart": ntdsDRAHighestUSNCommitLowPart,
       "ntdsDRAHighestUSNIssuedHighPart": ntdsDRAHighestUSNIssuedHighPart,
       "ntdsDRAHighestUSNIssuedLowPart": ntdsDRAHighestUSNIssuedLowPart,
       "ntdsDRAInboundBytesCBSACSBoot": ntdsDRAInboundBytesCBSACSBoot,
       "ntdsDRAInboundBytesCBSACPerSec": ntdsDRAInboundBytesCBSACPerSec,
       "ntdsDRAInboundBytesCBSBCSBoot": ntdsDRAInboundBytesCBSBCSBoot,
       "ntdsDRAInboundBytesCBSBCPerSec": ntdsDRAInboundBytesCBSBCPerSec,
       "ntdsDRAInboundBytesNotCWSSBoot": ntdsDRAInboundBytesNotCWSSBoot,
       "ntdsDRAInboundBytesNotCWSPerSec": ntdsDRAInboundBytesNotCWSPerSec,
       "ntdsDRAInboundBytesTotalBoot": ntdsDRAInboundBytesTotalBoot,
       "ntdsDRAInboundBytesTotalPerSec": ntdsDRAInboundBytesTotalPerSec,
       "ntdsDRAInboundFullSyncObjsRemain": ntdsDRAInboundFullSyncObjsRemain,
       "ntdsDRAInboundObjUpdsRemainInPkt": ntdsDRAInboundObjUpdsRemainInPkt,
       "ntdsDRAInboundObjsAppliedPerSec": ntdsDRAInboundObjsAppliedPerSec,
       "ntdsDRAInboundObjsFilteredPerSec": ntdsDRAInboundObjsFilteredPerSec,
       "ntdsDRAInboundObjectsPerSec": ntdsDRAInboundObjectsPerSec,
       "ntdsDRAInboundPropAppliedPerSec": ntdsDRAInboundPropAppliedPerSec,
       "ntdsDRAInboundPropFilteredPerSec": ntdsDRAInboundPropFilteredPerSec,
       "ntdsDRAInboundPropTotalPerSec": ntdsDRAInboundPropTotalPerSec,
       "ntdsDRAInboundValuesDNsPerSec": ntdsDRAInboundValuesDNsPerSec,
       "ntdsDRAInboundValuesTotalPerSec": ntdsDRAInboundValuesTotalPerSec,
       "ntdsDRAOutboundBytesCBSACSBoot": ntdsDRAOutboundBytesCBSACSBoot,
       "ntdsDRAOutboundBytesCBSACPerSec": ntdsDRAOutboundBytesCBSACPerSec,
       "ntdsDRAOutboundBytesCBSBCSBoot": ntdsDRAOutboundBytesCBSBCSBoot,
       "ntdsDRAOutboundBytesCBSBCPerSec": ntdsDRAOutboundBytesCBSBCPerSec,
       "ntdsDRAOutboundBytesNotCWSSBoot": ntdsDRAOutboundBytesNotCWSSBoot,
       "ntdsDRAOutboundBytesNotCWSPerSec": ntdsDRAOutboundBytesNotCWSPerSec,
       "ntdsDRAOutboundBytesTotalBoot": ntdsDRAOutboundBytesTotalBoot,
       "ntdsDRAOutboundBytesTotalPerSec": ntdsDRAOutboundBytesTotalPerSec,
       "ntdsDRAOutboundObjsFilterPerSec": ntdsDRAOutboundObjsFilterPerSec,
       "ntdsDRAOutboundObjectsPerSec": ntdsDRAOutboundObjectsPerSec,
       "ntdsDRAOutboundPropertiesPerSec": ntdsDRAOutboundPropertiesPerSec,
       "ntdsDRAOutboundValuesDNsPerSec": ntdsDRAOutboundValuesDNsPerSec,
       "ntdsDRAOutboundValuesTotalPerSec": ntdsDRAOutboundValuesTotalPerSec,
       "ntdsDRAPendingReplicationSync": ntdsDRAPendingReplicationSync,
       "ntdsDRASyncFailOnSchemaMismatch": ntdsDRASyncFailOnSchemaMismatch,
       "ntdsDRASyncRequestsMade": ntdsDRASyncRequestsMade,
       "ntdsDRASyncRequestsSuccessful": ntdsDRASyncRequestsSuccessful,
       "ntdsDSPercentReadsOther": ntdsDSPercentReadsOther,
       "ntdsDSPercentReadsFromDRA": ntdsDSPercentReadsFromDRA,
       "ntdsDSPercentReadsFromKCC": ntdsDSPercentReadsFromKCC,
       "ntdsDSPercentReadsFromLSA": ntdsDSPercentReadsFromLSA,
       "ntdsDSPercentReadsFromNSPI": ntdsDSPercentReadsFromNSPI,
       "ntdsDSPercentReadsFromSAM": ntdsDSPercentReadsFromSAM,
       "ntdsDSPercentReadsFromXDS": ntdsDSPercentReadsFromXDS,
       "ntdsDSPercentSearchesOther": ntdsDSPercentSearchesOther,
       "ntdsDSPercentSearchesFromDRA": ntdsDSPercentSearchesFromDRA,
       "ntdsDSPercentSearchesFromKCC": ntdsDSPercentSearchesFromKCC,
       "ntdsDSPercentSearchesFromLDAP": ntdsDSPercentSearchesFromLDAP,
       "ntdsDSPercentSearchesFromLSA": ntdsDSPercentSearchesFromLSA,
       "ntdsDSPercentSearchesFromNSPI": ntdsDSPercentSearchesFromNSPI,
       "ntdsDSPercentSearchesFromSAM": ntdsDSPercentSearchesFromSAM,
       "ntdsDSPercentSearchesFromXDS": ntdsDSPercentSearchesFromXDS,
       "ntdsDSPercentWritesOther": ntdsDSPercentWritesOther,
       "ntdsDSPercentWritesFromDRA": ntdsDSPercentWritesFromDRA,
       "ntdsDSPercentWritesFromKCC": ntdsDSPercentWritesFromKCC,
       "ntdsDSPercentWritesFromLDAP": ntdsDSPercentWritesFromLDAP,
       "ntdsDSPercentWritesFromLSA": ntdsDSPercentWritesFromLSA,
       "ntdsDSPercentWritesFromNSPI": ntdsDSPercentWritesFromNSPI,
       "ntdsDSPercentWritesFromSAM": ntdsDSPercentWritesFromSAM,
       "ntdsDSPercentWritesFromXDS": ntdsDSPercentWritesFromXDS,
       "ntdsDSClientBindsPerSec": ntdsDSClientBindsPerSec,
       "ntdsDSClientNameTranslatePerSec": ntdsDSClientNameTranslatePerSec,
       "ntdsDSDirectoryReadsPerSec": ntdsDSDirectoryReadsPerSec,
       "ntdsDSDirectorySearchesPerSec": ntdsDSDirectorySearchesPerSec,
       "ntdsDSDirectoryWritesPerSec": ntdsDSDirectoryWritesPerSec,
       "ntdsDSMonitorListSize": ntdsDSMonitorListSize,
       "ntdsDSNameCacheHitRate": ntdsDSNameCacheHitRate,
       "ntdsDSNotifyQueueSize": ntdsDSNotifyQueueSize,
       "ntdsDSSearchSuboperationsPerSec": ntdsDSSearchSuboperationsPerSec,
       "ntdsDSSecurityDescPropEvents": ntdsDSSecurityDescPropEvents,
       "ntdsDSSecurityDescPropAvgExTime": ntdsDSSecurityDescPropAvgExTime,
       "ntdsDSSecurityDescPropRunQueue": ntdsDSSecurityDescPropRunQueue,
       "ntdsDSSecurityDescSubopPerSec": ntdsDSSecurityDescSubopPerSec,
       "ntdsDSServerBindsPerSec": ntdsDSServerBindsPerSec,
       "ntdsDSServerNameTranslatePerSec": ntdsDSServerNameTranslatePerSec,
       "ntdsDSThreadsInUse": ntdsDSThreadsInUse,
       "ntdsKDCASRequests": ntdsKDCASRequests,
       "ntdsKDCTGSRequests": ntdsKDCTGSRequests,
       "ntdsKerberosAuthentications": ntdsKerberosAuthentications,
       "ntdsLDAPActiveThreads": ntdsLDAPActiveThreads,
       "ntdsLDAPBindTime": ntdsLDAPBindTime,
       "ntdsLDAPClientSessions": ntdsLDAPClientSessions,
       "ntdsLDAPSearchesPerSec": ntdsLDAPSearchesPerSec,
       "ntdsLDAPSuccessfulBinds": ntdsLDAPSuccessfulBinds,
       "ntdsLDAPSuccessfulBindsPerSec": ntdsLDAPSuccessfulBindsPerSec,
       "ntdsLDAPUDPOperationsPerSec": ntdsLDAPUDPOperationsPerSec,
       "ntdsLDAPWritesPerSec": ntdsLDAPWritesPerSec,
       "ntdsNTLMAuthentications": ntdsNTLMAuthentications,
       "ntdsSAMAccountGroupMemEvalPerSec": ntdsSAMAccountGroupMemEvalPerSec,
       "ntdsSAMDisplayInfoQueriesPerSec": ntdsSAMDisplayInfoQueriesPerSec,
       "ntdsSAMEnumerationsPerSec": ntdsSAMEnumerationsPerSec,
       "ntdsSAMGCEvaluationsPerSec": ntdsSAMGCEvaluationsPerSec,
       "ntdsSAMMachineCreateAtpsPerSec": ntdsSAMMachineCreateAtpsPerSec,
       "ntdsSAMMembershipChangesPerSec": ntdsSAMMembershipChangesPerSec,
       "ntdsSAMNonTransMemEvalPerSec": ntdsSAMNonTransMemEvalPerSec,
       "ntdsSAMPasswordChangesPerSec": ntdsSAMPasswordChangesPerSec,
       "ntdsSAMResourceGrpMemEvalPerSec": ntdsSAMResourceGrpMemEvalPerSec,
       "ntdsSAMSuccessMachineCreatPerSec": ntdsSAMSuccessMachineCreatPerSec,
       "ntdsSAMSuccessUserCreatePerSec": ntdsSAMSuccessUserCreatePerSec,
       "ntdsSAMTransitiveMembEvalPerSec": ntdsSAMTransitiveMembEvalPerSec,
       "ntdsSAMUniversalGrpMemEvalPerSec": ntdsSAMUniversalGrpMemEvalPerSec,
       "ntdsSAMUserCreateAttemptsPerSec": ntdsSAMUserCreateAttemptsPerSec,
       "ntdsXDSClientSessions": ntdsXDSClientSessions,
       "ntdsDRAInLnkValUpdsRemainInPckt": ntdsDRAInLnkValUpdsRemainInPckt,
       "ntdsDRAInTotalUpdsRemainInPacket": ntdsDRAInTotalUpdsRemainInPacket,
       "ntdsDRAPendReplicationOps": ntdsDRAPendReplicationOps,
       "ntdsDRAThreadsGettingNCChanges": ntdsDRAThreadsGettingNCChanges,
       "ntdsDRAThdsGetNCChngsHoldSmphr": ntdsDRAThdsGetNCChngsHoldSmphr,
       "ntdsDSPercentReadsFromNTDSAPI": ntdsDSPercentReadsFromNTDSAPI,
       "ntdsDSPercentSearchesFromNTDSAPI": ntdsDSPercentSearchesFromNTDSAPI,
       "ntdsDSPercentWritesFromNTDSAPI": ntdsDSPercentWritesFromNTDSAPI,
       "ntdsLDAPClosedConnectionsPerSec": ntdsLDAPClosedConnectionsPerSec,
       "ntdsLDAPNewConnectionsPerSec": ntdsLDAPNewConnectionsPerSec,
       "ntdsLDAPNewSSLConnectionsPerSec": ntdsLDAPNewSSLConnectionsPerSec,
       "ntdsSAMAccountGroupEvalLatency": ntdsSAMAccountGroupEvalLatency,
       "ntdsSAMResourceGroupEvalLatency": ntdsSAMResourceGroupEvalLatency,
       "ntdsATQEstimatedQueueDelay": ntdsATQEstimatedQueueDelay,
       "ntdsATQOutstandingQueuedRequests": ntdsATQOutstandingQueuedRequests,
       "ntdsATQRequestLatency": ntdsATQRequestLatency,
       "ntdsBaseSearchesPerSec": ntdsBaseSearchesPerSec,
       "ntdsDatabaseAddsPerSec": ntdsDatabaseAddsPerSec,
       "ntdsDatabaseDeletesPerSec": ntdsDatabaseDeletesPerSec,
       "ntdsDatabaseModifysPerSec": ntdsDatabaseModifysPerSec,
       "ntdsDigestBindsPerSec": ntdsDigestBindsPerSec,
       "ntdsExternalBindsPerSec": ntdsExternalBindsPerSec,
       "ntdsFastBindsPerSec": ntdsFastBindsPerSec,
       "ntdsLinkValuesCleanedPerSec": ntdsLinkValuesCleanedPerSec,
       "ntdsNTLMBindsPerSec": ntdsNTLMBindsPerSec,
       "ntdsNegotiatedBindsPerSec": ntdsNegotiatedBindsPerSec,
       "ntdsOnelevelSearchesPerSec": ntdsOnelevelSearchesPerSec,
       "ntdsPhantomsCleanedPerSec": ntdsPhantomsCleanedPerSec,
       "ntdsPhantomsVisitedPerSec": ntdsPhantomsVisitedPerSec,
       "ntdsSAMDomLocGrpMembEvalsPerSec": ntdsSAMDomLocGrpMembEvalsPerSec,
       "ntdsSAMGlbGrpMembpEvalsPerSec": ntdsSAMGlbGrpMembpEvalsPerSec,
       "ntdsSAMSuccessCompCreationPerSec": ntdsSAMSuccessCompCreationPerSec,
       "ntdsSimpleBindsPerSec": ntdsSimpleBindsPerSec,
       "ntdsSubtreeSearchesPerSec": ntdsSubtreeSearchesPerSec,
       "ntdsTombstonesGarbageCollPerSec": ntdsTombstonesGarbageCollPerSec,
       "ntdsTombstonesVisitedPerSec": ntdsTombstonesVisitedPerSec,
       "nwLinkIPXTable": nwLinkIPXTable,
       "nwLinkIPXEntry": nwLinkIPXEntry,
       "ipxInstance": ipxInstance,
       "ipxBytesTotalPerSec": ipxBytesTotalPerSec,
       "ipxConnectionSessionTimeouts": ipxConnectionSessionTimeouts,
       "ipxConnectionsCanceled": ipxConnectionsCanceled,
       "ipxConnectionsNoRetries": ipxConnectionsNoRetries,
       "ipxConnectionsOpen": ipxConnectionsOpen,
       "ipxConnectionsWithRetries": ipxConnectionsWithRetries,
       "ipxDatagramBytesReceivedPerSec": ipxDatagramBytesReceivedPerSec,
       "ipxDatagramBytesSentPerSec": ipxDatagramBytesSentPerSec,
       "ipxDatagramBytesPerSec": ipxDatagramBytesPerSec,
       "ipxDatagramsReceivedPerSec": ipxDatagramsReceivedPerSec,
       "ipxDatagramsSentPerSec": ipxDatagramsSentPerSec,
       "ipxDatagramsPerSec": ipxDatagramsPerSec,
       "ipxDisconnectsLocal": ipxDisconnectsLocal,
       "ipxDisconnectsRemote": ipxDisconnectsRemote,
       "ipxExpirationsAck": ipxExpirationsAck,
       "ipxExpirationsResponse": ipxExpirationsResponse,
       "ipxFailuresAdapter": ipxFailuresAdapter,
       "ipxFailuresLink": ipxFailuresLink,
       "ipxFailuresNoListen": ipxFailuresNoListen,
       "ipxFailuresNotFound": ipxFailuresNotFound,
       "ipxFailuresResourceLocal": ipxFailuresResourceLocal,
       "ipxFailuresResourceRemote": ipxFailuresResourceRemote,
       "ipxFrameBytesReSentPerSec": ipxFrameBytesReSentPerSec,
       "ipxFrameBytesReceivedPerSec": ipxFrameBytesReceivedPerSec,
       "ipxFrameBytesRejectedPerSec": ipxFrameBytesRejectedPerSec,
       "ipxFrameBytesSentPerSec": ipxFrameBytesSentPerSec,
       "ipxFrameBytesPerSec": ipxFrameBytesPerSec,
       "ipxFramesReSentPerSec": ipxFramesReSentPerSec,
       "ipxFramesReceivedPerSec": ipxFramesReceivedPerSec,
       "ipxFramesRejectedPerSec": ipxFramesRejectedPerSec,
       "ipxFramesSentPerSec": ipxFramesSentPerSec,
       "ipxFramesPerSec": ipxFramesPerSec,
       "ipxPacketsReceivedPerSec": ipxPacketsReceivedPerSec,
       "ipxPacketsSentPerSec": ipxPacketsSentPerSec,
       "ipxPacketsPerSec": ipxPacketsPerSec,
       "ipxPiggybackAckQueuedPerSec": ipxPiggybackAckQueuedPerSec,
       "ipxPiggybackAckTimeouts": ipxPiggybackAckTimeouts,
       "ipxWindowSendAverage": ipxWindowSendAverage,
       "ipxWindowSendMaximum": ipxWindowSendMaximum,
       "nwLinkNetBIOSTable": nwLinkNetBIOSTable,
       "nwLinkNetBIOSEntry": nwLinkNetBIOSEntry,
       "netBIOSInstance": netBIOSInstance,
       "netBIOSBytesTotalPerSec": netBIOSBytesTotalPerSec,
       "netBIOSConnectionSessionTimeouts": netBIOSConnectionSessionTimeouts,
       "netBIOSConnectionsCanceled": netBIOSConnectionsCanceled,
       "netBIOSConnectionsNoRetries": netBIOSConnectionsNoRetries,
       "netBIOSConnectionsOpen": netBIOSConnectionsOpen,
       "netBIOSConnectionsWithRetries": netBIOSConnectionsWithRetries,
       "netBIOSDatagramBytesRcvdPerSec": netBIOSDatagramBytesRcvdPerSec,
       "netBIOSDatagramBytesSentPerSec": netBIOSDatagramBytesSentPerSec,
       "netBIOSDatagramBytesPerSec": netBIOSDatagramBytesPerSec,
       "netBIOSDatagramsReceivedPerSec": netBIOSDatagramsReceivedPerSec,
       "netBIOSDatagramsSentPerSec": netBIOSDatagramsSentPerSec,
       "netBIOSDatagramsPerSec": netBIOSDatagramsPerSec,
       "netBIOSDisconnectsLocal": netBIOSDisconnectsLocal,
       "netBIOSDisconnectsRemote": netBIOSDisconnectsRemote,
       "netBIOSExpirationsAck": netBIOSExpirationsAck,
       "netBIOSExpirationsResponse": netBIOSExpirationsResponse,
       "netBIOSFailuresAdapter": netBIOSFailuresAdapter,
       "netBIOSFailuresLink": netBIOSFailuresLink,
       "netBIOSFailuresNoListen": netBIOSFailuresNoListen,
       "netBIOSFailuresNotFound": netBIOSFailuresNotFound,
       "netBIOSFailuresResourceLocal": netBIOSFailuresResourceLocal,
       "netBIOSFailuresResourceRemote": netBIOSFailuresResourceRemote,
       "netBIOSFrameBytesReSentPerSec": netBIOSFrameBytesReSentPerSec,
       "netBIOSFrameBytesReceivedPerSec": netBIOSFrameBytesReceivedPerSec,
       "netBIOSFrameBytesRejectedPerSec": netBIOSFrameBytesRejectedPerSec,
       "netBIOSFrameBytesSentPerSec": netBIOSFrameBytesSentPerSec,
       "netBIOSFrameBytesPerSec": netBIOSFrameBytesPerSec,
       "netBIOSFramesReSentPerSec": netBIOSFramesReSentPerSec,
       "netBIOSFramesReceivedPerSec": netBIOSFramesReceivedPerSec,
       "netBIOSFramesRejectedPerSec": netBIOSFramesRejectedPerSec,
       "netBIOSFramesSentPerSec": netBIOSFramesSentPerSec,
       "netBIOSFramesPerSec": netBIOSFramesPerSec,
       "netBIOSPacketsReceivedPerSec": netBIOSPacketsReceivedPerSec,
       "netBIOSPacketsSentPerSec": netBIOSPacketsSentPerSec,
       "netBIOSPacketsPerSec": netBIOSPacketsPerSec,
       "netBIOSPiggybackAckQueuedPerSec": netBIOSPiggybackAckQueuedPerSec,
       "netBIOSPiggybackAckTimeouts": netBIOSPiggybackAckTimeouts,
       "netBIOSWindowSendAverage": netBIOSWindowSendAverage,
       "netBIOSWindowSendMaximum": netBIOSWindowSendMaximum,
       "nwLinkSPXTable": nwLinkSPXTable,
       "nwLinkSPXEntry": nwLinkSPXEntry,
       "spxInstance": spxInstance,
       "spxBytesTotalPerSec": spxBytesTotalPerSec,
       "spxConnectionSessionTimeouts": spxConnectionSessionTimeouts,
       "spxConnectionsCanceled": spxConnectionsCanceled,
       "spxConnectionsNoRetries": spxConnectionsNoRetries,
       "spxConnectionsOpen": spxConnectionsOpen,
       "spxConnectionsWithRetries": spxConnectionsWithRetries,
       "spxDatagramBytesReceivedPerSec": spxDatagramBytesReceivedPerSec,
       "spxDatagramBytesSentPerSec": spxDatagramBytesSentPerSec,
       "spxDatagramBytesPerSec": spxDatagramBytesPerSec,
       "spxDatagramsReceivedPerSec": spxDatagramsReceivedPerSec,
       "spxDatagramsSentPerSec": spxDatagramsSentPerSec,
       "spxDatagramsPerSec": spxDatagramsPerSec,
       "spxDisconnectsLocal": spxDisconnectsLocal,
       "spxDisconnectsRemote": spxDisconnectsRemote,
       "spxExpirationsAck": spxExpirationsAck,
       "spxExpirationsResponse": spxExpirationsResponse,
       "spxFailuresAdapter": spxFailuresAdapter,
       "spxFailuresLink": spxFailuresLink,
       "spxFailuresNoListen": spxFailuresNoListen,
       "spxFailuresNotFound": spxFailuresNotFound,
       "spxFailuresResourceLocal": spxFailuresResourceLocal,
       "spxFailuresResourceRemote": spxFailuresResourceRemote,
       "spxFrameBytesReSentPerSec": spxFrameBytesReSentPerSec,
       "spxFrameBytesReceivedPerSec": spxFrameBytesReceivedPerSec,
       "spxFrameBytesRejectedPerSec": spxFrameBytesRejectedPerSec,
       "spxFrameBytesSentPerSec": spxFrameBytesSentPerSec,
       "spxFrameBytesPerSec": spxFrameBytesPerSec,
       "spxFramesReSentPerSec": spxFramesReSentPerSec,
       "spxFramesReceivedPerSec": spxFramesReceivedPerSec,
       "spxFramesRejectedPerSec": spxFramesRejectedPerSec,
       "spxFramesSentPerSec": spxFramesSentPerSec,
       "spxFramesPerSec": spxFramesPerSec,
       "spxPacketsReceivedPerSec": spxPacketsReceivedPerSec,
       "spxPacketsSentPerSec": spxPacketsSentPerSec,
       "spxPacketsPerSec": spxPacketsPerSec,
       "spxPiggybackAckQueuedPerSec": spxPiggybackAckQueuedPerSec,
       "spxPiggybackAckTimeouts": spxPiggybackAckTimeouts,
       "spxWindowSendAverage": spxWindowSendAverage,
       "spxWindowSendMaximum": spxWindowSendMaximum,
       "objects": objects,
       "objectsEvents": objectsEvents,
       "objectsMutexes": objectsMutexes,
       "objectsProcesses": objectsProcesses,
       "objectsSections": objectsSections,
       "objectsSemaphores": objectsSemaphores,
       "objectsThreads": objectsThreads,
       "pagingFileTable": pagingFileTable,
       "pagingFileEntry": pagingFileEntry,
       "pagingFileInstance": pagingFileInstance,
       "pagingFilePercentUsage": pagingFilePercentUsage,
       "pagingFilePercentUsagePeak": pagingFilePercentUsagePeak,
       "physicalDiskTable": physicalDiskTable,
       "physicalDiskEntry": physicalDiskEntry,
       "pDiskInstance": pDiskInstance,
       "pDiskPercentDiskReadTime": pDiskPercentDiskReadTime,
       "pDiskPercentDiskTime": pDiskPercentDiskTime,
       "pDiskPercentDiskWriteTime": pDiskPercentDiskWriteTime,
       "pDiskPercentIdleTime": pDiskPercentIdleTime,
       "pDiskAvgDiskBytesPerRead": pDiskAvgDiskBytesPerRead,
       "pDiskAvgDiskBytesPerTransfer": pDiskAvgDiskBytesPerTransfer,
       "pDiskAvgDiskBytesPerWrite": pDiskAvgDiskBytesPerWrite,
       "pDiskAvgDiskQueueLength": pDiskAvgDiskQueueLength,
       "pDiskAvgDiskReadQueueLength": pDiskAvgDiskReadQueueLength,
       "pDiskAvgDiskWriteQueueLength": pDiskAvgDiskWriteQueueLength,
       "pDiskAvgDiskSecPerRead": pDiskAvgDiskSecPerRead,
       "pDiskAvgDiskSecPerTransfer": pDiskAvgDiskSecPerTransfer,
       "pDiskAvgDiskSecPerWrite": pDiskAvgDiskSecPerWrite,
       "pDiskCurrentDiskQueueLength": pDiskCurrentDiskQueueLength,
       "pDiskDiskBytesPerSec": pDiskDiskBytesPerSec,
       "pDiskDiskReadBytesPerSec": pDiskDiskReadBytesPerSec,
       "pDiskDiskReadsPerSec": pDiskDiskReadsPerSec,
       "pDiskDiskTransfersPerSec": pDiskDiskTransfersPerSec,
       "pDiskDiskWriteBytesPerSec": pDiskDiskWriteBytesPerSec,
       "pDiskDiskWritesPerSec": pDiskDiskWritesPerSec,
       "pDiskSplitIOPerSec": pDiskSplitIOPerSec,
       "pop3Service": pop3Service,
       "pop3SvcBytesReceivePerSec": pop3SvcBytesReceivePerSec,
       "pop3SvcBytesTransmittedPerSec": pop3SvcBytesTransmittedPerSec,
       "pop3SvcConnectionsPerSec": pop3SvcConnectionsPerSec,
       "pop3SvcFreeThreads": pop3SvcFreeThreads,
       "pop3SvcMailboxesInAuthState": pop3SvcMailboxesInAuthState,
       "pop3SvcMailboxesInTranState": pop3SvcMailboxesInTranState,
       "pop3SvcMessagesDeliveredPerSec": pop3SvcMessagesDeliveredPerSec,
       "pop3SvcSocketsInUse": pop3SvcSocketsInUse,
       "pop3SvcTotalConnections": pop3SvcTotalConnections,
       "pop3SvcTotalFailedLogons": pop3SvcTotalFailedLogons,
       "pop3SvcTotalBytesReceived": pop3SvcTotalBytesReceived,
       "pop3SvcTotalBytesTransmitted": pop3SvcTotalBytesTransmitted,
       "pop3SvcTotalMessagesDelivered": pop3SvcTotalMessagesDelivered,
       "printQueueTable": printQueueTable,
       "printQueueEntry": printQueueEntry,
       "printQueueInstance": printQueueInstance,
       "printQueueAddNetworkPrinterCalls": printQueueAddNetworkPrinterCalls,
       "printQueueBytesPrintedPerSec": printQueueBytesPrintedPerSec,
       "printQueueEnumNetworkPrinterCall": printQueueEnumNetworkPrinterCall,
       "printQueueJobErrors": printQueueJobErrors,
       "printQueueJobs": printQueueJobs,
       "printQueueJobsSpooling": printQueueJobsSpooling,
       "printQueueMaxJobsSpooling": printQueueMaxJobsSpooling,
       "printQueueMaxReferences": printQueueMaxReferences,
       "printQueueNotReadyErrors": printQueueNotReadyErrors,
       "printQueueOutOfPaperErrors": printQueueOutOfPaperErrors,
       "printQueueReferences": printQueueReferences,
       "printQueueTotalJobsPrinted": printQueueTotalJobsPrinted,
       "printQueueTotalPagesPrinted": printQueueTotalPagesPrinted,
       "processTable": processTable,
       "processEntry": processEntry,
       "processInstance": processInstance,
       "processPercentPrivilegedTime": processPercentPrivilegedTime,
       "processPercentProcessorTime": processPercentProcessorTime,
       "processPercentUserTime": processPercentUserTime,
       "processCreatingProcessID": processCreatingProcessID,
       "processElapsedTime": processElapsedTime,
       "processHandleCount": processHandleCount,
       "processIDProcess": processIDProcess,
       "processIODataBytesPerSec": processIODataBytesPerSec,
       "processIODataOperationsPerSec": processIODataOperationsPerSec,
       "processIOOtherBytesPerSec": processIOOtherBytesPerSec,
       "processIOOtherOperationsPerSec": processIOOtherOperationsPerSec,
       "processIOReadBytesPerSec": processIOReadBytesPerSec,
       "processIOReadOperationsPerSec": processIOReadOperationsPerSec,
       "processIOWriteBytesPerSec": processIOWriteBytesPerSec,
       "processIOWriteOperationsPerSec": processIOWriteOperationsPerSec,
       "processPageFaultsPerSec": processPageFaultsPerSec,
       "processPageFileBytes": processPageFileBytes,
       "processPageFileBytesPeak": processPageFileBytesPeak,
       "processPoolNonpagedBytes": processPoolNonpagedBytes,
       "processPoolPagedBytes": processPoolPagedBytes,
       "processPriorityBase": processPriorityBase,
       "processPrivateBytes": processPrivateBytes,
       "processThreadCount": processThreadCount,
       "processVirtualBytes": processVirtualBytes,
       "processVirtualBytesPeak": processVirtualBytesPeak,
       "processWorkingSet": processWorkingSet,
       "processWorkingSetPeak": processWorkingSetPeak,
       "processPageFileKBytes": processPageFileKBytes,
       "processPageFileKBytesPeak": processPageFileKBytesPeak,
       "processPoolNonpagedKBytes": processPoolNonpagedKBytes,
       "processPoolPagedKBytes": processPoolPagedKBytes,
       "processPrivateKBytes": processPrivateKBytes,
       "processVirtualKBytes": processVirtualKBytes,
       "processVirtualKBytesPeak": processVirtualKBytesPeak,
       "processWorkingSetKBytes": processWorkingSetKBytes,
       "processWorkingSetKBytesPeak": processWorkingSetKBytesPeak,
       "processPageFileMBytes": processPageFileMBytes,
       "processPageFileMBytesPeak": processPageFileMBytesPeak,
       "processPoolNonpagedMBytes": processPoolNonpagedMBytes,
       "processPoolPagedMBytes": processPoolPagedMBytes,
       "processPrivateMBytes": processPrivateMBytes,
       "processVirtualMBytes": processVirtualMBytes,
       "processVirtualMBytesPeak": processVirtualMBytesPeak,
       "processWorkingSetMBytes": processWorkingSetMBytes,
       "processWorkingSetMBytesPeak": processWorkingSetMBytesPeak,
       "processWorkingSetPrivate": processWorkingSetPrivate,
       "processWorkingSetKPrivate": processWorkingSetKPrivate,
       "processWorkingSetMPrivate": processWorkingSetMPrivate,
       "processorTable": processorTable,
       "processorEntry": processorEntry,
       "cpuInstance": cpuInstance,
       "cpuPercentC1Time": cpuPercentC1Time,
       "cpuPercentC2Time": cpuPercentC2Time,
       "cpuPercentC3Time": cpuPercentC3Time,
       "cpuPercentDPCTime": cpuPercentDPCTime,
       "cpuPercentIdleTime": cpuPercentIdleTime,
       "cpuPercentInterruptTime": cpuPercentInterruptTime,
       "cpuPercentPrivilegedTime": cpuPercentPrivilegedTime,
       "cpuPercentProcessorTime": cpuPercentProcessorTime,
       "cpuPercentUserTime": cpuPercentUserTime,
       "cpuC1TransitionsPerSec": cpuC1TransitionsPerSec,
       "cpuC2TransitionsPerSec": cpuC2TransitionsPerSec,
       "cpuC3TransitionsPerSec": cpuC3TransitionsPerSec,
       "cpuDPCRate": cpuDPCRate,
       "cpuDPCsQueuedPerSec": cpuDPCsQueuedPerSec,
       "cpuInterruptsPerSec": cpuInterruptsPerSec,
       "pSchedFlowTable": pSchedFlowTable,
       "pSchedFlowEntry": pSchedFlowEntry,
       "pSchedFlowInstance": pSchedFlowInstance,
       "pSchedFlowAveragePktsInNetcard": pSchedFlowAveragePktsInNetcard,
       "pSchedFlowAveragePktsInSequencer": pSchedFlowAveragePktsInSequencer,
       "pSchedFlowAveragePktsInShaper": pSchedFlowAveragePktsInShaper,
       "pSchedFlowBytesScheduled": pSchedFlowBytesScheduled,
       "pSchedFlowBytesScheduledPerSec": pSchedFlowBytesScheduledPerSec,
       "pSchedFlowBytesTransmitted": pSchedFlowBytesTransmitted,
       "pSchedFlowBytesTransmittedPerSec": pSchedFlowBytesTransmittedPerSec,
       "pSchedFlowMaxPktsInSequencer": pSchedFlowMaxPktsInSequencer,
       "pSchedFlowMaxPktsInShaper": pSchedFlowMaxPktsInShaper,
       "pSchedFlowMaximumPktsInNetcard": pSchedFlowMaximumPktsInNetcard,
       "pSchedFlowNonconfPktsSched": pSchedFlowNonconfPktsSched,
       "pSchedFlowNonconfPktsSchedPerSec": pSchedFlowNonconfPktsSchedPerSec,
       "pSchedFlowNonconfPktsXmitd": pSchedFlowNonconfPktsXmitd,
       "pSchedFlowNonconfPktsXmitdPerSec": pSchedFlowNonconfPktsXmitdPerSec,
       "pSchedFlowPktsDropped": pSchedFlowPktsDropped,
       "pSchedFlowPktsDroppedPerSec": pSchedFlowPktsDroppedPerSec,
       "pSchedFlowPktsScheduled": pSchedFlowPktsScheduled,
       "pSchedFlowPktsScheduledPerSec": pSchedFlowPktsScheduledPerSec,
       "pSchedFlowPktsTransmitted": pSchedFlowPktsTransmitted,
       "pSchedFlowPktsTransmittedPerSec": pSchedFlowPktsTransmittedPerSec,
       "pSchedPipeTable": pSchedPipeTable,
       "pSchedPipeEntry": pSchedPipeEntry,
       "pSchedPipeInstance": pSchedPipeInstance,
       "pSchedPipeAvgPacketsInNetcard": pSchedPipeAvgPacketsInNetcard,
       "pSchedPipeAvgPacketsInSequencer": pSchedPipeAvgPacketsInSequencer,
       "pSchedPipeAvgPacketsInShaper": pSchedPipeAvgPacketsInShaper,
       "pSchedPipeFlowModsRejected": pSchedPipeFlowModsRejected,
       "pSchedPipeFlowsClosed": pSchedPipeFlowsClosed,
       "pSchedPipeFlowsModified": pSchedPipeFlowsModified,
       "pSchedPipeFlowsOpened": pSchedPipeFlowsOpened,
       "pSchedPipeFlowsRejected": pSchedPipeFlowsRejected,
       "pSchedPipeMaxPacketsInNetcard": pSchedPipeMaxPacketsInNetcard,
       "pSchedPipeMaxPacketsInSequencer": pSchedPipeMaxPacketsInSequencer,
       "pSchedPipeMaxPacketsInShaper": pSchedPipeMaxPacketsInShaper,
       "pSchedPipeMaxSimultaneousFlows": pSchedPipeMaxSimultaneousFlows,
       "pSchedPipeBadPacketsSched": pSchedPipeBadPacketsSched,
       "pSchedPipeBadPacketsSchedPerSec": pSchedPipeBadPacketsSchedPerSec,
       "pSchedPipeBadPacketsXmited": pSchedPipeBadPacketsXmited,
       "pSchedPipeBadPacketsXmitedPerSec": pSchedPipeBadPacketsXmitedPerSec,
       "pSchedPipeOutOfPackets": pSchedPipeOutOfPackets,
       "rasTotal": rasTotal,
       "rasTotalAlignmentErrors": rasTotalAlignmentErrors,
       "rasTotalBufferOverrunErrors": rasTotalBufferOverrunErrors,
       "rasTotalBytesReceived": rasTotalBytesReceived,
       "rasTotalBytesReceivedPerSec": rasTotalBytesReceivedPerSec,
       "rasTotalBytesTransmitted": rasTotalBytesTransmitted,
       "rasTotalBytesTransmittedPerSec": rasTotalBytesTransmittedPerSec,
       "rasTotalCRCErrors": rasTotalCRCErrors,
       "rasTotalFramesReceived": rasTotalFramesReceived,
       "rasTotalFramesReceivedPerSec": rasTotalFramesReceivedPerSec,
       "rasTotalFramesTransmitted": rasTotalFramesTransmitted,
       "rasTotalFramesTransmittedPerSec": rasTotalFramesTransmittedPerSec,
       "rasTotalPercentCompressionIn": rasTotalPercentCompressionIn,
       "rasTotalPercentCompressionOut": rasTotalPercentCompressionOut,
       "rasTotalSerialOverrunErrors": rasTotalSerialOverrunErrors,
       "rasTotalTimeoutErrors": rasTotalTimeoutErrors,
       "rasTotalTotalConnections": rasTotalTotalConnections,
       "rasTotalTotalErrors": rasTotalTotalErrors,
       "rasTotalTotalErrorsPerSec": rasTotalTotalErrorsPerSec,
       "rasPortTable": rasPortTable,
       "rasPortEntry": rasPortEntry,
       "rasPortInstance": rasPortInstance,
       "rasPortAlignmentErrors": rasPortAlignmentErrors,
       "rasPortBufferOverrunErrors": rasPortBufferOverrunErrors,
       "rasPortBytesReceived": rasPortBytesReceived,
       "rasPortBytesReceivedPerSec": rasPortBytesReceivedPerSec,
       "rasPortBytesTransmitted": rasPortBytesTransmitted,
       "rasPortBytesTransmittedPerSec": rasPortBytesTransmittedPerSec,
       "rasPortCRCErrors": rasPortCRCErrors,
       "rasPortFramesReceived": rasPortFramesReceived,
       "rasPortFramesReceivedPerSec": rasPortFramesReceivedPerSec,
       "rasPortFramesTransmitted": rasPortFramesTransmitted,
       "rasPortFramesTransmittedPerSec": rasPortFramesTransmittedPerSec,
       "rasPortPercentCompressionIn": rasPortPercentCompressionIn,
       "rasPortPercentCompressionOut": rasPortPercentCompressionOut,
       "rasPortSerialOverrunErrors": rasPortSerialOverrunErrors,
       "rasPortTimeoutErrors": rasPortTimeoutErrors,
       "rasPortTotalErrors": rasPortTotalErrors,
       "rasPortTotalErrorsPerSec": rasPortTotalErrorsPerSec,
       "redirector": redirector,
       "redirBytesReceivedPerSec": redirBytesReceivedPerSec,
       "redirBytesTotalPerSec": redirBytesTotalPerSec,
       "redirBytesTransmittedPerSec": redirBytesTransmittedPerSec,
       "redirConnectsCore": redirConnectsCore,
       "redirConnectsLanManager20": redirConnectsLanManager20,
       "redirConnectsLanManager21": redirConnectsLanManager21,
       "redirConnectsWindowsNT": redirConnectsWindowsNT,
       "redirCurrentCommands": redirCurrentCommands,
       "redirFileDataOperationsPerSec": redirFileDataOperationsPerSec,
       "redirFileReadOperationsPerSec": redirFileReadOperationsPerSec,
       "redirFileWriteOperationsPerSec": redirFileWriteOperationsPerSec,
       "redirNetworkErrorsPerSec": redirNetworkErrorsPerSec,
       "redirPacketsReceivedPerSec": redirPacketsReceivedPerSec,
       "redirPacketsTransmittedPerSec": redirPacketsTransmittedPerSec,
       "redirPacketsPerSec": redirPacketsPerSec,
       "redirReadBytesCachePerSec": redirReadBytesCachePerSec,
       "redirReadBytesNetworkPerSec": redirReadBytesNetworkPerSec,
       "redirReadBytesNonPagingPerSec": redirReadBytesNonPagingPerSec,
       "redirReadBytesPagingPerSec": redirReadBytesPagingPerSec,
       "redirReadOperationsRandomPerSec": redirReadOperationsRandomPerSec,
       "redirReadPacketsSmallPerSec": redirReadPacketsSmallPerSec,
       "redirReadPacketsPerSec": redirReadPacketsPerSec,
       "redirReadsDeniedPerSec": redirReadsDeniedPerSec,
       "redirReadsLargePerSec": redirReadsLargePerSec,
       "redirServerDisconnects": redirServerDisconnects,
       "redirServerReconnects": redirServerReconnects,
       "redirServerSessions": redirServerSessions,
       "redirServerSessionsHung": redirServerSessionsHung,
       "redirWriteBytesCachePerSec": redirWriteBytesCachePerSec,
       "redirWriteBytesNetworkPerSec": redirWriteBytesNetworkPerSec,
       "redirWriteBytesNonPagingPerSec": redirWriteBytesNonPagingPerSec,
       "redirWriteBytesPagingPerSec": redirWriteBytesPagingPerSec,
       "redirWriteOperationsRandomPerSec": redirWriteOperationsRandomPerSec,
       "redirWritePacketsSmallPerSec": redirWritePacketsSmallPerSec,
       "redirWritePacketsPerSec": redirWritePacketsPerSec,
       "redirWritesDeniedPerSec": redirWritesDeniedPerSec,
       "redirWritesLargePerSec": redirWritesLargePerSec,
       "rsvpInterfacesTable": rsvpInterfacesTable,
       "rsvpInterfacesEntry": rsvpInterfacesEntry,
       "rsvpIfInstance": rsvpIfInstance,
       "rsvpIfBlockedRESVs": rsvpIfBlockedRESVs,
       "rsvpIfGeneralFailures": rsvpIfGeneralFailures,
       "rsvpIfMaximumAdmittedBandwidth": rsvpIfMaximumAdmittedBandwidth,
       "rsvpIfNumOfActiveFlows": rsvpIfNumOfActiveFlows,
       "rsvpIfNumOfIncomingMsgsDropped": rsvpIfNumOfIncomingMsgsDropped,
       "rsvpIfNumOfOutgoingMsgsDropped": rsvpIfNumOfOutgoingMsgsDropped,
       "rsvpIfPATHERRMsgsReceived": rsvpIfPATHERRMsgsReceived,
       "rsvpIfPATHERRMsgsSent": rsvpIfPATHERRMsgsSent,
       "rsvpIfPATHTEARMsgsReceived": rsvpIfPATHTEARMsgsReceived,
       "rsvpIfPATHTEARMsgsSent": rsvpIfPATHTEARMsgsSent,
       "rsvpIfPATHMsgsReceived": rsvpIfPATHMsgsReceived,
       "rsvpIfPATHMsgsSent": rsvpIfPATHMsgsSent,
       "rsvpIfPATHStateBlockTimeouts": rsvpIfPATHStateBlockTimeouts,
       "rsvpIfPolicyControlFailures": rsvpIfPolicyControlFailures,
       "rsvpIfRESVCONFIRMMsgsReceived": rsvpIfRESVCONFIRMMsgsReceived,
       "rsvpIfRESVCONFIRMMsgsSent": rsvpIfRESVCONFIRMMsgsSent,
       "rsvpIfRESVERRMsgsReceived": rsvpIfRESVERRMsgsReceived,
       "rsvpIfRESVERRMsgsSent": rsvpIfRESVERRMsgsSent,
       "rsvpIfRESVTEARMsgsReceived": rsvpIfRESVTEARMsgsReceived,
       "rsvpIfRESVTEARMsgsSent": rsvpIfRESVTEARMsgsSent,
       "rsvpIfRESVMsgsReceived": rsvpIfRESVMsgsReceived,
       "rsvpIfRESVMsgsSent": rsvpIfRESVMsgsSent,
       "rsvpIfRESVStateBlockTimeouts": rsvpIfRESVStateBlockTimeouts,
       "rsvpIfReceiveMsgsErrorsBigMsgs": rsvpIfReceiveMsgsErrorsBigMsgs,
       "rsvpIfReceiveMsgsErrorsNoMemory": rsvpIfReceiveMsgsErrorsNoMemory,
       "rsvpIfReservedBandwidth": rsvpIfReservedBandwidth,
       "rsvpIfResourceControlFailures": rsvpIfResourceControlFailures,
       "rsvpIfSendMsgsErrorsBigMsgs": rsvpIfSendMsgsErrorsBigMsgs,
       "rsvpIfSendMsgsErrorsNoMemory": rsvpIfSendMsgsErrorsNoMemory,
       "rsvpIfSignalingBytesReceived": rsvpIfSignalingBytesReceived,
       "rsvpIfSignalingBytesSent": rsvpIfSignalingBytesSent,
       "rsvpServiceTable": rsvpServiceTable,
       "rsvpServiceEntry": rsvpServiceEntry,
       "rsvpSvcInstance": rsvpSvcInstance,
       "rsvpSvcBytesInQoSNotifications": rsvpSvcBytesInQoSNotifications,
       "rsvpSvcFailedQoSRequests": rsvpSvcFailedQoSRequests,
       "rsvpSvcFailedQoSSends": rsvpSvcFailedQoSSends,
       "rsvpSvcNetworkInterfaces": rsvpSvcNetworkInterfaces,
       "rsvpSvcNetworkSockets": rsvpSvcNetworkSockets,
       "rsvpSvcQoSClients": rsvpSvcQoSClients,
       "rsvpSvcQoSNotifications": rsvpSvcQoSNotifications,
       "rsvpSvcQoSenabledReceivers": rsvpSvcQoSenabledReceivers,
       "rsvpSvcQoSenabledSenders": rsvpSvcQoSenabledSenders,
       "rsvpSvcRSVPSessions": rsvpSvcRSVPSessions,
       "rsvpSvcTimers": rsvpSvcTimers,
       "server": server,
       "serverBlockingRequestsRejected": serverBlockingRequestsRejected,
       "serverBytesReceivedPerSec": serverBytesReceivedPerSec,
       "serverBytesTotalPerSec": serverBytesTotalPerSec,
       "serverBytesTransmittedPerSec": serverBytesTransmittedPerSec,
       "serverContextBlocksQueuedPerSec": serverContextBlocksQueuedPerSec,
       "serverErrorsAccessPermissions": serverErrorsAccessPermissions,
       "serverErrorsGrantedAccess": serverErrorsGrantedAccess,
       "serverErrorsLogon": serverErrorsLogon,
       "serverErrorsSystem": serverErrorsSystem,
       "serverFileDirectorySearches": serverFileDirectorySearches,
       "serverFilesOpen": serverFilesOpen,
       "serverFilesOpenedTotal": serverFilesOpenedTotal,
       "serverLogonTotal": serverLogonTotal,
       "serverLogonPerSec": serverLogonPerSec,
       "serverPoolNonpagedBytes": serverPoolNonpagedBytes,
       "serverPoolNonpagedFailures": serverPoolNonpagedFailures,
       "serverPoolNonpagedPeak": serverPoolNonpagedPeak,
       "serverPoolPagedBytes": serverPoolPagedBytes,
       "serverPoolPagedFailures": serverPoolPagedFailures,
       "serverPoolPagedPeak": serverPoolPagedPeak,
       "serverServerSessions": serverServerSessions,
       "serverSessionsErroredOut": serverSessionsErroredOut,
       "serverSessionsForcedOff": serverSessionsForcedOff,
       "serverSessionsLoggedOff": serverSessionsLoggedOff,
       "serverSessionsTimedOut": serverSessionsTimedOut,
       "serverWorkItemShortages": serverWorkItemShortages,
       "serverPoolNonpagedKBytes": serverPoolNonpagedKBytes,
       "serverPoolNonpagedKBytesPeak": serverPoolNonpagedKBytesPeak,
       "serverPoolPagedKBytes": serverPoolPagedKBytes,
       "serverPoolPagedKBytesPeak": serverPoolPagedKBytesPeak,
       "serverPoolNonpagedMBytes": serverPoolNonpagedMBytes,
       "serverPoolNonpagedMBytesPeak": serverPoolNonpagedMBytesPeak,
       "serverPoolPagedMBytes": serverPoolPagedMBytes,
       "serverPoolPagedMBytesPeak": serverPoolPagedMBytesPeak,
       "serverWorkQueuesTable": serverWorkQueuesTable,
       "serverWorkQueuesEntry": serverWorkQueuesEntry,
       "swqInstance": swqInstance,
       "swqActiveThreads": swqActiveThreads,
       "swqAvailableThreads": swqAvailableThreads,
       "swqAvailableWorkItems": swqAvailableWorkItems,
       "swqBorrowedWorkItems": swqBorrowedWorkItems,
       "swqBytesReceivedPerSec": swqBytesReceivedPerSec,
       "swqBytesSentPerSec": swqBytesSentPerSec,
       "swqBytesTransferredPerSec": swqBytesTransferredPerSec,
       "swqContextBlocksQueuedPerSec": swqContextBlocksQueuedPerSec,
       "swqCurrentClients": swqCurrentClients,
       "swqQueueLength": swqQueueLength,
       "swqReadBytesPerSec": swqReadBytesPerSec,
       "swqReadOperationsPerSec": swqReadOperationsPerSec,
       "swqTotalBytesPerSec": swqTotalBytesPerSec,
       "swqTotalOperationsPerSec": swqTotalOperationsPerSec,
       "swqWorkItemShortages": swqWorkItemShortages,
       "swqWriteBytesPerSec": swqWriteBytesPerSec,
       "swqWriteOperationsPerSec": swqWriteOperationsPerSec,
       "smtpNTFSStoreDriverTable": smtpNTFSStoreDriverTable,
       "smtpNTFSStoreDriverEntry": smtpNTFSStoreDriverEntry,
       "snsdInstance": snsdInstance,
       "snsdMessagesAllocated": snsdMessagesAllocated,
       "snsdMessagesDeleted": snsdMessagesDeleted,
       "snsdMessagesEnumerated": snsdMessagesEnumerated,
       "snsdMessagesInTheQueueDirectory": snsdMessagesInTheQueueDirectory,
       "snsdOpenMessageBodies": snsdOpenMessageBodies,
       "snsdOpenMessageStreams": snsdOpenMessageStreams,
       "smtpServerTable": smtpServerTable,
       "smtpServerEntry": smtpServerEntry,
       "smtpSrvrInstance": smtpSrvrInstance,
       "smtpSrvrPercentRcpntsLocal": smtpSrvrPercentRcpntsLocal,
       "smtpSrvrPercentRcpntsRemote": smtpSrvrPercentRcpntsRemote,
       "smtpSrvrAvgRcpntsPerMsgRcvd": smtpSrvrAvgRcpntsPerMsgRcvd,
       "smtpSrvrAvgRcpntsPerMsgSent": smtpSrvrAvgRcpntsPerMsgSent,
       "smtpSrvrAvgRetriesPerMsgDlvrd": smtpSrvrAvgRetriesPerMsgDlvrd,
       "smtpSrvrAvgRetriesPerMsgSent": smtpSrvrAvgRetriesPerMsgSent,
       "smtpSrvrBadMailMsgsBadPickupFile": smtpSrvrBadMailMsgsBadPickupFile,
       "smtpSrvrBadMailMsgsGeneralFail": smtpSrvrBadMailMsgsGeneralFail,
       "smtpSrvrBadMailMsgsHopCntExceed": smtpSrvrBadMailMsgsHopCntExceed,
       "smtpSrvrBadMailMsgsNDROfDSN": smtpSrvrBadMailMsgsNDROfDSN,
       "smtpSrvrBadMailMsgsNoRcpnts": smtpSrvrBadMailMsgsNoRcpnts,
       "smtpSrvrBadMailMsgsTrigViaEvent": smtpSrvrBadMailMsgsTrigViaEvent,
       "smtpSrvrBytesRcvdTotal": smtpSrvrBytesRcvdTotal,
       "smtpSrvrBytesRcvdPerSec": smtpSrvrBytesRcvdPerSec,
       "smtpSrvrBytesSentTotal": smtpSrvrBytesSentTotal,
       "smtpSrvrBytesSentPerSec": smtpSrvrBytesSentPerSec,
       "smtpSrvrBytesTotal": smtpSrvrBytesTotal,
       "smtpSrvrBytesTotalPerSec": smtpSrvrBytesTotalPerSec,
       "smtpSrvrCatAddrLookupCmplt": smtpSrvrCatAddrLookupCmplt,
       "smtpSrvrCatAddrLookupCmpltPerSec": smtpSrvrCatAddrLookupCmpltPerSec,
       "smtpSrvrCatAddrLookups": smtpSrvrCatAddrLookups,
       "smtpSrvrCatAddrLookupsNotFound": smtpSrvrCatAddrLookupsNotFound,
       "smtpSrvrCatAddrLookupsPerSec": smtpSrvrCatAddrLookupsPerSec,
       "smtpSrvrCatCatsCmpltd": smtpSrvrCatCatsCmpltd,
       "smtpSrvrCatCatsCmpltdSuccess": smtpSrvrCatCatsCmpltdSuccess,
       "smtpSrvrCatCatsCmpltdPerSec": smtpSrvrCatCatsCmpltdPerSec,
       "smtpSrvrCatCatsFailDSConnFail": smtpSrvrCatCatsFailDSConnFail,
       "smtpSrvrCatCatsFailDSLogonFail": smtpSrvrCatCatsFailDSLogonFail,
       "smtpSrvrCatCatsFailOutOfMemory": smtpSrvrCatCatsFailOutOfMemory,
       "smtpSrvrCatCatsFailNonRetryError": smtpSrvrCatCatsFailNonRetryError,
       "smtpSrvrCatCatsFailRetryError": smtpSrvrCatCatsFailRetryError,
       "smtpSrvrCatCatsFailSinkRetryErr": smtpSrvrCatCatsFailSinkRetryErr,
       "smtpSrvrCatCatsInProgress": smtpSrvrCatCatsInProgress,
       "smtpSrvrCatLDAPBindFail": smtpSrvrCatLDAPBindFail,
       "smtpSrvrCatLDAPBinds": smtpSrvrCatLDAPBinds,
       "smtpSrvrCatLDAPConnFail": smtpSrvrCatLDAPConnFail,
       "smtpSrvrCatLDAPConns": smtpSrvrCatLDAPConns,
       "smtpSrvrCatLDAPConnsCurrOpen": smtpSrvrCatLDAPConnsCurrOpen,
       "smtpSrvrCatLDAPGeneralCmpltFail": smtpSrvrCatLDAPGeneralCmpltFail,
       "smtpSrvrCatLDAPPageSrchCmpltFail": smtpSrvrCatLDAPPageSrchCmpltFail,
       "smtpSrvrCatLDAPPagedSrchFail": smtpSrvrCatLDAPPagedSrchFail,
       "smtpSrvrCatLDAPPagedSrchs": smtpSrvrCatLDAPPagedSrchs,
       "smtpSrvrCatLDAPPagedSrchsCmpltd": smtpSrvrCatLDAPPagedSrchsCmpltd,
       "smtpSrvrCatLDAPSrchCmpltFail": smtpSrvrCatLDAPSrchCmpltFail,
       "smtpSrvrCatLDAPSrchFail": smtpSrvrCatLDAPSrchFail,
       "smtpSrvrCatLDAPSrchs": smtpSrvrCatLDAPSrchs,
       "smtpSrvrCatLDAPSrchsAbandoned": smtpSrvrCatLDAPSrchsAbandoned,
       "smtpSrvrCatLDAPSrchsCmpltd": smtpSrvrCatLDAPSrchsCmpltd,
       "smtpSrvrCatLDAPSrchsCmpltdPerSec": smtpSrvrCatLDAPSrchsCmpltdPerSec,
       "smtpSrvrCatLDAPSrchsPendingCmplt": smtpSrvrCatLDAPSrchsPendingCmplt,
       "smtpSrvrCatLDAPSrchsPerSec": smtpSrvrCatLDAPSrchsPerSec,
       "smtpSrvrCatMsgsCategorized": smtpSrvrCatMsgsCategorized,
       "smtpSrvrCatMsgsAborted": smtpSrvrCatMsgsAborted,
       "smtpSrvrCatMsgsBifurcated": smtpSrvrCatMsgsBifurcated,
       "smtpSrvrCatMsgsSubmitted": smtpSrvrCatMsgsSubmitted,
       "smtpSrvrCatMsgsSubmittedPerSec": smtpSrvrCatMsgsSubmittedPerSec,
       "smtpSrvrCatRcptsNDRdAmbigsAddr": smtpSrvrCatRcptsNDRdAmbigsAddr,
       "smtpSrvrCatRcptsNDRdForwardLoop": smtpSrvrCatRcptsNDRdForwardLoop,
       "smtpSrvrCatRcptsNDRdIllegalAddr": smtpSrvrCatRcptsNDRdIllegalAddr,
       "smtpSrvrCatRcptsNDRdSinkRecipErr": smtpSrvrCatRcptsNDRdSinkRecipErr,
       "smtpSrvrCatRcptsNDRdUnresolved": smtpSrvrCatRcptsNDRdUnresolved,
       "smtpSrvrCatRcptsNDRdByCategorize": smtpSrvrCatRcptsNDRdByCategorize,
       "smtpSrvrCatRcptsAfterCat": smtpSrvrCatRcptsAfterCat,
       "smtpSrvrCatRcptsBeforeCat": smtpSrvrCatRcptsBeforeCat,
       "smtpSrvrCatRcptsInCat": smtpSrvrCatRcptsInCat,
       "smtpSrvrCatSendersUnresolved": smtpSrvrCatSendersUnresolved,
       "smtpSrvrCatSendersAmbigsAddr": smtpSrvrCatSendersAmbigsAddr,
       "smtpSrvrCatMailmsgDupCollisions": smtpSrvrCatMailmsgDupCollisions,
       "smtpSrvrCategorizerQueueLength": smtpSrvrCategorizerQueueLength,
       "smtpSrvrConnErrorsPerSec": smtpSrvrConnErrorsPerSec,
       "smtpSrvrCurrentMsgsInLocalDlvry": smtpSrvrCurrentMsgsInLocalDlvry,
       "smtpSrvrDNSQueriesTotal": smtpSrvrDNSQueriesTotal,
       "smtpSrvrDNSQueriesPerSec": smtpSrvrDNSQueriesPerSec,
       "smtpSrvrDirDropsTotal": smtpSrvrDirDropsTotal,
       "smtpSrvrDirDropsPerSec": smtpSrvrDirDropsPerSec,
       "smtpSrvrETRNMsgsTotal": smtpSrvrETRNMsgsTotal,
       "smtpSrvrETRNMsgsPerSec": smtpSrvrETRNMsgsPerSec,
       "smtpSrvrInboundConnsCurrent": smtpSrvrInboundConnsCurrent,
       "smtpSrvrInboundConnsTotal": smtpSrvrInboundConnsTotal,
       "smtpSrvrLocalQueueLength": smtpSrvrLocalQueueLength,
       "smtpSrvrLocalRetryQueueLength": smtpSrvrLocalRetryQueueLength,
       "smtpSrvrMsgBytesRcvdTotal": smtpSrvrMsgBytesRcvdTotal,
       "smtpSrvrMsgBytesRcvdPerSec": smtpSrvrMsgBytesRcvdPerSec,
       "smtpSrvrMsgBytesSentTotal": smtpSrvrMsgBytesSentTotal,
       "smtpSrvrMsgBytesSentPerSec": smtpSrvrMsgBytesSentPerSec,
       "smtpSrvrMsgBytesTotal": smtpSrvrMsgBytesTotal,
       "smtpSrvrMsgBytesTotalPerSec": smtpSrvrMsgBytesTotalPerSec,
       "smtpSrvrMsgDlvryRetries": smtpSrvrMsgDlvryRetries,
       "smtpSrvrMsgSendRetries": smtpSrvrMsgSendRetries,
       "smtpSrvrMsgsCurrUndeliverable": smtpSrvrMsgsCurrUndeliverable,
       "smtpSrvrMsgsDlvrdTotal": smtpSrvrMsgsDlvrdTotal,
       "smtpSrvrMsgsDlvrdPerSec": smtpSrvrMsgsDlvrdPerSec,
       "smtpSrvrMsgsPendingRoute": smtpSrvrMsgsPendingRoute,
       "smtpSrvrMsgsRcvdTotal": smtpSrvrMsgsRcvdTotal,
       "smtpSrvrMsgsRcvdPerSec": smtpSrvrMsgsRcvdPerSec,
       "smtpSrvrMsgsRfsdForAddrObjects": smtpSrvrMsgsRfsdForAddrObjects,
       "smtpSrvrMsgsRfsdForMailObjects": smtpSrvrMsgsRfsdForMailObjects,
       "smtpSrvrMsgsRfsdForSize": smtpSrvrMsgsRfsdForSize,
       "smtpSrvrMsgsSentTotal": smtpSrvrMsgsSentTotal,
       "smtpSrvrMsgsSentPerSec": smtpSrvrMsgsSentPerSec,
       "smtpSrvrNDRsGenerated": smtpSrvrNDRsGenerated,
       "smtpSrvrNumberOfMailFilesOpen": smtpSrvrNumberOfMailFilesOpen,
       "smtpSrvrNumberOfQueueFilesOpen": smtpSrvrNumberOfQueueFilesOpen,
       "smtpSrvrOutboundConnsCurrent": smtpSrvrOutboundConnsCurrent,
       "smtpSrvrOutboundConnsRfsd": smtpSrvrOutboundConnsRfsd,
       "smtpSrvrOutboundConnsTotal": smtpSrvrOutboundConnsTotal,
       "smtpSrvrPickupDirMsgsRtrvdTotal": smtpSrvrPickupDirMsgsRtrvdTotal,
       "smtpSrvrPickupDirMsgsRtrvdPerSec": smtpSrvrPickupDirMsgsRtrvdPerSec,
       "smtpSrvrRemoteQueueLength": smtpSrvrRemoteQueueLength,
       "smtpSrvrRemoteRetryQueueLength": smtpSrvrRemoteRetryQueueLength,
       "smtpSrvrRouteTableLookupsTotal": smtpSrvrRouteTableLookupsTotal,
       "smtpSrvrRouteTableLookupsPerSec": smtpSrvrRouteTableLookupsPerSec,
       "smtpSrvrTotalConnErrors": smtpSrvrTotalConnErrors,
       "smtpSrvrTotalDSNFail": smtpSrvrTotalDSNFail,
       "smtpSrvrTotalMsgsSubmitted": smtpSrvrTotalMsgsSubmitted,
       "system": system,
       "systemPercentRegistryQuotaInUse": systemPercentRegistryQuotaInUse,
       "systemAlignmentFixupsPerSec": systemAlignmentFixupsPerSec,
       "systemContextSwitchesPerSec": systemContextSwitchesPerSec,
       "systemExceptionDispatchesPerSec": systemExceptionDispatchesPerSec,
       "systemFileControlBytesPerSec": systemFileControlBytesPerSec,
       "systemFileControlOperationPerSec": systemFileControlOperationPerSec,
       "systemFileDataOperationsPerSec": systemFileDataOperationsPerSec,
       "systemFileReadBytesPerSec": systemFileReadBytesPerSec,
       "systemFileReadOperationsPerSec": systemFileReadOperationsPerSec,
       "systemFileWriteBytesPerSec": systemFileWriteBytesPerSec,
       "systemFileWriteOperationsPerSec": systemFileWriteOperationsPerSec,
       "systemFloatingEmulationsPerSec": systemFloatingEmulationsPerSec,
       "systemProcesses": systemProcesses,
       "systemProcessorQueueLength": systemProcessorQueueLength,
       "systemSystemCallsPerSec": systemSystemCallsPerSec,
       "systemSystemUpTime": systemSystemUpTime,
       "systemThreads": systemThreads,
       "tcpV4": tcpV4,
       "tcpV4ConnectionFailures": tcpV4ConnectionFailures,
       "tcpV4ConnectionsActive": tcpV4ConnectionsActive,
       "tcpV4ConnectionsEstablished": tcpV4ConnectionsEstablished,
       "tcpV4ConnectionsPassive": tcpV4ConnectionsPassive,
       "tcpV4ConnectionsReset": tcpV4ConnectionsReset,
       "tcpV4SegmentsReceivedPerSec": tcpV4SegmentsReceivedPerSec,
       "tcpV4SegmentsRetransmittedPerSec": tcpV4SegmentsRetransmittedPerSec,
       "tcpV4SegmentsSentPerSec": tcpV4SegmentsSentPerSec,
       "tcpV4SegmentsPerSec": tcpV4SegmentsPerSec,
       "tcpV6": tcpV6,
       "tcpV6ConnectionFailures": tcpV6ConnectionFailures,
       "tcpV6ConnectionsActive": tcpV6ConnectionsActive,
       "tcpV6ConnectionsEstablished": tcpV6ConnectionsEstablished,
       "tcpV6ConnectionsPassive": tcpV6ConnectionsPassive,
       "tcpV6ConnectionsReset": tcpV6ConnectionsReset,
       "tcpV6SegmentsReceivedPerSec": tcpV6SegmentsReceivedPerSec,
       "tcpV6SegmentsRetransmittedPerSec": tcpV6SegmentsRetransmittedPerSec,
       "tcpV6SegmentsSentPerSec": tcpV6SegmentsSentPerSec,
       "tcpV6SegmentsPerSec": tcpV6SegmentsPerSec,
       "telephony": telephony,
       "telephonyActiveLines": telephonyActiveLines,
       "telephonyActiveTelephones": telephonyActiveTelephones,
       "telephonyClientApps": telephonyClientApps,
       "telephonyCurrentIncomingCalls": telephonyCurrentIncomingCalls,
       "telephonyCurrentOutgoingCalls": telephonyCurrentOutgoingCalls,
       "telephonyIncomingCallsPerSec": telephonyIncomingCallsPerSec,
       "telephonyLines": telephonyLines,
       "telephonyOutgoingCallsPerSec": telephonyOutgoingCallsPerSec,
       "telephonyTelephoneDevices": telephonyTelephoneDevices,
       "terminalServices": terminalServices,
       "tsActiveSessions": tsActiveSessions,
       "tsInactiveSessions": tsInactiveSessions,
       "tsTotalSessions": tsTotalSessions,
       "terminalServicesSessionTable": terminalServicesSessionTable,
       "terminalServicesSessionEntry": terminalServicesSessionEntry,
       "tssInstance": tssInstance,
       "tssPercentPrivilegedTime": tssPercentPrivilegedTime,
       "tssPercentProcessorTime": tssPercentProcessorTime,
       "tssPercentUserTime": tssPercentUserTime,
       "tssHandleCount": tssHandleCount,
       "tssInputAsyncFrameError": tssInputAsyncFrameError,
       "tssInputAsyncOverflow": tssInputAsyncOverflow,
       "tssInputAsyncOverrun": tssInputAsyncOverrun,
       "tssInputAsyncParityError": tssInputAsyncParityError,
       "tssInputBytes": tssInputBytes,
       "tssInputCompressFlushes": tssInputCompressFlushes,
       "tssInputCompressedBytes": tssInputCompressedBytes,
       "tssInputCompressionRatio": tssInputCompressionRatio,
       "tssInputErrors": tssInputErrors,
       "tssInputFrames": tssInputFrames,
       "tssInputTimeouts": tssInputTimeouts,
       "tssInputTransportErrors": tssInputTransportErrors,
       "tssInputWaitForOutBuf": tssInputWaitForOutBuf,
       "tssInputWdBytes": tssInputWdBytes,
       "tssInputWdFrames": tssInputWdFrames,
       "tssOutputAsyncFrameError": tssOutputAsyncFrameError,
       "tssOutputAsyncOverflow": tssOutputAsyncOverflow,
       "tssOutputAsyncOverrun": tssOutputAsyncOverrun,
       "tssOutputAsyncParityError": tssOutputAsyncParityError,
       "tssOutputBytes": tssOutputBytes,
       "tssOutputCompressFlushes": tssOutputCompressFlushes,
       "tssOutputCompressedBytes": tssOutputCompressedBytes,
       "tssOutputCompressionRatio": tssOutputCompressionRatio,
       "tssOutputErrors": tssOutputErrors,
       "tssOutputFrames": tssOutputFrames,
       "tssOutputTimeouts": tssOutputTimeouts,
       "tssOutputTransportErrors": tssOutputTransportErrors,
       "tssOutputWaitForOutBuf": tssOutputWaitForOutBuf,
       "tssOutputWdBytes": tssOutputWdBytes,
       "tssOutputWdFrames": tssOutputWdFrames,
       "tssPageFaultsPerSec": tssPageFaultsPerSec,
       "tssPageFileBytes": tssPageFileBytes,
       "tssPageFileBytesPeak": tssPageFileBytesPeak,
       "tssPoolNonpagedBytes": tssPoolNonpagedBytes,
       "tssPoolPagedBytes": tssPoolPagedBytes,
       "tssPrivateBytes": tssPrivateBytes,
       "tssProtocolBitmapCacheHitRatio": tssProtocolBitmapCacheHitRatio,
       "tssProtocolBitmapCacheHits": tssProtocolBitmapCacheHits,
       "tssProtocolBitmapCacheReads": tssProtocolBitmapCacheReads,
       "tssProtocolBrushCacheHitRatio": tssProtocolBrushCacheHitRatio,
       "tssProtocolBrushCacheHits": tssProtocolBrushCacheHits,
       "tssProtocolBrushCacheReads": tssProtocolBrushCacheReads,
       "tssProtocolGlyphCacheHitRatio": tssProtocolGlyphCacheHitRatio,
       "tssProtocolGlyphCacheHits": tssProtocolGlyphCacheHits,
       "tssProtocolGlyphCacheReads": tssProtocolGlyphCacheReads,
       "tssProtocolSvScrnBtmpCachHtRatio": tssProtocolSvScrnBtmpCachHtRatio,
       "tssProtocolSvScrnBtmpCachHts": tssProtocolSvScrnBtmpCachHts,
       "tssProtocolSvScrnBtmpCachReads": tssProtocolSvScrnBtmpCachReads,
       "tssThreadCount": tssThreadCount,
       "tssTotalAsyncFrameError": tssTotalAsyncFrameError,
       "tssTotalAsyncOverflow": tssTotalAsyncOverflow,
       "tssTotalAsyncOverrun": tssTotalAsyncOverrun,
       "tssTotalAsyncParityError": tssTotalAsyncParityError,
       "tssTotalBytes": tssTotalBytes,
       "tssTotalCompressFlushes": tssTotalCompressFlushes,
       "tssTotalCompressedBytes": tssTotalCompressedBytes,
       "tssTotalCompressionRatio": tssTotalCompressionRatio,
       "tssTotalErrors": tssTotalErrors,
       "tssTotalFrames": tssTotalFrames,
       "tssTotalProtocolCacheHitRatio": tssTotalProtocolCacheHitRatio,
       "tssTotalProtocolCacheHits": tssTotalProtocolCacheHits,
       "tssTotalProtocolCacheReads": tssTotalProtocolCacheReads,
       "tssTotalTimeouts": tssTotalTimeouts,
       "tssTotalTransportErrors": tssTotalTransportErrors,
       "tssTotalWaitForOutBuf": tssTotalWaitForOutBuf,
       "tssTotalWdBytes": tssTotalWdBytes,
       "tssTotalWdFrames": tssTotalWdFrames,
       "tssVirtualBytes": tssVirtualBytes,
       "tssVirtualBytesPeak": tssVirtualBytesPeak,
       "tssWorkingSet": tssWorkingSet,
       "tssWorkingSetPeak": tssWorkingSetPeak,
       "threadTable": threadTable,
       "threadEntry": threadEntry,
       "threadInstance": threadInstance,
       "threadPercentPrivilegedTime": threadPercentPrivilegedTime,
       "threadPercentProcessorTime": threadPercentProcessorTime,
       "threadPercentUserTime": threadPercentUserTime,
       "threadContextSwitchesPerSec": threadContextSwitchesPerSec,
       "threadElapsedTime": threadElapsedTime,
       "threadIDProcess": threadIDProcess,
       "threadIDThread": threadIDThread,
       "threadPriorityBase": threadPriorityBase,
       "threadPriorityCurrent": threadPriorityCurrent,
       "threadStartAddress": threadStartAddress,
       "threadThreadState": threadThreadState,
       "threadThreadWaitReason": threadThreadWaitReason,
       "udpV4": udpV4,
       "udpV4DatagramsNoPortPerSec": udpV4DatagramsNoPortPerSec,
       "udpV4DatagramsReceivedErrors": udpV4DatagramsReceivedErrors,
       "udpV4DatagramsReceivedPerSec": udpV4DatagramsReceivedPerSec,
       "udpV4DatagramsSentPerSec": udpV4DatagramsSentPerSec,
       "udpV4DatagramsPerSec": udpV4DatagramsPerSec,
       "udpV6": udpV6,
       "udpV6DatagramsNoPortPerSec": udpV6DatagramsNoPortPerSec,
       "udpV6DatagramsReceivedErrors": udpV6DatagramsReceivedErrors,
       "udpV6DatagramsReceivedPerSec": udpV6DatagramsReceivedPerSec,
       "udpV6DatagramsSentPerSec": udpV6DatagramsSentPerSec,
       "udpV6DatagramsPerSec": udpV6DatagramsPerSec,
       "webServiceTable": webServiceTable,
       "webServiceEntry": webServiceEntry,
       "wsInstance": wsInstance,
       "wsAnonymousUsersPerSec": wsAnonymousUsersPerSec,
       "wsBytesReceivedPerSec": wsBytesReceivedPerSec,
       "wsBytesSentPerSec": wsBytesSentPerSec,
       "wsBytesTotalPerSec": wsBytesTotalPerSec,
       "wsCGIRqstsPerSec": wsCGIRqstsPerSec,
       "wsConnAtmpsPerSec": wsConnAtmpsPerSec,
       "wsCopyRqstsPerSec": wsCopyRqstsPerSec,
       "wsCurrentAnonymousUsers": wsCurrentAnonymousUsers,
       "wsCurrentBlkdAsyncIORqsts": wsCurrentBlkdAsyncIORqsts,
       "wsCurrentCALCountForSSLConns": wsCurrentCALCountForSSLConns,
       "wsCurrentCALCountForAuthdUsers": wsCurrentCALCountForAuthdUsers,
       "wsCurrentCGIRqsts": wsCurrentCGIRqsts,
       "wsCurrentConns": wsCurrentConns,
       "wsCurrentISAPIExtensionRqsts": wsCurrentISAPIExtensionRqsts,
       "wsCurrentNonAnonymousUsers": wsCurrentNonAnonymousUsers,
       "wsCurrentBlkdBandwidthBytes": wsCurrentBlkdBandwidthBytes,
       "wsDeleteRqstsPerSec": wsDeleteRqstsPerSec,
       "wsFilesReceivedPerSec": wsFilesReceivedPerSec,
       "wsFilesSentPerSec": wsFilesSentPerSec,
       "wsFilesPerSec": wsFilesPerSec,
       "wsGetRqstsPerSec": wsGetRqstsPerSec,
       "wsHeadRqstsPerSec": wsHeadRqstsPerSec,
       "wsISAPIExtensionRqstsPerSec": wsISAPIExtensionRqstsPerSec,
       "wsLockRqstsPerSec": wsLockRqstsPerSec,
       "wsLockedErrorsPerSec": wsLockedErrorsPerSec,
       "wsLogonAtmpsPerSec": wsLogonAtmpsPerSec,
       "wsMaximumAnonymousUsers": wsMaximumAnonymousUsers,
       "wsMaximumCALCountForSSLConns": wsMaximumCALCountForSSLConns,
       "wsMaximumCALCountForAuthdUsers": wsMaximumCALCountForAuthdUsers,
       "wsMaximumCGIRqsts": wsMaximumCGIRqsts,
       "wsMaximumConns": wsMaximumConns,
       "wsMaximumISAPIExtensionRqsts": wsMaximumISAPIExtensionRqsts,
       "wsMaximumNonAnonymousUsers": wsMaximumNonAnonymousUsers,
       "wsMeasuredAsyncIOBandwidthUsage": wsMeasuredAsyncIOBandwidthUsage,
       "wsMkcolRqstsPerSec": wsMkcolRqstsPerSec,
       "wsMoveRqstsPerSec": wsMoveRqstsPerSec,
       "wsNonAnonymousUsersPerSec": wsNonAnonymousUsersPerSec,
       "wsNotFoundErrorsPerSec": wsNotFoundErrorsPerSec,
       "wsOptionsRqstsPerSec": wsOptionsRqstsPerSec,
       "wsOtherRqstMethodsPerSec": wsOtherRqstMethodsPerSec,
       "wsPostRqstsPerSec": wsPostRqstsPerSec,
       "wsPropfindRqstsPerSec": wsPropfindRqstsPerSec,
       "wsProppatchRqstsPerSec": wsProppatchRqstsPerSec,
       "wsPutRqstsPerSec": wsPutRqstsPerSec,
       "wsSearchRqstsPerSec": wsSearchRqstsPerSec,
       "wsServiceUptime": wsServiceUptime,
       "wsTotalAllowedAsyncIORqsts": wsTotalAllowedAsyncIORqsts,
       "wsTotalAnonymousUsers": wsTotalAnonymousUsers,
       "wsTotalBlkdAsyncIORqsts": wsTotalBlkdAsyncIORqsts,
       "wsTotalBytesReceived": wsTotalBytesReceived,
       "wsTotalBytesSent": wsTotalBytesSent,
       "wsTotalBytesTransfered": wsTotalBytesTransfered,
       "wsTotalCGIRqsts": wsTotalCGIRqsts,
       "wsTotalConnAtmpsAllInstances": wsTotalConnAtmpsAllInstances,
       "wsTotalCopyRqsts": wsTotalCopyRqsts,
       "wsTotalDeleteRqsts": wsTotalDeleteRqsts,
       "wsTotalFilesReceived": wsTotalFilesReceived,
       "wsTotalFilesSent": wsTotalFilesSent,
       "wsTotalFilesTransferred": wsTotalFilesTransferred,
       "wsTotalGetRqsts": wsTotalGetRqsts,
       "wsTotalHeadRqsts": wsTotalHeadRqsts,
       "wsTotalISAPIExtensionRqsts": wsTotalISAPIExtensionRqsts,
       "wsTotalLockRqsts": wsTotalLockRqsts,
       "wsTotalLockedErrors": wsTotalLockedErrors,
       "wsTotalLogonAtmps": wsTotalLogonAtmps,
       "wsTotalMethodRqsts": wsTotalMethodRqsts,
       "wsTotalMethodRqstsPerSec": wsTotalMethodRqstsPerSec,
       "wsTotalMkcolRqsts": wsTotalMkcolRqsts,
       "wsTotalMoveRqsts": wsTotalMoveRqsts,
       "wsTotalNonAnonymousUsers": wsTotalNonAnonymousUsers,
       "wsTotalNotFoundErrors": wsTotalNotFoundErrors,
       "wsTotalOptionsRqsts": wsTotalOptionsRqsts,
       "wsTotalOtherRqstMethods": wsTotalOtherRqstMethods,
       "wsTotalPostRqsts": wsTotalPostRqsts,
       "wsTotalPropfindRqsts": wsTotalPropfindRqsts,
       "wsTotalProppatchRqsts": wsTotalProppatchRqsts,
       "wsTotalPutRqsts": wsTotalPutRqsts,
       "wsTotalRejectedAsyncIORqsts": wsTotalRejectedAsyncIORqsts,
       "wsTotalSearchRqsts": wsTotalSearchRqsts,
       "wsTotalTraceRqsts": wsTotalTraceRqsts,
       "wsTotalUnlockRqsts": wsTotalUnlockRqsts,
       "wsTotalBlkdBandwidthBytes": wsTotalBlkdBandwidthBytes,
       "wsTotalCountFailCALRqstsSSLConns": wsTotalCountFailCALRqstsSSLConns,
       "wsTotalCountFailCALRqstsAuthdUsr": wsTotalCountFailCALRqstsAuthdUsr,
       "wsTraceRqstsPerSec": wsTraceRqstsPerSec,
       "wsUnlockRqstsPerSec": wsUnlockRqstsPerSec,
       "webServiceCache": webServiceCache,
       "wscActiveFlushedEntries": wscActiveFlushedEntries,
       "wscCurrentFileCacheMemoryUsage": wscCurrentFileCacheMemoryUsage,
       "wscCurrentFilesCached": wscCurrentFilesCached,
       "wscCurrentMetadataCached": wscCurrentMetadataCached,
       "wscCurrentURIsCached": wscCurrentURIsCached,
       "wscFileCacheFlushes": wscFileCacheFlushes,
       "wscFileCacheHits": wscFileCacheHits,
       "wscFileCacheHitsPercent": wscFileCacheHitsPercent,
       "wscFileCacheMisses": wscFileCacheMisses,
       "wscKernelCurrentURIsCached": wscKernelCurrentURIsCached,
       "wscKernelTotalFlushedURIs": wscKernelTotalFlushedURIs,
       "wscKernelTotalURIsCached": wscKernelTotalURIsCached,
       "wscKernelURICacheFlushes": wscKernelURICacheFlushes,
       "wscKernelURICacheHits": wscKernelURICacheHits,
       "wscKernelURICacheHitsPercent": wscKernelURICacheHitsPercent,
       "wscKernelURICacheMisses": wscKernelURICacheMisses,
       "wscKernelUriCacheHitsPerSec": wscKernelUriCacheHitsPerSec,
       "wscMaximumFileCacheMemoryUsage": wscMaximumFileCacheMemoryUsage,
       "wscMetadataCacheFlushes": wscMetadataCacheFlushes,
       "wscMetadataCacheHits": wscMetadataCacheHits,
       "wscMetadataCacheHitsPercent": wscMetadataCacheHitsPercent,
       "wscMetadataCacheMisses": wscMetadataCacheMisses,
       "wscTotalFilesCached": wscTotalFilesCached,
       "wscTotalFlushedFiles": wscTotalFlushedFiles,
       "wscTotalFlushedMetadata": wscTotalFlushedMetadata,
       "wscTotalFlushedURIs": wscTotalFlushedURIs,
       "wscTotalMetadataCached": wscTotalMetadataCached,
       "wscTotalURIsCached": wscTotalURIsCached,
       "wscURICacheFlushes": wscURICacheFlushes,
       "wscURICacheHits": wscURICacheHits,
       "wscURICacheHitsPercent": wscURICacheHitsPercent,
       "wscURICacheMisses": wscURICacheMisses,
       "wscOutputCacheCurrentFlushedItem": wscOutputCacheCurrentFlushedItem,
       "wscOutputCacheCurrentHitsPercent": wscOutputCacheCurrentHitsPercent,
       "wscOutputCacheCurrentItems": wscOutputCacheCurrentItems,
       "wscOutputCacheCurrentMemoryUsage": wscOutputCacheCurrentMemoryUsage,
       "wscOutputCacheTotalFlushedItems": wscOutputCacheTotalFlushedItems,
       "wscOutputCacheTotalFlushes": wscOutputCacheTotalFlushes,
       "wscOutputCacheTotalHits": wscOutputCacheTotalHits,
       "wscOutputCacheTotalMisses": wscOutputCacheTotalMisses,
       "windowsMediaServices": windowsMediaServices,
       "wmsCurCacheDownloads": wmsCurCacheDownloads,
       "wmsCurConnectedPlayers": wmsCurConnectedPlayers,
       "wmsCurConnectionQueueLength": wmsCurConnectionQueueLength,
       "wmsCurConnectionRate": wmsCurConnectionRate,
       "wmsCurFileReadRateKbps": wmsCurFileReadRateKbps,
       "wmsCurIncomingBandwidthKbps": wmsCurIncomingBandwidthKbps,
       "wmsCurLateReadRate": wmsCurLateReadRate,
       "wmsCurLateSendRate": wmsCurLateSendRate,
       "wmsCurOutDistAllocBandwidthKbps": wmsCurOutDistAllocBandwidthKbps,
       "wmsCurOutDistConnections": wmsCurOutDistConnections,
       "wmsCurOutDistSendRateKbps": wmsCurOutDistSendRateKbps,
       "wmsCurPlayerAllocBandwidthKbps": wmsCurPlayerAllocBandwidthKbps,
       "wmsCurPlayerSendRateKbps": wmsCurPlayerSendRateKbps,
       "wmsCurStreamErrorRate": wmsCurStreamErrorRate,
       "wmsCurStreamingHTTPPlayers": wmsCurStreamingHTTPPlayers,
       "wmsCurStreamingMMSPlayers": wmsCurStreamingMMSPlayers,
       "wmsCurStreamingPlayers": wmsCurStreamingPlayers,
       "wmsCurStreamingRTSPPlayers": wmsCurStreamingRTSPPlayers,
       "wmsCurUDPResendRequestsRate": wmsCurUDPResendRequestsRate,
       "wmsCurUDPResendsSentRate": wmsCurUDPResendsSentRate,
       "wmsPeakConnectedPlayers": wmsPeakConnectedPlayers,
       "wmsPeakOutDistAllocBandwidthKbps": wmsPeakOutDistAllocBandwidthKbps,
       "wmsPeakOutDistConnections": wmsPeakOutDistConnections,
       "wmsPeakOutDistSendRateKbps": wmsPeakOutDistSendRateKbps,
       "wmsPeakPlayerAllocBandwidthKbps": wmsPeakPlayerAllocBandwidthKbps,
       "wmsPeakPlayerSendRateKbps": wmsPeakPlayerSendRateKbps,
       "wmsPeakStreamingPlayers": wmsPeakStreamingPlayers,
       "wmsTotalAdvertisements": wmsTotalAdvertisements,
       "wmsTotalConnectedPlayers": wmsTotalConnectedPlayers,
       "wmsTotalLateReads": wmsTotalLateReads,
       "wmsTotalLateSends": wmsTotalLateSends,
       "wmsTotalOutDistBytesSent": wmsTotalOutDistBytesSent,
       "wmsTotalOutDistConnections": wmsTotalOutDistConnections,
       "wmsTotalPlayerBytesSent": wmsTotalPlayerBytesSent,
       "wmsTotalServerUptime": wmsTotalServerUptime,
       "wmsTotalStreamDenials": wmsTotalStreamDenials,
       "wmsTotalStreamErrors": wmsTotalStreamErrors,
       "wmsTotalStreamTerminations": wmsTotalStreamTerminations,
       "wmsTotalStreamingPlayers": wmsTotalStreamingPlayers,
       "wmsTotalUDPResendRequests": wmsTotalUDPResendRequests,
       "wmsTotalUDPResendsSent": wmsTotalUDPResendsSent,
       "windowsMediaPublishingPointTable": windowsMediaPublishingPointTable,
       "windowsMediaPublishingPointEntry": windowsMediaPublishingPointEntry,
       "wmppInstance": wmppInstance,
       "wmppCurConnectedPlayers": wmppCurConnectedPlayers,
       "wmppCurFileReadRateKbps": wmppCurFileReadRateKbps,
       "wmppCurLateReadRate": wmppCurLateReadRate,
       "wmppCurOutDistAllocBandwidthKbps": wmppCurOutDistAllocBandwidthKbps,
       "wmppCurOutDistConnections": wmppCurOutDistConnections,
       "wmppCurPlayerAllocBandwidthKbps": wmppCurPlayerAllocBandwidthKbps,
       "wmppCurStreamErrorRate": wmppCurStreamErrorRate,
       "wmppCurStreamingHTTPPlayers": wmppCurStreamingHTTPPlayers,
       "wmppCurStreamingMMSPlayers": wmppCurStreamingMMSPlayers,
       "wmppCurStreamingPlayers": wmppCurStreamingPlayers,
       "wmppCurStreamingRTSPPlayers": wmppCurStreamingRTSPPlayers,
       "wmppPeakConnectedPlayers": wmppPeakConnectedPlayers,
       "wmppPeakOutDistAllocBandwdthKbps": wmppPeakOutDistAllocBandwdthKbps,
       "wmppPeakOutDistConnections": wmppPeakOutDistConnections,
       "wmppPeakPlayerAllocBandwidthKbps": wmppPeakPlayerAllocBandwidthKbps,
       "wmppPeakStreamingPlayers": wmppPeakStreamingPlayers,
       "wmppTotalAdvertisements": wmppTotalAdvertisements,
       "wmppTotalConnectedPlayers": wmppTotalConnectedPlayers,
       "wmppTotalFileBytesRead": wmppTotalFileBytesRead,
       "wmppTotalLateReads": wmppTotalLateReads,
       "wmppTotalOutDistBytesSent": wmppTotalOutDistBytesSent,
       "wmppTotalOutDistConnections": wmppTotalOutDistConnections,
       "wmppTotalPlayerBytesSent": wmppTotalPlayerBytesSent,
       "wmppTotalStreamDenials": wmppTotalStreamDenials,
       "wmppTotalStreamErrors": wmppTotalStreamErrors,
       "wmppTotalStreamTerminations": wmppTotalStreamTerminations,
       "wmppTotalStreamingPlayers": wmppTotalStreamingPlayers,
       "windowsMediaStationService": windowsMediaStationService,
       "wmssControllers": wmssControllers,
       "wmssStations": wmssStations,
       "wmssStreams": wmssStreams,
       "windowsMediaUnicastService": windowsMediaUnicastService,
       "wmusActiveLiveUnicastStreams": wmusActiveLiveUnicastStreams,
       "wmusActiveStreams": wmusActiveStreams,
       "wmusActiveTCPStreams": wmusActiveTCPStreams,
       "wmusActiveUDPStreams": wmusActiveUDPStreams,
       "wmusAggregateReadRate": wmusAggregateReadRate,
       "wmusAggregateSendRate": wmusAggregateSendRate,
       "wmusAllocatedBandwidth": wmusAllocatedBandwidth,
       "wmusAuthenticationRequests": wmusAuthenticationRequests,
       "wmusAuthenticationsDenied": wmusAuthenticationsDenied,
       "wmusAuthorizationRequests": wmusAuthorizationRequests,
       "wmusAuthorizationsRefused": wmusAuthorizationsRefused,
       "wmusConnectedClients": wmusConnectedClients,
       "wmusConnectionRate": wmusConnectionRate,
       "wmusHTTPStreams": wmusHTTPStreams,
       "wmusHTTPStreamsReadingHeader": wmusHTTPStreamsReadingHeader,
       "wmusHTTPStreamsStreamingBody": wmusHTTPStreamsStreamingBody,
       "wmusLateReads": wmusLateReads,
       "wmusPendingConnections": wmusPendingConnections,
       "wmusPluginErrors": wmusPluginErrors,
       "wmusPluginEvents": wmusPluginEvents,
       "wmusSchedulingRate": wmusSchedulingRate,
       "wmusStreamErrors": wmusStreamErrors,
       "wmusStreamTerminations": wmusStreamTerminations,
       "wmusUDPResendRequests": wmusUDPResendRequests,
       "wmusUDPResendsSent": wmusUDPResendsSent,
       "winsServer": winsServer,
       "winsSrvrFailedQueriesPerSec": winsSrvrFailedQueriesPerSec,
       "winsSrvrFailedReleasesPerSec": winsSrvrFailedReleasesPerSec,
       "winsSrvrGroupConflictsPerSec": winsSrvrGroupConflictsPerSec,
       "winsSrvrGroupRegsPerSec": winsSrvrGroupRegsPerSec,
       "winsSrvrGroupRenewalsPerSec": winsSrvrGroupRenewalsPerSec,
       "winsSrvrQueriesPerSec": winsSrvrQueriesPerSec,
       "winsSrvrReleasesPerSec": winsSrvrReleasesPerSec,
       "winsSrvrSuccessfulQueriesPerSec": winsSrvrSuccessfulQueriesPerSec,
       "winsSrvrSuccessfulReleasesPerSec": winsSrvrSuccessfulReleasesPerSec,
       "winsSrvrTotalNumConflictsPerSec": winsSrvrTotalNumConflictsPerSec,
       "winsSrvrTotalNumRegsPerSec": winsSrvrTotalNumRegsPerSec,
       "winsSrvrTotalNumRenewalsPerSec": winsSrvrTotalNumRenewalsPerSec,
       "winsSrvrUniqueConflictsPerSec": winsSrvrUniqueConflictsPerSec,
       "winsSrvrUniqueRegsPerSec": winsSrvrUniqueRegsPerSec,
       "winsSrvrUniqueRenewalsPerSec": winsSrvrUniqueRenewalsPerSec,
       "wmiObjects": wmiObjects,
       "wmiObjectsHiPerfClasses": wmiObjectsHiPerfClasses,
       "wmiObjectsHiPerfValidity": wmiObjectsHiPerfValidity,
       "bitsNetUtilization": bitsNetUtilization,
       "bnuBITSDownloadBlockSizeBytes": bnuBITSDownloadBlockSizeBytes,
       "bnuBITSDownloadResponseIntvlMsec": bnuBITSDownloadResponseIntvlMsec,
       "bnuEstBWAvailRemoteBitsPerSec": bnuEstBWAvailRemoteBitsPerSec,
       "bnuIGDSpeedBitsPerSec": bnuIGDSpeedBitsPerSec,
       "bnuNetcardSpeedBitsPerSec": bnuNetcardSpeedBitsPerSec,
       "bnuPercentIGDFree": bnuPercentIGDFree,
       "bnuPercentNetcardFree": bnuPercentNetcardFree,
       "bnuRemoteServerSpeedBitsPerSec": bnuRemoteServerSpeedBitsPerSec,
       "advDatabaseTable": advDatabaseTable,
       "advDatabaseEntry": advDatabaseEntry,
       "adbInstance": adbInstance,
       "adbDatabaseCachePercentHit": adbDatabaseCachePercentHit,
       "adbDatabaseCacheSize": adbDatabaseCacheSize,
       "adbDatabaseCacheSizeMB": adbDatabaseCacheSizeMB,
       "adbDatabasePageEvictionsPerSec": adbDatabasePageEvictionsPerSec,
       "adbDatabasePageFaultStallsPerSec": adbDatabasePageFaultStallsPerSec,
       "adbDatabasePageFaultsPerSec": adbDatabasePageFaultsPerSec,
       "adbIPerODatabaseReadsAvgLatency": adbIPerODatabaseReadsAvgLatency,
       "adbIPerODatabaseReadsPerSec": adbIPerODatabaseReadsPerSec,
       "adbIPerODatabaseWritesAvgLatency": adbIPerODatabaseWritesAvgLatency,
       "adbIPerODatabaseWritesPerSec": adbIPerODatabaseWritesPerSec,
       "adbIPerOLogReadsPerSec": adbIPerOLogReadsPerSec,
       "adbIPerOLogWritesAverageLatency": adbIPerOLogWritesAverageLatency,
       "adbIPerOLogWritesPerSec": adbIPerOLogWritesPerSec,
       "adbLogBytesWritePerSec": adbLogBytesWritePerSec,
       "adbLogRecordStallsPerSec": adbLogRecordStallsPerSec,
       "adbLogThreadsWaiting": adbLogThreadsWaiting,
       "adbLogWritesPerSec": adbLogWritesPerSec,
       "adbPagesConverted": adbPagesConverted,
       "adbPagesConvertedPerSec": adbPagesConvertedPerSec,
       "adbRecordsConverted": adbRecordsConverted,
       "adbRecordsConvertedPerSec": adbRecordsConvertedPerSec,
       "adbSessionsPercentUsed": adbSessionsPercentUsed,
       "adbSessionsInUse": adbSessionsInUse,
       "adbTableOpenCachePercentHit": adbTableOpenCachePercentHit,
       "adbTableOpenCacheHitsPerSec": adbTableOpenCacheHitsPerSec,
       "adbTableOpenCacheMissesPerSec": adbTableOpenCacheMissesPerSec,
       "adbTableOpensPerSec": adbTableOpensPerSec,
       "adbVersionBucketsAllocated": adbVersionBucketsAllocated,
       "advDatabaseInstancesTable": advDatabaseInstancesTable,
       "advDatabaseInstancesEntry": advDatabaseInstancesEntry,
       "adbiInstance": adbiInstance,
       "adbIODatabaseReadsAverageLatency": adbIODatabaseReadsAverageLatency,
       "adbIODatabaseReadsPerSec": adbIODatabaseReadsPerSec,
       "adbIODatabaseWriteAverageLatency": adbIODatabaseWriteAverageLatency,
       "adbIODatabaseWritesPerSec": adbIODatabaseWritesPerSec,
       "adbIOLogReadsPerSec": adbIOLogReadsPerSec,
       "adbIOLogWritesAverageLatency": adbIOLogWritesAverageLatency,
       "adbIOLogWritesPerSec": adbIOLogWritesPerSec,
       "adbiLogBytesWritePerSec": adbiLogBytesWritePerSec,
       "adbiLogGenCheckpointDepth": adbiLogGenCheckpointDepth,
       "adbiLogGenCheckpointDepthMax": adbiLogGenCheckpointDepthMax,
       "adbiLogGenLossResiliencyDepth": adbiLogGenLossResiliencyDepth,
       "adbiLogRecordStallsPerSec": adbiLogRecordStallsPerSec,
       "adbiLogThreadsWaiting": adbiLogThreadsWaiting,
       "adbiLogWritesPerSec": adbiLogWritesPerSec,
       "adbiPagesConverted": adbiPagesConverted,
       "adbiPagesConvertedPerSec": adbiPagesConvertedPerSec,
       "adbiRecordsConverted": adbiRecordsConverted,
       "adbiRecordsConvertedPerSec": adbiRecordsConvertedPerSec,
       "adbiSessionsPercentUsed": adbiSessionsPercentUsed,
       "adbiSessionsInUse": adbiSessionsInUse,
       "adbiStreamBackupPagesReadPerSec": adbiStreamBackupPagesReadPerSec,
       "adbiTableOpenCachePercentHit": adbiTableOpenCachePercentHit,
       "adbiTableOpenCacheHitsPerSec": adbiTableOpenCacheHitsPerSec,
       "adbiTableOpenCacheMissesPerSec": adbiTableOpenCacheMissesPerSec,
       "adbiTableOpensPerSec": adbiTableOpensPerSec,
       "adbiVersionBucketsAllocated": adbiVersionBucketsAllocated,
       "advDatabaseTableClassesTable": advDatabaseTableClassesTable,
       "advDatabaseTableClassesEntry": advDatabaseTableClassesEntry,
       "adbtcInstance": adbtcInstance,
       "adbtcCacheSizeMB": adbtcCacheSizeMB,
       "genericIKEAndAuthIP": genericIKEAndAuthIP,
       "giaipAuthIPMainModeNegotTime": giaipAuthIPMainModeNegotTime,
       "giaipAuthIPQuickModeNegotTime": giaipAuthIPQuickModeNegotTime,
       "giaipExtendedModeNegotiationTime": giaipExtendedModeNegotiationTime,
       "giaipFailedNegotiations": giaipFailedNegotiations,
       "giaipFailedNegotiationsPerSec": giaipFailedNegotiationsPerSec,
       "giaipIKEMainModeNegotiationTime": giaipIKEMainModeNegotiationTime,
       "giaipIKEQuickModeNegotiationTime": giaipIKEQuickModeNegotiationTime,
       "giaipInvalidPacketReceivedPerSec": giaipInvalidPacketReceivedPerSec,
       "giaipPacketsReceivedPerSec": giaipPacketsReceivedPerSec,
       "giaipSuccessfulNegotiations": giaipSuccessfulNegotiations,
       "giaipSuccessfulNegotiationPerSec": giaipSuccessfulNegotiationPerSec,
       "httpService": httpService,
       "httpServiceCurrentUrisCached": httpServiceCurrentUrisCached,
       "httpServiceTotalFlushedUris": httpServiceTotalFlushedUris,
       "httpServiceTotalUrisCached": httpServiceTotalUrisCached,
       "httpServiceUriCacheFlushes": httpServiceUriCacheFlushes,
       "httpServiceUriCacheHits": httpServiceUriCacheHits,
       "httpServiceUriCacheMisses": httpServiceUriCacheMisses,
       "httpServiceRequestQueuesTable": httpServiceRequestQueuesTable,
       "httpServiceRequestQueuesEntry": httpServiceRequestQueuesEntry,
       "httpsrqInstance": httpsrqInstance,
       "httpsrqArrivalRate": httpsrqArrivalRate,
       "httpsrqCacheHitRate": httpsrqCacheHitRate,
       "httpsrqCurrentQueueSize": httpsrqCurrentQueueSize,
       "httpsrqMaxQueueItemAge": httpsrqMaxQueueItemAge,
       "httpsrqRejectedRequests": httpsrqRejectedRequests,
       "httpsrqRejectionRate": httpsrqRejectionRate,
       "httpServiceUrlGroupsTable": httpServiceUrlGroupsTable,
       "httpServiceUrlGroupsEntry": httpServiceUrlGroupsEntry,
       "httpsugInstance": httpsugInstance,
       "httpsugAllRequests": httpsugAllRequests,
       "httpsugBytesReceivedRate": httpsugBytesReceivedRate,
       "httpsugBytesSentRate": httpsugBytesSentRate,
       "httpsugBytesTransferredRate": httpsugBytesTransferredRate,
       "httpsugConnectionAttempts": httpsugConnectionAttempts,
       "httpsugCurrentConnections": httpsugCurrentConnections,
       "httpsugGetRequests": httpsugGetRequests,
       "httpsugHeadRequests": httpsugHeadRequests,
       "httpsugMaxConnections": httpsugMaxConnections,
       "securityPerProcessStatisticTable": securityPerProcessStatisticTable,
       "securityPerProcessStatisticEntry": securityPerProcessStatisticEntry,
       "sppsInstance": sppsInstance,
       "sppsContextHandles": sppsContextHandles,
       "sppsCredentialHandles": sppsCredentialHandles,
       "securitySystemWideStatistics": securitySystemWideStatistics,
       "sswsActiveSChannelSessionCache": sswsActiveSChannelSessionCache,
       "sswsDigestAuthentications": sswsDigestAuthentications,
       "sswsKDCASRequests": sswsKDCASRequests,
       "sswsKDCTGSRequests": sswsKDCTGSRequests,
       "sswsKerberosAuthentications": sswsKerberosAuthentications,
       "sswsNTLMAuthentications": sswsNTLMAuthentications,
       "sswsSSLClientSideFullHandshakes": sswsSSLClientSideFullHandshakes,
       "sswsSSLClientSideReconHandshakes": sswsSSLClientSideReconHandshakes,
       "sswsSSLServerSideFullHandshakes": sswsSSLServerSideFullHandshakes,
       "sswsSSLServerSideReconHandshakes": sswsSSLServerSideReconHandshakes,
       "sswsSchannelSessionCacheEntries": sswsSchannelSessionCacheEntries,
       "usbTable": usbTable,
       "usbEntry": usbEntry,
       "usbInstance": usbInstance,
       "usbPercentTotalBWUsedInterrupt": usbPercentTotalBWUsedInterrupt,
       "usbPercentTotalBWUseIsoTransfers": usbPercentTotalBWUseIsoTransfers,
       "usbAvgMsLatencyForISOTransfers": usbAvgMsLatencyForISOTransfers,
       "usbAvgBytesPerTransfer": usbAvgBytesPerTransfer,
       "usbBulkBytesPerSec": usbBulkBytesPerSec,
       "usbControlDataBytesPerSec": usbControlDataBytesPerSec,
       "usbControllerPCIInterruptsPerSec": usbControllerPCIInterruptsPerSec,
       "usbControllerWorkSignalsPerSec": usbControllerWorkSignalsPerSec,
       "usbHostControlAsyncCacheFlush": usbHostControlAsyncCacheFlush,
       "usbHostControllerAsyncIdle": usbHostControllerAsyncIdle,
       "usbHostControllerIdle": usbHostControllerIdle,
       "usbHostControllerPerdiodicIdle": usbHostControllerPerdiodicIdle,
       "usbHostControlPeriodicCacheFlush": usbHostControlPeriodicCacheFlush,
       "usbInterruptBytesPerSec": usbInterruptBytesPerSec,
       "usbIsoPacketErrorsPerSec": usbIsoPacketErrorsPerSec,
       "usbIsochronousBytesPerSec": usbIsochronousBytesPerSec,
       "usbTransferErrorsPerSec": usbTransferErrorsPerSec,
       "videoSchedulerTable": videoSchedulerTable,
       "videoSchedulerEntry": videoSchedulerEntry,
       "vschdInstance": vschdInstance,
       "vschdPercentGPUBusy": vschdPercentGPUBusy,
       "vschdDMABufferCompletedPerSec": vschdDMABufferCompletedPerSec,
       "vschdDMABufferPreemptedPerSec": vschdDMABufferPreemptedPerSec,
       "vschdDMABufferSubmittedPerSec": vschdDMABufferSubmittedPerSec,
       "vschdGPUContext": vschdGPUContext,
       "vschdGPUContextSwitchPerSec": vschdGPUContextSwitchPerSec,
       "vschdPresentPerSec": vschdPresentPerSec,
       "wFP": wFP,
       "wFPProviderCount": wFPProviderCount,
       "wFPv4": wFPv4,
       "wFPv4ActiveInConnections": wFPv4ActiveInConnections,
       "wFPv4ActiveOutConnections": wFPv4ActiveOutConnections,
       "wFPv4AllowedClassifiesPerSec": wFPv4AllowedClassifiesPerSec,
       "wFPv4BlockedBinds": wFPv4BlockedBinds,
       "wFPv4InConnections": wFPv4InConnections,
       "wFPv4InConnectionsAllowedPerSec": wFPv4InConnectionsAllowedPerSec,
       "wFPv4InConnectionsBlockedPerSec": wFPv4InConnectionsBlockedPerSec,
       "wFPv4InPacketsDiscardedPerSec": wFPv4InPacketsDiscardedPerSec,
       "wFPv4OutConnections": wFPv4OutConnections,
       "wFPv4OutConnectionsAllowedPerSec": wFPv4OutConnectionsAllowedPerSec,
       "wFPv4OutConnectionsBlockedPerSec": wFPv4OutConnectionsBlockedPerSec,
       "wFPv4OutPacketsDiscardedPerSec": wFPv4OutPacketsDiscardedPerSec,
       "wFPv4PacketsDiscardedPerSec": wFPv4PacketsDiscardedPerSec,
       "wFPv6": wFPv6,
       "wFPv6ActiveInConnections": wFPv6ActiveInConnections,
       "wFPv6ActiveOutConnections": wFPv6ActiveOutConnections,
       "wFPv6AllowedClassifiesPerSec": wFPv6AllowedClassifiesPerSec,
       "wFPv6BlockedBinds": wFPv6BlockedBinds,
       "wFPv6InConnections": wFPv6InConnections,
       "wFPv6InConnectionsAllowedPerSec": wFPv6InConnectionsAllowedPerSec,
       "wFPv6InConnectionsBlockedPerSec": wFPv6InConnectionsBlockedPerSec,
       "wFPv6InPacketsDiscardedPerSec": wFPv6InPacketsDiscardedPerSec,
       "wFPv6OutConnections": wFPv6OutConnections,
       "wFPv6OutConnectionsAllowedPerSec": wFPv6OutConnectionsAllowedPerSec,
       "wFPv6OutConnectionsBlockedPerSec": wFPv6OutConnectionsBlockedPerSec,
       "wFPv6OutPacketsDiscardedPerSec": wFPv6OutPacketsDiscardedPerSec,
       "wFPv6PacketsDiscardedPerSec": wFPv6PacketsDiscardedPerSec,
       "windowsWorkflowFoundationTable": windowsWorkflowFoundationTable,
       "windowsWorkflowFoundationEntry": windowsWorkflowFoundationEntry,
       "wwfInstance": wwfInstance,
       "wwfWorkflowsAborted": wwfWorkflowsAborted,
       "wwfWorkflowsAbortedPerSec": wwfWorkflowsAbortedPerSec,
       "wwfWorkflowsCompleted": wwfWorkflowsCompleted,
       "wwfWorkflowsCompletedPerSec": wwfWorkflowsCompletedPerSec,
       "wwfWorkflowsCreated": wwfWorkflowsCreated,
       "wwfWorkflowsCreatedPerSec": wwfWorkflowsCreatedPerSec,
       "wwfWorkflowsExecuting": wwfWorkflowsExecuting,
       "wwfWorkflowsIdlePerSec": wwfWorkflowsIdlePerSec,
       "wwfWorkflowsInMemory": wwfWorkflowsInMemory,
       "wwfWorkflowsLoaded": wwfWorkflowsLoaded,
       "wwfWorkflowsLoadedPerSec": wwfWorkflowsLoadedPerSec,
       "wwfWorkflowsPending": wwfWorkflowsPending,
       "wwfWorkflowsPersisted": wwfWorkflowsPersisted,
       "wwfWorkflowsPersistedPerSec": wwfWorkflowsPersistedPerSec,
       "wwfWorkflowsRunnable": wwfWorkflowsRunnable,
       "wwfWorkflowsSuspended": wwfWorkflowsSuspended,
       "wwfWorkflowsSuspendedPerSec": wwfWorkflowsSuspendedPerSec,
       "wwfWorkflowsTerminated": wwfWorkflowsTerminated,
       "wwfWorkflowsTerminatedPerSec": wwfWorkflowsTerminatedPerSec,
       "wwfWorkflowsUnloaded": wwfWorkflowsUnloaded,
       "wwfWorkflowsUnloadedPerSec": wwfWorkflowsUnloadedPerSec,
       "iSCSIInitiatorInstanceTable": iSCSIInitiatorInstanceTable,
       "iSCSIInitiatorInstanceEntry": iSCSIInitiatorInstanceEntry,
       "iscsiInstance": iscsiInstance,
       "iscsiSessionCxnTimeoutErrors": iscsiSessionCxnTimeoutErrors,
       "iscsiSessionDigestErrors": iscsiSessionDigestErrors,
       "iscsiSessionFormatErrors": iscsiSessionFormatErrors,
       "iscsiSessionsFailed": iscsiSessionsFailed,
       "dtcBridge3": dtcBridge3,
       "dtcb3AvgParticipantCmtRspnsTime": dtcb3AvgParticipantCmtRspnsTime,
       "dtcb3AvgParticipantPrepRspnsTime": dtcb3AvgParticipantPrepRspnsTime,
       "dtcb3CommitRetryCountPerSec": dtcb3CommitRetryCountPerSec,
       "dtcb3FaultsReceivedCountPerSec": dtcb3FaultsReceivedCountPerSec,
       "dtcb3FaultsSentCountPerSec": dtcb3FaultsSentCountPerSec,
       "dtcb3MessageSendFailuresPerSec": dtcb3MessageSendFailuresPerSec,
       "dtcb3PrepareRetryCountPerSec": dtcb3PrepareRetryCountPerSec,
       "dtcb3PreparedRetryCountPerSec": dtcb3PreparedRetryCountPerSec,
       "dtcb3ReplayRetryCountPerSec": dtcb3ReplayRetryCountPerSec,
       "serviceModelEndpoint3Table": serviceModelEndpoint3Table,
       "serviceModelEndpoint3Entry": serviceModelEndpoint3Entry,
       "sme3Instance": sme3Instance,
       "sme3Calls": sme3Calls,
       "sme3CallsDuration": sme3CallsDuration,
       "sme3CallsFailed": sme3CallsFailed,
       "sme3CallsFailedPerSecond": sme3CallsFailedPerSecond,
       "sme3CallsFaulted": sme3CallsFaulted,
       "sme3CallsFaultedPerSecond": sme3CallsFaultedPerSecond,
       "sme3CallsOutstanding": sme3CallsOutstanding,
       "sme3CallsPerSecond": sme3CallsPerSecond,
       "sme3ReliableMessagesDropped": sme3ReliableMessagesDropped,
       "sme3ReliableMessagesDropPerSec": sme3ReliableMessagesDropPerSec,
       "sme3ReliableSessionsFaulted": sme3ReliableSessionsFaulted,
       "sme3ReliableSessionsFaultPerSec": sme3ReliableSessionsFaultPerSec,
       "sme3CallsNotAuthorized": sme3CallsNotAuthorized,
       "sme3CallsNotAuthorizedPerSecond": sme3CallsNotAuthorizedPerSecond,
       "sme3ValidationAuthFail": sme3ValidationAuthFail,
       "sme3ValidationAuthFailPerSec": sme3ValidationAuthFailPerSec,
       "sme3TransactionsFlowed": sme3TransactionsFlowed,
       "sme3TransactionsFlowedPerSecond": sme3TransactionsFlowedPerSecond,
       "serviceModelOperation3Table": serviceModelOperation3Table,
       "serviceModelOperation3Entry": serviceModelOperation3Entry,
       "smo3Instance": smo3Instance,
       "smo3CallFailedPerSecond": smo3CallFailedPerSecond,
       "smo3Calls": smo3Calls,
       "smo3CallsDuration": smo3CallsDuration,
       "smo3CallsFailed": smo3CallsFailed,
       "smo3CallsFaulted": smo3CallsFaulted,
       "smo3CallsFaultedPerSecond": smo3CallsFaultedPerSecond,
       "smo3CallsOutstanding": smo3CallsOutstanding,
       "smo3CallsPerSecond": smo3CallsPerSecond,
       "smo3CallsNotAuthorized": smo3CallsNotAuthorized,
       "smo3CallsNotAuthorizedPerSec": smo3CallsNotAuthorizedPerSec,
       "smo3ValidationAuthFail": smo3ValidationAuthFail,
       "smo3ValidationAuthFailPerSec": smo3ValidationAuthFailPerSec,
       "smo3TransactionsFlowed": smo3TransactionsFlowed,
       "smo3TransactionsFlowedPerSecond": smo3TransactionsFlowedPerSecond,
       "serviceModelService3Table": serviceModelService3Table,
       "serviceModelService3Entry": serviceModelService3Entry,
       "sms3Instance": sms3Instance,
       "sms3Calls": sms3Calls,
       "sms3CallsDuration": sms3CallsDuration,
       "sms3CallsFailed": sms3CallsFailed,
       "sms3CallsFailedPerSecond": sms3CallsFailedPerSecond,
       "sms3CallsFaulted": sms3CallsFaulted,
       "sms3CallsFaultedPerSecond": sms3CallsFaultedPerSecond,
       "sms3CallsOutstanding": sms3CallsOutstanding,
       "sms3CallsPerSecond": sms3CallsPerSecond,
       "sms3Instances": sms3Instances,
       "sms3InstancesCreatedPerSecond": sms3InstancesCreatedPerSecond,
       "sms3QueuedMessagesDropped": sms3QueuedMessagesDropped,
       "sms3QueuedMessagesDroppedPerSec": sms3QueuedMessagesDroppedPerSec,
       "sms3QueuedMessagesRejected": sms3QueuedMessagesRejected,
       "sms3QueuedMessagesRejectedPerSec": sms3QueuedMessagesRejectedPerSec,
       "sms3QueuedPoisonMessages": sms3QueuedPoisonMessages,
       "sms3QueuedPoisonMessagesPerSec": sms3QueuedPoisonMessagesPerSec,
       "sms3ReliableMessagesDrop": sms3ReliableMessagesDrop,
       "sms3ReliableMessagesDropPerSec": sms3ReliableMessagesDropPerSec,
       "sms3ReliableSessionsFaulted": sms3ReliableSessionsFaulted,
       "sms3ReliableSessionFaultedPerSec": sms3ReliableSessionFaultedPerSec,
       "sms3CallsNotAuthorized": sms3CallsNotAuthorized,
       "sms3CallsNotAuthorizedPerSec": sms3CallsNotAuthorizedPerSec,
       "sms3ValidationAuthFail": sms3ValidationAuthFail,
       "sms3ValidationAuthFailPerSec": sms3ValidationAuthFailPerSec,
       "sms3TransactedOpsAborted": sms3TransactedOpsAborted,
       "sms3TransactedOpsAbortedPerSec": sms3TransactedOpsAbortedPerSec,
       "sms3TransactedOpsCommit": sms3TransactedOpsCommit,
       "sms3TransactedOpsCommitPerSec": sms3TransactedOpsCommitPerSec,
       "sms3TransactedOpsInDoubt": sms3TransactedOpsInDoubt,
       "sms3TransactedOpsInDoubtPerSec": sms3TransactedOpsInDoubtPerSec,
       "sms3TransactionsFlowed": sms3TransactionsFlowed,
       "sms3TransactionsFlowedPerSec": sms3TransactionsFlowedPerSec,
       "svcHost3": svcHost3,
       "smsh3ConnsAcceptedOverNetPipe": smsh3ConnsAcceptedOverNetPipe,
       "smsh3ConnsAcceptedOverNetTcp": smsh3ConnsAcceptedOverNetTcp,
       "smsh3ConnsDispatchedOverNetPipe": smsh3ConnsDispatchedOverNetPipe,
       "smsh3ConnsDispatchedOverNetTcp": smsh3ConnsDispatchedOverNetTcp,
       "smsh3DispatchFailuresOverNetPipe": smsh3DispatchFailuresOverNetPipe,
       "smsh3DispatchFailuresOverNetTcp": smsh3DispatchFailuresOverNetTcp,
       "smsh3ProtocolFailuresOverNetPipe": smsh3ProtocolFailuresOverNetPipe,
       "smsh3ProtocolFailuresOverNetTcp": smsh3ProtocolFailuresOverNetTcp,
       "smsh3RegActiveForNetPipe": smsh3RegActiveForNetPipe,
       "smsh3RegActiveForNetTcp": smsh3RegActiveForNetTcp,
       "smsh3UrisRegisteredForNetPipe": smsh3UrisRegisteredForNetPipe,
       "smsh3UrisRegisteredForNetTcp": smsh3UrisRegisteredForNetTcp,
       "smsh3UrisUnregisteredForNetPipe": smsh3UrisUnregisteredForNetPipe,
       "smsh3UrisUnregisteredForNetTcp": smsh3UrisUnregisteredForNetTcp,
       "aspDotNETv1": aspDotNETv1,
       "adn1ApplicationRestarts": adn1ApplicationRestarts,
       "adn1ApplicationsRunning": adn1ApplicationsRunning,
       "adn1RequestExecutionTime": adn1RequestExecutionTime,
       "adn1RequestWaitTime": adn1RequestWaitTime,
       "adn1RequestsCurrent": adn1RequestsCurrent,
       "adn1RequestsDisconnected": adn1RequestsDisconnected,
       "adn1RequestsQueued": adn1RequestsQueued,
       "adn1RequestsRejected": adn1RequestsRejected,
       "adn1StateServerSessionsAbandoned": adn1StateServerSessionsAbandoned,
       "adn1StateServerSessionsActive": adn1StateServerSessionsActive,
       "adn1StateServerSessionsTimedOut": adn1StateServerSessionsTimedOut,
       "adn1StateServerSessionsTotal": adn1StateServerSessionsTotal,
       "adn1WorkerProcessRestarts": adn1WorkerProcessRestarts,
       "adn1WorkerProcessesRunning": adn1WorkerProcessesRunning,
       "aspDotNETApplicationsV1Table": aspDotNETApplicationsV1Table,
       "aspDotNETApplicationsV1Entry": aspDotNETApplicationsV1Entry,
       "adnAppl1Instance": adnAppl1Instance,
       "adnAppl1AnonymousRequests": adnAppl1AnonymousRequests,
       "adnAppl1AnonymousRequestsPerSec": adnAppl1AnonymousRequestsPerSec,
       "adnAppl1CacheAPIEntries": adnAppl1CacheAPIEntries,
       "adnAppl1CacheAPIHitRatio": adnAppl1CacheAPIHitRatio,
       "adnAppl1CacheAPIHits": adnAppl1CacheAPIHits,
       "adnAppl1CacheAPIMisses": adnAppl1CacheAPIMisses,
       "adnAppl1CacheAPITurnoverRate": adnAppl1CacheAPITurnoverRate,
       "adnAppl1CacheTotalEntries": adnAppl1CacheTotalEntries,
       "adnAppl1CacheTotalHitRatio": adnAppl1CacheTotalHitRatio,
       "adnAppl1CacheTotalHits": adnAppl1CacheTotalHits,
       "adnAppl1CacheTotalMisses": adnAppl1CacheTotalMisses,
       "adnAppl1CacheTotalTurnoverRate": adnAppl1CacheTotalTurnoverRate,
       "adnAppl1CompilationsTotal": adnAppl1CompilationsTotal,
       "adnAppl1DebuggingRequests": adnAppl1DebuggingRequests,
       "adnAppl1ErrorsDuringCompilation": adnAppl1ErrorsDuringCompilation,
       "adnAppl1ErrorsDuringExecution": adnAppl1ErrorsDuringExecution,
       "adnAppl1ErrorDuringPreprocessing": adnAppl1ErrorDuringPreprocessing,
       "adnAppl1ErrorsTotal": adnAppl1ErrorsTotal,
       "adnAppl1ErrorsTotalPerSec": adnAppl1ErrorsTotalPerSec,
       "adnAppl1ErrorUnhandledDuringExec": adnAppl1ErrorUnhandledDuringExec,
       "adnAppl1ErrorUnhandledExecPerSec": adnAppl1ErrorUnhandledExecPerSec,
       "adnAppl1OutputCacheEntries": adnAppl1OutputCacheEntries,
       "adnAppl1OutputCacheHitRatio": adnAppl1OutputCacheHitRatio,
       "adnAppl1OutputCacheHits": adnAppl1OutputCacheHits,
       "adnAppl1OutputCacheMisses": adnAppl1OutputCacheMisses,
       "adnAppl1OutputCacheTurnoverRate": adnAppl1OutputCacheTurnoverRate,
       "adnAppl1PipelineInstanceCount": adnAppl1PipelineInstanceCount,
       "adnAppl1RequestBytesInTotal": adnAppl1RequestBytesInTotal,
       "adnAppl1RequestBytesOutTotal": adnAppl1RequestBytesOutTotal,
       "adnAppl1RequestsExecuting": adnAppl1RequestsExecuting,
       "adnAppl1RequestsFailed": adnAppl1RequestsFailed,
       "adnAppl1RequestsInApplQueue": adnAppl1RequestsInApplQueue,
       "adnAppl1RequestsNotAuthorized": adnAppl1RequestsNotAuthorized,
       "adnAppl1RequestsNotFound": adnAppl1RequestsNotFound,
       "adnAppl1RequestsSucceeded": adnAppl1RequestsSucceeded,
       "adnAppl1RequestsTimedOut": adnAppl1RequestsTimedOut,
       "adnAppl1RequestsTotal": adnAppl1RequestsTotal,
       "adnAppl1RequestsPerSec": adnAppl1RequestsPerSec,
       "adnAppl1SessionSQLSvrConnTotal": adnAppl1SessionSQLSvrConnTotal,
       "adnAppl1SessionStateSvrConnTotal": adnAppl1SessionStateSvrConnTotal,
       "adnAppl1SessionsAbandoned": adnAppl1SessionsAbandoned,
       "adnAppl1SessionsActive": adnAppl1SessionsActive,
       "adnAppl1SessionsTimedOut": adnAppl1SessionsTimedOut,
       "adnAppl1SessionsTotal": adnAppl1SessionsTotal,
       "adnAppl1TransactionsAborted": adnAppl1TransactionsAborted,
       "adnAppl1TransactionsCommitted": adnAppl1TransactionsCommitted,
       "adnAppl1TransactionsPending": adnAppl1TransactionsPending,
       "adnAppl1TransactionsTotal": adnAppl1TransactionsTotal,
       "adnAppl1TransactionsPerSec": adnAppl1TransactionsPerSec,
       "aspDotNETv2": aspDotNETv2,
       "adn2ApplicationRestarts": adn2ApplicationRestarts,
       "adn2ApplicationsRunning": adn2ApplicationsRunning,
       "adn2AuditFailureEventsRaised": adn2AuditFailureEventsRaised,
       "adn2AuditSuccessEventsRaised": adn2AuditSuccessEventsRaised,
       "adn2ErrorEventsRaised": adn2ErrorEventsRaised,
       "adn2InfraErrorEventsRaised": adn2InfraErrorEventsRaised,
       "adn2RequestErrorEventsRaised": adn2RequestErrorEventsRaised,
       "adn2RequestExecutionTime": adn2RequestExecutionTime,
       "adn2RequestWaitTime": adn2RequestWaitTime,
       "adn2RequestsCurrent": adn2RequestsCurrent,
       "adn2RequestsDisconnected": adn2RequestsDisconnected,
       "adn2RequestsQueued": adn2RequestsQueued,
       "adn2RequestsRejected": adn2RequestsRejected,
       "adn2StateServerSessionsAbandoned": adn2StateServerSessionsAbandoned,
       "adn2StateServerSessionsActive": adn2StateServerSessionsActive,
       "adn2StateServerSessionsTimedOut": adn2StateServerSessionsTimedOut,
       "adn2StateServerSessionsTotal": adn2StateServerSessionsTotal,
       "adn2WorkerProcessRestarts": adn2WorkerProcessRestarts,
       "adn2WorkerProcessesRunning": adn2WorkerProcessesRunning,
       "aspDotNETApplicationsV2Table": aspDotNETApplicationsV2Table,
       "aspDotNETApplicationsV2Entry": aspDotNETApplicationsV2Entry,
       "adnAppl2Instance": adnAppl2Instance,
       "adnAppl2AnonymousRequests": adnAppl2AnonymousRequests,
       "adnAppl2AnonymousRequestsPerSec": adnAppl2AnonymousRequestsPerSec,
       "adnAppl2ApplLifetimeEvents": adnAppl2ApplLifetimeEvents,
       "adnAppl2ApplLifetimeEventsPerSec": adnAppl2ApplLifetimeEventsPerSec,
       "adnAppl2AuditFailureEventsRaised": adnAppl2AuditFailureEventsRaised,
       "adnAppl2AuditSuccessEventsRaised": adnAppl2AuditSuccessEventsRaised,
       "adnAppl2CachePctMachMemLimUsed": adnAppl2CachePctMachMemLimUsed,
       "adnAppl2CachePctProcMemLimUsed": adnAppl2CachePctProcMemLimUsed,
       "adnAppl2CacheAPIEntries": adnAppl2CacheAPIEntries,
       "adnAppl2CacheAPIHitRatio": adnAppl2CacheAPIHitRatio,
       "adnAppl2CacheAPIHits": adnAppl2CacheAPIHits,
       "adnAppl2CacheAPIMisses": adnAppl2CacheAPIMisses,
       "adnAppl2CacheAPITrims": adnAppl2CacheAPITrims,
       "adnAppl2CacheAPITurnoverRate": adnAppl2CacheAPITurnoverRate,
       "adnAppl2CacheTotalEntries": adnAppl2CacheTotalEntries,
       "adnAppl2CacheTotalHitRatio": adnAppl2CacheTotalHitRatio,
       "adnAppl2CacheTotalHits": adnAppl2CacheTotalHits,
       "adnAppl2CacheTotalMisses": adnAppl2CacheTotalMisses,
       "adnAppl2CacheTotalTrims": adnAppl2CacheTotalTrims,
       "adnAppl2CacheTotalTurnoverRate": adnAppl2CacheTotalTurnoverRate,
       "adnAppl2CompilationsTotal": adnAppl2CompilationsTotal,
       "adnAppl2DebuggingRequests": adnAppl2DebuggingRequests,
       "adnAppl2ErrorEventsRaised": adnAppl2ErrorEventsRaised,
       "adnAppl2ErrorEventsRaisedPerSec": adnAppl2ErrorEventsRaisedPerSec,
       "adnAppl2ErrorsDuringCompilation": adnAppl2ErrorsDuringCompilation,
       "adnAppl2ErrorsDuringExecution": adnAppl2ErrorsDuringExecution,
       "adnAppl2ErrorDuringPreprocessing": adnAppl2ErrorDuringPreprocessing,
       "adnAppl2ErrorsTotal": adnAppl2ErrorsTotal,
       "adnAppl2ErrorsTotalPerSec": adnAppl2ErrorsTotalPerSec,
       "adnAppl2ErrorUnhandledDuringExec": adnAppl2ErrorUnhandledDuringExec,
       "adnAppl2ErrorUnhandledExecPerSec": adnAppl2ErrorUnhandledExecPerSec,
       "adnAppl2EventsRaised": adnAppl2EventsRaised,
       "adnAppl2EventsRaisedPerSec": adnAppl2EventsRaisedPerSec,
       "adnAppl2FormsAuthenticationFail": adnAppl2FormsAuthenticationFail,
       "adnAppl2FormsAuthenticationSucc": adnAppl2FormsAuthenticationSucc,
       "adnAppl2InfraErrorEventsRaised": adnAppl2InfraErrorEventsRaised,
       "adnAppl2InfraErrEventRaisePerSec": adnAppl2InfraErrEventRaisePerSec,
       "adnAppl2MembershipAuthFailure": adnAppl2MembershipAuthFailure,
       "adnAppl2MembershipAuthSuccess": adnAppl2MembershipAuthSuccess,
       "adnAppl2OutputCacheEntries": adnAppl2OutputCacheEntries,
       "adnAppl2OutputCacheHitRatio": adnAppl2OutputCacheHitRatio,
       "adnAppl2OutputCacheHits": adnAppl2OutputCacheHits,
       "adnAppl2OutputCacheMisses": adnAppl2OutputCacheMisses,
       "adnAppl2OutputCacheTrims": adnAppl2OutputCacheTrims,
       "adnAppl2OutputCacheTurnoverRate": adnAppl2OutputCacheTurnoverRate,
       "adnAppl2PipelineInstanceCount": adnAppl2PipelineInstanceCount,
       "adnAppl2RequestBytesInTotal": adnAppl2RequestBytesInTotal,
       "adnAppl2RequestBytesOutTotal": adnAppl2RequestBytesOutTotal,
       "adnAppl2RequestErrorEventsRaised": adnAppl2RequestErrorEventsRaised,
       "adnAppl2ReqErrorEventRaisePerSec": adnAppl2ReqErrorEventRaisePerSec,
       "adnAppl2RequestEventsRaised": adnAppl2RequestEventsRaised,
       "adnAppl2RequestEventsRaisePerSec": adnAppl2RequestEventsRaisePerSec,
       "adnAppl2RequestExecutionTime": adnAppl2RequestExecutionTime,
       "adnAppl2RequestWaitTime": adnAppl2RequestWaitTime,
       "adnAppl2RequestsDisconnected": adnAppl2RequestsDisconnected,
       "adnAppl2RequestsExecuting": adnAppl2RequestsExecuting,
       "adnAppl2RequestsFailed": adnAppl2RequestsFailed,
       "adnAppl2RequestsInApplQueue": adnAppl2RequestsInApplQueue,
       "adnAppl2RequestsNotAuthorized": adnAppl2RequestsNotAuthorized,
       "adnAppl2RequestsNotFound": adnAppl2RequestsNotFound,
       "adnAppl2RequestsRejected": adnAppl2RequestsRejected,
       "adnAppl2RequestsSucceeded": adnAppl2RequestsSucceeded,
       "adnAppl2RequestsTimedOut": adnAppl2RequestsTimedOut,
       "adnAppl2RequestsTotal": adnAppl2RequestsTotal,
       "adnAppl2RequestsPerSec": adnAppl2RequestsPerSec,
       "adnAppl2SessionSQLSvrConnTotal": adnAppl2SessionSQLSvrConnTotal,
       "adnAppl2SessionStateSvrConnTotal": adnAppl2SessionStateSvrConnTotal,
       "adnAppl2SessionsAbandoned": adnAppl2SessionsAbandoned,
       "adnAppl2SessionsActive": adnAppl2SessionsActive,
       "adnAppl2SessionsTimedOut": adnAppl2SessionsTimedOut,
       "adnAppl2SessionsTotal": adnAppl2SessionsTotal,
       "adnAppl2TransactionsAborted": adnAppl2TransactionsAborted,
       "adnAppl2TransactionsCommitted": adnAppl2TransactionsCommitted,
       "adnAppl2TransactionsPending": adnAppl2TransactionsPending,
       "adnAppl2TransactionsTotal": adnAppl2TransactionsTotal,
       "adnAppl2TransactionsPerSec": adnAppl2TransactionsPerSec,
       "adnAppl2ViewstateMACValidFailure": adnAppl2ViewstateMACValidFailure,
       "aspDotNETStateService": aspDotNETStateService,
       "adnssSessionsAbandoned": adnssSessionsAbandoned,
       "adnssSessionsActive": adnssSessionsActive,
       "adnssSessionsTimedOut": adnssSessionsTimedOut,
       "adnssSessionsTotal": adnssSessionsTotal,
       "authorizationManagerApplTable": authorizationManagerApplTable,
       "authorizationManagerApplEntry": authorizationManagerApplEntry,
       "amaInstance": amaInstance,
       "amaNumberOfScopesLoadedInMemory": amaNumberOfScopesLoadedInMemory,
       "amaTotalNumberOfScopes": amaTotalNumberOfScopes,
       "certificationAuthorityTable": certificationAuthorityTable,
       "certificationAuthorityEntry": certificationAuthorityEntry,
       "caInstance": caInstance,
       "caFailedRequestsPerSec": caFailedRequestsPerSec,
       "caIssuedRequestsPerSec": caIssuedRequestsPerSec,
       "caPendingRequestsPerSec": caPendingRequestsPerSec,
       "caRequestCryptographicSignTimeMs": caRequestCryptographicSignTimeMs,
       "caRequestPolicyModulePrcTimeMs": caRequestPolicyModulePrcTimeMs,
       "caRequestProcessingTimeMs": caRequestProcessingTimeMs,
       "caRequestsPerSec": caRequestsPerSec,
       "caRetrievalProcessingTimeMs": caRetrievalProcessingTimeMs,
       "caRetrievalsPerSec": caRetrievalsPerSec,
       "certificationAuthorityConnTable": certificationAuthorityConnTable,
       "certificationAuthorityConnEntry": certificationAuthorityConnEntry,
       "cacInstance": cacInstance,
       "cacActiveConnections": cacActiveConnections,
       "directoryServicesTable": directoryServicesTable,
       "directoryServicesEntry": directoryServicesEntry,
       "dsInstance": dsInstance,
       "dsABANRPerSec": dsABANRPerSec,
       "dsABBrowsesPerSec": dsABBrowsesPerSec,
       "dsABClientSessions": dsABClientSessions,
       "dsABMatchesPerSec": dsABMatchesPerSec,
       "dsABPropertyReadsPerSec": dsABPropertyReadsPerSec,
       "dsABProxyLookupsPerSec": dsABProxyLookupsPerSec,
       "dsABSearchesPerSec": dsABSearchesPerSec,
       "dsATQEstimatedQueueDelay": dsATQEstimatedQueueDelay,
       "dsATQOutstandingQueuedRequests": dsATQOutstandingQueuedRequests,
       "dsATQRequestLatency": dsATQRequestLatency,
       "dsATQThreadsLDAP": dsATQThreadsLDAP,
       "dsATQThreadsOther": dsATQThreadsOther,
       "dsATQThreadsTotal": dsATQThreadsTotal,
       "dsBaseSearchesPerSec": dsBaseSearchesPerSec,
       "dsDRAHighestUSNCommittedHighPart": dsDRAHighestUSNCommittedHighPart,
       "dsDRAHighestUSNCommittedLowPart": dsDRAHighestUSNCommittedLowPart,
       "dsDRAHighestUSNIssuedHighPart": dsDRAHighestUSNIssuedHighPart,
       "dsDRAHighestUSNIssuedLowPart": dsDRAHighestUSNIssuedLowPart,
       "dsDRAInCmpBtwSiteAftCmpSinceBoot": dsDRAInCmpBtwSiteAftCmpSinceBoot,
       "dsDRAInCmpBtwSitesAfterCmpPerSec": dsDRAInCmpBtwSitesAfterCmpPerSec,
       "dsDRAInCmpBtwSiteBfrCmpSinceBoot": dsDRAInCmpBtwSiteBfrCmpSinceBoot,
       "dsDRAInCmpBtwSitesBeforCmpPerSec": dsDRAInCmpBtwSitesBeforCmpPerSec,
       "dsDRAInNotCmpWithinSiteSinceBoot": dsDRAInNotCmpWithinSiteSinceBoot,
       "dsDRAInNotCmpWithinSitePerSec": dsDRAInNotCmpWithinSitePerSec,
       "dsDRAInBytesTotalSinceBoot": dsDRAInBytesTotalSinceBoot,
       "dsDRAInBytesTotalPerSec": dsDRAInBytesTotalPerSec,
       "dsDRAInFullSyncObjectsRemaining": dsDRAInFullSyncObjectsRemaining,
       "dsDRAInLinkValueUpdRemainInPkt": dsDRAInLinkValueUpdRemainInPkt,
       "dsDRAInObjectUpdRemainInPkt": dsDRAInObjectUpdRemainInPkt,
       "dsDRAInObjectsAppliedPerSec": dsDRAInObjectsAppliedPerSec,
       "dsDRAInObjectsFilteredPerSec": dsDRAInObjectsFilteredPerSec,
       "dsDRAInObjectsPerSec": dsDRAInObjectsPerSec,
       "dsDRAInPropertiesAppliedPerSec": dsDRAInPropertiesAppliedPerSec,
       "dsDRAInPropertiesFilteredPerSec": dsDRAInPropertiesFilteredPerSec,
       "dsDRAInPropertiesTotalPerSec": dsDRAInPropertiesTotalPerSec,
       "dsDRAInTotalUpdRemainInPkt": dsDRAInTotalUpdRemainInPkt,
       "dsDRAInValuesDNsOnlyPerSec": dsDRAInValuesDNsOnlyPerSec,
       "dsDRAInValuesTotalPerSec": dsDRAInValuesTotalPerSec,
       "dsDRAOutCmpBtwSitesAftCmpSinceBt": dsDRAOutCmpBtwSitesAftCmpSinceBt,
       "dsDRAOutCmpBtwSitesAftCmpPerSec": dsDRAOutCmpBtwSitesAftCmpPerSec,
       "dsDRAOutCmpBtwSitesBfrCmpSinceBt": dsDRAOutCmpBtwSitesBfrCmpSinceBt,
       "dsDRAOutCmpBtwSitesBfrCmpPerSec": dsDRAOutCmpBtwSitesBfrCmpPerSec,
       "dsDRAOutNotCmpWithinSiteSinceBt": dsDRAOutNotCmpWithinSiteSinceBt,
       "dsDRAOutNotCmpWithinSitePerSec": dsDRAOutNotCmpWithinSitePerSec,
       "dsDRAOutboundBytesTotalSinceBoot": dsDRAOutboundBytesTotalSinceBoot,
       "dsDRAOutboundBytesTotalPerSec": dsDRAOutboundBytesTotalPerSec,
       "dsDRAOutObjectsFilteredPerSec": dsDRAOutObjectsFilteredPerSec,
       "dsDRAOutboundObjectsPerSec": dsDRAOutboundObjectsPerSec,
       "dsDRAOutboundPropertiesPerSec": dsDRAOutboundPropertiesPerSec,
       "dsDRAOutboundValuesDNsOnlyPerSec": dsDRAOutboundValuesDNsOnlyPerSec,
       "dsDRAOutboundValuesTotalPerSec": dsDRAOutboundValuesTotalPerSec,
       "dsDRAPendingReplicationOperation": dsDRAPendingReplicationOperation,
       "dsDRAPendingReplicationSync": dsDRAPendingReplicationSync,
       "dsDRASyncFailsOnSchemaMismatch": dsDRASyncFailsOnSchemaMismatch,
       "dsDRASyncRequestsMade": dsDRASyncRequestsMade,
       "dsDRASyncRequestsSuccessful": dsDRASyncRequestsSuccessful,
       "dsDRAThreadsGettingNCChanges": dsDRAThreadsGettingNCChanges,
       "dsDRAThreadsNCChgHoldSemaphore": dsDRAThreadsNCChgHoldSemaphore,
       "dsDSPercentReadsOther": dsDSPercentReadsOther,
       "dsDSPercentReadsFromDRA": dsDSPercentReadsFromDRA,
       "dsDSPercentReadsFromKCC": dsDSPercentReadsFromKCC,
       "dsDSPercentReadsFromLSA": dsDSPercentReadsFromLSA,
       "dsDSPercentReadsFromNSPI": dsDSPercentReadsFromNSPI,
       "dsDSPercentReadsFromNTDSAPI": dsDSPercentReadsFromNTDSAPI,
       "dsDSPercentReadsFromSAM": dsDSPercentReadsFromSAM,
       "dsDSPercentSearchesOther": dsDSPercentSearchesOther,
       "dsDSPercentSearchesFromDRA": dsDSPercentSearchesFromDRA,
       "dsDSPercentSearchesFromKCC": dsDSPercentSearchesFromKCC,
       "dsDSPercentSearchesFromLDAP": dsDSPercentSearchesFromLDAP,
       "dsDSPercentSearchesFromLSA": dsDSPercentSearchesFromLSA,
       "dsDSPercentSearchesFromNSPI": dsDSPercentSearchesFromNSPI,
       "dsDSPercentSearchesFromNTDSAPI": dsDSPercentSearchesFromNTDSAPI,
       "dsDSPercentSearchesFromSAM": dsDSPercentSearchesFromSAM,
       "dsDSPercentWritesOther": dsDSPercentWritesOther,
       "dsDSPercentWritesFromDRA": dsDSPercentWritesFromDRA,
       "dsDSPercentWritesFromKCC": dsDSPercentWritesFromKCC,
       "dsDSPercentWritesFromLDAP": dsDSPercentWritesFromLDAP,
       "dsDSPercentWritesFromLSA": dsDSPercentWritesFromLSA,
       "dsDSPercentWritesFromNSPI": dsDSPercentWritesFromNSPI,
       "dsDSPercentWritesFromNTDSAPI": dsDSPercentWritesFromNTDSAPI,
       "dsDSPercentWritesFromSAM": dsDSPercentWritesFromSAM,
       "dsDSClientBindsPerSec": dsDSClientBindsPerSec,
       "dsDSClientNameTranslationsPerSec": dsDSClientNameTranslationsPerSec,
       "dsDSDirectoryReadsPerSec": dsDSDirectoryReadsPerSec,
       "dsDSDirectorySearchesPerSec": dsDSDirectorySearchesPerSec,
       "dsDSDirectoryWritesPerSec": dsDSDirectoryWritesPerSec,
       "dsDSMonitorListSize": dsDSMonitorListSize,
       "dsDSNameCacheHitRate": dsDSNameCacheHitRate,
       "dsDSNotifyQueueSize": dsDSNotifyQueueSize,
       "dsDSSearchSubOperationsPerSec": dsDSSearchSubOperationsPerSec,
       "dsDSSecurityDescriptorPropEvents": dsDSSecurityDescriptorPropEvents,
       "dsDSSecurityDescPropAvgExclTime": dsDSSecurityDescPropAvgExclTime,
       "dsDSSecurityDescPropRuntimeQueue": dsDSSecurityDescPropRuntimeQueue,
       "dsDSSecurityDescSubOpsPerSec": dsDSSecurityDescSubOpsPerSec,
       "dsDSServerBindsPerSec": dsDSServerBindsPerSec,
       "dsDSServerNameTranslationsPerSec": dsDSServerNameTranslationsPerSec,
       "dsDSThreadsInUse": dsDSThreadsInUse,
       "dsDatabaseAddsPerSec": dsDatabaseAddsPerSec,
       "dsDatabaseDeletesPerSec": dsDatabaseDeletesPerSec,
       "dsDatabaseModifysPerSec": dsDatabaseModifysPerSec,
       "dsDigestBindsPerSec": dsDigestBindsPerSec,
       "dsExternalBindsPerSec": dsExternalBindsPerSec,
       "dsFastBindsPerSec": dsFastBindsPerSec,
       "dsLDAPActiveThreads": dsLDAPActiveThreads,
       "dsLDAPBindTime": dsLDAPBindTime,
       "dsLDAPClientSessions": dsLDAPClientSessions,
       "dsLDAPClosedConnectionsPerSec": dsLDAPClosedConnectionsPerSec,
       "dsLDAPNewConnectionsPerSec": dsLDAPNewConnectionsPerSec,
       "dsLDAPNewSSLConnectionsPerSec": dsLDAPNewSSLConnectionsPerSec,
       "dsLDAPSearchesPerSec": dsLDAPSearchesPerSec,
       "dsLDAPSuccessfulBindsPerSec": dsLDAPSuccessfulBindsPerSec,
       "dsLDAPUDPOperationsPerSec": dsLDAPUDPOperationsPerSec,
       "dsLDAPWritesPerSec": dsLDAPWritesPerSec,
       "dsLinkValuesCleanedPerSec": dsLinkValuesCleanedPerSec,
       "dsNTLMBindsPerSec": dsNTLMBindsPerSec,
       "dsNegotiatedBindsPerSec": dsNegotiatedBindsPerSec,
       "dsOnelevelSearchesPerSec": dsOnelevelSearchesPerSec,
       "dsPhantomsCleanedPerSec": dsPhantomsCleanedPerSec,
       "dsPhantomsVisitedPerSec": dsPhantomsVisitedPerSec,
       "dsSAMAccountGroupEvalLatency": dsSAMAccountGroupEvalLatency,
       "dsSAMDisplayInfoQueriesPerSec": dsSAMDisplayInfoQueriesPerSec,
       "dsSAMDomainLocalGrpMemEvalPerSec": dsSAMDomainLocalGrpMemEvalPerSec,
       "dsSAMEnumerationsPerSec": dsSAMEnumerationsPerSec,
       "dsSAMGCEvaluationsPerSec": dsSAMGCEvaluationsPerSec,
       "dsSAMGlobalGroupMembEvalPerSec": dsSAMGlobalGroupMembEvalPerSec,
       "dsSAMMachineCreationAttpsPerSec": dsSAMMachineCreationAttpsPerSec,
       "dsSAMMembershipChangesPerSec": dsSAMMembershipChangesPerSec,
       "dsSAMNonTransitiveMembEvalPerSec": dsSAMNonTransitiveMembEvalPerSec,
       "dsSAMPasswordChangesPerSec": dsSAMPasswordChangesPerSec,
       "dsSAMResourceGroupEvalLatency": dsSAMResourceGroupEvalLatency,
       "dsSAMSuccCmpCrtPerSecInclAllRqst": dsSAMSuccCmpCrtPerSecInclAllRqst,
       "dsSAMSuccessUserCreationsPerSec": dsSAMSuccessUserCreationsPerSec,
       "dsSAMTransitiveMemberEvalPerSec": dsSAMTransitiveMemberEvalPerSec,
       "dsSAMUniversalGrpMembEvalPerSec": dsSAMUniversalGrpMembEvalPerSec,
       "dsSAMUserCreationAttemptsPerSec": dsSAMUserCreationAttemptsPerSec,
       "dsSimpleBindsPerSec": dsSimpleBindsPerSec,
       "dsSubtreeSearchesPerSec": dsSubtreeSearchesPerSec,
       "dsTombstonesGarbageCollPerSec": dsTombstonesGarbageCollPerSec,
       "dsTombstonesVisitedPerSec": dsTombstonesVisitedPerSec,
       "dfsReplicatedFoldersTable": dfsReplicatedFoldersTable,
       "dfsReplicatedFoldersEntry": dfsReplicatedFoldersEntry,
       "dfsrfInstance": dfsrfInstance,
       "dfsrfBandwidthSavings": dfsrfBandwidthSavings,
       "dfsrfCompressedSizeOfFilesRcvd": dfsrfCompressedSizeOfFilesRcvd,
       "dfsrfConflictBytesCleanedUp": dfsrfConflictBytesCleanedUp,
       "dfsrfConflictBytesGenerated": dfsrfConflictBytesGenerated,
       "dfsrfConflictFilesCleanedUp": dfsrfConflictFilesCleanedUp,
       "dfsrfConflictFilesGenerated": dfsrfConflictFilesGenerated,
       "dfsrfConflictFolderCleanupsComp": dfsrfConflictFolderCleanupsComp,
       "dfsrfConflictSpaceInUse": dfsrfConflictSpaceInUse,
       "dfsrfDeletedBytesCleanedUp": dfsrfDeletedBytesCleanedUp,
       "dfsrfDeletedBytesGenerated": dfsrfDeletedBytesGenerated,
       "dfsrfDeletedFilesCleanedUp": dfsrfDeletedFilesCleanedUp,
       "dfsrfDeletedFilesGenerated": dfsrfDeletedFilesGenerated,
       "dfsrfDeletedSpaceInUse": dfsrfDeletedSpaceInUse,
       "dfsrfFileInstallsRetried": dfsrfFileInstallsRetried,
       "dfsrfFileInstallsSucceeded": dfsrfFileInstallsSucceeded,
       "dfsrfRDCBytesReceived": dfsrfRDCBytesReceived,
       "dfsrfRDCCompressSizeOfFilesRcvd": dfsrfRDCCompressSizeOfFilesRcvd,
       "dfsrfRDCNumberOfFilesReceived": dfsrfRDCNumberOfFilesReceived,
       "dfsrfRDCSizeOfFilesReceived": dfsrfRDCSizeOfFilesReceived,
       "dfsrfSizeOfFilesReceived": dfsrfSizeOfFilesReceived,
       "dfsrfStagingBytesCleanedUp": dfsrfStagingBytesCleanedUp,
       "dfsrfStagingBytesGenerated": dfsrfStagingBytesGenerated,
       "dfsrfStagingFilesCleanedUp": dfsrfStagingFilesCleanedUp,
       "dfsrfStagingFilesGenerated": dfsrfStagingFilesGenerated,
       "dfsrfStagingSpaceInUse": dfsrfStagingSpaceInUse,
       "dfsrfTotalFilesReceived": dfsrfTotalFilesReceived,
       "dfsrfUpdatesDropped": dfsrfUpdatesDropped,
       "dfsReplicationConnectionsTable": dfsReplicationConnectionsTable,
       "dfsReplicationConnectionsEntry": dfsReplicationConnectionsEntry,
       "dfsrcInstance": dfsrcInstance,
       "dfsrcBandwidthSavings": dfsrcBandwidthSavings,
       "dfsrcBytesReceivedPerSecond": dfsrcBytesReceivedPerSecond,
       "dfsrcCompressedSizeOfFilesRcvd": dfsrcCompressedSizeOfFilesRcvd,
       "dfsrcRDCBytesReceived": dfsrcRDCBytesReceived,
       "dfsrcRDCCompressSizeOfFilesRcvd": dfsrcRDCCompressSizeOfFilesRcvd,
       "dfsrcRDCNumberOfFilesReceived": dfsrcRDCNumberOfFilesReceived,
       "dfsrcRDCSizeOfFilesReceived": dfsrcRDCSizeOfFilesReceived,
       "dfsrcSizeOfFilesReceived": dfsrcSizeOfFilesReceived,
       "dfsrcTotalBytesReceived": dfsrcTotalBytesReceived,
       "dfsrcTotalFilesReceived": dfsrcTotalFilesReceived,
       "dfsReplicationServiceVolumeTable": dfsReplicationServiceVolumeTable,
       "dfsReplicationServiceVolumeEntry": dfsReplicationServiceVolumeEntry,
       "dfsrsvInstance": dfsrsvInstance,
       "dfsrsvDatabaseCommits": dfsrsvDatabaseCommits,
       "dfsrsvDatabaseLookups": dfsrsvDatabaseLookups,
       "dfsrsvUSNJournalRecordsAccepted": dfsrsvUSNJournalRecordsAccepted,
       "dfsrsvUSNJournalRecordsRead": dfsrsvUSNJournalRecordsRead,
       "dfsrsvUSNJournalUnreadPercentage": dfsrsvUSNJournalUnreadPercentage,
       "faxService": faxService,
       "faxsBytesReceived": faxsBytesReceived,
       "faxsBytesSent": faxsBytesSent,
       "faxsFailedFaxesTransmissions": faxsFailedFaxesTransmissions,
       "faxsFailedOutgoingConnections": faxsFailedOutgoingConnections,
       "faxsFailedReceptions": faxsFailedReceptions,
       "faxsFaxesSent": faxsFaxesSent,
       "faxsMinutesReceiving": faxsMinutesReceiving,
       "faxsMinutesSending": faxsMinutesSending,
       "faxsPagesSent": faxsPagesSent,
       "faxsReceivedFaxes": faxsReceivedFaxes,
       "faxsReceivedPages": faxsReceivedPages,
       "faxsTotalBytes": faxsTotalBytes,
       "faxsTotalFaxesSentAndReceived": faxsTotalFaxesSentAndReceived,
       "faxsTotalMinutesSendAndReceive": faxsTotalMinutesSendAndReceive,
       "faxsTotalPages": faxsTotalPages,
       "hcapCounters": hcapCounters,
       "hcapcAverageNPSValidationTime": hcapcAverageNPSValidationTime,
       "hcapcLastNPSValidationTime": hcapcLastNPSValidationTime,
       "hcapcPostureValidFailureResponse": hcapcPostureValidFailureResponse,
       "hcapcPostureValidationRequests": hcapcPostureValidationRequests,
       "hcapcPostureValidSuccessResponse": hcapcPostureValidSuccessResponse,
       "hcapcVersionNegotiationRequests": hcapcVersionNegotiationRequests,
       "hcapcVersionNegotiationResponses": hcapcVersionNegotiationResponses,
       "hraStatistics": hraStatistics,
       "hrasCertificationTimeMs": hrasCertificationTimeMs,
       "hrasHCEPFailedRequests": hrasHCEPFailedRequests,
       "hrasHCEPRequests": hrasHCEPRequests,
       "hrasHCEPSuccessfulRequests": hrasHCEPSuccessfulRequests,
       "hrasNPSValidationTimeMs": hrasNPSValidationTimeMs,
       "hrasNPSSuccessfulRequests": hrasNPSSuccessfulRequests,
       "hrasSuccessCertificationRequests": hrasSuccessCertificationRequests,
       "hrasSumOfTimePerRequestMs": hrasSumOfTimePerRequestMs,
       "ipSecAuthIPv4": ipSecAuthIPv4,
       "ipsa4ActiveExtendedModeSAs": ipsa4ActiveExtendedModeSAs,
       "ipsa4ActiveMainModeSAs": ipsa4ActiveMainModeSAs,
       "ipsa4ActiveQuickModeSAs": ipsa4ActiveQuickModeSAs,
       "ipsa4ExtendedModeNegotiations": ipsa4ExtendedModeNegotiations,
       "ipsa4ExtendModeNegotiationPerSec": ipsa4ExtendModeNegotiationPerSec,
       "ipsa4ExtModeSAsThatUsedImperson": ipsa4ExtModeSAsThatUsedImperson,
       "ipsa4FailExtendedModeNegotiation": ipsa4FailExtendedModeNegotiation,
       "ipsa4FailExtendModeNegotPerSec": ipsa4FailExtendModeNegotPerSec,
       "ipsa4FailedMainModeNegotiations": ipsa4FailedMainModeNegotiations,
       "ipsa4FailedMainModeNegPerSec": ipsa4FailedMainModeNegPerSec,
       "ipsa4FailedQuickModeNegotiations": ipsa4FailedQuickModeNegotiations,
       "ipsa4FailQuickModeNegPerSec": ipsa4FailQuickModeNegPerSec,
       "ipsa4MainModeNegRqstReceived": ipsa4MainModeNegRqstReceived,
       "ipsa4MainModeNegRequestRcvPerSec": ipsa4MainModeNegRequestRcvPerSec,
       "ipsa4MainModeNegotiations": ipsa4MainModeNegotiations,
       "ipsa4MainModeNegotiationsPerSec": ipsa4MainModeNegotiationsPerSec,
       "ipsa4MainModeSAsUseImpersonation": ipsa4MainModeSAsUseImpersonation,
       "ipsa4MainModeSAUseImpersonPerSec": ipsa4MainModeSAUseImpersonPerSec,
       "ipsa4PendExtendModeNegotiations": ipsa4PendExtendModeNegotiations,
       "ipsa4PendingMainModeNegotiations": ipsa4PendingMainModeNegotiations,
       "ipsa4PendingQuickModeNegotiation": ipsa4PendingQuickModeNegotiation,
       "ipsa4QuickModeNegotiations": ipsa4QuickModeNegotiations,
       "ipsa4QuickModeNegotiationsPerSec": ipsa4QuickModeNegotiationsPerSec,
       "ipsa4SuccExtendedModeNegotiation": ipsa4SuccExtendedModeNegotiation,
       "ipsa4SuccExtendModeNegotPerSec": ipsa4SuccExtendModeNegotPerSec,
       "ipsa4SuccessMainModeNegotiations": ipsa4SuccessMainModeNegotiations,
       "ipsa4SuccessMainModeNegotPerSec": ipsa4SuccessMainModeNegotPerSec,
       "ipsa4SuccessQuickModeNegotiation": ipsa4SuccessQuickModeNegotiation,
       "ipsa4SuccessQuickModeNegotPerSec": ipsa4SuccessQuickModeNegotPerSec,
       "ipSecAuthIPv6": ipSecAuthIPv6,
       "ipsa6ActiveExtendedModeSAs": ipsa6ActiveExtendedModeSAs,
       "ipsa6ActiveMainModeSAs": ipsa6ActiveMainModeSAs,
       "ipsa6ActiveQuickModeSAs": ipsa6ActiveQuickModeSAs,
       "ipsa6ExtendedModeNegotiations": ipsa6ExtendedModeNegotiations,
       "ipsa6ExtendModeNegotiationPerSec": ipsa6ExtendModeNegotiationPerSec,
       "ipsa6ExtendedModeSAsUsedImperson": ipsa6ExtendedModeSAsUsedImperson,
       "ipsa6FailExtendModeNegotiations": ipsa6FailExtendModeNegotiations,
       "ipsa6FailedExtendModeNegotPerSec": ipsa6FailedExtendModeNegotPerSec,
       "ipsa6FailedMainModeNegotiations": ipsa6FailedMainModeNegotiations,
       "ipsa6FailMainModeNegotPerSec": ipsa6FailMainModeNegotPerSec,
       "ipsa6FailedQuickModeNegotiations": ipsa6FailedQuickModeNegotiations,
       "ipsa6FailQuickModeNegotPerSec": ipsa6FailQuickModeNegotPerSec,
       "ipsa6MainModeNegotiationRqstRcvd": ipsa6MainModeNegotiationRqstRcvd,
       "ipsa6MainModeNegotRqstRcvdPerSec": ipsa6MainModeNegotRqstRcvdPerSec,
       "ipsa6MainModeNegotiations": ipsa6MainModeNegotiations,
       "ipsa6MainModeNegotiationsPerSec": ipsa6MainModeNegotiationsPerSec,
       "ipsa6MainModeSAsUseImpersonation": ipsa6MainModeSAsUseImpersonation,
       "ipsa6MainModeSAUseImpersonPerSec": ipsa6MainModeSAUseImpersonPerSec,
       "ipsa6PendExtendModeNegotiations": ipsa6PendExtendModeNegotiations,
       "ipsa6PendingMainModeNegotiations": ipsa6PendingMainModeNegotiations,
       "ipsa6PendingQuickModeNegotiation": ipsa6PendingQuickModeNegotiation,
       "ipsa6QuickModeNegotiations": ipsa6QuickModeNegotiations,
       "ipsa6QuickModeNegotiationsPerSec": ipsa6QuickModeNegotiationsPerSec,
       "ipsa6SuccExtendedModeNegotiation": ipsa6SuccExtendedModeNegotiation,
       "ipsa6SuccExtendModeNegotPerSec": ipsa6SuccExtendModeNegotPerSec,
       "ipsa6SuccessMainModeNegotiations": ipsa6SuccessMainModeNegotiations,
       "ipsa6SuccessMainModeNegotPerSec": ipsa6SuccessMainModeNegotPerSec,
       "ipsa6SuccessQuickModeNegotiation": ipsa6SuccessQuickModeNegotiation,
       "ipsa6SuccessQuickModeNegotPerSec": ipsa6SuccessQuickModeNegotPerSec,
       "ipSecDriver": ipSecDriver,
       "ipsdActiveSecurityAssociations": ipsdActiveSecurityAssociations,
       "ipsdByteRcvInTransportModePerSec": ipsdByteRcvInTransportModePerSec,
       "ipsdBytesRcvdInTunnelModePerSec": ipsdBytesRcvdInTunnelModePerSec,
       "ipsdByteSntInTransportModePerSec": ipsdByteSntInTransportModePerSec,
       "ipsdBytesSentInTunnelModePerSec": ipsdBytesSentInTunnelModePerSec,
       "ipsdIncorrectSPIPackets": ipsdIncorrectSPIPackets,
       "ipsdOffloadedBytesReceivedPerSec": ipsdOffloadedBytesReceivedPerSec,
       "ipsdOffloadedBytesSentPerSec": ipsdOffloadedBytesSentPerSec,
       "ipsdOffloadedSecurityAssociation": ipsdOffloadedSecurityAssociation,
       "ipsdPacketsNotAuthenticated": ipsdPacketsNotAuthenticated,
       "ipsdPacketsNotDecrypted": ipsdPacketsNotDecrypted,
       "ipsdPacketsReceivedOverWrongSA": ipsdPacketsReceivedOverWrongSA,
       "ipsdPacketsFailedESPValidation": ipsdPacketsFailedESPValidation,
       "ipsdPacketsFailedReplayDetection": ipsdPacketsFailedReplayDetection,
       "ipsdPacketsFailUDPESPValidation": ipsdPacketsFailUDPESPValidation,
       "ipsdPendingSecurityAssociations": ipsdPendingSecurityAssociations,
       "ipsdPlaintextPacketsReceived": ipsdPlaintextPacketsReceived,
       "ipsdSARekeys": ipsdSARekeys,
       "ipsdSecurityAssociationsAdded": ipsdSecurityAssociationsAdded,
       "ipSecIKEv4": ipSecIKEv4,
       "ipsi4ActiveMainModeSAs": ipsi4ActiveMainModeSAs,
       "ipsi4ActiveQuickModeSAs": ipsi4ActiveQuickModeSAs,
       "ipsi4FailedMainModeNegotiations": ipsi4FailedMainModeNegotiations,
       "ipsi4FailedMainModeNegotPerSec": ipsi4FailedMainModeNegotPerSec,
       "ipsi4FailedQuickModeNegotiations": ipsi4FailedQuickModeNegotiations,
       "ipsi4FailedQuickModeNegotPerSec": ipsi4FailedQuickModeNegotPerSec,
       "ipsi4MainModeNegotiationRqstRcvd": ipsi4MainModeNegotiationRqstRcvd,
       "ipsi4MainModeNegotRqstRcvdPerSec": ipsi4MainModeNegotRqstRcvdPerSec,
       "ipsi4MainModeNegotiations": ipsi4MainModeNegotiations,
       "ipsi4MainModeNegotiationsPerSec": ipsi4MainModeNegotiationsPerSec,
       "ipsi4PendingMainModeNegotiations": ipsi4PendingMainModeNegotiations,
       "ipsi4PendingQuickModeNegotiation": ipsi4PendingQuickModeNegotiation,
       "ipsi4QuickModeNegotiations": ipsi4QuickModeNegotiations,
       "ipsi4QuickModeNegotiationsPerSec": ipsi4QuickModeNegotiationsPerSec,
       "ipsi4SuccessMainModeNegotiations": ipsi4SuccessMainModeNegotiations,
       "ipsi4SuccessMainModeNegotPerSec": ipsi4SuccessMainModeNegotPerSec,
       "ipsi4SuccessQuickModeNegotiation": ipsi4SuccessQuickModeNegotiation,
       "ipsi4SuccessQuickModeNegotPerSec": ipsi4SuccessQuickModeNegotPerSec,
       "ipSecIKEv6": ipSecIKEv6,
       "ipsi6ActiveMainModeSAs": ipsi6ActiveMainModeSAs,
       "ipsi6ActiveQuickModeSAs": ipsi6ActiveQuickModeSAs,
       "ipsi6FailedMainModeNegotiations": ipsi6FailedMainModeNegotiations,
       "ipsi6FailedMainModeNegotPerSec": ipsi6FailedMainModeNegotPerSec,
       "ipsi6FailedQuickModeNegotiations": ipsi6FailedQuickModeNegotiations,
       "ipsi6FailedQuickModeNegotPerSec": ipsi6FailedQuickModeNegotPerSec,
       "ipsi6MainModeNegotiationRqstRcvd": ipsi6MainModeNegotiationRqstRcvd,
       "ipsi6MainModeNegotRqstRcvdPerSec": ipsi6MainModeNegotRqstRcvdPerSec,
       "ipsi6MainModeNegotiations": ipsi6MainModeNegotiations,
       "ipsi6MainModeNegotiationsPerSec": ipsi6MainModeNegotiationsPerSec,
       "ipsi6PendingMainModeNegotiations": ipsi6PendingMainModeNegotiations,
       "ipsi6PendingQuickModeNegotiation": ipsi6PendingQuickModeNegotiation,
       "ipsi6QuickModeNegotiations": ipsi6QuickModeNegotiations,
       "ipsi6QuickModeNegotiationsPerSec": ipsi6QuickModeNegotiationsPerSec,
       "ipsi6SuccessMainModeNegotiations": ipsi6SuccessMainModeNegotiations,
       "ipsi6SuccessMainModeNegotPerSec": ipsi6SuccessMainModeNegotPerSec,
       "ipsi6SuccessfulQuickModeNegot": ipsi6SuccessfulQuickModeNegot,
       "ipsi6SuccessQuickModeNegotPerSec": ipsi6SuccessQuickModeNegotPerSec,
       "msmqIncomingHTTPTraffic": msmqIncomingHTTPTraffic,
       "msmqitIncomingHTTPBytes": msmqitIncomingHTTPBytes,
       "msmqitIncomingHTTPBytesPerSec": msmqitIncomingHTTPBytesPerSec,
       "msmqitIncomingHTTPMessages": msmqitIncomingHTTPMessages,
       "msmqitIncomingHTTPMessagesPerSec": msmqitIncomingHTTPMessagesPerSec,
       "msmqInMulticastSessionTable": msmqInMulticastSessionTable,
       "msmqInMulticastSessionEntry": msmqInMulticastSessionEntry,
       "msmqimsInstance": msmqimsInstance,
       "msmqimsIncomingMulticastBytes": msmqimsIncomingMulticastBytes,
       "msmqimsInMulticastBytesPerSec": msmqimsInMulticastBytesPerSec,
       "msmqimsIncomingMulticastMessages": msmqimsIncomingMulticastMessages,
       "msmqimsInMulticastMessagesPerSec": msmqimsInMulticastMessagesPerSec,
       "msmqOutgoingHTTPSessionTable": msmqOutgoingHTTPSessionTable,
       "msmqOutgoingHTTPSessionEntry": msmqOutgoingHTTPSessionEntry,
       "msmqosInstance": msmqosInstance,
       "msmqosOutgoingHTTPBytes": msmqosOutgoingHTTPBytes,
       "msmqosOutgoingHTTPBytesPerSec": msmqosOutgoingHTTPBytesPerSec,
       "msmqosOutgoingHTTPMessages": msmqosOutgoingHTTPMessages,
       "msmqosOutgoingHTTPMessagesPerSec": msmqosOutgoingHTTPMessagesPerSec,
       "msmqOutMulticastSessionTable": msmqOutMulticastSessionTable,
       "msmqOutMulticastSessionEntry": msmqOutMulticastSessionEntry,
       "msmqomsInstance": msmqomsInstance,
       "msmqomsOutgoingMulticastBytes": msmqomsOutgoingMulticastBytes,
       "msmqomsOutMulticastBytesPerSec": msmqomsOutMulticastBytesPerSec,
       "msmqomsOutgoingMulticastMessages": msmqomsOutgoingMulticastMessages,
       "msmqomsOutMulticastMessagePerSec": msmqomsOutMulticastMessagePerSec,
       "msmqSessionTable": msmqSessionTable,
       "msmqSessionEntry": msmqSessionEntry,
       "msmqsInstance": msmqsInstance,
       "msmqsIncomingBytes": msmqsIncomingBytes,
       "msmqsIncomingBytesPerSec": msmqsIncomingBytesPerSec,
       "msmqsIncomingMessages": msmqsIncomingMessages,
       "msmqsIncomingMessagesPerSec": msmqsIncomingMessagesPerSec,
       "msmqsOutgoingBytes": msmqsOutgoingBytes,
       "msmqsOutgoingBytesPerSec": msmqsOutgoingBytesPerSec,
       "msmqsOutgoingMessages": msmqsOutgoingMessages,
       "msmqsOutgoingMessagesPerSec": msmqsOutgoingMessagesPerSec,
       "netlogonTable": netlogonTable,
       "netlogonEntry": netlogonEntry,
       "netlogonInstance": netlogonInstance,
       "netlogonAverageSemaphoreHoldTime": netlogonAverageSemaphoreHoldTime,
       "netlogonSemaphoreAcquires": netlogonSemaphoreAcquires,
       "netlogonSemaphoreHolders": netlogonSemaphoreHolders,
       "netlogonSemaphoreTimeouts": netlogonSemaphoreTimeouts,
       "netlogonSemaphoreWaiters": netlogonSemaphoreWaiters,
       "npsAccountingClientsTable": npsAccountingClientsTable,
       "npsAccountingClientsEntry": npsAccountingClientsEntry,
       "npsaccInstance": npsaccInstance,
       "npsaccAccountingRequests": npsaccAccountingRequests,
       "npsaccAccountingRequestsPerSec": npsaccAccountingRequestsPerSec,
       "npsaccAccountingResponses": npsaccAccountingResponses,
       "npsaccAccountingResponsesPerSec": npsaccAccountingResponsesPerSec,
       "npsaccBadAuthenticators": npsaccBadAuthenticators,
       "npsaccBadAuthenticatorsPerSec": npsaccBadAuthenticatorsPerSec,
       "npsaccDroppedPackets": npsaccDroppedPackets,
       "npsaccDroppedPacketsPerSec": npsaccDroppedPacketsPerSec,
       "npsaccDupAccountingRequests": npsaccDupAccountingRequests,
       "npsaccDupAccountingRequestPerSec": npsaccDupAccountingRequestPerSec,
       "npsaccMalformedPackets": npsaccMalformedPackets,
       "npsaccMalformedPacketsPerSec": npsaccMalformedPacketsPerSec,
       "npsaccNoRecord": npsaccNoRecord,
       "npsaccNoRecordPerSec": npsaccNoRecordPerSec,
       "npsaccPacketsReceived": npsaccPacketsReceived,
       "npsaccPacketsReceivedPerSec": npsaccPacketsReceivedPerSec,
       "npsaccPacketsSent": npsaccPacketsSent,
       "npsaccPacketsSentPerSec": npsaccPacketsSentPerSec,
       "npsaccUnknownType": npsaccUnknownType,
       "npsaccUnknownTypePerSec": npsaccUnknownTypePerSec,
       "npsAccountingProxy": npsAccountingProxy,
       "npsacpAccountingRequests": npsacpAccountingRequests,
       "npsacpAccountingRequestsPerSec": npsacpAccountingRequestsPerSec,
       "npsacpAccountingResponses": npsacpAccountingResponses,
       "npsacpAccountingResponsesPerSec": npsacpAccountingResponsesPerSec,
       "npsacpBadAuthenticators": npsacpBadAuthenticators,
       "npsacpBadAuthenticatorsPerSec": npsacpBadAuthenticatorsPerSec,
       "npsacpDroppedPackets": npsacpDroppedPackets,
       "npsacpDroppedPacketsPerSec": npsacpDroppedPacketsPerSec,
       "npsacpInvalidAddresses": npsacpInvalidAddresses,
       "npsacpInvalidAddressesPerSec": npsacpInvalidAddressesPerSec,
       "npsacpMalformedPackets": npsacpMalformedPackets,
       "npsacpMalformedPacketsPerSec": npsacpMalformedPacketsPerSec,
       "npsacpPacketsReceived": npsacpPacketsReceived,
       "npsacpPacketsReceivedPerSec": npsacpPacketsReceivedPerSec,
       "npsacpPendingRequests": npsacpPendingRequests,
       "npsacpRequestTimeouts": npsacpRequestTimeouts,
       "npsacpRequestTimeoutsPerSec": npsacpRequestTimeoutsPerSec,
       "npsacpRetransmissions": npsacpRetransmissions,
       "npsacpRetransmissionsPerSec": npsacpRetransmissionsPerSec,
       "npsacpUnknownType": npsacpUnknownType,
       "npsacpUnknownTypePerSec": npsacpUnknownTypePerSec,
       "npsAccountingServer": npsAccountingServer,
       "npsacsAccountingRequests": npsacsAccountingRequests,
       "npsacsAccountingRequestsPerSec": npsacsAccountingRequestsPerSec,
       "npsacsAccountingResponses": npsacsAccountingResponses,
       "npsacsAccountingResponsesPerSec": npsacsAccountingResponsesPerSec,
       "npsacsBadAuthenticators": npsacsBadAuthenticators,
       "npsacsBadAuthenticatorsPerSec": npsacsBadAuthenticatorsPerSec,
       "npsacsDroppedPackets": npsacsDroppedPackets,
       "npsacsDroppedPacketsPerSec": npsacsDroppedPacketsPerSec,
       "npsacsDupAccountingRequests": npsacsDupAccountingRequests,
       "npsacsDupAccountingRequestPerSec": npsacsDupAccountingRequestPerSec,
       "npsacsInvalidRequests": npsacsInvalidRequests,
       "npsacsInvalidRequestsPerSec": npsacsInvalidRequestsPerSec,
       "npsacsMalformedPackets": npsacsMalformedPackets,
       "npsacsMalformedPacketsPerSec": npsacsMalformedPacketsPerSec,
       "npsacsNoRecord": npsacsNoRecord,
       "npsacsNoRecordPerSec": npsacsNoRecordPerSec,
       "npsacsPacketsReceived": npsacsPacketsReceived,
       "npsacsPacketsReceivedPerSec": npsacsPacketsReceivedPerSec,
       "npsacsPacketsSent": npsacsPacketsSent,
       "npsacsPacketsSentPerSec": npsacsPacketsSentPerSec,
       "npsacsServerResetTime": npsacsServerResetTime,
       "npsacsServerUpTime": npsacsServerUpTime,
       "npsacsUnknownType": npsacsUnknownType,
       "npsacsUnknownTypePerSec": npsacsUnknownTypePerSec,
       "npsAuthenticationClientsTable": npsAuthenticationClientsTable,
       "npsAuthenticationClientsEntry": npsAuthenticationClientsEntry,
       "npsaucInstance": npsaucInstance,
       "npsaucAccessAccepts": npsaucAccessAccepts,
       "npsaucAccessAcceptsPerSec": npsaucAccessAcceptsPerSec,
       "npsaucAccessChallenges": npsaucAccessChallenges,
       "npsaucAccessChallengesPerSec": npsaucAccessChallengesPerSec,
       "npsaucAccessRejects": npsaucAccessRejects,
       "npsaucAccessRejectsPerSec": npsaucAccessRejectsPerSec,
       "npsaucAccessRequests": npsaucAccessRequests,
       "npsaucAccessRequestsPerSec": npsaucAccessRequestsPerSec,
       "npsaucBadAuthenticators": npsaucBadAuthenticators,
       "npsaucBadAuthenticatorsPerSec": npsaucBadAuthenticatorsPerSec,
       "npsaucDroppedPackets": npsaucDroppedPackets,
       "npsaucDroppedPacketsPerSec": npsaucDroppedPacketsPerSec,
       "npsaucDuplicateAccessRequests": npsaucDuplicateAccessRequests,
       "npsaucDupAccessRequestsPerSec": npsaucDupAccessRequestsPerSec,
       "npsaucFullAccessDecisions": npsaucFullAccessDecisions,
       "npsaucFullAccessDecisionsPerSec": npsaucFullAccessDecisionsPerSec,
       "npsaucMalformedPackets": npsaucMalformedPackets,
       "npsaucMalformedPacketsPerSec": npsaucMalformedPacketsPerSec,
       "npsaucPacketsReceived": npsaucPacketsReceived,
       "npsaucPacketsReceivedPerSec": npsaucPacketsReceivedPerSec,
       "npsaucPacketsSent": npsaucPacketsSent,
       "npsaucPacketsSentPerSec": npsaucPacketsSentPerSec,
       "npsaucProbationDecisions": npsaucProbationDecisions,
       "npsaucProbationDecisionsPerSec": npsaucProbationDecisionsPerSec,
       "npsaucQuarantineDecisions": npsaucQuarantineDecisions,
       "npsaucQuarantineDecisionsPerSec": npsaucQuarantineDecisionsPerSec,
       "npsaucUnknownType": npsaucUnknownType,
       "npsaucUnknownTypePerSec": npsaucUnknownTypePerSec,
       "npsAuthenticationProxy": npsAuthenticationProxy,
       "npsaupAccessAccepts": npsaupAccessAccepts,
       "npsaupAccessAcceptsPerSec": npsaupAccessAcceptsPerSec,
       "npsaupAccessChallenges": npsaupAccessChallenges,
       "npsaupAccessChallengesPerSec": npsaupAccessChallengesPerSec,
       "npsaupAccessRejects": npsaupAccessRejects,
       "npsaupAccessRejectsPerSec": npsaupAccessRejectsPerSec,
       "npsaupAccessRequests": npsaupAccessRequests,
       "npsaupAccessRequestsPerSec": npsaupAccessRequestsPerSec,
       "npsaupBadAuthenticators": npsaupBadAuthenticators,
       "npsaupBadAuthenticatorsPerSec": npsaupBadAuthenticatorsPerSec,
       "npsaupDroppedPackets": npsaupDroppedPackets,
       "npsaupDroppedPacketsPerSec": npsaupDroppedPacketsPerSec,
       "npsaupFullAccessDecisions": npsaupFullAccessDecisions,
       "npsaupFullAccessDecisionsPerSec": npsaupFullAccessDecisionsPerSec,
       "npsaupInvalidAddresses": npsaupInvalidAddresses,
       "npsaupInvalidAddressesPerSec": npsaupInvalidAddressesPerSec,
       "npsaupMalformedPackets": npsaupMalformedPackets,
       "npsaupMalformedPacketsPerSec": npsaupMalformedPacketsPerSec,
       "npsaupPacketsReceived": npsaupPacketsReceived,
       "npsaupPacketsReceivedPerSec": npsaupPacketsReceivedPerSec,
       "npsaupPendingRequests": npsaupPendingRequests,
       "npsaupProbationDecisions": npsaupProbationDecisions,
       "npsaupProbationDecisionsPerSec": npsaupProbationDecisionsPerSec,
       "npsaupQuarantineDecisions": npsaupQuarantineDecisions,
       "npsaupQuarantineDecisionsPerSec": npsaupQuarantineDecisionsPerSec,
       "npsaupRequestTimeouts": npsaupRequestTimeouts,
       "npsaupRequestTimeoutsPerSec": npsaupRequestTimeoutsPerSec,
       "npsaupRetransmissions": npsaupRetransmissions,
       "npsaupRetransmissionsPerSec": npsaupRetransmissionsPerSec,
       "npsaupUnknownType": npsaupUnknownType,
       "npsaupUnknownTypePerSec": npsaupUnknownTypePerSec,
       "npsAuthenticationServer": npsAuthenticationServer,
       "npsausAccessAccepts": npsausAccessAccepts,
       "npsausAccessAcceptsPerSec": npsausAccessAcceptsPerSec,
       "npsausAccessChallenges": npsausAccessChallenges,
       "npsausAccessChallengesPerSec": npsausAccessChallengesPerSec,
       "npsausAccessRejects": npsausAccessRejects,
       "npsausAccessRejectsPerSec": npsausAccessRejectsPerSec,
       "npsausAccessRequests": npsausAccessRequests,
       "npsausAccessRequestsPerSec": npsausAccessRequestsPerSec,
       "npsausBadAuthenticators": npsausBadAuthenticators,
       "npsausBadAuthenticatorsPerSec": npsausBadAuthenticatorsPerSec,
       "npsausDroppedPackets": npsausDroppedPackets,
       "npsausDroppedPacketsPerSec": npsausDroppedPacketsPerSec,
       "npsausDuplicateAccessRequests": npsausDuplicateAccessRequests,
       "npsausDupAccessRequestsPerSec": npsausDupAccessRequestsPerSec,
       "npsausFullAccessDecisions": npsausFullAccessDecisions,
       "npsausFullAccessDecisionsPerSec": npsausFullAccessDecisionsPerSec,
       "npsausInvalidRequests": npsausInvalidRequests,
       "npsausInvalidRequestsPerSec": npsausInvalidRequestsPerSec,
       "npsausMalformedPackets": npsausMalformedPackets,
       "npsausMalformedPacketsPerSec": npsausMalformedPacketsPerSec,
       "npsausPacketsReceived": npsausPacketsReceived,
       "npsausPacketsReceivedPerSec": npsausPacketsReceivedPerSec,
       "npsausPacketsSent": npsausPacketsSent,
       "npsausPacketsSentPerSec": npsausPacketsSentPerSec,
       "npsausProbationDecisions": npsausProbationDecisions,
       "npsausProbationDecisionsPerSec": npsausProbationDecisionsPerSec,
       "npsausQuarantineDecisions": npsausQuarantineDecisions,
       "npsausQuarantineDecisionsPerSec": npsausQuarantineDecisionsPerSec,
       "npsausServerResetTime": npsausServerResetTime,
       "npsausServerUpTime": npsausServerUpTime,
       "npsausUnknownType": npsausUnknownType,
       "npsausUnknownTypePerSec": npsausUnknownTypePerSec,
       "npsPolicyEngine": npsPolicyEngine,
       "npspeLastRoundTripTime": npspeLastRoundTripTime,
       "npspeMatchedRemoteAccessPolicies": npspeMatchedRemoteAccessPolicies,
       "npspeMatchRemoteAccPolicyPerSec": npspeMatchRemoteAccPolicyPerSec,
       "npspePendingRequests": npspePendingRequests,
       "npsRemoteAccountingServersTable": npsRemoteAccountingServersTable,
       "npsRemoteAccountingServersEntry": npsRemoteAccountingServersEntry,
       "npsracsInstance": npsracsInstance,
       "npsracsAccountingRequests": npsracsAccountingRequests,
       "npsracsAccountingRequestsPerSec": npsracsAccountingRequestsPerSec,
       "npsracsAccountingResponses": npsracsAccountingResponses,
       "npsracsAccountingResponsesPerSec": npsracsAccountingResponsesPerSec,
       "npsracsBadAuthenticators": npsracsBadAuthenticators,
       "npsracsBadAuthenticatorsPerSec": npsracsBadAuthenticatorsPerSec,
       "npsracsDroppedPackets": npsracsDroppedPackets,
       "npsracsDroppedPacketsPerSec": npsracsDroppedPacketsPerSec,
       "npsracsLastRoundTripTime": npsracsLastRoundTripTime,
       "npsracsMalformedPackets": npsracsMalformedPackets,
       "npsracsMalformedPacketsPerSec": npsracsMalformedPacketsPerSec,
       "npsracsPacketsReceived": npsracsPacketsReceived,
       "npsracsPacketsReceivedPerSec": npsracsPacketsReceivedPerSec,
       "npsracsPendingRequests": npsracsPendingRequests,
       "npsracsPortNumber": npsracsPortNumber,
       "npsracsRequestTimeouts": npsracsRequestTimeouts,
       "npsracsRequestTimeoutsPerSec": npsracsRequestTimeoutsPerSec,
       "npsracsRetransmissions": npsracsRetransmissions,
       "npsracsRetransmissionsPerSec": npsracsRetransmissionsPerSec,
       "npsracsUnknownType": npsracsUnknownType,
       "npsracsUnknownTypePerSec": npsracsUnknownTypePerSec,
       "npsRemoteAuthServersTable": npsRemoteAuthServersTable,
       "npsRemoteAuthServersEntry": npsRemoteAuthServersEntry,
       "npsrausInstance": npsrausInstance,
       "npsrausAccessAccepts": npsrausAccessAccepts,
       "npsrausAccessAcceptsPerSec": npsrausAccessAcceptsPerSec,
       "npsrausAccessChallenges": npsrausAccessChallenges,
       "npsrausAccessChallengesPerSec": npsrausAccessChallengesPerSec,
       "npsrausAccessRejects": npsrausAccessRejects,
       "npsrausAccessRejectsPerSec": npsrausAccessRejectsPerSec,
       "npsrausAccessRequests": npsrausAccessRequests,
       "npsrausAccessRequestsPerSec": npsrausAccessRequestsPerSec,
       "npsrausBadAuthenticators": npsrausBadAuthenticators,
       "npsrausBadAuthenticatorsPerSec": npsrausBadAuthenticatorsPerSec,
       "npsrausDroppedPackets": npsrausDroppedPackets,
       "npsrausDroppedPacketsPerSec": npsrausDroppedPacketsPerSec,
       "npsrausFullAccessDecisions": npsrausFullAccessDecisions,
       "npsrausFullAccessDecisionsPerSec": npsrausFullAccessDecisionsPerSec,
       "npsrausLastRoundTripTime": npsrausLastRoundTripTime,
       "npsrausMalformedPackets": npsrausMalformedPackets,
       "npsrausMalformedPacketsPerSec": npsrausMalformedPacketsPerSec,
       "npsrausPacketsReceived": npsrausPacketsReceived,
       "npsrausPacketsReceivedPerSec": npsrausPacketsReceivedPerSec,
       "npsrausPendingRequests": npsrausPendingRequests,
       "npsrausPortNumber": npsrausPortNumber,
       "npsrausProbationDecisions": npsrausProbationDecisions,
       "npsrausProbationDecisionsPerSec": npsrausProbationDecisionsPerSec,
       "npsrausQuarantineDecisions": npsrausQuarantineDecisions,
       "npsrausQuarantineDecisionsPerSec": npsrausQuarantineDecisionsPerSec,
       "npsrausRequestTimeouts": npsrausRequestTimeouts,
       "npsrausRequestTimeoutsPerSec": npsrausRequestTimeoutsPerSec,
       "npsrausRetransmissions": npsrausRetransmissions,
       "npsrausRetransmissionsPerSec": npsrausRetransmissionsPerSec,
       "npsrausUnknownType": npsrausUnknownType,
       "npsrausUnknownTypePerSec": npsrausUnknownTypePerSec,
       "npsSystemHealthValidatorsTable": npsSystemHealthValidatorsTable,
       "npsSystemHealthValidatorsEntry": npsSystemHealthValidatorsEntry,
       "npsshvInstance": npsshvInstance,
       "npsshvShvClientCommFailures": npsshvShvClientCommFailures,
       "npsshvShvClientCommFailurePerSec": npsshvShvClientCommFailurePerSec,
       "npsshvShvClientComponentFailures": npsshvShvClientComponentFailures,
       "npsshvShvClientComponentFailSec": npsshvShvClientComponentFailSec,
       "npsshvShvCompliances": npsshvShvCompliances,
       "npsshvShvCompliancesPerSec": npsshvShvCompliancesPerSec,
       "npsshvShvLastRoundTripTime": npsshvShvLastRoundTripTime,
       "npsshvShvNonCompliances": npsshvShvNonCompliances,
       "npsshvShvNonCompliancesPerSec": npsshvShvNonCompliancesPerSec,
       "npsshvShvNoneFailures": npsshvShvNoneFailures,
       "npsshvShvNoneFailuresPerSec": npsshvShvNoneFailuresPerSec,
       "npsshvShvOtherFailures": npsshvShvOtherFailures,
       "npsshvShvOtherFailuresPerSec": npsshvShvOtherFailuresPerSec,
       "npsshvShvServerCommFailures": npsshvShvServerCommFailures,
       "npsshvShvServerCommnFailPerSec": npsshvShvServerCommnFailPerSec,
       "npsshvShvServerComponentFailures": npsshvShvServerComponentFailures,
       "npsshvShvServerCompFailurePerSec": npsshvShvServerCompFailurePerSec,
       "ocspServerConnectionsTable": ocspServerConnectionsTable,
       "ocspServerConnectionsEntry": ocspServerConnectionsEntry,
       "ocspscInstance": ocspscInstance,
       "ocspscActiveConnections": ocspscActiveConnections,
       "rpcPerHTTPProxy": rpcPerHTTPProxy,
       "rpcpAttemptLoadBalBrkRqstsPerSec": rpcpAttemptLoadBalBrkRqstsPerSec,
       "rpcpAttemptLoadBalDecisionPerSec": rpcpAttemptLoadBalDecisionPerSec,
       "rpcpCurNumInRPCOverHTTPConn": rpcpCurNumInRPCOverHTTPConn,
       "rpcpCurrentNumberOfUniqueUsers": rpcpCurrentNumberOfUniqueUsers,
       "rpcpFailLoadBalBrokerRqstsPerSec": rpcpFailLoadBalBrokerRqstsPerSec,
       "rpcpFailLoadBalDecisionsPerSec": rpcpFailLoadBalDecisionsPerSec,
       "rpcpNumBackEndConnAttemptsPerSec": rpcpNumBackEndConnAttemptsPerSec,
       "rpcpNumFailBackEndConnAttmPerSec": rpcpNumFailBackEndConnAttmPerSec,
       "rpcpRPCPerHTTPRequestsPerSecond": rpcpRPCPerHTTPRequestsPerSecond,
       "rpcpTotalInBandwidthBackEndSrvrs": rpcpTotalInBandwidthBackEndSrvrs,
       "rpcpTotalOutBandwidthBackEndSrvr": rpcpTotalOutBandwidthBackEndSrvr,
       "rpcPerHTTPProxyPerServerTable": rpcPerHTTPProxyPerServerTable,
       "rpcPerHTTPProxyPerServerEntry": rpcPerHTTPProxyPerServerEntry,
       "rpcpsInstance": rpcpsInstance,
       "rpcpsCurrentNumberOfBackendConns": rpcpsCurrentNumberOfBackendConns,
       "searchGatherer": searchGatherer,
       "sgActiveQueueLength": sgActiveQueueLength,
       "sgAdminClients": sgAdminClients,
       "sgAllNotificationsReceived": sgAllNotificationsReceived,
       "sgDelayedDocuments": sgDelayedDocuments,
       "sgDocumentEntries": sgDocumentEntries,
       "sgDocumentsDelayedRetry": sgDocumentsDelayedRetry,
       "sgDocumentsFiltered": sgDocumentsFiltered,
       "sgDocumentsFilteredRate": sgDocumentsFilteredRate,
       "sgDocumentsSuccessfullyFiltered": sgDocumentsSuccessfullyFiltered,
       "sgDocumentsSuccessFilteredRate": sgDocumentsSuccessFilteredRate,
       "sgExtNotificationsRate": sgExtNotificationsRate,
       "sgExtNotificationsReceived": sgExtNotificationsReceived,
       "sgFilterObjects": sgFilterObjects,
       "sgFilterProcessCreated": sgFilterProcessCreated,
       "sgFilterProcesses": sgFilterProcesses,
       "sgFilterProcessesMax": sgFilterProcessesMax,
       "sgFilteringThreads": sgFilteringThreads,
       "sgHeartbeats": sgHeartbeats,
       "sgHeartbeatsRate": sgHeartbeatsRate,
       "sgIdleThreads": sgIdleThreads,
       "sgNotificationSources": sgNotificationSources,
       "sgNotificationsRate": sgNotificationsRate,
       "sgPerformanceLevel": sgPerformanceLevel,
       "sgReasonToBackOff": sgReasonToBackOff,
       "sgServerObjects": sgServerObjects,
       "sgServerObjectsCreated": sgServerObjectsCreated,
       "sgServersCurrentlyUnavailable": sgServersCurrentlyUnavailable,
       "sgServersUnavailable": sgServersUnavailable,
       "sgStemmersCached": sgStemmersCached,
       "sgSystemIOTrafficRate": sgSystemIOTrafficRate,
       "sgThreadsAccessingNetwork": sgThreadsAccessingNetwork,
       "sgThreadsInPlugIns": sgThreadsInPlugIns,
       "sgThreadsBlockedDueToBackOff": sgThreadsBlockedDueToBackOff,
       "sgTimeOuts": sgTimeOuts,
       "sgWordBreakersCached": sgWordBreakersCached,
       "searchGathererProjectsTable": searchGathererProjectsTable,
       "searchGathererProjectsEntry": searchGathererProjectsEntry,
       "sgpInstance": sgpInstance,
       "sgpAccessedFileRate": sgpAccessedFileRate,
       "sgpAccessedFiles": sgpAccessedFiles,
       "sgpAdaptiveCrawlErrors": sgpAdaptiveCrawlErrors,
       "sgpChangedDocuments": sgpChangedDocuments,
       "sgpCrawlsInProgress": sgpCrawlsInProgress,
       "sgpDelayedDocuments": sgpDelayedDocuments,
       "sgpDocumentAddRate": sgpDocumentAddRate,
       "sgpDocumentAdditions": sgpDocumentAdditions,
       "sgpDocumentDeleteRate": sgpDocumentDeleteRate,
       "sgpDocumentDeletes": sgpDocumentDeletes,
       "sgpDocumentModifies": sgpDocumentModifies,
       "sgpDocumentModifiesRate": sgpDocumentModifiesRate,
       "sgpDocumentMoveAndRenameRate": sgpDocumentMoveAndRenameRate,
       "sgpDocumentMovesPerRenames": sgpDocumentMovesPerRenames,
       "sgpDocumentsInProgress": sgpDocumentsInProgress,
       "sgpDocumentsOnHold": sgpDocumentsOnHold,
       "sgpErrorRate": sgpErrorRate,
       "sgpFileErrors": sgpFileErrors,
       "sgpFileErrorsRate": sgpFileErrorsRate,
       "sgpFilteredOffice": sgpFilteredOffice,
       "sgpFilteredOfficeRate": sgpFilteredOfficeRate,
       "sgpFilteredText": sgpFilteredText,
       "sgpFilteredTextRate": sgpFilteredTextRate,
       "sgpFilteringDocuments": sgpFilteringDocuments,
       "sgpGathererPausedFlag": sgpGathererPausedFlag,
       "sgpHistoryRecoveryProgress": sgpHistoryRecoveryProgress,
       "sgpIncrementalCrawls": sgpIncrementalCrawls,
       "sgpIteratingHistInProgressFlag": sgpIteratingHistInProgressFlag,
       "sgpNotModified": sgpNotModified,
       "sgpProcessedDocuments": sgpProcessedDocuments,
       "sgpProcessedDocumentsRate": sgpProcessedDocumentsRate,
       "sgpRecoveryInProgressFlag": sgpRecoveryInProgressFlag,
       "sgpRetries": sgpRetries,
       "sgpRetriesRate": sgpRetriesRate,
       "sgpStartedDocuments": sgpStartedDocuments,
       "sgpStatusError": sgpStatusError,
       "sgpStatusSuccess": sgpStatusSuccess,
       "sgpSuccessRate": sgpSuccessRate,
       "sgpURLsInHistory": sgpURLsInHistory,
       "sgpUniqueDocuments": sgpUniqueDocuments,
       "sgpWaitingDocuments": sgpWaitingDocuments,
       "searchIndexerTable": searchIndexerTable,
       "searchIndexerEntry": searchIndexerEntry,
       "siInstance": siInstance,
       "siActiveConnections": siActiveConnections,
       "siCleanWidSets": siCleanWidSets,
       "siDirtyWidSets": siDirtyWidSets,
       "siDocumentsFiltered": siDocumentsFiltered,
       "siIndexSize": siIndexSize,
       "siL0IndexesWordlists": siL0IndexesWordlists,
       "siL0MergeFlushCount": siL0MergeFlushCount,
       "siL0MergeFlushSpeedAverage": siL0MergeFlushSpeedAverage,
       "siL0MergeFlushSpeedLast": siL0MergeFlushSpeedLast,
       "siL0MergesFlushesNow": siL0MergesFlushesNow,
       "siL1MergeCount": siL1MergeCount,
       "siL1MergeSpeedAverage": siL1MergeSpeedAverage,
       "siL1MergeSpeedLast": siL1MergeSpeedLast,
       "siL1MergesNow": siL1MergesNow,
       "siL2MergeCount": siL2MergeCount,
       "siL2MergeSpeedAverage": siL2MergeSpeedAverage,
       "siL2MergeSpeedLast": siL2MergeSpeedLast,
       "siL2MergesNow": siL2MergesNow,
       "siL3MergeCount": siL3MergeCount,
       "siL3MergeSpeedAverage": siL3MergeSpeedAverage,
       "siL3MergeSpeedLast": siL3MergeSpeedLast,
       "siL3MergesNow": siL3MergesNow,
       "siL4MergeCount": siL4MergeCount,
       "siL4MergeSpeedAverage": siL4MergeSpeedAverage,
       "siL4MergeSpeedLast": siL4MergeSpeedLast,
       "siL4MergesNow": siL4MergesNow,
       "siL5MergeCount": siL5MergeCount,
       "siL5MergeSpeedAverage": siL5MergeSpeedAverage,
       "siL5MergeSpeedLast": siL5MergeSpeedLast,
       "siL5MergesNow": siL5MergesNow,
       "siL6MergeCount": siL6MergeCount,
       "siL6MergeSpeedAverage": siL6MergeSpeedAverage,
       "siL6MergeSpeedLast": siL6MergeSpeedLast,
       "siL6MergesNow": siL6MergesNow,
       "siL7MergeCount": siL7MergeCount,
       "siL7MergeSpeedAverage": siL7MergeSpeedAverage,
       "siL7MergeSpeedLast": siL7MergeSpeedLast,
       "siL7MergesNow": siL7MergesNow,
       "siL8MergeCount": siL8MergeCount,
       "siL8MergeSpeedAverage": siL8MergeSpeedAverage,
       "siL8MergeSpeedLast": siL8MergeSpeedLast,
       "siL8MergesNow": siL8MergesNow,
       "siMasterIndexLevel": siMasterIndexLevel,
       "siMasterMergeProgress": siMasterMergeProgress,
       "siMasterMergesNow": siMasterMergesNow,
       "siMasterMergesToDate": siMasterMergesToDate,
       "siPersistentIndexes": siPersistentIndexes,
       "siPersistentIndexesL1": siPersistentIndexesL1,
       "siPersistentIndexesL2": siPersistentIndexesL2,
       "siPersistentIndexesL3": siPersistentIndexesL3,
       "siPersistentIndexesL4": siPersistentIndexesL4,
       "siPersistentIndexesL5": siPersistentIndexesL5,
       "siPersistentIndexesL6": siPersistentIndexesL6,
       "siPersistentIndexesL7": siPersistentIndexesL7,
       "siPersistentIndexesL8": siPersistentIndexesL8,
       "siQueries": siQueries,
       "siQueriesFailed": siQueriesFailed,
       "siQueriesSucceeded": siQueriesSucceeded,
       "siShadowMergeLevels": siShadowMergeLevels,
       "siShadowMergeLevelsThreshold": siShadowMergeLevelsThreshold,
       "siUniqueKeys": siUniqueKeys,
       "siWorkItemsCreated": siWorkItemsCreated,
       "siWorkItemsDeleted": siWorkItemsDeleted,
       "serverForNFS": serverForNFS,
       "snfsAnonymousAccesses": snfsAnonymousAccesses,
       "snfsBytesRead": snfsBytesRead,
       "snfsBytesReadPerSec": snfsBytesReadPerSec,
       "snfsBytesWritten": snfsBytesWritten,
       "snfsBytesWrittenPerSec": snfsBytesWrittenPerSec,
       "snfsDRCHits": snfsDRCHits,
       "snfsDRCReplies": snfsDRCReplies,
       "snfsDRCReplyPresent": snfsDRCReplyPresent,
       "snfsDRCSendErrors": snfsDRCSendErrors,
       "snfsDiscardedDRCPackets": snfsDiscardedDRCPackets,
       "snfsMOUNTErrorsV1": snfsMOUNTErrorsV1,
       "snfsMOUNTErrorsV3": snfsMOUNTErrorsV3,
       "snfsMV100NULLMount": snfsMV100NULLMount,
       "snfsMV101Mount": snfsMV101Mount,
       "snfsMV102DumpMounts": snfsMV102DumpMounts,
       "snfsMV103Unmount": snfsMV103Unmount,
       "snfsMV104UnmountAll": snfsMV104UnmountAll,
       "snfsMV105ExportList": snfsMV105ExportList,
       "snfsMV300NULLMount": snfsMV300NULLMount,
       "snfsMV301Mount": snfsMV301Mount,
       "snfsMV302DumpMounts": snfsMV302DumpMounts,
       "snfsMV303Unmount": snfsMV303Unmount,
       "snfsMV304UnmountAll": snfsMV304UnmountAll,
       "snfsMV305ExportList": snfsMV305ExportList,
       "snfsNFSErrorsV2": snfsNFSErrorsV2,
       "snfsNFSErrorsV3": snfsNFSErrorsV3,
       "snfsPendingDRCPackets": snfsPendingDRCPackets,
       "snfsRPCCallPacketsCreated": snfsRPCCallPacketsCreated,
       "snfsRPCCallsReceivedPerSec": snfsRPCCallsReceivedPerSec,
       "snfsRPCFailures": snfsRPCFailures,
       "snfsRPCRepliesReceivedPerSec": snfsRPCRepliesReceivedPerSec,
       "snfsRPCReplyPacketsCreated": snfsRPCReplyPacketsCreated,
       "snfsThreadsTotal": snfsThreadsTotal,
       "snfsThreadsWaiting": snfsThreadsWaiting,
       "snfsTotalMountCallsV1": snfsTotalMountCallsV1,
       "snfsTotalMountCallsV3": snfsTotalMountCallsV3,
       "snfsTotalNFSCallsV2": snfsTotalNFSCallsV2,
       "snfsTotalNFSCallsV3": snfsTotalNFSCallsV3,
       "snfsTotalRPCCallsReceived": snfsTotalRPCCallsReceived,
       "snfsTotalRPCRepliesReceived": snfsTotalRPCRepliesReceived,
       "snfsUnrecognizedRPCPackets": snfsUnrecognizedRPCPackets,
       "snfsV200NULL": snfsV200NULL,
       "snfsV201GetAttributes": snfsV201GetAttributes,
       "snfsV202SetAttributes": snfsV202SetAttributes,
       "snfsV203Root": snfsV203Root,
       "snfsV204Lookup": snfsV204Lookup,
       "snfsV205ReadLink": snfsV205ReadLink,
       "snfsV206Read": snfsV206Read,
       "snfsV207WriteCache": snfsV207WriteCache,
       "snfsV208Write": snfsV208Write,
       "snfsV209Create": snfsV209Create,
       "snfsV210Remove": snfsV210Remove,
       "snfsV211Rename": snfsV211Rename,
       "snfsV212Link": snfsV212Link,
       "snfsV213SymbolicLink": snfsV213SymbolicLink,
       "snfsV214MakeDirectory": snfsV214MakeDirectory,
       "snfsV215RemoveDirectory": snfsV215RemoveDirectory,
       "snfsV216ReadDirectory": snfsV216ReadDirectory,
       "snfsV217StatFileSystem": snfsV217StatFileSystem,
       "snfsV300NULL": snfsV300NULL,
       "snfsV301GetAttributes": snfsV301GetAttributes,
       "snfsV302SetAttributes": snfsV302SetAttributes,
       "snfsV303Lookup": snfsV303Lookup,
       "snfsV304Access": snfsV304Access,
       "snfsV305ReadLinkV3": snfsV305ReadLinkV3,
       "snfsV306Read": snfsV306Read,
       "snfsV307Write": snfsV307Write,
       "snfsV308Create": snfsV308Create,
       "snfsV309MakeDirectory": snfsV309MakeDirectory,
       "snfsV310SymbolicLink": snfsV310SymbolicLink,
       "snfsV311MakeNode": snfsV311MakeNode,
       "snfsV312Remove": snfsV312Remove,
       "snfsV313RemoveDirectory": snfsV313RemoveDirectory,
       "snfsV314Rename": snfsV314Rename,
       "snfsV315Link": snfsV315Link,
       "snfsV316ReadDirectory": snfsV316ReadDirectory,
       "snfsV317ReadDirectory": snfsV317ReadDirectory,
       "snfsV318FileSystemStat": snfsV318FileSystemStat,
       "snfsV319FileSystemInfo": snfsV319FileSystemInfo,
       "snfsV320PathConfiguration": snfsV320PathConfiguration,
       "snfsV321Commit": snfsV321Commit,
       "snfsWorkQueueSize": snfsWorkQueueSize,
       "snfsXDRFailures": snfsXDRFailures,
       "tbsCounters": tbsCounters,
       "tbscCurrentContexts": tbscCurrentContexts,
       "tbscCurrentResources": tbscCurrentResources,
       "terminalServiceGateway": terminalServiceGateway,
       "tsgConnectionRequestAuthTime": tsgConnectionRequestAuthTime,
       "tsgCurrentConnections": tsgCurrentConnections,
       "tsgFailedConnectionAuthorization": tsgFailedConnectionAuthorization,
       "tsgFailedResourceAuthoization": tsgFailedResourceAuthoization,
       "tsgFailedConnections": tsgFailedConnections,
       "tsgSuccessfulConnections": tsgSuccessfulConnections,
       "uddiAPICounts": uddiAPICounts,
       "uddicAddpublisherAssertions": uddicAddpublisherAssertions,
       "uddicDeletebinding": uddicDeletebinding,
       "uddicDeletebusiness": uddicDeletebusiness,
       "uddicDeletepublisherAssertions": uddicDeletepublisherAssertions,
       "uddicDeleteservice": uddicDeleteservice,
       "uddicDeletetModel": uddicDeletetModel,
       "uddicDiscardauthToken": uddicDiscardauthToken,
       "uddicDoping": uddicDoping,
       "uddicFindbinding": uddicFindbinding,
       "uddicFindbusiness": uddicFindbusiness,
       "uddicFindrelatedBusinesses": uddicFindrelatedBusinesses,
       "uddicFindservice": uddicFindservice,
       "uddicFindtModel": uddicFindtModel,
       "uddicGetassertionStatusReport": uddicGetassertionStatusReport,
       "uddicGetauthToken": uddicGetauthToken,
       "uddicGetbindingDetail": uddicGetbindingDetail,
       "uddicGetbusinessDetail": uddicGetbusinessDetail,
       "uddicGetbusinessDetailExt": uddicGetbusinessDetailExt,
       "uddicGetchangeRecords": uddicGetchangeRecords,
       "uddicGethighWaterMarks": uddicGethighWaterMarks,
       "uddicGetpublisherAssertions": uddicGetpublisherAssertions,
       "uddicGetregisteredInfo": uddicGetregisteredInfo,
       "uddicGetrelatedCategories": uddicGetrelatedCategories,
       "uddicGetserviceDetail": uddicGetserviceDetail,
       "uddicGettModelDetail": uddicGettModelDetail,
       "uddicNotifychangeRecordAvailable": uddicNotifychangeRecordAvailable,
       "uddicSavebinding": uddicSavebinding,
       "uddicSavebusiness": uddicSavebusiness,
       "uddicSaveservice": uddicSaveservice,
       "uddicSavetModel": uddicSavetModel,
       "uddicSetpublisherAssertions": uddicSetpublisherAssertions,
       "uddicValidatecategorization": uddicValidatecategorization,
       "uddiAPITimes": uddiAPITimes,
       "udditAddpublisherAssertions": udditAddpublisherAssertions,
       "udditDeletebinding": udditDeletebinding,
       "udditDeletebusiness": udditDeletebusiness,
       "udditDeletepublisherAssertions": udditDeletepublisherAssertions,
       "udditDeleteservice": udditDeleteservice,
       "udditDeletetModel": udditDeletetModel,
       "udditDiscardauthToken": udditDiscardauthToken,
       "udditDoping": udditDoping,
       "udditFindbinding": udditFindbinding,
       "udditFindbusiness": udditFindbusiness,
       "udditFindrelatedBusinesses": udditFindrelatedBusinesses,
       "udditFindservice": udditFindservice,
       "udditFindtModel": udditFindtModel,
       "udditGetassertionStatusReport": udditGetassertionStatusReport,
       "udditGetauthToken": udditGetauthToken,
       "udditGetbindingDetail": udditGetbindingDetail,
       "udditGetbusinessDetail": udditGetbusinessDetail,
       "udditGetbusinessDetailExt": udditGetbusinessDetailExt,
       "udditGetchangeRecords": udditGetchangeRecords,
       "udditGethighWaterMarks": udditGethighWaterMarks,
       "udditGetpublisherAssertions": udditGetpublisherAssertions,
       "udditGetregisteredInfo": udditGetregisteredInfo,
       "udditGetrelatedCategories": udditGetrelatedCategories,
       "udditGetserviceDetail": udditGetserviceDetail,
       "udditGettModelDetail": udditGettModelDetail,
       "udditNotifychangeRecordAvailable": udditNotifychangeRecordAvailable,
       "udditSavebinding": udditSavebinding,
       "udditSavebusiness": udditSavebusiness,
       "udditSaveservice": udditSaveservice,
       "udditSavetModel": udditSavetModel,
       "udditSetpublisherAssertions": udditSetpublisherAssertions,
       "udditValidatecategorization": udditValidatecategorization,
       "w3svcW3WPTable": w3svcW3WPTable,
       "w3svcW3WPEntry": w3svcW3WPEntry,
       "w3svcInstance": w3svcInstance,
       "w3svcActiveFlushedEntries": w3svcActiveFlushedEntries,
       "w3svcActiveRequests": w3svcActiveRequests,
       "w3svcActiveThreadsCount": w3svcActiveThreadsCount,
       "w3svcCurrentFileCacheMemoryUsage": w3svcCurrentFileCacheMemoryUsage,
       "w3svcCurrentFilesCached": w3svcCurrentFilesCached,
       "w3svcCurrentMetadataCached": w3svcCurrentMetadataCached,
       "w3svcCurrentURIsCached": w3svcCurrentURIsCached,
       "w3svcFileCacheFlushes": w3svcFileCacheFlushes,
       "w3svcFileCacheHits": w3svcFileCacheHits,
       "w3svcFileCacheHitsPerSec": w3svcFileCacheHitsPerSec,
       "w3svcFileCacheMisses": w3svcFileCacheMisses,
       "w3svcFileCacheMissesPerSec": w3svcFileCacheMissesPerSec,
       "w3svcMaximumFileCacheMemoryUsage": w3svcMaximumFileCacheMemoryUsage,
       "w3svcMaximumThreadsCount": w3svcMaximumThreadsCount,
       "w3svcMetadataCacheFlushes": w3svcMetadataCacheFlushes,
       "w3svcMetadataCacheHits": w3svcMetadataCacheHits,
       "w3svcMetadataCacheHitsPerSec": w3svcMetadataCacheHitsPerSec,
       "w3svcMetadataCacheMisses": w3svcMetadataCacheMisses,
       "w3svcMetadataCacheMissesPerSec": w3svcMetadataCacheMissesPerSec,
       "w3svcOutputCacheCurrentFlushItem": w3svcOutputCacheCurrentFlushItem,
       "w3svcOutputCacheCurrentItems": w3svcOutputCacheCurrentItems,
       "w3svcOutputCacheCurrentMemUsage": w3svcOutputCacheCurrentMemUsage,
       "w3svcOutputCacheHitsPerSec": w3svcOutputCacheHitsPerSec,
       "w3svcOutputCacheMissesPerSec": w3svcOutputCacheMissesPerSec,
       "w3svcOutputCacheTotalFlushItems": w3svcOutputCacheTotalFlushItems,
       "w3svcOutputCacheTotalFlushes": w3svcOutputCacheTotalFlushes,
       "w3svcOutputCacheTotalHits": w3svcOutputCacheTotalHits,
       "w3svcOutputCacheTotalMisses": w3svcOutputCacheTotalMisses,
       "w3svcRequestsPerSec": w3svcRequestsPerSec,
       "w3svcTotalFilesCached": w3svcTotalFilesCached,
       "w3svcTotalFlushedFiles": w3svcTotalFlushedFiles,
       "w3svcTotalFlushedMetadata": w3svcTotalFlushedMetadata,
       "w3svcTotalFlushedURIs": w3svcTotalFlushedURIs,
       "w3svcTotalHTTPRequestsServed": w3svcTotalHTTPRequestsServed,
       "w3svcTotalMetadataCached": w3svcTotalMetadataCached,
       "w3svcTotalThreads": w3svcTotalThreads,
       "w3svcTotalURIsCached": w3svcTotalURIsCached,
       "w3svcURICacheFlushes": w3svcURICacheFlushes,
       "w3svcURICacheHits": w3svcURICacheHits,
       "w3svcURICacheMisses": w3svcURICacheMisses,
       "w3svcUriCacheHitsPerSec": w3svcUriCacheHitsPerSec,
       "w3svcUriCacheMissesPerSec": w3svcUriCacheMissesPerSec,
       "wasW3WPTable": wasW3WPTable,
       "wasW3WPEntry": wasW3WPEntry,
       "wasInstance": wasInstance,
       "wasActiveListenerChannels": wasActiveListenerChannels,
       "wasActiveProtocolHandlers": wasActiveProtocolHandlers,
       "wasHealthPingReplyLatency": wasHealthPingReplyLatency,
       "wasTotalHealthPings": wasTotalHealthPings,
       "wasTotalMessagesSentToWAS": wasTotalMessagesSentToWAS,
       "wasTotalRequestsServed": wasTotalRequestsServed,
       "wasTotalRuntimeStatusQueries": wasTotalRuntimeStatusQueries,
       "wasTotalWASMessagesReceived": wasTotalWASMessagesReceived,
       "wsrmPolicyTable": wsrmPolicyTable,
       "wsrmPolicyEntry": wsrmPolicyEntry,
       "wsrmplInstance": wsrmplInstance,
       "wsrmplSystemManagedCPUPercent": wsrmplSystemManagedCPUPercent,
       "wsrmProcessTable": wsrmProcessTable,
       "wsrmProcessEntry": wsrmProcessEntry,
       "wsrmprInstance": wsrmprInstance,
       "wsrmprActualManagedCPUPercent": wsrmprActualManagedCPUPercent,
       "wsrmProcessMatchingCriteriaTable": wsrmProcessMatchingCriteriaTable,
       "wsrmProcessMatchingCriteriaEntry": wsrmProcessMatchingCriteriaEntry,
       "wsrmpmcInstance": wsrmpmcInstance,
       "wsrmpmcActualManagedCPUPercent": wsrmpmcActualManagedCPUPercent,
       "wsrmpmcManagedCPUPercent": wsrmpmcManagedCPUPercent,
       "wsrmpmcPageFileMBytes": wsrmpmcPageFileMBytes,
       "wsrmpmcProcessCount": wsrmpmcProcessCount,
       "wsrmpmcTargetManagedCPUPercent": wsrmpmcTargetManagedCPUPercent,
       "wsrmpmcWorkingSetMBytes": wsrmpmcWorkingSetMBytes}
)
