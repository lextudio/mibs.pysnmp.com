# SNMP MIB module (Webio-Digital-MIB-US) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/Webio-Digital-MIB-US
# Produced by pysmi-1.5.4 at Mon Oct 14 23:15:42 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 NotificationType,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "NotificationType",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 PhysAddress,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "PhysAddress",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Wut_ObjectIdentity = ObjectIdentity
wut = _Wut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040)
)
_WtComServer_ObjectIdentity = ObjectIdentity
wtComServer = _WtComServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1)
)
_WtWebio_ObjectIdentity = ObjectIdentity
wtWebio = _WtWebio_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2)
)
_WtWebioEA12x12_ObjectIdentity = ObjectIdentity
wtWebioEA12x12 = _WtWebioEA12x12_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4)
)
_WtWebioEA12x12InOut_ObjectIdentity = ObjectIdentity
wtWebioEA12x12InOut = _WtWebioEA12x12InOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1)
)


class _WtWebioEA12x12Inputs_Type(Integer32):
    """Custom type wtWebioEA12x12Inputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x12Inputs_Type.__name__ = "Integer32"
_WtWebioEA12x12Inputs_Object = MibScalar
wtWebioEA12x12Inputs = _WtWebioEA12x12Inputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 1),
    _WtWebioEA12x12Inputs_Type()
)
wtWebioEA12x12Inputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12Inputs.setStatus("mandatory")


class _WtWebioEA12x12Outputs_Type(Integer32):
    """Custom type wtWebioEA12x12Outputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x12Outputs_Type.__name__ = "Integer32"
_WtWebioEA12x12Outputs_Object = MibScalar
wtWebioEA12x12Outputs = _WtWebioEA12x12Outputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 2),
    _WtWebioEA12x12Outputs_Type()
)
wtWebioEA12x12Outputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12Outputs.setStatus("mandatory")
_WtWebioEA12x12InputTable_Object = MibTable
wtWebioEA12x12InputTable = _WtWebioEA12x12InputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12InputTable.setStatus("mandatory")
_WtWebioEA12x12InputEntry_Object = MibTableRow
wtWebioEA12x12InputEntry = _WtWebioEA12x12InputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 3, 1)
)
wtWebioEA12x12InputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12InputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12InputEntry.setStatus("mandatory")


class _WtWebioEA12x12InputNo_Type(Integer32):
    """Custom type wtWebioEA12x12InputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x12InputNo_Type.__name__ = "Integer32"
_WtWebioEA12x12InputNo_Object = MibTableColumn
wtWebioEA12x12InputNo = _WtWebioEA12x12InputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 3, 1, 1),
    _WtWebioEA12x12InputNo_Type()
)
wtWebioEA12x12InputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12InputNo.setStatus("mandatory")


class _WtWebioEA12x12InputCounter_Type(Integer32):
    """Custom type wtWebioEA12x12InputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x12InputCounter_Type.__name__ = "Integer32"
_WtWebioEA12x12InputCounter_Object = MibTableColumn
wtWebioEA12x12InputCounter = _WtWebioEA12x12InputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 3, 1, 2),
    _WtWebioEA12x12InputCounter_Type()
)
wtWebioEA12x12InputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12InputCounter.setStatus("mandatory")
_WtWebioEA12x12InputCounterClear_Type = Integer32
_WtWebioEA12x12InputCounterClear_Object = MibTableColumn
wtWebioEA12x12InputCounterClear = _WtWebioEA12x12InputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 3, 1, 3),
    _WtWebioEA12x12InputCounterClear_Type()
)
wtWebioEA12x12InputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12InputCounterClear.setStatus("mandatory")


class _WtWebioEA12x12InputState_Type(Integer32):
    """Custom type wtWebioEA12x12InputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12InputState-OFF", 0),
          ("wtWebioEA12x12InputState-ON", 1))
    )


_WtWebioEA12x12InputState_Type.__name__ = "Integer32"
_WtWebioEA12x12InputState_Object = MibTableColumn
wtWebioEA12x12InputState = _WtWebioEA12x12InputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 3, 1, 4),
    _WtWebioEA12x12InputState_Type()
)
wtWebioEA12x12InputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12InputState.setStatus("mandatory")
_WtWebioEA12x12InputValue_Type = Integer32
_WtWebioEA12x12InputValue_Object = MibScalar
wtWebioEA12x12InputValue = _WtWebioEA12x12InputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 4),
    _WtWebioEA12x12InputValue_Type()
)
wtWebioEA12x12InputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12InputValue.setStatus("mandatory")
_WtWebioEA12x12OutputTable_Object = MibTable
wtWebioEA12x12OutputTable = _WtWebioEA12x12OutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputTable.setStatus("mandatory")
_WtWebioEA12x12OutputEntry_Object = MibTableRow
wtWebioEA12x12OutputEntry = _WtWebioEA12x12OutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 5, 1)
)
wtWebioEA12x12OutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputEntry.setStatus("mandatory")


class _WtWebioEA12x12OutputNo_Type(Integer32):
    """Custom type wtWebioEA12x12OutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x12OutputNo_Type.__name__ = "Integer32"
_WtWebioEA12x12OutputNo_Object = MibTableColumn
wtWebioEA12x12OutputNo = _WtWebioEA12x12OutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 5, 1, 1),
    _WtWebioEA12x12OutputNo_Type()
)
wtWebioEA12x12OutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputNo.setStatus("mandatory")


class _WtWebioEA12x12OutputState_Type(Integer32):
    """Custom type wtWebioEA12x12OutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12OutputState-OFF", 0),
          ("wtWebioEA12x12OutputState-ON", 1))
    )


_WtWebioEA12x12OutputState_Type.__name__ = "Integer32"
_WtWebioEA12x12OutputState_Object = MibTableColumn
wtWebioEA12x12OutputState = _WtWebioEA12x12OutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 5, 1, 2),
    _WtWebioEA12x12OutputState_Type()
)
wtWebioEA12x12OutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputState.setStatus("mandatory")
_WtWebioEA12x12OutputValue_Type = Integer32
_WtWebioEA12x12OutputValue_Object = MibScalar
wtWebioEA12x12OutputValue = _WtWebioEA12x12OutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 6),
    _WtWebioEA12x12OutputValue_Type()
)
wtWebioEA12x12OutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputValue.setStatus("mandatory")


class _WtWebioEA12x12SetOutput_Type(OctetString):
    """Custom type wtWebioEA12x12SetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA12x12SetOutput_Type.__name__ = "OctetString"
_WtWebioEA12x12SetOutput_Object = MibScalar
wtWebioEA12x12SetOutput = _WtWebioEA12x12SetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 1, 7),
    _WtWebioEA12x12SetOutput_Type()
)
wtWebioEA12x12SetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SetOutput.setStatus("mandatory")
_WtWebioEA12x12SessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA12x12SessCntrl = _WtWebioEA12x12SessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 2)
)
_WtWebioEA12x12SessCntrlPassword_Type = OctetString
_WtWebioEA12x12SessCntrlPassword_Object = MibScalar
wtWebioEA12x12SessCntrlPassword = _WtWebioEA12x12SessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 2, 1),
    _WtWebioEA12x12SessCntrlPassword_Type()
)
wtWebioEA12x12SessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SessCntrlPassword.setStatus("mandatory")


class _WtWebioEA12x12SessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA12x12SessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12SessCntrl-NoSession", 0),
          ("wtWebioEA12x12SessCntrl-Session", 1))
    )


_WtWebioEA12x12SessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA12x12SessCntrlConfigMode_Object = MibScalar
wtWebioEA12x12SessCntrlConfigMode = _WtWebioEA12x12SessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 2, 2),
    _WtWebioEA12x12SessCntrlConfigMode_Type()
)
wtWebioEA12x12SessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12SessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA12x12SessCntrlLogout_Type = Integer32
_WtWebioEA12x12SessCntrlLogout_Object = MibScalar
wtWebioEA12x12SessCntrlLogout = _WtWebioEA12x12SessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 2, 3),
    _WtWebioEA12x12SessCntrlLogout_Type()
)
wtWebioEA12x12SessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SessCntrlLogout.setStatus("mandatory")
_WtWebioEA12x12SessCntrlAdminPassword_Type = OctetString
_WtWebioEA12x12SessCntrlAdminPassword_Object = MibScalar
wtWebioEA12x12SessCntrlAdminPassword = _WtWebioEA12x12SessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 2, 4),
    _WtWebioEA12x12SessCntrlAdminPassword_Type()
)
wtWebioEA12x12SessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA12x12SessCntrlConfigPassword_Type = OctetString
_WtWebioEA12x12SessCntrlConfigPassword_Object = MibScalar
wtWebioEA12x12SessCntrlConfigPassword = _WtWebioEA12x12SessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 2, 5),
    _WtWebioEA12x12SessCntrlConfigPassword_Type()
)
wtWebioEA12x12SessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA12x12Config_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Config = _WtWebioEA12x12Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3)
)
_WtWebioEA12x12Device_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Device = _WtWebioEA12x12Device_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1)
)
_WtWebioEA12x12Text_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Text = _WtWebioEA12x12Text_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 1)
)
_WtWebioEA12x12DeviceName_Type = OctetString
_WtWebioEA12x12DeviceName_Object = MibScalar
wtWebioEA12x12DeviceName = _WtWebioEA12x12DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 1, 1),
    _WtWebioEA12x12DeviceName_Type()
)
wtWebioEA12x12DeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DeviceName.setStatus("mandatory")
_WtWebioEA12x12DeviceText_Type = OctetString
_WtWebioEA12x12DeviceText_Object = MibScalar
wtWebioEA12x12DeviceText = _WtWebioEA12x12DeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 1, 2),
    _WtWebioEA12x12DeviceText_Type()
)
wtWebioEA12x12DeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DeviceText.setStatus("mandatory")
_WtWebioEA12x12DeviceLocation_Type = OctetString
_WtWebioEA12x12DeviceLocation_Object = MibScalar
wtWebioEA12x12DeviceLocation = _WtWebioEA12x12DeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 1, 3),
    _WtWebioEA12x12DeviceLocation_Type()
)
wtWebioEA12x12DeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DeviceLocation.setStatus("mandatory")
_WtWebioEA12x12DeviceContact_Type = OctetString
_WtWebioEA12x12DeviceContact_Object = MibScalar
wtWebioEA12x12DeviceContact = _WtWebioEA12x12DeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 1, 4),
    _WtWebioEA12x12DeviceContact_Type()
)
wtWebioEA12x12DeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DeviceContact.setStatus("mandatory")
_WtWebioEA12x12TimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA12x12TimeDate = _WtWebioEA12x12TimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2)
)
_WtWebioEA12x12TimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA12x12TimeZone = _WtWebioEA12x12TimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1)
)
_WtWebioEA12x12TzOffsetHrs_Type = Integer32
_WtWebioEA12x12TzOffsetHrs_Object = MibScalar
wtWebioEA12x12TzOffsetHrs = _WtWebioEA12x12TzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 1),
    _WtWebioEA12x12TzOffsetHrs_Type()
)
wtWebioEA12x12TzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TzOffsetHrs.setStatus("mandatory")
_WtWebioEA12x12TzOffsetMin_Type = Integer32
_WtWebioEA12x12TzOffsetMin_Object = MibScalar
wtWebioEA12x12TzOffsetMin = _WtWebioEA12x12TzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 2),
    _WtWebioEA12x12TzOffsetMin_Type()
)
wtWebioEA12x12TzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TzOffsetMin.setStatus("mandatory")


class _WtWebioEA12x12TzEnable_Type(OctetString):
    """Custom type wtWebioEA12x12TzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12TzEnable_Type.__name__ = "OctetString"
_WtWebioEA12x12TzEnable_Object = MibScalar
wtWebioEA12x12TzEnable = _WtWebioEA12x12TzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 3),
    _WtWebioEA12x12TzEnable_Type()
)
wtWebioEA12x12TzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TzEnable.setStatus("mandatory")
_WtWebioEA12x12StTzOffsetHrs_Type = Integer32
_WtWebioEA12x12StTzOffsetHrs_Object = MibScalar
wtWebioEA12x12StTzOffsetHrs = _WtWebioEA12x12StTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 4),
    _WtWebioEA12x12StTzOffsetHrs_Type()
)
wtWebioEA12x12StTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzOffsetHrs.setStatus("mandatory")
_WtWebioEA12x12StTzOffsetMin_Type = Integer32
_WtWebioEA12x12StTzOffsetMin_Object = MibScalar
wtWebioEA12x12StTzOffsetMin = _WtWebioEA12x12StTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 5),
    _WtWebioEA12x12StTzOffsetMin_Type()
)
wtWebioEA12x12StTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzOffsetMin.setStatus("mandatory")


class _WtWebioEA12x12StTzEnable_Type(OctetString):
    """Custom type wtWebioEA12x12StTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12StTzEnable_Type.__name__ = "OctetString"
_WtWebioEA12x12StTzEnable_Object = MibScalar
wtWebioEA12x12StTzEnable = _WtWebioEA12x12StTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 6),
    _WtWebioEA12x12StTzEnable_Type()
)
wtWebioEA12x12StTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzEnable.setStatus("mandatory")


class _WtWebioEA12x12StTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA12x12StTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12StartMonth-April", 4),
          ("wtWebioEA12x12StartMonth-August", 8),
          ("wtWebioEA12x12StartMonth-December", 12),
          ("wtWebioEA12x12StartMonth-February", 2),
          ("wtWebioEA12x12StartMonth-January", 1),
          ("wtWebioEA12x12StartMonth-July", 7),
          ("wtWebioEA12x12StartMonth-June", 6),
          ("wtWebioEA12x12StartMonth-March", 3),
          ("wtWebioEA12x12StartMonth-May", 5),
          ("wtWebioEA12x12StartMonth-November", 11),
          ("wtWebioEA12x12StartMonth-October", 10),
          ("wtWebioEA12x12StartMonth-September", 9))
    )


_WtWebioEA12x12StTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA12x12StTzStartMonth_Object = MibScalar
wtWebioEA12x12StTzStartMonth = _WtWebioEA12x12StTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 7),
    _WtWebioEA12x12StTzStartMonth_Type()
)
wtWebioEA12x12StTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStartMonth.setStatus("mandatory")


class _WtWebioEA12x12StTzStartMode_Type(Integer32):
    """Custom type wtWebioEA12x12StTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12StartMode-first", 1),
          ("wtWebioEA12x12StartMode-fourth", 4),
          ("wtWebioEA12x12StartMode-last", 5),
          ("wtWebioEA12x12StartMode-second", 2),
          ("wtWebioEA12x12StartMode-third", 3))
    )


_WtWebioEA12x12StTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA12x12StTzStartMode_Object = MibScalar
wtWebioEA12x12StTzStartMode = _WtWebioEA12x12StTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 8),
    _WtWebioEA12x12StTzStartMode_Type()
)
wtWebioEA12x12StTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStartMode.setStatus("mandatory")


class _WtWebioEA12x12StTzStartWday_Type(Integer32):
    """Custom type wtWebioEA12x12StTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12StartWday-Friday", 6),
          ("wtWebioEA12x12StartWday-Monday", 2),
          ("wtWebioEA12x12StartWday-Saturday", 7),
          ("wtWebioEA12x12StartWday-Sunday", 1),
          ("wtWebioEA12x12StartWday-Thursday", 4),
          ("wtWebioEA12x12StartWday-Tuesday", 3),
          ("wtWebioEA12x12StartWday-Wednesday", 5))
    )


_WtWebioEA12x12StTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA12x12StTzStartWday_Object = MibScalar
wtWebioEA12x12StTzStartWday = _WtWebioEA12x12StTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 9),
    _WtWebioEA12x12StTzStartWday_Type()
)
wtWebioEA12x12StTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStartWday.setStatus("mandatory")
_WtWebioEA12x12StTzStartHrs_Type = Integer32
_WtWebioEA12x12StTzStartHrs_Object = MibScalar
wtWebioEA12x12StTzStartHrs = _WtWebioEA12x12StTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 10),
    _WtWebioEA12x12StTzStartHrs_Type()
)
wtWebioEA12x12StTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStartHrs.setStatus("mandatory")
_WtWebioEA12x12StTzStartMin_Type = Integer32
_WtWebioEA12x12StTzStartMin_Object = MibScalar
wtWebioEA12x12StTzStartMin = _WtWebioEA12x12StTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 11),
    _WtWebioEA12x12StTzStartMin_Type()
)
wtWebioEA12x12StTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStartMin.setStatus("mandatory")


class _WtWebioEA12x12StTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA12x12StTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12StopMonth-April", 4),
          ("wtWebioEA12x12StopMonth-August", 8),
          ("wtWebioEA12x12StopMonth-December", 12),
          ("wtWebioEA12x12StopMonth-February", 2),
          ("wtWebioEA12x12StopMonth-January", 1),
          ("wtWebioEA12x12StopMonth-July", 7),
          ("wtWebioEA12x12StopMonth-June", 6),
          ("wtWebioEA12x12StopMonth-March", 3),
          ("wtWebioEA12x12StopMonth-May", 5),
          ("wtWebioEA12x12StopMonth-November", 11),
          ("wtWebioEA12x12StopMonth-October", 10),
          ("wtWebioEA12x12StopMonth-September", 9))
    )


_WtWebioEA12x12StTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA12x12StTzStopMonth_Object = MibScalar
wtWebioEA12x12StTzStopMonth = _WtWebioEA12x12StTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 12),
    _WtWebioEA12x12StTzStopMonth_Type()
)
wtWebioEA12x12StTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStopMonth.setStatus("mandatory")


class _WtWebioEA12x12StTzStopMode_Type(Integer32):
    """Custom type wtWebioEA12x12StTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12StopMode-first", 1),
          ("wtWebioEA12x12StopMode-fourth", 4),
          ("wtWebioEA12x12StopMode-last", 5),
          ("wtWebioEA12x12StopMode-second", 2),
          ("wtWebioEA12x12StopMode-third", 3))
    )


_WtWebioEA12x12StTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA12x12StTzStopMode_Object = MibScalar
wtWebioEA12x12StTzStopMode = _WtWebioEA12x12StTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 13),
    _WtWebioEA12x12StTzStopMode_Type()
)
wtWebioEA12x12StTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStopMode.setStatus("mandatory")


class _WtWebioEA12x12StTzStopWday_Type(Integer32):
    """Custom type wtWebioEA12x12StTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12StopWday-Friday", 6),
          ("wtWebioEA12x12StopWday-Monday", 2),
          ("wtWebioEA12x12StopWday-Saturday", 7),
          ("wtWebioEA12x12StopWday-Sunday", 1),
          ("wtWebioEA12x12StopWday-Thursday", 4),
          ("wtWebioEA12x12StopWday-Tuesday", 3),
          ("wtWebioEA12x12StopWday-Wednesday", 5))
    )


_WtWebioEA12x12StTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA12x12StTzStopWday_Object = MibScalar
wtWebioEA12x12StTzStopWday = _WtWebioEA12x12StTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 14),
    _WtWebioEA12x12StTzStopWday_Type()
)
wtWebioEA12x12StTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStopWday.setStatus("mandatory")
_WtWebioEA12x12StTzStopHrs_Type = Integer32
_WtWebioEA12x12StTzStopHrs_Object = MibScalar
wtWebioEA12x12StTzStopHrs = _WtWebioEA12x12StTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 15),
    _WtWebioEA12x12StTzStopHrs_Type()
)
wtWebioEA12x12StTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStopHrs.setStatus("mandatory")
_WtWebioEA12x12StTzStopMin_Type = Integer32
_WtWebioEA12x12StTzStopMin_Object = MibScalar
wtWebioEA12x12StTzStopMin = _WtWebioEA12x12StTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 1, 16),
    _WtWebioEA12x12StTzStopMin_Type()
)
wtWebioEA12x12StTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12StTzStopMin.setStatus("mandatory")
_WtWebioEA12x12TimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA12x12TimeServer = _WtWebioEA12x12TimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 2)
)
_WtWebioEA12x12TimeServer1_Type = OctetString
_WtWebioEA12x12TimeServer1_Object = MibScalar
wtWebioEA12x12TimeServer1 = _WtWebioEA12x12TimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 2, 1),
    _WtWebioEA12x12TimeServer1_Type()
)
wtWebioEA12x12TimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TimeServer1.setStatus("mandatory")
_WtWebioEA12x12TimeServer2_Type = OctetString
_WtWebioEA12x12TimeServer2_Object = MibScalar
wtWebioEA12x12TimeServer2 = _WtWebioEA12x12TimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 2, 2),
    _WtWebioEA12x12TimeServer2_Type()
)
wtWebioEA12x12TimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TimeServer2.setStatus("mandatory")


class _WtWebioEA12x12TsEnable_Type(OctetString):
    """Custom type wtWebioEA12x12TsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12TsEnable_Type.__name__ = "OctetString"
_WtWebioEA12x12TsEnable_Object = MibScalar
wtWebioEA12x12TsEnable = _WtWebioEA12x12TsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 2, 3),
    _WtWebioEA12x12TsEnable_Type()
)
wtWebioEA12x12TsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TsEnable.setStatus("mandatory")
_WtWebioEA12x12TsSyncTime_Type = Integer32
_WtWebioEA12x12TsSyncTime_Object = MibScalar
wtWebioEA12x12TsSyncTime = _WtWebioEA12x12TsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 2, 4),
    _WtWebioEA12x12TsSyncTime_Type()
)
wtWebioEA12x12TsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12TsSyncTime.setStatus("mandatory")
_WtWebioEA12x12DeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA12x12DeviceClock = _WtWebioEA12x12DeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 3)
)


class _WtWebioEA12x12ClockHrs_Type(Integer32):
    """Custom type wtWebioEA12x12ClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA12x12ClockHrs_Type.__name__ = "Integer32"
_WtWebioEA12x12ClockHrs_Object = MibScalar
wtWebioEA12x12ClockHrs = _WtWebioEA12x12ClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 3, 1),
    _WtWebioEA12x12ClockHrs_Type()
)
wtWebioEA12x12ClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12ClockHrs.setStatus("mandatory")


class _WtWebioEA12x12ClockMin_Type(Integer32):
    """Custom type wtWebioEA12x12ClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA12x12ClockMin_Type.__name__ = "Integer32"
_WtWebioEA12x12ClockMin_Object = MibScalar
wtWebioEA12x12ClockMin = _WtWebioEA12x12ClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 3, 2),
    _WtWebioEA12x12ClockMin_Type()
)
wtWebioEA12x12ClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12ClockMin.setStatus("mandatory")


class _WtWebioEA12x12ClockDay_Type(Integer32):
    """Custom type wtWebioEA12x12ClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA12x12ClockDay_Type.__name__ = "Integer32"
_WtWebioEA12x12ClockDay_Object = MibScalar
wtWebioEA12x12ClockDay = _WtWebioEA12x12ClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 3, 3),
    _WtWebioEA12x12ClockDay_Type()
)
wtWebioEA12x12ClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12ClockDay.setStatus("mandatory")


class _WtWebioEA12x12ClockMonth_Type(Integer32):
    """Custom type wtWebioEA12x12ClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x12ClockMonth-April", 4),
          ("wtWebioEA12x12ClockMonth-August", 8),
          ("wtWebioEA12x12ClockMonth-December", 12),
          ("wtWebioEA12x12ClockMonth-February", 2),
          ("wtWebioEA12x12ClockMonth-January", 1),
          ("wtWebioEA12x12ClockMonth-July", 7),
          ("wtWebioEA12x12ClockMonth-June", 6),
          ("wtWebioEA12x12ClockMonth-March", 3),
          ("wtWebioEA12x12ClockMonth-May", 5),
          ("wtWebioEA12x12ClockMonth-November", 11),
          ("wtWebioEA12x12ClockMonth-October", 10),
          ("wtWebioEA12x12ClockMonth-September", 9))
    )


_WtWebioEA12x12ClockMonth_Type.__name__ = "Integer32"
_WtWebioEA12x12ClockMonth_Object = MibScalar
wtWebioEA12x12ClockMonth = _WtWebioEA12x12ClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 3, 4),
    _WtWebioEA12x12ClockMonth_Type()
)
wtWebioEA12x12ClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12ClockMonth.setStatus("mandatory")


class _WtWebioEA12x12ClockYear_Type(Integer32):
    """Custom type wtWebioEA12x12ClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x12ClockYear_Type.__name__ = "Integer32"
_WtWebioEA12x12ClockYear_Object = MibScalar
wtWebioEA12x12ClockYear = _WtWebioEA12x12ClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 2, 3, 5),
    _WtWebioEA12x12ClockYear_Type()
)
wtWebioEA12x12ClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12ClockYear.setStatus("mandatory")
_WtWebioEA12x12Basic_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Basic = _WtWebioEA12x12Basic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3)
)
_WtWebioEA12x12Network_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Network = _WtWebioEA12x12Network_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1)
)
_WtWebioEA12x12IpAddress_Type = IpAddress
_WtWebioEA12x12IpAddress_Object = MibScalar
wtWebioEA12x12IpAddress = _WtWebioEA12x12IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1, 1),
    _WtWebioEA12x12IpAddress_Type()
)
wtWebioEA12x12IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12IpAddress.setStatus("mandatory")
_WtWebioEA12x12SubnetMask_Type = IpAddress
_WtWebioEA12x12SubnetMask_Object = MibScalar
wtWebioEA12x12SubnetMask = _WtWebioEA12x12SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1, 2),
    _WtWebioEA12x12SubnetMask_Type()
)
wtWebioEA12x12SubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SubnetMask.setStatus("mandatory")
_WtWebioEA12x12Gateway_Type = IpAddress
_WtWebioEA12x12Gateway_Object = MibScalar
wtWebioEA12x12Gateway = _WtWebioEA12x12Gateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1, 3),
    _WtWebioEA12x12Gateway_Type()
)
wtWebioEA12x12Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12Gateway.setStatus("mandatory")
_WtWebioEA12x12DnsServer1_Type = OctetString
_WtWebioEA12x12DnsServer1_Object = MibScalar
wtWebioEA12x12DnsServer1 = _WtWebioEA12x12DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1, 4),
    _WtWebioEA12x12DnsServer1_Type()
)
wtWebioEA12x12DnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DnsServer1.setStatus("mandatory")
_WtWebioEA12x12DnsServer2_Type = OctetString
_WtWebioEA12x12DnsServer2_Object = MibScalar
wtWebioEA12x12DnsServer2 = _WtWebioEA12x12DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1, 5),
    _WtWebioEA12x12DnsServer2_Type()
)
wtWebioEA12x12DnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DnsServer2.setStatus("mandatory")
_WtWebioEA12x12AddConfig_Type = OctetString
_WtWebioEA12x12AddConfig_Object = MibScalar
wtWebioEA12x12AddConfig = _WtWebioEA12x12AddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 1, 6),
    _WtWebioEA12x12AddConfig_Type()
)
wtWebioEA12x12AddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AddConfig.setStatus("mandatory")
_WtWebioEA12x12HTTP_ObjectIdentity = ObjectIdentity
wtWebioEA12x12HTTP = _WtWebioEA12x12HTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 2)
)
_WtWebioEA12x12Startup_Type = OctetString
_WtWebioEA12x12Startup_Object = MibScalar
wtWebioEA12x12Startup = _WtWebioEA12x12Startup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 2, 1),
    _WtWebioEA12x12Startup_Type()
)
wtWebioEA12x12Startup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12Startup.setStatus("mandatory")
_WtWebioEA12x12GetHeaderEnable_Type = OctetString
_WtWebioEA12x12GetHeaderEnable_Object = MibScalar
wtWebioEA12x12GetHeaderEnable = _WtWebioEA12x12GetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 2, 2),
    _WtWebioEA12x12GetHeaderEnable_Type()
)
wtWebioEA12x12GetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12GetHeaderEnable.setStatus("mandatory")


class _WtWebioEA12x12HttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12HttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12HttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12HttpInputTrigger_Object = MibScalar
wtWebioEA12x12HttpInputTrigger = _WtWebioEA12x12HttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 2, 3),
    _WtWebioEA12x12HttpInputTrigger_Type()
)
wtWebioEA12x12HttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12HttpInputTrigger.setStatus("mandatory")


class _WtWebioEA12x12HttpPort_Type(Integer32):
    """Custom type wtWebioEA12x12HttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA12x12HttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x12HttpPort_Object = MibScalar
wtWebioEA12x12HttpPort = _WtWebioEA12x12HttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 2, 4),
    _WtWebioEA12x12HttpPort_Type()
)
wtWebioEA12x12HttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12HttpPort.setStatus("mandatory")
_WtWebioEA12x12Mail_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Mail = _WtWebioEA12x12Mail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3)
)
_WtWebioEA12x12MailAdName_Type = OctetString
_WtWebioEA12x12MailAdName_Object = MibScalar
wtWebioEA12x12MailAdName = _WtWebioEA12x12MailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 1),
    _WtWebioEA12x12MailAdName_Type()
)
wtWebioEA12x12MailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailAdName.setStatus("mandatory")
_WtWebioEA12x12MailReply_Type = OctetString
_WtWebioEA12x12MailReply_Object = MibScalar
wtWebioEA12x12MailReply = _WtWebioEA12x12MailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 2),
    _WtWebioEA12x12MailReply_Type()
)
wtWebioEA12x12MailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailReply.setStatus("mandatory")
_WtWebioEA12x12MailServer_Type = OctetString
_WtWebioEA12x12MailServer_Object = MibScalar
wtWebioEA12x12MailServer = _WtWebioEA12x12MailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 3),
    _WtWebioEA12x12MailServer_Type()
)
wtWebioEA12x12MailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailServer.setStatus("mandatory")
_WtWebioEA12x12MailEnable_Type = OctetString
_WtWebioEA12x12MailEnable_Object = MibScalar
wtWebioEA12x12MailEnable = _WtWebioEA12x12MailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 4),
    _WtWebioEA12x12MailEnable_Type()
)
wtWebioEA12x12MailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailEnable.setStatus("mandatory")


class _WtWebioEA12x12MailAuthentication_Type(OctetString):
    """Custom type wtWebioEA12x12MailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12MailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA12x12MailAuthentication_Object = MibScalar
wtWebioEA12x12MailAuthentication = _WtWebioEA12x12MailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 5),
    _WtWebioEA12x12MailAuthentication_Type()
)
wtWebioEA12x12MailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailAuthentication.setStatus("mandatory")
_WtWebioEA12x12MailAuthUser_Type = OctetString
_WtWebioEA12x12MailAuthUser_Object = MibScalar
wtWebioEA12x12MailAuthUser = _WtWebioEA12x12MailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 6),
    _WtWebioEA12x12MailAuthUser_Type()
)
wtWebioEA12x12MailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailAuthUser.setStatus("mandatory")
_WtWebioEA12x12MailAuthPassword_Type = OctetString
_WtWebioEA12x12MailAuthPassword_Object = MibScalar
wtWebioEA12x12MailAuthPassword = _WtWebioEA12x12MailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 7),
    _WtWebioEA12x12MailAuthPassword_Type()
)
wtWebioEA12x12MailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailAuthPassword.setStatus("mandatory")
_WtWebioEA12x12MailPop3Server_Type = OctetString
_WtWebioEA12x12MailPop3Server_Object = MibScalar
wtWebioEA12x12MailPop3Server = _WtWebioEA12x12MailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 3, 8),
    _WtWebioEA12x12MailPop3Server_Type()
)
wtWebioEA12x12MailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MailPop3Server.setStatus("mandatory")
_WtWebioEA12x12SNMP_ObjectIdentity = ObjectIdentity
wtWebioEA12x12SNMP = _WtWebioEA12x12SNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 4)
)
_WtWebioEA12x12SnmpEnable_Type = OctetString
_WtWebioEA12x12SnmpEnable_Object = MibScalar
wtWebioEA12x12SnmpEnable = _WtWebioEA12x12SnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 4, 1),
    _WtWebioEA12x12SnmpEnable_Type()
)
wtWebioEA12x12SnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SnmpEnable.setStatus("mandatory")
_WtWebioEA12x12SnmpCommunityStringRead_Type = OctetString
_WtWebioEA12x12SnmpCommunityStringRead_Object = MibScalar
wtWebioEA12x12SnmpCommunityStringRead = _WtWebioEA12x12SnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 4, 2),
    _WtWebioEA12x12SnmpCommunityStringRead_Type()
)
wtWebioEA12x12SnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA12x12SnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA12x12SnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA12x12SnmpCommunityStringReadWrite = _WtWebioEA12x12SnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 4, 3),
    _WtWebioEA12x12SnmpCommunityStringReadWrite_Type()
)
wtWebioEA12x12SnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA12x12SnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA12x12SnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA12x12SnmpSystemTrapManagerIP = _WtWebioEA12x12SnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 4, 4),
    _WtWebioEA12x12SnmpSystemTrapManagerIP_Type()
)
wtWebioEA12x12SnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA12x12SnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA12x12SnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12SnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA12x12SnmpSystemTrapEnable_Object = MibScalar
wtWebioEA12x12SnmpSystemTrapEnable = _WtWebioEA12x12SnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 4, 5),
    _WtWebioEA12x12SnmpSystemTrapEnable_Type()
)
wtWebioEA12x12SnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA12x12UDP_ObjectIdentity = ObjectIdentity
wtWebioEA12x12UDP = _WtWebioEA12x12UDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 5)
)
_WtWebioEA12x12UdpAdminPort_Type = Integer32
_WtWebioEA12x12UdpAdminPort_Object = MibScalar
wtWebioEA12x12UdpAdminPort = _WtWebioEA12x12UdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 5, 1),
    _WtWebioEA12x12UdpAdminPort_Type()
)
wtWebioEA12x12UdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12UdpAdminPort.setStatus("mandatory")
_WtWebioEA12x12UdpEnable_Type = OctetString
_WtWebioEA12x12UdpEnable_Object = MibScalar
wtWebioEA12x12UdpEnable = _WtWebioEA12x12UdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 5, 2),
    _WtWebioEA12x12UdpEnable_Type()
)
wtWebioEA12x12UdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12UdpEnable.setStatus("mandatory")
_WtWebioEA12x12UdpRemotePort_Type = Integer32
_WtWebioEA12x12UdpRemotePort_Object = MibScalar
wtWebioEA12x12UdpRemotePort = _WtWebioEA12x12UdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 5, 3),
    _WtWebioEA12x12UdpRemotePort_Type()
)
wtWebioEA12x12UdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12UdpRemotePort.setStatus("mandatory")
_WtWebioEA12x12Binary_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Binary = _WtWebioEA12x12Binary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6)
)


class _WtWebioEA12x12BinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA12x12BinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryModeCount_Object = MibScalar
wtWebioEA12x12BinaryModeCount = _WtWebioEA12x12BinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 1),
    _WtWebioEA12x12BinaryModeCount_Type()
)
wtWebioEA12x12BinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryModeCount.setStatus("mandatory")
_WtWebioEA12x12BinaryIfTable_Object = MibTable
wtWebioEA12x12BinaryIfTable = _WtWebioEA12x12BinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryIfTable.setStatus("mandatory")
_WtWebioEA12x12BinaryIfEntry_Object = MibTableRow
wtWebioEA12x12BinaryIfEntry = _WtWebioEA12x12BinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 2, 1)
)
wtWebioEA12x12BinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12BinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryIfEntry.setStatus("mandatory")


class _WtWebioEA12x12BinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA12x12BinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryModeNo_Object = MibTableColumn
wtWebioEA12x12BinaryModeNo = _WtWebioEA12x12BinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA12x12BinaryModeNo_Type()
)
wtWebioEA12x12BinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryModeNo.setStatus("mandatory")
_WtWebioEA12x12BinaryTable_Object = MibTable
wtWebioEA12x12BinaryTable = _WtWebioEA12x12BinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTable.setStatus("mandatory")
_WtWebioEA12x12BinaryEntry_Object = MibTableRow
wtWebioEA12x12BinaryEntry = _WtWebioEA12x12BinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1)
)
wtWebioEA12x12BinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12BinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryEntry.setStatus("mandatory")


class _WtWebioEA12x12BinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryOperationMode_Object = MibTableColumn
wtWebioEA12x12BinaryOperationMode = _WtWebioEA12x12BinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA12x12BinaryOperationMode_Type()
)
wtWebioEA12x12BinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryOperationMode.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA12x12BinaryTcpServerLocalPort = _WtWebioEA12x12BinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA12x12BinaryTcpServerLocalPort_Type()
)
wtWebioEA12x12BinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA12x12BinaryTcpServerInputTrigger = _WtWebioEA12x12BinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA12x12BinaryTcpServerInputTrigger_Type()
)
wtWebioEA12x12BinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA12x12BinaryTcpServerApplicationMode = _WtWebioEA12x12BinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA12x12BinaryTcpServerApplicationMode_Type()
)
wtWebioEA12x12BinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientLocalPort = _WtWebioEA12x12BinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA12x12BinaryTcpClientLocalPort_Type()
)
wtWebioEA12x12BinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientServerPort = _WtWebioEA12x12BinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA12x12BinaryTcpClientServerPort_Type()
)
wtWebioEA12x12BinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA12x12BinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA12x12BinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientServerIpAddr = _WtWebioEA12x12BinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA12x12BinaryTcpClientServerIpAddr_Type()
)
wtWebioEA12x12BinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA12x12BinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA12x12BinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientServerPassword = _WtWebioEA12x12BinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA12x12BinaryTcpClientServerPassword_Type()
)
wtWebioEA12x12BinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA12x12BinaryTcpClientInactivity_Type = Integer32
_WtWebioEA12x12BinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientInactivity = _WtWebioEA12x12BinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA12x12BinaryTcpClientInactivity_Type()
)
wtWebioEA12x12BinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientInputTrigger = _WtWebioEA12x12BinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA12x12BinaryTcpClientInputTrigger_Type()
)
wtWebioEA12x12BinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x12BinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientInterval = _WtWebioEA12x12BinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA12x12BinaryTcpClientInterval_Type()
)
wtWebioEA12x12BinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientApplicationMode = _WtWebioEA12x12BinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA12x12BinaryTcpClientApplicationMode_Type()
)
wtWebioEA12x12BinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA12x12BinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA12x12BinaryUdpPeerLocalPort = _WtWebioEA12x12BinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA12x12BinaryUdpPeerLocalPort_Type()
)
wtWebioEA12x12BinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA12x12BinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA12x12BinaryUdpPeerRemotePort = _WtWebioEA12x12BinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA12x12BinaryUdpPeerRemotePort_Type()
)
wtWebioEA12x12BinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA12x12BinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA12x12BinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA12x12BinaryUdpPeerRemoteIpAddr = _WtWebioEA12x12BinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA12x12BinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA12x12BinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA12x12BinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA12x12BinaryUdpPeerInputTrigger = _WtWebioEA12x12BinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA12x12BinaryUdpPeerInputTrigger_Type()
)
wtWebioEA12x12BinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA12x12BinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x12BinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA12x12BinaryUdpPeerInterval = _WtWebioEA12x12BinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA12x12BinaryUdpPeerInterval_Type()
)
wtWebioEA12x12BinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA12x12BinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x12BinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12BinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x12BinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA12x12BinaryUdpPeerApplicationMode = _WtWebioEA12x12BinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA12x12BinaryUdpPeerApplicationMode_Type()
)
wtWebioEA12x12BinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA12x12BinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryConnectedPort_Object = MibTableColumn
wtWebioEA12x12BinaryConnectedPort = _WtWebioEA12x12BinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA12x12BinaryConnectedPort_Type()
)
wtWebioEA12x12BinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryConnectedPort.setStatus("mandatory")
_WtWebioEA12x12BinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA12x12BinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA12x12BinaryConnectedIpAddr = _WtWebioEA12x12BinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA12x12BinaryConnectedIpAddr_Type()
)
wtWebioEA12x12BinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA12x12BinaryTcpServerClientHttpPort = _WtWebioEA12x12BinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA12x12BinaryTcpServerClientHttpPort_Type()
)
wtWebioEA12x12BinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA12x12BinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x12BinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12BinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x12BinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA12x12BinaryTcpClientServerHttpPort = _WtWebioEA12x12BinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA12x12BinaryTcpClientServerHttpPort_Type()
)
wtWebioEA12x12BinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12BinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA12x12Syslog_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Syslog = _WtWebioEA12x12Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 7)
)
_WtWebioEA12x12SyslogServerIP_Type = OctetString
_WtWebioEA12x12SyslogServerIP_Object = MibScalar
wtWebioEA12x12SyslogServerIP = _WtWebioEA12x12SyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 7, 1),
    _WtWebioEA12x12SyslogServerIP_Type()
)
wtWebioEA12x12SyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SyslogServerIP.setStatus("mandatory")
_WtWebioEA12x12SyslogServerPort_Type = Integer32
_WtWebioEA12x12SyslogServerPort_Object = MibScalar
wtWebioEA12x12SyslogServerPort = _WtWebioEA12x12SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 7, 2),
    _WtWebioEA12x12SyslogServerPort_Type()
)
wtWebioEA12x12SyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SyslogServerPort.setStatus("mandatory")


class _WtWebioEA12x12SyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA12x12SyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12SyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA12x12SyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA12x12SyslogSystemMessagesEnable = _WtWebioEA12x12SyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 7, 3),
    _WtWebioEA12x12SyslogSystemMessagesEnable_Type()
)
wtWebioEA12x12SyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA12x12SyslogEnable_Type = OctetString
_WtWebioEA12x12SyslogEnable_Object = MibScalar
wtWebioEA12x12SyslogEnable = _WtWebioEA12x12SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 7, 4),
    _WtWebioEA12x12SyslogEnable_Type()
)
wtWebioEA12x12SyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SyslogEnable.setStatus("mandatory")
_WtWebioEA12x12FTP_ObjectIdentity = ObjectIdentity
wtWebioEA12x12FTP = _WtWebioEA12x12FTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8)
)
_WtWebioEA12x12FTPServerIP_Type = OctetString
_WtWebioEA12x12FTPServerIP_Object = MibScalar
wtWebioEA12x12FTPServerIP = _WtWebioEA12x12FTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 1),
    _WtWebioEA12x12FTPServerIP_Type()
)
wtWebioEA12x12FTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPServerIP.setStatus("mandatory")
_WtWebioEA12x12FTPServerControlPort_Type = Integer32
_WtWebioEA12x12FTPServerControlPort_Object = MibScalar
wtWebioEA12x12FTPServerControlPort = _WtWebioEA12x12FTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 2),
    _WtWebioEA12x12FTPServerControlPort_Type()
)
wtWebioEA12x12FTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPServerControlPort.setStatus("mandatory")
_WtWebioEA12x12FTPUserName_Type = OctetString
_WtWebioEA12x12FTPUserName_Object = MibScalar
wtWebioEA12x12FTPUserName = _WtWebioEA12x12FTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 3),
    _WtWebioEA12x12FTPUserName_Type()
)
wtWebioEA12x12FTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPUserName.setStatus("mandatory")
_WtWebioEA12x12FTPPassword_Type = OctetString
_WtWebioEA12x12FTPPassword_Object = MibScalar
wtWebioEA12x12FTPPassword = _WtWebioEA12x12FTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 4),
    _WtWebioEA12x12FTPPassword_Type()
)
wtWebioEA12x12FTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPPassword.setStatus("mandatory")
_WtWebioEA12x12FTPAccount_Type = OctetString
_WtWebioEA12x12FTPAccount_Object = MibScalar
wtWebioEA12x12FTPAccount = _WtWebioEA12x12FTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 5),
    _WtWebioEA12x12FTPAccount_Type()
)
wtWebioEA12x12FTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPAccount.setStatus("mandatory")
_WtWebioEA12x12FTPOption_Type = OctetString
_WtWebioEA12x12FTPOption_Object = MibScalar
wtWebioEA12x12FTPOption = _WtWebioEA12x12FTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 6),
    _WtWebioEA12x12FTPOption_Type()
)
wtWebioEA12x12FTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPOption.setStatus("mandatory")
_WtWebioEA12x12FTPEnable_Type = OctetString
_WtWebioEA12x12FTPEnable_Object = MibScalar
wtWebioEA12x12FTPEnable = _WtWebioEA12x12FTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 3, 8, 7),
    _WtWebioEA12x12FTPEnable_Type()
)
wtWebioEA12x12FTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12FTPEnable.setStatus("mandatory")
_WtWebioEA12x12OutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA12x12OutputMode = _WtWebioEA12x12OutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 4)
)
_WtWebioEA12x12OutputModeTable_Object = MibTable
wtWebioEA12x12OutputModeTable = _WtWebioEA12x12OutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputModeTable.setStatus("mandatory")
_WtWebioEA12x12OutputModeEntry_Object = MibTableRow
wtWebioEA12x12OutputModeEntry = _WtWebioEA12x12OutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 4, 1, 1)
)
wtWebioEA12x12OutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputModeEntry.setStatus("mandatory")


class _WtWebioEA12x12OutputModeBit_Type(OctetString):
    """Custom type wtWebioEA12x12OutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12OutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA12x12OutputModeBit_Object = MibTableColumn
wtWebioEA12x12OutputModeBit = _WtWebioEA12x12OutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 4, 1, 1, 1),
    _WtWebioEA12x12OutputModeBit_Type()
)
wtWebioEA12x12OutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputModeBit.setStatus("mandatory")


class _WtWebioEA12x12SafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA12x12SafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x12SafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA12x12SafetyTimeout_Object = MibScalar
wtWebioEA12x12SafetyTimeout = _WtWebioEA12x12SafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 4, 2),
    _WtWebioEA12x12SafetyTimeout_Type()
)
wtWebioEA12x12SafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12SafetyTimeout.setStatus("mandatory")
_WtWebioEA12x12LoadControlEnable_Type = OctetString
_WtWebioEA12x12LoadControlEnable_Object = MibScalar
wtWebioEA12x12LoadControlEnable = _WtWebioEA12x12LoadControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 4, 3),
    _WtWebioEA12x12LoadControlEnable_Type()
)
wtWebioEA12x12LoadControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12LoadControlEnable.setStatus("mandatory")
_WtWebioEA12x12Alarm_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Alarm = _WtWebioEA12x12Alarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5)
)


class _WtWebioEA12x12AlarmCount_Type(Integer32):
    """Custom type wtWebioEA12x12AlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x12AlarmCount_Type.__name__ = "Integer32"
_WtWebioEA12x12AlarmCount_Object = MibScalar
wtWebioEA12x12AlarmCount = _WtWebioEA12x12AlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 1),
    _WtWebioEA12x12AlarmCount_Type()
)
wtWebioEA12x12AlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmCount.setStatus("mandatory")
_WtWebioEA12x12AlarmIfTable_Object = MibTable
wtWebioEA12x12AlarmIfTable = _WtWebioEA12x12AlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmIfTable.setStatus("mandatory")
_WtWebioEA12x12AlarmIfEntry_Object = MibTableRow
wtWebioEA12x12AlarmIfEntry = _WtWebioEA12x12AlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 2, 1)
)
wtWebioEA12x12AlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmIfEntry.setStatus("mandatory")


class _WtWebioEA12x12AlarmNo_Type(Integer32):
    """Custom type wtWebioEA12x12AlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x12AlarmNo_Type.__name__ = "Integer32"
_WtWebioEA12x12AlarmNo_Object = MibTableColumn
wtWebioEA12x12AlarmNo = _WtWebioEA12x12AlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 2, 1, 1),
    _WtWebioEA12x12AlarmNo_Type()
)
wtWebioEA12x12AlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmNo.setStatus("mandatory")
_WtWebioEA12x12AlarmTable_Object = MibTable
wtWebioEA12x12AlarmTable = _WtWebioEA12x12AlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmTable.setStatus("mandatory")
_WtWebioEA12x12AlarmEntry_Object = MibTableRow
wtWebioEA12x12AlarmEntry = _WtWebioEA12x12AlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1)
)
wtWebioEA12x12AlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmEntry.setStatus("mandatory")


class _WtWebioEA12x12AlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12AlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA12x12AlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12AlarmInputTrigger_Object = MibTableColumn
wtWebioEA12x12AlarmInputTrigger = _WtWebioEA12x12AlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 1),
    _WtWebioEA12x12AlarmInputTrigger_Type()
)
wtWebioEA12x12AlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA12x12AlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12AlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA12x12AlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12AlarmOutputTrigger_Object = MibTableColumn
wtWebioEA12x12AlarmOutputTrigger = _WtWebioEA12x12AlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 2),
    _WtWebioEA12x12AlarmOutputTrigger_Type()
)
wtWebioEA12x12AlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA12x12AlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA12x12AlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12AlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x12AlarmSystemTrigger_Object = MibTableColumn
wtWebioEA12x12AlarmSystemTrigger = _WtWebioEA12x12AlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 3),
    _WtWebioEA12x12AlarmSystemTrigger_Type()
)
wtWebioEA12x12AlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA12x12AlarmMaxCounterValue_Type = OctetString
_WtWebioEA12x12AlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA12x12AlarmMaxCounterValue = _WtWebioEA12x12AlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 4),
    _WtWebioEA12x12AlarmMaxCounterValue_Type()
)
wtWebioEA12x12AlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA12x12AlarmInterval_Type = OctetString
_WtWebioEA12x12AlarmInterval_Object = MibTableColumn
wtWebioEA12x12AlarmInterval = _WtWebioEA12x12AlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 5),
    _WtWebioEA12x12AlarmInterval_Type()
)
wtWebioEA12x12AlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmInterval.setStatus("mandatory")


class _WtWebioEA12x12AlarmEnable_Type(OctetString):
    """Custom type wtWebioEA12x12AlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12AlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA12x12AlarmEnable_Object = MibTableColumn
wtWebioEA12x12AlarmEnable = _WtWebioEA12x12AlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 6),
    _WtWebioEA12x12AlarmEnable_Type()
)
wtWebioEA12x12AlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmEnable.setStatus("mandatory")
_WtWebioEA12x12AlarmMailAddr_Type = OctetString
_WtWebioEA12x12AlarmMailAddr_Object = MibTableColumn
wtWebioEA12x12AlarmMailAddr = _WtWebioEA12x12AlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 7),
    _WtWebioEA12x12AlarmMailAddr_Type()
)
wtWebioEA12x12AlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmMailAddr.setStatus("mandatory")
_WtWebioEA12x12AlarmMailSubject_Type = OctetString
_WtWebioEA12x12AlarmMailSubject_Object = MibTableColumn
wtWebioEA12x12AlarmMailSubject = _WtWebioEA12x12AlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 8),
    _WtWebioEA12x12AlarmMailSubject_Type()
)
wtWebioEA12x12AlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmMailSubject.setStatus("mandatory")
_WtWebioEA12x12AlarmMailText_Type = OctetString
_WtWebioEA12x12AlarmMailText_Object = MibTableColumn
wtWebioEA12x12AlarmMailText = _WtWebioEA12x12AlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 9),
    _WtWebioEA12x12AlarmMailText_Type()
)
wtWebioEA12x12AlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmMailText.setStatus("mandatory")
_WtWebioEA12x12AlarmSnmpManagerIP_Type = OctetString
_WtWebioEA12x12AlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA12x12AlarmSnmpManagerIP = _WtWebioEA12x12AlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 10),
    _WtWebioEA12x12AlarmSnmpManagerIP_Type()
)
wtWebioEA12x12AlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA12x12AlarmSnmpTrapText_Type = OctetString
_WtWebioEA12x12AlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA12x12AlarmSnmpTrapText = _WtWebioEA12x12AlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 11),
    _WtWebioEA12x12AlarmSnmpTrapText_Type()
)
wtWebioEA12x12AlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA12x12AlarmUdpIpAddr_Type = OctetString
_WtWebioEA12x12AlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA12x12AlarmUdpIpAddr = _WtWebioEA12x12AlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 12),
    _WtWebioEA12x12AlarmUdpIpAddr_Type()
)
wtWebioEA12x12AlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA12x12AlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA12x12AlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12AlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA12x12AlarmUdpPort_Object = MibTableColumn
wtWebioEA12x12AlarmUdpPort = _WtWebioEA12x12AlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 13),
    _WtWebioEA12x12AlarmUdpPort_Type()
)
wtWebioEA12x12AlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmUdpPort.setStatus("mandatory")
_WtWebioEA12x12AlarmUdpText_Type = OctetString
_WtWebioEA12x12AlarmUdpText_Object = MibTableColumn
wtWebioEA12x12AlarmUdpText = _WtWebioEA12x12AlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 14),
    _WtWebioEA12x12AlarmUdpText_Type()
)
wtWebioEA12x12AlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmUdpText.setStatus("mandatory")
_WtWebioEA12x12AlarmTcpIpAddr_Type = OctetString
_WtWebioEA12x12AlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA12x12AlarmTcpIpAddr = _WtWebioEA12x12AlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 15),
    _WtWebioEA12x12AlarmTcpIpAddr_Type()
)
wtWebioEA12x12AlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA12x12AlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA12x12AlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12AlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA12x12AlarmTcpPort_Object = MibTableColumn
wtWebioEA12x12AlarmTcpPort = _WtWebioEA12x12AlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 16),
    _WtWebioEA12x12AlarmTcpPort_Type()
)
wtWebioEA12x12AlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmTcpPort.setStatus("mandatory")
_WtWebioEA12x12AlarmTcpText_Type = OctetString
_WtWebioEA12x12AlarmTcpText_Object = MibTableColumn
wtWebioEA12x12AlarmTcpText = _WtWebioEA12x12AlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 17),
    _WtWebioEA12x12AlarmTcpText_Type()
)
wtWebioEA12x12AlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmTcpText.setStatus("mandatory")
_WtWebioEA12x12AlarmSyslogIpAddr_Type = OctetString
_WtWebioEA12x12AlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA12x12AlarmSyslogIpAddr = _WtWebioEA12x12AlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 18),
    _WtWebioEA12x12AlarmSyslogIpAddr_Type()
)
wtWebioEA12x12AlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA12x12AlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA12x12AlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x12AlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA12x12AlarmSyslogPort_Object = MibTableColumn
wtWebioEA12x12AlarmSyslogPort = _WtWebioEA12x12AlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 19),
    _WtWebioEA12x12AlarmSyslogPort_Type()
)
wtWebioEA12x12AlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSyslogPort.setStatus("mandatory")
_WtWebioEA12x12AlarmSyslogText_Type = OctetString
_WtWebioEA12x12AlarmSyslogText_Object = MibTableColumn
wtWebioEA12x12AlarmSyslogText = _WtWebioEA12x12AlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 20),
    _WtWebioEA12x12AlarmSyslogText_Type()
)
wtWebioEA12x12AlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSyslogText.setStatus("mandatory")
_WtWebioEA12x12AlarmFtpDataPort_Type = OctetString
_WtWebioEA12x12AlarmFtpDataPort_Object = MibTableColumn
wtWebioEA12x12AlarmFtpDataPort = _WtWebioEA12x12AlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 21),
    _WtWebioEA12x12AlarmFtpDataPort_Type()
)
wtWebioEA12x12AlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA12x12AlarmFtpFileName_Type = OctetString
_WtWebioEA12x12AlarmFtpFileName_Object = MibTableColumn
wtWebioEA12x12AlarmFtpFileName = _WtWebioEA12x12AlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 22),
    _WtWebioEA12x12AlarmFtpFileName_Type()
)
wtWebioEA12x12AlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmFtpFileName.setStatus("mandatory")
_WtWebioEA12x12AlarmFtpText_Type = OctetString
_WtWebioEA12x12AlarmFtpText_Object = MibTableColumn
wtWebioEA12x12AlarmFtpText = _WtWebioEA12x12AlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 23),
    _WtWebioEA12x12AlarmFtpText_Type()
)
wtWebioEA12x12AlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmFtpText.setStatus("mandatory")


class _WtWebioEA12x12AlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA12x12AlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12AlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA12x12AlarmFtpOption_Object = MibTableColumn
wtWebioEA12x12AlarmFtpOption = _WtWebioEA12x12AlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 24),
    _WtWebioEA12x12AlarmFtpOption_Type()
)
wtWebioEA12x12AlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmFtpOption.setStatus("mandatory")
_WtWebioEA12x12AlarmTimerCron_Type = OctetString
_WtWebioEA12x12AlarmTimerCron_Object = MibTableColumn
wtWebioEA12x12AlarmTimerCron = _WtWebioEA12x12AlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 25),
    _WtWebioEA12x12AlarmTimerCron_Type()
)
wtWebioEA12x12AlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmTimerCron.setStatus("mandatory")
_WtWebioEA12x12AlarmMailReleaseSubject_Type = OctetString
_WtWebioEA12x12AlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA12x12AlarmMailReleaseSubject = _WtWebioEA12x12AlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 26),
    _WtWebioEA12x12AlarmMailReleaseSubject_Type()
)
wtWebioEA12x12AlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA12x12AlarmMailReleaseText_Type = OctetString
_WtWebioEA12x12AlarmMailReleaseText_Object = MibTableColumn
wtWebioEA12x12AlarmMailReleaseText = _WtWebioEA12x12AlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 27),
    _WtWebioEA12x12AlarmMailReleaseText_Type()
)
wtWebioEA12x12AlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA12x12AlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA12x12AlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA12x12AlarmSnmpTrapReleaseText = _WtWebioEA12x12AlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 28),
    _WtWebioEA12x12AlarmSnmpTrapReleaseText_Type()
)
wtWebioEA12x12AlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA12x12AlarmUdpReleaseText_Type = OctetString
_WtWebioEA12x12AlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA12x12AlarmUdpReleaseText = _WtWebioEA12x12AlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 29),
    _WtWebioEA12x12AlarmUdpReleaseText_Type()
)
wtWebioEA12x12AlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA12x12AlarmTcpReleaseText_Type = OctetString
_WtWebioEA12x12AlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA12x12AlarmTcpReleaseText = _WtWebioEA12x12AlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 30),
    _WtWebioEA12x12AlarmTcpReleaseText_Type()
)
wtWebioEA12x12AlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA12x12AlarmSyslogReleaseText_Type = OctetString
_WtWebioEA12x12AlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA12x12AlarmSyslogReleaseText = _WtWebioEA12x12AlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 31),
    _WtWebioEA12x12AlarmSyslogReleaseText_Type()
)
wtWebioEA12x12AlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA12x12AlarmFtpReleaseText_Type = OctetString
_WtWebioEA12x12AlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA12x12AlarmFtpReleaseText = _WtWebioEA12x12AlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 3, 1, 32),
    _WtWebioEA12x12AlarmFtpReleaseText_Type()
)
wtWebioEA12x12AlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12AlarmFtpReleaseText.setStatus("mandatory")


class _WtWebioEA12x12LoadControlView_Type(OctetString):
    """Custom type wtWebioEA12x12LoadControlView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12LoadControlView_Type.__name__ = "OctetString"
_WtWebioEA12x12LoadControlView_Object = MibScalar
wtWebioEA12x12LoadControlView = _WtWebioEA12x12LoadControlView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 4),
    _WtWebioEA12x12LoadControlView_Type()
)
wtWebioEA12x12LoadControlView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12LoadControlView.setStatus("mandatory")


class _WtWebioEA12x12LCShutDownView_Type(OctetString):
    """Custom type wtWebioEA12x12LCShutDownView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12LCShutDownView_Type.__name__ = "OctetString"
_WtWebioEA12x12LCShutDownView_Object = MibScalar
wtWebioEA12x12LCShutDownView = _WtWebioEA12x12LCShutDownView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 1, 5, 5),
    _WtWebioEA12x12LCShutDownView_Type()
)
wtWebioEA12x12LCShutDownView.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12LCShutDownView.setStatus("mandatory")
_WtWebioEA12x12Ports_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Ports = _WtWebioEA12x12Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2)
)
_WtWebioEA12x12InputPortTable_Object = MibTable
wtWebioEA12x12InputPortTable = _WtWebioEA12x12InputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12InputPortTable.setStatus("mandatory")
_WtWebioEA12x12InputPortEntry_Object = MibTableRow
wtWebioEA12x12InputPortEntry = _WtWebioEA12x12InputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1)
)
wtWebioEA12x12InputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12InputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12InputPortEntry.setStatus("mandatory")
_WtWebioEA12x12PortInputName_Type = OctetString
_WtWebioEA12x12PortInputName_Object = MibTableColumn
wtWebioEA12x12PortInputName = _WtWebioEA12x12PortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1, 1),
    _WtWebioEA12x12PortInputName_Type()
)
wtWebioEA12x12PortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortInputName.setStatus("mandatory")
_WtWebioEA12x12PortInputText_Type = OctetString
_WtWebioEA12x12PortInputText_Object = MibTableColumn
wtWebioEA12x12PortInputText = _WtWebioEA12x12PortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1, 2),
    _WtWebioEA12x12PortInputText_Type()
)
wtWebioEA12x12PortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortInputText.setStatus("mandatory")


class _WtWebioEA12x12PortInputMode_Type(OctetString):
    """Custom type wtWebioEA12x12PortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortInputMode_Type.__name__ = "OctetString"
_WtWebioEA12x12PortInputMode_Object = MibTableColumn
wtWebioEA12x12PortInputMode = _WtWebioEA12x12PortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1, 3),
    _WtWebioEA12x12PortInputMode_Type()
)
wtWebioEA12x12PortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortInputMode.setStatus("mandatory")
_WtWebioEA12x12PortInputFilter_Type = Integer32
_WtWebioEA12x12PortInputFilter_Object = MibTableColumn
wtWebioEA12x12PortInputFilter = _WtWebioEA12x12PortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1, 4),
    _WtWebioEA12x12PortInputFilter_Type()
)
wtWebioEA12x12PortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortInputFilter.setStatus("mandatory")


class _WtWebioEA12x12PortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA12x12PortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA12x12PortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA12x12PortInputBicountPulsePolarity = _WtWebioEA12x12PortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1, 5),
    _WtWebioEA12x12PortInputBicountPulsePolarity_Type()
)
wtWebioEA12x12PortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA12x12PortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA12x12PortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA12x12PortInputBicountInactivTimeout = _WtWebioEA12x12PortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 1, 1, 6),
    _WtWebioEA12x12PortInputBicountInactivTimeout_Type()
)
wtWebioEA12x12PortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA12x12OutputPortTable_Object = MibTable
wtWebioEA12x12OutputPortTable = _WtWebioEA12x12OutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputPortTable.setStatus("mandatory")
_WtWebioEA12x12OutputPortEntry_Object = MibTableRow
wtWebioEA12x12OutputPortEntry = _WtWebioEA12x12OutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1)
)
wtWebioEA12x12OutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x12OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x12OutputPortEntry.setStatus("mandatory")
_WtWebioEA12x12PortOutputName_Type = OctetString
_WtWebioEA12x12PortOutputName_Object = MibTableColumn
wtWebioEA12x12PortOutputName = _WtWebioEA12x12PortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 1),
    _WtWebioEA12x12PortOutputName_Type()
)
wtWebioEA12x12PortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortOutputName.setStatus("mandatory")
_WtWebioEA12x12PortOutputText_Type = OctetString
_WtWebioEA12x12PortOutputText_Object = MibTableColumn
wtWebioEA12x12PortOutputText = _WtWebioEA12x12PortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 2),
    _WtWebioEA12x12PortOutputText_Type()
)
wtWebioEA12x12PortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortOutputText.setStatus("mandatory")
_WtWebioEA12x12PortOutputGroupMode_Type = OctetString
_WtWebioEA12x12PortOutputGroupMode_Object = MibTableColumn
wtWebioEA12x12PortOutputGroupMode = _WtWebioEA12x12PortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 3),
    _WtWebioEA12x12PortOutputGroupMode_Type()
)
wtWebioEA12x12PortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortOutputGroupMode.setStatus("mandatory")
_WtWebioEA12x12PortOutputSafetyState_Type = OctetString
_WtWebioEA12x12PortOutputSafetyState_Object = MibTableColumn
wtWebioEA12x12PortOutputSafetyState = _WtWebioEA12x12PortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 4),
    _WtWebioEA12x12PortOutputSafetyState_Type()
)
wtWebioEA12x12PortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA12x12PortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA12x12PortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA12x12PortLogicInputMask_Object = MibTableColumn
wtWebioEA12x12PortLogicInputMask = _WtWebioEA12x12PortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 5),
    _WtWebioEA12x12PortLogicInputMask_Type()
)
wtWebioEA12x12PortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortLogicInputMask.setStatus("mandatory")


class _WtWebioEA12x12PortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA12x12PortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA12x12PortLogicInputInverter_Object = MibTableColumn
wtWebioEA12x12PortLogicInputInverter = _WtWebioEA12x12PortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 6),
    _WtWebioEA12x12PortLogicInputInverter_Type()
)
wtWebioEA12x12PortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA12x12PortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA12x12PortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA12x12PortLogicFunction_Object = MibTableColumn
wtWebioEA12x12PortLogicFunction = _WtWebioEA12x12PortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 7),
    _WtWebioEA12x12PortLogicFunction_Type()
)
wtWebioEA12x12PortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortLogicFunction.setStatus("mandatory")


class _WtWebioEA12x12PortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA12x12PortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA12x12PortLogicOutputInverter_Object = MibTableColumn
wtWebioEA12x12PortLogicOutputInverter = _WtWebioEA12x12PortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 8),
    _WtWebioEA12x12PortLogicOutputInverter_Type()
)
wtWebioEA12x12PortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA12x12PortPulseDuration_Type = Integer32
_WtWebioEA12x12PortPulseDuration_Object = MibTableColumn
wtWebioEA12x12PortPulseDuration = _WtWebioEA12x12PortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 9),
    _WtWebioEA12x12PortPulseDuration_Type()
)
wtWebioEA12x12PortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortPulseDuration.setStatus("mandatory")


class _WtWebioEA12x12PortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA12x12PortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x12PortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA12x12PortPulsePolarity_Object = MibTableColumn
wtWebioEA12x12PortPulsePolarity = _WtWebioEA12x12PortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 2, 2, 1, 10),
    _WtWebioEA12x12PortPulsePolarity_Type()
)
wtWebioEA12x12PortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12PortPulsePolarity.setStatus("mandatory")
_WtWebioEA12x12Manufact_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Manufact = _WtWebioEA12x12Manufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 3)
)
_WtWebioEA12x12MfName_Type = OctetString
_WtWebioEA12x12MfName_Object = MibScalar
wtWebioEA12x12MfName = _WtWebioEA12x12MfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 3, 1),
    _WtWebioEA12x12MfName_Type()
)
wtWebioEA12x12MfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MfName.setStatus("mandatory")
_WtWebioEA12x12MfAddr_Type = OctetString
_WtWebioEA12x12MfAddr_Object = MibScalar
wtWebioEA12x12MfAddr = _WtWebioEA12x12MfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 3, 2),
    _WtWebioEA12x12MfAddr_Type()
)
wtWebioEA12x12MfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MfAddr.setStatus("mandatory")
_WtWebioEA12x12MfHotline_Type = OctetString
_WtWebioEA12x12MfHotline_Object = MibScalar
wtWebioEA12x12MfHotline = _WtWebioEA12x12MfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 3, 3),
    _WtWebioEA12x12MfHotline_Type()
)
wtWebioEA12x12MfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MfHotline.setStatus("mandatory")
_WtWebioEA12x12MfInternet_Type = OctetString
_WtWebioEA12x12MfInternet_Object = MibScalar
wtWebioEA12x12MfInternet = _WtWebioEA12x12MfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 3, 4),
    _WtWebioEA12x12MfInternet_Type()
)
wtWebioEA12x12MfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MfInternet.setStatus("mandatory")
_WtWebioEA12x12MfDeviceTyp_Type = OctetString
_WtWebioEA12x12MfDeviceTyp_Object = MibScalar
wtWebioEA12x12MfDeviceTyp = _WtWebioEA12x12MfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 3, 3, 5),
    _WtWebioEA12x12MfDeviceTyp_Type()
)
wtWebioEA12x12MfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12MfDeviceTyp.setStatus("mandatory")
_WtWebioEA12x12Diag_ObjectIdentity = ObjectIdentity
wtWebioEA12x12Diag = _WtWebioEA12x12Diag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 4)
)
_WtWebioEA12x12DiagErrorCount_Type = Integer32
_WtWebioEA12x12DiagErrorCount_Object = MibScalar
wtWebioEA12x12DiagErrorCount = _WtWebioEA12x12DiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 4, 1),
    _WtWebioEA12x12DiagErrorCount_Type()
)
wtWebioEA12x12DiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12DiagErrorCount.setStatus("mandatory")
_WtWebioEA12x12DiagBinaryError_Type = OctetString
_WtWebioEA12x12DiagBinaryError_Object = MibScalar
wtWebioEA12x12DiagBinaryError = _WtWebioEA12x12DiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 4, 2),
    _WtWebioEA12x12DiagBinaryError_Type()
)
wtWebioEA12x12DiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12DiagBinaryError.setStatus("mandatory")
_WtWebioEA12x12DiagErrorIndex_Type = Integer32
_WtWebioEA12x12DiagErrorIndex_Object = MibScalar
wtWebioEA12x12DiagErrorIndex = _WtWebioEA12x12DiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 4, 3),
    _WtWebioEA12x12DiagErrorIndex_Type()
)
wtWebioEA12x12DiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x12DiagErrorIndex.setStatus("mandatory")
_WtWebioEA12x12DiagErrorMessage_Type = OctetString
_WtWebioEA12x12DiagErrorMessage_Object = MibScalar
wtWebioEA12x12DiagErrorMessage = _WtWebioEA12x12DiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 4, 4),
    _WtWebioEA12x12DiagErrorMessage_Type()
)
wtWebioEA12x12DiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12DiagErrorMessage.setStatus("mandatory")
_WtWebioEA12x12DiagErrorClear_Type = Integer32
_WtWebioEA12x12DiagErrorClear_Object = MibScalar
wtWebioEA12x12DiagErrorClear = _WtWebioEA12x12DiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 4, 5),
    _WtWebioEA12x12DiagErrorClear_Type()
)
wtWebioEA12x12DiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA12x12DiagErrorClear.setStatus("mandatory")
_WtWebioEA2x2_ObjectIdentity = ObjectIdentity
wtWebioEA2x2 = _WtWebioEA2x2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13)
)
_WtWebioEA2x2InOut_ObjectIdentity = ObjectIdentity
wtWebioEA2x2InOut = _WtWebioEA2x2InOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1)
)


class _WtWebioEA2x2Inputs_Type(Integer32):
    """Custom type wtWebioEA2x2Inputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2Inputs_Type.__name__ = "Integer32"
_WtWebioEA2x2Inputs_Object = MibScalar
wtWebioEA2x2Inputs = _WtWebioEA2x2Inputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 1),
    _WtWebioEA2x2Inputs_Type()
)
wtWebioEA2x2Inputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2Inputs.setStatus("mandatory")


class _WtWebioEA2x2Outputs_Type(Integer32):
    """Custom type wtWebioEA2x2Outputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2Outputs_Type.__name__ = "Integer32"
_WtWebioEA2x2Outputs_Object = MibScalar
wtWebioEA2x2Outputs = _WtWebioEA2x2Outputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 2),
    _WtWebioEA2x2Outputs_Type()
)
wtWebioEA2x2Outputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2Outputs.setStatus("mandatory")
_WtWebioEA2x2InputTable_Object = MibTable
wtWebioEA2x2InputTable = _WtWebioEA2x2InputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2InputTable.setStatus("mandatory")
_WtWebioEA2x2InputEntry_Object = MibTableRow
wtWebioEA2x2InputEntry = _WtWebioEA2x2InputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 3, 1)
)
wtWebioEA2x2InputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2InputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2InputEntry.setStatus("mandatory")


class _WtWebioEA2x2InputNo_Type(Integer32):
    """Custom type wtWebioEA2x2InputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2InputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2InputNo_Object = MibTableColumn
wtWebioEA2x2InputNo = _WtWebioEA2x2InputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 3, 1, 1),
    _WtWebioEA2x2InputNo_Type()
)
wtWebioEA2x2InputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2InputNo.setStatus("mandatory")


class _WtWebioEA2x2InputCounter_Type(Integer32):
    """Custom type wtWebioEA2x2InputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2InputCounter_Type.__name__ = "Integer32"
_WtWebioEA2x2InputCounter_Object = MibTableColumn
wtWebioEA2x2InputCounter = _WtWebioEA2x2InputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 3, 1, 2),
    _WtWebioEA2x2InputCounter_Type()
)
wtWebioEA2x2InputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2InputCounter.setStatus("mandatory")
_WtWebioEA2x2InputCounterClear_Type = Integer32
_WtWebioEA2x2InputCounterClear_Object = MibTableColumn
wtWebioEA2x2InputCounterClear = _WtWebioEA2x2InputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 3, 1, 3),
    _WtWebioEA2x2InputCounterClear_Type()
)
wtWebioEA2x2InputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2InputCounterClear.setStatus("mandatory")


class _WtWebioEA2x2InputState_Type(Integer32):
    """Custom type wtWebioEA2x2InputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2InputState-OFF", 0),
          ("wtWebioEA2x2InputState-ON", 1))
    )


_WtWebioEA2x2InputState_Type.__name__ = "Integer32"
_WtWebioEA2x2InputState_Object = MibTableColumn
wtWebioEA2x2InputState = _WtWebioEA2x2InputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 3, 1, 4),
    _WtWebioEA2x2InputState_Type()
)
wtWebioEA2x2InputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2InputState.setStatus("mandatory")
_WtWebioEA2x2InputValue_Type = Integer32
_WtWebioEA2x2InputValue_Object = MibScalar
wtWebioEA2x2InputValue = _WtWebioEA2x2InputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 4),
    _WtWebioEA2x2InputValue_Type()
)
wtWebioEA2x2InputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2InputValue.setStatus("mandatory")
_WtWebioEA2x2OutputTable_Object = MibTable
wtWebioEA2x2OutputTable = _WtWebioEA2x2OutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputTable.setStatus("mandatory")
_WtWebioEA2x2OutputEntry_Object = MibTableRow
wtWebioEA2x2OutputEntry = _WtWebioEA2x2OutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 5, 1)
)
wtWebioEA2x2OutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputEntry.setStatus("mandatory")


class _WtWebioEA2x2OutputNo_Type(Integer32):
    """Custom type wtWebioEA2x2OutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2OutputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2OutputNo_Object = MibTableColumn
wtWebioEA2x2OutputNo = _WtWebioEA2x2OutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 5, 1, 1),
    _WtWebioEA2x2OutputNo_Type()
)
wtWebioEA2x2OutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputNo.setStatus("mandatory")


class _WtWebioEA2x2OutputState_Type(Integer32):
    """Custom type wtWebioEA2x2OutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2OutputState-OFF", 0),
          ("wtWebioEA2x2OutputState-ON", 1))
    )


_WtWebioEA2x2OutputState_Type.__name__ = "Integer32"
_WtWebioEA2x2OutputState_Object = MibTableColumn
wtWebioEA2x2OutputState = _WtWebioEA2x2OutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 5, 1, 2),
    _WtWebioEA2x2OutputState_Type()
)
wtWebioEA2x2OutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputState.setStatus("mandatory")
_WtWebioEA2x2OutputValue_Type = Integer32
_WtWebioEA2x2OutputValue_Object = MibScalar
wtWebioEA2x2OutputValue = _WtWebioEA2x2OutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 6),
    _WtWebioEA2x2OutputValue_Type()
)
wtWebioEA2x2OutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputValue.setStatus("mandatory")


class _WtWebioEA2x2SetOutput_Type(OctetString):
    """Custom type wtWebioEA2x2SetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA2x2SetOutput_Type.__name__ = "OctetString"
_WtWebioEA2x2SetOutput_Object = MibScalar
wtWebioEA2x2SetOutput = _WtWebioEA2x2SetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 1, 7),
    _WtWebioEA2x2SetOutput_Type()
)
wtWebioEA2x2SetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SetOutput.setStatus("mandatory")
_WtWebioEA2x2SessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA2x2SessCntrl = _WtWebioEA2x2SessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 2)
)
_WtWebioEA2x2SessCntrlPassword_Type = OctetString
_WtWebioEA2x2SessCntrlPassword_Object = MibScalar
wtWebioEA2x2SessCntrlPassword = _WtWebioEA2x2SessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 2, 1),
    _WtWebioEA2x2SessCntrlPassword_Type()
)
wtWebioEA2x2SessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SessCntrlPassword.setStatus("mandatory")


class _WtWebioEA2x2SessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA2x2SessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2SessCntrl-NoSession", 0),
          ("wtWebioEA2x2SessCntrl-Session", 1))
    )


_WtWebioEA2x2SessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA2x2SessCntrlConfigMode_Object = MibScalar
wtWebioEA2x2SessCntrlConfigMode = _WtWebioEA2x2SessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 2, 2),
    _WtWebioEA2x2SessCntrlConfigMode_Type()
)
wtWebioEA2x2SessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2SessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA2x2SessCntrlLogout_Type = Integer32
_WtWebioEA2x2SessCntrlLogout_Object = MibScalar
wtWebioEA2x2SessCntrlLogout = _WtWebioEA2x2SessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 2, 3),
    _WtWebioEA2x2SessCntrlLogout_Type()
)
wtWebioEA2x2SessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SessCntrlLogout.setStatus("mandatory")
_WtWebioEA2x2SessCntrlAdminPassword_Type = OctetString
_WtWebioEA2x2SessCntrlAdminPassword_Object = MibScalar
wtWebioEA2x2SessCntrlAdminPassword = _WtWebioEA2x2SessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 2, 4),
    _WtWebioEA2x2SessCntrlAdminPassword_Type()
)
wtWebioEA2x2SessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA2x2SessCntrlConfigPassword_Type = OctetString
_WtWebioEA2x2SessCntrlConfigPassword_Object = MibScalar
wtWebioEA2x2SessCntrlConfigPassword = _WtWebioEA2x2SessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 2, 5),
    _WtWebioEA2x2SessCntrlConfigPassword_Type()
)
wtWebioEA2x2SessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA2x2Config_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Config = _WtWebioEA2x2Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3)
)
_WtWebioEA2x2Device_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Device = _WtWebioEA2x2Device_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1)
)
_WtWebioEA2x2Text_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Text = _WtWebioEA2x2Text_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 1)
)
_WtWebioEA2x2DeviceName_Type = OctetString
_WtWebioEA2x2DeviceName_Object = MibScalar
wtWebioEA2x2DeviceName = _WtWebioEA2x2DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 1, 1),
    _WtWebioEA2x2DeviceName_Type()
)
wtWebioEA2x2DeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DeviceName.setStatus("mandatory")
_WtWebioEA2x2DeviceText_Type = OctetString
_WtWebioEA2x2DeviceText_Object = MibScalar
wtWebioEA2x2DeviceText = _WtWebioEA2x2DeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 1, 2),
    _WtWebioEA2x2DeviceText_Type()
)
wtWebioEA2x2DeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DeviceText.setStatus("mandatory")
_WtWebioEA2x2DeviceLocation_Type = OctetString
_WtWebioEA2x2DeviceLocation_Object = MibScalar
wtWebioEA2x2DeviceLocation = _WtWebioEA2x2DeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 1, 3),
    _WtWebioEA2x2DeviceLocation_Type()
)
wtWebioEA2x2DeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DeviceLocation.setStatus("mandatory")
_WtWebioEA2x2DeviceContact_Type = OctetString
_WtWebioEA2x2DeviceContact_Object = MibScalar
wtWebioEA2x2DeviceContact = _WtWebioEA2x2DeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 1, 4),
    _WtWebioEA2x2DeviceContact_Type()
)
wtWebioEA2x2DeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DeviceContact.setStatus("mandatory")
_WtWebioEA2x2TimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA2x2TimeDate = _WtWebioEA2x2TimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2)
)
_WtWebioEA2x2TimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA2x2TimeZone = _WtWebioEA2x2TimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1)
)
_WtWebioEA2x2TzOffsetHrs_Type = Integer32
_WtWebioEA2x2TzOffsetHrs_Object = MibScalar
wtWebioEA2x2TzOffsetHrs = _WtWebioEA2x2TzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 1),
    _WtWebioEA2x2TzOffsetHrs_Type()
)
wtWebioEA2x2TzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2TzOffsetMin_Type = Integer32
_WtWebioEA2x2TzOffsetMin_Object = MibScalar
wtWebioEA2x2TzOffsetMin = _WtWebioEA2x2TzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 2),
    _WtWebioEA2x2TzOffsetMin_Type()
)
wtWebioEA2x2TzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2TzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2TzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2TzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2TzEnable_Object = MibScalar
wtWebioEA2x2TzEnable = _WtWebioEA2x2TzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 3),
    _WtWebioEA2x2TzEnable_Type()
)
wtWebioEA2x2TzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TzEnable.setStatus("mandatory")
_WtWebioEA2x2StTzOffsetHrs_Type = Integer32
_WtWebioEA2x2StTzOffsetHrs_Object = MibScalar
wtWebioEA2x2StTzOffsetHrs = _WtWebioEA2x2StTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 4),
    _WtWebioEA2x2StTzOffsetHrs_Type()
)
wtWebioEA2x2StTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2StTzOffsetMin_Type = Integer32
_WtWebioEA2x2StTzOffsetMin_Object = MibScalar
wtWebioEA2x2StTzOffsetMin = _WtWebioEA2x2StTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 5),
    _WtWebioEA2x2StTzOffsetMin_Type()
)
wtWebioEA2x2StTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2StTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2StTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2StTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2StTzEnable_Object = MibScalar
wtWebioEA2x2StTzEnable = _WtWebioEA2x2StTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 6),
    _WtWebioEA2x2StTzEnable_Type()
)
wtWebioEA2x2StTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzEnable.setStatus("mandatory")


class _WtWebioEA2x2StTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA2x2StTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2StartMonth-April", 4),
          ("wtWebioEA2x2StartMonth-August", 8),
          ("wtWebioEA2x2StartMonth-December", 12),
          ("wtWebioEA2x2StartMonth-February", 2),
          ("wtWebioEA2x2StartMonth-January", 1),
          ("wtWebioEA2x2StartMonth-July", 7),
          ("wtWebioEA2x2StartMonth-June", 6),
          ("wtWebioEA2x2StartMonth-March", 3),
          ("wtWebioEA2x2StartMonth-May", 5),
          ("wtWebioEA2x2StartMonth-November", 11),
          ("wtWebioEA2x2StartMonth-October", 10),
          ("wtWebioEA2x2StartMonth-September", 9))
    )


_WtWebioEA2x2StTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2StTzStartMonth_Object = MibScalar
wtWebioEA2x2StTzStartMonth = _WtWebioEA2x2StTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 7),
    _WtWebioEA2x2StTzStartMonth_Type()
)
wtWebioEA2x2StTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStartMonth.setStatus("mandatory")


class _WtWebioEA2x2StTzStartMode_Type(Integer32):
    """Custom type wtWebioEA2x2StTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2StartMode-first", 1),
          ("wtWebioEA2x2StartMode-fourth", 4),
          ("wtWebioEA2x2StartMode-last", 5),
          ("wtWebioEA2x2StartMode-second", 2),
          ("wtWebioEA2x2StartMode-third", 3))
    )


_WtWebioEA2x2StTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA2x2StTzStartMode_Object = MibScalar
wtWebioEA2x2StTzStartMode = _WtWebioEA2x2StTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 8),
    _WtWebioEA2x2StTzStartMode_Type()
)
wtWebioEA2x2StTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStartMode.setStatus("mandatory")


class _WtWebioEA2x2StTzStartWday_Type(Integer32):
    """Custom type wtWebioEA2x2StTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2StartWday-Friday", 6),
          ("wtWebioEA2x2StartWday-Monday", 2),
          ("wtWebioEA2x2StartWday-Saturday", 7),
          ("wtWebioEA2x2StartWday-Sunday", 1),
          ("wtWebioEA2x2StartWday-Thursday", 4),
          ("wtWebioEA2x2StartWday-Tuesday", 3),
          ("wtWebioEA2x2StartWday-Wednesday", 5))
    )


_WtWebioEA2x2StTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA2x2StTzStartWday_Object = MibScalar
wtWebioEA2x2StTzStartWday = _WtWebioEA2x2StTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 9),
    _WtWebioEA2x2StTzStartWday_Type()
)
wtWebioEA2x2StTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStartWday.setStatus("mandatory")
_WtWebioEA2x2StTzStartHrs_Type = Integer32
_WtWebioEA2x2StTzStartHrs_Object = MibScalar
wtWebioEA2x2StTzStartHrs = _WtWebioEA2x2StTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 10),
    _WtWebioEA2x2StTzStartHrs_Type()
)
wtWebioEA2x2StTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStartHrs.setStatus("mandatory")
_WtWebioEA2x2StTzStartMin_Type = Integer32
_WtWebioEA2x2StTzStartMin_Object = MibScalar
wtWebioEA2x2StTzStartMin = _WtWebioEA2x2StTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 11),
    _WtWebioEA2x2StTzStartMin_Type()
)
wtWebioEA2x2StTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStartMin.setStatus("mandatory")


class _WtWebioEA2x2StTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA2x2StTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2StopMonth-April", 4),
          ("wtWebioEA2x2StopMonth-August", 8),
          ("wtWebioEA2x2StopMonth-December", 12),
          ("wtWebioEA2x2StopMonth-February", 2),
          ("wtWebioEA2x2StopMonth-January", 1),
          ("wtWebioEA2x2StopMonth-July", 7),
          ("wtWebioEA2x2StopMonth-June", 6),
          ("wtWebioEA2x2StopMonth-March", 3),
          ("wtWebioEA2x2StopMonth-May", 5),
          ("wtWebioEA2x2StopMonth-November", 11),
          ("wtWebioEA2x2StopMonth-October", 10),
          ("wtWebioEA2x2StopMonth-September", 9))
    )


_WtWebioEA2x2StTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2StTzStopMonth_Object = MibScalar
wtWebioEA2x2StTzStopMonth = _WtWebioEA2x2StTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 12),
    _WtWebioEA2x2StTzStopMonth_Type()
)
wtWebioEA2x2StTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStopMonth.setStatus("mandatory")


class _WtWebioEA2x2StTzStopMode_Type(Integer32):
    """Custom type wtWebioEA2x2StTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2StopMode-first", 1),
          ("wtWebioEA2x2StopMode-fourth", 4),
          ("wtWebioEA2x2StopMode-last", 5),
          ("wtWebioEA2x2StopMode-second", 2),
          ("wtWebioEA2x2StopMode-third", 3))
    )


_WtWebioEA2x2StTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA2x2StTzStopMode_Object = MibScalar
wtWebioEA2x2StTzStopMode = _WtWebioEA2x2StTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 13),
    _WtWebioEA2x2StTzStopMode_Type()
)
wtWebioEA2x2StTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStopMode.setStatus("mandatory")


class _WtWebioEA2x2StTzStopWday_Type(Integer32):
    """Custom type wtWebioEA2x2StTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2StopWday-Friday", 6),
          ("wtWebioEA2x2StopWday-Monday", 2),
          ("wtWebioEA2x2StopWday-Saturday", 7),
          ("wtWebioEA2x2StopWday-Sunday", 1),
          ("wtWebioEA2x2StopWday-Thursday", 4),
          ("wtWebioEA2x2StopWday-Tuesday", 3),
          ("wtWebioEA2x2StopWday-Wednesday", 5))
    )


_WtWebioEA2x2StTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA2x2StTzStopWday_Object = MibScalar
wtWebioEA2x2StTzStopWday = _WtWebioEA2x2StTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 14),
    _WtWebioEA2x2StTzStopWday_Type()
)
wtWebioEA2x2StTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStopWday.setStatus("mandatory")
_WtWebioEA2x2StTzStopHrs_Type = Integer32
_WtWebioEA2x2StTzStopHrs_Object = MibScalar
wtWebioEA2x2StTzStopHrs = _WtWebioEA2x2StTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 15),
    _WtWebioEA2x2StTzStopHrs_Type()
)
wtWebioEA2x2StTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStopHrs.setStatus("mandatory")
_WtWebioEA2x2StTzStopMin_Type = Integer32
_WtWebioEA2x2StTzStopMin_Object = MibScalar
wtWebioEA2x2StTzStopMin = _WtWebioEA2x2StTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 1, 16),
    _WtWebioEA2x2StTzStopMin_Type()
)
wtWebioEA2x2StTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2StTzStopMin.setStatus("mandatory")
_WtWebioEA2x2TimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA2x2TimeServer = _WtWebioEA2x2TimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 2)
)
_WtWebioEA2x2TimeServer1_Type = OctetString
_WtWebioEA2x2TimeServer1_Object = MibScalar
wtWebioEA2x2TimeServer1 = _WtWebioEA2x2TimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 2, 1),
    _WtWebioEA2x2TimeServer1_Type()
)
wtWebioEA2x2TimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TimeServer1.setStatus("mandatory")
_WtWebioEA2x2TimeServer2_Type = OctetString
_WtWebioEA2x2TimeServer2_Object = MibScalar
wtWebioEA2x2TimeServer2 = _WtWebioEA2x2TimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 2, 2),
    _WtWebioEA2x2TimeServer2_Type()
)
wtWebioEA2x2TimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TimeServer2.setStatus("mandatory")


class _WtWebioEA2x2TsEnable_Type(OctetString):
    """Custom type wtWebioEA2x2TsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2TsEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2TsEnable_Object = MibScalar
wtWebioEA2x2TsEnable = _WtWebioEA2x2TsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 2, 3),
    _WtWebioEA2x2TsEnable_Type()
)
wtWebioEA2x2TsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TsEnable.setStatus("mandatory")
_WtWebioEA2x2TsSyncTime_Type = Integer32
_WtWebioEA2x2TsSyncTime_Object = MibScalar
wtWebioEA2x2TsSyncTime = _WtWebioEA2x2TsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 2, 4),
    _WtWebioEA2x2TsSyncTime_Type()
)
wtWebioEA2x2TsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2TsSyncTime.setStatus("mandatory")
_WtWebioEA2x2DeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA2x2DeviceClock = _WtWebioEA2x2DeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 3)
)


class _WtWebioEA2x2ClockHrs_Type(Integer32):
    """Custom type wtWebioEA2x2ClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA2x2ClockHrs_Type.__name__ = "Integer32"
_WtWebioEA2x2ClockHrs_Object = MibScalar
wtWebioEA2x2ClockHrs = _WtWebioEA2x2ClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 3, 1),
    _WtWebioEA2x2ClockHrs_Type()
)
wtWebioEA2x2ClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ClockHrs.setStatus("mandatory")


class _WtWebioEA2x2ClockMin_Type(Integer32):
    """Custom type wtWebioEA2x2ClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA2x2ClockMin_Type.__name__ = "Integer32"
_WtWebioEA2x2ClockMin_Object = MibScalar
wtWebioEA2x2ClockMin = _WtWebioEA2x2ClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 3, 2),
    _WtWebioEA2x2ClockMin_Type()
)
wtWebioEA2x2ClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ClockMin.setStatus("mandatory")


class _WtWebioEA2x2ClockDay_Type(Integer32):
    """Custom type wtWebioEA2x2ClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA2x2ClockDay_Type.__name__ = "Integer32"
_WtWebioEA2x2ClockDay_Object = MibScalar
wtWebioEA2x2ClockDay = _WtWebioEA2x2ClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 3, 3),
    _WtWebioEA2x2ClockDay_Type()
)
wtWebioEA2x2ClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ClockDay.setStatus("mandatory")


class _WtWebioEA2x2ClockMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ClockMonth-April", 4),
          ("wtWebioEA2x2ClockMonth-August", 8),
          ("wtWebioEA2x2ClockMonth-December", 12),
          ("wtWebioEA2x2ClockMonth-February", 2),
          ("wtWebioEA2x2ClockMonth-January", 1),
          ("wtWebioEA2x2ClockMonth-July", 7),
          ("wtWebioEA2x2ClockMonth-June", 6),
          ("wtWebioEA2x2ClockMonth-March", 3),
          ("wtWebioEA2x2ClockMonth-May", 5),
          ("wtWebioEA2x2ClockMonth-November", 11),
          ("wtWebioEA2x2ClockMonth-October", 10),
          ("wtWebioEA2x2ClockMonth-September", 9))
    )


_WtWebioEA2x2ClockMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ClockMonth_Object = MibScalar
wtWebioEA2x2ClockMonth = _WtWebioEA2x2ClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 3, 4),
    _WtWebioEA2x2ClockMonth_Type()
)
wtWebioEA2x2ClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ClockMonth.setStatus("mandatory")


class _WtWebioEA2x2ClockYear_Type(Integer32):
    """Custom type wtWebioEA2x2ClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ClockYear_Type.__name__ = "Integer32"
_WtWebioEA2x2ClockYear_Object = MibScalar
wtWebioEA2x2ClockYear = _WtWebioEA2x2ClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 2, 3, 5),
    _WtWebioEA2x2ClockYear_Type()
)
wtWebioEA2x2ClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ClockYear.setStatus("mandatory")
_WtWebioEA2x2Basic_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Basic = _WtWebioEA2x2Basic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3)
)
_WtWebioEA2x2Network_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Network = _WtWebioEA2x2Network_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1)
)
_WtWebioEA2x2IpAddress_Type = IpAddress
_WtWebioEA2x2IpAddress_Object = MibScalar
wtWebioEA2x2IpAddress = _WtWebioEA2x2IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1, 1),
    _WtWebioEA2x2IpAddress_Type()
)
wtWebioEA2x2IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2IpAddress.setStatus("mandatory")
_WtWebioEA2x2SubnetMask_Type = IpAddress
_WtWebioEA2x2SubnetMask_Object = MibScalar
wtWebioEA2x2SubnetMask = _WtWebioEA2x2SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1, 2),
    _WtWebioEA2x2SubnetMask_Type()
)
wtWebioEA2x2SubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SubnetMask.setStatus("mandatory")
_WtWebioEA2x2Gateway_Type = IpAddress
_WtWebioEA2x2Gateway_Object = MibScalar
wtWebioEA2x2Gateway = _WtWebioEA2x2Gateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1, 3),
    _WtWebioEA2x2Gateway_Type()
)
wtWebioEA2x2Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2Gateway.setStatus("mandatory")
_WtWebioEA2x2DnsServer1_Type = OctetString
_WtWebioEA2x2DnsServer1_Object = MibScalar
wtWebioEA2x2DnsServer1 = _WtWebioEA2x2DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1, 4),
    _WtWebioEA2x2DnsServer1_Type()
)
wtWebioEA2x2DnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DnsServer1.setStatus("mandatory")
_WtWebioEA2x2DnsServer2_Type = OctetString
_WtWebioEA2x2DnsServer2_Object = MibScalar
wtWebioEA2x2DnsServer2 = _WtWebioEA2x2DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1, 5),
    _WtWebioEA2x2DnsServer2_Type()
)
wtWebioEA2x2DnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DnsServer2.setStatus("mandatory")
_WtWebioEA2x2AddConfig_Type = OctetString
_WtWebioEA2x2AddConfig_Object = MibScalar
wtWebioEA2x2AddConfig = _WtWebioEA2x2AddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 1, 6),
    _WtWebioEA2x2AddConfig_Type()
)
wtWebioEA2x2AddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AddConfig.setStatus("mandatory")
_WtWebioEA2x2HTTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2HTTP = _WtWebioEA2x2HTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 2)
)
_WtWebioEA2x2Startup_Type = OctetString
_WtWebioEA2x2Startup_Object = MibScalar
wtWebioEA2x2Startup = _WtWebioEA2x2Startup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 2, 1),
    _WtWebioEA2x2Startup_Type()
)
wtWebioEA2x2Startup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2Startup.setStatus("mandatory")
_WtWebioEA2x2GetHeaderEnable_Type = OctetString
_WtWebioEA2x2GetHeaderEnable_Object = MibScalar
wtWebioEA2x2GetHeaderEnable = _WtWebioEA2x2GetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 2, 2),
    _WtWebioEA2x2GetHeaderEnable_Type()
)
wtWebioEA2x2GetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2GetHeaderEnable.setStatus("mandatory")


class _WtWebioEA2x2HttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2HttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2HttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2HttpInputTrigger_Object = MibScalar
wtWebioEA2x2HttpInputTrigger = _WtWebioEA2x2HttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 2, 3),
    _WtWebioEA2x2HttpInputTrigger_Type()
)
wtWebioEA2x2HttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2HttpInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2HttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2HttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA2x2HttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2HttpPort_Object = MibScalar
wtWebioEA2x2HttpPort = _WtWebioEA2x2HttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 2, 4),
    _WtWebioEA2x2HttpPort_Type()
)
wtWebioEA2x2HttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2HttpPort.setStatus("mandatory")
_WtWebioEA2x2Mail_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Mail = _WtWebioEA2x2Mail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3)
)
_WtWebioEA2x2MailAdName_Type = OctetString
_WtWebioEA2x2MailAdName_Object = MibScalar
wtWebioEA2x2MailAdName = _WtWebioEA2x2MailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 1),
    _WtWebioEA2x2MailAdName_Type()
)
wtWebioEA2x2MailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailAdName.setStatus("mandatory")
_WtWebioEA2x2MailReply_Type = OctetString
_WtWebioEA2x2MailReply_Object = MibScalar
wtWebioEA2x2MailReply = _WtWebioEA2x2MailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 2),
    _WtWebioEA2x2MailReply_Type()
)
wtWebioEA2x2MailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailReply.setStatus("mandatory")
_WtWebioEA2x2MailServer_Type = OctetString
_WtWebioEA2x2MailServer_Object = MibScalar
wtWebioEA2x2MailServer = _WtWebioEA2x2MailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 3),
    _WtWebioEA2x2MailServer_Type()
)
wtWebioEA2x2MailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailServer.setStatus("mandatory")
_WtWebioEA2x2MailEnable_Type = OctetString
_WtWebioEA2x2MailEnable_Object = MibScalar
wtWebioEA2x2MailEnable = _WtWebioEA2x2MailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 4),
    _WtWebioEA2x2MailEnable_Type()
)
wtWebioEA2x2MailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailEnable.setStatus("mandatory")


class _WtWebioEA2x2MailAuthentication_Type(OctetString):
    """Custom type wtWebioEA2x2MailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2MailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA2x2MailAuthentication_Object = MibScalar
wtWebioEA2x2MailAuthentication = _WtWebioEA2x2MailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 5),
    _WtWebioEA2x2MailAuthentication_Type()
)
wtWebioEA2x2MailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailAuthentication.setStatus("mandatory")
_WtWebioEA2x2MailAuthUser_Type = OctetString
_WtWebioEA2x2MailAuthUser_Object = MibScalar
wtWebioEA2x2MailAuthUser = _WtWebioEA2x2MailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 6),
    _WtWebioEA2x2MailAuthUser_Type()
)
wtWebioEA2x2MailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailAuthUser.setStatus("mandatory")
_WtWebioEA2x2MailAuthPassword_Type = OctetString
_WtWebioEA2x2MailAuthPassword_Object = MibScalar
wtWebioEA2x2MailAuthPassword = _WtWebioEA2x2MailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 7),
    _WtWebioEA2x2MailAuthPassword_Type()
)
wtWebioEA2x2MailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailAuthPassword.setStatus("mandatory")
_WtWebioEA2x2MailPop3Server_Type = OctetString
_WtWebioEA2x2MailPop3Server_Object = MibScalar
wtWebioEA2x2MailPop3Server = _WtWebioEA2x2MailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 3, 8),
    _WtWebioEA2x2MailPop3Server_Type()
)
wtWebioEA2x2MailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MailPop3Server.setStatus("mandatory")
_WtWebioEA2x2SNMP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2SNMP = _WtWebioEA2x2SNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 4)
)
_WtWebioEA2x2SnmpEnable_Type = OctetString
_WtWebioEA2x2SnmpEnable_Object = MibScalar
wtWebioEA2x2SnmpEnable = _WtWebioEA2x2SnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 4, 1),
    _WtWebioEA2x2SnmpEnable_Type()
)
wtWebioEA2x2SnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SnmpEnable.setStatus("mandatory")
_WtWebioEA2x2SnmpCommunityStringRead_Type = OctetString
_WtWebioEA2x2SnmpCommunityStringRead_Object = MibScalar
wtWebioEA2x2SnmpCommunityStringRead = _WtWebioEA2x2SnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 4, 2),
    _WtWebioEA2x2SnmpCommunityStringRead_Type()
)
wtWebioEA2x2SnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA2x2SnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA2x2SnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA2x2SnmpCommunityStringReadWrite = _WtWebioEA2x2SnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 4, 3),
    _WtWebioEA2x2SnmpCommunityStringReadWrite_Type()
)
wtWebioEA2x2SnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA2x2SnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA2x2SnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA2x2SnmpSystemTrapManagerIP = _WtWebioEA2x2SnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 4, 4),
    _WtWebioEA2x2SnmpSystemTrapManagerIP_Type()
)
wtWebioEA2x2SnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA2x2SnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA2x2SnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2SnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2SnmpSystemTrapEnable_Object = MibScalar
wtWebioEA2x2SnmpSystemTrapEnable = _WtWebioEA2x2SnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 4, 5),
    _WtWebioEA2x2SnmpSystemTrapEnable_Type()
)
wtWebioEA2x2SnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA2x2UDP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2UDP = _WtWebioEA2x2UDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 5)
)
_WtWebioEA2x2UdpAdminPort_Type = Integer32
_WtWebioEA2x2UdpAdminPort_Object = MibScalar
wtWebioEA2x2UdpAdminPort = _WtWebioEA2x2UdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 5, 1),
    _WtWebioEA2x2UdpAdminPort_Type()
)
wtWebioEA2x2UdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2UdpAdminPort.setStatus("mandatory")
_WtWebioEA2x2UdpEnable_Type = OctetString
_WtWebioEA2x2UdpEnable_Object = MibScalar
wtWebioEA2x2UdpEnable = _WtWebioEA2x2UdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 5, 2),
    _WtWebioEA2x2UdpEnable_Type()
)
wtWebioEA2x2UdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2UdpEnable.setStatus("mandatory")
_WtWebioEA2x2UdpRemotePort_Type = Integer32
_WtWebioEA2x2UdpRemotePort_Object = MibScalar
wtWebioEA2x2UdpRemotePort = _WtWebioEA2x2UdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 5, 3),
    _WtWebioEA2x2UdpRemotePort_Type()
)
wtWebioEA2x2UdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2UdpRemotePort.setStatus("mandatory")
_WtWebioEA2x2Binary_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Binary = _WtWebioEA2x2Binary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6)
)


class _WtWebioEA2x2BinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2BinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryModeCount_Object = MibScalar
wtWebioEA2x2BinaryModeCount = _WtWebioEA2x2BinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 1),
    _WtWebioEA2x2BinaryModeCount_Type()
)
wtWebioEA2x2BinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryModeCount.setStatus("mandatory")
_WtWebioEA2x2BinaryIfTable_Object = MibTable
wtWebioEA2x2BinaryIfTable = _WtWebioEA2x2BinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryIfTable.setStatus("mandatory")
_WtWebioEA2x2BinaryIfEntry_Object = MibTableRow
wtWebioEA2x2BinaryIfEntry = _WtWebioEA2x2BinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 2, 1)
)
wtWebioEA2x2BinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2BinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryIfEntry.setStatus("mandatory")


class _WtWebioEA2x2BinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2BinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryModeNo_Object = MibTableColumn
wtWebioEA2x2BinaryModeNo = _WtWebioEA2x2BinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA2x2BinaryModeNo_Type()
)
wtWebioEA2x2BinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryModeNo.setStatus("mandatory")
_WtWebioEA2x2BinaryTable_Object = MibTable
wtWebioEA2x2BinaryTable = _WtWebioEA2x2BinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTable.setStatus("mandatory")
_WtWebioEA2x2BinaryEntry_Object = MibTableRow
wtWebioEA2x2BinaryEntry = _WtWebioEA2x2BinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1)
)
wtWebioEA2x2BinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2BinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryEntry.setStatus("mandatory")


class _WtWebioEA2x2BinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryOperationMode_Object = MibTableColumn
wtWebioEA2x2BinaryOperationMode = _WtWebioEA2x2BinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA2x2BinaryOperationMode_Type()
)
wtWebioEA2x2BinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryOperationMode.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA2x2BinaryTcpServerLocalPort = _WtWebioEA2x2BinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA2x2BinaryTcpServerLocalPort_Type()
)
wtWebioEA2x2BinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA2x2BinaryTcpServerInputTrigger = _WtWebioEA2x2BinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA2x2BinaryTcpServerInputTrigger_Type()
)
wtWebioEA2x2BinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA2x2BinaryTcpServerApplicationMode = _WtWebioEA2x2BinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA2x2BinaryTcpServerApplicationMode_Type()
)
wtWebioEA2x2BinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientLocalPort = _WtWebioEA2x2BinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA2x2BinaryTcpClientLocalPort_Type()
)
wtWebioEA2x2BinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientServerPort = _WtWebioEA2x2BinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA2x2BinaryTcpClientServerPort_Type()
)
wtWebioEA2x2BinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA2x2BinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA2x2BinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientServerIpAddr = _WtWebioEA2x2BinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA2x2BinaryTcpClientServerIpAddr_Type()
)
wtWebioEA2x2BinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA2x2BinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA2x2BinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientServerPassword = _WtWebioEA2x2BinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA2x2BinaryTcpClientServerPassword_Type()
)
wtWebioEA2x2BinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA2x2BinaryTcpClientInactivity_Type = Integer32
_WtWebioEA2x2BinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientInactivity = _WtWebioEA2x2BinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA2x2BinaryTcpClientInactivity_Type()
)
wtWebioEA2x2BinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientInputTrigger = _WtWebioEA2x2BinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA2x2BinaryTcpClientInputTrigger_Type()
)
wtWebioEA2x2BinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2BinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientInterval = _WtWebioEA2x2BinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA2x2BinaryTcpClientInterval_Type()
)
wtWebioEA2x2BinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientApplicationMode = _WtWebioEA2x2BinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA2x2BinaryTcpClientApplicationMode_Type()
)
wtWebioEA2x2BinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2BinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA2x2BinaryUdpPeerLocalPort = _WtWebioEA2x2BinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA2x2BinaryUdpPeerLocalPort_Type()
)
wtWebioEA2x2BinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2BinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA2x2BinaryUdpPeerRemotePort = _WtWebioEA2x2BinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA2x2BinaryUdpPeerRemotePort_Type()
)
wtWebioEA2x2BinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA2x2BinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA2x2BinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA2x2BinaryUdpPeerRemoteIpAddr = _WtWebioEA2x2BinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA2x2BinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA2x2BinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA2x2BinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA2x2BinaryUdpPeerInputTrigger = _WtWebioEA2x2BinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA2x2BinaryUdpPeerInputTrigger_Type()
)
wtWebioEA2x2BinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2BinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2BinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA2x2BinaryUdpPeerInterval = _WtWebioEA2x2BinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA2x2BinaryUdpPeerInterval_Type()
)
wtWebioEA2x2BinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA2x2BinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2BinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2BinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2BinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA2x2BinaryUdpPeerApplicationMode = _WtWebioEA2x2BinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA2x2BinaryUdpPeerApplicationMode_Type()
)
wtWebioEA2x2BinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2BinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryConnectedPort_Object = MibTableColumn
wtWebioEA2x2BinaryConnectedPort = _WtWebioEA2x2BinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA2x2BinaryConnectedPort_Type()
)
wtWebioEA2x2BinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryConnectedPort.setStatus("mandatory")
_WtWebioEA2x2BinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA2x2BinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA2x2BinaryConnectedIpAddr = _WtWebioEA2x2BinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA2x2BinaryConnectedIpAddr_Type()
)
wtWebioEA2x2BinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA2x2BinaryTcpServerClientHttpPort = _WtWebioEA2x2BinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA2x2BinaryTcpServerClientHttpPort_Type()
)
wtWebioEA2x2BinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA2x2BinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2BinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2BinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2BinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA2x2BinaryTcpClientServerHttpPort = _WtWebioEA2x2BinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA2x2BinaryTcpClientServerHttpPort_Type()
)
wtWebioEA2x2BinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2BinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA2x2Syslog_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Syslog = _WtWebioEA2x2Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 7)
)
_WtWebioEA2x2SyslogServerIP_Type = OctetString
_WtWebioEA2x2SyslogServerIP_Object = MibScalar
wtWebioEA2x2SyslogServerIP = _WtWebioEA2x2SyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 7, 1),
    _WtWebioEA2x2SyslogServerIP_Type()
)
wtWebioEA2x2SyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SyslogServerIP.setStatus("mandatory")
_WtWebioEA2x2SyslogServerPort_Type = Integer32
_WtWebioEA2x2SyslogServerPort_Object = MibScalar
wtWebioEA2x2SyslogServerPort = _WtWebioEA2x2SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 7, 2),
    _WtWebioEA2x2SyslogServerPort_Type()
)
wtWebioEA2x2SyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SyslogServerPort.setStatus("mandatory")


class _WtWebioEA2x2SyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA2x2SyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2SyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2SyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA2x2SyslogSystemMessagesEnable = _WtWebioEA2x2SyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 7, 3),
    _WtWebioEA2x2SyslogSystemMessagesEnable_Type()
)
wtWebioEA2x2SyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA2x2SyslogEnable_Type = OctetString
_WtWebioEA2x2SyslogEnable_Object = MibScalar
wtWebioEA2x2SyslogEnable = _WtWebioEA2x2SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 7, 4),
    _WtWebioEA2x2SyslogEnable_Type()
)
wtWebioEA2x2SyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SyslogEnable.setStatus("mandatory")
_WtWebioEA2x2FTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2FTP = _WtWebioEA2x2FTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8)
)
_WtWebioEA2x2FTPServerIP_Type = OctetString
_WtWebioEA2x2FTPServerIP_Object = MibScalar
wtWebioEA2x2FTPServerIP = _WtWebioEA2x2FTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 1),
    _WtWebioEA2x2FTPServerIP_Type()
)
wtWebioEA2x2FTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPServerIP.setStatus("mandatory")
_WtWebioEA2x2FTPServerControlPort_Type = Integer32
_WtWebioEA2x2FTPServerControlPort_Object = MibScalar
wtWebioEA2x2FTPServerControlPort = _WtWebioEA2x2FTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 2),
    _WtWebioEA2x2FTPServerControlPort_Type()
)
wtWebioEA2x2FTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPServerControlPort.setStatus("mandatory")
_WtWebioEA2x2FTPUserName_Type = OctetString
_WtWebioEA2x2FTPUserName_Object = MibScalar
wtWebioEA2x2FTPUserName = _WtWebioEA2x2FTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 3),
    _WtWebioEA2x2FTPUserName_Type()
)
wtWebioEA2x2FTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPUserName.setStatus("mandatory")
_WtWebioEA2x2FTPPassword_Type = OctetString
_WtWebioEA2x2FTPPassword_Object = MibScalar
wtWebioEA2x2FTPPassword = _WtWebioEA2x2FTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 4),
    _WtWebioEA2x2FTPPassword_Type()
)
wtWebioEA2x2FTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPPassword.setStatus("mandatory")
_WtWebioEA2x2FTPAccount_Type = OctetString
_WtWebioEA2x2FTPAccount_Object = MibScalar
wtWebioEA2x2FTPAccount = _WtWebioEA2x2FTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 5),
    _WtWebioEA2x2FTPAccount_Type()
)
wtWebioEA2x2FTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPAccount.setStatus("mandatory")
_WtWebioEA2x2FTPOption_Type = OctetString
_WtWebioEA2x2FTPOption_Object = MibScalar
wtWebioEA2x2FTPOption = _WtWebioEA2x2FTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 6),
    _WtWebioEA2x2FTPOption_Type()
)
wtWebioEA2x2FTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPOption.setStatus("mandatory")
_WtWebioEA2x2FTPEnable_Type = OctetString
_WtWebioEA2x2FTPEnable_Object = MibScalar
wtWebioEA2x2FTPEnable = _WtWebioEA2x2FTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 3, 8, 7),
    _WtWebioEA2x2FTPEnable_Type()
)
wtWebioEA2x2FTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2FTPEnable.setStatus("mandatory")
_WtWebioEA2x2OutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA2x2OutputMode = _WtWebioEA2x2OutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 4)
)
_WtWebioEA2x2OutputModeTable_Object = MibTable
wtWebioEA2x2OutputModeTable = _WtWebioEA2x2OutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputModeTable.setStatus("mandatory")
_WtWebioEA2x2OutputModeEntry_Object = MibTableRow
wtWebioEA2x2OutputModeEntry = _WtWebioEA2x2OutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 4, 1, 1)
)
wtWebioEA2x2OutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputModeEntry.setStatus("mandatory")


class _WtWebioEA2x2OutputModeBit_Type(OctetString):
    """Custom type wtWebioEA2x2OutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2OutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA2x2OutputModeBit_Object = MibTableColumn
wtWebioEA2x2OutputModeBit = _WtWebioEA2x2OutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 4, 1, 1, 1),
    _WtWebioEA2x2OutputModeBit_Type()
)
wtWebioEA2x2OutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputModeBit.setStatus("mandatory")


class _WtWebioEA2x2SafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA2x2SafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2SafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA2x2SafetyTimeout_Object = MibScalar
wtWebioEA2x2SafetyTimeout = _WtWebioEA2x2SafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 4, 2),
    _WtWebioEA2x2SafetyTimeout_Type()
)
wtWebioEA2x2SafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2SafetyTimeout.setStatus("mandatory")
_WtWebioEA2x2LoadControlEnable_Type = OctetString
_WtWebioEA2x2LoadControlEnable_Object = MibScalar
wtWebioEA2x2LoadControlEnable = _WtWebioEA2x2LoadControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 4, 3),
    _WtWebioEA2x2LoadControlEnable_Type()
)
wtWebioEA2x2LoadControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2LoadControlEnable.setStatus("mandatory")
_WtWebioEA2x2Alarm_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Alarm = _WtWebioEA2x2Alarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5)
)


class _WtWebioEA2x2AlarmCount_Type(Integer32):
    """Custom type wtWebioEA2x2AlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2AlarmCount_Type.__name__ = "Integer32"
_WtWebioEA2x2AlarmCount_Object = MibScalar
wtWebioEA2x2AlarmCount = _WtWebioEA2x2AlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 1),
    _WtWebioEA2x2AlarmCount_Type()
)
wtWebioEA2x2AlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmCount.setStatus("mandatory")
_WtWebioEA2x2AlarmIfTable_Object = MibTable
wtWebioEA2x2AlarmIfTable = _WtWebioEA2x2AlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmIfTable.setStatus("mandatory")
_WtWebioEA2x2AlarmIfEntry_Object = MibTableRow
wtWebioEA2x2AlarmIfEntry = _WtWebioEA2x2AlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 2, 1)
)
wtWebioEA2x2AlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmIfEntry.setStatus("mandatory")


class _WtWebioEA2x2AlarmNo_Type(Integer32):
    """Custom type wtWebioEA2x2AlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2AlarmNo_Type.__name__ = "Integer32"
_WtWebioEA2x2AlarmNo_Object = MibTableColumn
wtWebioEA2x2AlarmNo = _WtWebioEA2x2AlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 2, 1, 1),
    _WtWebioEA2x2AlarmNo_Type()
)
wtWebioEA2x2AlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmNo.setStatus("mandatory")
_WtWebioEA2x2AlarmTable_Object = MibTable
wtWebioEA2x2AlarmTable = _WtWebioEA2x2AlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmTable.setStatus("mandatory")
_WtWebioEA2x2AlarmEntry_Object = MibTableRow
wtWebioEA2x2AlarmEntry = _WtWebioEA2x2AlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1)
)
wtWebioEA2x2AlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmEntry.setStatus("mandatory")


class _WtWebioEA2x2AlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2AlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2AlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2AlarmInputTrigger_Object = MibTableColumn
wtWebioEA2x2AlarmInputTrigger = _WtWebioEA2x2AlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 1),
    _WtWebioEA2x2AlarmInputTrigger_Type()
)
wtWebioEA2x2AlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2AlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2AlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2AlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2AlarmOutputTrigger_Object = MibTableColumn
wtWebioEA2x2AlarmOutputTrigger = _WtWebioEA2x2AlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 2),
    _WtWebioEA2x2AlarmOutputTrigger_Type()
)
wtWebioEA2x2AlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA2x2AlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2AlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2AlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2AlarmSystemTrigger_Object = MibTableColumn
wtWebioEA2x2AlarmSystemTrigger = _WtWebioEA2x2AlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 3),
    _WtWebioEA2x2AlarmSystemTrigger_Type()
)
wtWebioEA2x2AlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA2x2AlarmMaxCounterValue_Type = OctetString
_WtWebioEA2x2AlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA2x2AlarmMaxCounterValue = _WtWebioEA2x2AlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 4),
    _WtWebioEA2x2AlarmMaxCounterValue_Type()
)
wtWebioEA2x2AlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA2x2AlarmInterval_Type = OctetString
_WtWebioEA2x2AlarmInterval_Object = MibTableColumn
wtWebioEA2x2AlarmInterval = _WtWebioEA2x2AlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 5),
    _WtWebioEA2x2AlarmInterval_Type()
)
wtWebioEA2x2AlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmInterval.setStatus("mandatory")


class _WtWebioEA2x2AlarmEnable_Type(OctetString):
    """Custom type wtWebioEA2x2AlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2AlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2AlarmEnable_Object = MibTableColumn
wtWebioEA2x2AlarmEnable = _WtWebioEA2x2AlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 6),
    _WtWebioEA2x2AlarmEnable_Type()
)
wtWebioEA2x2AlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmEnable.setStatus("mandatory")
_WtWebioEA2x2AlarmMailAddr_Type = OctetString
_WtWebioEA2x2AlarmMailAddr_Object = MibTableColumn
wtWebioEA2x2AlarmMailAddr = _WtWebioEA2x2AlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 7),
    _WtWebioEA2x2AlarmMailAddr_Type()
)
wtWebioEA2x2AlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmMailAddr.setStatus("mandatory")
_WtWebioEA2x2AlarmMailSubject_Type = OctetString
_WtWebioEA2x2AlarmMailSubject_Object = MibTableColumn
wtWebioEA2x2AlarmMailSubject = _WtWebioEA2x2AlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 8),
    _WtWebioEA2x2AlarmMailSubject_Type()
)
wtWebioEA2x2AlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmMailSubject.setStatus("mandatory")
_WtWebioEA2x2AlarmMailText_Type = OctetString
_WtWebioEA2x2AlarmMailText_Object = MibTableColumn
wtWebioEA2x2AlarmMailText = _WtWebioEA2x2AlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 9),
    _WtWebioEA2x2AlarmMailText_Type()
)
wtWebioEA2x2AlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmMailText.setStatus("mandatory")
_WtWebioEA2x2AlarmSnmpManagerIP_Type = OctetString
_WtWebioEA2x2AlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA2x2AlarmSnmpManagerIP = _WtWebioEA2x2AlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 10),
    _WtWebioEA2x2AlarmSnmpManagerIP_Type()
)
wtWebioEA2x2AlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA2x2AlarmSnmpTrapText_Type = OctetString
_WtWebioEA2x2AlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA2x2AlarmSnmpTrapText = _WtWebioEA2x2AlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 11),
    _WtWebioEA2x2AlarmSnmpTrapText_Type()
)
wtWebioEA2x2AlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA2x2AlarmUdpIpAddr_Type = OctetString
_WtWebioEA2x2AlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA2x2AlarmUdpIpAddr = _WtWebioEA2x2AlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 12),
    _WtWebioEA2x2AlarmUdpIpAddr_Type()
)
wtWebioEA2x2AlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2AlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA2x2AlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2AlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2AlarmUdpPort_Object = MibTableColumn
wtWebioEA2x2AlarmUdpPort = _WtWebioEA2x2AlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 13),
    _WtWebioEA2x2AlarmUdpPort_Type()
)
wtWebioEA2x2AlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmUdpPort.setStatus("mandatory")
_WtWebioEA2x2AlarmUdpText_Type = OctetString
_WtWebioEA2x2AlarmUdpText_Object = MibTableColumn
wtWebioEA2x2AlarmUdpText = _WtWebioEA2x2AlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 14),
    _WtWebioEA2x2AlarmUdpText_Type()
)
wtWebioEA2x2AlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmUdpText.setStatus("mandatory")
_WtWebioEA2x2AlarmTcpIpAddr_Type = OctetString
_WtWebioEA2x2AlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA2x2AlarmTcpIpAddr = _WtWebioEA2x2AlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 15),
    _WtWebioEA2x2AlarmTcpIpAddr_Type()
)
wtWebioEA2x2AlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2AlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA2x2AlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2AlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2AlarmTcpPort_Object = MibTableColumn
wtWebioEA2x2AlarmTcpPort = _WtWebioEA2x2AlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 16),
    _WtWebioEA2x2AlarmTcpPort_Type()
)
wtWebioEA2x2AlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmTcpPort.setStatus("mandatory")
_WtWebioEA2x2AlarmTcpText_Type = OctetString
_WtWebioEA2x2AlarmTcpText_Object = MibTableColumn
wtWebioEA2x2AlarmTcpText = _WtWebioEA2x2AlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 17),
    _WtWebioEA2x2AlarmTcpText_Type()
)
wtWebioEA2x2AlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmTcpText.setStatus("mandatory")
_WtWebioEA2x2AlarmSyslogIpAddr_Type = OctetString
_WtWebioEA2x2AlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA2x2AlarmSyslogIpAddr = _WtWebioEA2x2AlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 18),
    _WtWebioEA2x2AlarmSyslogIpAddr_Type()
)
wtWebioEA2x2AlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA2x2AlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA2x2AlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2AlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA2x2AlarmSyslogPort_Object = MibTableColumn
wtWebioEA2x2AlarmSyslogPort = _WtWebioEA2x2AlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 19),
    _WtWebioEA2x2AlarmSyslogPort_Type()
)
wtWebioEA2x2AlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSyslogPort.setStatus("mandatory")
_WtWebioEA2x2AlarmSyslogText_Type = OctetString
_WtWebioEA2x2AlarmSyslogText_Object = MibTableColumn
wtWebioEA2x2AlarmSyslogText = _WtWebioEA2x2AlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 20),
    _WtWebioEA2x2AlarmSyslogText_Type()
)
wtWebioEA2x2AlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSyslogText.setStatus("mandatory")
_WtWebioEA2x2AlarmFtpDataPort_Type = OctetString
_WtWebioEA2x2AlarmFtpDataPort_Object = MibTableColumn
wtWebioEA2x2AlarmFtpDataPort = _WtWebioEA2x2AlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 21),
    _WtWebioEA2x2AlarmFtpDataPort_Type()
)
wtWebioEA2x2AlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA2x2AlarmFtpFileName_Type = OctetString
_WtWebioEA2x2AlarmFtpFileName_Object = MibTableColumn
wtWebioEA2x2AlarmFtpFileName = _WtWebioEA2x2AlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 22),
    _WtWebioEA2x2AlarmFtpFileName_Type()
)
wtWebioEA2x2AlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmFtpFileName.setStatus("mandatory")
_WtWebioEA2x2AlarmFtpText_Type = OctetString
_WtWebioEA2x2AlarmFtpText_Object = MibTableColumn
wtWebioEA2x2AlarmFtpText = _WtWebioEA2x2AlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 23),
    _WtWebioEA2x2AlarmFtpText_Type()
)
wtWebioEA2x2AlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmFtpText.setStatus("mandatory")


class _WtWebioEA2x2AlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA2x2AlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2AlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA2x2AlarmFtpOption_Object = MibTableColumn
wtWebioEA2x2AlarmFtpOption = _WtWebioEA2x2AlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 24),
    _WtWebioEA2x2AlarmFtpOption_Type()
)
wtWebioEA2x2AlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmFtpOption.setStatus("mandatory")
_WtWebioEA2x2AlarmTimerCron_Type = OctetString
_WtWebioEA2x2AlarmTimerCron_Object = MibTableColumn
wtWebioEA2x2AlarmTimerCron = _WtWebioEA2x2AlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 25),
    _WtWebioEA2x2AlarmTimerCron_Type()
)
wtWebioEA2x2AlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmTimerCron.setStatus("mandatory")
_WtWebioEA2x2AlarmMailReleaseSubject_Type = OctetString
_WtWebioEA2x2AlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA2x2AlarmMailReleaseSubject = _WtWebioEA2x2AlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 26),
    _WtWebioEA2x2AlarmMailReleaseSubject_Type()
)
wtWebioEA2x2AlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA2x2AlarmMailReleaseText_Type = OctetString
_WtWebioEA2x2AlarmMailReleaseText_Object = MibTableColumn
wtWebioEA2x2AlarmMailReleaseText = _WtWebioEA2x2AlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 27),
    _WtWebioEA2x2AlarmMailReleaseText_Type()
)
wtWebioEA2x2AlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA2x2AlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA2x2AlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA2x2AlarmSnmpTrapReleaseText = _WtWebioEA2x2AlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 28),
    _WtWebioEA2x2AlarmSnmpTrapReleaseText_Type()
)
wtWebioEA2x2AlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA2x2AlarmUdpReleaseText_Type = OctetString
_WtWebioEA2x2AlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA2x2AlarmUdpReleaseText = _WtWebioEA2x2AlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 29),
    _WtWebioEA2x2AlarmUdpReleaseText_Type()
)
wtWebioEA2x2AlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA2x2AlarmTcpReleaseText_Type = OctetString
_WtWebioEA2x2AlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA2x2AlarmTcpReleaseText = _WtWebioEA2x2AlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 30),
    _WtWebioEA2x2AlarmTcpReleaseText_Type()
)
wtWebioEA2x2AlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA2x2AlarmSyslogReleaseText_Type = OctetString
_WtWebioEA2x2AlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA2x2AlarmSyslogReleaseText = _WtWebioEA2x2AlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 31),
    _WtWebioEA2x2AlarmSyslogReleaseText_Type()
)
wtWebioEA2x2AlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA2x2AlarmFtpReleaseText_Type = OctetString
_WtWebioEA2x2AlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA2x2AlarmFtpReleaseText = _WtWebioEA2x2AlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 3, 1, 32),
    _WtWebioEA2x2AlarmFtpReleaseText_Type()
)
wtWebioEA2x2AlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2AlarmFtpReleaseText.setStatus("mandatory")


class _WtWebioEA2x2LoadControlView_Type(OctetString):
    """Custom type wtWebioEA2x2LoadControlView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2LoadControlView_Type.__name__ = "OctetString"
_WtWebioEA2x2LoadControlView_Object = MibScalar
wtWebioEA2x2LoadControlView = _WtWebioEA2x2LoadControlView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 4),
    _WtWebioEA2x2LoadControlView_Type()
)
wtWebioEA2x2LoadControlView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2LoadControlView.setStatus("mandatory")


class _WtWebioEA2x2LCShutDownView_Type(OctetString):
    """Custom type wtWebioEA2x2LCShutDownView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2LCShutDownView_Type.__name__ = "OctetString"
_WtWebioEA2x2LCShutDownView_Object = MibScalar
wtWebioEA2x2LCShutDownView = _WtWebioEA2x2LCShutDownView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 1, 5, 5),
    _WtWebioEA2x2LCShutDownView_Type()
)
wtWebioEA2x2LCShutDownView.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2LCShutDownView.setStatus("mandatory")
_WtWebioEA2x2Ports_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Ports = _WtWebioEA2x2Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2)
)
_WtWebioEA2x2InputPortTable_Object = MibTable
wtWebioEA2x2InputPortTable = _WtWebioEA2x2InputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2InputPortTable.setStatus("mandatory")
_WtWebioEA2x2InputPortEntry_Object = MibTableRow
wtWebioEA2x2InputPortEntry = _WtWebioEA2x2InputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1)
)
wtWebioEA2x2InputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2InputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2InputPortEntry.setStatus("mandatory")
_WtWebioEA2x2PortInputName_Type = OctetString
_WtWebioEA2x2PortInputName_Object = MibTableColumn
wtWebioEA2x2PortInputName = _WtWebioEA2x2PortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1, 1),
    _WtWebioEA2x2PortInputName_Type()
)
wtWebioEA2x2PortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortInputName.setStatus("mandatory")
_WtWebioEA2x2PortInputText_Type = OctetString
_WtWebioEA2x2PortInputText_Object = MibTableColumn
wtWebioEA2x2PortInputText = _WtWebioEA2x2PortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1, 2),
    _WtWebioEA2x2PortInputText_Type()
)
wtWebioEA2x2PortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortInputText.setStatus("mandatory")


class _WtWebioEA2x2PortInputMode_Type(OctetString):
    """Custom type wtWebioEA2x2PortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortInputMode_Type.__name__ = "OctetString"
_WtWebioEA2x2PortInputMode_Object = MibTableColumn
wtWebioEA2x2PortInputMode = _WtWebioEA2x2PortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1, 3),
    _WtWebioEA2x2PortInputMode_Type()
)
wtWebioEA2x2PortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortInputMode.setStatus("mandatory")
_WtWebioEA2x2PortInputFilter_Type = Integer32
_WtWebioEA2x2PortInputFilter_Object = MibTableColumn
wtWebioEA2x2PortInputFilter = _WtWebioEA2x2PortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1, 4),
    _WtWebioEA2x2PortInputFilter_Type()
)
wtWebioEA2x2PortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortInputFilter.setStatus("mandatory")


class _WtWebioEA2x2PortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2PortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2PortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA2x2PortInputBicountPulsePolarity = _WtWebioEA2x2PortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1, 5),
    _WtWebioEA2x2PortInputBicountPulsePolarity_Type()
)
wtWebioEA2x2PortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2PortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA2x2PortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA2x2PortInputBicountInactivTimeout = _WtWebioEA2x2PortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 1, 1, 6),
    _WtWebioEA2x2PortInputBicountInactivTimeout_Type()
)
wtWebioEA2x2PortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA2x2OutputPortTable_Object = MibTable
wtWebioEA2x2OutputPortTable = _WtWebioEA2x2OutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputPortTable.setStatus("mandatory")
_WtWebioEA2x2OutputPortEntry_Object = MibTableRow
wtWebioEA2x2OutputPortEntry = _WtWebioEA2x2OutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1)
)
wtWebioEA2x2OutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2OutputPortEntry.setStatus("mandatory")
_WtWebioEA2x2PortOutputName_Type = OctetString
_WtWebioEA2x2PortOutputName_Object = MibTableColumn
wtWebioEA2x2PortOutputName = _WtWebioEA2x2PortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 1),
    _WtWebioEA2x2PortOutputName_Type()
)
wtWebioEA2x2PortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortOutputName.setStatus("mandatory")
_WtWebioEA2x2PortOutputText_Type = OctetString
_WtWebioEA2x2PortOutputText_Object = MibTableColumn
wtWebioEA2x2PortOutputText = _WtWebioEA2x2PortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 2),
    _WtWebioEA2x2PortOutputText_Type()
)
wtWebioEA2x2PortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortOutputText.setStatus("mandatory")
_WtWebioEA2x2PortOutputGroupMode_Type = OctetString
_WtWebioEA2x2PortOutputGroupMode_Object = MibTableColumn
wtWebioEA2x2PortOutputGroupMode = _WtWebioEA2x2PortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 3),
    _WtWebioEA2x2PortOutputGroupMode_Type()
)
wtWebioEA2x2PortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortOutputGroupMode.setStatus("mandatory")
_WtWebioEA2x2PortOutputSafetyState_Type = OctetString
_WtWebioEA2x2PortOutputSafetyState_Object = MibTableColumn
wtWebioEA2x2PortOutputSafetyState = _WtWebioEA2x2PortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 4),
    _WtWebioEA2x2PortOutputSafetyState_Type()
)
wtWebioEA2x2PortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA2x2PortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA2x2PortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA2x2PortLogicInputMask_Object = MibTableColumn
wtWebioEA2x2PortLogicInputMask = _WtWebioEA2x2PortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 5),
    _WtWebioEA2x2PortLogicInputMask_Type()
)
wtWebioEA2x2PortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortLogicInputMask.setStatus("mandatory")


class _WtWebioEA2x2PortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2PortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2PortLogicInputInverter_Object = MibTableColumn
wtWebioEA2x2PortLogicInputInverter = _WtWebioEA2x2PortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 6),
    _WtWebioEA2x2PortLogicInputInverter_Type()
)
wtWebioEA2x2PortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA2x2PortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA2x2PortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA2x2PortLogicFunction_Object = MibTableColumn
wtWebioEA2x2PortLogicFunction = _WtWebioEA2x2PortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 7),
    _WtWebioEA2x2PortLogicFunction_Type()
)
wtWebioEA2x2PortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortLogicFunction.setStatus("mandatory")


class _WtWebioEA2x2PortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2PortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2PortLogicOutputInverter_Object = MibTableColumn
wtWebioEA2x2PortLogicOutputInverter = _WtWebioEA2x2PortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 8),
    _WtWebioEA2x2PortLogicOutputInverter_Type()
)
wtWebioEA2x2PortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA2x2PortPulseDuration_Type = Integer32
_WtWebioEA2x2PortPulseDuration_Object = MibTableColumn
wtWebioEA2x2PortPulseDuration = _WtWebioEA2x2PortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 9),
    _WtWebioEA2x2PortPulseDuration_Type()
)
wtWebioEA2x2PortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortPulseDuration.setStatus("mandatory")


class _WtWebioEA2x2PortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2PortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2PortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2PortPulsePolarity_Object = MibTableColumn
wtWebioEA2x2PortPulsePolarity = _WtWebioEA2x2PortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 2, 2, 1, 10),
    _WtWebioEA2x2PortPulsePolarity_Type()
)
wtWebioEA2x2PortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2PortPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2Manufact_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Manufact = _WtWebioEA2x2Manufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 3)
)
_WtWebioEA2x2MfName_Type = OctetString
_WtWebioEA2x2MfName_Object = MibScalar
wtWebioEA2x2MfName = _WtWebioEA2x2MfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 3, 1),
    _WtWebioEA2x2MfName_Type()
)
wtWebioEA2x2MfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MfName.setStatus("mandatory")
_WtWebioEA2x2MfAddr_Type = OctetString
_WtWebioEA2x2MfAddr_Object = MibScalar
wtWebioEA2x2MfAddr = _WtWebioEA2x2MfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 3, 2),
    _WtWebioEA2x2MfAddr_Type()
)
wtWebioEA2x2MfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MfAddr.setStatus("mandatory")
_WtWebioEA2x2MfHotline_Type = OctetString
_WtWebioEA2x2MfHotline_Object = MibScalar
wtWebioEA2x2MfHotline = _WtWebioEA2x2MfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 3, 3),
    _WtWebioEA2x2MfHotline_Type()
)
wtWebioEA2x2MfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MfHotline.setStatus("mandatory")
_WtWebioEA2x2MfInternet_Type = OctetString
_WtWebioEA2x2MfInternet_Object = MibScalar
wtWebioEA2x2MfInternet = _WtWebioEA2x2MfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 3, 4),
    _WtWebioEA2x2MfInternet_Type()
)
wtWebioEA2x2MfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MfInternet.setStatus("mandatory")
_WtWebioEA2x2MfDeviceTyp_Type = OctetString
_WtWebioEA2x2MfDeviceTyp_Object = MibScalar
wtWebioEA2x2MfDeviceTyp = _WtWebioEA2x2MfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 3, 3, 5),
    _WtWebioEA2x2MfDeviceTyp_Type()
)
wtWebioEA2x2MfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2MfDeviceTyp.setStatus("mandatory")
_WtWebioEA2x2Diag_ObjectIdentity = ObjectIdentity
wtWebioEA2x2Diag = _WtWebioEA2x2Diag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 4)
)
_WtWebioEA2x2DiagErrorCount_Type = Integer32
_WtWebioEA2x2DiagErrorCount_Object = MibScalar
wtWebioEA2x2DiagErrorCount = _WtWebioEA2x2DiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 4, 1),
    _WtWebioEA2x2DiagErrorCount_Type()
)
wtWebioEA2x2DiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2DiagErrorCount.setStatus("mandatory")
_WtWebioEA2x2DiagBinaryError_Type = OctetString
_WtWebioEA2x2DiagBinaryError_Object = MibScalar
wtWebioEA2x2DiagBinaryError = _WtWebioEA2x2DiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 4, 2),
    _WtWebioEA2x2DiagBinaryError_Type()
)
wtWebioEA2x2DiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2DiagBinaryError.setStatus("mandatory")
_WtWebioEA2x2DiagErrorIndex_Type = Integer32
_WtWebioEA2x2DiagErrorIndex_Object = MibScalar
wtWebioEA2x2DiagErrorIndex = _WtWebioEA2x2DiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 4, 3),
    _WtWebioEA2x2DiagErrorIndex_Type()
)
wtWebioEA2x2DiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2DiagErrorIndex.setStatus("mandatory")
_WtWebioEA2x2DiagErrorMessage_Type = OctetString
_WtWebioEA2x2DiagErrorMessage_Object = MibScalar
wtWebioEA2x2DiagErrorMessage = _WtWebioEA2x2DiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 4, 4),
    _WtWebioEA2x2DiagErrorMessage_Type()
)
wtWebioEA2x2DiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2DiagErrorMessage.setStatus("mandatory")
_WtWebioEA2x2DiagErrorClear_Type = Integer32
_WtWebioEA2x2DiagErrorClear_Object = MibScalar
wtWebioEA2x2DiagErrorClear = _WtWebioEA2x2DiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 4, 5),
    _WtWebioEA2x2DiagErrorClear_Type()
)
wtWebioEA2x2DiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2DiagErrorClear.setStatus("mandatory")
_WtWebioEA24oem_ObjectIdentity = ObjectIdentity
wtWebioEA24oem = _WtWebioEA24oem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14)
)
_WtWebioEA24oemInOut_ObjectIdentity = ObjectIdentity
wtWebioEA24oemInOut = _WtWebioEA24oemInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1)
)


class _WtWebioEA24oemInputs_Type(Integer32):
    """Custom type wtWebioEA24oemInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_WtWebioEA24oemInputs_Type.__name__ = "Integer32"
_WtWebioEA24oemInputs_Object = MibScalar
wtWebioEA24oemInputs = _WtWebioEA24oemInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 1),
    _WtWebioEA24oemInputs_Type()
)
wtWebioEA24oemInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemInputs.setStatus("mandatory")


class _WtWebioEA24oemOutputs_Type(Integer32):
    """Custom type wtWebioEA24oemOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_WtWebioEA24oemOutputs_Type.__name__ = "Integer32"
_WtWebioEA24oemOutputs_Object = MibScalar
wtWebioEA24oemOutputs = _WtWebioEA24oemOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 2),
    _WtWebioEA24oemOutputs_Type()
)
wtWebioEA24oemOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputs.setStatus("mandatory")
_WtWebioEA24oemInputTable_Object = MibTable
wtWebioEA24oemInputTable = _WtWebioEA24oemInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemInputTable.setStatus("mandatory")
_WtWebioEA24oemInputEntry_Object = MibTableRow
wtWebioEA24oemInputEntry = _WtWebioEA24oemInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 3, 1)
)
wtWebioEA24oemInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemInputEntry.setStatus("mandatory")
_WtWebioEA24oemInputNo_Type = Integer32
_WtWebioEA24oemInputNo_Object = MibTableColumn
wtWebioEA24oemInputNo = _WtWebioEA24oemInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 3, 1, 1),
    _WtWebioEA24oemInputNo_Type()
)
wtWebioEA24oemInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemInputNo.setStatus("mandatory")
_WtWebioEA24oemInputCounter_Type = Integer32
_WtWebioEA24oemInputCounter_Object = MibTableColumn
wtWebioEA24oemInputCounter = _WtWebioEA24oemInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 3, 1, 2),
    _WtWebioEA24oemInputCounter_Type()
)
wtWebioEA24oemInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemInputCounter.setStatus("mandatory")
_WtWebioEA24oemInputCounterClear_Type = Integer32
_WtWebioEA24oemInputCounterClear_Object = MibTableColumn
wtWebioEA24oemInputCounterClear = _WtWebioEA24oemInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 3, 1, 3),
    _WtWebioEA24oemInputCounterClear_Type()
)
wtWebioEA24oemInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemInputCounterClear.setStatus("mandatory")


class _WtWebioEA24oemInputState_Type(Integer32):
    """Custom type wtWebioEA24oemInputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemInputState-OFF", 0),
          ("wtWebioEA24oemInputState-ON", 1))
    )


_WtWebioEA24oemInputState_Type.__name__ = "Integer32"
_WtWebioEA24oemInputState_Object = MibTableColumn
wtWebioEA24oemInputState = _WtWebioEA24oemInputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 3, 1, 4),
    _WtWebioEA24oemInputState_Type()
)
wtWebioEA24oemInputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemInputState.setStatus("mandatory")
_WtWebioEA24oemInputValue_Type = Integer32
_WtWebioEA24oemInputValue_Object = MibScalar
wtWebioEA24oemInputValue = _WtWebioEA24oemInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 4),
    _WtWebioEA24oemInputValue_Type()
)
wtWebioEA24oemInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemInputValue.setStatus("mandatory")
_WtWebioEA24oemOutputTable_Object = MibTable
wtWebioEA24oemOutputTable = _WtWebioEA24oemOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputTable.setStatus("mandatory")
_WtWebioEA24oemOutputEntry_Object = MibTableRow
wtWebioEA24oemOutputEntry = _WtWebioEA24oemOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 5, 1)
)
wtWebioEA24oemOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputEntry.setStatus("mandatory")


class _WtWebioEA24oemOutputNo_Type(Integer32):
    """Custom type wtWebioEA24oemOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_WtWebioEA24oemOutputNo_Type.__name__ = "Integer32"
_WtWebioEA24oemOutputNo_Object = MibTableColumn
wtWebioEA24oemOutputNo = _WtWebioEA24oemOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 5, 1, 1),
    _WtWebioEA24oemOutputNo_Type()
)
wtWebioEA24oemOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputNo.setStatus("mandatory")


class _WtWebioEA24oemOutputState_Type(Integer32):
    """Custom type wtWebioEA24oemOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemOutputState-OFF", 0),
          ("wtWebioEA24oemOutputState-ON", 1))
    )


_WtWebioEA24oemOutputState_Type.__name__ = "Integer32"
_WtWebioEA24oemOutputState_Object = MibTableColumn
wtWebioEA24oemOutputState = _WtWebioEA24oemOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 5, 1, 2),
    _WtWebioEA24oemOutputState_Type()
)
wtWebioEA24oemOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputState.setStatus("mandatory")
_WtWebioEA24oemOutputValue_Type = Integer32
_WtWebioEA24oemOutputValue_Object = MibScalar
wtWebioEA24oemOutputValue = _WtWebioEA24oemOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 6),
    _WtWebioEA24oemOutputValue_Type()
)
wtWebioEA24oemOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputValue.setStatus("mandatory")


class _WtWebioEA24oemSetOutput_Type(OctetString):
    """Custom type wtWebioEA24oemSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA24oemSetOutput_Type.__name__ = "OctetString"
_WtWebioEA24oemSetOutput_Object = MibScalar
wtWebioEA24oemSetOutput = _WtWebioEA24oemSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 1, 7),
    _WtWebioEA24oemSetOutput_Type()
)
wtWebioEA24oemSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSetOutput.setStatus("mandatory")
_WtWebioEA24oemSessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA24oemSessCntrl = _WtWebioEA24oemSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 2)
)
_WtWebioEA24oemSessCntrlPassword_Type = OctetString
_WtWebioEA24oemSessCntrlPassword_Object = MibScalar
wtWebioEA24oemSessCntrlPassword = _WtWebioEA24oemSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 2, 1),
    _WtWebioEA24oemSessCntrlPassword_Type()
)
wtWebioEA24oemSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSessCntrlPassword.setStatus("mandatory")


class _WtWebioEA24oemSessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA24oemSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemSessCntrl-NoSession", 0),
          ("wtWebioEA24oemSessCntrl-Session", 1))
    )


_WtWebioEA24oemSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA24oemSessCntrlConfigMode_Object = MibScalar
wtWebioEA24oemSessCntrlConfigMode = _WtWebioEA24oemSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 2, 2),
    _WtWebioEA24oemSessCntrlConfigMode_Type()
)
wtWebioEA24oemSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemSessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA24oemSessCntrlLogout_Type = Integer32
_WtWebioEA24oemSessCntrlLogout_Object = MibScalar
wtWebioEA24oemSessCntrlLogout = _WtWebioEA24oemSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 2, 3),
    _WtWebioEA24oemSessCntrlLogout_Type()
)
wtWebioEA24oemSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSessCntrlLogout.setStatus("mandatory")
_WtWebioEA24oemSessCntrlAdminPassword_Type = OctetString
_WtWebioEA24oemSessCntrlAdminPassword_Object = MibScalar
wtWebioEA24oemSessCntrlAdminPassword = _WtWebioEA24oemSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 2, 4),
    _WtWebioEA24oemSessCntrlAdminPassword_Type()
)
wtWebioEA24oemSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA24oemSessCntrlConfigPassword_Type = OctetString
_WtWebioEA24oemSessCntrlConfigPassword_Object = MibScalar
wtWebioEA24oemSessCntrlConfigPassword = _WtWebioEA24oemSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 2, 5),
    _WtWebioEA24oemSessCntrlConfigPassword_Type()
)
wtWebioEA24oemSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA24oemConfig_ObjectIdentity = ObjectIdentity
wtWebioEA24oemConfig = _WtWebioEA24oemConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3)
)
_WtWebioEA24oemDevice_ObjectIdentity = ObjectIdentity
wtWebioEA24oemDevice = _WtWebioEA24oemDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1)
)
_WtWebioEA24oemText_ObjectIdentity = ObjectIdentity
wtWebioEA24oemText = _WtWebioEA24oemText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 1)
)
_WtWebioEA24oemDeviceName_Type = OctetString
_WtWebioEA24oemDeviceName_Object = MibScalar
wtWebioEA24oemDeviceName = _WtWebioEA24oemDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 1, 1),
    _WtWebioEA24oemDeviceName_Type()
)
wtWebioEA24oemDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDeviceName.setStatus("mandatory")
_WtWebioEA24oemDeviceText_Type = OctetString
_WtWebioEA24oemDeviceText_Object = MibScalar
wtWebioEA24oemDeviceText = _WtWebioEA24oemDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 1, 2),
    _WtWebioEA24oemDeviceText_Type()
)
wtWebioEA24oemDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDeviceText.setStatus("mandatory")
_WtWebioEA24oemDeviceLocation_Type = OctetString
_WtWebioEA24oemDeviceLocation_Object = MibScalar
wtWebioEA24oemDeviceLocation = _WtWebioEA24oemDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 1, 3),
    _WtWebioEA24oemDeviceLocation_Type()
)
wtWebioEA24oemDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDeviceLocation.setStatus("mandatory")
_WtWebioEA24oemDeviceContact_Type = OctetString
_WtWebioEA24oemDeviceContact_Object = MibScalar
wtWebioEA24oemDeviceContact = _WtWebioEA24oemDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 1, 4),
    _WtWebioEA24oemDeviceContact_Type()
)
wtWebioEA24oemDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDeviceContact.setStatus("mandatory")
_WtWebioEA24oemTimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA24oemTimeDate = _WtWebioEA24oemTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2)
)
_WtWebioEA24oemTimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA24oemTimeZone = _WtWebioEA24oemTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1)
)
_WtWebioEA24oemTzOffsetHrs_Type = Integer32
_WtWebioEA24oemTzOffsetHrs_Object = MibScalar
wtWebioEA24oemTzOffsetHrs = _WtWebioEA24oemTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 1),
    _WtWebioEA24oemTzOffsetHrs_Type()
)
wtWebioEA24oemTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTzOffsetHrs.setStatus("mandatory")
_WtWebioEA24oemTzOffsetMin_Type = Integer32
_WtWebioEA24oemTzOffsetMin_Object = MibScalar
wtWebioEA24oemTzOffsetMin = _WtWebioEA24oemTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 2),
    _WtWebioEA24oemTzOffsetMin_Type()
)
wtWebioEA24oemTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTzOffsetMin.setStatus("mandatory")


class _WtWebioEA24oemTzEnable_Type(OctetString):
    """Custom type wtWebioEA24oemTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemTzEnable_Type.__name__ = "OctetString"
_WtWebioEA24oemTzEnable_Object = MibScalar
wtWebioEA24oemTzEnable = _WtWebioEA24oemTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 3),
    _WtWebioEA24oemTzEnable_Type()
)
wtWebioEA24oemTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTzEnable.setStatus("mandatory")
_WtWebioEA24oemStTzOffsetHrs_Type = Integer32
_WtWebioEA24oemStTzOffsetHrs_Object = MibScalar
wtWebioEA24oemStTzOffsetHrs = _WtWebioEA24oemStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 4),
    _WtWebioEA24oemStTzOffsetHrs_Type()
)
wtWebioEA24oemStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzOffsetHrs.setStatus("mandatory")
_WtWebioEA24oemStTzOffsetMin_Type = Integer32
_WtWebioEA24oemStTzOffsetMin_Object = MibScalar
wtWebioEA24oemStTzOffsetMin = _WtWebioEA24oemStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 5),
    _WtWebioEA24oemStTzOffsetMin_Type()
)
wtWebioEA24oemStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzOffsetMin.setStatus("mandatory")


class _WtWebioEA24oemStTzEnable_Type(OctetString):
    """Custom type wtWebioEA24oemStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemStTzEnable_Type.__name__ = "OctetString"
_WtWebioEA24oemStTzEnable_Object = MibScalar
wtWebioEA24oemStTzEnable = _WtWebioEA24oemStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 6),
    _WtWebioEA24oemStTzEnable_Type()
)
wtWebioEA24oemStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzEnable.setStatus("mandatory")


class _WtWebioEA24oemStTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA24oemStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemStartMonth-April", 4),
          ("wtWebioEA24oemStartMonth-August", 8),
          ("wtWebioEA24oemStartMonth-December", 12),
          ("wtWebioEA24oemStartMonth-February", 2),
          ("wtWebioEA24oemStartMonth-January", 1),
          ("wtWebioEA24oemStartMonth-July", 7),
          ("wtWebioEA24oemStartMonth-June", 6),
          ("wtWebioEA24oemStartMonth-March", 3),
          ("wtWebioEA24oemStartMonth-May", 5),
          ("wtWebioEA24oemStartMonth-November", 11),
          ("wtWebioEA24oemStartMonth-October", 10),
          ("wtWebioEA24oemStartMonth-September", 9))
    )


_WtWebioEA24oemStTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA24oemStTzStartMonth_Object = MibScalar
wtWebioEA24oemStTzStartMonth = _WtWebioEA24oemStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 7),
    _WtWebioEA24oemStTzStartMonth_Type()
)
wtWebioEA24oemStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStartMonth.setStatus("mandatory")


class _WtWebioEA24oemStTzStartMode_Type(Integer32):
    """Custom type wtWebioEA24oemStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemStartMode-first", 1),
          ("wtWebioEA24oemStartMode-fourth", 4),
          ("wtWebioEA24oemStartMode-last", 5),
          ("wtWebioEA24oemStartMode-second", 2),
          ("wtWebioEA24oemStartMode-third", 3))
    )


_WtWebioEA24oemStTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA24oemStTzStartMode_Object = MibScalar
wtWebioEA24oemStTzStartMode = _WtWebioEA24oemStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 8),
    _WtWebioEA24oemStTzStartMode_Type()
)
wtWebioEA24oemStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStartMode.setStatus("mandatory")


class _WtWebioEA24oemStTzStartWday_Type(Integer32):
    """Custom type wtWebioEA24oemStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemStartWday-Friday", 6),
          ("wtWebioEA24oemStartWday-Monday", 2),
          ("wtWebioEA24oemStartWday-Saturday", 7),
          ("wtWebioEA24oemStartWday-Sunday", 1),
          ("wtWebioEA24oemStartWday-Thursday", 4),
          ("wtWebioEA24oemStartWday-Tuesday", 3),
          ("wtWebioEA24oemStartWday-Wednesday", 5))
    )


_WtWebioEA24oemStTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA24oemStTzStartWday_Object = MibScalar
wtWebioEA24oemStTzStartWday = _WtWebioEA24oemStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 9),
    _WtWebioEA24oemStTzStartWday_Type()
)
wtWebioEA24oemStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStartWday.setStatus("mandatory")
_WtWebioEA24oemStTzStartHrs_Type = Integer32
_WtWebioEA24oemStTzStartHrs_Object = MibScalar
wtWebioEA24oemStTzStartHrs = _WtWebioEA24oemStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 10),
    _WtWebioEA24oemStTzStartHrs_Type()
)
wtWebioEA24oemStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStartHrs.setStatus("mandatory")
_WtWebioEA24oemStTzStartMin_Type = Integer32
_WtWebioEA24oemStTzStartMin_Object = MibScalar
wtWebioEA24oemStTzStartMin = _WtWebioEA24oemStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 11),
    _WtWebioEA24oemStTzStartMin_Type()
)
wtWebioEA24oemStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStartMin.setStatus("mandatory")


class _WtWebioEA24oemStTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA24oemStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemStopMonth-April", 4),
          ("wtWebioEA24oemStopMonth-August", 8),
          ("wtWebioEA24oemStopMonth-December", 12),
          ("wtWebioEA24oemStopMonth-February", 2),
          ("wtWebioEA24oemStopMonth-January", 1),
          ("wtWebioEA24oemStopMonth-July", 7),
          ("wtWebioEA24oemStopMonth-June", 6),
          ("wtWebioEA24oemStopMonth-March", 3),
          ("wtWebioEA24oemStopMonth-May", 5),
          ("wtWebioEA24oemStopMonth-November", 11),
          ("wtWebioEA24oemStopMonth-October", 10),
          ("wtWebioEA24oemStopMonth-September", 9))
    )


_WtWebioEA24oemStTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA24oemStTzStopMonth_Object = MibScalar
wtWebioEA24oemStTzStopMonth = _WtWebioEA24oemStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 12),
    _WtWebioEA24oemStTzStopMonth_Type()
)
wtWebioEA24oemStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStopMonth.setStatus("mandatory")


class _WtWebioEA24oemStTzStopMode_Type(Integer32):
    """Custom type wtWebioEA24oemStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemStopMode-first", 1),
          ("wtWebioEA24oemStopMode-fourth", 4),
          ("wtWebioEA24oemStopMode-last", 5),
          ("wtWebioEA24oemStopMode-second", 2),
          ("wtWebioEA24oemStopMode-third", 3))
    )


_WtWebioEA24oemStTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA24oemStTzStopMode_Object = MibScalar
wtWebioEA24oemStTzStopMode = _WtWebioEA24oemStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 13),
    _WtWebioEA24oemStTzStopMode_Type()
)
wtWebioEA24oemStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStopMode.setStatus("mandatory")


class _WtWebioEA24oemStTzStopWday_Type(Integer32):
    """Custom type wtWebioEA24oemStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemStopWday-Friday", 6),
          ("wtWebioEA24oemStopWday-Monday", 2),
          ("wtWebioEA24oemStopWday-Saturday", 7),
          ("wtWebioEA24oemStopWday-Sunday", 1),
          ("wtWebioEA24oemStopWday-Thursday", 4),
          ("wtWebioEA24oemStopWday-Tuesday", 3),
          ("wtWebioEA24oemStopWday-Wednesday", 5))
    )


_WtWebioEA24oemStTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA24oemStTzStopWday_Object = MibScalar
wtWebioEA24oemStTzStopWday = _WtWebioEA24oemStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 14),
    _WtWebioEA24oemStTzStopWday_Type()
)
wtWebioEA24oemStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStopWday.setStatus("mandatory")
_WtWebioEA24oemStTzStopHrs_Type = Integer32
_WtWebioEA24oemStTzStopHrs_Object = MibScalar
wtWebioEA24oemStTzStopHrs = _WtWebioEA24oemStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 15),
    _WtWebioEA24oemStTzStopHrs_Type()
)
wtWebioEA24oemStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStopHrs.setStatus("mandatory")
_WtWebioEA24oemStTzStopMin_Type = Integer32
_WtWebioEA24oemStTzStopMin_Object = MibScalar
wtWebioEA24oemStTzStopMin = _WtWebioEA24oemStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 1, 16),
    _WtWebioEA24oemStTzStopMin_Type()
)
wtWebioEA24oemStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStTzStopMin.setStatus("mandatory")
_WtWebioEA24oemTimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA24oemTimeServer = _WtWebioEA24oemTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 2)
)
_WtWebioEA24oemTimeServer1_Type = OctetString
_WtWebioEA24oemTimeServer1_Object = MibScalar
wtWebioEA24oemTimeServer1 = _WtWebioEA24oemTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 2, 1),
    _WtWebioEA24oemTimeServer1_Type()
)
wtWebioEA24oemTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTimeServer1.setStatus("mandatory")
_WtWebioEA24oemTimeServer2_Type = OctetString
_WtWebioEA24oemTimeServer2_Object = MibScalar
wtWebioEA24oemTimeServer2 = _WtWebioEA24oemTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 2, 2),
    _WtWebioEA24oemTimeServer2_Type()
)
wtWebioEA24oemTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTimeServer2.setStatus("mandatory")


class _WtWebioEA24oemTsEnable_Type(OctetString):
    """Custom type wtWebioEA24oemTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemTsEnable_Type.__name__ = "OctetString"
_WtWebioEA24oemTsEnable_Object = MibScalar
wtWebioEA24oemTsEnable = _WtWebioEA24oemTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 2, 3),
    _WtWebioEA24oemTsEnable_Type()
)
wtWebioEA24oemTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTsEnable.setStatus("mandatory")
_WtWebioEA24oemTsSyncTime_Type = Integer32
_WtWebioEA24oemTsSyncTime_Object = MibScalar
wtWebioEA24oemTsSyncTime = _WtWebioEA24oemTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 2, 4),
    _WtWebioEA24oemTsSyncTime_Type()
)
wtWebioEA24oemTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemTsSyncTime.setStatus("mandatory")
_WtWebioEA24oemDeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA24oemDeviceClock = _WtWebioEA24oemDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 3)
)


class _WtWebioEA24oemClockHrs_Type(Integer32):
    """Custom type wtWebioEA24oemClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA24oemClockHrs_Type.__name__ = "Integer32"
_WtWebioEA24oemClockHrs_Object = MibScalar
wtWebioEA24oemClockHrs = _WtWebioEA24oemClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 3, 1),
    _WtWebioEA24oemClockHrs_Type()
)
wtWebioEA24oemClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemClockHrs.setStatus("mandatory")


class _WtWebioEA24oemClockMin_Type(Integer32):
    """Custom type wtWebioEA24oemClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA24oemClockMin_Type.__name__ = "Integer32"
_WtWebioEA24oemClockMin_Object = MibScalar
wtWebioEA24oemClockMin = _WtWebioEA24oemClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 3, 2),
    _WtWebioEA24oemClockMin_Type()
)
wtWebioEA24oemClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemClockMin.setStatus("mandatory")


class _WtWebioEA24oemClockDay_Type(Integer32):
    """Custom type wtWebioEA24oemClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA24oemClockDay_Type.__name__ = "Integer32"
_WtWebioEA24oemClockDay_Object = MibScalar
wtWebioEA24oemClockDay = _WtWebioEA24oemClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 3, 3),
    _WtWebioEA24oemClockDay_Type()
)
wtWebioEA24oemClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemClockDay.setStatus("mandatory")


class _WtWebioEA24oemClockMonth_Type(Integer32):
    """Custom type wtWebioEA24oemClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA24oemClockMonth-April", 4),
          ("wtWebioEA24oemClockMonth-August", 8),
          ("wtWebioEA24oemClockMonth-December", 12),
          ("wtWebioEA24oemClockMonth-February", 2),
          ("wtWebioEA24oemClockMonth-January", 1),
          ("wtWebioEA24oemClockMonth-July", 7),
          ("wtWebioEA24oemClockMonth-June", 6),
          ("wtWebioEA24oemClockMonth-March", 3),
          ("wtWebioEA24oemClockMonth-May", 5),
          ("wtWebioEA24oemClockMonth-November", 11),
          ("wtWebioEA24oemClockMonth-October", 10),
          ("wtWebioEA24oemClockMonth-September", 9))
    )


_WtWebioEA24oemClockMonth_Type.__name__ = "Integer32"
_WtWebioEA24oemClockMonth_Object = MibScalar
wtWebioEA24oemClockMonth = _WtWebioEA24oemClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 3, 4),
    _WtWebioEA24oemClockMonth_Type()
)
wtWebioEA24oemClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemClockMonth.setStatus("mandatory")


class _WtWebioEA24oemClockYear_Type(Integer32):
    """Custom type wtWebioEA24oemClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA24oemClockYear_Type.__name__ = "Integer32"
_WtWebioEA24oemClockYear_Object = MibScalar
wtWebioEA24oemClockYear = _WtWebioEA24oemClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 2, 3, 5),
    _WtWebioEA24oemClockYear_Type()
)
wtWebioEA24oemClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemClockYear.setStatus("mandatory")
_WtWebioEA24oemBasic_ObjectIdentity = ObjectIdentity
wtWebioEA24oemBasic = _WtWebioEA24oemBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3)
)
_WtWebioEA24oemNetwork_ObjectIdentity = ObjectIdentity
wtWebioEA24oemNetwork = _WtWebioEA24oemNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1)
)
_WtWebioEA24oemIpAddress_Type = IpAddress
_WtWebioEA24oemIpAddress_Object = MibScalar
wtWebioEA24oemIpAddress = _WtWebioEA24oemIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1, 1),
    _WtWebioEA24oemIpAddress_Type()
)
wtWebioEA24oemIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemIpAddress.setStatus("mandatory")
_WtWebioEA24oemSubnetMask_Type = IpAddress
_WtWebioEA24oemSubnetMask_Object = MibScalar
wtWebioEA24oemSubnetMask = _WtWebioEA24oemSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1, 2),
    _WtWebioEA24oemSubnetMask_Type()
)
wtWebioEA24oemSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSubnetMask.setStatus("mandatory")
_WtWebioEA24oemGateway_Type = IpAddress
_WtWebioEA24oemGateway_Object = MibScalar
wtWebioEA24oemGateway = _WtWebioEA24oemGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1, 3),
    _WtWebioEA24oemGateway_Type()
)
wtWebioEA24oemGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemGateway.setStatus("mandatory")
_WtWebioEA24oemDnsServer1_Type = OctetString
_WtWebioEA24oemDnsServer1_Object = MibScalar
wtWebioEA24oemDnsServer1 = _WtWebioEA24oemDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1, 4),
    _WtWebioEA24oemDnsServer1_Type()
)
wtWebioEA24oemDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDnsServer1.setStatus("mandatory")
_WtWebioEA24oemDnsServer2_Type = OctetString
_WtWebioEA24oemDnsServer2_Object = MibScalar
wtWebioEA24oemDnsServer2 = _WtWebioEA24oemDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1, 5),
    _WtWebioEA24oemDnsServer2_Type()
)
wtWebioEA24oemDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDnsServer2.setStatus("mandatory")
_WtWebioEA24oemAddConfig_Type = OctetString
_WtWebioEA24oemAddConfig_Object = MibScalar
wtWebioEA24oemAddConfig = _WtWebioEA24oemAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 1, 6),
    _WtWebioEA24oemAddConfig_Type()
)
wtWebioEA24oemAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAddConfig.setStatus("mandatory")
_WtWebioEA24oemHTTP_ObjectIdentity = ObjectIdentity
wtWebioEA24oemHTTP = _WtWebioEA24oemHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 2)
)
_WtWebioEA24oemStartup_Type = OctetString
_WtWebioEA24oemStartup_Object = MibScalar
wtWebioEA24oemStartup = _WtWebioEA24oemStartup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 2, 1),
    _WtWebioEA24oemStartup_Type()
)
wtWebioEA24oemStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemStartup.setStatus("mandatory")
_WtWebioEA24oemGetHeaderEnable_Type = OctetString
_WtWebioEA24oemGetHeaderEnable_Object = MibScalar
wtWebioEA24oemGetHeaderEnable = _WtWebioEA24oemGetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 2, 2),
    _WtWebioEA24oemGetHeaderEnable_Type()
)
wtWebioEA24oemGetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemGetHeaderEnable.setStatus("mandatory")


class _WtWebioEA24oemHttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemHttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemHttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemHttpInputTrigger_Object = MibScalar
wtWebioEA24oemHttpInputTrigger = _WtWebioEA24oemHttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 2, 3),
    _WtWebioEA24oemHttpInputTrigger_Type()
)
wtWebioEA24oemHttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemHttpInputTrigger.setStatus("mandatory")


class _WtWebioEA24oemHttpPort_Type(Integer32):
    """Custom type wtWebioEA24oemHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA24oemHttpPort_Type.__name__ = "Integer32"
_WtWebioEA24oemHttpPort_Object = MibScalar
wtWebioEA24oemHttpPort = _WtWebioEA24oemHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 2, 4),
    _WtWebioEA24oemHttpPort_Type()
)
wtWebioEA24oemHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemHttpPort.setStatus("mandatory")
_WtWebioEA24oemMail_ObjectIdentity = ObjectIdentity
wtWebioEA24oemMail = _WtWebioEA24oemMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3)
)
_WtWebioEA24oemMailAdName_Type = OctetString
_WtWebioEA24oemMailAdName_Object = MibScalar
wtWebioEA24oemMailAdName = _WtWebioEA24oemMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 1),
    _WtWebioEA24oemMailAdName_Type()
)
wtWebioEA24oemMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailAdName.setStatus("mandatory")
_WtWebioEA24oemMailReply_Type = OctetString
_WtWebioEA24oemMailReply_Object = MibScalar
wtWebioEA24oemMailReply = _WtWebioEA24oemMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 2),
    _WtWebioEA24oemMailReply_Type()
)
wtWebioEA24oemMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailReply.setStatus("mandatory")
_WtWebioEA24oemMailServer_Type = OctetString
_WtWebioEA24oemMailServer_Object = MibScalar
wtWebioEA24oemMailServer = _WtWebioEA24oemMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 3),
    _WtWebioEA24oemMailServer_Type()
)
wtWebioEA24oemMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailServer.setStatus("mandatory")
_WtWebioEA24oemMailEnable_Type = OctetString
_WtWebioEA24oemMailEnable_Object = MibScalar
wtWebioEA24oemMailEnable = _WtWebioEA24oemMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 4),
    _WtWebioEA24oemMailEnable_Type()
)
wtWebioEA24oemMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailEnable.setStatus("mandatory")


class _WtWebioEA24oemMailAuthentication_Type(OctetString):
    """Custom type wtWebioEA24oemMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemMailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA24oemMailAuthentication_Object = MibScalar
wtWebioEA24oemMailAuthentication = _WtWebioEA24oemMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 5),
    _WtWebioEA24oemMailAuthentication_Type()
)
wtWebioEA24oemMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailAuthentication.setStatus("mandatory")
_WtWebioEA24oemMailAuthUser_Type = OctetString
_WtWebioEA24oemMailAuthUser_Object = MibScalar
wtWebioEA24oemMailAuthUser = _WtWebioEA24oemMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 6),
    _WtWebioEA24oemMailAuthUser_Type()
)
wtWebioEA24oemMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailAuthUser.setStatus("mandatory")
_WtWebioEA24oemMailAuthPassword_Type = OctetString
_WtWebioEA24oemMailAuthPassword_Object = MibScalar
wtWebioEA24oemMailAuthPassword = _WtWebioEA24oemMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 7),
    _WtWebioEA24oemMailAuthPassword_Type()
)
wtWebioEA24oemMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailAuthPassword.setStatus("mandatory")
_WtWebioEA24oemMailPop3Server_Type = OctetString
_WtWebioEA24oemMailPop3Server_Object = MibScalar
wtWebioEA24oemMailPop3Server = _WtWebioEA24oemMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 3, 8),
    _WtWebioEA24oemMailPop3Server_Type()
)
wtWebioEA24oemMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMailPop3Server.setStatus("mandatory")
_WtWebioEA24oemSNMP_ObjectIdentity = ObjectIdentity
wtWebioEA24oemSNMP = _WtWebioEA24oemSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 4)
)
_WtWebioEA24oemSnmpEnable_Type = OctetString
_WtWebioEA24oemSnmpEnable_Object = MibScalar
wtWebioEA24oemSnmpEnable = _WtWebioEA24oemSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 4, 1),
    _WtWebioEA24oemSnmpEnable_Type()
)
wtWebioEA24oemSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSnmpEnable.setStatus("mandatory")
_WtWebioEA24oemSnmpCommunityStringRead_Type = OctetString
_WtWebioEA24oemSnmpCommunityStringRead_Object = MibScalar
wtWebioEA24oemSnmpCommunityStringRead = _WtWebioEA24oemSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 4, 2),
    _WtWebioEA24oemSnmpCommunityStringRead_Type()
)
wtWebioEA24oemSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA24oemSnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA24oemSnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA24oemSnmpCommunityStringReadWrite = _WtWebioEA24oemSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 4, 3),
    _WtWebioEA24oemSnmpCommunityStringReadWrite_Type()
)
wtWebioEA24oemSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA24oemSnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA24oemSnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA24oemSnmpSystemTrapManagerIP = _WtWebioEA24oemSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 4, 4),
    _WtWebioEA24oemSnmpSystemTrapManagerIP_Type()
)
wtWebioEA24oemSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA24oemSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA24oemSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA24oemSnmpSystemTrapEnable_Object = MibScalar
wtWebioEA24oemSnmpSystemTrapEnable = _WtWebioEA24oemSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 4, 5),
    _WtWebioEA24oemSnmpSystemTrapEnable_Type()
)
wtWebioEA24oemSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA24oemUDP_ObjectIdentity = ObjectIdentity
wtWebioEA24oemUDP = _WtWebioEA24oemUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 5)
)
_WtWebioEA24oemUdpAdminPort_Type = Integer32
_WtWebioEA24oemUdpAdminPort_Object = MibScalar
wtWebioEA24oemUdpAdminPort = _WtWebioEA24oemUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 5, 1),
    _WtWebioEA24oemUdpAdminPort_Type()
)
wtWebioEA24oemUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemUdpAdminPort.setStatus("mandatory")
_WtWebioEA24oemUdpEnable_Type = OctetString
_WtWebioEA24oemUdpEnable_Object = MibScalar
wtWebioEA24oemUdpEnable = _WtWebioEA24oemUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 5, 2),
    _WtWebioEA24oemUdpEnable_Type()
)
wtWebioEA24oemUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemUdpEnable.setStatus("mandatory")
_WtWebioEA24oemUdpRemotePort_Type = Integer32
_WtWebioEA24oemUdpRemotePort_Object = MibScalar
wtWebioEA24oemUdpRemotePort = _WtWebioEA24oemUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 5, 3),
    _WtWebioEA24oemUdpRemotePort_Type()
)
wtWebioEA24oemUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemUdpRemotePort.setStatus("mandatory")
_WtWebioEA24oemBinary_ObjectIdentity = ObjectIdentity
wtWebioEA24oemBinary = _WtWebioEA24oemBinary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6)
)


class _WtWebioEA24oemBinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA24oemBinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryModeCount_Object = MibScalar
wtWebioEA24oemBinaryModeCount = _WtWebioEA24oemBinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 1),
    _WtWebioEA24oemBinaryModeCount_Type()
)
wtWebioEA24oemBinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryModeCount.setStatus("mandatory")
_WtWebioEA24oemBinaryIfTable_Object = MibTable
wtWebioEA24oemBinaryIfTable = _WtWebioEA24oemBinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryIfTable.setStatus("mandatory")
_WtWebioEA24oemBinaryIfEntry_Object = MibTableRow
wtWebioEA24oemBinaryIfEntry = _WtWebioEA24oemBinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 2, 1)
)
wtWebioEA24oemBinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryIfEntry.setStatus("mandatory")


class _WtWebioEA24oemBinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA24oemBinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryModeNo_Object = MibTableColumn
wtWebioEA24oemBinaryModeNo = _WtWebioEA24oemBinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA24oemBinaryModeNo_Type()
)
wtWebioEA24oemBinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryModeNo.setStatus("mandatory")
_WtWebioEA24oemBinaryTable_Object = MibTable
wtWebioEA24oemBinaryTable = _WtWebioEA24oemBinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTable.setStatus("mandatory")
_WtWebioEA24oemBinaryEntry_Object = MibTableRow
wtWebioEA24oemBinaryEntry = _WtWebioEA24oemBinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1)
)
wtWebioEA24oemBinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryEntry.setStatus("mandatory")


class _WtWebioEA24oemBinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryOperationMode_Object = MibTableColumn
wtWebioEA24oemBinaryOperationMode = _WtWebioEA24oemBinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA24oemBinaryOperationMode_Type()
)
wtWebioEA24oemBinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryOperationMode.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA24oemBinaryTcpServerLocalPort = _WtWebioEA24oemBinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA24oemBinaryTcpServerLocalPort_Type()
)
wtWebioEA24oemBinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA24oemBinaryTcpServerInputTrigger = _WtWebioEA24oemBinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA24oemBinaryTcpServerInputTrigger_Type()
)
wtWebioEA24oemBinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA24oemBinaryTcpServerApplicationMode = _WtWebioEA24oemBinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA24oemBinaryTcpServerApplicationMode_Type()
)
wtWebioEA24oemBinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientLocalPort = _WtWebioEA24oemBinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA24oemBinaryTcpClientLocalPort_Type()
)
wtWebioEA24oemBinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientServerPort = _WtWebioEA24oemBinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA24oemBinaryTcpClientServerPort_Type()
)
wtWebioEA24oemBinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA24oemBinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA24oemBinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientServerIpAddr = _WtWebioEA24oemBinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA24oemBinaryTcpClientServerIpAddr_Type()
)
wtWebioEA24oemBinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA24oemBinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA24oemBinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientServerPassword = _WtWebioEA24oemBinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA24oemBinaryTcpClientServerPassword_Type()
)
wtWebioEA24oemBinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA24oemBinaryTcpClientInactivity_Type = Integer32
_WtWebioEA24oemBinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientInactivity = _WtWebioEA24oemBinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA24oemBinaryTcpClientInactivity_Type()
)
wtWebioEA24oemBinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientInputTrigger = _WtWebioEA24oemBinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA24oemBinaryTcpClientInputTrigger_Type()
)
wtWebioEA24oemBinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA24oemBinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientInterval = _WtWebioEA24oemBinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA24oemBinaryTcpClientInterval_Type()
)
wtWebioEA24oemBinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientApplicationMode = _WtWebioEA24oemBinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA24oemBinaryTcpClientApplicationMode_Type()
)
wtWebioEA24oemBinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA24oemBinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA24oemBinaryUdpPeerLocalPort = _WtWebioEA24oemBinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA24oemBinaryUdpPeerLocalPort_Type()
)
wtWebioEA24oemBinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA24oemBinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA24oemBinaryUdpPeerRemotePort = _WtWebioEA24oemBinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA24oemBinaryUdpPeerRemotePort_Type()
)
wtWebioEA24oemBinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA24oemBinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA24oemBinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA24oemBinaryUdpPeerRemoteIpAddr = _WtWebioEA24oemBinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA24oemBinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA24oemBinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA24oemBinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA24oemBinaryUdpPeerInputTrigger = _WtWebioEA24oemBinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA24oemBinaryUdpPeerInputTrigger_Type()
)
wtWebioEA24oemBinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA24oemBinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA24oemBinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA24oemBinaryUdpPeerInterval = _WtWebioEA24oemBinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA24oemBinaryUdpPeerInterval_Type()
)
wtWebioEA24oemBinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA24oemBinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA24oemBinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemBinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA24oemBinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA24oemBinaryUdpPeerApplicationMode = _WtWebioEA24oemBinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA24oemBinaryUdpPeerApplicationMode_Type()
)
wtWebioEA24oemBinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA24oemBinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryConnectedPort_Object = MibTableColumn
wtWebioEA24oemBinaryConnectedPort = _WtWebioEA24oemBinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA24oemBinaryConnectedPort_Type()
)
wtWebioEA24oemBinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryConnectedPort.setStatus("mandatory")
_WtWebioEA24oemBinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA24oemBinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA24oemBinaryConnectedIpAddr = _WtWebioEA24oemBinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA24oemBinaryConnectedIpAddr_Type()
)
wtWebioEA24oemBinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA24oemBinaryTcpServerClientHttpPort = _WtWebioEA24oemBinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA24oemBinaryTcpServerClientHttpPort_Type()
)
wtWebioEA24oemBinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA24oemBinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA24oemBinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemBinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA24oemBinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA24oemBinaryTcpClientServerHttpPort = _WtWebioEA24oemBinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA24oemBinaryTcpClientServerHttpPort_Type()
)
wtWebioEA24oemBinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemBinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA24oemSyslog_ObjectIdentity = ObjectIdentity
wtWebioEA24oemSyslog = _WtWebioEA24oemSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 7)
)
_WtWebioEA24oemSyslogServerIP_Type = OctetString
_WtWebioEA24oemSyslogServerIP_Object = MibScalar
wtWebioEA24oemSyslogServerIP = _WtWebioEA24oemSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 7, 1),
    _WtWebioEA24oemSyslogServerIP_Type()
)
wtWebioEA24oemSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSyslogServerIP.setStatus("mandatory")
_WtWebioEA24oemSyslogServerPort_Type = Integer32
_WtWebioEA24oemSyslogServerPort_Object = MibScalar
wtWebioEA24oemSyslogServerPort = _WtWebioEA24oemSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 7, 2),
    _WtWebioEA24oemSyslogServerPort_Type()
)
wtWebioEA24oemSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSyslogServerPort.setStatus("mandatory")


class _WtWebioEA24oemSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA24oemSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA24oemSyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA24oemSyslogSystemMessagesEnable = _WtWebioEA24oemSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 7, 3),
    _WtWebioEA24oemSyslogSystemMessagesEnable_Type()
)
wtWebioEA24oemSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA24oemSyslogEnable_Type = OctetString
_WtWebioEA24oemSyslogEnable_Object = MibScalar
wtWebioEA24oemSyslogEnable = _WtWebioEA24oemSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 7, 4),
    _WtWebioEA24oemSyslogEnable_Type()
)
wtWebioEA24oemSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSyslogEnable.setStatus("mandatory")
_WtWebioEA24oemFTP_ObjectIdentity = ObjectIdentity
wtWebioEA24oemFTP = _WtWebioEA24oemFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8)
)
_WtWebioEA24oemFTPServerIP_Type = OctetString
_WtWebioEA24oemFTPServerIP_Object = MibScalar
wtWebioEA24oemFTPServerIP = _WtWebioEA24oemFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 1),
    _WtWebioEA24oemFTPServerIP_Type()
)
wtWebioEA24oemFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPServerIP.setStatus("mandatory")
_WtWebioEA24oemFTPServerControlPort_Type = Integer32
_WtWebioEA24oemFTPServerControlPort_Object = MibScalar
wtWebioEA24oemFTPServerControlPort = _WtWebioEA24oemFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 2),
    _WtWebioEA24oemFTPServerControlPort_Type()
)
wtWebioEA24oemFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPServerControlPort.setStatus("mandatory")
_WtWebioEA24oemFTPUserName_Type = OctetString
_WtWebioEA24oemFTPUserName_Object = MibScalar
wtWebioEA24oemFTPUserName = _WtWebioEA24oemFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 3),
    _WtWebioEA24oemFTPUserName_Type()
)
wtWebioEA24oemFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPUserName.setStatus("mandatory")
_WtWebioEA24oemFTPPassword_Type = OctetString
_WtWebioEA24oemFTPPassword_Object = MibScalar
wtWebioEA24oemFTPPassword = _WtWebioEA24oemFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 4),
    _WtWebioEA24oemFTPPassword_Type()
)
wtWebioEA24oemFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPPassword.setStatus("mandatory")
_WtWebioEA24oemFTPAccount_Type = OctetString
_WtWebioEA24oemFTPAccount_Object = MibScalar
wtWebioEA24oemFTPAccount = _WtWebioEA24oemFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 5),
    _WtWebioEA24oemFTPAccount_Type()
)
wtWebioEA24oemFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPAccount.setStatus("mandatory")
_WtWebioEA24oemFTPOption_Type = OctetString
_WtWebioEA24oemFTPOption_Object = MibScalar
wtWebioEA24oemFTPOption = _WtWebioEA24oemFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 6),
    _WtWebioEA24oemFTPOption_Type()
)
wtWebioEA24oemFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPOption.setStatus("mandatory")
_WtWebioEA24oemFTPEnable_Type = OctetString
_WtWebioEA24oemFTPEnable_Object = MibScalar
wtWebioEA24oemFTPEnable = _WtWebioEA24oemFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 3, 8, 7),
    _WtWebioEA24oemFTPEnable_Type()
)
wtWebioEA24oemFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemFTPEnable.setStatus("mandatory")
_WtWebioEA24oemOutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA24oemOutputMode = _WtWebioEA24oemOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 4)
)
_WtWebioEA24oemOutputModeTable_Object = MibTable
wtWebioEA24oemOutputModeTable = _WtWebioEA24oemOutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputModeTable.setStatus("mandatory")
_WtWebioEA24oemOutputModeEntry_Object = MibTableRow
wtWebioEA24oemOutputModeEntry = _WtWebioEA24oemOutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 4, 1, 1)
)
wtWebioEA24oemOutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputModeEntry.setStatus("mandatory")


class _WtWebioEA24oemOutputModeBit_Type(OctetString):
    """Custom type wtWebioEA24oemOutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemOutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA24oemOutputModeBit_Object = MibTableColumn
wtWebioEA24oemOutputModeBit = _WtWebioEA24oemOutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 4, 1, 1, 1),
    _WtWebioEA24oemOutputModeBit_Type()
)
wtWebioEA24oemOutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputModeBit.setStatus("mandatory")


class _WtWebioEA24oemSafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA24oemSafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA24oemSafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA24oemSafetyTimeout_Object = MibScalar
wtWebioEA24oemSafetyTimeout = _WtWebioEA24oemSafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 4, 2),
    _WtWebioEA24oemSafetyTimeout_Type()
)
wtWebioEA24oemSafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemSafetyTimeout.setStatus("mandatory")
_WtWebioEA24oemLoadControlEnable_Type = OctetString
_WtWebioEA24oemLoadControlEnable_Object = MibScalar
wtWebioEA24oemLoadControlEnable = _WtWebioEA24oemLoadControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 4, 3),
    _WtWebioEA24oemLoadControlEnable_Type()
)
wtWebioEA24oemLoadControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemLoadControlEnable.setStatus("mandatory")
_WtWebioEA24oemAlarm_ObjectIdentity = ObjectIdentity
wtWebioEA24oemAlarm = _WtWebioEA24oemAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5)
)


class _WtWebioEA24oemAlarmCount_Type(Integer32):
    """Custom type wtWebioEA24oemAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA24oemAlarmCount_Type.__name__ = "Integer32"
_WtWebioEA24oemAlarmCount_Object = MibScalar
wtWebioEA24oemAlarmCount = _WtWebioEA24oemAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 1),
    _WtWebioEA24oemAlarmCount_Type()
)
wtWebioEA24oemAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmCount.setStatus("mandatory")
_WtWebioEA24oemAlarmIfTable_Object = MibTable
wtWebioEA24oemAlarmIfTable = _WtWebioEA24oemAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmIfTable.setStatus("mandatory")
_WtWebioEA24oemAlarmIfEntry_Object = MibTableRow
wtWebioEA24oemAlarmIfEntry = _WtWebioEA24oemAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 2, 1)
)
wtWebioEA24oemAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmIfEntry.setStatus("mandatory")


class _WtWebioEA24oemAlarmNo_Type(Integer32):
    """Custom type wtWebioEA24oemAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA24oemAlarmNo_Type.__name__ = "Integer32"
_WtWebioEA24oemAlarmNo_Object = MibTableColumn
wtWebioEA24oemAlarmNo = _WtWebioEA24oemAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 2, 1, 1),
    _WtWebioEA24oemAlarmNo_Type()
)
wtWebioEA24oemAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmNo.setStatus("mandatory")
_WtWebioEA24oemAlarmTable_Object = MibTable
wtWebioEA24oemAlarmTable = _WtWebioEA24oemAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmTable.setStatus("mandatory")
_WtWebioEA24oemAlarmEntry_Object = MibTableRow
wtWebioEA24oemAlarmEntry = _WtWebioEA24oemAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1)
)
wtWebioEA24oemAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmEntry.setStatus("mandatory")


class _WtWebioEA24oemAlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemAlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA24oemAlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemAlarmInputTrigger_Object = MibTableColumn
wtWebioEA24oemAlarmInputTrigger = _WtWebioEA24oemAlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 1),
    _WtWebioEA24oemAlarmInputTrigger_Type()
)
wtWebioEA24oemAlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA24oemAlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemAlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA24oemAlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemAlarmOutputTrigger_Object = MibTableColumn
wtWebioEA24oemAlarmOutputTrigger = _WtWebioEA24oemAlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 2),
    _WtWebioEA24oemAlarmOutputTrigger_Type()
)
wtWebioEA24oemAlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA24oemAlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA24oemAlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemAlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA24oemAlarmSystemTrigger_Object = MibTableColumn
wtWebioEA24oemAlarmSystemTrigger = _WtWebioEA24oemAlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 3),
    _WtWebioEA24oemAlarmSystemTrigger_Type()
)
wtWebioEA24oemAlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA24oemAlarmMaxCounterValue_Type = OctetString
_WtWebioEA24oemAlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA24oemAlarmMaxCounterValue = _WtWebioEA24oemAlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 4),
    _WtWebioEA24oemAlarmMaxCounterValue_Type()
)
wtWebioEA24oemAlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA24oemAlarmInterval_Type = OctetString
_WtWebioEA24oemAlarmInterval_Object = MibTableColumn
wtWebioEA24oemAlarmInterval = _WtWebioEA24oemAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 5),
    _WtWebioEA24oemAlarmInterval_Type()
)
wtWebioEA24oemAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmInterval.setStatus("mandatory")


class _WtWebioEA24oemAlarmEnable_Type(OctetString):
    """Custom type wtWebioEA24oemAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemAlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA24oemAlarmEnable_Object = MibTableColumn
wtWebioEA24oemAlarmEnable = _WtWebioEA24oemAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 6),
    _WtWebioEA24oemAlarmEnable_Type()
)
wtWebioEA24oemAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmEnable.setStatus("mandatory")
_WtWebioEA24oemAlarmMailAddr_Type = OctetString
_WtWebioEA24oemAlarmMailAddr_Object = MibTableColumn
wtWebioEA24oemAlarmMailAddr = _WtWebioEA24oemAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 7),
    _WtWebioEA24oemAlarmMailAddr_Type()
)
wtWebioEA24oemAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmMailAddr.setStatus("mandatory")
_WtWebioEA24oemAlarmMailSubject_Type = OctetString
_WtWebioEA24oemAlarmMailSubject_Object = MibTableColumn
wtWebioEA24oemAlarmMailSubject = _WtWebioEA24oemAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 8),
    _WtWebioEA24oemAlarmMailSubject_Type()
)
wtWebioEA24oemAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmMailSubject.setStatus("mandatory")
_WtWebioEA24oemAlarmMailText_Type = OctetString
_WtWebioEA24oemAlarmMailText_Object = MibTableColumn
wtWebioEA24oemAlarmMailText = _WtWebioEA24oemAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 9),
    _WtWebioEA24oemAlarmMailText_Type()
)
wtWebioEA24oemAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmMailText.setStatus("mandatory")
_WtWebioEA24oemAlarmSnmpManagerIP_Type = OctetString
_WtWebioEA24oemAlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA24oemAlarmSnmpManagerIP = _WtWebioEA24oemAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 10),
    _WtWebioEA24oemAlarmSnmpManagerIP_Type()
)
wtWebioEA24oemAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA24oemAlarmSnmpTrapText_Type = OctetString
_WtWebioEA24oemAlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA24oemAlarmSnmpTrapText = _WtWebioEA24oemAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 11),
    _WtWebioEA24oemAlarmSnmpTrapText_Type()
)
wtWebioEA24oemAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA24oemAlarmUdpIpAddr_Type = OctetString
_WtWebioEA24oemAlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA24oemAlarmUdpIpAddr = _WtWebioEA24oemAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 12),
    _WtWebioEA24oemAlarmUdpIpAddr_Type()
)
wtWebioEA24oemAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA24oemAlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA24oemAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemAlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA24oemAlarmUdpPort_Object = MibTableColumn
wtWebioEA24oemAlarmUdpPort = _WtWebioEA24oemAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 13),
    _WtWebioEA24oemAlarmUdpPort_Type()
)
wtWebioEA24oemAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmUdpPort.setStatus("mandatory")
_WtWebioEA24oemAlarmUdpText_Type = OctetString
_WtWebioEA24oemAlarmUdpText_Object = MibTableColumn
wtWebioEA24oemAlarmUdpText = _WtWebioEA24oemAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 14),
    _WtWebioEA24oemAlarmUdpText_Type()
)
wtWebioEA24oemAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmUdpText.setStatus("mandatory")
_WtWebioEA24oemAlarmTcpIpAddr_Type = OctetString
_WtWebioEA24oemAlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA24oemAlarmTcpIpAddr = _WtWebioEA24oemAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 15),
    _WtWebioEA24oemAlarmTcpIpAddr_Type()
)
wtWebioEA24oemAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA24oemAlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA24oemAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemAlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA24oemAlarmTcpPort_Object = MibTableColumn
wtWebioEA24oemAlarmTcpPort = _WtWebioEA24oemAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 16),
    _WtWebioEA24oemAlarmTcpPort_Type()
)
wtWebioEA24oemAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmTcpPort.setStatus("mandatory")
_WtWebioEA24oemAlarmTcpText_Type = OctetString
_WtWebioEA24oemAlarmTcpText_Object = MibTableColumn
wtWebioEA24oemAlarmTcpText = _WtWebioEA24oemAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 17),
    _WtWebioEA24oemAlarmTcpText_Type()
)
wtWebioEA24oemAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmTcpText.setStatus("mandatory")
_WtWebioEA24oemAlarmSyslogIpAddr_Type = OctetString
_WtWebioEA24oemAlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA24oemAlarmSyslogIpAddr = _WtWebioEA24oemAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 18),
    _WtWebioEA24oemAlarmSyslogIpAddr_Type()
)
wtWebioEA24oemAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA24oemAlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA24oemAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA24oemAlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA24oemAlarmSyslogPort_Object = MibTableColumn
wtWebioEA24oemAlarmSyslogPort = _WtWebioEA24oemAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 19),
    _WtWebioEA24oemAlarmSyslogPort_Type()
)
wtWebioEA24oemAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmSyslogPort.setStatus("mandatory")
_WtWebioEA24oemAlarmSyslogText_Type = OctetString
_WtWebioEA24oemAlarmSyslogText_Object = MibTableColumn
wtWebioEA24oemAlarmSyslogText = _WtWebioEA24oemAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 20),
    _WtWebioEA24oemAlarmSyslogText_Type()
)
wtWebioEA24oemAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmSyslogText.setStatus("mandatory")
_WtWebioEA24oemAlarmFtpDataPort_Type = OctetString
_WtWebioEA24oemAlarmFtpDataPort_Object = MibTableColumn
wtWebioEA24oemAlarmFtpDataPort = _WtWebioEA24oemAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 21),
    _WtWebioEA24oemAlarmFtpDataPort_Type()
)
wtWebioEA24oemAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA24oemAlarmFtpFileName_Type = OctetString
_WtWebioEA24oemAlarmFtpFileName_Object = MibTableColumn
wtWebioEA24oemAlarmFtpFileName = _WtWebioEA24oemAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 22),
    _WtWebioEA24oemAlarmFtpFileName_Type()
)
wtWebioEA24oemAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmFtpFileName.setStatus("mandatory")
_WtWebioEA24oemAlarmFtpText_Type = OctetString
_WtWebioEA24oemAlarmFtpText_Object = MibTableColumn
wtWebioEA24oemAlarmFtpText = _WtWebioEA24oemAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 23),
    _WtWebioEA24oemAlarmFtpText_Type()
)
wtWebioEA24oemAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmFtpText.setStatus("mandatory")


class _WtWebioEA24oemAlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA24oemAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemAlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA24oemAlarmFtpOption_Object = MibTableColumn
wtWebioEA24oemAlarmFtpOption = _WtWebioEA24oemAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 24),
    _WtWebioEA24oemAlarmFtpOption_Type()
)
wtWebioEA24oemAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmFtpOption.setStatus("mandatory")
_WtWebioEA24oemAlarmTimerCron_Type = OctetString
_WtWebioEA24oemAlarmTimerCron_Object = MibTableColumn
wtWebioEA24oemAlarmTimerCron = _WtWebioEA24oemAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 3, 1, 25),
    _WtWebioEA24oemAlarmTimerCron_Type()
)
wtWebioEA24oemAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemAlarmTimerCron.setStatus("mandatory")


class _WtWebioEA24oemLoadControlView_Type(OctetString):
    """Custom type wtWebioEA24oemLoadControlView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemLoadControlView_Type.__name__ = "OctetString"
_WtWebioEA24oemLoadControlView_Object = MibScalar
wtWebioEA24oemLoadControlView = _WtWebioEA24oemLoadControlView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 4),
    _WtWebioEA24oemLoadControlView_Type()
)
wtWebioEA24oemLoadControlView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemLoadControlView.setStatus("mandatory")


class _WtWebioEA24oemLCShutDownView_Type(OctetString):
    """Custom type wtWebioEA24oemLCShutDownView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemLCShutDownView_Type.__name__ = "OctetString"
_WtWebioEA24oemLCShutDownView_Object = MibScalar
wtWebioEA24oemLCShutDownView = _WtWebioEA24oemLCShutDownView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 1, 5, 5),
    _WtWebioEA24oemLCShutDownView_Type()
)
wtWebioEA24oemLCShutDownView.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemLCShutDownView.setStatus("mandatory")
_WtWebioEA24oemPorts_ObjectIdentity = ObjectIdentity
wtWebioEA24oemPorts = _WtWebioEA24oemPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2)
)
_WtWebioEA24oemInputPortTable_Object = MibTable
wtWebioEA24oemInputPortTable = _WtWebioEA24oemInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemInputPortTable.setStatus("mandatory")
_WtWebioEA24oemInputPortEntry_Object = MibTableRow
wtWebioEA24oemInputPortEntry = _WtWebioEA24oemInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 1, 1)
)
wtWebioEA24oemInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemInputPortEntry.setStatus("mandatory")
_WtWebioEA24oemPortInputName_Type = OctetString
_WtWebioEA24oemPortInputName_Object = MibTableColumn
wtWebioEA24oemPortInputName = _WtWebioEA24oemPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 1, 1, 1),
    _WtWebioEA24oemPortInputName_Type()
)
wtWebioEA24oemPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortInputName.setStatus("mandatory")
_WtWebioEA24oemPortInputText_Type = OctetString
_WtWebioEA24oemPortInputText_Object = MibTableColumn
wtWebioEA24oemPortInputText = _WtWebioEA24oemPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 1, 1, 2),
    _WtWebioEA24oemPortInputText_Type()
)
wtWebioEA24oemPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortInputText.setStatus("mandatory")


class _WtWebioEA24oemPortInputMode_Type(OctetString):
    """Custom type wtWebioEA24oemPortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemPortInputMode_Type.__name__ = "OctetString"
_WtWebioEA24oemPortInputMode_Object = MibTableColumn
wtWebioEA24oemPortInputMode = _WtWebioEA24oemPortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 1, 1, 3),
    _WtWebioEA24oemPortInputMode_Type()
)
wtWebioEA24oemPortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortInputMode.setStatus("mandatory")
_WtWebioEA24oemPortInputFilter_Type = Integer32
_WtWebioEA24oemPortInputFilter_Object = MibTableColumn
wtWebioEA24oemPortInputFilter = _WtWebioEA24oemPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 1, 1, 4),
    _WtWebioEA24oemPortInputFilter_Type()
)
wtWebioEA24oemPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortInputFilter.setStatus("mandatory")
_WtWebioEA24oemOutputPortTable_Object = MibTable
wtWebioEA24oemOutputPortTable = _WtWebioEA24oemOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputPortTable.setStatus("mandatory")
_WtWebioEA24oemOutputPortEntry_Object = MibTableRow
wtWebioEA24oemOutputPortEntry = _WtWebioEA24oemOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1)
)
wtWebioEA24oemOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA24oemOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA24oemOutputPortEntry.setStatus("mandatory")
_WtWebioEA24oemPortOutputName_Type = OctetString
_WtWebioEA24oemPortOutputName_Object = MibTableColumn
wtWebioEA24oemPortOutputName = _WtWebioEA24oemPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 1),
    _WtWebioEA24oemPortOutputName_Type()
)
wtWebioEA24oemPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortOutputName.setStatus("mandatory")
_WtWebioEA24oemPortOutputText_Type = OctetString
_WtWebioEA24oemPortOutputText_Object = MibTableColumn
wtWebioEA24oemPortOutputText = _WtWebioEA24oemPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 2),
    _WtWebioEA24oemPortOutputText_Type()
)
wtWebioEA24oemPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortOutputText.setStatus("mandatory")
_WtWebioEA24oemPortOutputGroupMode_Type = OctetString
_WtWebioEA24oemPortOutputGroupMode_Object = MibTableColumn
wtWebioEA24oemPortOutputGroupMode = _WtWebioEA24oemPortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 3),
    _WtWebioEA24oemPortOutputGroupMode_Type()
)
wtWebioEA24oemPortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortOutputGroupMode.setStatus("mandatory")
_WtWebioEA24oemPortOutputSafetyState_Type = OctetString
_WtWebioEA24oemPortOutputSafetyState_Object = MibTableColumn
wtWebioEA24oemPortOutputSafetyState = _WtWebioEA24oemPortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 4),
    _WtWebioEA24oemPortOutputSafetyState_Type()
)
wtWebioEA24oemPortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA24oemPortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA24oemPortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemPortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA24oemPortLogicInputMask_Object = MibTableColumn
wtWebioEA24oemPortLogicInputMask = _WtWebioEA24oemPortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 5),
    _WtWebioEA24oemPortLogicInputMask_Type()
)
wtWebioEA24oemPortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortLogicInputMask.setStatus("mandatory")


class _WtWebioEA24oemPortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA24oemPortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemPortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA24oemPortLogicInputInverter_Object = MibTableColumn
wtWebioEA24oemPortLogicInputInverter = _WtWebioEA24oemPortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 6),
    _WtWebioEA24oemPortLogicInputInverter_Type()
)
wtWebioEA24oemPortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA24oemPortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA24oemPortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemPortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA24oemPortLogicFunction_Object = MibTableColumn
wtWebioEA24oemPortLogicFunction = _WtWebioEA24oemPortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 7),
    _WtWebioEA24oemPortLogicFunction_Type()
)
wtWebioEA24oemPortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortLogicFunction.setStatus("mandatory")


class _WtWebioEA24oemPortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA24oemPortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemPortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA24oemPortLogicOutputInverter_Object = MibTableColumn
wtWebioEA24oemPortLogicOutputInverter = _WtWebioEA24oemPortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 8),
    _WtWebioEA24oemPortLogicOutputInverter_Type()
)
wtWebioEA24oemPortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA24oemPortPulseDuration_Type = Integer32
_WtWebioEA24oemPortPulseDuration_Object = MibTableColumn
wtWebioEA24oemPortPulseDuration = _WtWebioEA24oemPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 9),
    _WtWebioEA24oemPortPulseDuration_Type()
)
wtWebioEA24oemPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortPulseDuration.setStatus("mandatory")


class _WtWebioEA24oemPortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA24oemPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA24oemPortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA24oemPortPulsePolarity_Object = MibTableColumn
wtWebioEA24oemPortPulsePolarity = _WtWebioEA24oemPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 2, 2, 1, 10),
    _WtWebioEA24oemPortPulsePolarity_Type()
)
wtWebioEA24oemPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemPortPulsePolarity.setStatus("mandatory")
_WtWebioEA24oemManufact_ObjectIdentity = ObjectIdentity
wtWebioEA24oemManufact = _WtWebioEA24oemManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 3)
)
_WtWebioEA24oemMfName_Type = OctetString
_WtWebioEA24oemMfName_Object = MibScalar
wtWebioEA24oemMfName = _WtWebioEA24oemMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 3, 1),
    _WtWebioEA24oemMfName_Type()
)
wtWebioEA24oemMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMfName.setStatus("mandatory")
_WtWebioEA24oemMfAddr_Type = OctetString
_WtWebioEA24oemMfAddr_Object = MibScalar
wtWebioEA24oemMfAddr = _WtWebioEA24oemMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 3, 2),
    _WtWebioEA24oemMfAddr_Type()
)
wtWebioEA24oemMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMfAddr.setStatus("mandatory")
_WtWebioEA24oemMfHotline_Type = OctetString
_WtWebioEA24oemMfHotline_Object = MibScalar
wtWebioEA24oemMfHotline = _WtWebioEA24oemMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 3, 3),
    _WtWebioEA24oemMfHotline_Type()
)
wtWebioEA24oemMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMfHotline.setStatus("mandatory")
_WtWebioEA24oemMfInternet_Type = OctetString
_WtWebioEA24oemMfInternet_Object = MibScalar
wtWebioEA24oemMfInternet = _WtWebioEA24oemMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 3, 4),
    _WtWebioEA24oemMfInternet_Type()
)
wtWebioEA24oemMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMfInternet.setStatus("mandatory")
_WtWebioEA24oemMfDeviceTyp_Type = OctetString
_WtWebioEA24oemMfDeviceTyp_Object = MibScalar
wtWebioEA24oemMfDeviceTyp = _WtWebioEA24oemMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 3, 3, 5),
    _WtWebioEA24oemMfDeviceTyp_Type()
)
wtWebioEA24oemMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemMfDeviceTyp.setStatus("mandatory")
_WtWebioEA24oemDiag_ObjectIdentity = ObjectIdentity
wtWebioEA24oemDiag = _WtWebioEA24oemDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 4)
)
_WtWebioEA24oemDiagErrorCount_Type = Integer32
_WtWebioEA24oemDiagErrorCount_Object = MibScalar
wtWebioEA24oemDiagErrorCount = _WtWebioEA24oemDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 4, 1),
    _WtWebioEA24oemDiagErrorCount_Type()
)
wtWebioEA24oemDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemDiagErrorCount.setStatus("mandatory")
_WtWebioEA24oemDiagBinaryError_Type = OctetString
_WtWebioEA24oemDiagBinaryError_Object = MibScalar
wtWebioEA24oemDiagBinaryError = _WtWebioEA24oemDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 4, 2),
    _WtWebioEA24oemDiagBinaryError_Type()
)
wtWebioEA24oemDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemDiagBinaryError.setStatus("mandatory")
_WtWebioEA24oemDiagErrorIndex_Type = Integer32
_WtWebioEA24oemDiagErrorIndex_Object = MibScalar
wtWebioEA24oemDiagErrorIndex = _WtWebioEA24oemDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 4, 3),
    _WtWebioEA24oemDiagErrorIndex_Type()
)
wtWebioEA24oemDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA24oemDiagErrorIndex.setStatus("mandatory")
_WtWebioEA24oemDiagErrorMessage_Type = OctetString
_WtWebioEA24oemDiagErrorMessage_Object = MibScalar
wtWebioEA24oemDiagErrorMessage = _WtWebioEA24oemDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 4, 4),
    _WtWebioEA24oemDiagErrorMessage_Type()
)
wtWebioEA24oemDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemDiagErrorMessage.setStatus("mandatory")
_WtWebioEA24oemDiagErrorClear_Type = Integer32
_WtWebioEA24oemDiagErrorClear_Object = MibScalar
wtWebioEA24oemDiagErrorClear = _WtWebioEA24oemDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 4, 5),
    _WtWebioEA24oemDiagErrorClear_Type()
)
wtWebioEA24oemDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA24oemDiagErrorClear.setStatus("mandatory")
_WtWebioEA12x6Rel_ObjectIdentity = ObjectIdentity
wtWebioEA12x6Rel = _WtWebioEA12x6Rel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19)
)
_WtWebioEA12x6RelInOut_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelInOut = _WtWebioEA12x6RelInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1)
)


class _WtWebioEA12x6RelInputs_Type(Integer32):
    """Custom type wtWebioEA12x6RelInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x6RelInputs_Type.__name__ = "Integer32"
_WtWebioEA12x6RelInputs_Object = MibScalar
wtWebioEA12x6RelInputs = _WtWebioEA12x6RelInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 1),
    _WtWebioEA12x6RelInputs_Type()
)
wtWebioEA12x6RelInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputs.setStatus("mandatory")


class _WtWebioEA12x6RelOutputs_Type(Integer32):
    """Custom type wtWebioEA12x6RelOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebioEA12x6RelOutputs_Type.__name__ = "Integer32"
_WtWebioEA12x6RelOutputs_Object = MibScalar
wtWebioEA12x6RelOutputs = _WtWebioEA12x6RelOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 2),
    _WtWebioEA12x6RelOutputs_Type()
)
wtWebioEA12x6RelOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputs.setStatus("mandatory")
_WtWebioEA12x6RelInputTable_Object = MibTable
wtWebioEA12x6RelInputTable = _WtWebioEA12x6RelInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputTable.setStatus("mandatory")
_WtWebioEA12x6RelInputEntry_Object = MibTableRow
wtWebioEA12x6RelInputEntry = _WtWebioEA12x6RelInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 3, 1)
)
wtWebioEA12x6RelInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputEntry.setStatus("mandatory")


class _WtWebioEA12x6RelInputNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x6RelInputNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelInputNo_Object = MibTableColumn
wtWebioEA12x6RelInputNo = _WtWebioEA12x6RelInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 3, 1, 1),
    _WtWebioEA12x6RelInputNo_Type()
)
wtWebioEA12x6RelInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputNo.setStatus("mandatory")


class _WtWebioEA12x6RelInputCounter_Type(Integer32):
    """Custom type wtWebioEA12x6RelInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x6RelInputCounter_Type.__name__ = "Integer32"
_WtWebioEA12x6RelInputCounter_Object = MibTableColumn
wtWebioEA12x6RelInputCounter = _WtWebioEA12x6RelInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 3, 1, 2),
    _WtWebioEA12x6RelInputCounter_Type()
)
wtWebioEA12x6RelInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputCounter.setStatus("mandatory")
_WtWebioEA12x6RelInputCounterClear_Type = Integer32
_WtWebioEA12x6RelInputCounterClear_Object = MibTableColumn
wtWebioEA12x6RelInputCounterClear = _WtWebioEA12x6RelInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 3, 1, 3),
    _WtWebioEA12x6RelInputCounterClear_Type()
)
wtWebioEA12x6RelInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputCounterClear.setStatus("mandatory")
_WtWebioEA12x6RelInputValue_Type = Integer32
_WtWebioEA12x6RelInputValue_Object = MibScalar
wtWebioEA12x6RelInputValue = _WtWebioEA12x6RelInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 4),
    _WtWebioEA12x6RelInputValue_Type()
)
wtWebioEA12x6RelInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputValue.setStatus("mandatory")
_WtWebioEA12x6RelOutputTable_Object = MibTable
wtWebioEA12x6RelOutputTable = _WtWebioEA12x6RelOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputTable.setStatus("mandatory")
_WtWebioEA12x6RelOutputEntry_Object = MibTableRow
wtWebioEA12x6RelOutputEntry = _WtWebioEA12x6RelOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 5, 1)
)
wtWebioEA12x6RelOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputEntry.setStatus("mandatory")


class _WtWebioEA12x6RelOutputNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x6RelOutputNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelOutputNo_Object = MibTableColumn
wtWebioEA12x6RelOutputNo = _WtWebioEA12x6RelOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 5, 1, 1),
    _WtWebioEA12x6RelOutputNo_Type()
)
wtWebioEA12x6RelOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputNo.setStatus("mandatory")


class _WtWebioEA12x6RelOutputState_Type(Integer32):
    """Custom type wtWebioEA12x6RelOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6OutputState-ON", 1),
          ("wtWebioEA12x6RelOutputState-OFF", 0))
    )


_WtWebioEA12x6RelOutputState_Type.__name__ = "Integer32"
_WtWebioEA12x6RelOutputState_Object = MibTableColumn
wtWebioEA12x6RelOutputState = _WtWebioEA12x6RelOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 5, 1, 2),
    _WtWebioEA12x6RelOutputState_Type()
)
wtWebioEA12x6RelOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputState.setStatus("mandatory")
_WtWebioEA12x6RelOutputValue_Type = Integer32
_WtWebioEA12x6RelOutputValue_Object = MibScalar
wtWebioEA12x6RelOutputValue = _WtWebioEA12x6RelOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 6),
    _WtWebioEA12x6RelOutputValue_Type()
)
wtWebioEA12x6RelOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputValue.setStatus("mandatory")


class _WtWebioEA12x6RelSetOutput_Type(OctetString):
    """Custom type wtWebioEA12x6RelSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA12x6RelSetOutput_Type.__name__ = "OctetString"
_WtWebioEA12x6RelSetOutput_Object = MibScalar
wtWebioEA12x6RelSetOutput = _WtWebioEA12x6RelSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 1, 7),
    _WtWebioEA12x6RelSetOutput_Type()
)
wtWebioEA12x6RelSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSetOutput.setStatus("mandatory")
_WtWebioEA12x6RelSessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelSessCntrl = _WtWebioEA12x6RelSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 2)
)
_WtWebioEA12x6RelSessCntrlPassword_Type = OctetString
_WtWebioEA12x6RelSessCntrlPassword_Object = MibScalar
wtWebioEA12x6RelSessCntrlPassword = _WtWebioEA12x6RelSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 2, 1),
    _WtWebioEA12x6RelSessCntrlPassword_Type()
)
wtWebioEA12x6RelSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSessCntrlPassword.setStatus("mandatory")


class _WtWebioEA12x6RelSessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA12x6RelSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelSessCntrl-NoSession", 0),
          ("wtWebioEA12x6RelSessCntrl-Session", 1))
    )


_WtWebioEA12x6RelSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA12x6RelSessCntrlConfigMode_Object = MibScalar
wtWebioEA12x6RelSessCntrlConfigMode = _WtWebioEA12x6RelSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 2, 2),
    _WtWebioEA12x6RelSessCntrlConfigMode_Type()
)
wtWebioEA12x6RelSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA12x6RelSessCntrlLogout_Type = Integer32
_WtWebioEA12x6RelSessCntrlLogout_Object = MibScalar
wtWebioEA12x6RelSessCntrlLogout = _WtWebioEA12x6RelSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 2, 3),
    _WtWebioEA12x6RelSessCntrlLogout_Type()
)
wtWebioEA12x6RelSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSessCntrlLogout.setStatus("mandatory")
_WtWebioEA12x6RelSessCntrlAdminPassword_Type = OctetString
_WtWebioEA12x6RelSessCntrlAdminPassword_Object = MibScalar
wtWebioEA12x6RelSessCntrlAdminPassword = _WtWebioEA12x6RelSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 2, 4),
    _WtWebioEA12x6RelSessCntrlAdminPassword_Type()
)
wtWebioEA12x6RelSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA12x6RelSessCntrlConfigPassword_Type = OctetString
_WtWebioEA12x6RelSessCntrlConfigPassword_Object = MibScalar
wtWebioEA12x6RelSessCntrlConfigPassword = _WtWebioEA12x6RelSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 2, 5),
    _WtWebioEA12x6RelSessCntrlConfigPassword_Type()
)
wtWebioEA12x6RelSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA12x6RelConfig_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelConfig = _WtWebioEA12x6RelConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3)
)
_WtWebioEA12x6RelDevice_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelDevice = _WtWebioEA12x6RelDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1)
)
_WtWebioEA12x6RelText_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelText = _WtWebioEA12x6RelText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 1)
)
_WtWebioEA12x6RelDeviceName_Type = OctetString
_WtWebioEA12x6RelDeviceName_Object = MibScalar
wtWebioEA12x6RelDeviceName = _WtWebioEA12x6RelDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 1, 1),
    _WtWebioEA12x6RelDeviceName_Type()
)
wtWebioEA12x6RelDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDeviceName.setStatus("mandatory")
_WtWebioEA12x6RelDeviceText_Type = OctetString
_WtWebioEA12x6RelDeviceText_Object = MibScalar
wtWebioEA12x6RelDeviceText = _WtWebioEA12x6RelDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 1, 2),
    _WtWebioEA12x6RelDeviceText_Type()
)
wtWebioEA12x6RelDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDeviceText.setStatus("mandatory")
_WtWebioEA12x6RelDeviceLocation_Type = OctetString
_WtWebioEA12x6RelDeviceLocation_Object = MibScalar
wtWebioEA12x6RelDeviceLocation = _WtWebioEA12x6RelDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 1, 3),
    _WtWebioEA12x6RelDeviceLocation_Type()
)
wtWebioEA12x6RelDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDeviceLocation.setStatus("mandatory")
_WtWebioEA12x6RelDeviceContact_Type = OctetString
_WtWebioEA12x6RelDeviceContact_Object = MibScalar
wtWebioEA12x6RelDeviceContact = _WtWebioEA12x6RelDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 1, 4),
    _WtWebioEA12x6RelDeviceContact_Type()
)
wtWebioEA12x6RelDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDeviceContact.setStatus("mandatory")
_WtWebioEA12x6RelTimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelTimeDate = _WtWebioEA12x6RelTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2)
)
_WtWebioEA12x6RelTimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelTimeZone = _WtWebioEA12x6RelTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1)
)
_WtWebioEA12x6RelTzOffsetHrs_Type = Integer32
_WtWebioEA12x6RelTzOffsetHrs_Object = MibScalar
wtWebioEA12x6RelTzOffsetHrs = _WtWebioEA12x6RelTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 1),
    _WtWebioEA12x6RelTzOffsetHrs_Type()
)
wtWebioEA12x6RelTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTzOffsetHrs.setStatus("mandatory")
_WtWebioEA12x6RelTzOffsetMin_Type = Integer32
_WtWebioEA12x6RelTzOffsetMin_Object = MibScalar
wtWebioEA12x6RelTzOffsetMin = _WtWebioEA12x6RelTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 2),
    _WtWebioEA12x6RelTzOffsetMin_Type()
)
wtWebioEA12x6RelTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTzOffsetMin.setStatus("mandatory")


class _WtWebioEA12x6RelTzEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelTzEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelTzEnable_Object = MibScalar
wtWebioEA12x6RelTzEnable = _WtWebioEA12x6RelTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 3),
    _WtWebioEA12x6RelTzEnable_Type()
)
wtWebioEA12x6RelTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTzEnable.setStatus("mandatory")
_WtWebioEA12x6RelStTzOffsetHrs_Type = Integer32
_WtWebioEA12x6RelStTzOffsetHrs_Object = MibScalar
wtWebioEA12x6RelStTzOffsetHrs = _WtWebioEA12x6RelStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 4),
    _WtWebioEA12x6RelStTzOffsetHrs_Type()
)
wtWebioEA12x6RelStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzOffsetHrs.setStatus("mandatory")
_WtWebioEA12x6RelStTzOffsetMin_Type = Integer32
_WtWebioEA12x6RelStTzOffsetMin_Object = MibScalar
wtWebioEA12x6RelStTzOffsetMin = _WtWebioEA12x6RelStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 5),
    _WtWebioEA12x6RelStTzOffsetMin_Type()
)
wtWebioEA12x6RelStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzOffsetMin.setStatus("mandatory")


class _WtWebioEA12x6RelStTzEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelStTzEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelStTzEnable_Object = MibScalar
wtWebioEA12x6RelStTzEnable = _WtWebioEA12x6RelStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 6),
    _WtWebioEA12x6RelStTzEnable_Type()
)
wtWebioEA12x6RelStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzEnable.setStatus("mandatory")


class _WtWebioEA12x6RelStTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA12x6RelStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelStartMonth-April", 4),
          ("wtWebioEA12x6RelStartMonth-August", 8),
          ("wtWebioEA12x6RelStartMonth-December", 12),
          ("wtWebioEA12x6RelStartMonth-February", 2),
          ("wtWebioEA12x6RelStartMonth-January", 1),
          ("wtWebioEA12x6RelStartMonth-July", 7),
          ("wtWebioEA12x6RelStartMonth-June", 6),
          ("wtWebioEA12x6RelStartMonth-March", 3),
          ("wtWebioEA12x6RelStartMonth-May", 5),
          ("wtWebioEA12x6RelStartMonth-November", 11),
          ("wtWebioEA12x6RelStartMonth-October", 10),
          ("wtWebioEA12x6RelStartMonth-September", 9))
    )


_WtWebioEA12x6RelStTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA12x6RelStTzStartMonth_Object = MibScalar
wtWebioEA12x6RelStTzStartMonth = _WtWebioEA12x6RelStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 7),
    _WtWebioEA12x6RelStTzStartMonth_Type()
)
wtWebioEA12x6RelStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStartMonth.setStatus("mandatory")


class _WtWebioEA12x6RelStTzStartMode_Type(Integer32):
    """Custom type wtWebioEA12x6RelStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelStartMode-first", 1),
          ("wtWebioEA12x6RelStartMode-fourth", 4),
          ("wtWebioEA12x6RelStartMode-last", 5),
          ("wtWebioEA12x6RelStartMode-second", 2),
          ("wtWebioEA12x6RelStartMode-third", 3))
    )


_WtWebioEA12x6RelStTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA12x6RelStTzStartMode_Object = MibScalar
wtWebioEA12x6RelStTzStartMode = _WtWebioEA12x6RelStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 8),
    _WtWebioEA12x6RelStTzStartMode_Type()
)
wtWebioEA12x6RelStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStartMode.setStatus("mandatory")


class _WtWebioEA12x6RelStTzStartWday_Type(Integer32):
    """Custom type wtWebioEA12x6RelStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelStartWday-Friday", 6),
          ("wtWebioEA12x6RelStartWday-Monday", 2),
          ("wtWebioEA12x6RelStartWday-Saturday", 7),
          ("wtWebioEA12x6RelStartWday-Sunday", 1),
          ("wtWebioEA12x6RelStartWday-Thursday", 4),
          ("wtWebioEA12x6RelStartWday-Tuesday", 3),
          ("wtWebioEA12x6RelStartWday-Wednesday", 5))
    )


_WtWebioEA12x6RelStTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA12x6RelStTzStartWday_Object = MibScalar
wtWebioEA12x6RelStTzStartWday = _WtWebioEA12x6RelStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 9),
    _WtWebioEA12x6RelStTzStartWday_Type()
)
wtWebioEA12x6RelStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStartWday.setStatus("mandatory")
_WtWebioEA12x6RelStTzStartHrs_Type = Integer32
_WtWebioEA12x6RelStTzStartHrs_Object = MibScalar
wtWebioEA12x6RelStTzStartHrs = _WtWebioEA12x6RelStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 10),
    _WtWebioEA12x6RelStTzStartHrs_Type()
)
wtWebioEA12x6RelStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStartHrs.setStatus("mandatory")
_WtWebioEA12x6RelStTzStartMin_Type = Integer32
_WtWebioEA12x6RelStTzStartMin_Object = MibScalar
wtWebioEA12x6RelStTzStartMin = _WtWebioEA12x6RelStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 11),
    _WtWebioEA12x6RelStTzStartMin_Type()
)
wtWebioEA12x6RelStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStartMin.setStatus("mandatory")


class _WtWebioEA12x6RelStTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA12x6RelStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelStopMonth-April", 4),
          ("wtWebioEA12x6RelStopMonth-August", 8),
          ("wtWebioEA12x6RelStopMonth-December", 12),
          ("wtWebioEA12x6RelStopMonth-February", 2),
          ("wtWebioEA12x6RelStopMonth-January", 1),
          ("wtWebioEA12x6RelStopMonth-July", 7),
          ("wtWebioEA12x6RelStopMonth-June", 6),
          ("wtWebioEA12x6RelStopMonth-March", 3),
          ("wtWebioEA12x6RelStopMonth-May", 5),
          ("wtWebioEA12x6RelStopMonth-November", 11),
          ("wtWebioEA12x6RelStopMonth-October", 10),
          ("wtWebioEA12x6RelStopMonth-September", 9))
    )


_WtWebioEA12x6RelStTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA12x6RelStTzStopMonth_Object = MibScalar
wtWebioEA12x6RelStTzStopMonth = _WtWebioEA12x6RelStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 12),
    _WtWebioEA12x6RelStTzStopMonth_Type()
)
wtWebioEA12x6RelStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStopMonth.setStatus("mandatory")


class _WtWebioEA12x6RelStTzStopMode_Type(Integer32):
    """Custom type wtWebioEA12x6RelStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelStopMode-first", 1),
          ("wtWebioEA12x6RelStopMode-fourth", 4),
          ("wtWebioEA12x6RelStopMode-last", 5),
          ("wtWebioEA12x6RelStopMode-second", 2),
          ("wtWebioEA12x6RelStopMode-third", 3))
    )


_WtWebioEA12x6RelStTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA12x6RelStTzStopMode_Object = MibScalar
wtWebioEA12x6RelStTzStopMode = _WtWebioEA12x6RelStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 13),
    _WtWebioEA12x6RelStTzStopMode_Type()
)
wtWebioEA12x6RelStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStopMode.setStatus("mandatory")


class _WtWebioEA12x6RelStTzStopWday_Type(Integer32):
    """Custom type wtWebioEA12x6RelStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelStopWday-Friday", 6),
          ("wtWebioEA12x6RelStopWday-Monday", 2),
          ("wtWebioEA12x6RelStopWday-Saturday", 7),
          ("wtWebioEA12x6RelStopWday-Sunday", 1),
          ("wtWebioEA12x6RelStopWday-Thursday", 4),
          ("wtWebioEA12x6RelStopWday-Tuesday", 3),
          ("wtWebioEA12x6RelStopWday-Wednesday", 5))
    )


_WtWebioEA12x6RelStTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA12x6RelStTzStopWday_Object = MibScalar
wtWebioEA12x6RelStTzStopWday = _WtWebioEA12x6RelStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 14),
    _WtWebioEA12x6RelStTzStopWday_Type()
)
wtWebioEA12x6RelStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStopWday.setStatus("mandatory")
_WtWebioEA12x6RelStTzStopHrs_Type = Integer32
_WtWebioEA12x6RelStTzStopHrs_Object = MibScalar
wtWebioEA12x6RelStTzStopHrs = _WtWebioEA12x6RelStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 15),
    _WtWebioEA12x6RelStTzStopHrs_Type()
)
wtWebioEA12x6RelStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStopHrs.setStatus("mandatory")
_WtWebioEA12x6RelStTzStopMin_Type = Integer32
_WtWebioEA12x6RelStTzStopMin_Object = MibScalar
wtWebioEA12x6RelStTzStopMin = _WtWebioEA12x6RelStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 1, 16),
    _WtWebioEA12x6RelStTzStopMin_Type()
)
wtWebioEA12x6RelStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStTzStopMin.setStatus("mandatory")
_WtWebioEA12x6RelTimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelTimeServer = _WtWebioEA12x6RelTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 2)
)
_WtWebioEA12x6RelTimeServer1_Type = OctetString
_WtWebioEA12x6RelTimeServer1_Object = MibScalar
wtWebioEA12x6RelTimeServer1 = _WtWebioEA12x6RelTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 2, 1),
    _WtWebioEA12x6RelTimeServer1_Type()
)
wtWebioEA12x6RelTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTimeServer1.setStatus("mandatory")
_WtWebioEA12x6RelTimeServer2_Type = OctetString
_WtWebioEA12x6RelTimeServer2_Object = MibScalar
wtWebioEA12x6RelTimeServer2 = _WtWebioEA12x6RelTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 2, 2),
    _WtWebioEA12x6RelTimeServer2_Type()
)
wtWebioEA12x6RelTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTimeServer2.setStatus("mandatory")


class _WtWebioEA12x6RelTsEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelTsEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelTsEnable_Object = MibScalar
wtWebioEA12x6RelTsEnable = _WtWebioEA12x6RelTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 2, 3),
    _WtWebioEA12x6RelTsEnable_Type()
)
wtWebioEA12x6RelTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTsEnable.setStatus("mandatory")
_WtWebioEA12x6RelTsSyncTime_Type = Integer32
_WtWebioEA12x6RelTsSyncTime_Object = MibScalar
wtWebioEA12x6RelTsSyncTime = _WtWebioEA12x6RelTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 2, 4),
    _WtWebioEA12x6RelTsSyncTime_Type()
)
wtWebioEA12x6RelTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelTsSyncTime.setStatus("mandatory")
_WtWebioEA12x6RelDeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelDeviceClock = _WtWebioEA12x6RelDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 3)
)


class _WtWebioEA12x6RelClockHrs_Type(Integer32):
    """Custom type wtWebioEA12x6RelClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA12x6RelClockHrs_Type.__name__ = "Integer32"
_WtWebioEA12x6RelClockHrs_Object = MibScalar
wtWebioEA12x6RelClockHrs = _WtWebioEA12x6RelClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 3, 1),
    _WtWebioEA12x6RelClockHrs_Type()
)
wtWebioEA12x6RelClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelClockHrs.setStatus("mandatory")


class _WtWebioEA12x6RelClockMin_Type(Integer32):
    """Custom type wtWebioEA12x6RelClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA12x6RelClockMin_Type.__name__ = "Integer32"
_WtWebioEA12x6RelClockMin_Object = MibScalar
wtWebioEA12x6RelClockMin = _WtWebioEA12x6RelClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 3, 2),
    _WtWebioEA12x6RelClockMin_Type()
)
wtWebioEA12x6RelClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelClockMin.setStatus("mandatory")


class _WtWebioEA12x6RelClockDay_Type(Integer32):
    """Custom type wtWebioEA12x6RelClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA12x6RelClockDay_Type.__name__ = "Integer32"
_WtWebioEA12x6RelClockDay_Object = MibScalar
wtWebioEA12x6RelClockDay = _WtWebioEA12x6RelClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 3, 3),
    _WtWebioEA12x6RelClockDay_Type()
)
wtWebioEA12x6RelClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelClockDay.setStatus("mandatory")


class _WtWebioEA12x6RelClockMonth_Type(Integer32):
    """Custom type wtWebioEA12x6RelClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelClockMonth-April", 4),
          ("wtWebioEA12x6RelClockMonth-August", 8),
          ("wtWebioEA12x6RelClockMonth-December", 12),
          ("wtWebioEA12x6RelClockMonth-February", 2),
          ("wtWebioEA12x6RelClockMonth-January", 1),
          ("wtWebioEA12x6RelClockMonth-July", 7),
          ("wtWebioEA12x6RelClockMonth-June", 6),
          ("wtWebioEA12x6RelClockMonth-March", 3),
          ("wtWebioEA12x6RelClockMonth-May", 5),
          ("wtWebioEA12x6RelClockMonth-November", 11),
          ("wtWebioEA12x6RelClockMonth-October", 10),
          ("wtWebioEA12x6RelClockMonth-September", 9))
    )


_WtWebioEA12x6RelClockMonth_Type.__name__ = "Integer32"
_WtWebioEA12x6RelClockMonth_Object = MibScalar
wtWebioEA12x6RelClockMonth = _WtWebioEA12x6RelClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 3, 4),
    _WtWebioEA12x6RelClockMonth_Type()
)
wtWebioEA12x6RelClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelClockMonth.setStatus("mandatory")


class _WtWebioEA12x6RelClockYear_Type(Integer32):
    """Custom type wtWebioEA12x6RelClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelClockYear_Type.__name__ = "Integer32"
_WtWebioEA12x6RelClockYear_Object = MibScalar
wtWebioEA12x6RelClockYear = _WtWebioEA12x6RelClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 2, 3, 5),
    _WtWebioEA12x6RelClockYear_Type()
)
wtWebioEA12x6RelClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelClockYear.setStatus("mandatory")
_WtWebioEA12x6RelBasic_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelBasic = _WtWebioEA12x6RelBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3)
)
_WtWebioEA12x6RelNetwork_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelNetwork = _WtWebioEA12x6RelNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1)
)
_WtWebioEA12x6RelIpAddress_Type = IpAddress
_WtWebioEA12x6RelIpAddress_Object = MibScalar
wtWebioEA12x6RelIpAddress = _WtWebioEA12x6RelIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1, 1),
    _WtWebioEA12x6RelIpAddress_Type()
)
wtWebioEA12x6RelIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelIpAddress.setStatus("mandatory")
_WtWebioEA12x6RelSubnetMask_Type = IpAddress
_WtWebioEA12x6RelSubnetMask_Object = MibScalar
wtWebioEA12x6RelSubnetMask = _WtWebioEA12x6RelSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1, 2),
    _WtWebioEA12x6RelSubnetMask_Type()
)
wtWebioEA12x6RelSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSubnetMask.setStatus("mandatory")
_WtWebioEA12x6RelGateway_Type = IpAddress
_WtWebioEA12x6RelGateway_Object = MibScalar
wtWebioEA12x6RelGateway = _WtWebioEA12x6RelGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1, 3),
    _WtWebioEA12x6RelGateway_Type()
)
wtWebioEA12x6RelGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelGateway.setStatus("mandatory")
_WtWebioEA12x6RelDnsServer1_Type = OctetString
_WtWebioEA12x6RelDnsServer1_Object = MibScalar
wtWebioEA12x6RelDnsServer1 = _WtWebioEA12x6RelDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1, 4),
    _WtWebioEA12x6RelDnsServer1_Type()
)
wtWebioEA12x6RelDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDnsServer1.setStatus("mandatory")
_WtWebioEA12x6RelDnsServer2_Type = OctetString
_WtWebioEA12x6RelDnsServer2_Object = MibScalar
wtWebioEA12x6RelDnsServer2 = _WtWebioEA12x6RelDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1, 5),
    _WtWebioEA12x6RelDnsServer2_Type()
)
wtWebioEA12x6RelDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDnsServer2.setStatus("mandatory")
_WtWebioEA12x6RelAddConfig_Type = OctetString
_WtWebioEA12x6RelAddConfig_Object = MibScalar
wtWebioEA12x6RelAddConfig = _WtWebioEA12x6RelAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 1, 6),
    _WtWebioEA12x6RelAddConfig_Type()
)
wtWebioEA12x6RelAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAddConfig.setStatus("mandatory")
_WtWebioEA12x6RelHTTP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelHTTP = _WtWebioEA12x6RelHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 2)
)
_WtWebioEA12x6RelStartup_Type = OctetString
_WtWebioEA12x6RelStartup_Object = MibScalar
wtWebioEA12x6RelStartup = _WtWebioEA12x6RelStartup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 2, 1),
    _WtWebioEA12x6RelStartup_Type()
)
wtWebioEA12x6RelStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelStartup.setStatus("mandatory")
_WtWebioEA12x6RelGetHeaderEnable_Type = OctetString
_WtWebioEA12x6RelGetHeaderEnable_Object = MibScalar
wtWebioEA12x6RelGetHeaderEnable = _WtWebioEA12x6RelGetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 2, 2),
    _WtWebioEA12x6RelGetHeaderEnable_Type()
)
wtWebioEA12x6RelGetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelGetHeaderEnable.setStatus("mandatory")


class _WtWebioEA12x6RelHttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelHttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelHttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelHttpInputTrigger_Object = MibScalar
wtWebioEA12x6RelHttpInputTrigger = _WtWebioEA12x6RelHttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 2, 3),
    _WtWebioEA12x6RelHttpInputTrigger_Type()
)
wtWebioEA12x6RelHttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelHttpInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA12x6RelHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelHttpPort_Object = MibScalar
wtWebioEA12x6RelHttpPort = _WtWebioEA12x6RelHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 2, 4),
    _WtWebioEA12x6RelHttpPort_Type()
)
wtWebioEA12x6RelHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelHttpPort.setStatus("mandatory")
_WtWebioEA12x6RelMail_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelMail = _WtWebioEA12x6RelMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3)
)
_WtWebioEA12x6RelMailAdName_Type = OctetString
_WtWebioEA12x6RelMailAdName_Object = MibScalar
wtWebioEA12x6RelMailAdName = _WtWebioEA12x6RelMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 1),
    _WtWebioEA12x6RelMailAdName_Type()
)
wtWebioEA12x6RelMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailAdName.setStatus("mandatory")
_WtWebioEA12x6RelMailReply_Type = OctetString
_WtWebioEA12x6RelMailReply_Object = MibScalar
wtWebioEA12x6RelMailReply = _WtWebioEA12x6RelMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 2),
    _WtWebioEA12x6RelMailReply_Type()
)
wtWebioEA12x6RelMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailReply.setStatus("mandatory")
_WtWebioEA12x6RelMailServer_Type = OctetString
_WtWebioEA12x6RelMailServer_Object = MibScalar
wtWebioEA12x6RelMailServer = _WtWebioEA12x6RelMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 3),
    _WtWebioEA12x6RelMailServer_Type()
)
wtWebioEA12x6RelMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailServer.setStatus("mandatory")
_WtWebioEA12x6RelMailEnable_Type = OctetString
_WtWebioEA12x6RelMailEnable_Object = MibScalar
wtWebioEA12x6RelMailEnable = _WtWebioEA12x6RelMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 4),
    _WtWebioEA12x6RelMailEnable_Type()
)
wtWebioEA12x6RelMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailEnable.setStatus("mandatory")


class _WtWebioEA12x6RelMailAuthentication_Type(OctetString):
    """Custom type wtWebioEA12x6RelMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelMailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA12x6RelMailAuthentication_Object = MibScalar
wtWebioEA12x6RelMailAuthentication = _WtWebioEA12x6RelMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 5),
    _WtWebioEA12x6RelMailAuthentication_Type()
)
wtWebioEA12x6RelMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailAuthentication.setStatus("mandatory")
_WtWebioEA12x6RelMailAuthUser_Type = OctetString
_WtWebioEA12x6RelMailAuthUser_Object = MibScalar
wtWebioEA12x6RelMailAuthUser = _WtWebioEA12x6RelMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 6),
    _WtWebioEA12x6RelMailAuthUser_Type()
)
wtWebioEA12x6RelMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailAuthUser.setStatus("mandatory")
_WtWebioEA12x6RelMailAuthPassword_Type = OctetString
_WtWebioEA12x6RelMailAuthPassword_Object = MibScalar
wtWebioEA12x6RelMailAuthPassword = _WtWebioEA12x6RelMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 7),
    _WtWebioEA12x6RelMailAuthPassword_Type()
)
wtWebioEA12x6RelMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailAuthPassword.setStatus("mandatory")
_WtWebioEA12x6RelMailPop3Server_Type = OctetString
_WtWebioEA12x6RelMailPop3Server_Object = MibScalar
wtWebioEA12x6RelMailPop3Server = _WtWebioEA12x6RelMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 3, 8),
    _WtWebioEA12x6RelMailPop3Server_Type()
)
wtWebioEA12x6RelMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMailPop3Server.setStatus("mandatory")
_WtWebioEA12x6RelSNMP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelSNMP = _WtWebioEA12x6RelSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 4)
)
_WtWebioEA12x6RelSnmpEnable_Type = OctetString
_WtWebioEA12x6RelSnmpEnable_Object = MibScalar
wtWebioEA12x6RelSnmpEnable = _WtWebioEA12x6RelSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 4, 1),
    _WtWebioEA12x6RelSnmpEnable_Type()
)
wtWebioEA12x6RelSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSnmpEnable.setStatus("mandatory")
_WtWebioEA12x6RelSnmpCommunityStringRead_Type = OctetString
_WtWebioEA12x6RelSnmpCommunityStringRead_Object = MibScalar
wtWebioEA12x6RelSnmpCommunityStringRead = _WtWebioEA12x6RelSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 4, 2),
    _WtWebioEA12x6RelSnmpCommunityStringRead_Type()
)
wtWebioEA12x6RelSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA12x6RelSnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA12x6RelSnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA12x6RelSnmpCommunityStringReadWrite = _WtWebioEA12x6RelSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 4, 3),
    _WtWebioEA12x6RelSnmpCommunityStringReadWrite_Type()
)
wtWebioEA12x6RelSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA12x6RelSnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA12x6RelSnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA12x6RelSnmpSystemTrapManagerIP = _WtWebioEA12x6RelSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 4, 4),
    _WtWebioEA12x6RelSnmpSystemTrapManagerIP_Type()
)
wtWebioEA12x6RelSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA12x6RelSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelSnmpSystemTrapEnable_Object = MibScalar
wtWebioEA12x6RelSnmpSystemTrapEnable = _WtWebioEA12x6RelSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 4, 5),
    _WtWebioEA12x6RelSnmpSystemTrapEnable_Type()
)
wtWebioEA12x6RelSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA12x6RelUDP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelUDP = _WtWebioEA12x6RelUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 5)
)
_WtWebioEA12x6RelUdpAdminPort_Type = Integer32
_WtWebioEA12x6RelUdpAdminPort_Object = MibScalar
wtWebioEA12x6RelUdpAdminPort = _WtWebioEA12x6RelUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 5, 1),
    _WtWebioEA12x6RelUdpAdminPort_Type()
)
wtWebioEA12x6RelUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelUdpAdminPort.setStatus("mandatory")
_WtWebioEA12x6RelUdpEnable_Type = OctetString
_WtWebioEA12x6RelUdpEnable_Object = MibScalar
wtWebioEA12x6RelUdpEnable = _WtWebioEA12x6RelUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 5, 2),
    _WtWebioEA12x6RelUdpEnable_Type()
)
wtWebioEA12x6RelUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelUdpEnable.setStatus("mandatory")
_WtWebioEA12x6RelUdpRemotePort_Type = Integer32
_WtWebioEA12x6RelUdpRemotePort_Object = MibScalar
wtWebioEA12x6RelUdpRemotePort = _WtWebioEA12x6RelUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 5, 3),
    _WtWebioEA12x6RelUdpRemotePort_Type()
)
wtWebioEA12x6RelUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelUdpRemotePort.setStatus("mandatory")
_WtWebioEA12x6RelBinary_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelBinary = _WtWebioEA12x6RelBinary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6)
)


class _WtWebioEA12x6RelBinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA12x6RelBinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryModeCount_Object = MibScalar
wtWebioEA12x6RelBinaryModeCount = _WtWebioEA12x6RelBinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 1),
    _WtWebioEA12x6RelBinaryModeCount_Type()
)
wtWebioEA12x6RelBinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryModeCount.setStatus("mandatory")
_WtWebioEA12x6RelBinaryIfTable_Object = MibTable
wtWebioEA12x6RelBinaryIfTable = _WtWebioEA12x6RelBinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryIfTable.setStatus("mandatory")
_WtWebioEA12x6RelBinaryIfEntry_Object = MibTableRow
wtWebioEA12x6RelBinaryIfEntry = _WtWebioEA12x6RelBinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 2, 1)
)
wtWebioEA12x6RelBinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryIfEntry.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA12x6RelBinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryModeNo_Object = MibTableColumn
wtWebioEA12x6RelBinaryModeNo = _WtWebioEA12x6RelBinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA12x6RelBinaryModeNo_Type()
)
wtWebioEA12x6RelBinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryModeNo.setStatus("mandatory")
_WtWebioEA12x6RelBinaryTable_Object = MibTable
wtWebioEA12x6RelBinaryTable = _WtWebioEA12x6RelBinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTable.setStatus("mandatory")
_WtWebioEA12x6RelBinaryEntry_Object = MibTableRow
wtWebioEA12x6RelBinaryEntry = _WtWebioEA12x6RelBinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1)
)
wtWebioEA12x6RelBinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryEntry.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryOperationMode_Object = MibTableColumn
wtWebioEA12x6RelBinaryOperationMode = _WtWebioEA12x6RelBinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA12x6RelBinaryOperationMode_Type()
)
wtWebioEA12x6RelBinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryOperationMode.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpServerLocalPort = _WtWebioEA12x6RelBinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA12x6RelBinaryTcpServerLocalPort_Type()
)
wtWebioEA12x6RelBinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpServerInputTrigger = _WtWebioEA12x6RelBinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA12x6RelBinaryTcpServerInputTrigger_Type()
)
wtWebioEA12x6RelBinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpServerApplicationMode = _WtWebioEA12x6RelBinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA12x6RelBinaryTcpServerApplicationMode_Type()
)
wtWebioEA12x6RelBinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientLocalPort = _WtWebioEA12x6RelBinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA12x6RelBinaryTcpClientLocalPort_Type()
)
wtWebioEA12x6RelBinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientServerPort = _WtWebioEA12x6RelBinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA12x6RelBinaryTcpClientServerPort_Type()
)
wtWebioEA12x6RelBinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA12x6RelBinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA12x6RelBinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientServerIpAddr = _WtWebioEA12x6RelBinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA12x6RelBinaryTcpClientServerIpAddr_Type()
)
wtWebioEA12x6RelBinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA12x6RelBinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA12x6RelBinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientServerPassword = _WtWebioEA12x6RelBinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA12x6RelBinaryTcpClientServerPassword_Type()
)
wtWebioEA12x6RelBinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA12x6RelBinaryTcpClientInactivity_Type = Integer32
_WtWebioEA12x6RelBinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientInactivity = _WtWebioEA12x6RelBinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA12x6RelBinaryTcpClientInactivity_Type()
)
wtWebioEA12x6RelBinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientInputTrigger = _WtWebioEA12x6RelBinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA12x6RelBinaryTcpClientInputTrigger_Type()
)
wtWebioEA12x6RelBinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelBinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientInterval = _WtWebioEA12x6RelBinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA12x6RelBinaryTcpClientInterval_Type()
)
wtWebioEA12x6RelBinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientApplicationMode = _WtWebioEA12x6RelBinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA12x6RelBinaryTcpClientApplicationMode_Type()
)
wtWebioEA12x6RelBinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryUdpPeerLocalPort = _WtWebioEA12x6RelBinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA12x6RelBinaryUdpPeerLocalPort_Type()
)
wtWebioEA12x6RelBinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA12x6RelBinaryUdpPeerRemotePort = _WtWebioEA12x6RelBinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA12x6RelBinaryUdpPeerRemotePort_Type()
)
wtWebioEA12x6RelBinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr = _WtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelBinaryUdpPeerInputTrigger = _WtWebioEA12x6RelBinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA12x6RelBinaryUdpPeerInputTrigger_Type()
)
wtWebioEA12x6RelBinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelBinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA12x6RelBinaryUdpPeerInterval = _WtWebioEA12x6RelBinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA12x6RelBinaryUdpPeerInterval_Type()
)
wtWebioEA12x6RelBinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelBinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelBinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelBinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA12x6RelBinaryUdpPeerApplicationMode = _WtWebioEA12x6RelBinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA12x6RelBinaryUdpPeerApplicationMode_Type()
)
wtWebioEA12x6RelBinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryConnectedPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryConnectedPort = _WtWebioEA12x6RelBinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA12x6RelBinaryConnectedPort_Type()
)
wtWebioEA12x6RelBinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryConnectedPort.setStatus("mandatory")
_WtWebioEA12x6RelBinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA12x6RelBinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA12x6RelBinaryConnectedIpAddr = _WtWebioEA12x6RelBinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA12x6RelBinaryConnectedIpAddr_Type()
)
wtWebioEA12x6RelBinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpServerClientHttpPort = _WtWebioEA12x6RelBinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA12x6RelBinaryTcpServerClientHttpPort_Type()
)
wtWebioEA12x6RelBinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA12x6RelBinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelBinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelBinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelBinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA12x6RelBinaryTcpClientServerHttpPort = _WtWebioEA12x6RelBinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA12x6RelBinaryTcpClientServerHttpPort_Type()
)
wtWebioEA12x6RelBinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelBinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA12x6RelSyslog_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelSyslog = _WtWebioEA12x6RelSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 7)
)
_WtWebioEA12x6RelSyslogServerIP_Type = OctetString
_WtWebioEA12x6RelSyslogServerIP_Object = MibScalar
wtWebioEA12x6RelSyslogServerIP = _WtWebioEA12x6RelSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 7, 1),
    _WtWebioEA12x6RelSyslogServerIP_Type()
)
wtWebioEA12x6RelSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSyslogServerIP.setStatus("mandatory")
_WtWebioEA12x6RelSyslogServerPort_Type = Integer32
_WtWebioEA12x6RelSyslogServerPort_Object = MibScalar
wtWebioEA12x6RelSyslogServerPort = _WtWebioEA12x6RelSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 7, 2),
    _WtWebioEA12x6RelSyslogServerPort_Type()
)
wtWebioEA12x6RelSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSyslogServerPort.setStatus("mandatory")


class _WtWebioEA12x6RelSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelSyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA12x6RelSyslogSystemMessagesEnable = _WtWebioEA12x6RelSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 7, 3),
    _WtWebioEA12x6RelSyslogSystemMessagesEnable_Type()
)
wtWebioEA12x6RelSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA12x6RelSyslogEnable_Type = OctetString
_WtWebioEA12x6RelSyslogEnable_Object = MibScalar
wtWebioEA12x6RelSyslogEnable = _WtWebioEA12x6RelSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 7, 4),
    _WtWebioEA12x6RelSyslogEnable_Type()
)
wtWebioEA12x6RelSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSyslogEnable.setStatus("mandatory")
_WtWebioEA12x6RelFTP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelFTP = _WtWebioEA12x6RelFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8)
)
_WtWebioEA12x6RelFTPServerIP_Type = OctetString
_WtWebioEA12x6RelFTPServerIP_Object = MibScalar
wtWebioEA12x6RelFTPServerIP = _WtWebioEA12x6RelFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 1),
    _WtWebioEA12x6RelFTPServerIP_Type()
)
wtWebioEA12x6RelFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPServerIP.setStatus("mandatory")
_WtWebioEA12x6RelFTPServerControlPort_Type = Integer32
_WtWebioEA12x6RelFTPServerControlPort_Object = MibScalar
wtWebioEA12x6RelFTPServerControlPort = _WtWebioEA12x6RelFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 2),
    _WtWebioEA12x6RelFTPServerControlPort_Type()
)
wtWebioEA12x6RelFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPServerControlPort.setStatus("mandatory")
_WtWebioEA12x6RelFTPUserName_Type = OctetString
_WtWebioEA12x6RelFTPUserName_Object = MibScalar
wtWebioEA12x6RelFTPUserName = _WtWebioEA12x6RelFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 3),
    _WtWebioEA12x6RelFTPUserName_Type()
)
wtWebioEA12x6RelFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPUserName.setStatus("mandatory")
_WtWebioEA12x6RelFTPPassword_Type = OctetString
_WtWebioEA12x6RelFTPPassword_Object = MibScalar
wtWebioEA12x6RelFTPPassword = _WtWebioEA12x6RelFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 4),
    _WtWebioEA12x6RelFTPPassword_Type()
)
wtWebioEA12x6RelFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPPassword.setStatus("mandatory")
_WtWebioEA12x6RelFTPAccount_Type = OctetString
_WtWebioEA12x6RelFTPAccount_Object = MibScalar
wtWebioEA12x6RelFTPAccount = _WtWebioEA12x6RelFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 5),
    _WtWebioEA12x6RelFTPAccount_Type()
)
wtWebioEA12x6RelFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPAccount.setStatus("mandatory")
_WtWebioEA12x6RelFTPOption_Type = OctetString
_WtWebioEA12x6RelFTPOption_Object = MibScalar
wtWebioEA12x6RelFTPOption = _WtWebioEA12x6RelFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 6),
    _WtWebioEA12x6RelFTPOption_Type()
)
wtWebioEA12x6RelFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPOption.setStatus("mandatory")
_WtWebioEA12x6RelFTPEnable_Type = OctetString
_WtWebioEA12x6RelFTPEnable_Object = MibScalar
wtWebioEA12x6RelFTPEnable = _WtWebioEA12x6RelFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 3, 8, 7),
    _WtWebioEA12x6RelFTPEnable_Type()
)
wtWebioEA12x6RelFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelFTPEnable.setStatus("mandatory")
_WtWebioEA12x6RelOutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelOutputMode = _WtWebioEA12x6RelOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 4)
)
_WtWebioEA12x6RelOutputModeTable_Object = MibTable
wtWebioEA12x6RelOutputModeTable = _WtWebioEA12x6RelOutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputModeTable.setStatus("mandatory")
_WtWebioEA12x6RelOutputModeEntry_Object = MibTableRow
wtWebioEA12x6RelOutputModeEntry = _WtWebioEA12x6RelOutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 4, 1, 1)
)
wtWebioEA12x6RelOutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputModeEntry.setStatus("mandatory")


class _WtWebioEA12x6RelOutputModeBit_Type(OctetString):
    """Custom type wtWebioEA12x6RelOutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelOutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA12x6RelOutputModeBit_Object = MibTableColumn
wtWebioEA12x6RelOutputModeBit = _WtWebioEA12x6RelOutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 4, 1, 1, 1),
    _WtWebioEA12x6RelOutputModeBit_Type()
)
wtWebioEA12x6RelOutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputModeBit.setStatus("mandatory")


class _WtWebioEA12x6RelSafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA12x6RelSafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelSafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA12x6RelSafetyTimeout_Object = MibScalar
wtWebioEA12x6RelSafetyTimeout = _WtWebioEA12x6RelSafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 4, 2),
    _WtWebioEA12x6RelSafetyTimeout_Type()
)
wtWebioEA12x6RelSafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelSafetyTimeout.setStatus("mandatory")
_WtWebioEA12x6RelAlarm_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelAlarm = _WtWebioEA12x6RelAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5)
)


class _WtWebioEA12x6RelAlarmCount_Type(Integer32):
    """Custom type wtWebioEA12x6RelAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x6RelAlarmCount_Type.__name__ = "Integer32"
_WtWebioEA12x6RelAlarmCount_Object = MibScalar
wtWebioEA12x6RelAlarmCount = _WtWebioEA12x6RelAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 1),
    _WtWebioEA12x6RelAlarmCount_Type()
)
wtWebioEA12x6RelAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmCount.setStatus("mandatory")
_WtWebioEA12x6RelAlarmIfTable_Object = MibTable
wtWebioEA12x6RelAlarmIfTable = _WtWebioEA12x6RelAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmIfTable.setStatus("mandatory")
_WtWebioEA12x6RelAlarmIfEntry_Object = MibTableRow
wtWebioEA12x6RelAlarmIfEntry = _WtWebioEA12x6RelAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 2, 1)
)
wtWebioEA12x6RelAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmIfEntry.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x6RelAlarmNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelAlarmNo_Object = MibTableColumn
wtWebioEA12x6RelAlarmNo = _WtWebioEA12x6RelAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 2, 1, 1),
    _WtWebioEA12x6RelAlarmNo_Type()
)
wtWebioEA12x6RelAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmNo.setStatus("mandatory")
_WtWebioEA12x6RelAlarmTable_Object = MibTable
wtWebioEA12x6RelAlarmTable = _WtWebioEA12x6RelAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmTable.setStatus("mandatory")
_WtWebioEA12x6RelAlarmEntry_Object = MibTableRow
wtWebioEA12x6RelAlarmEntry = _WtWebioEA12x6RelAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1)
)
wtWebioEA12x6RelAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmEntry.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelAlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA12x6RelAlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelAlarmInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelAlarmInputTrigger = _WtWebioEA12x6RelAlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 1),
    _WtWebioEA12x6RelAlarmInputTrigger_Type()
)
wtWebioEA12x6RelAlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelAlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA12x6RelAlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelAlarmOutputTrigger_Object = MibTableColumn
wtWebioEA12x6RelAlarmOutputTrigger = _WtWebioEA12x6RelAlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 2),
    _WtWebioEA12x6RelAlarmOutputTrigger_Type()
)
wtWebioEA12x6RelAlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelAlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelAlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelAlarmSystemTrigger_Object = MibTableColumn
wtWebioEA12x6RelAlarmSystemTrigger = _WtWebioEA12x6RelAlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 3),
    _WtWebioEA12x6RelAlarmSystemTrigger_Type()
)
wtWebioEA12x6RelAlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA12x6RelAlarmMaxCounterValue_Type = OctetString
_WtWebioEA12x6RelAlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA12x6RelAlarmMaxCounterValue = _WtWebioEA12x6RelAlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 4),
    _WtWebioEA12x6RelAlarmMaxCounterValue_Type()
)
wtWebioEA12x6RelAlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA12x6RelAlarmInterval_Type = OctetString
_WtWebioEA12x6RelAlarmInterval_Object = MibTableColumn
wtWebioEA12x6RelAlarmInterval = _WtWebioEA12x6RelAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 5),
    _WtWebioEA12x6RelAlarmInterval_Type()
)
wtWebioEA12x6RelAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmInterval.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelAlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelAlarmEnable_Object = MibTableColumn
wtWebioEA12x6RelAlarmEnable = _WtWebioEA12x6RelAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 6),
    _WtWebioEA12x6RelAlarmEnable_Type()
)
wtWebioEA12x6RelAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmEnable.setStatus("mandatory")
_WtWebioEA12x6RelAlarmMailAddr_Type = OctetString
_WtWebioEA12x6RelAlarmMailAddr_Object = MibTableColumn
wtWebioEA12x6RelAlarmMailAddr = _WtWebioEA12x6RelAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 7),
    _WtWebioEA12x6RelAlarmMailAddr_Type()
)
wtWebioEA12x6RelAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmMailAddr.setStatus("mandatory")
_WtWebioEA12x6RelAlarmMailSubject_Type = OctetString
_WtWebioEA12x6RelAlarmMailSubject_Object = MibTableColumn
wtWebioEA12x6RelAlarmMailSubject = _WtWebioEA12x6RelAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 8),
    _WtWebioEA12x6RelAlarmMailSubject_Type()
)
wtWebioEA12x6RelAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmMailSubject.setStatus("mandatory")
_WtWebioEA12x6RelAlarmMailText_Type = OctetString
_WtWebioEA12x6RelAlarmMailText_Object = MibTableColumn
wtWebioEA12x6RelAlarmMailText = _WtWebioEA12x6RelAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 9),
    _WtWebioEA12x6RelAlarmMailText_Type()
)
wtWebioEA12x6RelAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmMailText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmSnmpManagerIP_Type = OctetString
_WtWebioEA12x6RelAlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA12x6RelAlarmSnmpManagerIP = _WtWebioEA12x6RelAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 10),
    _WtWebioEA12x6RelAlarmSnmpManagerIP_Type()
)
wtWebioEA12x6RelAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA12x6RelAlarmSnmpTrapText_Type = OctetString
_WtWebioEA12x6RelAlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA12x6RelAlarmSnmpTrapText = _WtWebioEA12x6RelAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 11),
    _WtWebioEA12x6RelAlarmSnmpTrapText_Type()
)
wtWebioEA12x6RelAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmUdpIpAddr_Type = OctetString
_WtWebioEA12x6RelAlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA12x6RelAlarmUdpIpAddr = _WtWebioEA12x6RelAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 12),
    _WtWebioEA12x6RelAlarmUdpIpAddr_Type()
)
wtWebioEA12x6RelAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelAlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelAlarmUdpPort_Object = MibTableColumn
wtWebioEA12x6RelAlarmUdpPort = _WtWebioEA12x6RelAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 13),
    _WtWebioEA12x6RelAlarmUdpPort_Type()
)
wtWebioEA12x6RelAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmUdpPort.setStatus("mandatory")
_WtWebioEA12x6RelAlarmUdpText_Type = OctetString
_WtWebioEA12x6RelAlarmUdpText_Object = MibTableColumn
wtWebioEA12x6RelAlarmUdpText = _WtWebioEA12x6RelAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 14),
    _WtWebioEA12x6RelAlarmUdpText_Type()
)
wtWebioEA12x6RelAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmUdpText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmTcpIpAddr_Type = OctetString
_WtWebioEA12x6RelAlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA12x6RelAlarmTcpIpAddr = _WtWebioEA12x6RelAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 15),
    _WtWebioEA12x6RelAlarmTcpIpAddr_Type()
)
wtWebioEA12x6RelAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelAlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelAlarmTcpPort_Object = MibTableColumn
wtWebioEA12x6RelAlarmTcpPort = _WtWebioEA12x6RelAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 16),
    _WtWebioEA12x6RelAlarmTcpPort_Type()
)
wtWebioEA12x6RelAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmTcpPort.setStatus("mandatory")
_WtWebioEA12x6RelAlarmTcpText_Type = OctetString
_WtWebioEA12x6RelAlarmTcpText_Object = MibTableColumn
wtWebioEA12x6RelAlarmTcpText = _WtWebioEA12x6RelAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 17),
    _WtWebioEA12x6RelAlarmTcpText_Type()
)
wtWebioEA12x6RelAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmTcpText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmSyslogIpAddr_Type = OctetString
_WtWebioEA12x6RelAlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA12x6RelAlarmSyslogIpAddr = _WtWebioEA12x6RelAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 18),
    _WtWebioEA12x6RelAlarmSyslogIpAddr_Type()
)
wtWebioEA12x6RelAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelAlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelAlarmSyslogPort_Object = MibTableColumn
wtWebioEA12x6RelAlarmSyslogPort = _WtWebioEA12x6RelAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 19),
    _WtWebioEA12x6RelAlarmSyslogPort_Type()
)
wtWebioEA12x6RelAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSyslogPort.setStatus("mandatory")
_WtWebioEA12x6RelAlarmSyslogText_Type = OctetString
_WtWebioEA12x6RelAlarmSyslogText_Object = MibTableColumn
wtWebioEA12x6RelAlarmSyslogText = _WtWebioEA12x6RelAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 20),
    _WtWebioEA12x6RelAlarmSyslogText_Type()
)
wtWebioEA12x6RelAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSyslogText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmFtpDataPort_Type = OctetString
_WtWebioEA12x6RelAlarmFtpDataPort_Object = MibTableColumn
wtWebioEA12x6RelAlarmFtpDataPort = _WtWebioEA12x6RelAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 21),
    _WtWebioEA12x6RelAlarmFtpDataPort_Type()
)
wtWebioEA12x6RelAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA12x6RelAlarmFtpFileName_Type = OctetString
_WtWebioEA12x6RelAlarmFtpFileName_Object = MibTableColumn
wtWebioEA12x6RelAlarmFtpFileName = _WtWebioEA12x6RelAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 22),
    _WtWebioEA12x6RelAlarmFtpFileName_Type()
)
wtWebioEA12x6RelAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmFtpFileName.setStatus("mandatory")
_WtWebioEA12x6RelAlarmFtpText_Type = OctetString
_WtWebioEA12x6RelAlarmFtpText_Object = MibTableColumn
wtWebioEA12x6RelAlarmFtpText = _WtWebioEA12x6RelAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 23),
    _WtWebioEA12x6RelAlarmFtpText_Type()
)
wtWebioEA12x6RelAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmFtpText.setStatus("mandatory")


class _WtWebioEA12x6RelAlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA12x6RelAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelAlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA12x6RelAlarmFtpOption_Object = MibTableColumn
wtWebioEA12x6RelAlarmFtpOption = _WtWebioEA12x6RelAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 24),
    _WtWebioEA12x6RelAlarmFtpOption_Type()
)
wtWebioEA12x6RelAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmFtpOption.setStatus("mandatory")
_WtWebioEA12x6RelAlarmTimerCron_Type = OctetString
_WtWebioEA12x6RelAlarmTimerCron_Object = MibTableColumn
wtWebioEA12x6RelAlarmTimerCron = _WtWebioEA12x6RelAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 25),
    _WtWebioEA12x6RelAlarmTimerCron_Type()
)
wtWebioEA12x6RelAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmTimerCron.setStatus("mandatory")
_WtWebioEA12x6RelAlarmMailReleaseSubject_Type = OctetString
_WtWebioEA12x6RelAlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA12x6RelAlarmMailReleaseSubject = _WtWebioEA12x6RelAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 26),
    _WtWebioEA12x6RelAlarmMailReleaseSubject_Type()
)
wtWebioEA12x6RelAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA12x6RelAlarmMailReleaseText_Type = OctetString
_WtWebioEA12x6RelAlarmMailReleaseText_Object = MibTableColumn
wtWebioEA12x6RelAlarmMailReleaseText = _WtWebioEA12x6RelAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 27),
    _WtWebioEA12x6RelAlarmMailReleaseText_Type()
)
wtWebioEA12x6RelAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA12x6RelAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA12x6RelAlarmSnmpTrapReleaseText = _WtWebioEA12x6RelAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 28),
    _WtWebioEA12x6RelAlarmSnmpTrapReleaseText_Type()
)
wtWebioEA12x6RelAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmUdpReleaseText_Type = OctetString
_WtWebioEA12x6RelAlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA12x6RelAlarmUdpReleaseText = _WtWebioEA12x6RelAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 29),
    _WtWebioEA12x6RelAlarmUdpReleaseText_Type()
)
wtWebioEA12x6RelAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmTcpReleaseText_Type = OctetString
_WtWebioEA12x6RelAlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA12x6RelAlarmTcpReleaseText = _WtWebioEA12x6RelAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 30),
    _WtWebioEA12x6RelAlarmTcpReleaseText_Type()
)
wtWebioEA12x6RelAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmSyslogReleaseText_Type = OctetString
_WtWebioEA12x6RelAlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA12x6RelAlarmSyslogReleaseText = _WtWebioEA12x6RelAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 31),
    _WtWebioEA12x6RelAlarmSyslogReleaseText_Type()
)
wtWebioEA12x6RelAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelAlarmFtpReleaseText_Type = OctetString
_WtWebioEA12x6RelAlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA12x6RelAlarmFtpReleaseText = _WtWebioEA12x6RelAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 1, 5, 3, 1, 32),
    _WtWebioEA12x6RelAlarmFtpReleaseText_Type()
)
wtWebioEA12x6RelAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlarmFtpReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelPorts_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelPorts = _WtWebioEA12x6RelPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2)
)
_WtWebioEA12x6RelInputPortTable_Object = MibTable
wtWebioEA12x6RelInputPortTable = _WtWebioEA12x6RelInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputPortTable.setStatus("mandatory")
_WtWebioEA12x6RelInputPortEntry_Object = MibTableRow
wtWebioEA12x6RelInputPortEntry = _WtWebioEA12x6RelInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1)
)
wtWebioEA12x6RelInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelInputPortEntry.setStatus("mandatory")
_WtWebioEA12x6RelPortInputName_Type = OctetString
_WtWebioEA12x6RelPortInputName_Object = MibTableColumn
wtWebioEA12x6RelPortInputName = _WtWebioEA12x6RelPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1, 1),
    _WtWebioEA12x6RelPortInputName_Type()
)
wtWebioEA12x6RelPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortInputName.setStatus("mandatory")
_WtWebioEA12x6RelPortInputText_Type = OctetString
_WtWebioEA12x6RelPortInputText_Object = MibTableColumn
wtWebioEA12x6RelPortInputText = _WtWebioEA12x6RelPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1, 2),
    _WtWebioEA12x6RelPortInputText_Type()
)
wtWebioEA12x6RelPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortInputText.setStatus("mandatory")


class _WtWebioEA12x6RelPortInputMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortInputMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortInputMode_Object = MibTableColumn
wtWebioEA12x6RelPortInputMode = _WtWebioEA12x6RelPortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1, 3),
    _WtWebioEA12x6RelPortInputMode_Type()
)
wtWebioEA12x6RelPortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortInputMode.setStatus("mandatory")
_WtWebioEA12x6RelPortInputFilter_Type = Integer32
_WtWebioEA12x6RelPortInputFilter_Object = MibTableColumn
wtWebioEA12x6RelPortInputFilter = _WtWebioEA12x6RelPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1, 4),
    _WtWebioEA12x6RelPortInputFilter_Type()
)
wtWebioEA12x6RelPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortInputFilter.setStatus("mandatory")


class _WtWebioEA12x6RelPortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA12x6RelPortInputBicountPulsePolarity = _WtWebioEA12x6RelPortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1, 5),
    _WtWebioEA12x6RelPortInputBicountPulsePolarity_Type()
)
wtWebioEA12x6RelPortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA12x6RelPortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA12x6RelPortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA12x6RelPortInputBicountInactivTimeout = _WtWebioEA12x6RelPortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 1, 1, 6),
    _WtWebioEA12x6RelPortInputBicountInactivTimeout_Type()
)
wtWebioEA12x6RelPortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA12x6RelOutputPortTable_Object = MibTable
wtWebioEA12x6RelOutputPortTable = _WtWebioEA12x6RelOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputPortTable.setStatus("mandatory")
_WtWebioEA12x6RelOutputPortEntry_Object = MibTableRow
wtWebioEA12x6RelOutputPortEntry = _WtWebioEA12x6RelOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1)
)
wtWebioEA12x6RelOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelOutputPortEntry.setStatus("mandatory")
_WtWebioEA12x6RelPortOutputName_Type = OctetString
_WtWebioEA12x6RelPortOutputName_Object = MibTableColumn
wtWebioEA12x6RelPortOutputName = _WtWebioEA12x6RelPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 1),
    _WtWebioEA12x6RelPortOutputName_Type()
)
wtWebioEA12x6RelPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortOutputName.setStatus("mandatory")
_WtWebioEA12x6RelPortOutputText_Type = OctetString
_WtWebioEA12x6RelPortOutputText_Object = MibTableColumn
wtWebioEA12x6RelPortOutputText = _WtWebioEA12x6RelPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 2),
    _WtWebioEA12x6RelPortOutputText_Type()
)
wtWebioEA12x6RelPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortOutputText.setStatus("mandatory")
_WtWebioEA12x6RelPortOutputGroupMode_Type = OctetString
_WtWebioEA12x6RelPortOutputGroupMode_Object = MibTableColumn
wtWebioEA12x6RelPortOutputGroupMode = _WtWebioEA12x6RelPortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 3),
    _WtWebioEA12x6RelPortOutputGroupMode_Type()
)
wtWebioEA12x6RelPortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortOutputGroupMode.setStatus("mandatory")
_WtWebioEA12x6RelPortOutputSafetyState_Type = OctetString
_WtWebioEA12x6RelPortOutputSafetyState_Object = MibTableColumn
wtWebioEA12x6RelPortOutputSafetyState = _WtWebioEA12x6RelPortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 4),
    _WtWebioEA12x6RelPortOutputSafetyState_Type()
)
wtWebioEA12x6RelPortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA12x6RelPortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortLogicInputMask_Object = MibTableColumn
wtWebioEA12x6RelPortLogicInputMask = _WtWebioEA12x6RelPortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 5),
    _WtWebioEA12x6RelPortLogicInputMask_Type()
)
wtWebioEA12x6RelPortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortLogicInputMask.setStatus("mandatory")


class _WtWebioEA12x6RelPortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortLogicInputInverter_Object = MibTableColumn
wtWebioEA12x6RelPortLogicInputInverter = _WtWebioEA12x6RelPortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 6),
    _WtWebioEA12x6RelPortLogicInputInverter_Type()
)
wtWebioEA12x6RelPortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA12x6RelPortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortLogicFunction_Object = MibTableColumn
wtWebioEA12x6RelPortLogicFunction = _WtWebioEA12x6RelPortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 7),
    _WtWebioEA12x6RelPortLogicFunction_Type()
)
wtWebioEA12x6RelPortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortLogicFunction.setStatus("mandatory")


class _WtWebioEA12x6RelPortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortLogicOutputInverter_Object = MibTableColumn
wtWebioEA12x6RelPortLogicOutputInverter = _WtWebioEA12x6RelPortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 8),
    _WtWebioEA12x6RelPortLogicOutputInverter_Type()
)
wtWebioEA12x6RelPortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA12x6RelPortPulseDuration_Type = Integer32
_WtWebioEA12x6RelPortPulseDuration_Object = MibTableColumn
wtWebioEA12x6RelPortPulseDuration = _WtWebioEA12x6RelPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 9),
    _WtWebioEA12x6RelPortPulseDuration_Type()
)
wtWebioEA12x6RelPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortPulseDuration.setStatus("mandatory")


class _WtWebioEA12x6RelPortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA12x6RelPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelPortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA12x6RelPortPulsePolarity_Object = MibTableColumn
wtWebioEA12x6RelPortPulsePolarity = _WtWebioEA12x6RelPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 2, 2, 1, 10),
    _WtWebioEA12x6RelPortPulsePolarity_Type()
)
wtWebioEA12x6RelPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelPortPulsePolarity.setStatus("mandatory")
_WtWebioEA12x6RelManufact_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelManufact = _WtWebioEA12x6RelManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3)
)
_WtWebioEA12x6RelMfName_Type = OctetString
_WtWebioEA12x6RelMfName_Object = MibScalar
wtWebioEA12x6RelMfName = _WtWebioEA12x6RelMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3, 1),
    _WtWebioEA12x6RelMfName_Type()
)
wtWebioEA12x6RelMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMfName.setStatus("mandatory")
_WtWebioEA12x6RelMfAddr_Type = OctetString
_WtWebioEA12x6RelMfAddr_Object = MibScalar
wtWebioEA12x6RelMfAddr = _WtWebioEA12x6RelMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3, 2),
    _WtWebioEA12x6RelMfAddr_Type()
)
wtWebioEA12x6RelMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMfAddr.setStatus("mandatory")
_WtWebioEA12x6RelMfHotline_Type = OctetString
_WtWebioEA12x6RelMfHotline_Object = MibScalar
wtWebioEA12x6RelMfHotline = _WtWebioEA12x6RelMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3, 3),
    _WtWebioEA12x6RelMfHotline_Type()
)
wtWebioEA12x6RelMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMfHotline.setStatus("mandatory")
_WtWebioEA12x6RelMfInternet_Type = OctetString
_WtWebioEA12x6RelMfInternet_Object = MibScalar
wtWebioEA12x6RelMfInternet = _WtWebioEA12x6RelMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3, 4),
    _WtWebioEA12x6RelMfInternet_Type()
)
wtWebioEA12x6RelMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMfInternet.setStatus("mandatory")
_WtWebioEA12x6RelMfDeviceTyp_Type = OctetString
_WtWebioEA12x6RelMfDeviceTyp_Object = MibScalar
wtWebioEA12x6RelMfDeviceTyp = _WtWebioEA12x6RelMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3, 5),
    _WtWebioEA12x6RelMfDeviceTyp_Type()
)
wtWebioEA12x6RelMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMfDeviceTyp.setStatus("mandatory")
_WtWebioEA12x6RelMfOrderNo_Type = OctetString
_WtWebioEA12x6RelMfOrderNo_Object = MibScalar
wtWebioEA12x6RelMfOrderNo = _WtWebioEA12x6RelMfOrderNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 3, 3, 6),
    _WtWebioEA12x6RelMfOrderNo_Type()
)
wtWebioEA12x6RelMfOrderNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelMfOrderNo.setStatus("mandatory")
_WtWebioEA12x6RelDiag_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelDiag = _WtWebioEA12x6RelDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 4)
)
_WtWebioEA12x6RelDiagErrorCount_Type = Integer32
_WtWebioEA12x6RelDiagErrorCount_Object = MibScalar
wtWebioEA12x6RelDiagErrorCount = _WtWebioEA12x6RelDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 4, 1),
    _WtWebioEA12x6RelDiagErrorCount_Type()
)
wtWebioEA12x6RelDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDiagErrorCount.setStatus("mandatory")
_WtWebioEA12x6RelDiagBinaryError_Type = OctetString
_WtWebioEA12x6RelDiagBinaryError_Object = MibScalar
wtWebioEA12x6RelDiagBinaryError = _WtWebioEA12x6RelDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 4, 2),
    _WtWebioEA12x6RelDiagBinaryError_Type()
)
wtWebioEA12x6RelDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDiagBinaryError.setStatus("mandatory")
_WtWebioEA12x6RelDiagErrorIndex_Type = Integer32
_WtWebioEA12x6RelDiagErrorIndex_Object = MibScalar
wtWebioEA12x6RelDiagErrorIndex = _WtWebioEA12x6RelDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 4, 3),
    _WtWebioEA12x6RelDiagErrorIndex_Type()
)
wtWebioEA12x6RelDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDiagErrorIndex.setStatus("mandatory")
_WtWebioEA12x6RelDiagErrorMessage_Type = OctetString
_WtWebioEA12x6RelDiagErrorMessage_Object = MibScalar
wtWebioEA12x6RelDiagErrorMessage = _WtWebioEA12x6RelDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 4, 4),
    _WtWebioEA12x6RelDiagErrorMessage_Type()
)
wtWebioEA12x6RelDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDiagErrorMessage.setStatus("mandatory")
_WtWebioEA12x6RelDiagErrorClear_Type = Integer32
_WtWebioEA12x6RelDiagErrorClear_Object = MibScalar
wtWebioEA12x6RelDiagErrorClear = _WtWebioEA12x6RelDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 4, 5),
    _WtWebioEA12x6RelDiagErrorClear_Type()
)
wtWebioEA12x6RelDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelDiagErrorClear.setStatus("mandatory")
_WtWebAlarm6x6_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6 = _WtWebAlarm6x6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20)
)
_WtWebAlarm6x6InOut_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6InOut = _WtWebAlarm6x6InOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1)
)


class _WtWebAlarm6x6Inputs_Type(Integer32):
    """Custom type wtWebAlarm6x6Inputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebAlarm6x6Inputs_Type.__name__ = "Integer32"
_WtWebAlarm6x6Inputs_Object = MibScalar
wtWebAlarm6x6Inputs = _WtWebAlarm6x6Inputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 1),
    _WtWebAlarm6x6Inputs_Type()
)
wtWebAlarm6x6Inputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6Inputs.setStatus("mandatory")


class _WtWebAlarm6x6Outputs_Type(Integer32):
    """Custom type wtWebAlarm6x6Outputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebAlarm6x6Outputs_Type.__name__ = "Integer32"
_WtWebAlarm6x6Outputs_Object = MibScalar
wtWebAlarm6x6Outputs = _WtWebAlarm6x6Outputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 2),
    _WtWebAlarm6x6Outputs_Type()
)
wtWebAlarm6x6Outputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6Outputs.setStatus("mandatory")
_WtWebAlarm6x6InputTable_Object = MibTable
wtWebAlarm6x6InputTable = _WtWebAlarm6x6InputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputTable.setStatus("mandatory")
_WtWebAlarm6x6InputEntry_Object = MibTableRow
wtWebAlarm6x6InputEntry = _WtWebAlarm6x6InputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 3, 1)
)
wtWebAlarm6x6InputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6InputNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputEntry.setStatus("mandatory")


class _WtWebAlarm6x6InputNo_Type(Integer32):
    """Custom type wtWebAlarm6x6InputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebAlarm6x6InputNo_Type.__name__ = "Integer32"
_WtWebAlarm6x6InputNo_Object = MibTableColumn
wtWebAlarm6x6InputNo = _WtWebAlarm6x6InputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 3, 1, 1),
    _WtWebAlarm6x6InputNo_Type()
)
wtWebAlarm6x6InputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputNo.setStatus("mandatory")


class _WtWebAlarm6x6InputCounter_Type(Integer32):
    """Custom type wtWebAlarm6x6InputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebAlarm6x6InputCounter_Type.__name__ = "Integer32"
_WtWebAlarm6x6InputCounter_Object = MibTableColumn
wtWebAlarm6x6InputCounter = _WtWebAlarm6x6InputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 3, 1, 2),
    _WtWebAlarm6x6InputCounter_Type()
)
wtWebAlarm6x6InputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputCounter.setStatus("mandatory")
_WtWebAlarm6x6InputCounterClear_Type = Integer32
_WtWebAlarm6x6InputCounterClear_Object = MibTableColumn
wtWebAlarm6x6InputCounterClear = _WtWebAlarm6x6InputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 3, 1, 3),
    _WtWebAlarm6x6InputCounterClear_Type()
)
wtWebAlarm6x6InputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputCounterClear.setStatus("mandatory")


class _WtWebAlarm6x6InputState_Type(Integer32):
    """Custom type wtWebAlarm6x6InputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6InputState-OFF", 0),
          ("wtWebAlarm6x6InputState-ON", 1))
    )


_WtWebAlarm6x6InputState_Type.__name__ = "Integer32"
_WtWebAlarm6x6InputState_Object = MibTableColumn
wtWebAlarm6x6InputState = _WtWebAlarm6x6InputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 3, 1, 4),
    _WtWebAlarm6x6InputState_Type()
)
wtWebAlarm6x6InputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputState.setStatus("mandatory")
_WtWebAlarm6x6InputValue_Type = Integer32
_WtWebAlarm6x6InputValue_Object = MibScalar
wtWebAlarm6x6InputValue = _WtWebAlarm6x6InputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 4),
    _WtWebAlarm6x6InputValue_Type()
)
wtWebAlarm6x6InputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputValue.setStatus("mandatory")
_WtWebAlarm6x6OutputTable_Object = MibTable
wtWebAlarm6x6OutputTable = _WtWebAlarm6x6OutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputTable.setStatus("mandatory")
_WtWebAlarm6x6OutputEntry_Object = MibTableRow
wtWebAlarm6x6OutputEntry = _WtWebAlarm6x6OutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 5, 1)
)
wtWebAlarm6x6OutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputEntry.setStatus("mandatory")


class _WtWebAlarm6x6OutputNo_Type(Integer32):
    """Custom type wtWebAlarm6x6OutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebAlarm6x6OutputNo_Type.__name__ = "Integer32"
_WtWebAlarm6x6OutputNo_Object = MibTableColumn
wtWebAlarm6x6OutputNo = _WtWebAlarm6x6OutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 5, 1, 1),
    _WtWebAlarm6x6OutputNo_Type()
)
wtWebAlarm6x6OutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputNo.setStatus("mandatory")


class _WtWebAlarm6x6OutputState_Type(Integer32):
    """Custom type wtWebAlarm6x6OutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6OutputState-OFF", 0),
          ("wtWebAlarm6x6OutputState-ON", 1))
    )


_WtWebAlarm6x6OutputState_Type.__name__ = "Integer32"
_WtWebAlarm6x6OutputState_Object = MibTableColumn
wtWebAlarm6x6OutputState = _WtWebAlarm6x6OutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 5, 1, 2),
    _WtWebAlarm6x6OutputState_Type()
)
wtWebAlarm6x6OutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputState.setStatus("mandatory")
_WtWebAlarm6x6OutputValue_Type = Integer32
_WtWebAlarm6x6OutputValue_Object = MibScalar
wtWebAlarm6x6OutputValue = _WtWebAlarm6x6OutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 6),
    _WtWebAlarm6x6OutputValue_Type()
)
wtWebAlarm6x6OutputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputValue.setStatus("mandatory")
_WtWebAlarm6x6AlarmOutputTable_Object = MibTable
wtWebAlarm6x6AlarmOutputTable = _WtWebAlarm6x6AlarmOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 8)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmOutputTable.setStatus("mandatory")
_WtWebAlarm6x6AlarmOutputEntry_Object = MibTableRow
wtWebAlarm6x6AlarmOutputEntry = _WtWebAlarm6x6AlarmOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 8, 1)
)
wtWebAlarm6x6AlarmOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmOutputEntry.setStatus("mandatory")


class _WtWebAlarm6x6AlarmOutputState_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6AlarmOutputState-OFF", 0),
          ("wtWebAlarm6x6AlarmOutputState-ON", 1))
    )


_WtWebAlarm6x6AlarmOutputState_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmOutputState_Object = MibTableColumn
wtWebAlarm6x6AlarmOutputState = _WtWebAlarm6x6AlarmOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 8, 1, 1),
    _WtWebAlarm6x6AlarmOutputState_Type()
)
wtWebAlarm6x6AlarmOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmOutputState.setStatus("mandatory")


class _WtWebAlarm6x6AlarmTriggerState_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmTriggerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6AlarmTriggerState-OFF", 0),
          ("wtWebAlarm6x6AlarmTriggerState-ON", 1))
    )


_WtWebAlarm6x6AlarmTriggerState_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmTriggerState_Object = MibTableColumn
wtWebAlarm6x6AlarmTriggerState = _WtWebAlarm6x6AlarmTriggerState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 1, 8, 1, 2),
    _WtWebAlarm6x6AlarmTriggerState_Type()
)
wtWebAlarm6x6AlarmTriggerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTriggerState.setStatus("mandatory")
_WtWebAlarm6x6SessCntrl_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6SessCntrl = _WtWebAlarm6x6SessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 2)
)
_WtWebAlarm6x6SessCntrlPassword_Type = OctetString
_WtWebAlarm6x6SessCntrlPassword_Object = MibScalar
wtWebAlarm6x6SessCntrlPassword = _WtWebAlarm6x6SessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 2, 1),
    _WtWebAlarm6x6SessCntrlPassword_Type()
)
wtWebAlarm6x6SessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SessCntrlPassword.setStatus("mandatory")


class _WtWebAlarm6x6SessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebAlarm6x6SessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6SessCntrl-NoSession", 0),
          ("wtWebAlarm6x6SessCntrl-Session", 1))
    )


_WtWebAlarm6x6SessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebAlarm6x6SessCntrlConfigMode_Object = MibScalar
wtWebAlarm6x6SessCntrlConfigMode = _WtWebAlarm6x6SessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 2, 2),
    _WtWebAlarm6x6SessCntrlConfigMode_Type()
)
wtWebAlarm6x6SessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SessCntrlConfigMode.setStatus("mandatory")
_WtWebAlarm6x6SessCntrlLogout_Type = Integer32
_WtWebAlarm6x6SessCntrlLogout_Object = MibScalar
wtWebAlarm6x6SessCntrlLogout = _WtWebAlarm6x6SessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 2, 3),
    _WtWebAlarm6x6SessCntrlLogout_Type()
)
wtWebAlarm6x6SessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SessCntrlLogout.setStatus("mandatory")
_WtWebAlarm6x6SessCntrlAdminPassword_Type = OctetString
_WtWebAlarm6x6SessCntrlAdminPassword_Object = MibScalar
wtWebAlarm6x6SessCntrlAdminPassword = _WtWebAlarm6x6SessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 2, 4),
    _WtWebAlarm6x6SessCntrlAdminPassword_Type()
)
wtWebAlarm6x6SessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SessCntrlAdminPassword.setStatus("mandatory")
_WtWebAlarm6x6SessCntrlConfigPassword_Type = OctetString
_WtWebAlarm6x6SessCntrlConfigPassword_Object = MibScalar
wtWebAlarm6x6SessCntrlConfigPassword = _WtWebAlarm6x6SessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 2, 5),
    _WtWebAlarm6x6SessCntrlConfigPassword_Type()
)
wtWebAlarm6x6SessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SessCntrlConfigPassword.setStatus("mandatory")
_WtWebAlarm6x6Config_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Config = _WtWebAlarm6x6Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3)
)
_WtWebAlarm6x6Device_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Device = _WtWebAlarm6x6Device_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1)
)
_WtWebAlarm6x6Text_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Text = _WtWebAlarm6x6Text_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 1)
)
_WtWebAlarm6x6DeviceName_Type = OctetString
_WtWebAlarm6x6DeviceName_Object = MibScalar
wtWebAlarm6x6DeviceName = _WtWebAlarm6x6DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 1, 1),
    _WtWebAlarm6x6DeviceName_Type()
)
wtWebAlarm6x6DeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DeviceName.setStatus("mandatory")
_WtWebAlarm6x6DeviceText_Type = OctetString
_WtWebAlarm6x6DeviceText_Object = MibScalar
wtWebAlarm6x6DeviceText = _WtWebAlarm6x6DeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 1, 2),
    _WtWebAlarm6x6DeviceText_Type()
)
wtWebAlarm6x6DeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DeviceText.setStatus("mandatory")
_WtWebAlarm6x6DeviceLocation_Type = OctetString
_WtWebAlarm6x6DeviceLocation_Object = MibScalar
wtWebAlarm6x6DeviceLocation = _WtWebAlarm6x6DeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 1, 3),
    _WtWebAlarm6x6DeviceLocation_Type()
)
wtWebAlarm6x6DeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DeviceLocation.setStatus("mandatory")
_WtWebAlarm6x6DeviceContact_Type = OctetString
_WtWebAlarm6x6DeviceContact_Object = MibScalar
wtWebAlarm6x6DeviceContact = _WtWebAlarm6x6DeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 1, 4),
    _WtWebAlarm6x6DeviceContact_Type()
)
wtWebAlarm6x6DeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DeviceContact.setStatus("mandatory")
_WtWebAlarm6x6TimeDate_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6TimeDate = _WtWebAlarm6x6TimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2)
)
_WtWebAlarm6x6TimeZone_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6TimeZone = _WtWebAlarm6x6TimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1)
)
_WtWebAlarm6x6TzOffsetHrs_Type = Integer32
_WtWebAlarm6x6TzOffsetHrs_Object = MibScalar
wtWebAlarm6x6TzOffsetHrs = _WtWebAlarm6x6TzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 1),
    _WtWebAlarm6x6TzOffsetHrs_Type()
)
wtWebAlarm6x6TzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TzOffsetHrs.setStatus("mandatory")
_WtWebAlarm6x6TzOffsetMin_Type = Integer32
_WtWebAlarm6x6TzOffsetMin_Object = MibScalar
wtWebAlarm6x6TzOffsetMin = _WtWebAlarm6x6TzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 2),
    _WtWebAlarm6x6TzOffsetMin_Type()
)
wtWebAlarm6x6TzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TzOffsetMin.setStatus("mandatory")


class _WtWebAlarm6x6TzEnable_Type(OctetString):
    """Custom type wtWebAlarm6x6TzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6TzEnable_Type.__name__ = "OctetString"
_WtWebAlarm6x6TzEnable_Object = MibScalar
wtWebAlarm6x6TzEnable = _WtWebAlarm6x6TzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 3),
    _WtWebAlarm6x6TzEnable_Type()
)
wtWebAlarm6x6TzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TzEnable.setStatus("mandatory")
_WtWebAlarm6x6StTzOffsetHrs_Type = Integer32
_WtWebAlarm6x6StTzOffsetHrs_Object = MibScalar
wtWebAlarm6x6StTzOffsetHrs = _WtWebAlarm6x6StTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 4),
    _WtWebAlarm6x6StTzOffsetHrs_Type()
)
wtWebAlarm6x6StTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzOffsetHrs.setStatus("mandatory")
_WtWebAlarm6x6StTzOffsetMin_Type = Integer32
_WtWebAlarm6x6StTzOffsetMin_Object = MibScalar
wtWebAlarm6x6StTzOffsetMin = _WtWebAlarm6x6StTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 5),
    _WtWebAlarm6x6StTzOffsetMin_Type()
)
wtWebAlarm6x6StTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzOffsetMin.setStatus("mandatory")


class _WtWebAlarm6x6StTzEnable_Type(OctetString):
    """Custom type wtWebAlarm6x6StTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6StTzEnable_Type.__name__ = "OctetString"
_WtWebAlarm6x6StTzEnable_Object = MibScalar
wtWebAlarm6x6StTzEnable = _WtWebAlarm6x6StTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 6),
    _WtWebAlarm6x6StTzEnable_Type()
)
wtWebAlarm6x6StTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzEnable.setStatus("mandatory")


class _WtWebAlarm6x6StTzStartMonth_Type(Integer32):
    """Custom type wtWebAlarm6x6StTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6StartMonth-April", 4),
          ("wtWebAlarm6x6StartMonth-August", 8),
          ("wtWebAlarm6x6StartMonth-December", 12),
          ("wtWebAlarm6x6StartMonth-February", 2),
          ("wtWebAlarm6x6StartMonth-January", 1),
          ("wtWebAlarm6x6StartMonth-July", 7),
          ("wtWebAlarm6x6StartMonth-June", 6),
          ("wtWebAlarm6x6StartMonth-March", 3),
          ("wtWebAlarm6x6StartMonth-May", 5),
          ("wtWebAlarm6x6StartMonth-November", 11),
          ("wtWebAlarm6x6StartMonth-October", 10),
          ("wtWebAlarm6x6StartMonth-September", 9))
    )


_WtWebAlarm6x6StTzStartMonth_Type.__name__ = "Integer32"
_WtWebAlarm6x6StTzStartMonth_Object = MibScalar
wtWebAlarm6x6StTzStartMonth = _WtWebAlarm6x6StTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 7),
    _WtWebAlarm6x6StTzStartMonth_Type()
)
wtWebAlarm6x6StTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStartMonth.setStatus("mandatory")


class _WtWebAlarm6x6StTzStartMode_Type(Integer32):
    """Custom type wtWebAlarm6x6StTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6StartMode-first", 1),
          ("wtWebAlarm6x6StartMode-fourth", 4),
          ("wtWebAlarm6x6StartMode-last", 5),
          ("wtWebAlarm6x6StartMode-second", 2),
          ("wtWebAlarm6x6StartMode-third", 3))
    )


_WtWebAlarm6x6StTzStartMode_Type.__name__ = "Integer32"
_WtWebAlarm6x6StTzStartMode_Object = MibScalar
wtWebAlarm6x6StTzStartMode = _WtWebAlarm6x6StTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 8),
    _WtWebAlarm6x6StTzStartMode_Type()
)
wtWebAlarm6x6StTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStartMode.setStatus("mandatory")


class _WtWebAlarm6x6StTzStartWday_Type(Integer32):
    """Custom type wtWebAlarm6x6StTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6StartWday-Friday", 6),
          ("wtWebAlarm6x6StartWday-Monday", 2),
          ("wtWebAlarm6x6StartWday-Saturday", 7),
          ("wtWebAlarm6x6StartWday-Sunday", 1),
          ("wtWebAlarm6x6StartWday-Thursday", 4),
          ("wtWebAlarm6x6StartWday-Tuesday", 3),
          ("wtWebAlarm6x6StartWday-Wednesday", 5))
    )


_WtWebAlarm6x6StTzStartWday_Type.__name__ = "Integer32"
_WtWebAlarm6x6StTzStartWday_Object = MibScalar
wtWebAlarm6x6StTzStartWday = _WtWebAlarm6x6StTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 9),
    _WtWebAlarm6x6StTzStartWday_Type()
)
wtWebAlarm6x6StTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStartWday.setStatus("mandatory")
_WtWebAlarm6x6StTzStartHrs_Type = Integer32
_WtWebAlarm6x6StTzStartHrs_Object = MibScalar
wtWebAlarm6x6StTzStartHrs = _WtWebAlarm6x6StTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 10),
    _WtWebAlarm6x6StTzStartHrs_Type()
)
wtWebAlarm6x6StTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStartHrs.setStatus("mandatory")
_WtWebAlarm6x6StTzStartMin_Type = Integer32
_WtWebAlarm6x6StTzStartMin_Object = MibScalar
wtWebAlarm6x6StTzStartMin = _WtWebAlarm6x6StTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 11),
    _WtWebAlarm6x6StTzStartMin_Type()
)
wtWebAlarm6x6StTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStartMin.setStatus("mandatory")


class _WtWebAlarm6x6StTzStopMonth_Type(Integer32):
    """Custom type wtWebAlarm6x6StTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6StopMonth-April", 4),
          ("wtWebAlarm6x6StopMonth-August", 8),
          ("wtWebAlarm6x6StopMonth-December", 12),
          ("wtWebAlarm6x6StopMonth-February", 2),
          ("wtWebAlarm6x6StopMonth-January", 1),
          ("wtWebAlarm6x6StopMonth-July", 7),
          ("wtWebAlarm6x6StopMonth-June", 6),
          ("wtWebAlarm6x6StopMonth-March", 3),
          ("wtWebAlarm6x6StopMonth-May", 5),
          ("wtWebAlarm6x6StopMonth-November", 11),
          ("wtWebAlarm6x6StopMonth-October", 10),
          ("wtWebAlarm6x6StopMonth-September", 9))
    )


_WtWebAlarm6x6StTzStopMonth_Type.__name__ = "Integer32"
_WtWebAlarm6x6StTzStopMonth_Object = MibScalar
wtWebAlarm6x6StTzStopMonth = _WtWebAlarm6x6StTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 12),
    _WtWebAlarm6x6StTzStopMonth_Type()
)
wtWebAlarm6x6StTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStopMonth.setStatus("mandatory")


class _WtWebAlarm6x6StTzStopMode_Type(Integer32):
    """Custom type wtWebAlarm6x6StTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6StopMode-first", 1),
          ("wtWebAlarm6x6StopMode-fourth", 4),
          ("wtWebAlarm6x6StopMode-last", 5),
          ("wtWebAlarm6x6StopMode-second", 2),
          ("wtWebAlarm6x6StopMode-third", 3))
    )


_WtWebAlarm6x6StTzStopMode_Type.__name__ = "Integer32"
_WtWebAlarm6x6StTzStopMode_Object = MibScalar
wtWebAlarm6x6StTzStopMode = _WtWebAlarm6x6StTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 13),
    _WtWebAlarm6x6StTzStopMode_Type()
)
wtWebAlarm6x6StTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStopMode.setStatus("mandatory")


class _WtWebAlarm6x6StTzStopWday_Type(Integer32):
    """Custom type wtWebAlarm6x6StTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6StopWday-Friday", 6),
          ("wtWebAlarm6x6StopWday-Monday", 2),
          ("wtWebAlarm6x6StopWday-Saturday", 7),
          ("wtWebAlarm6x6StopWday-Sunday", 1),
          ("wtWebAlarm6x6StopWday-Thursday", 4),
          ("wtWebAlarm6x6StopWday-Tuesday", 3),
          ("wtWebAlarm6x6StopWday-Wednesday", 5))
    )


_WtWebAlarm6x6StTzStopWday_Type.__name__ = "Integer32"
_WtWebAlarm6x6StTzStopWday_Object = MibScalar
wtWebAlarm6x6StTzStopWday = _WtWebAlarm6x6StTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 14),
    _WtWebAlarm6x6StTzStopWday_Type()
)
wtWebAlarm6x6StTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStopWday.setStatus("mandatory")
_WtWebAlarm6x6StTzStopHrs_Type = Integer32
_WtWebAlarm6x6StTzStopHrs_Object = MibScalar
wtWebAlarm6x6StTzStopHrs = _WtWebAlarm6x6StTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 15),
    _WtWebAlarm6x6StTzStopHrs_Type()
)
wtWebAlarm6x6StTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStopHrs.setStatus("mandatory")
_WtWebAlarm6x6StTzStopMin_Type = Integer32
_WtWebAlarm6x6StTzStopMin_Object = MibScalar
wtWebAlarm6x6StTzStopMin = _WtWebAlarm6x6StTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 1, 16),
    _WtWebAlarm6x6StTzStopMin_Type()
)
wtWebAlarm6x6StTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6StTzStopMin.setStatus("mandatory")
_WtWebAlarm6x6TimeServer_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6TimeServer = _WtWebAlarm6x6TimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 2)
)
_WtWebAlarm6x6TimeServer1_Type = OctetString
_WtWebAlarm6x6TimeServer1_Object = MibScalar
wtWebAlarm6x6TimeServer1 = _WtWebAlarm6x6TimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 2, 1),
    _WtWebAlarm6x6TimeServer1_Type()
)
wtWebAlarm6x6TimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TimeServer1.setStatus("mandatory")
_WtWebAlarm6x6TimeServer2_Type = OctetString
_WtWebAlarm6x6TimeServer2_Object = MibScalar
wtWebAlarm6x6TimeServer2 = _WtWebAlarm6x6TimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 2, 2),
    _WtWebAlarm6x6TimeServer2_Type()
)
wtWebAlarm6x6TimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TimeServer2.setStatus("mandatory")


class _WtWebAlarm6x6TsEnable_Type(OctetString):
    """Custom type wtWebAlarm6x6TsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6TsEnable_Type.__name__ = "OctetString"
_WtWebAlarm6x6TsEnable_Object = MibScalar
wtWebAlarm6x6TsEnable = _WtWebAlarm6x6TsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 2, 3),
    _WtWebAlarm6x6TsEnable_Type()
)
wtWebAlarm6x6TsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TsEnable.setStatus("mandatory")
_WtWebAlarm6x6TsSyncTime_Type = Integer32
_WtWebAlarm6x6TsSyncTime_Object = MibScalar
wtWebAlarm6x6TsSyncTime = _WtWebAlarm6x6TsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 2, 4),
    _WtWebAlarm6x6TsSyncTime_Type()
)
wtWebAlarm6x6TsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6TsSyncTime.setStatus("mandatory")
_WtWebAlarm6x6DeviceClock_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6DeviceClock = _WtWebAlarm6x6DeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 3)
)


class _WtWebAlarm6x6ClockHrs_Type(Integer32):
    """Custom type wtWebAlarm6x6ClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebAlarm6x6ClockHrs_Type.__name__ = "Integer32"
_WtWebAlarm6x6ClockHrs_Object = MibScalar
wtWebAlarm6x6ClockHrs = _WtWebAlarm6x6ClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 3, 1),
    _WtWebAlarm6x6ClockHrs_Type()
)
wtWebAlarm6x6ClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6ClockHrs.setStatus("mandatory")


class _WtWebAlarm6x6ClockMin_Type(Integer32):
    """Custom type wtWebAlarm6x6ClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebAlarm6x6ClockMin_Type.__name__ = "Integer32"
_WtWebAlarm6x6ClockMin_Object = MibScalar
wtWebAlarm6x6ClockMin = _WtWebAlarm6x6ClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 3, 2),
    _WtWebAlarm6x6ClockMin_Type()
)
wtWebAlarm6x6ClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6ClockMin.setStatus("mandatory")


class _WtWebAlarm6x6ClockDay_Type(Integer32):
    """Custom type wtWebAlarm6x6ClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebAlarm6x6ClockDay_Type.__name__ = "Integer32"
_WtWebAlarm6x6ClockDay_Object = MibScalar
wtWebAlarm6x6ClockDay = _WtWebAlarm6x6ClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 3, 3),
    _WtWebAlarm6x6ClockDay_Type()
)
wtWebAlarm6x6ClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6ClockDay.setStatus("mandatory")


class _WtWebAlarm6x6ClockMonth_Type(Integer32):
    """Custom type wtWebAlarm6x6ClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebAlarm6x6ClockMonth-April", 4),
          ("wtWebAlarm6x6ClockMonth-August", 8),
          ("wtWebAlarm6x6ClockMonth-December", 12),
          ("wtWebAlarm6x6ClockMonth-February", 2),
          ("wtWebAlarm6x6ClockMonth-January", 1),
          ("wtWebAlarm6x6ClockMonth-July", 7),
          ("wtWebAlarm6x6ClockMonth-June", 6),
          ("wtWebAlarm6x6ClockMonth-March", 3),
          ("wtWebAlarm6x6ClockMonth-May", 5),
          ("wtWebAlarm6x6ClockMonth-November", 11),
          ("wtWebAlarm6x6ClockMonth-October", 10),
          ("wtWebAlarm6x6ClockMonth-September", 9))
    )


_WtWebAlarm6x6ClockMonth_Type.__name__ = "Integer32"
_WtWebAlarm6x6ClockMonth_Object = MibScalar
wtWebAlarm6x6ClockMonth = _WtWebAlarm6x6ClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 3, 4),
    _WtWebAlarm6x6ClockMonth_Type()
)
wtWebAlarm6x6ClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6ClockMonth.setStatus("mandatory")


class _WtWebAlarm6x6ClockYear_Type(Integer32):
    """Custom type wtWebAlarm6x6ClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebAlarm6x6ClockYear_Type.__name__ = "Integer32"
_WtWebAlarm6x6ClockYear_Object = MibScalar
wtWebAlarm6x6ClockYear = _WtWebAlarm6x6ClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 2, 3, 5),
    _WtWebAlarm6x6ClockYear_Type()
)
wtWebAlarm6x6ClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6ClockYear.setStatus("mandatory")
_WtWebAlarm6x6Basic_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Basic = _WtWebAlarm6x6Basic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3)
)
_WtWebAlarm6x6Network_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Network = _WtWebAlarm6x6Network_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1)
)
_WtWebAlarm6x6IpAddress_Type = IpAddress
_WtWebAlarm6x6IpAddress_Object = MibScalar
wtWebAlarm6x6IpAddress = _WtWebAlarm6x6IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1, 1),
    _WtWebAlarm6x6IpAddress_Type()
)
wtWebAlarm6x6IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6IpAddress.setStatus("mandatory")
_WtWebAlarm6x6SubnetMask_Type = IpAddress
_WtWebAlarm6x6SubnetMask_Object = MibScalar
wtWebAlarm6x6SubnetMask = _WtWebAlarm6x6SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1, 2),
    _WtWebAlarm6x6SubnetMask_Type()
)
wtWebAlarm6x6SubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SubnetMask.setStatus("mandatory")
_WtWebAlarm6x6Gateway_Type = IpAddress
_WtWebAlarm6x6Gateway_Object = MibScalar
wtWebAlarm6x6Gateway = _WtWebAlarm6x6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1, 3),
    _WtWebAlarm6x6Gateway_Type()
)
wtWebAlarm6x6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6Gateway.setStatus("mandatory")
_WtWebAlarm6x6DnsServer1_Type = OctetString
_WtWebAlarm6x6DnsServer1_Object = MibScalar
wtWebAlarm6x6DnsServer1 = _WtWebAlarm6x6DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1, 4),
    _WtWebAlarm6x6DnsServer1_Type()
)
wtWebAlarm6x6DnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DnsServer1.setStatus("mandatory")
_WtWebAlarm6x6DnsServer2_Type = OctetString
_WtWebAlarm6x6DnsServer2_Object = MibScalar
wtWebAlarm6x6DnsServer2 = _WtWebAlarm6x6DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1, 5),
    _WtWebAlarm6x6DnsServer2_Type()
)
wtWebAlarm6x6DnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DnsServer2.setStatus("mandatory")
_WtWebAlarm6x6AddConfig_Type = OctetString
_WtWebAlarm6x6AddConfig_Object = MibScalar
wtWebAlarm6x6AddConfig = _WtWebAlarm6x6AddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 1, 6),
    _WtWebAlarm6x6AddConfig_Type()
)
wtWebAlarm6x6AddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AddConfig.setStatus("mandatory")
_WtWebAlarm6x6HTTP_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6HTTP = _WtWebAlarm6x6HTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 2)
)


class _WtWebAlarm6x6HttpPort_Type(Integer32):
    """Custom type wtWebAlarm6x6HttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebAlarm6x6HttpPort_Type.__name__ = "Integer32"
_WtWebAlarm6x6HttpPort_Object = MibScalar
wtWebAlarm6x6HttpPort = _WtWebAlarm6x6HttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 2, 4),
    _WtWebAlarm6x6HttpPort_Type()
)
wtWebAlarm6x6HttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6HttpPort.setStatus("mandatory")
_WtWebAlarm6x6Mail_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Mail = _WtWebAlarm6x6Mail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3)
)
_WtWebAlarm6x6MailAdName_Type = OctetString
_WtWebAlarm6x6MailAdName_Object = MibScalar
wtWebAlarm6x6MailAdName = _WtWebAlarm6x6MailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 1),
    _WtWebAlarm6x6MailAdName_Type()
)
wtWebAlarm6x6MailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailAdName.setStatus("mandatory")
_WtWebAlarm6x6MailReply_Type = OctetString
_WtWebAlarm6x6MailReply_Object = MibScalar
wtWebAlarm6x6MailReply = _WtWebAlarm6x6MailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 2),
    _WtWebAlarm6x6MailReply_Type()
)
wtWebAlarm6x6MailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailReply.setStatus("mandatory")
_WtWebAlarm6x6MailServer_Type = OctetString
_WtWebAlarm6x6MailServer_Object = MibScalar
wtWebAlarm6x6MailServer = _WtWebAlarm6x6MailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 3),
    _WtWebAlarm6x6MailServer_Type()
)
wtWebAlarm6x6MailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailServer.setStatus("mandatory")
_WtWebAlarm6x6MailEnable_Type = OctetString
_WtWebAlarm6x6MailEnable_Object = MibScalar
wtWebAlarm6x6MailEnable = _WtWebAlarm6x6MailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 4),
    _WtWebAlarm6x6MailEnable_Type()
)
wtWebAlarm6x6MailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailEnable.setStatus("mandatory")


class _WtWebAlarm6x6MailAuthentication_Type(OctetString):
    """Custom type wtWebAlarm6x6MailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6MailAuthentication_Type.__name__ = "OctetString"
_WtWebAlarm6x6MailAuthentication_Object = MibScalar
wtWebAlarm6x6MailAuthentication = _WtWebAlarm6x6MailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 5),
    _WtWebAlarm6x6MailAuthentication_Type()
)
wtWebAlarm6x6MailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailAuthentication.setStatus("mandatory")
_WtWebAlarm6x6MailAuthUser_Type = OctetString
_WtWebAlarm6x6MailAuthUser_Object = MibScalar
wtWebAlarm6x6MailAuthUser = _WtWebAlarm6x6MailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 6),
    _WtWebAlarm6x6MailAuthUser_Type()
)
wtWebAlarm6x6MailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailAuthUser.setStatus("mandatory")
_WtWebAlarm6x6MailAuthPassword_Type = OctetString
_WtWebAlarm6x6MailAuthPassword_Object = MibScalar
wtWebAlarm6x6MailAuthPassword = _WtWebAlarm6x6MailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 7),
    _WtWebAlarm6x6MailAuthPassword_Type()
)
wtWebAlarm6x6MailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailAuthPassword.setStatus("mandatory")
_WtWebAlarm6x6MailPop3Server_Type = OctetString
_WtWebAlarm6x6MailPop3Server_Object = MibScalar
wtWebAlarm6x6MailPop3Server = _WtWebAlarm6x6MailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 3, 8),
    _WtWebAlarm6x6MailPop3Server_Type()
)
wtWebAlarm6x6MailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MailPop3Server.setStatus("mandatory")
_WtWebAlarm6x6SNMP_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6SNMP = _WtWebAlarm6x6SNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 4)
)
_WtWebAlarm6x6SnmpEnable_Type = OctetString
_WtWebAlarm6x6SnmpEnable_Object = MibScalar
wtWebAlarm6x6SnmpEnable = _WtWebAlarm6x6SnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 4, 1),
    _WtWebAlarm6x6SnmpEnable_Type()
)
wtWebAlarm6x6SnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SnmpEnable.setStatus("mandatory")
_WtWebAlarm6x6SnmpCommunityStringRead_Type = OctetString
_WtWebAlarm6x6SnmpCommunityStringRead_Object = MibScalar
wtWebAlarm6x6SnmpCommunityStringRead = _WtWebAlarm6x6SnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 4, 2),
    _WtWebAlarm6x6SnmpCommunityStringRead_Type()
)
wtWebAlarm6x6SnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SnmpCommunityStringRead.setStatus("mandatory")
_WtWebAlarm6x6SnmpCommunityStringReadWrite_Type = OctetString
_WtWebAlarm6x6SnmpCommunityStringReadWrite_Object = MibScalar
wtWebAlarm6x6SnmpCommunityStringReadWrite = _WtWebAlarm6x6SnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 4, 3),
    _WtWebAlarm6x6SnmpCommunityStringReadWrite_Type()
)
wtWebAlarm6x6SnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebAlarm6x6SnmpSystemTrapManagerIP_Type = OctetString
_WtWebAlarm6x6SnmpSystemTrapManagerIP_Object = MibScalar
wtWebAlarm6x6SnmpSystemTrapManagerIP = _WtWebAlarm6x6SnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 4, 4),
    _WtWebAlarm6x6SnmpSystemTrapManagerIP_Type()
)
wtWebAlarm6x6SnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebAlarm6x6SnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebAlarm6x6SnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6SnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebAlarm6x6SnmpSystemTrapEnable_Object = MibScalar
wtWebAlarm6x6SnmpSystemTrapEnable = _WtWebAlarm6x6SnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 4, 5),
    _WtWebAlarm6x6SnmpSystemTrapEnable_Type()
)
wtWebAlarm6x6SnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SnmpSystemTrapEnable.setStatus("mandatory")
_WtWebAlarm6x6UDP_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6UDP = _WtWebAlarm6x6UDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 5)
)
_WtWebAlarm6x6UdpAdminPort_Type = Integer32
_WtWebAlarm6x6UdpAdminPort_Object = MibScalar
wtWebAlarm6x6UdpAdminPort = _WtWebAlarm6x6UdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 5, 1),
    _WtWebAlarm6x6UdpAdminPort_Type()
)
wtWebAlarm6x6UdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6UdpAdminPort.setStatus("mandatory")
_WtWebAlarm6x6UdpEnable_Type = OctetString
_WtWebAlarm6x6UdpEnable_Object = MibScalar
wtWebAlarm6x6UdpEnable = _WtWebAlarm6x6UdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 5, 2),
    _WtWebAlarm6x6UdpEnable_Type()
)
wtWebAlarm6x6UdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6UdpEnable.setStatus("mandatory")
_WtWebAlarm6x6UdpRemotePort_Type = Integer32
_WtWebAlarm6x6UdpRemotePort_Object = MibScalar
wtWebAlarm6x6UdpRemotePort = _WtWebAlarm6x6UdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 5, 3),
    _WtWebAlarm6x6UdpRemotePort_Type()
)
wtWebAlarm6x6UdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6UdpRemotePort.setStatus("mandatory")
_WtWebAlarm6x6Syslog_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Syslog = _WtWebAlarm6x6Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 7)
)
_WtWebAlarm6x6SyslogServerIP_Type = OctetString
_WtWebAlarm6x6SyslogServerIP_Object = MibScalar
wtWebAlarm6x6SyslogServerIP = _WtWebAlarm6x6SyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 7, 1),
    _WtWebAlarm6x6SyslogServerIP_Type()
)
wtWebAlarm6x6SyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SyslogServerIP.setStatus("mandatory")
_WtWebAlarm6x6SyslogServerPort_Type = Integer32
_WtWebAlarm6x6SyslogServerPort_Object = MibScalar
wtWebAlarm6x6SyslogServerPort = _WtWebAlarm6x6SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 7, 2),
    _WtWebAlarm6x6SyslogServerPort_Type()
)
wtWebAlarm6x6SyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SyslogServerPort.setStatus("mandatory")


class _WtWebAlarm6x6SyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebAlarm6x6SyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6SyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebAlarm6x6SyslogSystemMessagesEnable_Object = MibScalar
wtWebAlarm6x6SyslogSystemMessagesEnable = _WtWebAlarm6x6SyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 7, 3),
    _WtWebAlarm6x6SyslogSystemMessagesEnable_Type()
)
wtWebAlarm6x6SyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebAlarm6x6SyslogEnable_Type = OctetString
_WtWebAlarm6x6SyslogEnable_Object = MibScalar
wtWebAlarm6x6SyslogEnable = _WtWebAlarm6x6SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 7, 4),
    _WtWebAlarm6x6SyslogEnable_Type()
)
wtWebAlarm6x6SyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6SyslogEnable.setStatus("mandatory")
_WtWebAlarm6x6FTP_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6FTP = _WtWebAlarm6x6FTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8)
)
_WtWebAlarm6x6FTPServerIP_Type = OctetString
_WtWebAlarm6x6FTPServerIP_Object = MibScalar
wtWebAlarm6x6FTPServerIP = _WtWebAlarm6x6FTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 1),
    _WtWebAlarm6x6FTPServerIP_Type()
)
wtWebAlarm6x6FTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPServerIP.setStatus("mandatory")
_WtWebAlarm6x6FTPServerControlPort_Type = Integer32
_WtWebAlarm6x6FTPServerControlPort_Object = MibScalar
wtWebAlarm6x6FTPServerControlPort = _WtWebAlarm6x6FTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 2),
    _WtWebAlarm6x6FTPServerControlPort_Type()
)
wtWebAlarm6x6FTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPServerControlPort.setStatus("mandatory")
_WtWebAlarm6x6FTPUserName_Type = OctetString
_WtWebAlarm6x6FTPUserName_Object = MibScalar
wtWebAlarm6x6FTPUserName = _WtWebAlarm6x6FTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 3),
    _WtWebAlarm6x6FTPUserName_Type()
)
wtWebAlarm6x6FTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPUserName.setStatus("mandatory")
_WtWebAlarm6x6FTPPassword_Type = OctetString
_WtWebAlarm6x6FTPPassword_Object = MibScalar
wtWebAlarm6x6FTPPassword = _WtWebAlarm6x6FTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 4),
    _WtWebAlarm6x6FTPPassword_Type()
)
wtWebAlarm6x6FTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPPassword.setStatus("mandatory")
_WtWebAlarm6x6FTPAccount_Type = OctetString
_WtWebAlarm6x6FTPAccount_Object = MibScalar
wtWebAlarm6x6FTPAccount = _WtWebAlarm6x6FTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 5),
    _WtWebAlarm6x6FTPAccount_Type()
)
wtWebAlarm6x6FTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPAccount.setStatus("mandatory")
_WtWebAlarm6x6FTPOption_Type = OctetString
_WtWebAlarm6x6FTPOption_Object = MibScalar
wtWebAlarm6x6FTPOption = _WtWebAlarm6x6FTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 6),
    _WtWebAlarm6x6FTPOption_Type()
)
wtWebAlarm6x6FTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPOption.setStatus("mandatory")
_WtWebAlarm6x6FTPEnable_Type = OctetString
_WtWebAlarm6x6FTPEnable_Object = MibScalar
wtWebAlarm6x6FTPEnable = _WtWebAlarm6x6FTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 3, 8, 7),
    _WtWebAlarm6x6FTPEnable_Type()
)
wtWebAlarm6x6FTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6FTPEnable.setStatus("mandatory")
_WtWebAlarm6x6Alarm_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Alarm = _WtWebAlarm6x6Alarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5)
)


class _WtWebAlarm6x6AlarmCount_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebAlarm6x6AlarmCount_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmCount_Object = MibScalar
wtWebAlarm6x6AlarmCount = _WtWebAlarm6x6AlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 1),
    _WtWebAlarm6x6AlarmCount_Type()
)
wtWebAlarm6x6AlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmCount.setStatus("mandatory")
_WtWebAlarm6x6AlarmIfTable_Object = MibTable
wtWebAlarm6x6AlarmIfTable = _WtWebAlarm6x6AlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmIfTable.setStatus("mandatory")
_WtWebAlarm6x6AlarmIfEntry_Object = MibTableRow
wtWebAlarm6x6AlarmIfEntry = _WtWebAlarm6x6AlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 2, 1)
)
wtWebAlarm6x6AlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmIfEntry.setStatus("mandatory")


class _WtWebAlarm6x6AlarmNo_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebAlarm6x6AlarmNo_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmNo_Object = MibTableColumn
wtWebAlarm6x6AlarmNo = _WtWebAlarm6x6AlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 2, 1, 1),
    _WtWebAlarm6x6AlarmNo_Type()
)
wtWebAlarm6x6AlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmNo.setStatus("mandatory")
_WtWebAlarm6x6AlarmTable_Object = MibTable
wtWebAlarm6x6AlarmTable = _WtWebAlarm6x6AlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTable.setStatus("mandatory")
_WtWebAlarm6x6AlarmEntry_Object = MibTableRow
wtWebAlarm6x6AlarmEntry = _WtWebAlarm6x6AlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1)
)
wtWebAlarm6x6AlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmEntry.setStatus("mandatory")


class _WtWebAlarm6x6AlarmInputTrigger_Type(OctetString):
    """Custom type wtWebAlarm6x6AlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebAlarm6x6AlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebAlarm6x6AlarmInputTrigger_Object = MibTableColumn
wtWebAlarm6x6AlarmInputTrigger = _WtWebAlarm6x6AlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 1),
    _WtWebAlarm6x6AlarmInputTrigger_Type()
)
wtWebAlarm6x6AlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmInputTrigger.setStatus("mandatory")
_WtWebAlarm6x6AlarmMaxCounterValue_Type = OctetString
_WtWebAlarm6x6AlarmMaxCounterValue_Object = MibTableColumn
wtWebAlarm6x6AlarmMaxCounterValue = _WtWebAlarm6x6AlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 4),
    _WtWebAlarm6x6AlarmMaxCounterValue_Type()
)
wtWebAlarm6x6AlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMaxCounterValue.setStatus("mandatory")
_WtWebAlarm6x6AlarmInterval_Type = OctetString
_WtWebAlarm6x6AlarmInterval_Object = MibTableColumn
wtWebAlarm6x6AlarmInterval = _WtWebAlarm6x6AlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 5),
    _WtWebAlarm6x6AlarmInterval_Type()
)
wtWebAlarm6x6AlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmInterval.setStatus("mandatory")


class _WtWebAlarm6x6AlarmEnable_Type(OctetString):
    """Custom type wtWebAlarm6x6AlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6AlarmEnable_Type.__name__ = "OctetString"
_WtWebAlarm6x6AlarmEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmEnable = _WtWebAlarm6x6AlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 6),
    _WtWebAlarm6x6AlarmEnable_Type()
)
wtWebAlarm6x6AlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailAddr_Type = OctetString
_WtWebAlarm6x6AlarmMailAddr_Object = MibTableColumn
wtWebAlarm6x6AlarmMailAddr = _WtWebAlarm6x6AlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 7),
    _WtWebAlarm6x6AlarmMailAddr_Type()
)
wtWebAlarm6x6AlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailAddr.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailSubject_Type = OctetString
_WtWebAlarm6x6AlarmMailSubject_Object = MibTableColumn
wtWebAlarm6x6AlarmMailSubject = _WtWebAlarm6x6AlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 8),
    _WtWebAlarm6x6AlarmMailSubject_Type()
)
wtWebAlarm6x6AlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailSubject.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailText_Type = OctetString
_WtWebAlarm6x6AlarmMailText_Object = MibTableColumn
wtWebAlarm6x6AlarmMailText = _WtWebAlarm6x6AlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 9),
    _WtWebAlarm6x6AlarmMailText_Type()
)
wtWebAlarm6x6AlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailText.setStatus("mandatory")
_WtWebAlarm6x6AlarmSnmpManagerIP_Type = OctetString
_WtWebAlarm6x6AlarmSnmpManagerIP_Object = MibTableColumn
wtWebAlarm6x6AlarmSnmpManagerIP = _WtWebAlarm6x6AlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 10),
    _WtWebAlarm6x6AlarmSnmpManagerIP_Type()
)
wtWebAlarm6x6AlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSnmpManagerIP.setStatus("mandatory")
_WtWebAlarm6x6AlarmSnmpTrapText_Type = OctetString
_WtWebAlarm6x6AlarmSnmpTrapText_Object = MibTableColumn
wtWebAlarm6x6AlarmSnmpTrapText = _WtWebAlarm6x6AlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 11),
    _WtWebAlarm6x6AlarmSnmpTrapText_Type()
)
wtWebAlarm6x6AlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSnmpTrapText.setStatus("mandatory")
_WtWebAlarm6x6AlarmUdpIpAddr_Type = OctetString
_WtWebAlarm6x6AlarmUdpIpAddr_Object = MibTableColumn
wtWebAlarm6x6AlarmUdpIpAddr = _WtWebAlarm6x6AlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 12),
    _WtWebAlarm6x6AlarmUdpIpAddr_Type()
)
wtWebAlarm6x6AlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmUdpIpAddr.setStatus("mandatory")


class _WtWebAlarm6x6AlarmUdpPort_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebAlarm6x6AlarmUdpPort_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmUdpPort_Object = MibTableColumn
wtWebAlarm6x6AlarmUdpPort = _WtWebAlarm6x6AlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 13),
    _WtWebAlarm6x6AlarmUdpPort_Type()
)
wtWebAlarm6x6AlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmUdpPort.setStatus("mandatory")
_WtWebAlarm6x6AlarmUdpText_Type = OctetString
_WtWebAlarm6x6AlarmUdpText_Object = MibTableColumn
wtWebAlarm6x6AlarmUdpText = _WtWebAlarm6x6AlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 14),
    _WtWebAlarm6x6AlarmUdpText_Type()
)
wtWebAlarm6x6AlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmUdpText.setStatus("mandatory")
_WtWebAlarm6x6AlarmTcpIpAddr_Type = OctetString
_WtWebAlarm6x6AlarmTcpIpAddr_Object = MibTableColumn
wtWebAlarm6x6AlarmTcpIpAddr = _WtWebAlarm6x6AlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 15),
    _WtWebAlarm6x6AlarmTcpIpAddr_Type()
)
wtWebAlarm6x6AlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTcpIpAddr.setStatus("mandatory")


class _WtWebAlarm6x6AlarmTcpPort_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebAlarm6x6AlarmTcpPort_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmTcpPort_Object = MibTableColumn
wtWebAlarm6x6AlarmTcpPort = _WtWebAlarm6x6AlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 16),
    _WtWebAlarm6x6AlarmTcpPort_Type()
)
wtWebAlarm6x6AlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTcpPort.setStatus("mandatory")
_WtWebAlarm6x6AlarmTcpText_Type = OctetString
_WtWebAlarm6x6AlarmTcpText_Object = MibTableColumn
wtWebAlarm6x6AlarmTcpText = _WtWebAlarm6x6AlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 17),
    _WtWebAlarm6x6AlarmTcpText_Type()
)
wtWebAlarm6x6AlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTcpText.setStatus("mandatory")
_WtWebAlarm6x6AlarmSyslogIpAddr_Type = OctetString
_WtWebAlarm6x6AlarmSyslogIpAddr_Object = MibTableColumn
wtWebAlarm6x6AlarmSyslogIpAddr = _WtWebAlarm6x6AlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 18),
    _WtWebAlarm6x6AlarmSyslogIpAddr_Type()
)
wtWebAlarm6x6AlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebAlarm6x6AlarmSyslogPort_Type(Integer32):
    """Custom type wtWebAlarm6x6AlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebAlarm6x6AlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebAlarm6x6AlarmSyslogPort_Object = MibTableColumn
wtWebAlarm6x6AlarmSyslogPort = _WtWebAlarm6x6AlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 19),
    _WtWebAlarm6x6AlarmSyslogPort_Type()
)
wtWebAlarm6x6AlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSyslogPort.setStatus("mandatory")
_WtWebAlarm6x6AlarmSyslogText_Type = OctetString
_WtWebAlarm6x6AlarmSyslogText_Object = MibTableColumn
wtWebAlarm6x6AlarmSyslogText = _WtWebAlarm6x6AlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 20),
    _WtWebAlarm6x6AlarmSyslogText_Type()
)
wtWebAlarm6x6AlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSyslogText.setStatus("mandatory")
_WtWebAlarm6x6AlarmFtpDataPort_Type = OctetString
_WtWebAlarm6x6AlarmFtpDataPort_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpDataPort = _WtWebAlarm6x6AlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 21),
    _WtWebAlarm6x6AlarmFtpDataPort_Type()
)
wtWebAlarm6x6AlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpDataPort.setStatus("mandatory")
_WtWebAlarm6x6AlarmFtpFileName_Type = OctetString
_WtWebAlarm6x6AlarmFtpFileName_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpFileName = _WtWebAlarm6x6AlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 22),
    _WtWebAlarm6x6AlarmFtpFileName_Type()
)
wtWebAlarm6x6AlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpFileName.setStatus("mandatory")
_WtWebAlarm6x6AlarmFtpText_Type = OctetString
_WtWebAlarm6x6AlarmFtpText_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpText = _WtWebAlarm6x6AlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 23),
    _WtWebAlarm6x6AlarmFtpText_Type()
)
wtWebAlarm6x6AlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpText.setStatus("mandatory")


class _WtWebAlarm6x6AlarmFtpOption_Type(OctetString):
    """Custom type wtWebAlarm6x6AlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6AlarmFtpOption_Type.__name__ = "OctetString"
_WtWebAlarm6x6AlarmFtpOption_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpOption = _WtWebAlarm6x6AlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 24),
    _WtWebAlarm6x6AlarmFtpOption_Type()
)
wtWebAlarm6x6AlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpOption.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailReleaseSubject_Type = OctetString
_WtWebAlarm6x6AlarmMailReleaseSubject_Object = MibTableColumn
wtWebAlarm6x6AlarmMailReleaseSubject = _WtWebAlarm6x6AlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 26),
    _WtWebAlarm6x6AlarmMailReleaseSubject_Type()
)
wtWebAlarm6x6AlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailReleaseSubject.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailReleaseText_Type = OctetString
_WtWebAlarm6x6AlarmMailReleaseText_Object = MibTableColumn
wtWebAlarm6x6AlarmMailReleaseText = _WtWebAlarm6x6AlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 27),
    _WtWebAlarm6x6AlarmMailReleaseText_Type()
)
wtWebAlarm6x6AlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailReleaseText.setStatus("mandatory")
_WtWebAlarm6x6AlarmSnmpTrapReleaseText_Type = OctetString
_WtWebAlarm6x6AlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebAlarm6x6AlarmSnmpTrapReleaseText = _WtWebAlarm6x6AlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 28),
    _WtWebAlarm6x6AlarmSnmpTrapReleaseText_Type()
)
wtWebAlarm6x6AlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebAlarm6x6AlarmUdpReleaseText_Type = OctetString
_WtWebAlarm6x6AlarmUdpReleaseText_Object = MibTableColumn
wtWebAlarm6x6AlarmUdpReleaseText = _WtWebAlarm6x6AlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 29),
    _WtWebAlarm6x6AlarmUdpReleaseText_Type()
)
wtWebAlarm6x6AlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmUdpReleaseText.setStatus("mandatory")
_WtWebAlarm6x6AlarmTcpReleaseText_Type = OctetString
_WtWebAlarm6x6AlarmTcpReleaseText_Object = MibTableColumn
wtWebAlarm6x6AlarmTcpReleaseText = _WtWebAlarm6x6AlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 30),
    _WtWebAlarm6x6AlarmTcpReleaseText_Type()
)
wtWebAlarm6x6AlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTcpReleaseText.setStatus("mandatory")
_WtWebAlarm6x6AlarmSyslogReleaseText_Type = OctetString
_WtWebAlarm6x6AlarmSyslogReleaseText_Object = MibTableColumn
wtWebAlarm6x6AlarmSyslogReleaseText = _WtWebAlarm6x6AlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 31),
    _WtWebAlarm6x6AlarmSyslogReleaseText_Type()
)
wtWebAlarm6x6AlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSyslogReleaseText.setStatus("mandatory")
_WtWebAlarm6x6AlarmFtpReleaseText_Type = OctetString
_WtWebAlarm6x6AlarmFtpReleaseText_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpReleaseText = _WtWebAlarm6x6AlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 32),
    _WtWebAlarm6x6AlarmFtpReleaseText_Type()
)
wtWebAlarm6x6AlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpReleaseText.setStatus("mandatory")
_WtWebAlarm6x6AlarmName_Type = OctetString
_WtWebAlarm6x6AlarmName_Object = MibTableColumn
wtWebAlarm6x6AlarmName = _WtWebAlarm6x6AlarmName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 33),
    _WtWebAlarm6x6AlarmName_Type()
)
wtWebAlarm6x6AlarmName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmName.setStatus("mandatory")
_WtWebAlarm6x6AlarmGlobalEnable_Type = OctetString
_WtWebAlarm6x6AlarmGlobalEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmGlobalEnable = _WtWebAlarm6x6AlarmGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 34),
    _WtWebAlarm6x6AlarmGlobalEnable_Type()
)
wtWebAlarm6x6AlarmGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmGlobalEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmCounterClear_Type = OctetString
_WtWebAlarm6x6AlarmCounterClear_Object = MibTableColumn
wtWebAlarm6x6AlarmCounterClear = _WtWebAlarm6x6AlarmCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 35),
    _WtWebAlarm6x6AlarmCounterClear_Type()
)
wtWebAlarm6x6AlarmCounterClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmCounterClear.setStatus("mandatory")
_WtWebAlarm6x6AlarmAckEnable_Type = OctetString
_WtWebAlarm6x6AlarmAckEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmAckEnable = _WtWebAlarm6x6AlarmAckEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 36),
    _WtWebAlarm6x6AlarmAckEnable_Type()
)
wtWebAlarm6x6AlarmAckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmAckEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmAckPort_Type = Integer32
_WtWebAlarm6x6AlarmAckPort_Object = MibTableColumn
wtWebAlarm6x6AlarmAckPort = _WtWebAlarm6x6AlarmAckPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 37),
    _WtWebAlarm6x6AlarmAckPort_Type()
)
wtWebAlarm6x6AlarmAckPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmAckPort.setStatus("mandatory")
_WtWebAlarm6x6AlarmSetPort_Type = Integer32
_WtWebAlarm6x6AlarmSetPort_Object = MibTableColumn
wtWebAlarm6x6AlarmSetPort = _WtWebAlarm6x6AlarmSetPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 38),
    _WtWebAlarm6x6AlarmSetPort_Type()
)
wtWebAlarm6x6AlarmSetPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSetPort.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailTrgClearSubject_Type = OctetString
_WtWebAlarm6x6AlarmMailTrgClearSubject_Object = MibTableColumn
wtWebAlarm6x6AlarmMailTrgClearSubject = _WtWebAlarm6x6AlarmMailTrgClearSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 39),
    _WtWebAlarm6x6AlarmMailTrgClearSubject_Type()
)
wtWebAlarm6x6AlarmMailTrgClearSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailTrgClearSubject.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailTrgClearText_Type = OctetString
_WtWebAlarm6x6AlarmMailTrgClearText_Object = MibTableColumn
wtWebAlarm6x6AlarmMailTrgClearText = _WtWebAlarm6x6AlarmMailTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 40),
    _WtWebAlarm6x6AlarmMailTrgClearText_Type()
)
wtWebAlarm6x6AlarmMailTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailTrgClearText.setStatus("mandatory")
_WtWebAlarm6x6AlarmSnmpTrapTrgClearText_Type = OctetString
_WtWebAlarm6x6AlarmSnmpTrapTrgClearText_Object = MibTableColumn
wtWebAlarm6x6AlarmSnmpTrapTrgClearText = _WtWebAlarm6x6AlarmSnmpTrapTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 41),
    _WtWebAlarm6x6AlarmSnmpTrapTrgClearText_Type()
)
wtWebAlarm6x6AlarmSnmpTrapTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSnmpTrapTrgClearText.setStatus("mandatory")
_WtWebAlarm6x6AlarmUdpTrgClearText_Type = OctetString
_WtWebAlarm6x6AlarmUdpTrgClearText_Object = MibTableColumn
wtWebAlarm6x6AlarmUdpTrgClearText = _WtWebAlarm6x6AlarmUdpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 42),
    _WtWebAlarm6x6AlarmUdpTrgClearText_Type()
)
wtWebAlarm6x6AlarmUdpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmUdpTrgClearText.setStatus("mandatory")
_WtWebAlarm6x6AlarmTcpTrgClearText_Type = OctetString
_WtWebAlarm6x6AlarmTcpTrgClearText_Object = MibTableColumn
wtWebAlarm6x6AlarmTcpTrgClearText = _WtWebAlarm6x6AlarmTcpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 43),
    _WtWebAlarm6x6AlarmTcpTrgClearText_Type()
)
wtWebAlarm6x6AlarmTcpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTcpTrgClearText.setStatus("mandatory")
_WtWebAlarm6x6AlarmSyslogTrgClearText_Type = OctetString
_WtWebAlarm6x6AlarmSyslogTrgClearText_Object = MibTableColumn
wtWebAlarm6x6AlarmSyslogTrgClearText = _WtWebAlarm6x6AlarmSyslogTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 44),
    _WtWebAlarm6x6AlarmSyslogTrgClearText_Type()
)
wtWebAlarm6x6AlarmSyslogTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSyslogTrgClearText.setStatus("mandatory")
_WtWebAlarm6x6AlarmFtpTrgClearText_Type = OctetString
_WtWebAlarm6x6AlarmFtpTrgClearText_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpTrgClearText = _WtWebAlarm6x6AlarmFtpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 45),
    _WtWebAlarm6x6AlarmFtpTrgClearText_Type()
)
wtWebAlarm6x6AlarmFtpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpTrgClearText.setStatus("mandatory")
_WtWebAlarm6x6AlarmMailTrapTxEnable_Type = OctetString
_WtWebAlarm6x6AlarmMailTrapTxEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmMailTrapTxEnable = _WtWebAlarm6x6AlarmMailTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 46),
    _WtWebAlarm6x6AlarmMailTrapTxEnable_Type()
)
wtWebAlarm6x6AlarmMailTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmMailTrapTxEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmSnmpTrapTrapTxEnable_Type = OctetString
_WtWebAlarm6x6AlarmSnmpTrapTrapTxEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmSnmpTrapTrapTxEnable = _WtWebAlarm6x6AlarmSnmpTrapTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 47),
    _WtWebAlarm6x6AlarmSnmpTrapTrapTxEnable_Type()
)
wtWebAlarm6x6AlarmSnmpTrapTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSnmpTrapTrapTxEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmUdpTrapTxEnable_Type = OctetString
_WtWebAlarm6x6AlarmUdpTrapTxEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmUdpTrapTxEnable = _WtWebAlarm6x6AlarmUdpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 48),
    _WtWebAlarm6x6AlarmUdpTrapTxEnable_Type()
)
wtWebAlarm6x6AlarmUdpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmUdpTrapTxEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmTcpTrapTxEnable_Type = OctetString
_WtWebAlarm6x6AlarmTcpTrapTxEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmTcpTrapTxEnable = _WtWebAlarm6x6AlarmTcpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 49),
    _WtWebAlarm6x6AlarmTcpTrapTxEnable_Type()
)
wtWebAlarm6x6AlarmTcpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmTcpTrapTxEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmSyslogTrapTxEnable_Type = OctetString
_WtWebAlarm6x6AlarmSyslogTrapTxEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmSyslogTrapTxEnable = _WtWebAlarm6x6AlarmSyslogTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 50),
    _WtWebAlarm6x6AlarmSyslogTrapTxEnable_Type()
)
wtWebAlarm6x6AlarmSyslogTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmSyslogTrapTxEnable.setStatus("mandatory")
_WtWebAlarm6x6AlarmFtpTrapTxEnable_Type = OctetString
_WtWebAlarm6x6AlarmFtpTrapTxEnable_Object = MibTableColumn
wtWebAlarm6x6AlarmFtpTrapTxEnable = _WtWebAlarm6x6AlarmFtpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 1, 5, 3, 1, 51),
    _WtWebAlarm6x6AlarmFtpTrapTxEnable_Type()
)
wtWebAlarm6x6AlarmFtpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlarmFtpTrapTxEnable.setStatus("mandatory")
_WtWebAlarm6x6Ports_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Ports = _WtWebAlarm6x6Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2)
)
_WtWebAlarm6x6InputPortTable_Object = MibTable
wtWebAlarm6x6InputPortTable = _WtWebAlarm6x6InputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputPortTable.setStatus("mandatory")
_WtWebAlarm6x6InputPortEntry_Object = MibTableRow
wtWebAlarm6x6InputPortEntry = _WtWebAlarm6x6InputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1, 1)
)
wtWebAlarm6x6InputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6InputNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6InputPortEntry.setStatus("mandatory")
_WtWebAlarm6x6PortInputName_Type = OctetString
_WtWebAlarm6x6PortInputName_Object = MibTableColumn
wtWebAlarm6x6PortInputName = _WtWebAlarm6x6PortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1, 1, 1),
    _WtWebAlarm6x6PortInputName_Type()
)
wtWebAlarm6x6PortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortInputName.setStatus("mandatory")
_WtWebAlarm6x6PortInputText_Type = OctetString
_WtWebAlarm6x6PortInputText_Object = MibTableColumn
wtWebAlarm6x6PortInputText = _WtWebAlarm6x6PortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1, 1, 2),
    _WtWebAlarm6x6PortInputText_Type()
)
wtWebAlarm6x6PortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortInputText.setStatus("mandatory")
_WtWebAlarm6x6PortInputFilter_Type = Integer32
_WtWebAlarm6x6PortInputFilter_Object = MibTableColumn
wtWebAlarm6x6PortInputFilter = _WtWebAlarm6x6PortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1, 1, 4),
    _WtWebAlarm6x6PortInputFilter_Type()
)
wtWebAlarm6x6PortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortInputFilter.setStatus("mandatory")


class _WtWebAlarm6x6PortInputPulsePolarity_Type(OctetString):
    """Custom type wtWebAlarm6x6PortInputPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6PortInputPulsePolarity_Type.__name__ = "OctetString"
_WtWebAlarm6x6PortInputPulsePolarity_Object = MibTableColumn
wtWebAlarm6x6PortInputPulsePolarity = _WtWebAlarm6x6PortInputPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1, 1, 5),
    _WtWebAlarm6x6PortInputPulsePolarity_Type()
)
wtWebAlarm6x6PortInputPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortInputPulsePolarity.setStatus("mandatory")
_WtWebAlarm6x6PortInputCounterSet_Type = Integer32
_WtWebAlarm6x6PortInputCounterSet_Object = MibTableColumn
wtWebAlarm6x6PortInputCounterSet = _WtWebAlarm6x6PortInputCounterSet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 1, 1, 7),
    _WtWebAlarm6x6PortInputCounterSet_Type()
)
wtWebAlarm6x6PortInputCounterSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortInputCounterSet.setStatus("mandatory")
_WtWebAlarm6x6OutputPortTable_Object = MibTable
wtWebAlarm6x6OutputPortTable = _WtWebAlarm6x6OutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputPortTable.setStatus("mandatory")
_WtWebAlarm6x6OutputPortEntry_Object = MibTableRow
wtWebAlarm6x6OutputPortEntry = _WtWebAlarm6x6OutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 2, 1)
)
wtWebAlarm6x6OutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebAlarm6x6OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6OutputPortEntry.setStatus("mandatory")
_WtWebAlarm6x6PortOutputName_Type = OctetString
_WtWebAlarm6x6PortOutputName_Object = MibTableColumn
wtWebAlarm6x6PortOutputName = _WtWebAlarm6x6PortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 2, 1, 1),
    _WtWebAlarm6x6PortOutputName_Type()
)
wtWebAlarm6x6PortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortOutputName.setStatus("mandatory")
_WtWebAlarm6x6PortOutputText_Type = OctetString
_WtWebAlarm6x6PortOutputText_Object = MibTableColumn
wtWebAlarm6x6PortOutputText = _WtWebAlarm6x6PortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 2, 1, 2),
    _WtWebAlarm6x6PortOutputText_Type()
)
wtWebAlarm6x6PortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortOutputText.setStatus("mandatory")
_WtWebAlarm6x6PortPulseDuration_Type = Integer32
_WtWebAlarm6x6PortPulseDuration_Object = MibTableColumn
wtWebAlarm6x6PortPulseDuration = _WtWebAlarm6x6PortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 2, 1, 9),
    _WtWebAlarm6x6PortPulseDuration_Type()
)
wtWebAlarm6x6PortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortPulseDuration.setStatus("mandatory")


class _WtWebAlarm6x6PortPulsePolarity_Type(OctetString):
    """Custom type wtWebAlarm6x6PortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebAlarm6x6PortPulsePolarity_Type.__name__ = "OctetString"
_WtWebAlarm6x6PortPulsePolarity_Object = MibTableColumn
wtWebAlarm6x6PortPulsePolarity = _WtWebAlarm6x6PortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 2, 2, 1, 10),
    _WtWebAlarm6x6PortPulsePolarity_Type()
)
wtWebAlarm6x6PortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6PortPulsePolarity.setStatus("mandatory")
_WtWebAlarm6x6Manufact_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Manufact = _WtWebAlarm6x6Manufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3)
)
_WtWebAlarm6x6MfName_Type = OctetString
_WtWebAlarm6x6MfName_Object = MibScalar
wtWebAlarm6x6MfName = _WtWebAlarm6x6MfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3, 1),
    _WtWebAlarm6x6MfName_Type()
)
wtWebAlarm6x6MfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MfName.setStatus("mandatory")
_WtWebAlarm6x6MfAddr_Type = OctetString
_WtWebAlarm6x6MfAddr_Object = MibScalar
wtWebAlarm6x6MfAddr = _WtWebAlarm6x6MfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3, 2),
    _WtWebAlarm6x6MfAddr_Type()
)
wtWebAlarm6x6MfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MfAddr.setStatus("mandatory")
_WtWebAlarm6x6MfHotline_Type = OctetString
_WtWebAlarm6x6MfHotline_Object = MibScalar
wtWebAlarm6x6MfHotline = _WtWebAlarm6x6MfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3, 3),
    _WtWebAlarm6x6MfHotline_Type()
)
wtWebAlarm6x6MfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MfHotline.setStatus("mandatory")
_WtWebAlarm6x6MfInternet_Type = OctetString
_WtWebAlarm6x6MfInternet_Object = MibScalar
wtWebAlarm6x6MfInternet = _WtWebAlarm6x6MfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3, 4),
    _WtWebAlarm6x6MfInternet_Type()
)
wtWebAlarm6x6MfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MfInternet.setStatus("mandatory")
_WtWebAlarm6x6MfDeviceTyp_Type = OctetString
_WtWebAlarm6x6MfDeviceTyp_Object = MibScalar
wtWebAlarm6x6MfDeviceTyp = _WtWebAlarm6x6MfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3, 5),
    _WtWebAlarm6x6MfDeviceTyp_Type()
)
wtWebAlarm6x6MfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MfDeviceTyp.setStatus("mandatory")
_WtWebAlarm6x6MfOrderNo_Type = OctetString
_WtWebAlarm6x6MfOrderNo_Object = MibScalar
wtWebAlarm6x6MfOrderNo = _WtWebAlarm6x6MfOrderNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 3, 3, 6),
    _WtWebAlarm6x6MfOrderNo_Type()
)
wtWebAlarm6x6MfOrderNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6MfOrderNo.setStatus("mandatory")
_WtWebAlarm6x6Diag_ObjectIdentity = ObjectIdentity
wtWebAlarm6x6Diag = _WtWebAlarm6x6Diag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 4)
)
_WtWebAlarm6x6DiagErrorCount_Type = Integer32
_WtWebAlarm6x6DiagErrorCount_Object = MibScalar
wtWebAlarm6x6DiagErrorCount = _WtWebAlarm6x6DiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 4, 1),
    _WtWebAlarm6x6DiagErrorCount_Type()
)
wtWebAlarm6x6DiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DiagErrorCount.setStatus("mandatory")
_WtWebAlarm6x6DiagBinaryError_Type = OctetString
_WtWebAlarm6x6DiagBinaryError_Object = MibScalar
wtWebAlarm6x6DiagBinaryError = _WtWebAlarm6x6DiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 4, 2),
    _WtWebAlarm6x6DiagBinaryError_Type()
)
wtWebAlarm6x6DiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DiagBinaryError.setStatus("mandatory")
_WtWebAlarm6x6DiagErrorIndex_Type = Integer32
_WtWebAlarm6x6DiagErrorIndex_Object = MibScalar
wtWebAlarm6x6DiagErrorIndex = _WtWebAlarm6x6DiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 4, 3),
    _WtWebAlarm6x6DiagErrorIndex_Type()
)
wtWebAlarm6x6DiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DiagErrorIndex.setStatus("mandatory")
_WtWebAlarm6x6DiagErrorMessage_Type = OctetString
_WtWebAlarm6x6DiagErrorMessage_Object = MibScalar
wtWebAlarm6x6DiagErrorMessage = _WtWebAlarm6x6DiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 4, 4),
    _WtWebAlarm6x6DiagErrorMessage_Type()
)
wtWebAlarm6x6DiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DiagErrorMessage.setStatus("mandatory")
_WtWebAlarm6x6DiagErrorClear_Type = Integer32
_WtWebAlarm6x6DiagErrorClear_Object = MibScalar
wtWebAlarm6x6DiagErrorClear = _WtWebAlarm6x6DiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 4, 5),
    _WtWebAlarm6x6DiagErrorClear_Type()
)
wtWebAlarm6x6DiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebAlarm6x6DiagErrorClear.setStatus("mandatory")
_WtWebCount6_ObjectIdentity = ObjectIdentity
wtWebCount6 = _WtWebCount6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22)
)
_WtWebCount6InOut_ObjectIdentity = ObjectIdentity
wtWebCount6InOut = _WtWebCount6InOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1)
)


class _WtWebCount6Inputs_Type(Integer32):
    """Custom type wtWebCount6Inputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebCount6Inputs_Type.__name__ = "Integer32"
_WtWebCount6Inputs_Object = MibScalar
wtWebCount6Inputs = _WtWebCount6Inputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 1),
    _WtWebCount6Inputs_Type()
)
wtWebCount6Inputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6Inputs.setStatus("mandatory")


class _WtWebCount6Outputs_Type(Integer32):
    """Custom type wtWebCount6Outputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebCount6Outputs_Type.__name__ = "Integer32"
_WtWebCount6Outputs_Object = MibScalar
wtWebCount6Outputs = _WtWebCount6Outputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 2),
    _WtWebCount6Outputs_Type()
)
wtWebCount6Outputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6Outputs.setStatus("mandatory")
_WtWebCount6InputTable_Object = MibTable
wtWebCount6InputTable = _WtWebCount6InputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebCount6InputTable.setStatus("mandatory")
_WtWebCount6InputEntry_Object = MibTableRow
wtWebCount6InputEntry = _WtWebCount6InputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 3, 1)
)
wtWebCount6InputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebCount6InputNo"),
)
if mibBuilder.loadTexts:
    wtWebCount6InputEntry.setStatus("mandatory")


class _WtWebCount6InputNo_Type(Integer32):
    """Custom type wtWebCount6InputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebCount6InputNo_Type.__name__ = "Integer32"
_WtWebCount6InputNo_Object = MibTableColumn
wtWebCount6InputNo = _WtWebCount6InputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 3, 1, 1),
    _WtWebCount6InputNo_Type()
)
wtWebCount6InputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6InputNo.setStatus("mandatory")


class _WtWebCount6InputCounter_Type(Integer32):
    """Custom type wtWebCount6InputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebCount6InputCounter_Type.__name__ = "Integer32"
_WtWebCount6InputCounter_Object = MibTableColumn
wtWebCount6InputCounter = _WtWebCount6InputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 3, 1, 2),
    _WtWebCount6InputCounter_Type()
)
wtWebCount6InputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6InputCounter.setStatus("mandatory")
_WtWebCount6InputCounterClear_Type = Integer32
_WtWebCount6InputCounterClear_Object = MibTableColumn
wtWebCount6InputCounterClear = _WtWebCount6InputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 3, 1, 3),
    _WtWebCount6InputCounterClear_Type()
)
wtWebCount6InputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6InputCounterClear.setStatus("mandatory")


class _WtWebCount6InputState_Type(Integer32):
    """Custom type wtWebCount6InputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6InputState-OFF", 0),
          ("wtWebCount6InputState-ON", 1))
    )


_WtWebCount6InputState_Type.__name__ = "Integer32"
_WtWebCount6InputState_Object = MibTableColumn
wtWebCount6InputState = _WtWebCount6InputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 3, 1, 4),
    _WtWebCount6InputState_Type()
)
wtWebCount6InputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6InputState.setStatus("mandatory")
_WtWebCount6InputValue_Type = Integer32
_WtWebCount6InputValue_Object = MibScalar
wtWebCount6InputValue = _WtWebCount6InputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 4),
    _WtWebCount6InputValue_Type()
)
wtWebCount6InputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6InputValue.setStatus("mandatory")
_WtWebCount6ReportOutputTable_Object = MibTable
wtWebCount6ReportOutputTable = _WtWebCount6ReportOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 8)
)
if mibBuilder.loadTexts:
    wtWebCount6ReportOutputTable.setStatus("mandatory")
_WtWebCount6ReportOutputEntry_Object = MibTableRow
wtWebCount6ReportOutputEntry = _WtWebCount6ReportOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 8, 1)
)
wtWebCount6ReportOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebCount6ReportNo"),
)
if mibBuilder.loadTexts:
    wtWebCount6ReportOutputEntry.setStatus("mandatory")


class _WtWebCount6ReportOutputState_Type(Integer32):
    """Custom type wtWebCount6ReportOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6ReportOutputState-OFF", 0),
          ("wtWebCount6ReportOutputState-ON", 1))
    )


_WtWebCount6ReportOutputState_Type.__name__ = "Integer32"
_WtWebCount6ReportOutputState_Object = MibTableColumn
wtWebCount6ReportOutputState = _WtWebCount6ReportOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 8, 1, 1),
    _WtWebCount6ReportOutputState_Type()
)
wtWebCount6ReportOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportOutputState.setStatus("mandatory")


class _WtWebCount6ReportTriggerState_Type(Integer32):
    """Custom type wtWebCount6ReportTriggerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6ReportTriggerState-OFF", 0),
          ("wtWebCount6ReportTriggerState-ON", 1))
    )


_WtWebCount6ReportTriggerState_Type.__name__ = "Integer32"
_WtWebCount6ReportTriggerState_Object = MibTableColumn
wtWebCount6ReportTriggerState = _WtWebCount6ReportTriggerState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 1, 8, 1, 2),
    _WtWebCount6ReportTriggerState_Type()
)
wtWebCount6ReportTriggerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6ReportTriggerState.setStatus("mandatory")
_WtWebCount6SessCntrl_ObjectIdentity = ObjectIdentity
wtWebCount6SessCntrl = _WtWebCount6SessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 2)
)
_WtWebCount6SessCntrlPassword_Type = OctetString
_WtWebCount6SessCntrlPassword_Object = MibScalar
wtWebCount6SessCntrlPassword = _WtWebCount6SessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 2, 1),
    _WtWebCount6SessCntrlPassword_Type()
)
wtWebCount6SessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SessCntrlPassword.setStatus("mandatory")


class _WtWebCount6SessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebCount6SessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6SessCntrl-NoSession", 0),
          ("wtWebCount6SessCntrl-Session", 1))
    )


_WtWebCount6SessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebCount6SessCntrlConfigMode_Object = MibScalar
wtWebCount6SessCntrlConfigMode = _WtWebCount6SessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 2, 2),
    _WtWebCount6SessCntrlConfigMode_Type()
)
wtWebCount6SessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6SessCntrlConfigMode.setStatus("mandatory")
_WtWebCount6SessCntrlLogout_Type = Integer32
_WtWebCount6SessCntrlLogout_Object = MibScalar
wtWebCount6SessCntrlLogout = _WtWebCount6SessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 2, 3),
    _WtWebCount6SessCntrlLogout_Type()
)
wtWebCount6SessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SessCntrlLogout.setStatus("mandatory")
_WtWebCount6SessCntrlAdminPassword_Type = OctetString
_WtWebCount6SessCntrlAdminPassword_Object = MibScalar
wtWebCount6SessCntrlAdminPassword = _WtWebCount6SessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 2, 4),
    _WtWebCount6SessCntrlAdminPassword_Type()
)
wtWebCount6SessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SessCntrlAdminPassword.setStatus("mandatory")
_WtWebCount6SessCntrlConfigPassword_Type = OctetString
_WtWebCount6SessCntrlConfigPassword_Object = MibScalar
wtWebCount6SessCntrlConfigPassword = _WtWebCount6SessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 2, 5),
    _WtWebCount6SessCntrlConfigPassword_Type()
)
wtWebCount6SessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SessCntrlConfigPassword.setStatus("mandatory")
_WtWebCount6Config_ObjectIdentity = ObjectIdentity
wtWebCount6Config = _WtWebCount6Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3)
)
_WtWebCount6Device_ObjectIdentity = ObjectIdentity
wtWebCount6Device = _WtWebCount6Device_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1)
)
_WtWebCount6Text_ObjectIdentity = ObjectIdentity
wtWebCount6Text = _WtWebCount6Text_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 1)
)
_WtWebCount6DeviceName_Type = OctetString
_WtWebCount6DeviceName_Object = MibScalar
wtWebCount6DeviceName = _WtWebCount6DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 1, 1),
    _WtWebCount6DeviceName_Type()
)
wtWebCount6DeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DeviceName.setStatus("mandatory")
_WtWebCount6DeviceText_Type = OctetString
_WtWebCount6DeviceText_Object = MibScalar
wtWebCount6DeviceText = _WtWebCount6DeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 1, 2),
    _WtWebCount6DeviceText_Type()
)
wtWebCount6DeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DeviceText.setStatus("mandatory")
_WtWebCount6DeviceLocation_Type = OctetString
_WtWebCount6DeviceLocation_Object = MibScalar
wtWebCount6DeviceLocation = _WtWebCount6DeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 1, 3),
    _WtWebCount6DeviceLocation_Type()
)
wtWebCount6DeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DeviceLocation.setStatus("mandatory")
_WtWebCount6DeviceContact_Type = OctetString
_WtWebCount6DeviceContact_Object = MibScalar
wtWebCount6DeviceContact = _WtWebCount6DeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 1, 4),
    _WtWebCount6DeviceContact_Type()
)
wtWebCount6DeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DeviceContact.setStatus("mandatory")
_WtWebCount6TimeDate_ObjectIdentity = ObjectIdentity
wtWebCount6TimeDate = _WtWebCount6TimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2)
)
_WtWebCount6TimeZone_ObjectIdentity = ObjectIdentity
wtWebCount6TimeZone = _WtWebCount6TimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1)
)
_WtWebCount6TzOffsetHrs_Type = Integer32
_WtWebCount6TzOffsetHrs_Object = MibScalar
wtWebCount6TzOffsetHrs = _WtWebCount6TzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 1),
    _WtWebCount6TzOffsetHrs_Type()
)
wtWebCount6TzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TzOffsetHrs.setStatus("mandatory")
_WtWebCount6TzOffsetMin_Type = Integer32
_WtWebCount6TzOffsetMin_Object = MibScalar
wtWebCount6TzOffsetMin = _WtWebCount6TzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 2),
    _WtWebCount6TzOffsetMin_Type()
)
wtWebCount6TzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TzOffsetMin.setStatus("mandatory")


class _WtWebCount6TzEnable_Type(OctetString):
    """Custom type wtWebCount6TzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6TzEnable_Type.__name__ = "OctetString"
_WtWebCount6TzEnable_Object = MibScalar
wtWebCount6TzEnable = _WtWebCount6TzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 3),
    _WtWebCount6TzEnable_Type()
)
wtWebCount6TzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TzEnable.setStatus("mandatory")
_WtWebCount6StTzOffsetHrs_Type = Integer32
_WtWebCount6StTzOffsetHrs_Object = MibScalar
wtWebCount6StTzOffsetHrs = _WtWebCount6StTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 4),
    _WtWebCount6StTzOffsetHrs_Type()
)
wtWebCount6StTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzOffsetHrs.setStatus("mandatory")
_WtWebCount6StTzOffsetMin_Type = Integer32
_WtWebCount6StTzOffsetMin_Object = MibScalar
wtWebCount6StTzOffsetMin = _WtWebCount6StTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 5),
    _WtWebCount6StTzOffsetMin_Type()
)
wtWebCount6StTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzOffsetMin.setStatus("mandatory")


class _WtWebCount6StTzEnable_Type(OctetString):
    """Custom type wtWebCount6StTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6StTzEnable_Type.__name__ = "OctetString"
_WtWebCount6StTzEnable_Object = MibScalar
wtWebCount6StTzEnable = _WtWebCount6StTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 6),
    _WtWebCount6StTzEnable_Type()
)
wtWebCount6StTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzEnable.setStatus("mandatory")


class _WtWebCount6StTzStartMonth_Type(Integer32):
    """Custom type wtWebCount6StTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6StartMonth-April", 4),
          ("wtWebCount6StartMonth-August", 8),
          ("wtWebCount6StartMonth-December", 12),
          ("wtWebCount6StartMonth-February", 2),
          ("wtWebCount6StartMonth-January", 1),
          ("wtWebCount6StartMonth-July", 7),
          ("wtWebCount6StartMonth-June", 6),
          ("wtWebCount6StartMonth-March", 3),
          ("wtWebCount6StartMonth-May", 5),
          ("wtWebCount6StartMonth-November", 11),
          ("wtWebCount6StartMonth-October", 10),
          ("wtWebCount6StartMonth-September", 9))
    )


_WtWebCount6StTzStartMonth_Type.__name__ = "Integer32"
_WtWebCount6StTzStartMonth_Object = MibScalar
wtWebCount6StTzStartMonth = _WtWebCount6StTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 7),
    _WtWebCount6StTzStartMonth_Type()
)
wtWebCount6StTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStartMonth.setStatus("mandatory")


class _WtWebCount6StTzStartMode_Type(Integer32):
    """Custom type wtWebCount6StTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6StartMode-first", 1),
          ("wtWebCount6StartMode-fourth", 4),
          ("wtWebCount6StartMode-last", 5),
          ("wtWebCount6StartMode-second", 2),
          ("wtWebCount6StartMode-third", 3))
    )


_WtWebCount6StTzStartMode_Type.__name__ = "Integer32"
_WtWebCount6StTzStartMode_Object = MibScalar
wtWebCount6StTzStartMode = _WtWebCount6StTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 8),
    _WtWebCount6StTzStartMode_Type()
)
wtWebCount6StTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStartMode.setStatus("mandatory")


class _WtWebCount6StTzStartWday_Type(Integer32):
    """Custom type wtWebCount6StTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6StartWday-Friday", 6),
          ("wtWebCount6StartWday-Monday", 2),
          ("wtWebCount6StartWday-Saturday", 7),
          ("wtWebCount6StartWday-Sunday", 1),
          ("wtWebCount6StartWday-Thursday", 4),
          ("wtWebCount6StartWday-Tuesday", 3),
          ("wtWebCount6StartWday-Wednesday", 5))
    )


_WtWebCount6StTzStartWday_Type.__name__ = "Integer32"
_WtWebCount6StTzStartWday_Object = MibScalar
wtWebCount6StTzStartWday = _WtWebCount6StTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 9),
    _WtWebCount6StTzStartWday_Type()
)
wtWebCount6StTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStartWday.setStatus("mandatory")
_WtWebCount6StTzStartHrs_Type = Integer32
_WtWebCount6StTzStartHrs_Object = MibScalar
wtWebCount6StTzStartHrs = _WtWebCount6StTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 10),
    _WtWebCount6StTzStartHrs_Type()
)
wtWebCount6StTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStartHrs.setStatus("mandatory")
_WtWebCount6StTzStartMin_Type = Integer32
_WtWebCount6StTzStartMin_Object = MibScalar
wtWebCount6StTzStartMin = _WtWebCount6StTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 11),
    _WtWebCount6StTzStartMin_Type()
)
wtWebCount6StTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStartMin.setStatus("mandatory")


class _WtWebCount6StTzStopMonth_Type(Integer32):
    """Custom type wtWebCount6StTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6StopMonth-April", 4),
          ("wtWebCount6StopMonth-August", 8),
          ("wtWebCount6StopMonth-December", 12),
          ("wtWebCount6StopMonth-February", 2),
          ("wtWebCount6StopMonth-January", 1),
          ("wtWebCount6StopMonth-July", 7),
          ("wtWebCount6StopMonth-June", 6),
          ("wtWebCount6StopMonth-March", 3),
          ("wtWebCount6StopMonth-May", 5),
          ("wtWebCount6StopMonth-November", 11),
          ("wtWebCount6StopMonth-October", 10),
          ("wtWebCount6StopMonth-September", 9))
    )


_WtWebCount6StTzStopMonth_Type.__name__ = "Integer32"
_WtWebCount6StTzStopMonth_Object = MibScalar
wtWebCount6StTzStopMonth = _WtWebCount6StTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 12),
    _WtWebCount6StTzStopMonth_Type()
)
wtWebCount6StTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStopMonth.setStatus("mandatory")


class _WtWebCount6StTzStopMode_Type(Integer32):
    """Custom type wtWebCount6StTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6StopMode-first", 1),
          ("wtWebCount6StopMode-fourth", 4),
          ("wtWebCount6StopMode-last", 5),
          ("wtWebCount6StopMode-second", 2),
          ("wtWebCount6StopMode-third", 3))
    )


_WtWebCount6StTzStopMode_Type.__name__ = "Integer32"
_WtWebCount6StTzStopMode_Object = MibScalar
wtWebCount6StTzStopMode = _WtWebCount6StTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 13),
    _WtWebCount6StTzStopMode_Type()
)
wtWebCount6StTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStopMode.setStatus("mandatory")


class _WtWebCount6StTzStopWday_Type(Integer32):
    """Custom type wtWebCount6StTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6StopWday-Friday", 6),
          ("wtWebCount6StopWday-Monday", 2),
          ("wtWebCount6StopWday-Saturday", 7),
          ("wtWebCount6StopWday-Sunday", 1),
          ("wtWebCount6StopWday-Thursday", 4),
          ("wtWebCount6StopWday-Tuesday", 3),
          ("wtWebCount6StopWday-Wednesday", 5))
    )


_WtWebCount6StTzStopWday_Type.__name__ = "Integer32"
_WtWebCount6StTzStopWday_Object = MibScalar
wtWebCount6StTzStopWday = _WtWebCount6StTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 14),
    _WtWebCount6StTzStopWday_Type()
)
wtWebCount6StTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStopWday.setStatus("mandatory")
_WtWebCount6StTzStopHrs_Type = Integer32
_WtWebCount6StTzStopHrs_Object = MibScalar
wtWebCount6StTzStopHrs = _WtWebCount6StTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 15),
    _WtWebCount6StTzStopHrs_Type()
)
wtWebCount6StTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStopHrs.setStatus("mandatory")
_WtWebCount6StTzStopMin_Type = Integer32
_WtWebCount6StTzStopMin_Object = MibScalar
wtWebCount6StTzStopMin = _WtWebCount6StTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 1, 16),
    _WtWebCount6StTzStopMin_Type()
)
wtWebCount6StTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6StTzStopMin.setStatus("mandatory")
_WtWebCount6TimeServer_ObjectIdentity = ObjectIdentity
wtWebCount6TimeServer = _WtWebCount6TimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 2)
)
_WtWebCount6TimeServer1_Type = OctetString
_WtWebCount6TimeServer1_Object = MibScalar
wtWebCount6TimeServer1 = _WtWebCount6TimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 2, 1),
    _WtWebCount6TimeServer1_Type()
)
wtWebCount6TimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TimeServer1.setStatus("mandatory")
_WtWebCount6TimeServer2_Type = OctetString
_WtWebCount6TimeServer2_Object = MibScalar
wtWebCount6TimeServer2 = _WtWebCount6TimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 2, 2),
    _WtWebCount6TimeServer2_Type()
)
wtWebCount6TimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TimeServer2.setStatus("mandatory")


class _WtWebCount6TsEnable_Type(OctetString):
    """Custom type wtWebCount6TsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6TsEnable_Type.__name__ = "OctetString"
_WtWebCount6TsEnable_Object = MibScalar
wtWebCount6TsEnable = _WtWebCount6TsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 2, 3),
    _WtWebCount6TsEnable_Type()
)
wtWebCount6TsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TsEnable.setStatus("mandatory")
_WtWebCount6TsSyncTime_Type = Integer32
_WtWebCount6TsSyncTime_Object = MibScalar
wtWebCount6TsSyncTime = _WtWebCount6TsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 2, 4),
    _WtWebCount6TsSyncTime_Type()
)
wtWebCount6TsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6TsSyncTime.setStatus("mandatory")
_WtWebCount6DeviceClock_ObjectIdentity = ObjectIdentity
wtWebCount6DeviceClock = _WtWebCount6DeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 3)
)


class _WtWebCount6ClockHrs_Type(Integer32):
    """Custom type wtWebCount6ClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebCount6ClockHrs_Type.__name__ = "Integer32"
_WtWebCount6ClockHrs_Object = MibScalar
wtWebCount6ClockHrs = _WtWebCount6ClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 3, 1),
    _WtWebCount6ClockHrs_Type()
)
wtWebCount6ClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ClockHrs.setStatus("mandatory")


class _WtWebCount6ClockMin_Type(Integer32):
    """Custom type wtWebCount6ClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebCount6ClockMin_Type.__name__ = "Integer32"
_WtWebCount6ClockMin_Object = MibScalar
wtWebCount6ClockMin = _WtWebCount6ClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 3, 2),
    _WtWebCount6ClockMin_Type()
)
wtWebCount6ClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ClockMin.setStatus("mandatory")


class _WtWebCount6ClockDay_Type(Integer32):
    """Custom type wtWebCount6ClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebCount6ClockDay_Type.__name__ = "Integer32"
_WtWebCount6ClockDay_Object = MibScalar
wtWebCount6ClockDay = _WtWebCount6ClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 3, 3),
    _WtWebCount6ClockDay_Type()
)
wtWebCount6ClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ClockDay.setStatus("mandatory")


class _WtWebCount6ClockMonth_Type(Integer32):
    """Custom type wtWebCount6ClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebCount6ClockMonth-April", 4),
          ("wtWebCount6ClockMonth-August", 8),
          ("wtWebCount6ClockMonth-December", 12),
          ("wtWebCount6ClockMonth-February", 2),
          ("wtWebCount6ClockMonth-January", 1),
          ("wtWebCount6ClockMonth-July", 7),
          ("wtWebCount6ClockMonth-June", 6),
          ("wtWebCount6ClockMonth-March", 3),
          ("wtWebCount6ClockMonth-May", 5),
          ("wtWebCount6ClockMonth-November", 11),
          ("wtWebCount6ClockMonth-October", 10),
          ("wtWebCount6ClockMonth-September", 9))
    )


_WtWebCount6ClockMonth_Type.__name__ = "Integer32"
_WtWebCount6ClockMonth_Object = MibScalar
wtWebCount6ClockMonth = _WtWebCount6ClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 3, 4),
    _WtWebCount6ClockMonth_Type()
)
wtWebCount6ClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ClockMonth.setStatus("mandatory")


class _WtWebCount6ClockYear_Type(Integer32):
    """Custom type wtWebCount6ClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebCount6ClockYear_Type.__name__ = "Integer32"
_WtWebCount6ClockYear_Object = MibScalar
wtWebCount6ClockYear = _WtWebCount6ClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 2, 3, 5),
    _WtWebCount6ClockYear_Type()
)
wtWebCount6ClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ClockYear.setStatus("mandatory")
_WtWebCount6Basic_ObjectIdentity = ObjectIdentity
wtWebCount6Basic = _WtWebCount6Basic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3)
)
_WtWebCount6Network_ObjectIdentity = ObjectIdentity
wtWebCount6Network = _WtWebCount6Network_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1)
)
_WtWebCount6IpAddress_Type = IpAddress
_WtWebCount6IpAddress_Object = MibScalar
wtWebCount6IpAddress = _WtWebCount6IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1, 1),
    _WtWebCount6IpAddress_Type()
)
wtWebCount6IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6IpAddress.setStatus("mandatory")
_WtWebCount6SubnetMask_Type = IpAddress
_WtWebCount6SubnetMask_Object = MibScalar
wtWebCount6SubnetMask = _WtWebCount6SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1, 2),
    _WtWebCount6SubnetMask_Type()
)
wtWebCount6SubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SubnetMask.setStatus("mandatory")
_WtWebCount6Gateway_Type = IpAddress
_WtWebCount6Gateway_Object = MibScalar
wtWebCount6Gateway = _WtWebCount6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1, 3),
    _WtWebCount6Gateway_Type()
)
wtWebCount6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6Gateway.setStatus("mandatory")
_WtWebCount6DnsServer1_Type = OctetString
_WtWebCount6DnsServer1_Object = MibScalar
wtWebCount6DnsServer1 = _WtWebCount6DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1, 4),
    _WtWebCount6DnsServer1_Type()
)
wtWebCount6DnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DnsServer1.setStatus("mandatory")
_WtWebCount6DnsServer2_Type = OctetString
_WtWebCount6DnsServer2_Object = MibScalar
wtWebCount6DnsServer2 = _WtWebCount6DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1, 5),
    _WtWebCount6DnsServer2_Type()
)
wtWebCount6DnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DnsServer2.setStatus("mandatory")
_WtWebCount6AddConfig_Type = OctetString
_WtWebCount6AddConfig_Object = MibScalar
wtWebCount6AddConfig = _WtWebCount6AddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 1, 6),
    _WtWebCount6AddConfig_Type()
)
wtWebCount6AddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6AddConfig.setStatus("mandatory")
_WtWebCount6HTTP_ObjectIdentity = ObjectIdentity
wtWebCount6HTTP = _WtWebCount6HTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 2)
)


class _WtWebCount6HttpPort_Type(Integer32):
    """Custom type wtWebCount6HttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebCount6HttpPort_Type.__name__ = "Integer32"
_WtWebCount6HttpPort_Object = MibScalar
wtWebCount6HttpPort = _WtWebCount6HttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 2, 4),
    _WtWebCount6HttpPort_Type()
)
wtWebCount6HttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6HttpPort.setStatus("mandatory")
_WtWebCount6Mail_ObjectIdentity = ObjectIdentity
wtWebCount6Mail = _WtWebCount6Mail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3)
)
_WtWebCount6MailAdName_Type = OctetString
_WtWebCount6MailAdName_Object = MibScalar
wtWebCount6MailAdName = _WtWebCount6MailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 1),
    _WtWebCount6MailAdName_Type()
)
wtWebCount6MailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailAdName.setStatus("mandatory")
_WtWebCount6MailReply_Type = OctetString
_WtWebCount6MailReply_Object = MibScalar
wtWebCount6MailReply = _WtWebCount6MailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 2),
    _WtWebCount6MailReply_Type()
)
wtWebCount6MailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailReply.setStatus("mandatory")
_WtWebCount6MailServer_Type = OctetString
_WtWebCount6MailServer_Object = MibScalar
wtWebCount6MailServer = _WtWebCount6MailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 3),
    _WtWebCount6MailServer_Type()
)
wtWebCount6MailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailServer.setStatus("mandatory")
_WtWebCount6MailEnable_Type = OctetString
_WtWebCount6MailEnable_Object = MibScalar
wtWebCount6MailEnable = _WtWebCount6MailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 4),
    _WtWebCount6MailEnable_Type()
)
wtWebCount6MailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailEnable.setStatus("mandatory")


class _WtWebCount6MailAuthentication_Type(OctetString):
    """Custom type wtWebCount6MailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6MailAuthentication_Type.__name__ = "OctetString"
_WtWebCount6MailAuthentication_Object = MibScalar
wtWebCount6MailAuthentication = _WtWebCount6MailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 5),
    _WtWebCount6MailAuthentication_Type()
)
wtWebCount6MailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailAuthentication.setStatus("mandatory")
_WtWebCount6MailAuthUser_Type = OctetString
_WtWebCount6MailAuthUser_Object = MibScalar
wtWebCount6MailAuthUser = _WtWebCount6MailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 6),
    _WtWebCount6MailAuthUser_Type()
)
wtWebCount6MailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailAuthUser.setStatus("mandatory")
_WtWebCount6MailAuthPassword_Type = OctetString
_WtWebCount6MailAuthPassword_Object = MibScalar
wtWebCount6MailAuthPassword = _WtWebCount6MailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 7),
    _WtWebCount6MailAuthPassword_Type()
)
wtWebCount6MailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailAuthPassword.setStatus("mandatory")
_WtWebCount6MailPop3Server_Type = OctetString
_WtWebCount6MailPop3Server_Object = MibScalar
wtWebCount6MailPop3Server = _WtWebCount6MailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 3, 8),
    _WtWebCount6MailPop3Server_Type()
)
wtWebCount6MailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MailPop3Server.setStatus("mandatory")
_WtWebCount6SNMP_ObjectIdentity = ObjectIdentity
wtWebCount6SNMP = _WtWebCount6SNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 4)
)
_WtWebCount6SnmpEnable_Type = OctetString
_WtWebCount6SnmpEnable_Object = MibScalar
wtWebCount6SnmpEnable = _WtWebCount6SnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 4, 1),
    _WtWebCount6SnmpEnable_Type()
)
wtWebCount6SnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SnmpEnable.setStatus("mandatory")
_WtWebCount6SnmpCommunityStringRead_Type = OctetString
_WtWebCount6SnmpCommunityStringRead_Object = MibScalar
wtWebCount6SnmpCommunityStringRead = _WtWebCount6SnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 4, 2),
    _WtWebCount6SnmpCommunityStringRead_Type()
)
wtWebCount6SnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SnmpCommunityStringRead.setStatus("mandatory")
_WtWebCount6SnmpCommunityStringReadWrite_Type = OctetString
_WtWebCount6SnmpCommunityStringReadWrite_Object = MibScalar
wtWebCount6SnmpCommunityStringReadWrite = _WtWebCount6SnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 4, 3),
    _WtWebCount6SnmpCommunityStringReadWrite_Type()
)
wtWebCount6SnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebCount6SnmpSystemTrapManagerIP_Type = OctetString
_WtWebCount6SnmpSystemTrapManagerIP_Object = MibScalar
wtWebCount6SnmpSystemTrapManagerIP = _WtWebCount6SnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 4, 4),
    _WtWebCount6SnmpSystemTrapManagerIP_Type()
)
wtWebCount6SnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebCount6SnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebCount6SnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6SnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebCount6SnmpSystemTrapEnable_Object = MibScalar
wtWebCount6SnmpSystemTrapEnable = _WtWebCount6SnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 4, 5),
    _WtWebCount6SnmpSystemTrapEnable_Type()
)
wtWebCount6SnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SnmpSystemTrapEnable.setStatus("mandatory")
_WtWebCount6UDP_ObjectIdentity = ObjectIdentity
wtWebCount6UDP = _WtWebCount6UDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 5)
)
_WtWebCount6UdpAdminPort_Type = Integer32
_WtWebCount6UdpAdminPort_Object = MibScalar
wtWebCount6UdpAdminPort = _WtWebCount6UdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 5, 1),
    _WtWebCount6UdpAdminPort_Type()
)
wtWebCount6UdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6UdpAdminPort.setStatus("mandatory")
_WtWebCount6UdpEnable_Type = OctetString
_WtWebCount6UdpEnable_Object = MibScalar
wtWebCount6UdpEnable = _WtWebCount6UdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 5, 2),
    _WtWebCount6UdpEnable_Type()
)
wtWebCount6UdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6UdpEnable.setStatus("mandatory")
_WtWebCount6UdpRemotePort_Type = Integer32
_WtWebCount6UdpRemotePort_Object = MibScalar
wtWebCount6UdpRemotePort = _WtWebCount6UdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 5, 3),
    _WtWebCount6UdpRemotePort_Type()
)
wtWebCount6UdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6UdpRemotePort.setStatus("mandatory")
_WtWebCount6Syslog_ObjectIdentity = ObjectIdentity
wtWebCount6Syslog = _WtWebCount6Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 7)
)
_WtWebCount6SyslogServerIP_Type = OctetString
_WtWebCount6SyslogServerIP_Object = MibScalar
wtWebCount6SyslogServerIP = _WtWebCount6SyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 7, 1),
    _WtWebCount6SyslogServerIP_Type()
)
wtWebCount6SyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SyslogServerIP.setStatus("mandatory")
_WtWebCount6SyslogServerPort_Type = Integer32
_WtWebCount6SyslogServerPort_Object = MibScalar
wtWebCount6SyslogServerPort = _WtWebCount6SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 7, 2),
    _WtWebCount6SyslogServerPort_Type()
)
wtWebCount6SyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SyslogServerPort.setStatus("mandatory")


class _WtWebCount6SyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebCount6SyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6SyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebCount6SyslogSystemMessagesEnable_Object = MibScalar
wtWebCount6SyslogSystemMessagesEnable = _WtWebCount6SyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 7, 3),
    _WtWebCount6SyslogSystemMessagesEnable_Type()
)
wtWebCount6SyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebCount6SyslogEnable_Type = OctetString
_WtWebCount6SyslogEnable_Object = MibScalar
wtWebCount6SyslogEnable = _WtWebCount6SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 7, 4),
    _WtWebCount6SyslogEnable_Type()
)
wtWebCount6SyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6SyslogEnable.setStatus("mandatory")
_WtWebCount6FTP_ObjectIdentity = ObjectIdentity
wtWebCount6FTP = _WtWebCount6FTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8)
)
_WtWebCount6FTPServerIP_Type = OctetString
_WtWebCount6FTPServerIP_Object = MibScalar
wtWebCount6FTPServerIP = _WtWebCount6FTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 1),
    _WtWebCount6FTPServerIP_Type()
)
wtWebCount6FTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPServerIP.setStatus("mandatory")
_WtWebCount6FTPServerControlPort_Type = Integer32
_WtWebCount6FTPServerControlPort_Object = MibScalar
wtWebCount6FTPServerControlPort = _WtWebCount6FTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 2),
    _WtWebCount6FTPServerControlPort_Type()
)
wtWebCount6FTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPServerControlPort.setStatus("mandatory")
_WtWebCount6FTPUserName_Type = OctetString
_WtWebCount6FTPUserName_Object = MibScalar
wtWebCount6FTPUserName = _WtWebCount6FTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 3),
    _WtWebCount6FTPUserName_Type()
)
wtWebCount6FTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPUserName.setStatus("mandatory")
_WtWebCount6FTPPassword_Type = OctetString
_WtWebCount6FTPPassword_Object = MibScalar
wtWebCount6FTPPassword = _WtWebCount6FTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 4),
    _WtWebCount6FTPPassword_Type()
)
wtWebCount6FTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPPassword.setStatus("mandatory")
_WtWebCount6FTPAccount_Type = OctetString
_WtWebCount6FTPAccount_Object = MibScalar
wtWebCount6FTPAccount = _WtWebCount6FTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 5),
    _WtWebCount6FTPAccount_Type()
)
wtWebCount6FTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPAccount.setStatus("mandatory")
_WtWebCount6FTPOption_Type = OctetString
_WtWebCount6FTPOption_Object = MibScalar
wtWebCount6FTPOption = _WtWebCount6FTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 6),
    _WtWebCount6FTPOption_Type()
)
wtWebCount6FTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPOption.setStatus("mandatory")
_WtWebCount6FTPEnable_Type = OctetString
_WtWebCount6FTPEnable_Object = MibScalar
wtWebCount6FTPEnable = _WtWebCount6FTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 3, 8, 7),
    _WtWebCount6FTPEnable_Type()
)
wtWebCount6FTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6FTPEnable.setStatus("mandatory")
_WtWebCount6Report_ObjectIdentity = ObjectIdentity
wtWebCount6Report = _WtWebCount6Report_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5)
)


class _WtWebCount6ReportCount_Type(Integer32):
    """Custom type wtWebCount6ReportCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebCount6ReportCount_Type.__name__ = "Integer32"
_WtWebCount6ReportCount_Object = MibScalar
wtWebCount6ReportCount = _WtWebCount6ReportCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 1),
    _WtWebCount6ReportCount_Type()
)
wtWebCount6ReportCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6ReportCount.setStatus("mandatory")
_WtWebCount6ReportIfTable_Object = MibTable
wtWebCount6ReportIfTable = _WtWebCount6ReportIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebCount6ReportIfTable.setStatus("mandatory")
_WtWebCount6ReportIfEntry_Object = MibTableRow
wtWebCount6ReportIfEntry = _WtWebCount6ReportIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 2, 1)
)
wtWebCount6ReportIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebCount6ReportNo"),
)
if mibBuilder.loadTexts:
    wtWebCount6ReportIfEntry.setStatus("mandatory")


class _WtWebCount6ReportNo_Type(Integer32):
    """Custom type wtWebCount6ReportNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebCount6ReportNo_Type.__name__ = "Integer32"
_WtWebCount6ReportNo_Object = MibTableColumn
wtWebCount6ReportNo = _WtWebCount6ReportNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 2, 1, 1),
    _WtWebCount6ReportNo_Type()
)
wtWebCount6ReportNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6ReportNo.setStatus("mandatory")
_WtWebCount6ReportTable_Object = MibTable
wtWebCount6ReportTable = _WtWebCount6ReportTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebCount6ReportTable.setStatus("mandatory")
_WtWebCount6ReportEntry_Object = MibTableRow
wtWebCount6ReportEntry = _WtWebCount6ReportEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1)
)
wtWebCount6ReportEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebCount6ReportNo"),
)
if mibBuilder.loadTexts:
    wtWebCount6ReportEntry.setStatus("mandatory")


class _WtWebCount6ReportInputTrigger_Type(OctetString):
    """Custom type wtWebCount6ReportInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebCount6ReportInputTrigger_Type.__name__ = "OctetString"
_WtWebCount6ReportInputTrigger_Object = MibTableColumn
wtWebCount6ReportInputTrigger = _WtWebCount6ReportInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 1),
    _WtWebCount6ReportInputTrigger_Type()
)
wtWebCount6ReportInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportInputTrigger.setStatus("mandatory")
_WtWebCount6ReportSystemTrigger_Type = OctetString
_WtWebCount6ReportSystemTrigger_Object = MibTableColumn
wtWebCount6ReportSystemTrigger = _WtWebCount6ReportSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 3),
    _WtWebCount6ReportSystemTrigger_Type()
)
wtWebCount6ReportSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportSystemTrigger.setStatus("mandatory")
_WtWebCount6ReportMaxCounterValue_Type = OctetString
_WtWebCount6ReportMaxCounterValue_Object = MibTableColumn
wtWebCount6ReportMaxCounterValue = _WtWebCount6ReportMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 4),
    _WtWebCount6ReportMaxCounterValue_Type()
)
wtWebCount6ReportMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportMaxCounterValue.setStatus("mandatory")
_WtWebCount6ReportInterval_Type = OctetString
_WtWebCount6ReportInterval_Object = MibTableColumn
wtWebCount6ReportInterval = _WtWebCount6ReportInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 5),
    _WtWebCount6ReportInterval_Type()
)
wtWebCount6ReportInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportInterval.setStatus("mandatory")


class _WtWebCount6ReportEnable_Type(OctetString):
    """Custom type wtWebCount6ReportEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6ReportEnable_Type.__name__ = "OctetString"
_WtWebCount6ReportEnable_Object = MibTableColumn
wtWebCount6ReportEnable = _WtWebCount6ReportEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 6),
    _WtWebCount6ReportEnable_Type()
)
wtWebCount6ReportEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportEnable.setStatus("mandatory")
_WtWebCount6ReportMailAddr_Type = OctetString
_WtWebCount6ReportMailAddr_Object = MibTableColumn
wtWebCount6ReportMailAddr = _WtWebCount6ReportMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 7),
    _WtWebCount6ReportMailAddr_Type()
)
wtWebCount6ReportMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportMailAddr.setStatus("mandatory")
_WtWebCount6ReportMailSubject_Type = OctetString
_WtWebCount6ReportMailSubject_Object = MibTableColumn
wtWebCount6ReportMailSubject = _WtWebCount6ReportMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 8),
    _WtWebCount6ReportMailSubject_Type()
)
wtWebCount6ReportMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportMailSubject.setStatus("mandatory")
_WtWebCount6ReportMailText_Type = OctetString
_WtWebCount6ReportMailText_Object = MibTableColumn
wtWebCount6ReportMailText = _WtWebCount6ReportMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 9),
    _WtWebCount6ReportMailText_Type()
)
wtWebCount6ReportMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportMailText.setStatus("mandatory")
_WtWebCount6ReportSnmpManagerIP_Type = OctetString
_WtWebCount6ReportSnmpManagerIP_Object = MibTableColumn
wtWebCount6ReportSnmpManagerIP = _WtWebCount6ReportSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 10),
    _WtWebCount6ReportSnmpManagerIP_Type()
)
wtWebCount6ReportSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportSnmpManagerIP.setStatus("mandatory")
_WtWebCount6ReportSnmpTrapText_Type = OctetString
_WtWebCount6ReportSnmpTrapText_Object = MibTableColumn
wtWebCount6ReportSnmpTrapText = _WtWebCount6ReportSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 11),
    _WtWebCount6ReportSnmpTrapText_Type()
)
wtWebCount6ReportSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportSnmpTrapText.setStatus("mandatory")
_WtWebCount6ReportUdpIpAddr_Type = OctetString
_WtWebCount6ReportUdpIpAddr_Object = MibTableColumn
wtWebCount6ReportUdpIpAddr = _WtWebCount6ReportUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 12),
    _WtWebCount6ReportUdpIpAddr_Type()
)
wtWebCount6ReportUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportUdpIpAddr.setStatus("mandatory")


class _WtWebCount6ReportUdpPort_Type(Integer32):
    """Custom type wtWebCount6ReportUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebCount6ReportUdpPort_Type.__name__ = "Integer32"
_WtWebCount6ReportUdpPort_Object = MibTableColumn
wtWebCount6ReportUdpPort = _WtWebCount6ReportUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 13),
    _WtWebCount6ReportUdpPort_Type()
)
wtWebCount6ReportUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportUdpPort.setStatus("mandatory")
_WtWebCount6ReportUdpText_Type = OctetString
_WtWebCount6ReportUdpText_Object = MibTableColumn
wtWebCount6ReportUdpText = _WtWebCount6ReportUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 14),
    _WtWebCount6ReportUdpText_Type()
)
wtWebCount6ReportUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportUdpText.setStatus("mandatory")
_WtWebCount6ReportTcpIpAddr_Type = OctetString
_WtWebCount6ReportTcpIpAddr_Object = MibTableColumn
wtWebCount6ReportTcpIpAddr = _WtWebCount6ReportTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 15),
    _WtWebCount6ReportTcpIpAddr_Type()
)
wtWebCount6ReportTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportTcpIpAddr.setStatus("mandatory")


class _WtWebCount6ReportTcpPort_Type(Integer32):
    """Custom type wtWebCount6ReportTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebCount6ReportTcpPort_Type.__name__ = "Integer32"
_WtWebCount6ReportTcpPort_Object = MibTableColumn
wtWebCount6ReportTcpPort = _WtWebCount6ReportTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 16),
    _WtWebCount6ReportTcpPort_Type()
)
wtWebCount6ReportTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportTcpPort.setStatus("mandatory")
_WtWebCount6ReportTcpText_Type = OctetString
_WtWebCount6ReportTcpText_Object = MibTableColumn
wtWebCount6ReportTcpText = _WtWebCount6ReportTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 17),
    _WtWebCount6ReportTcpText_Type()
)
wtWebCount6ReportTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportTcpText.setStatus("mandatory")
_WtWebCount6ReportSyslogIpAddr_Type = OctetString
_WtWebCount6ReportSyslogIpAddr_Object = MibTableColumn
wtWebCount6ReportSyslogIpAddr = _WtWebCount6ReportSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 18),
    _WtWebCount6ReportSyslogIpAddr_Type()
)
wtWebCount6ReportSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportSyslogIpAddr.setStatus("mandatory")


class _WtWebCount6ReportSyslogPort_Type(Integer32):
    """Custom type wtWebCount6ReportSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebCount6ReportSyslogPort_Type.__name__ = "Integer32"
_WtWebCount6ReportSyslogPort_Object = MibTableColumn
wtWebCount6ReportSyslogPort = _WtWebCount6ReportSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 19),
    _WtWebCount6ReportSyslogPort_Type()
)
wtWebCount6ReportSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportSyslogPort.setStatus("mandatory")
_WtWebCount6ReportSyslogText_Type = OctetString
_WtWebCount6ReportSyslogText_Object = MibTableColumn
wtWebCount6ReportSyslogText = _WtWebCount6ReportSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 20),
    _WtWebCount6ReportSyslogText_Type()
)
wtWebCount6ReportSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportSyslogText.setStatus("mandatory")
_WtWebCount6ReportFtpDataPort_Type = OctetString
_WtWebCount6ReportFtpDataPort_Object = MibTableColumn
wtWebCount6ReportFtpDataPort = _WtWebCount6ReportFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 21),
    _WtWebCount6ReportFtpDataPort_Type()
)
wtWebCount6ReportFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportFtpDataPort.setStatus("mandatory")
_WtWebCount6ReportFtpFileName_Type = OctetString
_WtWebCount6ReportFtpFileName_Object = MibTableColumn
wtWebCount6ReportFtpFileName = _WtWebCount6ReportFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 22),
    _WtWebCount6ReportFtpFileName_Type()
)
wtWebCount6ReportFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportFtpFileName.setStatus("mandatory")
_WtWebCount6ReportFtpText_Type = OctetString
_WtWebCount6ReportFtpText_Object = MibTableColumn
wtWebCount6ReportFtpText = _WtWebCount6ReportFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 23),
    _WtWebCount6ReportFtpText_Type()
)
wtWebCount6ReportFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportFtpText.setStatus("mandatory")


class _WtWebCount6ReportFtpOption_Type(OctetString):
    """Custom type wtWebCount6ReportFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6ReportFtpOption_Type.__name__ = "OctetString"
_WtWebCount6ReportFtpOption_Object = MibTableColumn
wtWebCount6ReportFtpOption = _WtWebCount6ReportFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 24),
    _WtWebCount6ReportFtpOption_Type()
)
wtWebCount6ReportFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportFtpOption.setStatus("mandatory")
_WtWebCount6ReportTimerCron_Type = OctetString
_WtWebCount6ReportTimerCron_Object = MibTableColumn
wtWebCount6ReportTimerCron = _WtWebCount6ReportTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 25),
    _WtWebCount6ReportTimerCron_Type()
)
wtWebCount6ReportTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportTimerCron.setStatus("mandatory")
_WtWebCount6ReportName_Type = OctetString
_WtWebCount6ReportName_Object = MibTableColumn
wtWebCount6ReportName = _WtWebCount6ReportName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 33),
    _WtWebCount6ReportName_Type()
)
wtWebCount6ReportName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportName.setStatus("mandatory")
_WtWebCount6ReportGlobalEnable_Type = OctetString
_WtWebCount6ReportGlobalEnable_Object = MibTableColumn
wtWebCount6ReportGlobalEnable = _WtWebCount6ReportGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 34),
    _WtWebCount6ReportGlobalEnable_Type()
)
wtWebCount6ReportGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportGlobalEnable.setStatus("mandatory")
_WtWebCount6ReportCounterClear_Type = OctetString
_WtWebCount6ReportCounterClear_Object = MibTableColumn
wtWebCount6ReportCounterClear = _WtWebCount6ReportCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 35),
    _WtWebCount6ReportCounterClear_Type()
)
wtWebCount6ReportCounterClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportCounterClear.setStatus("mandatory")
_WtWebCount6ReportRateOfChange_Type = OctetString
_WtWebCount6ReportRateOfChange_Object = MibTableColumn
wtWebCount6ReportRateOfChange = _WtWebCount6ReportRateOfChange_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 52),
    _WtWebCount6ReportRateOfChange_Type()
)
wtWebCount6ReportRateOfChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportRateOfChange.setStatus("mandatory")
_WtWebCount6ReportRateOfChangeWindow_Type = OctetString
_WtWebCount6ReportRateOfChangeWindow_Object = MibTableColumn
wtWebCount6ReportRateOfChangeWindow = _WtWebCount6ReportRateOfChangeWindow_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 53),
    _WtWebCount6ReportRateOfChangeWindow_Type()
)
wtWebCount6ReportRateOfChangeWindow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportRateOfChangeWindow.setStatus("mandatory")
_WtWebCount6ReportRateOfChangeMode_Type = OctetString
_WtWebCount6ReportRateOfChangeMode_Object = MibTableColumn
wtWebCount6ReportRateOfChangeMode = _WtWebCount6ReportRateOfChangeMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 1, 5, 3, 1, 54),
    _WtWebCount6ReportRateOfChangeMode_Type()
)
wtWebCount6ReportRateOfChangeMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6ReportRateOfChangeMode.setStatus("mandatory")
_WtWebCount6Ports_ObjectIdentity = ObjectIdentity
wtWebCount6Ports = _WtWebCount6Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2)
)
_WtWebCount6InputPortTable_Object = MibTable
wtWebCount6InputPortTable = _WtWebCount6InputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebCount6InputPortTable.setStatus("mandatory")
_WtWebCount6InputPortEntry_Object = MibTableRow
wtWebCount6InputPortEntry = _WtWebCount6InputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1)
)
wtWebCount6InputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebCount6InputNo"),
)
if mibBuilder.loadTexts:
    wtWebCount6InputPortEntry.setStatus("mandatory")
_WtWebCount6PortInputName_Type = OctetString
_WtWebCount6PortInputName_Object = MibTableColumn
wtWebCount6PortInputName = _WtWebCount6PortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 1),
    _WtWebCount6PortInputName_Type()
)
wtWebCount6PortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputName.setStatus("mandatory")
_WtWebCount6PortInputText_Type = OctetString
_WtWebCount6PortInputText_Object = MibTableColumn
wtWebCount6PortInputText = _WtWebCount6PortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 2),
    _WtWebCount6PortInputText_Type()
)
wtWebCount6PortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputText.setStatus("mandatory")


class _WtWebCount6PortInputMode_Type(OctetString):
    """Custom type wtWebCount6PortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6PortInputMode_Type.__name__ = "OctetString"
_WtWebCount6PortInputMode_Object = MibTableColumn
wtWebCount6PortInputMode = _WtWebCount6PortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 3),
    _WtWebCount6PortInputMode_Type()
)
wtWebCount6PortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputMode.setStatus("mandatory")
_WtWebCount6PortInputFilter_Type = Integer32
_WtWebCount6PortInputFilter_Object = MibTableColumn
wtWebCount6PortInputFilter = _WtWebCount6PortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 4),
    _WtWebCount6PortInputFilter_Type()
)
wtWebCount6PortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputFilter.setStatus("mandatory")


class _WtWebCount6PortInputPulsePolarity_Type(OctetString):
    """Custom type wtWebCount6PortInputPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebCount6PortInputPulsePolarity_Type.__name__ = "OctetString"
_WtWebCount6PortInputPulsePolarity_Object = MibTableColumn
wtWebCount6PortInputPulsePolarity = _WtWebCount6PortInputPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 5),
    _WtWebCount6PortInputPulsePolarity_Type()
)
wtWebCount6PortInputPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputPulsePolarity.setStatus("mandatory")
_WtWebCount6PortInputBicountInactivTimeout_Type = Integer32
_WtWebCount6PortInputBicountInactivTimeout_Object = MibTableColumn
wtWebCount6PortInputBicountInactivTimeout = _WtWebCount6PortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 6),
    _WtWebCount6PortInputBicountInactivTimeout_Type()
)
wtWebCount6PortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebCount6PortInputCounterSet_Type = Integer32
_WtWebCount6PortInputCounterSet_Object = MibTableColumn
wtWebCount6PortInputCounterSet = _WtWebCount6PortInputCounterSet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 7),
    _WtWebCount6PortInputCounterSet_Type()
)
wtWebCount6PortInputCounterSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputCounterSet.setStatus("mandatory")
_WtWebCount6PortInputCounterScale_Type = OctetString
_WtWebCount6PortInputCounterScale_Object = MibTableColumn
wtWebCount6PortInputCounterScale = _WtWebCount6PortInputCounterScale_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 8),
    _WtWebCount6PortInputCounterScale_Type()
)
wtWebCount6PortInputCounterScale.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputCounterScale.setStatus("mandatory")
_WtWebCount6PortInputCounterUnit_Type = OctetString
_WtWebCount6PortInputCounterUnit_Object = MibTableColumn
wtWebCount6PortInputCounterUnit = _WtWebCount6PortInputCounterUnit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 2, 1, 1, 9),
    _WtWebCount6PortInputCounterUnit_Type()
)
wtWebCount6PortInputCounterUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6PortInputCounterUnit.setStatus("mandatory")
_WtWebCount6Manufact_ObjectIdentity = ObjectIdentity
wtWebCount6Manufact = _WtWebCount6Manufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3)
)
_WtWebCount6MfName_Type = OctetString
_WtWebCount6MfName_Object = MibScalar
wtWebCount6MfName = _WtWebCount6MfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3, 1),
    _WtWebCount6MfName_Type()
)
wtWebCount6MfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MfName.setStatus("mandatory")
_WtWebCount6MfAddr_Type = OctetString
_WtWebCount6MfAddr_Object = MibScalar
wtWebCount6MfAddr = _WtWebCount6MfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3, 2),
    _WtWebCount6MfAddr_Type()
)
wtWebCount6MfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MfAddr.setStatus("mandatory")
_WtWebCount6MfHotline_Type = OctetString
_WtWebCount6MfHotline_Object = MibScalar
wtWebCount6MfHotline = _WtWebCount6MfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3, 3),
    _WtWebCount6MfHotline_Type()
)
wtWebCount6MfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MfHotline.setStatus("mandatory")
_WtWebCount6MfInternet_Type = OctetString
_WtWebCount6MfInternet_Object = MibScalar
wtWebCount6MfInternet = _WtWebCount6MfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3, 4),
    _WtWebCount6MfInternet_Type()
)
wtWebCount6MfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MfInternet.setStatus("mandatory")
_WtWebCount6MfDeviceTyp_Type = OctetString
_WtWebCount6MfDeviceTyp_Object = MibScalar
wtWebCount6MfDeviceTyp = _WtWebCount6MfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3, 5),
    _WtWebCount6MfDeviceTyp_Type()
)
wtWebCount6MfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MfDeviceTyp.setStatus("mandatory")
_WtWebCount6MfOrderNo_Type = OctetString
_WtWebCount6MfOrderNo_Object = MibScalar
wtWebCount6MfOrderNo = _WtWebCount6MfOrderNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 3, 3, 6),
    _WtWebCount6MfOrderNo_Type()
)
wtWebCount6MfOrderNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6MfOrderNo.setStatus("mandatory")
_WtWebCount6Diag_ObjectIdentity = ObjectIdentity
wtWebCount6Diag = _WtWebCount6Diag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 4)
)
_WtWebCount6DiagErrorCount_Type = Integer32
_WtWebCount6DiagErrorCount_Object = MibScalar
wtWebCount6DiagErrorCount = _WtWebCount6DiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 4, 1),
    _WtWebCount6DiagErrorCount_Type()
)
wtWebCount6DiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6DiagErrorCount.setStatus("mandatory")
_WtWebCount6DiagBinaryError_Type = OctetString
_WtWebCount6DiagBinaryError_Object = MibScalar
wtWebCount6DiagBinaryError = _WtWebCount6DiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 4, 2),
    _WtWebCount6DiagBinaryError_Type()
)
wtWebCount6DiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6DiagBinaryError.setStatus("mandatory")
_WtWebCount6DiagErrorIndex_Type = Integer32
_WtWebCount6DiagErrorIndex_Object = MibScalar
wtWebCount6DiagErrorIndex = _WtWebCount6DiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 4, 3),
    _WtWebCount6DiagErrorIndex_Type()
)
wtWebCount6DiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebCount6DiagErrorIndex.setStatus("mandatory")
_WtWebCount6DiagErrorMessage_Type = OctetString
_WtWebCount6DiagErrorMessage_Object = MibScalar
wtWebCount6DiagErrorMessage = _WtWebCount6DiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 4, 4),
    _WtWebCount6DiagErrorMessage_Type()
)
wtWebCount6DiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebCount6DiagErrorMessage.setStatus("mandatory")
_WtWebCount6DiagErrorClear_Type = Integer32
_WtWebCount6DiagErrorClear_Object = MibScalar
wtWebCount6DiagErrorClear = _WtWebCount6DiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 4, 5),
    _WtWebCount6DiagErrorClear_Type()
)
wtWebCount6DiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebCount6DiagErrorClear.setStatus("mandatory")
_WtWebioEA6x6_ObjectIdentity = ObjectIdentity
wtWebioEA6x6 = _WtWebioEA6x6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24)
)
_WtWebioEA6x6InOut_ObjectIdentity = ObjectIdentity
wtWebioEA6x6InOut = _WtWebioEA6x6InOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1)
)


class _WtWebioEA6x6Inputs_Type(Integer32):
    """Custom type wtWebioEA6x6Inputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebioEA6x6Inputs_Type.__name__ = "Integer32"
_WtWebioEA6x6Inputs_Object = MibScalar
wtWebioEA6x6Inputs = _WtWebioEA6x6Inputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 1),
    _WtWebioEA6x6Inputs_Type()
)
wtWebioEA6x6Inputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6Inputs.setStatus("mandatory")


class _WtWebioEA6x6Outputs_Type(Integer32):
    """Custom type wtWebioEA6x6Outputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebioEA6x6Outputs_Type.__name__ = "Integer32"
_WtWebioEA6x6Outputs_Object = MibScalar
wtWebioEA6x6Outputs = _WtWebioEA6x6Outputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 2),
    _WtWebioEA6x6Outputs_Type()
)
wtWebioEA6x6Outputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6Outputs.setStatus("mandatory")
_WtWebioEA6x6InputTable_Object = MibTable
wtWebioEA6x6InputTable = _WtWebioEA6x6InputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6InputTable.setStatus("mandatory")
_WtWebioEA6x6InputEntry_Object = MibTableRow
wtWebioEA6x6InputEntry = _WtWebioEA6x6InputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 3, 1)
)
wtWebioEA6x6InputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6InputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6InputEntry.setStatus("mandatory")


class _WtWebioEA6x6InputNo_Type(Integer32):
    """Custom type wtWebioEA6x6InputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA6x6InputNo_Type.__name__ = "Integer32"
_WtWebioEA6x6InputNo_Object = MibTableColumn
wtWebioEA6x6InputNo = _WtWebioEA6x6InputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 3, 1, 1),
    _WtWebioEA6x6InputNo_Type()
)
wtWebioEA6x6InputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6InputNo.setStatus("mandatory")


class _WtWebioEA6x6InputCounter_Type(Integer32):
    """Custom type wtWebioEA6x6InputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA6x6InputCounter_Type.__name__ = "Integer32"
_WtWebioEA6x6InputCounter_Object = MibTableColumn
wtWebioEA6x6InputCounter = _WtWebioEA6x6InputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 3, 1, 2),
    _WtWebioEA6x6InputCounter_Type()
)
wtWebioEA6x6InputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6InputCounter.setStatus("mandatory")
_WtWebioEA6x6InputCounterClear_Type = Integer32
_WtWebioEA6x6InputCounterClear_Object = MibTableColumn
wtWebioEA6x6InputCounterClear = _WtWebioEA6x6InputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 3, 1, 3),
    _WtWebioEA6x6InputCounterClear_Type()
)
wtWebioEA6x6InputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6InputCounterClear.setStatus("mandatory")


class _WtWebioEA6x6InputState_Type(Integer32):
    """Custom type wtWebioEA6x6InputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6InputState-OFF", 0),
          ("wtWebioEA6x6InputState-ON", 1))
    )


_WtWebioEA6x6InputState_Type.__name__ = "Integer32"
_WtWebioEA6x6InputState_Object = MibTableColumn
wtWebioEA6x6InputState = _WtWebioEA6x6InputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 3, 1, 4),
    _WtWebioEA6x6InputState_Type()
)
wtWebioEA6x6InputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6InputState.setStatus("mandatory")
_WtWebioEA6x6InputValue_Type = Integer32
_WtWebioEA6x6InputValue_Object = MibScalar
wtWebioEA6x6InputValue = _WtWebioEA6x6InputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 4),
    _WtWebioEA6x6InputValue_Type()
)
wtWebioEA6x6InputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6InputValue.setStatus("mandatory")
_WtWebioEA6x6OutputTable_Object = MibTable
wtWebioEA6x6OutputTable = _WtWebioEA6x6OutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputTable.setStatus("mandatory")
_WtWebioEA6x6OutputEntry_Object = MibTableRow
wtWebioEA6x6OutputEntry = _WtWebioEA6x6OutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 5, 1)
)
wtWebioEA6x6OutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputEntry.setStatus("mandatory")


class _WtWebioEA6x6OutputNo_Type(Integer32):
    """Custom type wtWebioEA6x6OutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA6x6OutputNo_Type.__name__ = "Integer32"
_WtWebioEA6x6OutputNo_Object = MibTableColumn
wtWebioEA6x6OutputNo = _WtWebioEA6x6OutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 5, 1, 1),
    _WtWebioEA6x6OutputNo_Type()
)
wtWebioEA6x6OutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputNo.setStatus("mandatory")


class _WtWebioEA6x6OutputState_Type(Integer32):
    """Custom type wtWebioEA6x6OutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6OutputState-OFF", 0),
          ("wtWebioEA6x6OutputState-ON", 1))
    )


_WtWebioEA6x6OutputState_Type.__name__ = "Integer32"
_WtWebioEA6x6OutputState_Object = MibTableColumn
wtWebioEA6x6OutputState = _WtWebioEA6x6OutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 5, 1, 2),
    _WtWebioEA6x6OutputState_Type()
)
wtWebioEA6x6OutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputState.setStatus("mandatory")
_WtWebioEA6x6OutputValue_Type = Integer32
_WtWebioEA6x6OutputValue_Object = MibScalar
wtWebioEA6x6OutputValue = _WtWebioEA6x6OutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 6),
    _WtWebioEA6x6OutputValue_Type()
)
wtWebioEA6x6OutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputValue.setStatus("mandatory")


class _WtWebioEA6x6SetOutput_Type(OctetString):
    """Custom type wtWebioEA6x6SetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA6x6SetOutput_Type.__name__ = "OctetString"
_WtWebioEA6x6SetOutput_Object = MibScalar
wtWebioEA6x6SetOutput = _WtWebioEA6x6SetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 1, 7),
    _WtWebioEA6x6SetOutput_Type()
)
wtWebioEA6x6SetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SetOutput.setStatus("mandatory")
_WtWebioEA6x6SessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA6x6SessCntrl = _WtWebioEA6x6SessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 2)
)
_WtWebioEA6x6SessCntrlPassword_Type = OctetString
_WtWebioEA6x6SessCntrlPassword_Object = MibScalar
wtWebioEA6x6SessCntrlPassword = _WtWebioEA6x6SessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 2, 1),
    _WtWebioEA6x6SessCntrlPassword_Type()
)
wtWebioEA6x6SessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SessCntrlPassword.setStatus("mandatory")


class _WtWebioEA6x6SessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA6x6SessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6SessCntrl-NoSession", 0),
          ("wtWebioEA6x6SessCntrl-Session", 1))
    )


_WtWebioEA6x6SessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA6x6SessCntrlConfigMode_Object = MibScalar
wtWebioEA6x6SessCntrlConfigMode = _WtWebioEA6x6SessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 2, 2),
    _WtWebioEA6x6SessCntrlConfigMode_Type()
)
wtWebioEA6x6SessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6SessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA6x6SessCntrlLogout_Type = Integer32
_WtWebioEA6x6SessCntrlLogout_Object = MibScalar
wtWebioEA6x6SessCntrlLogout = _WtWebioEA6x6SessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 2, 3),
    _WtWebioEA6x6SessCntrlLogout_Type()
)
wtWebioEA6x6SessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SessCntrlLogout.setStatus("mandatory")
_WtWebioEA6x6SessCntrlAdminPassword_Type = OctetString
_WtWebioEA6x6SessCntrlAdminPassword_Object = MibScalar
wtWebioEA6x6SessCntrlAdminPassword = _WtWebioEA6x6SessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 2, 4),
    _WtWebioEA6x6SessCntrlAdminPassword_Type()
)
wtWebioEA6x6SessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA6x6SessCntrlConfigPassword_Type = OctetString
_WtWebioEA6x6SessCntrlConfigPassword_Object = MibScalar
wtWebioEA6x6SessCntrlConfigPassword = _WtWebioEA6x6SessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 2, 5),
    _WtWebioEA6x6SessCntrlConfigPassword_Type()
)
wtWebioEA6x6SessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA6x6Config_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Config = _WtWebioEA6x6Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3)
)
_WtWebioEA6x6Device_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Device = _WtWebioEA6x6Device_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1)
)
_WtWebioEA6x6Text_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Text = _WtWebioEA6x6Text_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 1)
)
_WtWebioEA6x6DeviceName_Type = OctetString
_WtWebioEA6x6DeviceName_Object = MibScalar
wtWebioEA6x6DeviceName = _WtWebioEA6x6DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 1, 1),
    _WtWebioEA6x6DeviceName_Type()
)
wtWebioEA6x6DeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DeviceName.setStatus("mandatory")
_WtWebioEA6x6DeviceText_Type = OctetString
_WtWebioEA6x6DeviceText_Object = MibScalar
wtWebioEA6x6DeviceText = _WtWebioEA6x6DeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 1, 2),
    _WtWebioEA6x6DeviceText_Type()
)
wtWebioEA6x6DeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DeviceText.setStatus("mandatory")
_WtWebioEA6x6DeviceLocation_Type = OctetString
_WtWebioEA6x6DeviceLocation_Object = MibScalar
wtWebioEA6x6DeviceLocation = _WtWebioEA6x6DeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 1, 3),
    _WtWebioEA6x6DeviceLocation_Type()
)
wtWebioEA6x6DeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DeviceLocation.setStatus("mandatory")
_WtWebioEA6x6DeviceContact_Type = OctetString
_WtWebioEA6x6DeviceContact_Object = MibScalar
wtWebioEA6x6DeviceContact = _WtWebioEA6x6DeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 1, 4),
    _WtWebioEA6x6DeviceContact_Type()
)
wtWebioEA6x6DeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DeviceContact.setStatus("mandatory")
_WtWebioEA6x6TimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA6x6TimeDate = _WtWebioEA6x6TimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2)
)
_WtWebioEA6x6TimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA6x6TimeZone = _WtWebioEA6x6TimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1)
)
_WtWebioEA6x6TzOffsetHrs_Type = Integer32
_WtWebioEA6x6TzOffsetHrs_Object = MibScalar
wtWebioEA6x6TzOffsetHrs = _WtWebioEA6x6TzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 1),
    _WtWebioEA6x6TzOffsetHrs_Type()
)
wtWebioEA6x6TzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TzOffsetHrs.setStatus("mandatory")
_WtWebioEA6x6TzOffsetMin_Type = Integer32
_WtWebioEA6x6TzOffsetMin_Object = MibScalar
wtWebioEA6x6TzOffsetMin = _WtWebioEA6x6TzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 2),
    _WtWebioEA6x6TzOffsetMin_Type()
)
wtWebioEA6x6TzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TzOffsetMin.setStatus("mandatory")


class _WtWebioEA6x6TzEnable_Type(OctetString):
    """Custom type wtWebioEA6x6TzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6TzEnable_Type.__name__ = "OctetString"
_WtWebioEA6x6TzEnable_Object = MibScalar
wtWebioEA6x6TzEnable = _WtWebioEA6x6TzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 3),
    _WtWebioEA6x6TzEnable_Type()
)
wtWebioEA6x6TzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TzEnable.setStatus("mandatory")
_WtWebioEA6x6StTzOffsetHrs_Type = Integer32
_WtWebioEA6x6StTzOffsetHrs_Object = MibScalar
wtWebioEA6x6StTzOffsetHrs = _WtWebioEA6x6StTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 4),
    _WtWebioEA6x6StTzOffsetHrs_Type()
)
wtWebioEA6x6StTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzOffsetHrs.setStatus("mandatory")
_WtWebioEA6x6StTzOffsetMin_Type = Integer32
_WtWebioEA6x6StTzOffsetMin_Object = MibScalar
wtWebioEA6x6StTzOffsetMin = _WtWebioEA6x6StTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 5),
    _WtWebioEA6x6StTzOffsetMin_Type()
)
wtWebioEA6x6StTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzOffsetMin.setStatus("mandatory")


class _WtWebioEA6x6StTzEnable_Type(OctetString):
    """Custom type wtWebioEA6x6StTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6StTzEnable_Type.__name__ = "OctetString"
_WtWebioEA6x6StTzEnable_Object = MibScalar
wtWebioEA6x6StTzEnable = _WtWebioEA6x6StTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 6),
    _WtWebioEA6x6StTzEnable_Type()
)
wtWebioEA6x6StTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzEnable.setStatus("mandatory")


class _WtWebioEA6x6StTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA6x6StTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6StartMonth-April", 4),
          ("wtWebioEA6x6StartMonth-August", 8),
          ("wtWebioEA6x6StartMonth-December", 12),
          ("wtWebioEA6x6StartMonth-February", 2),
          ("wtWebioEA6x6StartMonth-January", 1),
          ("wtWebioEA6x6StartMonth-July", 7),
          ("wtWebioEA6x6StartMonth-June", 6),
          ("wtWebioEA6x6StartMonth-March", 3),
          ("wtWebioEA6x6StartMonth-May", 5),
          ("wtWebioEA6x6StartMonth-November", 11),
          ("wtWebioEA6x6StartMonth-October", 10),
          ("wtWebioEA6x6StartMonth-September", 9))
    )


_WtWebioEA6x6StTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA6x6StTzStartMonth_Object = MibScalar
wtWebioEA6x6StTzStartMonth = _WtWebioEA6x6StTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 7),
    _WtWebioEA6x6StTzStartMonth_Type()
)
wtWebioEA6x6StTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStartMonth.setStatus("mandatory")


class _WtWebioEA6x6StTzStartMode_Type(Integer32):
    """Custom type wtWebioEA6x6StTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6StartMode-first", 1),
          ("wtWebioEA6x6StartMode-fourth", 4),
          ("wtWebioEA6x6StartMode-last", 5),
          ("wtWebioEA6x6StartMode-second", 2),
          ("wtWebioEA6x6StartMode-third", 3))
    )


_WtWebioEA6x6StTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA6x6StTzStartMode_Object = MibScalar
wtWebioEA6x6StTzStartMode = _WtWebioEA6x6StTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 8),
    _WtWebioEA6x6StTzStartMode_Type()
)
wtWebioEA6x6StTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStartMode.setStatus("mandatory")


class _WtWebioEA6x6StTzStartWday_Type(Integer32):
    """Custom type wtWebioEA6x6StTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6StartWday-Friday", 6),
          ("wtWebioEA6x6StartWday-Monday", 2),
          ("wtWebioEA6x6StartWday-Saturday", 7),
          ("wtWebioEA6x6StartWday-Sunday", 1),
          ("wtWebioEA6x6StartWday-Thursday", 4),
          ("wtWebioEA6x6StartWday-Tuesday", 3),
          ("wtWebioEA6x6StartWday-Wednesday", 5))
    )


_WtWebioEA6x6StTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA6x6StTzStartWday_Object = MibScalar
wtWebioEA6x6StTzStartWday = _WtWebioEA6x6StTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 9),
    _WtWebioEA6x6StTzStartWday_Type()
)
wtWebioEA6x6StTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStartWday.setStatus("mandatory")
_WtWebioEA6x6StTzStartHrs_Type = Integer32
_WtWebioEA6x6StTzStartHrs_Object = MibScalar
wtWebioEA6x6StTzStartHrs = _WtWebioEA6x6StTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 10),
    _WtWebioEA6x6StTzStartHrs_Type()
)
wtWebioEA6x6StTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStartHrs.setStatus("mandatory")
_WtWebioEA6x6StTzStartMin_Type = Integer32
_WtWebioEA6x6StTzStartMin_Object = MibScalar
wtWebioEA6x6StTzStartMin = _WtWebioEA6x6StTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 11),
    _WtWebioEA6x6StTzStartMin_Type()
)
wtWebioEA6x6StTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStartMin.setStatus("mandatory")


class _WtWebioEA6x6StTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA6x6StTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6StopMonth-April", 4),
          ("wtWebioEA6x6StopMonth-August", 8),
          ("wtWebioEA6x6StopMonth-December", 12),
          ("wtWebioEA6x6StopMonth-February", 2),
          ("wtWebioEA6x6StopMonth-January", 1),
          ("wtWebioEA6x6StopMonth-July", 7),
          ("wtWebioEA6x6StopMonth-June", 6),
          ("wtWebioEA6x6StopMonth-March", 3),
          ("wtWebioEA6x6StopMonth-May", 5),
          ("wtWebioEA6x6StopMonth-November", 11),
          ("wtWebioEA6x6StopMonth-October", 10),
          ("wtWebioEA6x6StopMonth-September", 9))
    )


_WtWebioEA6x6StTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA6x6StTzStopMonth_Object = MibScalar
wtWebioEA6x6StTzStopMonth = _WtWebioEA6x6StTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 12),
    _WtWebioEA6x6StTzStopMonth_Type()
)
wtWebioEA6x6StTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStopMonth.setStatus("mandatory")


class _WtWebioEA6x6StTzStopMode_Type(Integer32):
    """Custom type wtWebioEA6x6StTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6StopMode-first", 1),
          ("wtWebioEA6x6StopMode-fourth", 4),
          ("wtWebioEA6x6StopMode-last", 5),
          ("wtWebioEA6x6StopMode-second", 2),
          ("wtWebioEA6x6StopMode-third", 3))
    )


_WtWebioEA6x6StTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA6x6StTzStopMode_Object = MibScalar
wtWebioEA6x6StTzStopMode = _WtWebioEA6x6StTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 13),
    _WtWebioEA6x6StTzStopMode_Type()
)
wtWebioEA6x6StTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStopMode.setStatus("mandatory")


class _WtWebioEA6x6StTzStopWday_Type(Integer32):
    """Custom type wtWebioEA6x6StTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6StopWday-Friday", 6),
          ("wtWebioEA6x6StopWday-Monday", 2),
          ("wtWebioEA6x6StopWday-Saturday", 7),
          ("wtWebioEA6x6StopWday-Sunday", 1),
          ("wtWebioEA6x6StopWday-Thursday", 4),
          ("wtWebioEA6x6StopWday-Tuesday", 3),
          ("wtWebioEA6x6StopWday-Wednesday", 5))
    )


_WtWebioEA6x6StTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA6x6StTzStopWday_Object = MibScalar
wtWebioEA6x6StTzStopWday = _WtWebioEA6x6StTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 14),
    _WtWebioEA6x6StTzStopWday_Type()
)
wtWebioEA6x6StTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStopWday.setStatus("mandatory")
_WtWebioEA6x6StTzStopHrs_Type = Integer32
_WtWebioEA6x6StTzStopHrs_Object = MibScalar
wtWebioEA6x6StTzStopHrs = _WtWebioEA6x6StTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 15),
    _WtWebioEA6x6StTzStopHrs_Type()
)
wtWebioEA6x6StTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStopHrs.setStatus("mandatory")
_WtWebioEA6x6StTzStopMin_Type = Integer32
_WtWebioEA6x6StTzStopMin_Object = MibScalar
wtWebioEA6x6StTzStopMin = _WtWebioEA6x6StTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 1, 16),
    _WtWebioEA6x6StTzStopMin_Type()
)
wtWebioEA6x6StTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6StTzStopMin.setStatus("mandatory")
_WtWebioEA6x6TimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA6x6TimeServer = _WtWebioEA6x6TimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 2)
)
_WtWebioEA6x6TimeServer1_Type = OctetString
_WtWebioEA6x6TimeServer1_Object = MibScalar
wtWebioEA6x6TimeServer1 = _WtWebioEA6x6TimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 2, 1),
    _WtWebioEA6x6TimeServer1_Type()
)
wtWebioEA6x6TimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TimeServer1.setStatus("mandatory")
_WtWebioEA6x6TimeServer2_Type = OctetString
_WtWebioEA6x6TimeServer2_Object = MibScalar
wtWebioEA6x6TimeServer2 = _WtWebioEA6x6TimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 2, 2),
    _WtWebioEA6x6TimeServer2_Type()
)
wtWebioEA6x6TimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TimeServer2.setStatus("mandatory")


class _WtWebioEA6x6TsEnable_Type(OctetString):
    """Custom type wtWebioEA6x6TsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6TsEnable_Type.__name__ = "OctetString"
_WtWebioEA6x6TsEnable_Object = MibScalar
wtWebioEA6x6TsEnable = _WtWebioEA6x6TsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 2, 3),
    _WtWebioEA6x6TsEnable_Type()
)
wtWebioEA6x6TsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TsEnable.setStatus("mandatory")
_WtWebioEA6x6TsSyncTime_Type = Integer32
_WtWebioEA6x6TsSyncTime_Object = MibScalar
wtWebioEA6x6TsSyncTime = _WtWebioEA6x6TsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 2, 4),
    _WtWebioEA6x6TsSyncTime_Type()
)
wtWebioEA6x6TsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6TsSyncTime.setStatus("mandatory")
_WtWebioEA6x6DeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA6x6DeviceClock = _WtWebioEA6x6DeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 3)
)


class _WtWebioEA6x6ClockHrs_Type(Integer32):
    """Custom type wtWebioEA6x6ClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA6x6ClockHrs_Type.__name__ = "Integer32"
_WtWebioEA6x6ClockHrs_Object = MibScalar
wtWebioEA6x6ClockHrs = _WtWebioEA6x6ClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 3, 1),
    _WtWebioEA6x6ClockHrs_Type()
)
wtWebioEA6x6ClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6ClockHrs.setStatus("mandatory")


class _WtWebioEA6x6ClockMin_Type(Integer32):
    """Custom type wtWebioEA6x6ClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA6x6ClockMin_Type.__name__ = "Integer32"
_WtWebioEA6x6ClockMin_Object = MibScalar
wtWebioEA6x6ClockMin = _WtWebioEA6x6ClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 3, 2),
    _WtWebioEA6x6ClockMin_Type()
)
wtWebioEA6x6ClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6ClockMin.setStatus("mandatory")


class _WtWebioEA6x6ClockDay_Type(Integer32):
    """Custom type wtWebioEA6x6ClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA6x6ClockDay_Type.__name__ = "Integer32"
_WtWebioEA6x6ClockDay_Object = MibScalar
wtWebioEA6x6ClockDay = _WtWebioEA6x6ClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 3, 3),
    _WtWebioEA6x6ClockDay_Type()
)
wtWebioEA6x6ClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6ClockDay.setStatus("mandatory")


class _WtWebioEA6x6ClockMonth_Type(Integer32):
    """Custom type wtWebioEA6x6ClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA6x6ClockMonth-April", 4),
          ("wtWebioEA6x6ClockMonth-August", 8),
          ("wtWebioEA6x6ClockMonth-December", 12),
          ("wtWebioEA6x6ClockMonth-February", 2),
          ("wtWebioEA6x6ClockMonth-January", 1),
          ("wtWebioEA6x6ClockMonth-July", 7),
          ("wtWebioEA6x6ClockMonth-June", 6),
          ("wtWebioEA6x6ClockMonth-March", 3),
          ("wtWebioEA6x6ClockMonth-May", 5),
          ("wtWebioEA6x6ClockMonth-November", 11),
          ("wtWebioEA6x6ClockMonth-October", 10),
          ("wtWebioEA6x6ClockMonth-September", 9))
    )


_WtWebioEA6x6ClockMonth_Type.__name__ = "Integer32"
_WtWebioEA6x6ClockMonth_Object = MibScalar
wtWebioEA6x6ClockMonth = _WtWebioEA6x6ClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 3, 4),
    _WtWebioEA6x6ClockMonth_Type()
)
wtWebioEA6x6ClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6ClockMonth.setStatus("mandatory")


class _WtWebioEA6x6ClockYear_Type(Integer32):
    """Custom type wtWebioEA6x6ClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA6x6ClockYear_Type.__name__ = "Integer32"
_WtWebioEA6x6ClockYear_Object = MibScalar
wtWebioEA6x6ClockYear = _WtWebioEA6x6ClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 2, 3, 5),
    _WtWebioEA6x6ClockYear_Type()
)
wtWebioEA6x6ClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6ClockYear.setStatus("mandatory")
_WtWebioEA6x6Basic_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Basic = _WtWebioEA6x6Basic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3)
)
_WtWebioEA6x6Network_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Network = _WtWebioEA6x6Network_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1)
)
_WtWebioEA6x6IpAddress_Type = IpAddress
_WtWebioEA6x6IpAddress_Object = MibScalar
wtWebioEA6x6IpAddress = _WtWebioEA6x6IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1, 1),
    _WtWebioEA6x6IpAddress_Type()
)
wtWebioEA6x6IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6IpAddress.setStatus("mandatory")
_WtWebioEA6x6SubnetMask_Type = IpAddress
_WtWebioEA6x6SubnetMask_Object = MibScalar
wtWebioEA6x6SubnetMask = _WtWebioEA6x6SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1, 2),
    _WtWebioEA6x6SubnetMask_Type()
)
wtWebioEA6x6SubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SubnetMask.setStatus("mandatory")
_WtWebioEA6x6Gateway_Type = IpAddress
_WtWebioEA6x6Gateway_Object = MibScalar
wtWebioEA6x6Gateway = _WtWebioEA6x6Gateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1, 3),
    _WtWebioEA6x6Gateway_Type()
)
wtWebioEA6x6Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6Gateway.setStatus("mandatory")
_WtWebioEA6x6DnsServer1_Type = OctetString
_WtWebioEA6x6DnsServer1_Object = MibScalar
wtWebioEA6x6DnsServer1 = _WtWebioEA6x6DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1, 4),
    _WtWebioEA6x6DnsServer1_Type()
)
wtWebioEA6x6DnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DnsServer1.setStatus("mandatory")
_WtWebioEA6x6DnsServer2_Type = OctetString
_WtWebioEA6x6DnsServer2_Object = MibScalar
wtWebioEA6x6DnsServer2 = _WtWebioEA6x6DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1, 5),
    _WtWebioEA6x6DnsServer2_Type()
)
wtWebioEA6x6DnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DnsServer2.setStatus("mandatory")
_WtWebioEA6x6AddConfig_Type = OctetString
_WtWebioEA6x6AddConfig_Object = MibScalar
wtWebioEA6x6AddConfig = _WtWebioEA6x6AddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 1, 6),
    _WtWebioEA6x6AddConfig_Type()
)
wtWebioEA6x6AddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AddConfig.setStatus("mandatory")
_WtWebioEA6x6HTTP_ObjectIdentity = ObjectIdentity
wtWebioEA6x6HTTP = _WtWebioEA6x6HTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 2)
)
_WtWebioEA6x6Startup_Type = OctetString
_WtWebioEA6x6Startup_Object = MibScalar
wtWebioEA6x6Startup = _WtWebioEA6x6Startup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 2, 1),
    _WtWebioEA6x6Startup_Type()
)
wtWebioEA6x6Startup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6Startup.setStatus("mandatory")
_WtWebioEA6x6GetHeaderEnable_Type = OctetString
_WtWebioEA6x6GetHeaderEnable_Object = MibScalar
wtWebioEA6x6GetHeaderEnable = _WtWebioEA6x6GetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 2, 2),
    _WtWebioEA6x6GetHeaderEnable_Type()
)
wtWebioEA6x6GetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6GetHeaderEnable.setStatus("mandatory")


class _WtWebioEA6x6HttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6HttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6HttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6HttpInputTrigger_Object = MibScalar
wtWebioEA6x6HttpInputTrigger = _WtWebioEA6x6HttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 2, 3),
    _WtWebioEA6x6HttpInputTrigger_Type()
)
wtWebioEA6x6HttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6HttpInputTrigger.setStatus("mandatory")


class _WtWebioEA6x6HttpPort_Type(Integer32):
    """Custom type wtWebioEA6x6HttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA6x6HttpPort_Type.__name__ = "Integer32"
_WtWebioEA6x6HttpPort_Object = MibScalar
wtWebioEA6x6HttpPort = _WtWebioEA6x6HttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 2, 4),
    _WtWebioEA6x6HttpPort_Type()
)
wtWebioEA6x6HttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6HttpPort.setStatus("mandatory")
_WtWebioEA6x6Mail_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Mail = _WtWebioEA6x6Mail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3)
)
_WtWebioEA6x6MailAdName_Type = OctetString
_WtWebioEA6x6MailAdName_Object = MibScalar
wtWebioEA6x6MailAdName = _WtWebioEA6x6MailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 1),
    _WtWebioEA6x6MailAdName_Type()
)
wtWebioEA6x6MailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailAdName.setStatus("mandatory")
_WtWebioEA6x6MailReply_Type = OctetString
_WtWebioEA6x6MailReply_Object = MibScalar
wtWebioEA6x6MailReply = _WtWebioEA6x6MailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 2),
    _WtWebioEA6x6MailReply_Type()
)
wtWebioEA6x6MailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailReply.setStatus("mandatory")
_WtWebioEA6x6MailServer_Type = OctetString
_WtWebioEA6x6MailServer_Object = MibScalar
wtWebioEA6x6MailServer = _WtWebioEA6x6MailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 3),
    _WtWebioEA6x6MailServer_Type()
)
wtWebioEA6x6MailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailServer.setStatus("mandatory")
_WtWebioEA6x6MailEnable_Type = OctetString
_WtWebioEA6x6MailEnable_Object = MibScalar
wtWebioEA6x6MailEnable = _WtWebioEA6x6MailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 4),
    _WtWebioEA6x6MailEnable_Type()
)
wtWebioEA6x6MailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailEnable.setStatus("mandatory")


class _WtWebioEA6x6MailAuthentication_Type(OctetString):
    """Custom type wtWebioEA6x6MailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6MailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA6x6MailAuthentication_Object = MibScalar
wtWebioEA6x6MailAuthentication = _WtWebioEA6x6MailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 5),
    _WtWebioEA6x6MailAuthentication_Type()
)
wtWebioEA6x6MailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailAuthentication.setStatus("mandatory")
_WtWebioEA6x6MailAuthUser_Type = OctetString
_WtWebioEA6x6MailAuthUser_Object = MibScalar
wtWebioEA6x6MailAuthUser = _WtWebioEA6x6MailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 6),
    _WtWebioEA6x6MailAuthUser_Type()
)
wtWebioEA6x6MailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailAuthUser.setStatus("mandatory")
_WtWebioEA6x6MailAuthPassword_Type = OctetString
_WtWebioEA6x6MailAuthPassword_Object = MibScalar
wtWebioEA6x6MailAuthPassword = _WtWebioEA6x6MailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 7),
    _WtWebioEA6x6MailAuthPassword_Type()
)
wtWebioEA6x6MailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailAuthPassword.setStatus("mandatory")
_WtWebioEA6x6MailPop3Server_Type = OctetString
_WtWebioEA6x6MailPop3Server_Object = MibScalar
wtWebioEA6x6MailPop3Server = _WtWebioEA6x6MailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 3, 8),
    _WtWebioEA6x6MailPop3Server_Type()
)
wtWebioEA6x6MailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MailPop3Server.setStatus("mandatory")
_WtWebioEA6x6SNMP_ObjectIdentity = ObjectIdentity
wtWebioEA6x6SNMP = _WtWebioEA6x6SNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 4)
)
_WtWebioEA6x6SnmpEnable_Type = OctetString
_WtWebioEA6x6SnmpEnable_Object = MibScalar
wtWebioEA6x6SnmpEnable = _WtWebioEA6x6SnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 4, 1),
    _WtWebioEA6x6SnmpEnable_Type()
)
wtWebioEA6x6SnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SnmpEnable.setStatus("mandatory")
_WtWebioEA6x6SnmpCommunityStringRead_Type = OctetString
_WtWebioEA6x6SnmpCommunityStringRead_Object = MibScalar
wtWebioEA6x6SnmpCommunityStringRead = _WtWebioEA6x6SnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 4, 2),
    _WtWebioEA6x6SnmpCommunityStringRead_Type()
)
wtWebioEA6x6SnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA6x6SnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA6x6SnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA6x6SnmpCommunityStringReadWrite = _WtWebioEA6x6SnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 4, 3),
    _WtWebioEA6x6SnmpCommunityStringReadWrite_Type()
)
wtWebioEA6x6SnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA6x6SnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA6x6SnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA6x6SnmpSystemTrapManagerIP = _WtWebioEA6x6SnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 4, 4),
    _WtWebioEA6x6SnmpSystemTrapManagerIP_Type()
)
wtWebioEA6x6SnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA6x6SnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA6x6SnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6SnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA6x6SnmpSystemTrapEnable_Object = MibScalar
wtWebioEA6x6SnmpSystemTrapEnable = _WtWebioEA6x6SnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 4, 5),
    _WtWebioEA6x6SnmpSystemTrapEnable_Type()
)
wtWebioEA6x6SnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA6x6UDP_ObjectIdentity = ObjectIdentity
wtWebioEA6x6UDP = _WtWebioEA6x6UDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 5)
)
_WtWebioEA6x6UdpAdminPort_Type = Integer32
_WtWebioEA6x6UdpAdminPort_Object = MibScalar
wtWebioEA6x6UdpAdminPort = _WtWebioEA6x6UdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 5, 1),
    _WtWebioEA6x6UdpAdminPort_Type()
)
wtWebioEA6x6UdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6UdpAdminPort.setStatus("mandatory")
_WtWebioEA6x6UdpEnable_Type = OctetString
_WtWebioEA6x6UdpEnable_Object = MibScalar
wtWebioEA6x6UdpEnable = _WtWebioEA6x6UdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 5, 2),
    _WtWebioEA6x6UdpEnable_Type()
)
wtWebioEA6x6UdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6UdpEnable.setStatus("mandatory")
_WtWebioEA6x6UdpRemotePort_Type = Integer32
_WtWebioEA6x6UdpRemotePort_Object = MibScalar
wtWebioEA6x6UdpRemotePort = _WtWebioEA6x6UdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 5, 3),
    _WtWebioEA6x6UdpRemotePort_Type()
)
wtWebioEA6x6UdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6UdpRemotePort.setStatus("mandatory")
_WtWebioEA6x6Binary_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Binary = _WtWebioEA6x6Binary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6)
)


class _WtWebioEA6x6BinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA6x6BinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryModeCount_Object = MibScalar
wtWebioEA6x6BinaryModeCount = _WtWebioEA6x6BinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 1),
    _WtWebioEA6x6BinaryModeCount_Type()
)
wtWebioEA6x6BinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryModeCount.setStatus("mandatory")
_WtWebioEA6x6BinaryIfTable_Object = MibTable
wtWebioEA6x6BinaryIfTable = _WtWebioEA6x6BinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryIfTable.setStatus("mandatory")
_WtWebioEA6x6BinaryIfEntry_Object = MibTableRow
wtWebioEA6x6BinaryIfEntry = _WtWebioEA6x6BinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 2, 1)
)
wtWebioEA6x6BinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6BinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryIfEntry.setStatus("mandatory")


class _WtWebioEA6x6BinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA6x6BinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryModeNo_Object = MibTableColumn
wtWebioEA6x6BinaryModeNo = _WtWebioEA6x6BinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA6x6BinaryModeNo_Type()
)
wtWebioEA6x6BinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryModeNo.setStatus("mandatory")
_WtWebioEA6x6BinaryTable_Object = MibTable
wtWebioEA6x6BinaryTable = _WtWebioEA6x6BinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTable.setStatus("mandatory")
_WtWebioEA6x6BinaryEntry_Object = MibTableRow
wtWebioEA6x6BinaryEntry = _WtWebioEA6x6BinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1)
)
wtWebioEA6x6BinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6BinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryEntry.setStatus("mandatory")


class _WtWebioEA6x6BinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryOperationMode_Object = MibTableColumn
wtWebioEA6x6BinaryOperationMode = _WtWebioEA6x6BinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA6x6BinaryOperationMode_Type()
)
wtWebioEA6x6BinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryOperationMode.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA6x6BinaryTcpServerLocalPort = _WtWebioEA6x6BinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA6x6BinaryTcpServerLocalPort_Type()
)
wtWebioEA6x6BinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA6x6BinaryTcpServerInputTrigger = _WtWebioEA6x6BinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA6x6BinaryTcpServerInputTrigger_Type()
)
wtWebioEA6x6BinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA6x6BinaryTcpServerApplicationMode = _WtWebioEA6x6BinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA6x6BinaryTcpServerApplicationMode_Type()
)
wtWebioEA6x6BinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientLocalPort = _WtWebioEA6x6BinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA6x6BinaryTcpClientLocalPort_Type()
)
wtWebioEA6x6BinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientServerPort = _WtWebioEA6x6BinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA6x6BinaryTcpClientServerPort_Type()
)
wtWebioEA6x6BinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA6x6BinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA6x6BinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientServerIpAddr = _WtWebioEA6x6BinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA6x6BinaryTcpClientServerIpAddr_Type()
)
wtWebioEA6x6BinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA6x6BinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA6x6BinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientServerPassword = _WtWebioEA6x6BinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA6x6BinaryTcpClientServerPassword_Type()
)
wtWebioEA6x6BinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA6x6BinaryTcpClientInactivity_Type = Integer32
_WtWebioEA6x6BinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientInactivity = _WtWebioEA6x6BinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA6x6BinaryTcpClientInactivity_Type()
)
wtWebioEA6x6BinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientInputTrigger = _WtWebioEA6x6BinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA6x6BinaryTcpClientInputTrigger_Type()
)
wtWebioEA6x6BinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA6x6BinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientInterval = _WtWebioEA6x6BinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA6x6BinaryTcpClientInterval_Type()
)
wtWebioEA6x6BinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientApplicationMode = _WtWebioEA6x6BinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA6x6BinaryTcpClientApplicationMode_Type()
)
wtWebioEA6x6BinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA6x6BinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA6x6BinaryUdpPeerLocalPort = _WtWebioEA6x6BinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA6x6BinaryUdpPeerLocalPort_Type()
)
wtWebioEA6x6BinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA6x6BinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA6x6BinaryUdpPeerRemotePort = _WtWebioEA6x6BinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA6x6BinaryUdpPeerRemotePort_Type()
)
wtWebioEA6x6BinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA6x6BinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA6x6BinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA6x6BinaryUdpPeerRemoteIpAddr = _WtWebioEA6x6BinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA6x6BinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA6x6BinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA6x6BinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA6x6BinaryUdpPeerInputTrigger = _WtWebioEA6x6BinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA6x6BinaryUdpPeerInputTrigger_Type()
)
wtWebioEA6x6BinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA6x6BinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA6x6BinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA6x6BinaryUdpPeerInterval = _WtWebioEA6x6BinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA6x6BinaryUdpPeerInterval_Type()
)
wtWebioEA6x6BinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA6x6BinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA6x6BinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6BinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA6x6BinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA6x6BinaryUdpPeerApplicationMode = _WtWebioEA6x6BinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA6x6BinaryUdpPeerApplicationMode_Type()
)
wtWebioEA6x6BinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA6x6BinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryConnectedPort_Object = MibTableColumn
wtWebioEA6x6BinaryConnectedPort = _WtWebioEA6x6BinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA6x6BinaryConnectedPort_Type()
)
wtWebioEA6x6BinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryConnectedPort.setStatus("mandatory")
_WtWebioEA6x6BinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA6x6BinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA6x6BinaryConnectedIpAddr = _WtWebioEA6x6BinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA6x6BinaryConnectedIpAddr_Type()
)
wtWebioEA6x6BinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA6x6BinaryTcpServerClientHttpPort = _WtWebioEA6x6BinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA6x6BinaryTcpServerClientHttpPort_Type()
)
wtWebioEA6x6BinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA6x6BinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA6x6BinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6BinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA6x6BinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA6x6BinaryTcpClientServerHttpPort = _WtWebioEA6x6BinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA6x6BinaryTcpClientServerHttpPort_Type()
)
wtWebioEA6x6BinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6BinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA6x6Syslog_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Syslog = _WtWebioEA6x6Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 7)
)
_WtWebioEA6x6SyslogServerIP_Type = OctetString
_WtWebioEA6x6SyslogServerIP_Object = MibScalar
wtWebioEA6x6SyslogServerIP = _WtWebioEA6x6SyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 7, 1),
    _WtWebioEA6x6SyslogServerIP_Type()
)
wtWebioEA6x6SyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SyslogServerIP.setStatus("mandatory")
_WtWebioEA6x6SyslogServerPort_Type = Integer32
_WtWebioEA6x6SyslogServerPort_Object = MibScalar
wtWebioEA6x6SyslogServerPort = _WtWebioEA6x6SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 7, 2),
    _WtWebioEA6x6SyslogServerPort_Type()
)
wtWebioEA6x6SyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SyslogServerPort.setStatus("mandatory")


class _WtWebioEA6x6SyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA6x6SyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6SyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA6x6SyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA6x6SyslogSystemMessagesEnable = _WtWebioEA6x6SyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 7, 3),
    _WtWebioEA6x6SyslogSystemMessagesEnable_Type()
)
wtWebioEA6x6SyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA6x6SyslogEnable_Type = OctetString
_WtWebioEA6x6SyslogEnable_Object = MibScalar
wtWebioEA6x6SyslogEnable = _WtWebioEA6x6SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 7, 4),
    _WtWebioEA6x6SyslogEnable_Type()
)
wtWebioEA6x6SyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SyslogEnable.setStatus("mandatory")
_WtWebioEA6x6FTP_ObjectIdentity = ObjectIdentity
wtWebioEA6x6FTP = _WtWebioEA6x6FTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8)
)
_WtWebioEA6x6FTPServerIP_Type = OctetString
_WtWebioEA6x6FTPServerIP_Object = MibScalar
wtWebioEA6x6FTPServerIP = _WtWebioEA6x6FTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 1),
    _WtWebioEA6x6FTPServerIP_Type()
)
wtWebioEA6x6FTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPServerIP.setStatus("mandatory")
_WtWebioEA6x6FTPServerControlPort_Type = Integer32
_WtWebioEA6x6FTPServerControlPort_Object = MibScalar
wtWebioEA6x6FTPServerControlPort = _WtWebioEA6x6FTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 2),
    _WtWebioEA6x6FTPServerControlPort_Type()
)
wtWebioEA6x6FTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPServerControlPort.setStatus("mandatory")
_WtWebioEA6x6FTPUserName_Type = OctetString
_WtWebioEA6x6FTPUserName_Object = MibScalar
wtWebioEA6x6FTPUserName = _WtWebioEA6x6FTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 3),
    _WtWebioEA6x6FTPUserName_Type()
)
wtWebioEA6x6FTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPUserName.setStatus("mandatory")
_WtWebioEA6x6FTPPassword_Type = OctetString
_WtWebioEA6x6FTPPassword_Object = MibScalar
wtWebioEA6x6FTPPassword = _WtWebioEA6x6FTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 4),
    _WtWebioEA6x6FTPPassword_Type()
)
wtWebioEA6x6FTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPPassword.setStatus("mandatory")
_WtWebioEA6x6FTPAccount_Type = OctetString
_WtWebioEA6x6FTPAccount_Object = MibScalar
wtWebioEA6x6FTPAccount = _WtWebioEA6x6FTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 5),
    _WtWebioEA6x6FTPAccount_Type()
)
wtWebioEA6x6FTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPAccount.setStatus("mandatory")
_WtWebioEA6x6FTPOption_Type = OctetString
_WtWebioEA6x6FTPOption_Object = MibScalar
wtWebioEA6x6FTPOption = _WtWebioEA6x6FTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 6),
    _WtWebioEA6x6FTPOption_Type()
)
wtWebioEA6x6FTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPOption.setStatus("mandatory")
_WtWebioEA6x6FTPEnable_Type = OctetString
_WtWebioEA6x6FTPEnable_Object = MibScalar
wtWebioEA6x6FTPEnable = _WtWebioEA6x6FTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 3, 8, 7),
    _WtWebioEA6x6FTPEnable_Type()
)
wtWebioEA6x6FTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6FTPEnable.setStatus("mandatory")
_WtWebioEA6x6OutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA6x6OutputMode = _WtWebioEA6x6OutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 4)
)
_WtWebioEA6x6OutputModeTable_Object = MibTable
wtWebioEA6x6OutputModeTable = _WtWebioEA6x6OutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputModeTable.setStatus("mandatory")
_WtWebioEA6x6OutputModeEntry_Object = MibTableRow
wtWebioEA6x6OutputModeEntry = _WtWebioEA6x6OutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 4, 1, 1)
)
wtWebioEA6x6OutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputModeEntry.setStatus("mandatory")


class _WtWebioEA6x6OutputModeBit_Type(OctetString):
    """Custom type wtWebioEA6x6OutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6OutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA6x6OutputModeBit_Object = MibTableColumn
wtWebioEA6x6OutputModeBit = _WtWebioEA6x6OutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 4, 1, 1, 1),
    _WtWebioEA6x6OutputModeBit_Type()
)
wtWebioEA6x6OutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputModeBit.setStatus("mandatory")


class _WtWebioEA6x6SafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA6x6SafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA6x6SafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA6x6SafetyTimeout_Object = MibScalar
wtWebioEA6x6SafetyTimeout = _WtWebioEA6x6SafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 4, 2),
    _WtWebioEA6x6SafetyTimeout_Type()
)
wtWebioEA6x6SafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6SafetyTimeout.setStatus("mandatory")
_WtWebioEA6x6Alarm_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Alarm = _WtWebioEA6x6Alarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5)
)


class _WtWebioEA6x6AlarmCount_Type(Integer32):
    """Custom type wtWebioEA6x6AlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA6x6AlarmCount_Type.__name__ = "Integer32"
_WtWebioEA6x6AlarmCount_Object = MibScalar
wtWebioEA6x6AlarmCount = _WtWebioEA6x6AlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 1),
    _WtWebioEA6x6AlarmCount_Type()
)
wtWebioEA6x6AlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmCount.setStatus("mandatory")
_WtWebioEA6x6AlarmIfTable_Object = MibTable
wtWebioEA6x6AlarmIfTable = _WtWebioEA6x6AlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmIfTable.setStatus("mandatory")
_WtWebioEA6x6AlarmIfEntry_Object = MibTableRow
wtWebioEA6x6AlarmIfEntry = _WtWebioEA6x6AlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 2, 1)
)
wtWebioEA6x6AlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmIfEntry.setStatus("mandatory")


class _WtWebioEA6x6AlarmNo_Type(Integer32):
    """Custom type wtWebioEA6x6AlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA6x6AlarmNo_Type.__name__ = "Integer32"
_WtWebioEA6x6AlarmNo_Object = MibTableColumn
wtWebioEA6x6AlarmNo = _WtWebioEA6x6AlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 2, 1, 1),
    _WtWebioEA6x6AlarmNo_Type()
)
wtWebioEA6x6AlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmNo.setStatus("mandatory")
_WtWebioEA6x6AlarmTable_Object = MibTable
wtWebioEA6x6AlarmTable = _WtWebioEA6x6AlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmTable.setStatus("mandatory")
_WtWebioEA6x6AlarmEntry_Object = MibTableRow
wtWebioEA6x6AlarmEntry = _WtWebioEA6x6AlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1)
)
wtWebioEA6x6AlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6AlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmEntry.setStatus("mandatory")


class _WtWebioEA6x6AlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6AlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA6x6AlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6AlarmInputTrigger_Object = MibTableColumn
wtWebioEA6x6AlarmInputTrigger = _WtWebioEA6x6AlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 1),
    _WtWebioEA6x6AlarmInputTrigger_Type()
)
wtWebioEA6x6AlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA6x6AlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6AlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA6x6AlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6AlarmOutputTrigger_Object = MibTableColumn
wtWebioEA6x6AlarmOutputTrigger = _WtWebioEA6x6AlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 2),
    _WtWebioEA6x6AlarmOutputTrigger_Type()
)
wtWebioEA6x6AlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA6x6AlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA6x6AlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6AlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA6x6AlarmSystemTrigger_Object = MibTableColumn
wtWebioEA6x6AlarmSystemTrigger = _WtWebioEA6x6AlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 3),
    _WtWebioEA6x6AlarmSystemTrigger_Type()
)
wtWebioEA6x6AlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA6x6AlarmMaxCounterValue_Type = OctetString
_WtWebioEA6x6AlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA6x6AlarmMaxCounterValue = _WtWebioEA6x6AlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 4),
    _WtWebioEA6x6AlarmMaxCounterValue_Type()
)
wtWebioEA6x6AlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA6x6AlarmInterval_Type = OctetString
_WtWebioEA6x6AlarmInterval_Object = MibTableColumn
wtWebioEA6x6AlarmInterval = _WtWebioEA6x6AlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 5),
    _WtWebioEA6x6AlarmInterval_Type()
)
wtWebioEA6x6AlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmInterval.setStatus("mandatory")


class _WtWebioEA6x6AlarmEnable_Type(OctetString):
    """Custom type wtWebioEA6x6AlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6AlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA6x6AlarmEnable_Object = MibTableColumn
wtWebioEA6x6AlarmEnable = _WtWebioEA6x6AlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 6),
    _WtWebioEA6x6AlarmEnable_Type()
)
wtWebioEA6x6AlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmEnable.setStatus("mandatory")
_WtWebioEA6x6AlarmMailAddr_Type = OctetString
_WtWebioEA6x6AlarmMailAddr_Object = MibTableColumn
wtWebioEA6x6AlarmMailAddr = _WtWebioEA6x6AlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 7),
    _WtWebioEA6x6AlarmMailAddr_Type()
)
wtWebioEA6x6AlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmMailAddr.setStatus("mandatory")
_WtWebioEA6x6AlarmMailSubject_Type = OctetString
_WtWebioEA6x6AlarmMailSubject_Object = MibTableColumn
wtWebioEA6x6AlarmMailSubject = _WtWebioEA6x6AlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 8),
    _WtWebioEA6x6AlarmMailSubject_Type()
)
wtWebioEA6x6AlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmMailSubject.setStatus("mandatory")
_WtWebioEA6x6AlarmMailText_Type = OctetString
_WtWebioEA6x6AlarmMailText_Object = MibTableColumn
wtWebioEA6x6AlarmMailText = _WtWebioEA6x6AlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 9),
    _WtWebioEA6x6AlarmMailText_Type()
)
wtWebioEA6x6AlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmMailText.setStatus("mandatory")
_WtWebioEA6x6AlarmSnmpManagerIP_Type = OctetString
_WtWebioEA6x6AlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA6x6AlarmSnmpManagerIP = _WtWebioEA6x6AlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 10),
    _WtWebioEA6x6AlarmSnmpManagerIP_Type()
)
wtWebioEA6x6AlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA6x6AlarmSnmpTrapText_Type = OctetString
_WtWebioEA6x6AlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA6x6AlarmSnmpTrapText = _WtWebioEA6x6AlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 11),
    _WtWebioEA6x6AlarmSnmpTrapText_Type()
)
wtWebioEA6x6AlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA6x6AlarmUdpIpAddr_Type = OctetString
_WtWebioEA6x6AlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA6x6AlarmUdpIpAddr = _WtWebioEA6x6AlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 12),
    _WtWebioEA6x6AlarmUdpIpAddr_Type()
)
wtWebioEA6x6AlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA6x6AlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA6x6AlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6AlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA6x6AlarmUdpPort_Object = MibTableColumn
wtWebioEA6x6AlarmUdpPort = _WtWebioEA6x6AlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 13),
    _WtWebioEA6x6AlarmUdpPort_Type()
)
wtWebioEA6x6AlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmUdpPort.setStatus("mandatory")
_WtWebioEA6x6AlarmUdpText_Type = OctetString
_WtWebioEA6x6AlarmUdpText_Object = MibTableColumn
wtWebioEA6x6AlarmUdpText = _WtWebioEA6x6AlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 14),
    _WtWebioEA6x6AlarmUdpText_Type()
)
wtWebioEA6x6AlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmUdpText.setStatus("mandatory")
_WtWebioEA6x6AlarmTcpIpAddr_Type = OctetString
_WtWebioEA6x6AlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA6x6AlarmTcpIpAddr = _WtWebioEA6x6AlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 15),
    _WtWebioEA6x6AlarmTcpIpAddr_Type()
)
wtWebioEA6x6AlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA6x6AlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA6x6AlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6AlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA6x6AlarmTcpPort_Object = MibTableColumn
wtWebioEA6x6AlarmTcpPort = _WtWebioEA6x6AlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 16),
    _WtWebioEA6x6AlarmTcpPort_Type()
)
wtWebioEA6x6AlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmTcpPort.setStatus("mandatory")
_WtWebioEA6x6AlarmTcpText_Type = OctetString
_WtWebioEA6x6AlarmTcpText_Object = MibTableColumn
wtWebioEA6x6AlarmTcpText = _WtWebioEA6x6AlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 17),
    _WtWebioEA6x6AlarmTcpText_Type()
)
wtWebioEA6x6AlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmTcpText.setStatus("mandatory")
_WtWebioEA6x6AlarmSyslogIpAddr_Type = OctetString
_WtWebioEA6x6AlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA6x6AlarmSyslogIpAddr = _WtWebioEA6x6AlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 18),
    _WtWebioEA6x6AlarmSyslogIpAddr_Type()
)
wtWebioEA6x6AlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA6x6AlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA6x6AlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA6x6AlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA6x6AlarmSyslogPort_Object = MibTableColumn
wtWebioEA6x6AlarmSyslogPort = _WtWebioEA6x6AlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 19),
    _WtWebioEA6x6AlarmSyslogPort_Type()
)
wtWebioEA6x6AlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSyslogPort.setStatus("mandatory")
_WtWebioEA6x6AlarmSyslogText_Type = OctetString
_WtWebioEA6x6AlarmSyslogText_Object = MibTableColumn
wtWebioEA6x6AlarmSyslogText = _WtWebioEA6x6AlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 20),
    _WtWebioEA6x6AlarmSyslogText_Type()
)
wtWebioEA6x6AlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSyslogText.setStatus("mandatory")
_WtWebioEA6x6AlarmFtpDataPort_Type = OctetString
_WtWebioEA6x6AlarmFtpDataPort_Object = MibTableColumn
wtWebioEA6x6AlarmFtpDataPort = _WtWebioEA6x6AlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 21),
    _WtWebioEA6x6AlarmFtpDataPort_Type()
)
wtWebioEA6x6AlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA6x6AlarmFtpFileName_Type = OctetString
_WtWebioEA6x6AlarmFtpFileName_Object = MibTableColumn
wtWebioEA6x6AlarmFtpFileName = _WtWebioEA6x6AlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 22),
    _WtWebioEA6x6AlarmFtpFileName_Type()
)
wtWebioEA6x6AlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmFtpFileName.setStatus("mandatory")
_WtWebioEA6x6AlarmFtpText_Type = OctetString
_WtWebioEA6x6AlarmFtpText_Object = MibTableColumn
wtWebioEA6x6AlarmFtpText = _WtWebioEA6x6AlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 23),
    _WtWebioEA6x6AlarmFtpText_Type()
)
wtWebioEA6x6AlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmFtpText.setStatus("mandatory")


class _WtWebioEA6x6AlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA6x6AlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6AlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA6x6AlarmFtpOption_Object = MibTableColumn
wtWebioEA6x6AlarmFtpOption = _WtWebioEA6x6AlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 24),
    _WtWebioEA6x6AlarmFtpOption_Type()
)
wtWebioEA6x6AlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmFtpOption.setStatus("mandatory")
_WtWebioEA6x6AlarmTimerCron_Type = OctetString
_WtWebioEA6x6AlarmTimerCron_Object = MibTableColumn
wtWebioEA6x6AlarmTimerCron = _WtWebioEA6x6AlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 25),
    _WtWebioEA6x6AlarmTimerCron_Type()
)
wtWebioEA6x6AlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmTimerCron.setStatus("mandatory")
_WtWebioEA6x6AlarmMailReleaseSubject_Type = OctetString
_WtWebioEA6x6AlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA6x6AlarmMailReleaseSubject = _WtWebioEA6x6AlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 26),
    _WtWebioEA6x6AlarmMailReleaseSubject_Type()
)
wtWebioEA6x6AlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA6x6AlarmMailReleaseText_Type = OctetString
_WtWebioEA6x6AlarmMailReleaseText_Object = MibTableColumn
wtWebioEA6x6AlarmMailReleaseText = _WtWebioEA6x6AlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 27),
    _WtWebioEA6x6AlarmMailReleaseText_Type()
)
wtWebioEA6x6AlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA6x6AlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA6x6AlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA6x6AlarmSnmpTrapReleaseText = _WtWebioEA6x6AlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 28),
    _WtWebioEA6x6AlarmSnmpTrapReleaseText_Type()
)
wtWebioEA6x6AlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA6x6AlarmUdpReleaseText_Type = OctetString
_WtWebioEA6x6AlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA6x6AlarmUdpReleaseText = _WtWebioEA6x6AlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 29),
    _WtWebioEA6x6AlarmUdpReleaseText_Type()
)
wtWebioEA6x6AlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA6x6AlarmTcpReleaseText_Type = OctetString
_WtWebioEA6x6AlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA6x6AlarmTcpReleaseText = _WtWebioEA6x6AlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 30),
    _WtWebioEA6x6AlarmTcpReleaseText_Type()
)
wtWebioEA6x6AlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA6x6AlarmSyslogReleaseText_Type = OctetString
_WtWebioEA6x6AlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA6x6AlarmSyslogReleaseText = _WtWebioEA6x6AlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 31),
    _WtWebioEA6x6AlarmSyslogReleaseText_Type()
)
wtWebioEA6x6AlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA6x6AlarmFtpReleaseText_Type = OctetString
_WtWebioEA6x6AlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA6x6AlarmFtpReleaseText = _WtWebioEA6x6AlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 1, 5, 3, 1, 32),
    _WtWebioEA6x6AlarmFtpReleaseText_Type()
)
wtWebioEA6x6AlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6AlarmFtpReleaseText.setStatus("mandatory")
_WtWebioEA6x6Ports_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Ports = _WtWebioEA6x6Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2)
)
_WtWebioEA6x6InputPortTable_Object = MibTable
wtWebioEA6x6InputPortTable = _WtWebioEA6x6InputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6InputPortTable.setStatus("mandatory")
_WtWebioEA6x6InputPortEntry_Object = MibTableRow
wtWebioEA6x6InputPortEntry = _WtWebioEA6x6InputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1)
)
wtWebioEA6x6InputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6InputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6InputPortEntry.setStatus("mandatory")
_WtWebioEA6x6PortInputName_Type = OctetString
_WtWebioEA6x6PortInputName_Object = MibTableColumn
wtWebioEA6x6PortInputName = _WtWebioEA6x6PortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1, 1),
    _WtWebioEA6x6PortInputName_Type()
)
wtWebioEA6x6PortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortInputName.setStatus("mandatory")
_WtWebioEA6x6PortInputText_Type = OctetString
_WtWebioEA6x6PortInputText_Object = MibTableColumn
wtWebioEA6x6PortInputText = _WtWebioEA6x6PortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1, 2),
    _WtWebioEA6x6PortInputText_Type()
)
wtWebioEA6x6PortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortInputText.setStatus("mandatory")


class _WtWebioEA6x6PortInputMode_Type(OctetString):
    """Custom type wtWebioEA6x6PortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortInputMode_Type.__name__ = "OctetString"
_WtWebioEA6x6PortInputMode_Object = MibTableColumn
wtWebioEA6x6PortInputMode = _WtWebioEA6x6PortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1, 3),
    _WtWebioEA6x6PortInputMode_Type()
)
wtWebioEA6x6PortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortInputMode.setStatus("mandatory")
_WtWebioEA6x6PortInputFilter_Type = Integer32
_WtWebioEA6x6PortInputFilter_Object = MibTableColumn
wtWebioEA6x6PortInputFilter = _WtWebioEA6x6PortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1, 4),
    _WtWebioEA6x6PortInputFilter_Type()
)
wtWebioEA6x6PortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortInputFilter.setStatus("mandatory")


class _WtWebioEA6x6PortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA6x6PortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA6x6PortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA6x6PortInputBicountPulsePolarity = _WtWebioEA6x6PortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1, 5),
    _WtWebioEA6x6PortInputBicountPulsePolarity_Type()
)
wtWebioEA6x6PortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA6x6PortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA6x6PortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA6x6PortInputBicountInactivTimeout = _WtWebioEA6x6PortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 1, 1, 6),
    _WtWebioEA6x6PortInputBicountInactivTimeout_Type()
)
wtWebioEA6x6PortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA6x6OutputPortTable_Object = MibTable
wtWebioEA6x6OutputPortTable = _WtWebioEA6x6OutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputPortTable.setStatus("mandatory")
_WtWebioEA6x6OutputPortEntry_Object = MibTableRow
wtWebioEA6x6OutputPortEntry = _WtWebioEA6x6OutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1)
)
wtWebioEA6x6OutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA6x6OutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA6x6OutputPortEntry.setStatus("mandatory")
_WtWebioEA6x6PortOutputName_Type = OctetString
_WtWebioEA6x6PortOutputName_Object = MibTableColumn
wtWebioEA6x6PortOutputName = _WtWebioEA6x6PortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 1),
    _WtWebioEA6x6PortOutputName_Type()
)
wtWebioEA6x6PortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortOutputName.setStatus("mandatory")
_WtWebioEA6x6PortOutputText_Type = OctetString
_WtWebioEA6x6PortOutputText_Object = MibTableColumn
wtWebioEA6x6PortOutputText = _WtWebioEA6x6PortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 2),
    _WtWebioEA6x6PortOutputText_Type()
)
wtWebioEA6x6PortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortOutputText.setStatus("mandatory")
_WtWebioEA6x6PortOutputGroupMode_Type = OctetString
_WtWebioEA6x6PortOutputGroupMode_Object = MibTableColumn
wtWebioEA6x6PortOutputGroupMode = _WtWebioEA6x6PortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 3),
    _WtWebioEA6x6PortOutputGroupMode_Type()
)
wtWebioEA6x6PortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortOutputGroupMode.setStatus("mandatory")
_WtWebioEA6x6PortOutputSafetyState_Type = OctetString
_WtWebioEA6x6PortOutputSafetyState_Object = MibTableColumn
wtWebioEA6x6PortOutputSafetyState = _WtWebioEA6x6PortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 4),
    _WtWebioEA6x6PortOutputSafetyState_Type()
)
wtWebioEA6x6PortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA6x6PortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA6x6PortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA6x6PortLogicInputMask_Object = MibTableColumn
wtWebioEA6x6PortLogicInputMask = _WtWebioEA6x6PortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 5),
    _WtWebioEA6x6PortLogicInputMask_Type()
)
wtWebioEA6x6PortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortLogicInputMask.setStatus("mandatory")


class _WtWebioEA6x6PortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA6x6PortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA6x6PortLogicInputInverter_Object = MibTableColumn
wtWebioEA6x6PortLogicInputInverter = _WtWebioEA6x6PortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 6),
    _WtWebioEA6x6PortLogicInputInverter_Type()
)
wtWebioEA6x6PortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA6x6PortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA6x6PortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA6x6PortLogicFunction_Object = MibTableColumn
wtWebioEA6x6PortLogicFunction = _WtWebioEA6x6PortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 7),
    _WtWebioEA6x6PortLogicFunction_Type()
)
wtWebioEA6x6PortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortLogicFunction.setStatus("mandatory")


class _WtWebioEA6x6PortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA6x6PortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA6x6PortLogicOutputInverter_Object = MibTableColumn
wtWebioEA6x6PortLogicOutputInverter = _WtWebioEA6x6PortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 8),
    _WtWebioEA6x6PortLogicOutputInverter_Type()
)
wtWebioEA6x6PortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA6x6PortPulseDuration_Type = Integer32
_WtWebioEA6x6PortPulseDuration_Object = MibTableColumn
wtWebioEA6x6PortPulseDuration = _WtWebioEA6x6PortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 9),
    _WtWebioEA6x6PortPulseDuration_Type()
)
wtWebioEA6x6PortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortPulseDuration.setStatus("mandatory")


class _WtWebioEA6x6PortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA6x6PortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA6x6PortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA6x6PortPulsePolarity_Object = MibTableColumn
wtWebioEA6x6PortPulsePolarity = _WtWebioEA6x6PortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 2, 2, 1, 10),
    _WtWebioEA6x6PortPulsePolarity_Type()
)
wtWebioEA6x6PortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6PortPulsePolarity.setStatus("mandatory")
_WtWebioEA6x6Manufact_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Manufact = _WtWebioEA6x6Manufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 3)
)
_WtWebioEA6x6MfName_Type = OctetString
_WtWebioEA6x6MfName_Object = MibScalar
wtWebioEA6x6MfName = _WtWebioEA6x6MfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 3, 1),
    _WtWebioEA6x6MfName_Type()
)
wtWebioEA6x6MfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MfName.setStatus("mandatory")
_WtWebioEA6x6MfAddr_Type = OctetString
_WtWebioEA6x6MfAddr_Object = MibScalar
wtWebioEA6x6MfAddr = _WtWebioEA6x6MfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 3, 2),
    _WtWebioEA6x6MfAddr_Type()
)
wtWebioEA6x6MfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MfAddr.setStatus("mandatory")
_WtWebioEA6x6MfHotline_Type = OctetString
_WtWebioEA6x6MfHotline_Object = MibScalar
wtWebioEA6x6MfHotline = _WtWebioEA6x6MfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 3, 3),
    _WtWebioEA6x6MfHotline_Type()
)
wtWebioEA6x6MfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MfHotline.setStatus("mandatory")
_WtWebioEA6x6MfInternet_Type = OctetString
_WtWebioEA6x6MfInternet_Object = MibScalar
wtWebioEA6x6MfInternet = _WtWebioEA6x6MfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 3, 4),
    _WtWebioEA6x6MfInternet_Type()
)
wtWebioEA6x6MfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MfInternet.setStatus("mandatory")
_WtWebioEA6x6MfDeviceTyp_Type = OctetString
_WtWebioEA6x6MfDeviceTyp_Object = MibScalar
wtWebioEA6x6MfDeviceTyp = _WtWebioEA6x6MfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 3, 3, 5),
    _WtWebioEA6x6MfDeviceTyp_Type()
)
wtWebioEA6x6MfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6MfDeviceTyp.setStatus("mandatory")
_WtWebioEA6x6Diag_ObjectIdentity = ObjectIdentity
wtWebioEA6x6Diag = _WtWebioEA6x6Diag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 4)
)
_WtWebioEA6x6DiagErrorCount_Type = Integer32
_WtWebioEA6x6DiagErrorCount_Object = MibScalar
wtWebioEA6x6DiagErrorCount = _WtWebioEA6x6DiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 4, 1),
    _WtWebioEA6x6DiagErrorCount_Type()
)
wtWebioEA6x6DiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6DiagErrorCount.setStatus("mandatory")
_WtWebioEA6x6DiagBinaryError_Type = OctetString
_WtWebioEA6x6DiagBinaryError_Object = MibScalar
wtWebioEA6x6DiagBinaryError = _WtWebioEA6x6DiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 4, 2),
    _WtWebioEA6x6DiagBinaryError_Type()
)
wtWebioEA6x6DiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6DiagBinaryError.setStatus("mandatory")
_WtWebioEA6x6DiagErrorIndex_Type = Integer32
_WtWebioEA6x6DiagErrorIndex_Object = MibScalar
wtWebioEA6x6DiagErrorIndex = _WtWebioEA6x6DiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 4, 3),
    _WtWebioEA6x6DiagErrorIndex_Type()
)
wtWebioEA6x6DiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA6x6DiagErrorIndex.setStatus("mandatory")
_WtWebioEA6x6DiagErrorMessage_Type = OctetString
_WtWebioEA6x6DiagErrorMessage_Object = MibScalar
wtWebioEA6x6DiagErrorMessage = _WtWebioEA6x6DiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 4, 4),
    _WtWebioEA6x6DiagErrorMessage_Type()
)
wtWebioEA6x6DiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6DiagErrorMessage.setStatus("mandatory")
_WtWebioEA6x6DiagErrorClear_Type = Integer32
_WtWebioEA6x6DiagErrorClear_Object = MibScalar
wtWebioEA6x6DiagErrorClear = _WtWebioEA6x6DiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 4, 5),
    _WtWebioEA6x6DiagErrorClear_Type()
)
wtWebioEA6x6DiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA6x6DiagErrorClear.setStatus("mandatory")
_WtWebioEA2x2ERP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP = _WtWebioEA2x2ERP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25)
)
_WtWebioEA2x2ERPInOut_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPInOut = _WtWebioEA2x2ERPInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1)
)


class _WtWebioEA2x2ERPInputs_Type(Integer32):
    """Custom type wtWebioEA2x2ERPInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERPInputs_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPInputs_Object = MibScalar
wtWebioEA2x2ERPInputs = _WtWebioEA2x2ERPInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 1),
    _WtWebioEA2x2ERPInputs_Type()
)
wtWebioEA2x2ERPInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputs.setStatus("mandatory")


class _WtWebioEA2x2ERPOutputs_Type(Integer32):
    """Custom type wtWebioEA2x2ERPOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERPOutputs_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPOutputs_Object = MibScalar
wtWebioEA2x2ERPOutputs = _WtWebioEA2x2ERPOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 2),
    _WtWebioEA2x2ERPOutputs_Type()
)
wtWebioEA2x2ERPOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputs.setStatus("mandatory")
_WtWebioEA2x2ERPInputTable_Object = MibTable
wtWebioEA2x2ERPInputTable = _WtWebioEA2x2ERPInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputTable.setStatus("mandatory")
_WtWebioEA2x2ERPInputEntry_Object = MibTableRow
wtWebioEA2x2ERPInputEntry = _WtWebioEA2x2ERPInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 3, 1)
)
wtWebioEA2x2ERPInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPInputNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERPInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2ERPInputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPInputNo_Object = MibTableColumn
wtWebioEA2x2ERPInputNo = _WtWebioEA2x2ERPInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 3, 1, 1),
    _WtWebioEA2x2ERPInputNo_Type()
)
wtWebioEA2x2ERPInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputNo.setStatus("mandatory")


class _WtWebioEA2x2ERPInputCounter_Type(Integer32):
    """Custom type wtWebioEA2x2ERPInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2ERPInputCounter_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPInputCounter_Object = MibTableColumn
wtWebioEA2x2ERPInputCounter = _WtWebioEA2x2ERPInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 3, 1, 2),
    _WtWebioEA2x2ERPInputCounter_Type()
)
wtWebioEA2x2ERPInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputCounter.setStatus("mandatory")
_WtWebioEA2x2ERPInputCounterClear_Type = Integer32
_WtWebioEA2x2ERPInputCounterClear_Object = MibTableColumn
wtWebioEA2x2ERPInputCounterClear = _WtWebioEA2x2ERPInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 3, 1, 3),
    _WtWebioEA2x2ERPInputCounterClear_Type()
)
wtWebioEA2x2ERPInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputCounterClear.setStatus("mandatory")


class _WtWebioEA2x2ERPInputState_Type(Integer32):
    """Custom type wtWebioEA2x2ERPInputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPInputState-OFF", 0),
          ("wtWebioEA2x2ERPInputState-ON", 1))
    )


_WtWebioEA2x2ERPInputState_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPInputState_Object = MibTableColumn
wtWebioEA2x2ERPInputState = _WtWebioEA2x2ERPInputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 3, 1, 4),
    _WtWebioEA2x2ERPInputState_Type()
)
wtWebioEA2x2ERPInputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputState.setStatus("mandatory")
_WtWebioEA2x2ERPInputValue_Type = Integer32
_WtWebioEA2x2ERPInputValue_Object = MibScalar
wtWebioEA2x2ERPInputValue = _WtWebioEA2x2ERPInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 4),
    _WtWebioEA2x2ERPInputValue_Type()
)
wtWebioEA2x2ERPInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputValue.setStatus("mandatory")
_WtWebioEA2x2ERPOutputTable_Object = MibTable
wtWebioEA2x2ERPOutputTable = _WtWebioEA2x2ERPOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputTable.setStatus("mandatory")
_WtWebioEA2x2ERPOutputEntry_Object = MibTableRow
wtWebioEA2x2ERPOutputEntry = _WtWebioEA2x2ERPOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 5, 1)
)
wtWebioEA2x2ERPOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPOutputNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERPOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2ERPOutputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPOutputNo_Object = MibTableColumn
wtWebioEA2x2ERPOutputNo = _WtWebioEA2x2ERPOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 5, 1, 1),
    _WtWebioEA2x2ERPOutputNo_Type()
)
wtWebioEA2x2ERPOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputNo.setStatus("mandatory")


class _WtWebioEA2x2ERPOutputState_Type(Integer32):
    """Custom type wtWebioEA2x2ERPOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPOutputState-OFF", 0),
          ("wtWebioEA2x2ERPOutputState-ON", 1))
    )


_WtWebioEA2x2ERPOutputState_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPOutputState_Object = MibTableColumn
wtWebioEA2x2ERPOutputState = _WtWebioEA2x2ERPOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 5, 1, 2),
    _WtWebioEA2x2ERPOutputState_Type()
)
wtWebioEA2x2ERPOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputState.setStatus("mandatory")
_WtWebioEA2x2ERPOutputValue_Type = Integer32
_WtWebioEA2x2ERPOutputValue_Object = MibScalar
wtWebioEA2x2ERPOutputValue = _WtWebioEA2x2ERPOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 6),
    _WtWebioEA2x2ERPOutputValue_Type()
)
wtWebioEA2x2ERPOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputValue.setStatus("mandatory")


class _WtWebioEA2x2ERPSetOutput_Type(OctetString):
    """Custom type wtWebioEA2x2ERPSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA2x2ERPSetOutput_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPSetOutput_Object = MibScalar
wtWebioEA2x2ERPSetOutput = _WtWebioEA2x2ERPSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 1, 7),
    _WtWebioEA2x2ERPSetOutput_Type()
)
wtWebioEA2x2ERPSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSetOutput.setStatus("mandatory")
_WtWebioEA2x2ERPSessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPSessCntrl = _WtWebioEA2x2ERPSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 2)
)
_WtWebioEA2x2ERPSessCntrlPassword_Type = OctetString
_WtWebioEA2x2ERPSessCntrlPassword_Object = MibScalar
wtWebioEA2x2ERPSessCntrlPassword = _WtWebioEA2x2ERPSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 2, 1),
    _WtWebioEA2x2ERPSessCntrlPassword_Type()
)
wtWebioEA2x2ERPSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSessCntrlPassword.setStatus("mandatory")


class _WtWebioEA2x2ERPSessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA2x2ERPSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPSessCntrl-NoSession", 0),
          ("wtWebioEA2x2ERPSessCntrl-Session", 1))
    )


_WtWebioEA2x2ERPSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPSessCntrlConfigMode_Object = MibScalar
wtWebioEA2x2ERPSessCntrlConfigMode = _WtWebioEA2x2ERPSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 2, 2),
    _WtWebioEA2x2ERPSessCntrlConfigMode_Type()
)
wtWebioEA2x2ERPSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA2x2ERPSessCntrlLogout_Type = Integer32
_WtWebioEA2x2ERPSessCntrlLogout_Object = MibScalar
wtWebioEA2x2ERPSessCntrlLogout = _WtWebioEA2x2ERPSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 2, 3),
    _WtWebioEA2x2ERPSessCntrlLogout_Type()
)
wtWebioEA2x2ERPSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSessCntrlLogout.setStatus("mandatory")
_WtWebioEA2x2ERPSessCntrlAdminPassword_Type = OctetString
_WtWebioEA2x2ERPSessCntrlAdminPassword_Object = MibScalar
wtWebioEA2x2ERPSessCntrlAdminPassword = _WtWebioEA2x2ERPSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 2, 4),
    _WtWebioEA2x2ERPSessCntrlAdminPassword_Type()
)
wtWebioEA2x2ERPSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA2x2ERPSessCntrlConfigPassword_Type = OctetString
_WtWebioEA2x2ERPSessCntrlConfigPassword_Object = MibScalar
wtWebioEA2x2ERPSessCntrlConfigPassword = _WtWebioEA2x2ERPSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 2, 5),
    _WtWebioEA2x2ERPSessCntrlConfigPassword_Type()
)
wtWebioEA2x2ERPSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA2x2ERPConfig_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPConfig = _WtWebioEA2x2ERPConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3)
)
_WtWebioEA2x2ERPDevice_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPDevice = _WtWebioEA2x2ERPDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1)
)
_WtWebioEA2x2ERPText_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPText = _WtWebioEA2x2ERPText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 1)
)
_WtWebioEA2x2ERPDeviceName_Type = OctetString
_WtWebioEA2x2ERPDeviceName_Object = MibScalar
wtWebioEA2x2ERPDeviceName = _WtWebioEA2x2ERPDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 1, 1),
    _WtWebioEA2x2ERPDeviceName_Type()
)
wtWebioEA2x2ERPDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDeviceName.setStatus("mandatory")
_WtWebioEA2x2ERPDeviceText_Type = OctetString
_WtWebioEA2x2ERPDeviceText_Object = MibScalar
wtWebioEA2x2ERPDeviceText = _WtWebioEA2x2ERPDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 1, 2),
    _WtWebioEA2x2ERPDeviceText_Type()
)
wtWebioEA2x2ERPDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDeviceText.setStatus("mandatory")
_WtWebioEA2x2ERPDeviceLocation_Type = OctetString
_WtWebioEA2x2ERPDeviceLocation_Object = MibScalar
wtWebioEA2x2ERPDeviceLocation = _WtWebioEA2x2ERPDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 1, 3),
    _WtWebioEA2x2ERPDeviceLocation_Type()
)
wtWebioEA2x2ERPDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDeviceLocation.setStatus("mandatory")
_WtWebioEA2x2ERPDeviceContact_Type = OctetString
_WtWebioEA2x2ERPDeviceContact_Object = MibScalar
wtWebioEA2x2ERPDeviceContact = _WtWebioEA2x2ERPDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 1, 4),
    _WtWebioEA2x2ERPDeviceContact_Type()
)
wtWebioEA2x2ERPDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDeviceContact.setStatus("mandatory")
_WtWebioEA2x2ERPTimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPTimeDate = _WtWebioEA2x2ERPTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2)
)
_WtWebioEA2x2ERPTimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPTimeZone = _WtWebioEA2x2ERPTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1)
)
_WtWebioEA2x2ERPTzOffsetHrs_Type = Integer32
_WtWebioEA2x2ERPTzOffsetHrs_Object = MibScalar
wtWebioEA2x2ERPTzOffsetHrs = _WtWebioEA2x2ERPTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 1),
    _WtWebioEA2x2ERPTzOffsetHrs_Type()
)
wtWebioEA2x2ERPTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2ERPTzOffsetMin_Type = Integer32
_WtWebioEA2x2ERPTzOffsetMin_Object = MibScalar
wtWebioEA2x2ERPTzOffsetMin = _WtWebioEA2x2ERPTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 2),
    _WtWebioEA2x2ERPTzOffsetMin_Type()
)
wtWebioEA2x2ERPTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2ERPTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERPTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPTzEnable_Object = MibScalar
wtWebioEA2x2ERPTzEnable = _WtWebioEA2x2ERPTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 3),
    _WtWebioEA2x2ERPTzEnable_Type()
)
wtWebioEA2x2ERPTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTzEnable.setStatus("mandatory")
_WtWebioEA2x2ERPStTzOffsetHrs_Type = Integer32
_WtWebioEA2x2ERPStTzOffsetHrs_Object = MibScalar
wtWebioEA2x2ERPStTzOffsetHrs = _WtWebioEA2x2ERPStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 4),
    _WtWebioEA2x2ERPStTzOffsetHrs_Type()
)
wtWebioEA2x2ERPStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2ERPStTzOffsetMin_Type = Integer32
_WtWebioEA2x2ERPStTzOffsetMin_Object = MibScalar
wtWebioEA2x2ERPStTzOffsetMin = _WtWebioEA2x2ERPStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 5),
    _WtWebioEA2x2ERPStTzOffsetMin_Type()
)
wtWebioEA2x2ERPStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERPStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPStTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPStTzEnable_Object = MibScalar
wtWebioEA2x2ERPStTzEnable = _WtWebioEA2x2ERPStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 6),
    _WtWebioEA2x2ERPStTzEnable_Type()
)
wtWebioEA2x2ERPStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzEnable.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ERPStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPStartMonth-April", 4),
          ("wtWebioEA2x2ERPStartMonth-August", 8),
          ("wtWebioEA2x2ERPStartMonth-December", 12),
          ("wtWebioEA2x2ERPStartMonth-February", 2),
          ("wtWebioEA2x2ERPStartMonth-January", 1),
          ("wtWebioEA2x2ERPStartMonth-July", 7),
          ("wtWebioEA2x2ERPStartMonth-June", 6),
          ("wtWebioEA2x2ERPStartMonth-March", 3),
          ("wtWebioEA2x2ERPStartMonth-May", 5),
          ("wtWebioEA2x2ERPStartMonth-November", 11),
          ("wtWebioEA2x2ERPStartMonth-October", 10),
          ("wtWebioEA2x2ERPStartMonth-September", 9))
    )


_WtWebioEA2x2ERPStTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPStTzStartMonth_Object = MibScalar
wtWebioEA2x2ERPStTzStartMonth = _WtWebioEA2x2ERPStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 7),
    _WtWebioEA2x2ERPStTzStartMonth_Type()
)
wtWebioEA2x2ERPStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStartMonth.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzStartMode_Type(Integer32):
    """Custom type wtWebioEA2x2ERPStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPStartMode-first", 1),
          ("wtWebioEA2x2ERPStartMode-fourth", 4),
          ("wtWebioEA2x2ERPStartMode-last", 5),
          ("wtWebioEA2x2ERPStartMode-second", 2),
          ("wtWebioEA2x2ERPStartMode-third", 3))
    )


_WtWebioEA2x2ERPStTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPStTzStartMode_Object = MibScalar
wtWebioEA2x2ERPStTzStartMode = _WtWebioEA2x2ERPStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 8),
    _WtWebioEA2x2ERPStTzStartMode_Type()
)
wtWebioEA2x2ERPStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStartMode.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzStartWday_Type(Integer32):
    """Custom type wtWebioEA2x2ERPStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPStartWday-Friday", 6),
          ("wtWebioEA2x2ERPStartWday-Monday", 2),
          ("wtWebioEA2x2ERPStartWday-Saturday", 7),
          ("wtWebioEA2x2ERPStartWday-Sunday", 1),
          ("wtWebioEA2x2ERPStartWday-Thursday", 4),
          ("wtWebioEA2x2ERPStartWday-Tuesday", 3),
          ("wtWebioEA2x2ERPStartWday-Wednesday", 5))
    )


_WtWebioEA2x2ERPStTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPStTzStartWday_Object = MibScalar
wtWebioEA2x2ERPStTzStartWday = _WtWebioEA2x2ERPStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 9),
    _WtWebioEA2x2ERPStTzStartWday_Type()
)
wtWebioEA2x2ERPStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStartWday.setStatus("mandatory")
_WtWebioEA2x2ERPStTzStartHrs_Type = Integer32
_WtWebioEA2x2ERPStTzStartHrs_Object = MibScalar
wtWebioEA2x2ERPStTzStartHrs = _WtWebioEA2x2ERPStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 10),
    _WtWebioEA2x2ERPStTzStartHrs_Type()
)
wtWebioEA2x2ERPStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStartHrs.setStatus("mandatory")
_WtWebioEA2x2ERPStTzStartMin_Type = Integer32
_WtWebioEA2x2ERPStTzStartMin_Object = MibScalar
wtWebioEA2x2ERPStTzStartMin = _WtWebioEA2x2ERPStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 11),
    _WtWebioEA2x2ERPStTzStartMin_Type()
)
wtWebioEA2x2ERPStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStartMin.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ERPStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPStopMonth-April", 4),
          ("wtWebioEA2x2ERPStopMonth-August", 8),
          ("wtWebioEA2x2ERPStopMonth-December", 12),
          ("wtWebioEA2x2ERPStopMonth-February", 2),
          ("wtWebioEA2x2ERPStopMonth-January", 1),
          ("wtWebioEA2x2ERPStopMonth-July", 7),
          ("wtWebioEA2x2ERPStopMonth-June", 6),
          ("wtWebioEA2x2ERPStopMonth-March", 3),
          ("wtWebioEA2x2ERPStopMonth-May", 5),
          ("wtWebioEA2x2ERPStopMonth-November", 11),
          ("wtWebioEA2x2ERPStopMonth-October", 10),
          ("wtWebioEA2x2ERPStopMonth-September", 9))
    )


_WtWebioEA2x2ERPStTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPStTzStopMonth_Object = MibScalar
wtWebioEA2x2ERPStTzStopMonth = _WtWebioEA2x2ERPStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 12),
    _WtWebioEA2x2ERPStTzStopMonth_Type()
)
wtWebioEA2x2ERPStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStopMonth.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzStopMode_Type(Integer32):
    """Custom type wtWebioEA2x2ERPStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPStopMode-first", 1),
          ("wtWebioEA2x2ERPStopMode-fourth", 4),
          ("wtWebioEA2x2ERPStopMode-last", 5),
          ("wtWebioEA2x2ERPStopMode-second", 2),
          ("wtWebioEA2x2ERPStopMode-third", 3))
    )


_WtWebioEA2x2ERPStTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPStTzStopMode_Object = MibScalar
wtWebioEA2x2ERPStTzStopMode = _WtWebioEA2x2ERPStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 13),
    _WtWebioEA2x2ERPStTzStopMode_Type()
)
wtWebioEA2x2ERPStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStopMode.setStatus("mandatory")


class _WtWebioEA2x2ERPStTzStopWday_Type(Integer32):
    """Custom type wtWebioEA2x2ERPStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPStopWday-Friday", 6),
          ("wtWebioEA2x2ERPStopWday-Monday", 2),
          ("wtWebioEA2x2ERPStopWday-Saturday", 7),
          ("wtWebioEA2x2ERPStopWday-Sunday", 1),
          ("wtWebioEA2x2ERPStopWday-Thursday", 4),
          ("wtWebioEA2x2ERPStopWday-Tuesday", 3),
          ("wtWebioEA2x2ERPStopWday-Wednesday", 5))
    )


_WtWebioEA2x2ERPStTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPStTzStopWday_Object = MibScalar
wtWebioEA2x2ERPStTzStopWday = _WtWebioEA2x2ERPStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 14),
    _WtWebioEA2x2ERPStTzStopWday_Type()
)
wtWebioEA2x2ERPStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStopWday.setStatus("mandatory")
_WtWebioEA2x2ERPStTzStopHrs_Type = Integer32
_WtWebioEA2x2ERPStTzStopHrs_Object = MibScalar
wtWebioEA2x2ERPStTzStopHrs = _WtWebioEA2x2ERPStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 15),
    _WtWebioEA2x2ERPStTzStopHrs_Type()
)
wtWebioEA2x2ERPStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStopHrs.setStatus("mandatory")
_WtWebioEA2x2ERPStTzStopMin_Type = Integer32
_WtWebioEA2x2ERPStTzStopMin_Object = MibScalar
wtWebioEA2x2ERPStTzStopMin = _WtWebioEA2x2ERPStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 1, 16),
    _WtWebioEA2x2ERPStTzStopMin_Type()
)
wtWebioEA2x2ERPStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStTzStopMin.setStatus("mandatory")
_WtWebioEA2x2ERPTimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPTimeServer = _WtWebioEA2x2ERPTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 2)
)
_WtWebioEA2x2ERPTimeServer1_Type = OctetString
_WtWebioEA2x2ERPTimeServer1_Object = MibScalar
wtWebioEA2x2ERPTimeServer1 = _WtWebioEA2x2ERPTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 2, 1),
    _WtWebioEA2x2ERPTimeServer1_Type()
)
wtWebioEA2x2ERPTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTimeServer1.setStatus("mandatory")
_WtWebioEA2x2ERPTimeServer2_Type = OctetString
_WtWebioEA2x2ERPTimeServer2_Object = MibScalar
wtWebioEA2x2ERPTimeServer2 = _WtWebioEA2x2ERPTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 2, 2),
    _WtWebioEA2x2ERPTimeServer2_Type()
)
wtWebioEA2x2ERPTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTimeServer2.setStatus("mandatory")


class _WtWebioEA2x2ERPTsEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERPTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPTsEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPTsEnable_Object = MibScalar
wtWebioEA2x2ERPTsEnable = _WtWebioEA2x2ERPTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 2, 3),
    _WtWebioEA2x2ERPTsEnable_Type()
)
wtWebioEA2x2ERPTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTsEnable.setStatus("mandatory")
_WtWebioEA2x2ERPTsSyncTime_Type = Integer32
_WtWebioEA2x2ERPTsSyncTime_Object = MibScalar
wtWebioEA2x2ERPTsSyncTime = _WtWebioEA2x2ERPTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 2, 4),
    _WtWebioEA2x2ERPTsSyncTime_Type()
)
wtWebioEA2x2ERPTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPTsSyncTime.setStatus("mandatory")
_WtWebioEA2x2ERPDeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPDeviceClock = _WtWebioEA2x2ERPDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 3)
)


class _WtWebioEA2x2ERPClockHrs_Type(Integer32):
    """Custom type wtWebioEA2x2ERPClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA2x2ERPClockHrs_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPClockHrs_Object = MibScalar
wtWebioEA2x2ERPClockHrs = _WtWebioEA2x2ERPClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 3, 1),
    _WtWebioEA2x2ERPClockHrs_Type()
)
wtWebioEA2x2ERPClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPClockHrs.setStatus("mandatory")


class _WtWebioEA2x2ERPClockMin_Type(Integer32):
    """Custom type wtWebioEA2x2ERPClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA2x2ERPClockMin_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPClockMin_Object = MibScalar
wtWebioEA2x2ERPClockMin = _WtWebioEA2x2ERPClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 3, 2),
    _WtWebioEA2x2ERPClockMin_Type()
)
wtWebioEA2x2ERPClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPClockMin.setStatus("mandatory")


class _WtWebioEA2x2ERPClockDay_Type(Integer32):
    """Custom type wtWebioEA2x2ERPClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA2x2ERPClockDay_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPClockDay_Object = MibScalar
wtWebioEA2x2ERPClockDay = _WtWebioEA2x2ERPClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 3, 3),
    _WtWebioEA2x2ERPClockDay_Type()
)
wtWebioEA2x2ERPClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPClockDay.setStatus("mandatory")


class _WtWebioEA2x2ERPClockMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ERPClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERPClockMonth-April", 4),
          ("wtWebioEA2x2ERPClockMonth-August", 8),
          ("wtWebioEA2x2ERPClockMonth-December", 12),
          ("wtWebioEA2x2ERPClockMonth-February", 2),
          ("wtWebioEA2x2ERPClockMonth-January", 1),
          ("wtWebioEA2x2ERPClockMonth-July", 7),
          ("wtWebioEA2x2ERPClockMonth-June", 6),
          ("wtWebioEA2x2ERPClockMonth-March", 3),
          ("wtWebioEA2x2ERPClockMonth-May", 5),
          ("wtWebioEA2x2ERPClockMonth-November", 11),
          ("wtWebioEA2x2ERPClockMonth-October", 10),
          ("wtWebioEA2x2ERPClockMonth-September", 9))
    )


_WtWebioEA2x2ERPClockMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPClockMonth_Object = MibScalar
wtWebioEA2x2ERPClockMonth = _WtWebioEA2x2ERPClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 3, 4),
    _WtWebioEA2x2ERPClockMonth_Type()
)
wtWebioEA2x2ERPClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPClockMonth.setStatus("mandatory")


class _WtWebioEA2x2ERPClockYear_Type(Integer32):
    """Custom type wtWebioEA2x2ERPClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERPClockYear_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPClockYear_Object = MibScalar
wtWebioEA2x2ERPClockYear = _WtWebioEA2x2ERPClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 2, 3, 5),
    _WtWebioEA2x2ERPClockYear_Type()
)
wtWebioEA2x2ERPClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPClockYear.setStatus("mandatory")
_WtWebioEA2x2ERPBasic_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPBasic = _WtWebioEA2x2ERPBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3)
)
_WtWebioEA2x2ERPNetwork_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPNetwork = _WtWebioEA2x2ERPNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1)
)
_WtWebioEA2x2ERPIpAddress_Type = IpAddress
_WtWebioEA2x2ERPIpAddress_Object = MibScalar
wtWebioEA2x2ERPIpAddress = _WtWebioEA2x2ERPIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1, 1),
    _WtWebioEA2x2ERPIpAddress_Type()
)
wtWebioEA2x2ERPIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPIpAddress.setStatus("mandatory")
_WtWebioEA2x2ERPSubnetMask_Type = IpAddress
_WtWebioEA2x2ERPSubnetMask_Object = MibScalar
wtWebioEA2x2ERPSubnetMask = _WtWebioEA2x2ERPSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1, 2),
    _WtWebioEA2x2ERPSubnetMask_Type()
)
wtWebioEA2x2ERPSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSubnetMask.setStatus("mandatory")
_WtWebioEA2x2ERPGateway_Type = IpAddress
_WtWebioEA2x2ERPGateway_Object = MibScalar
wtWebioEA2x2ERPGateway = _WtWebioEA2x2ERPGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1, 3),
    _WtWebioEA2x2ERPGateway_Type()
)
wtWebioEA2x2ERPGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPGateway.setStatus("mandatory")
_WtWebioEA2x2ERPDnsServer1_Type = OctetString
_WtWebioEA2x2ERPDnsServer1_Object = MibScalar
wtWebioEA2x2ERPDnsServer1 = _WtWebioEA2x2ERPDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1, 4),
    _WtWebioEA2x2ERPDnsServer1_Type()
)
wtWebioEA2x2ERPDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDnsServer1.setStatus("mandatory")
_WtWebioEA2x2ERPDnsServer2_Type = OctetString
_WtWebioEA2x2ERPDnsServer2_Object = MibScalar
wtWebioEA2x2ERPDnsServer2 = _WtWebioEA2x2ERPDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1, 5),
    _WtWebioEA2x2ERPDnsServer2_Type()
)
wtWebioEA2x2ERPDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDnsServer2.setStatus("mandatory")
_WtWebioEA2x2ERPAddConfig_Type = OctetString
_WtWebioEA2x2ERPAddConfig_Object = MibScalar
wtWebioEA2x2ERPAddConfig = _WtWebioEA2x2ERPAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 1, 6),
    _WtWebioEA2x2ERPAddConfig_Type()
)
wtWebioEA2x2ERPAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAddConfig.setStatus("mandatory")
_WtWebioEA2x2ERPHTTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPHTTP = _WtWebioEA2x2ERPHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 2)
)
_WtWebioEA2x2ERPStartup_Type = OctetString
_WtWebioEA2x2ERPStartup_Object = MibScalar
wtWebioEA2x2ERPStartup = _WtWebioEA2x2ERPStartup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 2, 1),
    _WtWebioEA2x2ERPStartup_Type()
)
wtWebioEA2x2ERPStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPStartup.setStatus("mandatory")
_WtWebioEA2x2ERPGetHeaderEnable_Type = OctetString
_WtWebioEA2x2ERPGetHeaderEnable_Object = MibScalar
wtWebioEA2x2ERPGetHeaderEnable = _WtWebioEA2x2ERPGetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 2, 2),
    _WtWebioEA2x2ERPGetHeaderEnable_Type()
)
wtWebioEA2x2ERPGetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPGetHeaderEnable.setStatus("mandatory")


class _WtWebioEA2x2ERPHttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPHttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPHttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPHttpInputTrigger_Object = MibScalar
wtWebioEA2x2ERPHttpInputTrigger = _WtWebioEA2x2ERPHttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 2, 3),
    _WtWebioEA2x2ERPHttpInputTrigger_Type()
)
wtWebioEA2x2ERPHttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPHttpInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERPHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA2x2ERPHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPHttpPort_Object = MibScalar
wtWebioEA2x2ERPHttpPort = _WtWebioEA2x2ERPHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 2, 4),
    _WtWebioEA2x2ERPHttpPort_Type()
)
wtWebioEA2x2ERPHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPHttpPort.setStatus("mandatory")
_WtWebioEA2x2ERPMail_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPMail = _WtWebioEA2x2ERPMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3)
)
_WtWebioEA2x2ERPMailAdName_Type = OctetString
_WtWebioEA2x2ERPMailAdName_Object = MibScalar
wtWebioEA2x2ERPMailAdName = _WtWebioEA2x2ERPMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 1),
    _WtWebioEA2x2ERPMailAdName_Type()
)
wtWebioEA2x2ERPMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailAdName.setStatus("mandatory")
_WtWebioEA2x2ERPMailReply_Type = OctetString
_WtWebioEA2x2ERPMailReply_Object = MibScalar
wtWebioEA2x2ERPMailReply = _WtWebioEA2x2ERPMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 2),
    _WtWebioEA2x2ERPMailReply_Type()
)
wtWebioEA2x2ERPMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailReply.setStatus("mandatory")
_WtWebioEA2x2ERPMailServer_Type = OctetString
_WtWebioEA2x2ERPMailServer_Object = MibScalar
wtWebioEA2x2ERPMailServer = _WtWebioEA2x2ERPMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 3),
    _WtWebioEA2x2ERPMailServer_Type()
)
wtWebioEA2x2ERPMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailServer.setStatus("mandatory")
_WtWebioEA2x2ERPMailEnable_Type = OctetString
_WtWebioEA2x2ERPMailEnable_Object = MibScalar
wtWebioEA2x2ERPMailEnable = _WtWebioEA2x2ERPMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 4),
    _WtWebioEA2x2ERPMailEnable_Type()
)
wtWebioEA2x2ERPMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailEnable.setStatus("mandatory")


class _WtWebioEA2x2ERPMailAuthentication_Type(OctetString):
    """Custom type wtWebioEA2x2ERPMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPMailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPMailAuthentication_Object = MibScalar
wtWebioEA2x2ERPMailAuthentication = _WtWebioEA2x2ERPMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 5),
    _WtWebioEA2x2ERPMailAuthentication_Type()
)
wtWebioEA2x2ERPMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailAuthentication.setStatus("mandatory")
_WtWebioEA2x2ERPMailAuthUser_Type = OctetString
_WtWebioEA2x2ERPMailAuthUser_Object = MibScalar
wtWebioEA2x2ERPMailAuthUser = _WtWebioEA2x2ERPMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 6),
    _WtWebioEA2x2ERPMailAuthUser_Type()
)
wtWebioEA2x2ERPMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailAuthUser.setStatus("mandatory")
_WtWebioEA2x2ERPMailAuthPassword_Type = OctetString
_WtWebioEA2x2ERPMailAuthPassword_Object = MibScalar
wtWebioEA2x2ERPMailAuthPassword = _WtWebioEA2x2ERPMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 7),
    _WtWebioEA2x2ERPMailAuthPassword_Type()
)
wtWebioEA2x2ERPMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailAuthPassword.setStatus("mandatory")
_WtWebioEA2x2ERPMailPop3Server_Type = OctetString
_WtWebioEA2x2ERPMailPop3Server_Object = MibScalar
wtWebioEA2x2ERPMailPop3Server = _WtWebioEA2x2ERPMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 3, 8),
    _WtWebioEA2x2ERPMailPop3Server_Type()
)
wtWebioEA2x2ERPMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMailPop3Server.setStatus("mandatory")
_WtWebioEA2x2ERPSNMP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPSNMP = _WtWebioEA2x2ERPSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 4)
)
_WtWebioEA2x2ERPSnmpEnable_Type = OctetString
_WtWebioEA2x2ERPSnmpEnable_Object = MibScalar
wtWebioEA2x2ERPSnmpEnable = _WtWebioEA2x2ERPSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 4, 1),
    _WtWebioEA2x2ERPSnmpEnable_Type()
)
wtWebioEA2x2ERPSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSnmpEnable.setStatus("mandatory")
_WtWebioEA2x2ERPSnmpCommunityStringRead_Type = OctetString
_WtWebioEA2x2ERPSnmpCommunityStringRead_Object = MibScalar
wtWebioEA2x2ERPSnmpCommunityStringRead = _WtWebioEA2x2ERPSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 4, 2),
    _WtWebioEA2x2ERPSnmpCommunityStringRead_Type()
)
wtWebioEA2x2ERPSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA2x2ERPSnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA2x2ERPSnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA2x2ERPSnmpCommunityStringReadWrite = _WtWebioEA2x2ERPSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 4, 3),
    _WtWebioEA2x2ERPSnmpCommunityStringReadWrite_Type()
)
wtWebioEA2x2ERPSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA2x2ERPSnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA2x2ERPSnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA2x2ERPSnmpSystemTrapManagerIP = _WtWebioEA2x2ERPSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 4, 4),
    _WtWebioEA2x2ERPSnmpSystemTrapManagerIP_Type()
)
wtWebioEA2x2ERPSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA2x2ERPSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERPSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPSnmpSystemTrapEnable_Object = MibScalar
wtWebioEA2x2ERPSnmpSystemTrapEnable = _WtWebioEA2x2ERPSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 4, 5),
    _WtWebioEA2x2ERPSnmpSystemTrapEnable_Type()
)
wtWebioEA2x2ERPSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA2x2ERPUDP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPUDP = _WtWebioEA2x2ERPUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 5)
)
_WtWebioEA2x2ERPUdpAdminPort_Type = Integer32
_WtWebioEA2x2ERPUdpAdminPort_Object = MibScalar
wtWebioEA2x2ERPUdpAdminPort = _WtWebioEA2x2ERPUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 5, 1),
    _WtWebioEA2x2ERPUdpAdminPort_Type()
)
wtWebioEA2x2ERPUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPUdpAdminPort.setStatus("mandatory")
_WtWebioEA2x2ERPUdpEnable_Type = OctetString
_WtWebioEA2x2ERPUdpEnable_Object = MibScalar
wtWebioEA2x2ERPUdpEnable = _WtWebioEA2x2ERPUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 5, 2),
    _WtWebioEA2x2ERPUdpEnable_Type()
)
wtWebioEA2x2ERPUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPUdpEnable.setStatus("mandatory")
_WtWebioEA2x2ERPUdpRemotePort_Type = Integer32
_WtWebioEA2x2ERPUdpRemotePort_Object = MibScalar
wtWebioEA2x2ERPUdpRemotePort = _WtWebioEA2x2ERPUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 5, 3),
    _WtWebioEA2x2ERPUdpRemotePort_Type()
)
wtWebioEA2x2ERPUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPUdpRemotePort.setStatus("mandatory")
_WtWebioEA2x2ERPBinary_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPBinary = _WtWebioEA2x2ERPBinary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6)
)


class _WtWebioEA2x2ERPBinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERPBinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryModeCount_Object = MibScalar
wtWebioEA2x2ERPBinaryModeCount = _WtWebioEA2x2ERPBinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 1),
    _WtWebioEA2x2ERPBinaryModeCount_Type()
)
wtWebioEA2x2ERPBinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryModeCount.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryIfTable_Object = MibTable
wtWebioEA2x2ERPBinaryIfTable = _WtWebioEA2x2ERPBinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryIfTable.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryIfEntry_Object = MibTableRow
wtWebioEA2x2ERPBinaryIfEntry = _WtWebioEA2x2ERPBinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 2, 1)
)
wtWebioEA2x2ERPBinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryIfEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERPBinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryModeNo_Object = MibTableColumn
wtWebioEA2x2ERPBinaryModeNo = _WtWebioEA2x2ERPBinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA2x2ERPBinaryModeNo_Type()
)
wtWebioEA2x2ERPBinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryModeNo.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryTable_Object = MibTable
wtWebioEA2x2ERPBinaryTable = _WtWebioEA2x2ERPBinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTable.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryEntry_Object = MibTableRow
wtWebioEA2x2ERPBinaryEntry = _WtWebioEA2x2ERPBinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1)
)
wtWebioEA2x2ERPBinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryOperationMode_Object = MibTableColumn
wtWebioEA2x2ERPBinaryOperationMode = _WtWebioEA2x2ERPBinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA2x2ERPBinaryOperationMode_Type()
)
wtWebioEA2x2ERPBinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryOperationMode.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpServerLocalPort = _WtWebioEA2x2ERPBinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA2x2ERPBinaryTcpServerLocalPort_Type()
)
wtWebioEA2x2ERPBinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpServerInputTrigger = _WtWebioEA2x2ERPBinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA2x2ERPBinaryTcpServerInputTrigger_Type()
)
wtWebioEA2x2ERPBinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpServerApplicationMode = _WtWebioEA2x2ERPBinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA2x2ERPBinaryTcpServerApplicationMode_Type()
)
wtWebioEA2x2ERPBinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientLocalPort = _WtWebioEA2x2ERPBinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA2x2ERPBinaryTcpClientLocalPort_Type()
)
wtWebioEA2x2ERPBinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientServerPort = _WtWebioEA2x2ERPBinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA2x2ERPBinaryTcpClientServerPort_Type()
)
wtWebioEA2x2ERPBinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA2x2ERPBinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientServerIpAddr = _WtWebioEA2x2ERPBinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA2x2ERPBinaryTcpClientServerIpAddr_Type()
)
wtWebioEA2x2ERPBinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA2x2ERPBinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientServerPassword = _WtWebioEA2x2ERPBinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA2x2ERPBinaryTcpClientServerPassword_Type()
)
wtWebioEA2x2ERPBinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryTcpClientInactivity_Type = Integer32
_WtWebioEA2x2ERPBinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientInactivity = _WtWebioEA2x2ERPBinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA2x2ERPBinaryTcpClientInactivity_Type()
)
wtWebioEA2x2ERPBinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientInputTrigger = _WtWebioEA2x2ERPBinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA2x2ERPBinaryTcpClientInputTrigger_Type()
)
wtWebioEA2x2ERPBinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERPBinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientInterval = _WtWebioEA2x2ERPBinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA2x2ERPBinaryTcpClientInterval_Type()
)
wtWebioEA2x2ERPBinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientApplicationMode = _WtWebioEA2x2ERPBinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA2x2ERPBinaryTcpClientApplicationMode_Type()
)
wtWebioEA2x2ERPBinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryUdpPeerLocalPort = _WtWebioEA2x2ERPBinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA2x2ERPBinaryUdpPeerLocalPort_Type()
)
wtWebioEA2x2ERPBinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryUdpPeerRemotePort = _WtWebioEA2x2ERPBinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA2x2ERPBinaryUdpPeerRemotePort_Type()
)
wtWebioEA2x2ERPBinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr = _WtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERPBinaryUdpPeerInputTrigger = _WtWebioEA2x2ERPBinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA2x2ERPBinaryUdpPeerInputTrigger_Type()
)
wtWebioEA2x2ERPBinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERPBinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA2x2ERPBinaryUdpPeerInterval = _WtWebioEA2x2ERPBinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA2x2ERPBinaryUdpPeerInterval_Type()
)
wtWebioEA2x2ERPBinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERPBinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPBinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPBinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA2x2ERPBinaryUdpPeerApplicationMode = _WtWebioEA2x2ERPBinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA2x2ERPBinaryUdpPeerApplicationMode_Type()
)
wtWebioEA2x2ERPBinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryConnectedPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryConnectedPort = _WtWebioEA2x2ERPBinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA2x2ERPBinaryConnectedPort_Type()
)
wtWebioEA2x2ERPBinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryConnectedPort.setStatus("mandatory")
_WtWebioEA2x2ERPBinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA2x2ERPBinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA2x2ERPBinaryConnectedIpAddr = _WtWebioEA2x2ERPBinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA2x2ERPBinaryConnectedIpAddr_Type()
)
wtWebioEA2x2ERPBinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpServerClientHttpPort = _WtWebioEA2x2ERPBinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA2x2ERPBinaryTcpServerClientHttpPort_Type()
)
wtWebioEA2x2ERPBinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA2x2ERPBinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPBinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPBinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPBinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA2x2ERPBinaryTcpClientServerHttpPort = _WtWebioEA2x2ERPBinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA2x2ERPBinaryTcpClientServerHttpPort_Type()
)
wtWebioEA2x2ERPBinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPBinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA2x2ERPSyslog_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPSyslog = _WtWebioEA2x2ERPSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 7)
)
_WtWebioEA2x2ERPSyslogServerIP_Type = OctetString
_WtWebioEA2x2ERPSyslogServerIP_Object = MibScalar
wtWebioEA2x2ERPSyslogServerIP = _WtWebioEA2x2ERPSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 7, 1),
    _WtWebioEA2x2ERPSyslogServerIP_Type()
)
wtWebioEA2x2ERPSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSyslogServerIP.setStatus("mandatory")
_WtWebioEA2x2ERPSyslogServerPort_Type = Integer32
_WtWebioEA2x2ERPSyslogServerPort_Object = MibScalar
wtWebioEA2x2ERPSyslogServerPort = _WtWebioEA2x2ERPSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 7, 2),
    _WtWebioEA2x2ERPSyslogServerPort_Type()
)
wtWebioEA2x2ERPSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSyslogServerPort.setStatus("mandatory")


class _WtWebioEA2x2ERPSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERPSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPSyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA2x2ERPSyslogSystemMessagesEnable = _WtWebioEA2x2ERPSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 7, 3),
    _WtWebioEA2x2ERPSyslogSystemMessagesEnable_Type()
)
wtWebioEA2x2ERPSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA2x2ERPSyslogEnable_Type = OctetString
_WtWebioEA2x2ERPSyslogEnable_Object = MibScalar
wtWebioEA2x2ERPSyslogEnable = _WtWebioEA2x2ERPSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 7, 4),
    _WtWebioEA2x2ERPSyslogEnable_Type()
)
wtWebioEA2x2ERPSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSyslogEnable.setStatus("mandatory")
_WtWebioEA2x2ERPFTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPFTP = _WtWebioEA2x2ERPFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8)
)
_WtWebioEA2x2ERPFTPServerIP_Type = OctetString
_WtWebioEA2x2ERPFTPServerIP_Object = MibScalar
wtWebioEA2x2ERPFTPServerIP = _WtWebioEA2x2ERPFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 1),
    _WtWebioEA2x2ERPFTPServerIP_Type()
)
wtWebioEA2x2ERPFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPServerIP.setStatus("mandatory")
_WtWebioEA2x2ERPFTPServerControlPort_Type = Integer32
_WtWebioEA2x2ERPFTPServerControlPort_Object = MibScalar
wtWebioEA2x2ERPFTPServerControlPort = _WtWebioEA2x2ERPFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 2),
    _WtWebioEA2x2ERPFTPServerControlPort_Type()
)
wtWebioEA2x2ERPFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPServerControlPort.setStatus("mandatory")
_WtWebioEA2x2ERPFTPUserName_Type = OctetString
_WtWebioEA2x2ERPFTPUserName_Object = MibScalar
wtWebioEA2x2ERPFTPUserName = _WtWebioEA2x2ERPFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 3),
    _WtWebioEA2x2ERPFTPUserName_Type()
)
wtWebioEA2x2ERPFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPUserName.setStatus("mandatory")
_WtWebioEA2x2ERPFTPPassword_Type = OctetString
_WtWebioEA2x2ERPFTPPassword_Object = MibScalar
wtWebioEA2x2ERPFTPPassword = _WtWebioEA2x2ERPFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 4),
    _WtWebioEA2x2ERPFTPPassword_Type()
)
wtWebioEA2x2ERPFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPPassword.setStatus("mandatory")
_WtWebioEA2x2ERPFTPAccount_Type = OctetString
_WtWebioEA2x2ERPFTPAccount_Object = MibScalar
wtWebioEA2x2ERPFTPAccount = _WtWebioEA2x2ERPFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 5),
    _WtWebioEA2x2ERPFTPAccount_Type()
)
wtWebioEA2x2ERPFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPAccount.setStatus("mandatory")
_WtWebioEA2x2ERPFTPOption_Type = OctetString
_WtWebioEA2x2ERPFTPOption_Object = MibScalar
wtWebioEA2x2ERPFTPOption = _WtWebioEA2x2ERPFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 6),
    _WtWebioEA2x2ERPFTPOption_Type()
)
wtWebioEA2x2ERPFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPOption.setStatus("mandatory")
_WtWebioEA2x2ERPFTPEnable_Type = OctetString
_WtWebioEA2x2ERPFTPEnable_Object = MibScalar
wtWebioEA2x2ERPFTPEnable = _WtWebioEA2x2ERPFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 8, 7),
    _WtWebioEA2x2ERPFTPEnable_Type()
)
wtWebioEA2x2ERPFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPFTPEnable.setStatus("mandatory")
_WtWebioEA2x2ERPWayBack_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPWayBack = _WtWebioEA2x2ERPWayBack_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 10)
)
_WtWebioEA2x2ERPWayBackEnable_Type = OctetString
_WtWebioEA2x2ERPWayBackEnable_Object = MibScalar
wtWebioEA2x2ERPWayBackEnable = _WtWebioEA2x2ERPWayBackEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 10, 1),
    _WtWebioEA2x2ERPWayBackEnable_Type()
)
wtWebioEA2x2ERPWayBackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPWayBackEnable.setStatus("mandatory")
_WtWebioEA2x2ERPWayBackServerControlPort_Type = Integer32
_WtWebioEA2x2ERPWayBackServerControlPort_Object = MibScalar
wtWebioEA2x2ERPWayBackServerControlPort = _WtWebioEA2x2ERPWayBackServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 10, 2),
    _WtWebioEA2x2ERPWayBackServerControlPort_Type()
)
wtWebioEA2x2ERPWayBackServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPWayBackServerControlPort.setStatus("mandatory")
_WtWebioEA2x2ERPWayBackFTPPassword_Type = OctetString
_WtWebioEA2x2ERPWayBackFTPPassword_Object = MibScalar
wtWebioEA2x2ERPWayBackFTPPassword = _WtWebioEA2x2ERPWayBackFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 10, 3),
    _WtWebioEA2x2ERPWayBackFTPPassword_Type()
)
wtWebioEA2x2ERPWayBackFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPWayBackFTPPassword.setStatus("mandatory")
_WtWebioEA2x2ERPWayBackFTPResponse_Type = OctetString
_WtWebioEA2x2ERPWayBackFTPResponse_Object = MibScalar
wtWebioEA2x2ERPWayBackFTPResponse = _WtWebioEA2x2ERPWayBackFTPResponse_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 10, 4),
    _WtWebioEA2x2ERPWayBackFTPResponse_Type()
)
wtWebioEA2x2ERPWayBackFTPResponse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPWayBackFTPResponse.setStatus("mandatory")
_WtWebioEA2x2ERPWayBackFTPTimeOut_Type = OctetString
_WtWebioEA2x2ERPWayBackFTPTimeOut_Object = MibScalar
wtWebioEA2x2ERPWayBackFTPTimeOut = _WtWebioEA2x2ERPWayBackFTPTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 3, 10, 5),
    _WtWebioEA2x2ERPWayBackFTPTimeOut_Type()
)
wtWebioEA2x2ERPWayBackFTPTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPWayBackFTPTimeOut.setStatus("mandatory")
_WtWebioEA2x2ERPOutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPOutputMode = _WtWebioEA2x2ERPOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 4)
)
_WtWebioEA2x2ERPOutputModeTable_Object = MibTable
wtWebioEA2x2ERPOutputModeTable = _WtWebioEA2x2ERPOutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputModeTable.setStatus("mandatory")
_WtWebioEA2x2ERPOutputModeEntry_Object = MibTableRow
wtWebioEA2x2ERPOutputModeEntry = _WtWebioEA2x2ERPOutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 4, 1, 1)
)
wtWebioEA2x2ERPOutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputModeEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPOutputModeBit_Type(OctetString):
    """Custom type wtWebioEA2x2ERPOutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPOutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPOutputModeBit_Object = MibTableColumn
wtWebioEA2x2ERPOutputModeBit = _WtWebioEA2x2ERPOutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 4, 1, 1, 1),
    _WtWebioEA2x2ERPOutputModeBit_Type()
)
wtWebioEA2x2ERPOutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputModeBit.setStatus("mandatory")


class _WtWebioEA2x2ERPSafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA2x2ERPSafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERPSafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPSafetyTimeout_Object = MibScalar
wtWebioEA2x2ERPSafetyTimeout = _WtWebioEA2x2ERPSafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 4, 2),
    _WtWebioEA2x2ERPSafetyTimeout_Type()
)
wtWebioEA2x2ERPSafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPSafetyTimeout.setStatus("mandatory")
_WtWebioEA2x2ERPLoadControlEnable_Type = OctetString
_WtWebioEA2x2ERPLoadControlEnable_Object = MibScalar
wtWebioEA2x2ERPLoadControlEnable = _WtWebioEA2x2ERPLoadControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 4, 3),
    _WtWebioEA2x2ERPLoadControlEnable_Type()
)
wtWebioEA2x2ERPLoadControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPLoadControlEnable.setStatus("mandatory")
_WtWebioEA2x2ERPAlarm_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPAlarm = _WtWebioEA2x2ERPAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5)
)


class _WtWebioEA2x2ERPAlarmCount_Type(Integer32):
    """Custom type wtWebioEA2x2ERPAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2ERPAlarmCount_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPAlarmCount_Object = MibScalar
wtWebioEA2x2ERPAlarmCount = _WtWebioEA2x2ERPAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 1),
    _WtWebioEA2x2ERPAlarmCount_Type()
)
wtWebioEA2x2ERPAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmCount.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmIfTable_Object = MibTable
wtWebioEA2x2ERPAlarmIfTable = _WtWebioEA2x2ERPAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmIfTable.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmIfEntry_Object = MibTableRow
wtWebioEA2x2ERPAlarmIfEntry = _WtWebioEA2x2ERPAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 2, 1)
)
wtWebioEA2x2ERPAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmIfEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERPAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2ERPAlarmNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPAlarmNo_Object = MibTableColumn
wtWebioEA2x2ERPAlarmNo = _WtWebioEA2x2ERPAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 2, 1, 1),
    _WtWebioEA2x2ERPAlarmNo_Type()
)
wtWebioEA2x2ERPAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmNo.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmTable_Object = MibTable
wtWebioEA2x2ERPAlarmTable = _WtWebioEA2x2ERPAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmTable.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmEntry_Object = MibTableRow
wtWebioEA2x2ERPAlarmEntry = _WtWebioEA2x2ERPAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1)
)
wtWebioEA2x2ERPAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmEntry.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPAlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2ERPAlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPAlarmInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERPAlarmInputTrigger = _WtWebioEA2x2ERPAlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 1),
    _WtWebioEA2x2ERPAlarmInputTrigger_Type()
)
wtWebioEA2x2ERPAlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPAlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2ERPAlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPAlarmOutputTrigger_Object = MibTableColumn
wtWebioEA2x2ERPAlarmOutputTrigger = _WtWebioEA2x2ERPAlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 2),
    _WtWebioEA2x2ERPAlarmOutputTrigger_Type()
)
wtWebioEA2x2ERPAlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERPAlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPAlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPAlarmSystemTrigger_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSystemTrigger = _WtWebioEA2x2ERPAlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 3),
    _WtWebioEA2x2ERPAlarmSystemTrigger_Type()
)
wtWebioEA2x2ERPAlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmMaxCounterValue_Type = OctetString
_WtWebioEA2x2ERPAlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA2x2ERPAlarmMaxCounterValue = _WtWebioEA2x2ERPAlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 4),
    _WtWebioEA2x2ERPAlarmMaxCounterValue_Type()
)
wtWebioEA2x2ERPAlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmInterval_Type = OctetString
_WtWebioEA2x2ERPAlarmInterval_Object = MibTableColumn
wtWebioEA2x2ERPAlarmInterval = _WtWebioEA2x2ERPAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 5),
    _WtWebioEA2x2ERPAlarmInterval_Type()
)
wtWebioEA2x2ERPAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmInterval.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERPAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPAlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPAlarmEnable_Object = MibTableColumn
wtWebioEA2x2ERPAlarmEnable = _WtWebioEA2x2ERPAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 6),
    _WtWebioEA2x2ERPAlarmEnable_Type()
)
wtWebioEA2x2ERPAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmEnable.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmMailAddr_Type = OctetString
_WtWebioEA2x2ERPAlarmMailAddr_Object = MibTableColumn
wtWebioEA2x2ERPAlarmMailAddr = _WtWebioEA2x2ERPAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 7),
    _WtWebioEA2x2ERPAlarmMailAddr_Type()
)
wtWebioEA2x2ERPAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmMailAddr.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmMailSubject_Type = OctetString
_WtWebioEA2x2ERPAlarmMailSubject_Object = MibTableColumn
wtWebioEA2x2ERPAlarmMailSubject = _WtWebioEA2x2ERPAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 8),
    _WtWebioEA2x2ERPAlarmMailSubject_Type()
)
wtWebioEA2x2ERPAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmMailSubject.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmMailText_Type = OctetString
_WtWebioEA2x2ERPAlarmMailText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmMailText = _WtWebioEA2x2ERPAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 9),
    _WtWebioEA2x2ERPAlarmMailText_Type()
)
wtWebioEA2x2ERPAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmMailText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmSnmpManagerIP_Type = OctetString
_WtWebioEA2x2ERPAlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSnmpManagerIP = _WtWebioEA2x2ERPAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 10),
    _WtWebioEA2x2ERPAlarmSnmpManagerIP_Type()
)
wtWebioEA2x2ERPAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmSnmpTrapText_Type = OctetString
_WtWebioEA2x2ERPAlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSnmpTrapText = _WtWebioEA2x2ERPAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 11),
    _WtWebioEA2x2ERPAlarmSnmpTrapText_Type()
)
wtWebioEA2x2ERPAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmUdpIpAddr_Type = OctetString
_WtWebioEA2x2ERPAlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA2x2ERPAlarmUdpIpAddr = _WtWebioEA2x2ERPAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 12),
    _WtWebioEA2x2ERPAlarmUdpIpAddr_Type()
)
wtWebioEA2x2ERPAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPAlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPAlarmUdpPort_Object = MibTableColumn
wtWebioEA2x2ERPAlarmUdpPort = _WtWebioEA2x2ERPAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 13),
    _WtWebioEA2x2ERPAlarmUdpPort_Type()
)
wtWebioEA2x2ERPAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmUdpPort.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmUdpText_Type = OctetString
_WtWebioEA2x2ERPAlarmUdpText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmUdpText = _WtWebioEA2x2ERPAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 14),
    _WtWebioEA2x2ERPAlarmUdpText_Type()
)
wtWebioEA2x2ERPAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmUdpText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmTcpIpAddr_Type = OctetString
_WtWebioEA2x2ERPAlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA2x2ERPAlarmTcpIpAddr = _WtWebioEA2x2ERPAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 15),
    _WtWebioEA2x2ERPAlarmTcpIpAddr_Type()
)
wtWebioEA2x2ERPAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPAlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPAlarmTcpPort_Object = MibTableColumn
wtWebioEA2x2ERPAlarmTcpPort = _WtWebioEA2x2ERPAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 16),
    _WtWebioEA2x2ERPAlarmTcpPort_Type()
)
wtWebioEA2x2ERPAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmTcpPort.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmTcpText_Type = OctetString
_WtWebioEA2x2ERPAlarmTcpText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmTcpText = _WtWebioEA2x2ERPAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 17),
    _WtWebioEA2x2ERPAlarmTcpText_Type()
)
wtWebioEA2x2ERPAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmTcpText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmSyslogIpAddr_Type = OctetString
_WtWebioEA2x2ERPAlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSyslogIpAddr = _WtWebioEA2x2ERPAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 18),
    _WtWebioEA2x2ERPAlarmSyslogIpAddr_Type()
)
wtWebioEA2x2ERPAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERPAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERPAlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERPAlarmSyslogPort_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSyslogPort = _WtWebioEA2x2ERPAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 19),
    _WtWebioEA2x2ERPAlarmSyslogPort_Type()
)
wtWebioEA2x2ERPAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSyslogPort.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmSyslogText_Type = OctetString
_WtWebioEA2x2ERPAlarmSyslogText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSyslogText = _WtWebioEA2x2ERPAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 20),
    _WtWebioEA2x2ERPAlarmSyslogText_Type()
)
wtWebioEA2x2ERPAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSyslogText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmFtpDataPort_Type = OctetString
_WtWebioEA2x2ERPAlarmFtpDataPort_Object = MibTableColumn
wtWebioEA2x2ERPAlarmFtpDataPort = _WtWebioEA2x2ERPAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 21),
    _WtWebioEA2x2ERPAlarmFtpDataPort_Type()
)
wtWebioEA2x2ERPAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmFtpFileName_Type = OctetString
_WtWebioEA2x2ERPAlarmFtpFileName_Object = MibTableColumn
wtWebioEA2x2ERPAlarmFtpFileName = _WtWebioEA2x2ERPAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 22),
    _WtWebioEA2x2ERPAlarmFtpFileName_Type()
)
wtWebioEA2x2ERPAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmFtpFileName.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmFtpText_Type = OctetString
_WtWebioEA2x2ERPAlarmFtpText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmFtpText = _WtWebioEA2x2ERPAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 23),
    _WtWebioEA2x2ERPAlarmFtpText_Type()
)
wtWebioEA2x2ERPAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmFtpText.setStatus("mandatory")


class _WtWebioEA2x2ERPAlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA2x2ERPAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPAlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPAlarmFtpOption_Object = MibTableColumn
wtWebioEA2x2ERPAlarmFtpOption = _WtWebioEA2x2ERPAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 24),
    _WtWebioEA2x2ERPAlarmFtpOption_Type()
)
wtWebioEA2x2ERPAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmFtpOption.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmTimerCron_Type = OctetString
_WtWebioEA2x2ERPAlarmTimerCron_Object = MibTableColumn
wtWebioEA2x2ERPAlarmTimerCron = _WtWebioEA2x2ERPAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 25),
    _WtWebioEA2x2ERPAlarmTimerCron_Type()
)
wtWebioEA2x2ERPAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmTimerCron.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmMailReleaseSubject_Type = OctetString
_WtWebioEA2x2ERPAlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA2x2ERPAlarmMailReleaseSubject = _WtWebioEA2x2ERPAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 26),
    _WtWebioEA2x2ERPAlarmMailReleaseSubject_Type()
)
wtWebioEA2x2ERPAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmMailReleaseText_Type = OctetString
_WtWebioEA2x2ERPAlarmMailReleaseText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmMailReleaseText = _WtWebioEA2x2ERPAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 27),
    _WtWebioEA2x2ERPAlarmMailReleaseText_Type()
)
wtWebioEA2x2ERPAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA2x2ERPAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSnmpTrapReleaseText = _WtWebioEA2x2ERPAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 28),
    _WtWebioEA2x2ERPAlarmSnmpTrapReleaseText_Type()
)
wtWebioEA2x2ERPAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmUdpReleaseText_Type = OctetString
_WtWebioEA2x2ERPAlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmUdpReleaseText = _WtWebioEA2x2ERPAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 29),
    _WtWebioEA2x2ERPAlarmUdpReleaseText_Type()
)
wtWebioEA2x2ERPAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmTcpReleaseText_Type = OctetString
_WtWebioEA2x2ERPAlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmTcpReleaseText = _WtWebioEA2x2ERPAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 30),
    _WtWebioEA2x2ERPAlarmTcpReleaseText_Type()
)
wtWebioEA2x2ERPAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmSyslogReleaseText_Type = OctetString
_WtWebioEA2x2ERPAlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmSyslogReleaseText = _WtWebioEA2x2ERPAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 31),
    _WtWebioEA2x2ERPAlarmSyslogReleaseText_Type()
)
wtWebioEA2x2ERPAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERPAlarmFtpReleaseText_Type = OctetString
_WtWebioEA2x2ERPAlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA2x2ERPAlarmFtpReleaseText = _WtWebioEA2x2ERPAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 3, 1, 32),
    _WtWebioEA2x2ERPAlarmFtpReleaseText_Type()
)
wtWebioEA2x2ERPAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlarmFtpReleaseText.setStatus("mandatory")


class _WtWebioEA2x2ERPLoadControlView_Type(OctetString):
    """Custom type wtWebioEA2x2ERPLoadControlView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPLoadControlView_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPLoadControlView_Object = MibScalar
wtWebioEA2x2ERPLoadControlView = _WtWebioEA2x2ERPLoadControlView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 4),
    _WtWebioEA2x2ERPLoadControlView_Type()
)
wtWebioEA2x2ERPLoadControlView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPLoadControlView.setStatus("mandatory")


class _WtWebioEA2x2ERPLCShutDownView_Type(OctetString):
    """Custom type wtWebioEA2x2ERPLCShutDownView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPLCShutDownView_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPLCShutDownView_Object = MibScalar
wtWebioEA2x2ERPLCShutDownView = _WtWebioEA2x2ERPLCShutDownView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 1, 5, 5),
    _WtWebioEA2x2ERPLCShutDownView_Type()
)
wtWebioEA2x2ERPLCShutDownView.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPLCShutDownView.setStatus("mandatory")
_WtWebioEA2x2ERPPorts_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPPorts = _WtWebioEA2x2ERPPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2)
)
_WtWebioEA2x2ERPInputPortTable_Object = MibTable
wtWebioEA2x2ERPInputPortTable = _WtWebioEA2x2ERPInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputPortTable.setStatus("mandatory")
_WtWebioEA2x2ERPInputPortEntry_Object = MibTableRow
wtWebioEA2x2ERPInputPortEntry = _WtWebioEA2x2ERPInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1)
)
wtWebioEA2x2ERPInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPInputPortEntry.setStatus("mandatory")
_WtWebioEA2x2ERPPortInputName_Type = OctetString
_WtWebioEA2x2ERPPortInputName_Object = MibTableColumn
wtWebioEA2x2ERPPortInputName = _WtWebioEA2x2ERPPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1, 1),
    _WtWebioEA2x2ERPPortInputName_Type()
)
wtWebioEA2x2ERPPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortInputName.setStatus("mandatory")
_WtWebioEA2x2ERPPortInputText_Type = OctetString
_WtWebioEA2x2ERPPortInputText_Object = MibTableColumn
wtWebioEA2x2ERPPortInputText = _WtWebioEA2x2ERPPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1, 2),
    _WtWebioEA2x2ERPPortInputText_Type()
)
wtWebioEA2x2ERPPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortInputText.setStatus("mandatory")


class _WtWebioEA2x2ERPPortInputMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortInputMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortInputMode_Object = MibTableColumn
wtWebioEA2x2ERPPortInputMode = _WtWebioEA2x2ERPPortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1, 3),
    _WtWebioEA2x2ERPPortInputMode_Type()
)
wtWebioEA2x2ERPPortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortInputMode.setStatus("mandatory")
_WtWebioEA2x2ERPPortInputFilter_Type = Integer32
_WtWebioEA2x2ERPPortInputFilter_Object = MibTableColumn
wtWebioEA2x2ERPPortInputFilter = _WtWebioEA2x2ERPPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1, 4),
    _WtWebioEA2x2ERPPortInputFilter_Type()
)
wtWebioEA2x2ERPPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortInputFilter.setStatus("mandatory")


class _WtWebioEA2x2ERPPortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA2x2ERPPortInputBicountPulsePolarity = _WtWebioEA2x2ERPPortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1, 5),
    _WtWebioEA2x2ERPPortInputBicountPulsePolarity_Type()
)
wtWebioEA2x2ERPPortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2ERPPortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA2x2ERPPortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA2x2ERPPortInputBicountInactivTimeout = _WtWebioEA2x2ERPPortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 1, 1, 6),
    _WtWebioEA2x2ERPPortInputBicountInactivTimeout_Type()
)
wtWebioEA2x2ERPPortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA2x2ERPOutputPortTable_Object = MibTable
wtWebioEA2x2ERPOutputPortTable = _WtWebioEA2x2ERPOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputPortTable.setStatus("mandatory")
_WtWebioEA2x2ERPOutputPortEntry_Object = MibTableRow
wtWebioEA2x2ERPOutputPortEntry = _WtWebioEA2x2ERPOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1)
)
wtWebioEA2x2ERPOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERPOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPOutputPortEntry.setStatus("mandatory")
_WtWebioEA2x2ERPPortOutputName_Type = OctetString
_WtWebioEA2x2ERPPortOutputName_Object = MibTableColumn
wtWebioEA2x2ERPPortOutputName = _WtWebioEA2x2ERPPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 1),
    _WtWebioEA2x2ERPPortOutputName_Type()
)
wtWebioEA2x2ERPPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortOutputName.setStatus("mandatory")
_WtWebioEA2x2ERPPortOutputText_Type = OctetString
_WtWebioEA2x2ERPPortOutputText_Object = MibTableColumn
wtWebioEA2x2ERPPortOutputText = _WtWebioEA2x2ERPPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 2),
    _WtWebioEA2x2ERPPortOutputText_Type()
)
wtWebioEA2x2ERPPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortOutputText.setStatus("mandatory")
_WtWebioEA2x2ERPPortOutputGroupMode_Type = OctetString
_WtWebioEA2x2ERPPortOutputGroupMode_Object = MibTableColumn
wtWebioEA2x2ERPPortOutputGroupMode = _WtWebioEA2x2ERPPortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 3),
    _WtWebioEA2x2ERPPortOutputGroupMode_Type()
)
wtWebioEA2x2ERPPortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortOutputGroupMode.setStatus("mandatory")
_WtWebioEA2x2ERPPortOutputSafetyState_Type = OctetString
_WtWebioEA2x2ERPPortOutputSafetyState_Object = MibTableColumn
wtWebioEA2x2ERPPortOutputSafetyState = _WtWebioEA2x2ERPPortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 4),
    _WtWebioEA2x2ERPPortOutputSafetyState_Type()
)
wtWebioEA2x2ERPPortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA2x2ERPPortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortLogicInputMask_Object = MibTableColumn
wtWebioEA2x2ERPPortLogicInputMask = _WtWebioEA2x2ERPPortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 5),
    _WtWebioEA2x2ERPPortLogicInputMask_Type()
)
wtWebioEA2x2ERPPortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortLogicInputMask.setStatus("mandatory")


class _WtWebioEA2x2ERPPortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortLogicInputInverter_Object = MibTableColumn
wtWebioEA2x2ERPPortLogicInputInverter = _WtWebioEA2x2ERPPortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 6),
    _WtWebioEA2x2ERPPortLogicInputInverter_Type()
)
wtWebioEA2x2ERPPortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA2x2ERPPortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortLogicFunction_Object = MibTableColumn
wtWebioEA2x2ERPPortLogicFunction = _WtWebioEA2x2ERPPortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 7),
    _WtWebioEA2x2ERPPortLogicFunction_Type()
)
wtWebioEA2x2ERPPortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortLogicFunction.setStatus("mandatory")


class _WtWebioEA2x2ERPPortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortLogicOutputInverter_Object = MibTableColumn
wtWebioEA2x2ERPPortLogicOutputInverter = _WtWebioEA2x2ERPPortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 8),
    _WtWebioEA2x2ERPPortLogicOutputInverter_Type()
)
wtWebioEA2x2ERPPortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA2x2ERPPortPulseDuration_Type = Integer32
_WtWebioEA2x2ERPPortPulseDuration_Object = MibTableColumn
wtWebioEA2x2ERPPortPulseDuration = _WtWebioEA2x2ERPPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 9),
    _WtWebioEA2x2ERPPortPulseDuration_Type()
)
wtWebioEA2x2ERPPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortPulseDuration.setStatus("mandatory")


class _WtWebioEA2x2ERPPortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2ERPPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERPPortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2ERPPortPulsePolarity_Object = MibTableColumn
wtWebioEA2x2ERPPortPulsePolarity = _WtWebioEA2x2ERPPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 2, 2, 1, 10),
    _WtWebioEA2x2ERPPortPulsePolarity_Type()
)
wtWebioEA2x2ERPPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPPortPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2ERPManufact_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPManufact = _WtWebioEA2x2ERPManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 3)
)
_WtWebioEA2x2ERPMfName_Type = OctetString
_WtWebioEA2x2ERPMfName_Object = MibScalar
wtWebioEA2x2ERPMfName = _WtWebioEA2x2ERPMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 3, 1),
    _WtWebioEA2x2ERPMfName_Type()
)
wtWebioEA2x2ERPMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMfName.setStatus("mandatory")
_WtWebioEA2x2ERPMfAddr_Type = OctetString
_WtWebioEA2x2ERPMfAddr_Object = MibScalar
wtWebioEA2x2ERPMfAddr = _WtWebioEA2x2ERPMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 3, 2),
    _WtWebioEA2x2ERPMfAddr_Type()
)
wtWebioEA2x2ERPMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMfAddr.setStatus("mandatory")
_WtWebioEA2x2ERPMfHotline_Type = OctetString
_WtWebioEA2x2ERPMfHotline_Object = MibScalar
wtWebioEA2x2ERPMfHotline = _WtWebioEA2x2ERPMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 3, 3),
    _WtWebioEA2x2ERPMfHotline_Type()
)
wtWebioEA2x2ERPMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMfHotline.setStatus("mandatory")
_WtWebioEA2x2ERPMfInternet_Type = OctetString
_WtWebioEA2x2ERPMfInternet_Object = MibScalar
wtWebioEA2x2ERPMfInternet = _WtWebioEA2x2ERPMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 3, 4),
    _WtWebioEA2x2ERPMfInternet_Type()
)
wtWebioEA2x2ERPMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMfInternet.setStatus("mandatory")
_WtWebioEA2x2ERPMfDeviceTyp_Type = OctetString
_WtWebioEA2x2ERPMfDeviceTyp_Object = MibScalar
wtWebioEA2x2ERPMfDeviceTyp = _WtWebioEA2x2ERPMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 3, 3, 5),
    _WtWebioEA2x2ERPMfDeviceTyp_Type()
)
wtWebioEA2x2ERPMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPMfDeviceTyp.setStatus("mandatory")
_WtWebioEA2x2ERPDiag_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERPDiag = _WtWebioEA2x2ERPDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 4)
)
_WtWebioEA2x2ERPDiagErrorCount_Type = Integer32
_WtWebioEA2x2ERPDiagErrorCount_Object = MibScalar
wtWebioEA2x2ERPDiagErrorCount = _WtWebioEA2x2ERPDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 4, 1),
    _WtWebioEA2x2ERPDiagErrorCount_Type()
)
wtWebioEA2x2ERPDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDiagErrorCount.setStatus("mandatory")
_WtWebioEA2x2ERPDiagBinaryError_Type = OctetString
_WtWebioEA2x2ERPDiagBinaryError_Object = MibScalar
wtWebioEA2x2ERPDiagBinaryError = _WtWebioEA2x2ERPDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 4, 2),
    _WtWebioEA2x2ERPDiagBinaryError_Type()
)
wtWebioEA2x2ERPDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDiagBinaryError.setStatus("mandatory")
_WtWebioEA2x2ERPDiagErrorIndex_Type = Integer32
_WtWebioEA2x2ERPDiagErrorIndex_Object = MibScalar
wtWebioEA2x2ERPDiagErrorIndex = _WtWebioEA2x2ERPDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 4, 3),
    _WtWebioEA2x2ERPDiagErrorIndex_Type()
)
wtWebioEA2x2ERPDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDiagErrorIndex.setStatus("mandatory")
_WtWebioEA2x2ERPDiagErrorMessage_Type = OctetString
_WtWebioEA2x2ERPDiagErrorMessage_Object = MibScalar
wtWebioEA2x2ERPDiagErrorMessage = _WtWebioEA2x2ERPDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 4, 4),
    _WtWebioEA2x2ERPDiagErrorMessage_Type()
)
wtWebioEA2x2ERPDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDiagErrorMessage.setStatus("mandatory")
_WtWebioEA2x2ERPDiagErrorClear_Type = Integer32
_WtWebioEA2x2ERPDiagErrorClear_Object = MibScalar
wtWebioEA2x2ERPDiagErrorClear = _WtWebioEA2x2ERPDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 4, 5),
    _WtWebioEA2x2ERPDiagErrorClear_Type()
)
wtWebioEA2x2ERPDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPDiagErrorClear.setStatus("mandatory")
_WtWebioEA12x6RelERP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERP = _WtWebioEA12x6RelERP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26)
)
_WtWebioEA12x6RelERPInOut_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPInOut = _WtWebioEA12x6RelERPInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1)
)


class _WtWebioEA12x6RelERPInputs_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x6RelERPInputs_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPInputs_Object = MibScalar
wtWebioEA12x6RelERPInputs = _WtWebioEA12x6RelERPInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 1),
    _WtWebioEA12x6RelERPInputs_Type()
)
wtWebioEA12x6RelERPInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputs.setStatus("mandatory")


class _WtWebioEA12x6RelERPOutputs_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WtWebioEA12x6RelERPOutputs_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPOutputs_Object = MibScalar
wtWebioEA12x6RelERPOutputs = _WtWebioEA12x6RelERPOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 2),
    _WtWebioEA12x6RelERPOutputs_Type()
)
wtWebioEA12x6RelERPOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputs.setStatus("mandatory")
_WtWebioEA12x6RelERPInputTable_Object = MibTable
wtWebioEA12x6RelERPInputTable = _WtWebioEA12x6RelERPInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputTable.setStatus("mandatory")
_WtWebioEA12x6RelERPInputEntry_Object = MibTableRow
wtWebioEA12x6RelERPInputEntry = _WtWebioEA12x6RelERPInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 3, 1)
)
wtWebioEA12x6RelERPInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPInputNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x6RelERPInputNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPInputNo_Object = MibTableColumn
wtWebioEA12x6RelERPInputNo = _WtWebioEA12x6RelERPInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 3, 1, 1),
    _WtWebioEA12x6RelERPInputNo_Type()
)
wtWebioEA12x6RelERPInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputNo.setStatus("mandatory")


class _WtWebioEA12x6RelERPInputCounter_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x6RelERPInputCounter_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPInputCounter_Object = MibTableColumn
wtWebioEA12x6RelERPInputCounter = _WtWebioEA12x6RelERPInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 3, 1, 2),
    _WtWebioEA12x6RelERPInputCounter_Type()
)
wtWebioEA12x6RelERPInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputCounter.setStatus("mandatory")
_WtWebioEA12x6RelERPInputCounterClear_Type = Integer32
_WtWebioEA12x6RelERPInputCounterClear_Object = MibTableColumn
wtWebioEA12x6RelERPInputCounterClear = _WtWebioEA12x6RelERPInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 3, 1, 3),
    _WtWebioEA12x6RelERPInputCounterClear_Type()
)
wtWebioEA12x6RelERPInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputCounterClear.setStatus("mandatory")
_WtWebioEA12x6RelERPInputValue_Type = Integer32
_WtWebioEA12x6RelERPInputValue_Object = MibScalar
wtWebioEA12x6RelERPInputValue = _WtWebioEA12x6RelERPInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 4),
    _WtWebioEA12x6RelERPInputValue_Type()
)
wtWebioEA12x6RelERPInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputValue.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputTable_Object = MibTable
wtWebioEA12x6RelERPOutputTable = _WtWebioEA12x6RelERPOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputTable.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputEntry_Object = MibTableRow
wtWebioEA12x6RelERPOutputEntry = _WtWebioEA12x6RelERPOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 5, 1)
)
wtWebioEA12x6RelERPOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPOutputNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA12x6RelERPOutputNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPOutputNo_Object = MibTableColumn
wtWebioEA12x6RelERPOutputNo = _WtWebioEA12x6RelERPOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 5, 1, 1),
    _WtWebioEA12x6RelERPOutputNo_Type()
)
wtWebioEA12x6RelERPOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputNo.setStatus("mandatory")


class _WtWebioEA12x6RelERPOutputState_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6OutputState-ON", 1),
          ("wtWebioEA12x6RelERPOutputState-OFF", 0))
    )


_WtWebioEA12x6RelERPOutputState_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPOutputState_Object = MibTableColumn
wtWebioEA12x6RelERPOutputState = _WtWebioEA12x6RelERPOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 5, 1, 2),
    _WtWebioEA12x6RelERPOutputState_Type()
)
wtWebioEA12x6RelERPOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputState.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputValue_Type = Integer32
_WtWebioEA12x6RelERPOutputValue_Object = MibScalar
wtWebioEA12x6RelERPOutputValue = _WtWebioEA12x6RelERPOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 6),
    _WtWebioEA12x6RelERPOutputValue_Type()
)
wtWebioEA12x6RelERPOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputValue.setStatus("mandatory")


class _WtWebioEA12x6RelERPSetOutput_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA12x6RelERPSetOutput_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPSetOutput_Object = MibScalar
wtWebioEA12x6RelERPSetOutput = _WtWebioEA12x6RelERPSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 1, 7),
    _WtWebioEA12x6RelERPSetOutput_Type()
)
wtWebioEA12x6RelERPSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSetOutput.setStatus("mandatory")
_WtWebioEA12x6RelERPSessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPSessCntrl = _WtWebioEA12x6RelERPSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 2)
)
_WtWebioEA12x6RelERPSessCntrlPassword_Type = OctetString
_WtWebioEA12x6RelERPSessCntrlPassword_Object = MibScalar
wtWebioEA12x6RelERPSessCntrlPassword = _WtWebioEA12x6RelERPSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 2, 1),
    _WtWebioEA12x6RelERPSessCntrlPassword_Type()
)
wtWebioEA12x6RelERPSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSessCntrlPassword.setStatus("mandatory")


class _WtWebioEA12x6RelERPSessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPSessCntrl-NoSession", 0),
          ("wtWebioEA12x6RelERPSessCntrl-Session", 1))
    )


_WtWebioEA12x6RelERPSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPSessCntrlConfigMode_Object = MibScalar
wtWebioEA12x6RelERPSessCntrlConfigMode = _WtWebioEA12x6RelERPSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 2, 2),
    _WtWebioEA12x6RelERPSessCntrlConfigMode_Type()
)
wtWebioEA12x6RelERPSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA12x6RelERPSessCntrlLogout_Type = Integer32
_WtWebioEA12x6RelERPSessCntrlLogout_Object = MibScalar
wtWebioEA12x6RelERPSessCntrlLogout = _WtWebioEA12x6RelERPSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 2, 3),
    _WtWebioEA12x6RelERPSessCntrlLogout_Type()
)
wtWebioEA12x6RelERPSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSessCntrlLogout.setStatus("mandatory")
_WtWebioEA12x6RelERPSessCntrlAdminPassword_Type = OctetString
_WtWebioEA12x6RelERPSessCntrlAdminPassword_Object = MibScalar
wtWebioEA12x6RelERPSessCntrlAdminPassword = _WtWebioEA12x6RelERPSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 2, 4),
    _WtWebioEA12x6RelERPSessCntrlAdminPassword_Type()
)
wtWebioEA12x6RelERPSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA12x6RelERPSessCntrlConfigPassword_Type = OctetString
_WtWebioEA12x6RelERPSessCntrlConfigPassword_Object = MibScalar
wtWebioEA12x6RelERPSessCntrlConfigPassword = _WtWebioEA12x6RelERPSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 2, 5),
    _WtWebioEA12x6RelERPSessCntrlConfigPassword_Type()
)
wtWebioEA12x6RelERPSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA12x6RelERPConfig_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPConfig = _WtWebioEA12x6RelERPConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3)
)
_WtWebioEA12x6RelERPDevice_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPDevice = _WtWebioEA12x6RelERPDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1)
)
_WtWebioEA12x6RelERPText_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPText = _WtWebioEA12x6RelERPText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 1)
)
_WtWebioEA12x6RelERPDeviceName_Type = OctetString
_WtWebioEA12x6RelERPDeviceName_Object = MibScalar
wtWebioEA12x6RelERPDeviceName = _WtWebioEA12x6RelERPDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 1, 1),
    _WtWebioEA12x6RelERPDeviceName_Type()
)
wtWebioEA12x6RelERPDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDeviceName.setStatus("mandatory")
_WtWebioEA12x6RelERPDeviceText_Type = OctetString
_WtWebioEA12x6RelERPDeviceText_Object = MibScalar
wtWebioEA12x6RelERPDeviceText = _WtWebioEA12x6RelERPDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 1, 2),
    _WtWebioEA12x6RelERPDeviceText_Type()
)
wtWebioEA12x6RelERPDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDeviceText.setStatus("mandatory")
_WtWebioEA12x6RelERPDeviceLocation_Type = OctetString
_WtWebioEA12x6RelERPDeviceLocation_Object = MibScalar
wtWebioEA12x6RelERPDeviceLocation = _WtWebioEA12x6RelERPDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 1, 3),
    _WtWebioEA12x6RelERPDeviceLocation_Type()
)
wtWebioEA12x6RelERPDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDeviceLocation.setStatus("mandatory")
_WtWebioEA12x6RelERPDeviceContact_Type = OctetString
_WtWebioEA12x6RelERPDeviceContact_Object = MibScalar
wtWebioEA12x6RelERPDeviceContact = _WtWebioEA12x6RelERPDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 1, 4),
    _WtWebioEA12x6RelERPDeviceContact_Type()
)
wtWebioEA12x6RelERPDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDeviceContact.setStatus("mandatory")
_WtWebioEA12x6RelERPTimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPTimeDate = _WtWebioEA12x6RelERPTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2)
)
_WtWebioEA12x6RelERPTimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPTimeZone = _WtWebioEA12x6RelERPTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1)
)
_WtWebioEA12x6RelERPTzOffsetHrs_Type = Integer32
_WtWebioEA12x6RelERPTzOffsetHrs_Object = MibScalar
wtWebioEA12x6RelERPTzOffsetHrs = _WtWebioEA12x6RelERPTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 1),
    _WtWebioEA12x6RelERPTzOffsetHrs_Type()
)
wtWebioEA12x6RelERPTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTzOffsetHrs.setStatus("mandatory")
_WtWebioEA12x6RelERPTzOffsetMin_Type = Integer32
_WtWebioEA12x6RelERPTzOffsetMin_Object = MibScalar
wtWebioEA12x6RelERPTzOffsetMin = _WtWebioEA12x6RelERPTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 2),
    _WtWebioEA12x6RelERPTzOffsetMin_Type()
)
wtWebioEA12x6RelERPTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTzOffsetMin.setStatus("mandatory")


class _WtWebioEA12x6RelERPTzEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPTzEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPTzEnable_Object = MibScalar
wtWebioEA12x6RelERPTzEnable = _WtWebioEA12x6RelERPTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 3),
    _WtWebioEA12x6RelERPTzEnable_Type()
)
wtWebioEA12x6RelERPTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTzEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPStTzOffsetHrs_Type = Integer32
_WtWebioEA12x6RelERPStTzOffsetHrs_Object = MibScalar
wtWebioEA12x6RelERPStTzOffsetHrs = _WtWebioEA12x6RelERPStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 4),
    _WtWebioEA12x6RelERPStTzOffsetHrs_Type()
)
wtWebioEA12x6RelERPStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzOffsetHrs.setStatus("mandatory")
_WtWebioEA12x6RelERPStTzOffsetMin_Type = Integer32
_WtWebioEA12x6RelERPStTzOffsetMin_Object = MibScalar
wtWebioEA12x6RelERPStTzOffsetMin = _WtWebioEA12x6RelERPStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 5),
    _WtWebioEA12x6RelERPStTzOffsetMin_Type()
)
wtWebioEA12x6RelERPStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzOffsetMin.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPStTzEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPStTzEnable_Object = MibScalar
wtWebioEA12x6RelERPStTzEnable = _WtWebioEA12x6RelERPStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 6),
    _WtWebioEA12x6RelERPStTzEnable_Type()
)
wtWebioEA12x6RelERPStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzEnable.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPStartMonth-April", 4),
          ("wtWebioEA12x6RelERPStartMonth-August", 8),
          ("wtWebioEA12x6RelERPStartMonth-December", 12),
          ("wtWebioEA12x6RelERPStartMonth-February", 2),
          ("wtWebioEA12x6RelERPStartMonth-January", 1),
          ("wtWebioEA12x6RelERPStartMonth-July", 7),
          ("wtWebioEA12x6RelERPStartMonth-June", 6),
          ("wtWebioEA12x6RelERPStartMonth-March", 3),
          ("wtWebioEA12x6RelERPStartMonth-May", 5),
          ("wtWebioEA12x6RelERPStartMonth-November", 11),
          ("wtWebioEA12x6RelERPStartMonth-October", 10),
          ("wtWebioEA12x6RelERPStartMonth-September", 9))
    )


_WtWebioEA12x6RelERPStTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPStTzStartMonth_Object = MibScalar
wtWebioEA12x6RelERPStTzStartMonth = _WtWebioEA12x6RelERPStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 7),
    _WtWebioEA12x6RelERPStTzStartMonth_Type()
)
wtWebioEA12x6RelERPStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStartMonth.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzStartMode_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPStartMode-first", 1),
          ("wtWebioEA12x6RelERPStartMode-fourth", 4),
          ("wtWebioEA12x6RelERPStartMode-last", 5),
          ("wtWebioEA12x6RelERPStartMode-second", 2),
          ("wtWebioEA12x6RelERPStartMode-third", 3))
    )


_WtWebioEA12x6RelERPStTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPStTzStartMode_Object = MibScalar
wtWebioEA12x6RelERPStTzStartMode = _WtWebioEA12x6RelERPStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 8),
    _WtWebioEA12x6RelERPStTzStartMode_Type()
)
wtWebioEA12x6RelERPStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStartMode.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzStartWday_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPStartWday-Friday", 6),
          ("wtWebioEA12x6RelERPStartWday-Monday", 2),
          ("wtWebioEA12x6RelERPStartWday-Saturday", 7),
          ("wtWebioEA12x6RelERPStartWday-Sunday", 1),
          ("wtWebioEA12x6RelERPStartWday-Thursday", 4),
          ("wtWebioEA12x6RelERPStartWday-Tuesday", 3),
          ("wtWebioEA12x6RelERPStartWday-Wednesday", 5))
    )


_WtWebioEA12x6RelERPStTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPStTzStartWday_Object = MibScalar
wtWebioEA12x6RelERPStTzStartWday = _WtWebioEA12x6RelERPStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 9),
    _WtWebioEA12x6RelERPStTzStartWday_Type()
)
wtWebioEA12x6RelERPStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStartWday.setStatus("mandatory")
_WtWebioEA12x6RelERPStTzStartHrs_Type = Integer32
_WtWebioEA12x6RelERPStTzStartHrs_Object = MibScalar
wtWebioEA12x6RelERPStTzStartHrs = _WtWebioEA12x6RelERPStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 10),
    _WtWebioEA12x6RelERPStTzStartHrs_Type()
)
wtWebioEA12x6RelERPStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStartHrs.setStatus("mandatory")
_WtWebioEA12x6RelERPStTzStartMin_Type = Integer32
_WtWebioEA12x6RelERPStTzStartMin_Object = MibScalar
wtWebioEA12x6RelERPStTzStartMin = _WtWebioEA12x6RelERPStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 11),
    _WtWebioEA12x6RelERPStTzStartMin_Type()
)
wtWebioEA12x6RelERPStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStartMin.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPStopMonth-April", 4),
          ("wtWebioEA12x6RelERPStopMonth-August", 8),
          ("wtWebioEA12x6RelERPStopMonth-December", 12),
          ("wtWebioEA12x6RelERPStopMonth-February", 2),
          ("wtWebioEA12x6RelERPStopMonth-January", 1),
          ("wtWebioEA12x6RelERPStopMonth-July", 7),
          ("wtWebioEA12x6RelERPStopMonth-June", 6),
          ("wtWebioEA12x6RelERPStopMonth-March", 3),
          ("wtWebioEA12x6RelERPStopMonth-May", 5),
          ("wtWebioEA12x6RelERPStopMonth-November", 11),
          ("wtWebioEA12x6RelERPStopMonth-October", 10),
          ("wtWebioEA12x6RelERPStopMonth-September", 9))
    )


_WtWebioEA12x6RelERPStTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPStTzStopMonth_Object = MibScalar
wtWebioEA12x6RelERPStTzStopMonth = _WtWebioEA12x6RelERPStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 12),
    _WtWebioEA12x6RelERPStTzStopMonth_Type()
)
wtWebioEA12x6RelERPStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStopMonth.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzStopMode_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPStopMode-first", 1),
          ("wtWebioEA12x6RelERPStopMode-fourth", 4),
          ("wtWebioEA12x6RelERPStopMode-last", 5),
          ("wtWebioEA12x6RelERPStopMode-second", 2),
          ("wtWebioEA12x6RelERPStopMode-third", 3))
    )


_WtWebioEA12x6RelERPStTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPStTzStopMode_Object = MibScalar
wtWebioEA12x6RelERPStTzStopMode = _WtWebioEA12x6RelERPStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 13),
    _WtWebioEA12x6RelERPStTzStopMode_Type()
)
wtWebioEA12x6RelERPStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStopMode.setStatus("mandatory")


class _WtWebioEA12x6RelERPStTzStopWday_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPStopWday-Friday", 6),
          ("wtWebioEA12x6RelERPStopWday-Monday", 2),
          ("wtWebioEA12x6RelERPStopWday-Saturday", 7),
          ("wtWebioEA12x6RelERPStopWday-Sunday", 1),
          ("wtWebioEA12x6RelERPStopWday-Thursday", 4),
          ("wtWebioEA12x6RelERPStopWday-Tuesday", 3),
          ("wtWebioEA12x6RelERPStopWday-Wednesday", 5))
    )


_WtWebioEA12x6RelERPStTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPStTzStopWday_Object = MibScalar
wtWebioEA12x6RelERPStTzStopWday = _WtWebioEA12x6RelERPStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 14),
    _WtWebioEA12x6RelERPStTzStopWday_Type()
)
wtWebioEA12x6RelERPStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStopWday.setStatus("mandatory")
_WtWebioEA12x6RelERPStTzStopHrs_Type = Integer32
_WtWebioEA12x6RelERPStTzStopHrs_Object = MibScalar
wtWebioEA12x6RelERPStTzStopHrs = _WtWebioEA12x6RelERPStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 15),
    _WtWebioEA12x6RelERPStTzStopHrs_Type()
)
wtWebioEA12x6RelERPStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStopHrs.setStatus("mandatory")
_WtWebioEA12x6RelERPStTzStopMin_Type = Integer32
_WtWebioEA12x6RelERPStTzStopMin_Object = MibScalar
wtWebioEA12x6RelERPStTzStopMin = _WtWebioEA12x6RelERPStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 1, 16),
    _WtWebioEA12x6RelERPStTzStopMin_Type()
)
wtWebioEA12x6RelERPStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStTzStopMin.setStatus("mandatory")
_WtWebioEA12x6RelERPTimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPTimeServer = _WtWebioEA12x6RelERPTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 2)
)
_WtWebioEA12x6RelERPTimeServer1_Type = OctetString
_WtWebioEA12x6RelERPTimeServer1_Object = MibScalar
wtWebioEA12x6RelERPTimeServer1 = _WtWebioEA12x6RelERPTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 2, 1),
    _WtWebioEA12x6RelERPTimeServer1_Type()
)
wtWebioEA12x6RelERPTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTimeServer1.setStatus("mandatory")
_WtWebioEA12x6RelERPTimeServer2_Type = OctetString
_WtWebioEA12x6RelERPTimeServer2_Object = MibScalar
wtWebioEA12x6RelERPTimeServer2 = _WtWebioEA12x6RelERPTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 2, 2),
    _WtWebioEA12x6RelERPTimeServer2_Type()
)
wtWebioEA12x6RelERPTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTimeServer2.setStatus("mandatory")


class _WtWebioEA12x6RelERPTsEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPTsEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPTsEnable_Object = MibScalar
wtWebioEA12x6RelERPTsEnable = _WtWebioEA12x6RelERPTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 2, 3),
    _WtWebioEA12x6RelERPTsEnable_Type()
)
wtWebioEA12x6RelERPTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTsEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPTsSyncTime_Type = Integer32
_WtWebioEA12x6RelERPTsSyncTime_Object = MibScalar
wtWebioEA12x6RelERPTsSyncTime = _WtWebioEA12x6RelERPTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 2, 4),
    _WtWebioEA12x6RelERPTsSyncTime_Type()
)
wtWebioEA12x6RelERPTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPTsSyncTime.setStatus("mandatory")
_WtWebioEA12x6RelERPDeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPDeviceClock = _WtWebioEA12x6RelERPDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 3)
)


class _WtWebioEA12x6RelERPClockHrs_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA12x6RelERPClockHrs_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPClockHrs_Object = MibScalar
wtWebioEA12x6RelERPClockHrs = _WtWebioEA12x6RelERPClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 3, 1),
    _WtWebioEA12x6RelERPClockHrs_Type()
)
wtWebioEA12x6RelERPClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPClockHrs.setStatus("mandatory")


class _WtWebioEA12x6RelERPClockMin_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA12x6RelERPClockMin_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPClockMin_Object = MibScalar
wtWebioEA12x6RelERPClockMin = _WtWebioEA12x6RelERPClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 3, 2),
    _WtWebioEA12x6RelERPClockMin_Type()
)
wtWebioEA12x6RelERPClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPClockMin.setStatus("mandatory")


class _WtWebioEA12x6RelERPClockDay_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA12x6RelERPClockDay_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPClockDay_Object = MibScalar
wtWebioEA12x6RelERPClockDay = _WtWebioEA12x6RelERPClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 3, 3),
    _WtWebioEA12x6RelERPClockDay_Type()
)
wtWebioEA12x6RelERPClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPClockDay.setStatus("mandatory")


class _WtWebioEA12x6RelERPClockMonth_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA12x6RelERPClockMonth-April", 4),
          ("wtWebioEA12x6RelERPClockMonth-August", 8),
          ("wtWebioEA12x6RelERPClockMonth-December", 12),
          ("wtWebioEA12x6RelERPClockMonth-February", 2),
          ("wtWebioEA12x6RelERPClockMonth-January", 1),
          ("wtWebioEA12x6RelERPClockMonth-July", 7),
          ("wtWebioEA12x6RelERPClockMonth-June", 6),
          ("wtWebioEA12x6RelERPClockMonth-March", 3),
          ("wtWebioEA12x6RelERPClockMonth-May", 5),
          ("wtWebioEA12x6RelERPClockMonth-November", 11),
          ("wtWebioEA12x6RelERPClockMonth-October", 10),
          ("wtWebioEA12x6RelERPClockMonth-September", 9))
    )


_WtWebioEA12x6RelERPClockMonth_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPClockMonth_Object = MibScalar
wtWebioEA12x6RelERPClockMonth = _WtWebioEA12x6RelERPClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 3, 4),
    _WtWebioEA12x6RelERPClockMonth_Type()
)
wtWebioEA12x6RelERPClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPClockMonth.setStatus("mandatory")


class _WtWebioEA12x6RelERPClockYear_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelERPClockYear_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPClockYear_Object = MibScalar
wtWebioEA12x6RelERPClockYear = _WtWebioEA12x6RelERPClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 2, 3, 5),
    _WtWebioEA12x6RelERPClockYear_Type()
)
wtWebioEA12x6RelERPClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPClockYear.setStatus("mandatory")
_WtWebioEA12x6RelERPBasic_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPBasic = _WtWebioEA12x6RelERPBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3)
)
_WtWebioEA12x6RelERPNetwork_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPNetwork = _WtWebioEA12x6RelERPNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1)
)
_WtWebioEA12x6RelERPIpAddress_Type = IpAddress
_WtWebioEA12x6RelERPIpAddress_Object = MibScalar
wtWebioEA12x6RelERPIpAddress = _WtWebioEA12x6RelERPIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1, 1),
    _WtWebioEA12x6RelERPIpAddress_Type()
)
wtWebioEA12x6RelERPIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPIpAddress.setStatus("mandatory")
_WtWebioEA12x6RelERPSubnetMask_Type = IpAddress
_WtWebioEA12x6RelERPSubnetMask_Object = MibScalar
wtWebioEA12x6RelERPSubnetMask = _WtWebioEA12x6RelERPSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1, 2),
    _WtWebioEA12x6RelERPSubnetMask_Type()
)
wtWebioEA12x6RelERPSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSubnetMask.setStatus("mandatory")
_WtWebioEA12x6RelERPGateway_Type = IpAddress
_WtWebioEA12x6RelERPGateway_Object = MibScalar
wtWebioEA12x6RelERPGateway = _WtWebioEA12x6RelERPGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1, 3),
    _WtWebioEA12x6RelERPGateway_Type()
)
wtWebioEA12x6RelERPGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPGateway.setStatus("mandatory")
_WtWebioEA12x6RelERPDnsServer1_Type = OctetString
_WtWebioEA12x6RelERPDnsServer1_Object = MibScalar
wtWebioEA12x6RelERPDnsServer1 = _WtWebioEA12x6RelERPDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1, 4),
    _WtWebioEA12x6RelERPDnsServer1_Type()
)
wtWebioEA12x6RelERPDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDnsServer1.setStatus("mandatory")
_WtWebioEA12x6RelERPDnsServer2_Type = OctetString
_WtWebioEA12x6RelERPDnsServer2_Object = MibScalar
wtWebioEA12x6RelERPDnsServer2 = _WtWebioEA12x6RelERPDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1, 5),
    _WtWebioEA12x6RelERPDnsServer2_Type()
)
wtWebioEA12x6RelERPDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDnsServer2.setStatus("mandatory")
_WtWebioEA12x6RelERPAddConfig_Type = OctetString
_WtWebioEA12x6RelERPAddConfig_Object = MibScalar
wtWebioEA12x6RelERPAddConfig = _WtWebioEA12x6RelERPAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 1, 6),
    _WtWebioEA12x6RelERPAddConfig_Type()
)
wtWebioEA12x6RelERPAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAddConfig.setStatus("mandatory")
_WtWebioEA12x6RelERPHTTP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPHTTP = _WtWebioEA12x6RelERPHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 2)
)
_WtWebioEA12x6RelERPStartup_Type = OctetString
_WtWebioEA12x6RelERPStartup_Object = MibScalar
wtWebioEA12x6RelERPStartup = _WtWebioEA12x6RelERPStartup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 2, 1),
    _WtWebioEA12x6RelERPStartup_Type()
)
wtWebioEA12x6RelERPStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPStartup.setStatus("mandatory")
_WtWebioEA12x6RelERPGetHeaderEnable_Type = OctetString
_WtWebioEA12x6RelERPGetHeaderEnable_Object = MibScalar
wtWebioEA12x6RelERPGetHeaderEnable = _WtWebioEA12x6RelERPGetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 2, 2),
    _WtWebioEA12x6RelERPGetHeaderEnable_Type()
)
wtWebioEA12x6RelERPGetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPGetHeaderEnable.setStatus("mandatory")


class _WtWebioEA12x6RelERPHttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPHttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPHttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPHttpInputTrigger_Object = MibScalar
wtWebioEA12x6RelERPHttpInputTrigger = _WtWebioEA12x6RelERPHttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 2, 3),
    _WtWebioEA12x6RelERPHttpInputTrigger_Type()
)
wtWebioEA12x6RelERPHttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPHttpInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelERPHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA12x6RelERPHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPHttpPort_Object = MibScalar
wtWebioEA12x6RelERPHttpPort = _WtWebioEA12x6RelERPHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 2, 4),
    _WtWebioEA12x6RelERPHttpPort_Type()
)
wtWebioEA12x6RelERPHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPHttpPort.setStatus("mandatory")
_WtWebioEA12x6RelERPMail_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPMail = _WtWebioEA12x6RelERPMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3)
)
_WtWebioEA12x6RelERPMailAdName_Type = OctetString
_WtWebioEA12x6RelERPMailAdName_Object = MibScalar
wtWebioEA12x6RelERPMailAdName = _WtWebioEA12x6RelERPMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 1),
    _WtWebioEA12x6RelERPMailAdName_Type()
)
wtWebioEA12x6RelERPMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailAdName.setStatus("mandatory")
_WtWebioEA12x6RelERPMailReply_Type = OctetString
_WtWebioEA12x6RelERPMailReply_Object = MibScalar
wtWebioEA12x6RelERPMailReply = _WtWebioEA12x6RelERPMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 2),
    _WtWebioEA12x6RelERPMailReply_Type()
)
wtWebioEA12x6RelERPMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailReply.setStatus("mandatory")
_WtWebioEA12x6RelERPMailServer_Type = OctetString
_WtWebioEA12x6RelERPMailServer_Object = MibScalar
wtWebioEA12x6RelERPMailServer = _WtWebioEA12x6RelERPMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 3),
    _WtWebioEA12x6RelERPMailServer_Type()
)
wtWebioEA12x6RelERPMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailServer.setStatus("mandatory")
_WtWebioEA12x6RelERPMailEnable_Type = OctetString
_WtWebioEA12x6RelERPMailEnable_Object = MibScalar
wtWebioEA12x6RelERPMailEnable = _WtWebioEA12x6RelERPMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 4),
    _WtWebioEA12x6RelERPMailEnable_Type()
)
wtWebioEA12x6RelERPMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailEnable.setStatus("mandatory")


class _WtWebioEA12x6RelERPMailAuthentication_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPMailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPMailAuthentication_Object = MibScalar
wtWebioEA12x6RelERPMailAuthentication = _WtWebioEA12x6RelERPMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 5),
    _WtWebioEA12x6RelERPMailAuthentication_Type()
)
wtWebioEA12x6RelERPMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailAuthentication.setStatus("mandatory")
_WtWebioEA12x6RelERPMailAuthUser_Type = OctetString
_WtWebioEA12x6RelERPMailAuthUser_Object = MibScalar
wtWebioEA12x6RelERPMailAuthUser = _WtWebioEA12x6RelERPMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 6),
    _WtWebioEA12x6RelERPMailAuthUser_Type()
)
wtWebioEA12x6RelERPMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailAuthUser.setStatus("mandatory")
_WtWebioEA12x6RelERPMailAuthPassword_Type = OctetString
_WtWebioEA12x6RelERPMailAuthPassword_Object = MibScalar
wtWebioEA12x6RelERPMailAuthPassword = _WtWebioEA12x6RelERPMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 7),
    _WtWebioEA12x6RelERPMailAuthPassword_Type()
)
wtWebioEA12x6RelERPMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailAuthPassword.setStatus("mandatory")
_WtWebioEA12x6RelERPMailPop3Server_Type = OctetString
_WtWebioEA12x6RelERPMailPop3Server_Object = MibScalar
wtWebioEA12x6RelERPMailPop3Server = _WtWebioEA12x6RelERPMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 3, 8),
    _WtWebioEA12x6RelERPMailPop3Server_Type()
)
wtWebioEA12x6RelERPMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMailPop3Server.setStatus("mandatory")
_WtWebioEA12x6RelERPSNMP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPSNMP = _WtWebioEA12x6RelERPSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 4)
)
_WtWebioEA12x6RelERPSnmpEnable_Type = OctetString
_WtWebioEA12x6RelERPSnmpEnable_Object = MibScalar
wtWebioEA12x6RelERPSnmpEnable = _WtWebioEA12x6RelERPSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 4, 1),
    _WtWebioEA12x6RelERPSnmpEnable_Type()
)
wtWebioEA12x6RelERPSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSnmpEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPSnmpCommunityStringRead_Type = OctetString
_WtWebioEA12x6RelERPSnmpCommunityStringRead_Object = MibScalar
wtWebioEA12x6RelERPSnmpCommunityStringRead = _WtWebioEA12x6RelERPSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 4, 2),
    _WtWebioEA12x6RelERPSnmpCommunityStringRead_Type()
)
wtWebioEA12x6RelERPSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA12x6RelERPSnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA12x6RelERPSnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA12x6RelERPSnmpCommunityStringReadWrite = _WtWebioEA12x6RelERPSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 4, 3),
    _WtWebioEA12x6RelERPSnmpCommunityStringReadWrite_Type()
)
wtWebioEA12x6RelERPSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA12x6RelERPSnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA12x6RelERPSnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA12x6RelERPSnmpSystemTrapManagerIP = _WtWebioEA12x6RelERPSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 4, 4),
    _WtWebioEA12x6RelERPSnmpSystemTrapManagerIP_Type()
)
wtWebioEA12x6RelERPSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA12x6RelERPSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPSnmpSystemTrapEnable_Object = MibScalar
wtWebioEA12x6RelERPSnmpSystemTrapEnable = _WtWebioEA12x6RelERPSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 4, 5),
    _WtWebioEA12x6RelERPSnmpSystemTrapEnable_Type()
)
wtWebioEA12x6RelERPSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPUDP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPUDP = _WtWebioEA12x6RelERPUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 5)
)
_WtWebioEA12x6RelERPUdpAdminPort_Type = Integer32
_WtWebioEA12x6RelERPUdpAdminPort_Object = MibScalar
wtWebioEA12x6RelERPUdpAdminPort = _WtWebioEA12x6RelERPUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 5, 1),
    _WtWebioEA12x6RelERPUdpAdminPort_Type()
)
wtWebioEA12x6RelERPUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPUdpAdminPort.setStatus("mandatory")
_WtWebioEA12x6RelERPUdpEnable_Type = OctetString
_WtWebioEA12x6RelERPUdpEnable_Object = MibScalar
wtWebioEA12x6RelERPUdpEnable = _WtWebioEA12x6RelERPUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 5, 2),
    _WtWebioEA12x6RelERPUdpEnable_Type()
)
wtWebioEA12x6RelERPUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPUdpEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPUdpRemotePort_Type = Integer32
_WtWebioEA12x6RelERPUdpRemotePort_Object = MibScalar
wtWebioEA12x6RelERPUdpRemotePort = _WtWebioEA12x6RelERPUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 5, 3),
    _WtWebioEA12x6RelERPUdpRemotePort_Type()
)
wtWebioEA12x6RelERPUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPUdpRemotePort.setStatus("mandatory")
_WtWebioEA12x6RelERPBinary_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPBinary = _WtWebioEA12x6RelERPBinary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6)
)


class _WtWebioEA12x6RelERPBinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA12x6RelERPBinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryModeCount_Object = MibScalar
wtWebioEA12x6RelERPBinaryModeCount = _WtWebioEA12x6RelERPBinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 1),
    _WtWebioEA12x6RelERPBinaryModeCount_Type()
)
wtWebioEA12x6RelERPBinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryModeCount.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryIfTable_Object = MibTable
wtWebioEA12x6RelERPBinaryIfTable = _WtWebioEA12x6RelERPBinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryIfTable.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryIfEntry_Object = MibTableRow
wtWebioEA12x6RelERPBinaryIfEntry = _WtWebioEA12x6RelERPBinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 2, 1)
)
wtWebioEA12x6RelERPBinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryIfEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA12x6RelERPBinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryModeNo_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryModeNo = _WtWebioEA12x6RelERPBinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA12x6RelERPBinaryModeNo_Type()
)
wtWebioEA12x6RelERPBinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryModeNo.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryTable_Object = MibTable
wtWebioEA12x6RelERPBinaryTable = _WtWebioEA12x6RelERPBinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTable.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryEntry_Object = MibTableRow
wtWebioEA12x6RelERPBinaryEntry = _WtWebioEA12x6RelERPBinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1)
)
wtWebioEA12x6RelERPBinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryOperationMode_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryOperationMode = _WtWebioEA12x6RelERPBinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA12x6RelERPBinaryOperationMode_Type()
)
wtWebioEA12x6RelERPBinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryOperationMode.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpServerLocalPort = _WtWebioEA12x6RelERPBinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA12x6RelERPBinaryTcpServerLocalPort_Type()
)
wtWebioEA12x6RelERPBinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpServerInputTrigger = _WtWebioEA12x6RelERPBinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA12x6RelERPBinaryTcpServerInputTrigger_Type()
)
wtWebioEA12x6RelERPBinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpServerApplicationMode = _WtWebioEA12x6RelERPBinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA12x6RelERPBinaryTcpServerApplicationMode_Type()
)
wtWebioEA12x6RelERPBinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientLocalPort = _WtWebioEA12x6RelERPBinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA12x6RelERPBinaryTcpClientLocalPort_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientServerPort = _WtWebioEA12x6RelERPBinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA12x6RelERPBinaryTcpClientServerPort_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA12x6RelERPBinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientServerIpAddr = _WtWebioEA12x6RelERPBinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA12x6RelERPBinaryTcpClientServerIpAddr_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA12x6RelERPBinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientServerPassword = _WtWebioEA12x6RelERPBinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA12x6RelERPBinaryTcpClientServerPassword_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryTcpClientInactivity_Type = Integer32
_WtWebioEA12x6RelERPBinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientInactivity = _WtWebioEA12x6RelERPBinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA12x6RelERPBinaryTcpClientInactivity_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientInputTrigger = _WtWebioEA12x6RelERPBinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA12x6RelERPBinaryTcpClientInputTrigger_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelERPBinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientInterval = _WtWebioEA12x6RelERPBinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA12x6RelERPBinaryTcpClientInterval_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientApplicationMode = _WtWebioEA12x6RelERPBinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA12x6RelERPBinaryTcpClientApplicationMode_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryUdpPeerLocalPort = _WtWebioEA12x6RelERPBinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA12x6RelERPBinaryUdpPeerLocalPort_Type()
)
wtWebioEA12x6RelERPBinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryUdpPeerRemotePort = _WtWebioEA12x6RelERPBinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA12x6RelERPBinaryUdpPeerRemotePort_Type()
)
wtWebioEA12x6RelERPBinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr = _WtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryUdpPeerInputTrigger = _WtWebioEA12x6RelERPBinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA12x6RelERPBinaryUdpPeerInputTrigger_Type()
)
wtWebioEA12x6RelERPBinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelERPBinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryUdpPeerInterval = _WtWebioEA12x6RelERPBinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA12x6RelERPBinaryUdpPeerInterval_Type()
)
wtWebioEA12x6RelERPBinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPBinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPBinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPBinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryUdpPeerApplicationMode = _WtWebioEA12x6RelERPBinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA12x6RelERPBinaryUdpPeerApplicationMode_Type()
)
wtWebioEA12x6RelERPBinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryConnectedPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryConnectedPort = _WtWebioEA12x6RelERPBinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA12x6RelERPBinaryConnectedPort_Type()
)
wtWebioEA12x6RelERPBinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryConnectedPort.setStatus("mandatory")
_WtWebioEA12x6RelERPBinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA12x6RelERPBinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryConnectedIpAddr = _WtWebioEA12x6RelERPBinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA12x6RelERPBinaryConnectedIpAddr_Type()
)
wtWebioEA12x6RelERPBinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpServerClientHttpPort = _WtWebioEA12x6RelERPBinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA12x6RelERPBinaryTcpServerClientHttpPort_Type()
)
wtWebioEA12x6RelERPBinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA12x6RelERPBinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPBinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPBinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPBinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA12x6RelERPBinaryTcpClientServerHttpPort = _WtWebioEA12x6RelERPBinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA12x6RelERPBinaryTcpClientServerHttpPort_Type()
)
wtWebioEA12x6RelERPBinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPBinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA12x6RelERPSyslog_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPSyslog = _WtWebioEA12x6RelERPSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 7)
)
_WtWebioEA12x6RelERPSyslogServerIP_Type = OctetString
_WtWebioEA12x6RelERPSyslogServerIP_Object = MibScalar
wtWebioEA12x6RelERPSyslogServerIP = _WtWebioEA12x6RelERPSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 7, 1),
    _WtWebioEA12x6RelERPSyslogServerIP_Type()
)
wtWebioEA12x6RelERPSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSyslogServerIP.setStatus("mandatory")
_WtWebioEA12x6RelERPSyslogServerPort_Type = Integer32
_WtWebioEA12x6RelERPSyslogServerPort_Object = MibScalar
wtWebioEA12x6RelERPSyslogServerPort = _WtWebioEA12x6RelERPSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 7, 2),
    _WtWebioEA12x6RelERPSyslogServerPort_Type()
)
wtWebioEA12x6RelERPSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSyslogServerPort.setStatus("mandatory")


class _WtWebioEA12x6RelERPSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPSyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA12x6RelERPSyslogSystemMessagesEnable = _WtWebioEA12x6RelERPSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 7, 3),
    _WtWebioEA12x6RelERPSyslogSystemMessagesEnable_Type()
)
wtWebioEA12x6RelERPSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPSyslogEnable_Type = OctetString
_WtWebioEA12x6RelERPSyslogEnable_Object = MibScalar
wtWebioEA12x6RelERPSyslogEnable = _WtWebioEA12x6RelERPSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 7, 4),
    _WtWebioEA12x6RelERPSyslogEnable_Type()
)
wtWebioEA12x6RelERPSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSyslogEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPFTP_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPFTP = _WtWebioEA12x6RelERPFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8)
)
_WtWebioEA12x6RelERPFTPServerIP_Type = OctetString
_WtWebioEA12x6RelERPFTPServerIP_Object = MibScalar
wtWebioEA12x6RelERPFTPServerIP = _WtWebioEA12x6RelERPFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 1),
    _WtWebioEA12x6RelERPFTPServerIP_Type()
)
wtWebioEA12x6RelERPFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPServerIP.setStatus("mandatory")
_WtWebioEA12x6RelERPFTPServerControlPort_Type = Integer32
_WtWebioEA12x6RelERPFTPServerControlPort_Object = MibScalar
wtWebioEA12x6RelERPFTPServerControlPort = _WtWebioEA12x6RelERPFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 2),
    _WtWebioEA12x6RelERPFTPServerControlPort_Type()
)
wtWebioEA12x6RelERPFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPServerControlPort.setStatus("mandatory")
_WtWebioEA12x6RelERPFTPUserName_Type = OctetString
_WtWebioEA12x6RelERPFTPUserName_Object = MibScalar
wtWebioEA12x6RelERPFTPUserName = _WtWebioEA12x6RelERPFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 3),
    _WtWebioEA12x6RelERPFTPUserName_Type()
)
wtWebioEA12x6RelERPFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPUserName.setStatus("mandatory")
_WtWebioEA12x6RelERPFTPPassword_Type = OctetString
_WtWebioEA12x6RelERPFTPPassword_Object = MibScalar
wtWebioEA12x6RelERPFTPPassword = _WtWebioEA12x6RelERPFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 4),
    _WtWebioEA12x6RelERPFTPPassword_Type()
)
wtWebioEA12x6RelERPFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPPassword.setStatus("mandatory")
_WtWebioEA12x6RelERPFTPAccount_Type = OctetString
_WtWebioEA12x6RelERPFTPAccount_Object = MibScalar
wtWebioEA12x6RelERPFTPAccount = _WtWebioEA12x6RelERPFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 5),
    _WtWebioEA12x6RelERPFTPAccount_Type()
)
wtWebioEA12x6RelERPFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPAccount.setStatus("mandatory")
_WtWebioEA12x6RelERPFTPOption_Type = OctetString
_WtWebioEA12x6RelERPFTPOption_Object = MibScalar
wtWebioEA12x6RelERPFTPOption = _WtWebioEA12x6RelERPFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 6),
    _WtWebioEA12x6RelERPFTPOption_Type()
)
wtWebioEA12x6RelERPFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPOption.setStatus("mandatory")
_WtWebioEA12x6RelERPFTPEnable_Type = OctetString
_WtWebioEA12x6RelERPFTPEnable_Object = MibScalar
wtWebioEA12x6RelERPFTPEnable = _WtWebioEA12x6RelERPFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 8, 7),
    _WtWebioEA12x6RelERPFTPEnable_Type()
)
wtWebioEA12x6RelERPFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPFTPEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPWayBack_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPWayBack = _WtWebioEA12x6RelERPWayBack_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 10)
)
_WtWebioEA12x6RelERPWayBackEnable_Type = OctetString
_WtWebioEA12x6RelERPWayBackEnable_Object = MibScalar
wtWebioEA12x6RelERPWayBackEnable = _WtWebioEA12x6RelERPWayBackEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 10, 1),
    _WtWebioEA12x6RelERPWayBackEnable_Type()
)
wtWebioEA12x6RelERPWayBackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPWayBackEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPWayBackServerControlPort_Type = Integer32
_WtWebioEA12x6RelERPWayBackServerControlPort_Object = MibScalar
wtWebioEA12x6RelERPWayBackServerControlPort = _WtWebioEA12x6RelERPWayBackServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 10, 2),
    _WtWebioEA12x6RelERPWayBackServerControlPort_Type()
)
wtWebioEA12x6RelERPWayBackServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPWayBackServerControlPort.setStatus("mandatory")
_WtWebioEA12x6RelERPWayBackFTPPassword_Type = OctetString
_WtWebioEA12x6RelERPWayBackFTPPassword_Object = MibScalar
wtWebioEA12x6RelERPWayBackFTPPassword = _WtWebioEA12x6RelERPWayBackFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 10, 3),
    _WtWebioEA12x6RelERPWayBackFTPPassword_Type()
)
wtWebioEA12x6RelERPWayBackFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPWayBackFTPPassword.setStatus("mandatory")
_WtWebioEA12x6RelERPWayBackFTPResponse_Type = OctetString
_WtWebioEA12x6RelERPWayBackFTPResponse_Object = MibScalar
wtWebioEA12x6RelERPWayBackFTPResponse = _WtWebioEA12x6RelERPWayBackFTPResponse_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 10, 4),
    _WtWebioEA12x6RelERPWayBackFTPResponse_Type()
)
wtWebioEA12x6RelERPWayBackFTPResponse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPWayBackFTPResponse.setStatus("mandatory")
_WtWebioEA12x6RelERPWayBackFTPTimeOut_Type = OctetString
_WtWebioEA12x6RelERPWayBackFTPTimeOut_Object = MibScalar
wtWebioEA12x6RelERPWayBackFTPTimeOut = _WtWebioEA12x6RelERPWayBackFTPTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 3, 10, 5),
    _WtWebioEA12x6RelERPWayBackFTPTimeOut_Type()
)
wtWebioEA12x6RelERPWayBackFTPTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPWayBackFTPTimeOut.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPOutputMode = _WtWebioEA12x6RelERPOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 4)
)
_WtWebioEA12x6RelERPOutputModeTable_Object = MibTable
wtWebioEA12x6RelERPOutputModeTable = _WtWebioEA12x6RelERPOutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputModeTable.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputModeEntry_Object = MibTableRow
wtWebioEA12x6RelERPOutputModeEntry = _WtWebioEA12x6RelERPOutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 4, 1, 1)
)
wtWebioEA12x6RelERPOutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputModeEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPOutputModeBit_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPOutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPOutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPOutputModeBit_Object = MibTableColumn
wtWebioEA12x6RelERPOutputModeBit = _WtWebioEA12x6RelERPOutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 4, 1, 1, 1),
    _WtWebioEA12x6RelERPOutputModeBit_Type()
)
wtWebioEA12x6RelERPOutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputModeBit.setStatus("mandatory")


class _WtWebioEA12x6RelERPSafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPSafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA12x6RelERPSafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPSafetyTimeout_Object = MibScalar
wtWebioEA12x6RelERPSafetyTimeout = _WtWebioEA12x6RelERPSafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 4, 2),
    _WtWebioEA12x6RelERPSafetyTimeout_Type()
)
wtWebioEA12x6RelERPSafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPSafetyTimeout.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarm_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPAlarm = _WtWebioEA12x6RelERPAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5)
)


class _WtWebioEA12x6RelERPAlarmCount_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x6RelERPAlarmCount_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPAlarmCount_Object = MibScalar
wtWebioEA12x6RelERPAlarmCount = _WtWebioEA12x6RelERPAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 1),
    _WtWebioEA12x6RelERPAlarmCount_Type()
)
wtWebioEA12x6RelERPAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmCount.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmIfTable_Object = MibTable
wtWebioEA12x6RelERPAlarmIfTable = _WtWebioEA12x6RelERPAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmIfTable.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmIfEntry_Object = MibTableRow
wtWebioEA12x6RelERPAlarmIfEntry = _WtWebioEA12x6RelERPAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 2, 1)
)
wtWebioEA12x6RelERPAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmIfEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmNo_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
    )


_WtWebioEA12x6RelERPAlarmNo_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPAlarmNo_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmNo = _WtWebioEA12x6RelERPAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 2, 1, 1),
    _WtWebioEA12x6RelERPAlarmNo_Type()
)
wtWebioEA12x6RelERPAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmNo.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmTable_Object = MibTable
wtWebioEA12x6RelERPAlarmTable = _WtWebioEA12x6RelERPAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmTable.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmEntry_Object = MibTableRow
wtWebioEA12x6RelERPAlarmEntry = _WtWebioEA12x6RelERPAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1)
)
wtWebioEA12x6RelERPAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmEntry.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPAlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA12x6RelERPAlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPAlarmInputTrigger_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmInputTrigger = _WtWebioEA12x6RelERPAlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 1),
    _WtWebioEA12x6RelERPAlarmInputTrigger_Type()
)
wtWebioEA12x6RelERPAlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPAlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA12x6RelERPAlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPAlarmOutputTrigger_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmOutputTrigger = _WtWebioEA12x6RelERPAlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 2),
    _WtWebioEA12x6RelERPAlarmOutputTrigger_Type()
)
wtWebioEA12x6RelERPAlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPAlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPAlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPAlarmSystemTrigger_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSystemTrigger = _WtWebioEA12x6RelERPAlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 3),
    _WtWebioEA12x6RelERPAlarmSystemTrigger_Type()
)
wtWebioEA12x6RelERPAlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmMaxCounterValue_Type = OctetString
_WtWebioEA12x6RelERPAlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmMaxCounterValue = _WtWebioEA12x6RelERPAlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 4),
    _WtWebioEA12x6RelERPAlarmMaxCounterValue_Type()
)
wtWebioEA12x6RelERPAlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmInterval_Type = OctetString
_WtWebioEA12x6RelERPAlarmInterval_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmInterval = _WtWebioEA12x6RelERPAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 5),
    _WtWebioEA12x6RelERPAlarmInterval_Type()
)
wtWebioEA12x6RelERPAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmInterval.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmEnable_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPAlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPAlarmEnable_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmEnable = _WtWebioEA12x6RelERPAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 6),
    _WtWebioEA12x6RelERPAlarmEnable_Type()
)
wtWebioEA12x6RelERPAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmEnable.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmMailAddr_Type = OctetString
_WtWebioEA12x6RelERPAlarmMailAddr_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmMailAddr = _WtWebioEA12x6RelERPAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 7),
    _WtWebioEA12x6RelERPAlarmMailAddr_Type()
)
wtWebioEA12x6RelERPAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmMailAddr.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmMailSubject_Type = OctetString
_WtWebioEA12x6RelERPAlarmMailSubject_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmMailSubject = _WtWebioEA12x6RelERPAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 8),
    _WtWebioEA12x6RelERPAlarmMailSubject_Type()
)
wtWebioEA12x6RelERPAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmMailSubject.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmMailText_Type = OctetString
_WtWebioEA12x6RelERPAlarmMailText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmMailText = _WtWebioEA12x6RelERPAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 9),
    _WtWebioEA12x6RelERPAlarmMailText_Type()
)
wtWebioEA12x6RelERPAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmMailText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmSnmpManagerIP_Type = OctetString
_WtWebioEA12x6RelERPAlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSnmpManagerIP = _WtWebioEA12x6RelERPAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 10),
    _WtWebioEA12x6RelERPAlarmSnmpManagerIP_Type()
)
wtWebioEA12x6RelERPAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmSnmpTrapText_Type = OctetString
_WtWebioEA12x6RelERPAlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSnmpTrapText = _WtWebioEA12x6RelERPAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 11),
    _WtWebioEA12x6RelERPAlarmSnmpTrapText_Type()
)
wtWebioEA12x6RelERPAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmUdpIpAddr_Type = OctetString
_WtWebioEA12x6RelERPAlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmUdpIpAddr = _WtWebioEA12x6RelERPAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 12),
    _WtWebioEA12x6RelERPAlarmUdpIpAddr_Type()
)
wtWebioEA12x6RelERPAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPAlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPAlarmUdpPort_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmUdpPort = _WtWebioEA12x6RelERPAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 13),
    _WtWebioEA12x6RelERPAlarmUdpPort_Type()
)
wtWebioEA12x6RelERPAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmUdpPort.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmUdpText_Type = OctetString
_WtWebioEA12x6RelERPAlarmUdpText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmUdpText = _WtWebioEA12x6RelERPAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 14),
    _WtWebioEA12x6RelERPAlarmUdpText_Type()
)
wtWebioEA12x6RelERPAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmUdpText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmTcpIpAddr_Type = OctetString
_WtWebioEA12x6RelERPAlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmTcpIpAddr = _WtWebioEA12x6RelERPAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 15),
    _WtWebioEA12x6RelERPAlarmTcpIpAddr_Type()
)
wtWebioEA12x6RelERPAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPAlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPAlarmTcpPort_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmTcpPort = _WtWebioEA12x6RelERPAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 16),
    _WtWebioEA12x6RelERPAlarmTcpPort_Type()
)
wtWebioEA12x6RelERPAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmTcpPort.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmTcpText_Type = OctetString
_WtWebioEA12x6RelERPAlarmTcpText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmTcpText = _WtWebioEA12x6RelERPAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 17),
    _WtWebioEA12x6RelERPAlarmTcpText_Type()
)
wtWebioEA12x6RelERPAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmTcpText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmSyslogIpAddr_Type = OctetString
_WtWebioEA12x6RelERPAlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSyslogIpAddr = _WtWebioEA12x6RelERPAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 18),
    _WtWebioEA12x6RelERPAlarmSyslogIpAddr_Type()
)
wtWebioEA12x6RelERPAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA12x6RelERPAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA12x6RelERPAlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA12x6RelERPAlarmSyslogPort_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSyslogPort = _WtWebioEA12x6RelERPAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 19),
    _WtWebioEA12x6RelERPAlarmSyslogPort_Type()
)
wtWebioEA12x6RelERPAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSyslogPort.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmSyslogText_Type = OctetString
_WtWebioEA12x6RelERPAlarmSyslogText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSyslogText = _WtWebioEA12x6RelERPAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 20),
    _WtWebioEA12x6RelERPAlarmSyslogText_Type()
)
wtWebioEA12x6RelERPAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSyslogText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmFtpDataPort_Type = OctetString
_WtWebioEA12x6RelERPAlarmFtpDataPort_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmFtpDataPort = _WtWebioEA12x6RelERPAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 21),
    _WtWebioEA12x6RelERPAlarmFtpDataPort_Type()
)
wtWebioEA12x6RelERPAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmFtpFileName_Type = OctetString
_WtWebioEA12x6RelERPAlarmFtpFileName_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmFtpFileName = _WtWebioEA12x6RelERPAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 22),
    _WtWebioEA12x6RelERPAlarmFtpFileName_Type()
)
wtWebioEA12x6RelERPAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmFtpFileName.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmFtpText_Type = OctetString
_WtWebioEA12x6RelERPAlarmFtpText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmFtpText = _WtWebioEA12x6RelERPAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 23),
    _WtWebioEA12x6RelERPAlarmFtpText_Type()
)
wtWebioEA12x6RelERPAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmFtpText.setStatus("mandatory")


class _WtWebioEA12x6RelERPAlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPAlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPAlarmFtpOption_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmFtpOption = _WtWebioEA12x6RelERPAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 24),
    _WtWebioEA12x6RelERPAlarmFtpOption_Type()
)
wtWebioEA12x6RelERPAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmFtpOption.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmTimerCron_Type = OctetString
_WtWebioEA12x6RelERPAlarmTimerCron_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmTimerCron = _WtWebioEA12x6RelERPAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 25),
    _WtWebioEA12x6RelERPAlarmTimerCron_Type()
)
wtWebioEA12x6RelERPAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmTimerCron.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmMailReleaseSubject_Type = OctetString
_WtWebioEA12x6RelERPAlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmMailReleaseSubject = _WtWebioEA12x6RelERPAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 26),
    _WtWebioEA12x6RelERPAlarmMailReleaseSubject_Type()
)
wtWebioEA12x6RelERPAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmMailReleaseText_Type = OctetString
_WtWebioEA12x6RelERPAlarmMailReleaseText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmMailReleaseText = _WtWebioEA12x6RelERPAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 27),
    _WtWebioEA12x6RelERPAlarmMailReleaseText_Type()
)
wtWebioEA12x6RelERPAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA12x6RelERPAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText = _WtWebioEA12x6RelERPAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 28),
    _WtWebioEA12x6RelERPAlarmSnmpTrapReleaseText_Type()
)
wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmUdpReleaseText_Type = OctetString
_WtWebioEA12x6RelERPAlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmUdpReleaseText = _WtWebioEA12x6RelERPAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 29),
    _WtWebioEA12x6RelERPAlarmUdpReleaseText_Type()
)
wtWebioEA12x6RelERPAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmTcpReleaseText_Type = OctetString
_WtWebioEA12x6RelERPAlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmTcpReleaseText = _WtWebioEA12x6RelERPAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 30),
    _WtWebioEA12x6RelERPAlarmTcpReleaseText_Type()
)
wtWebioEA12x6RelERPAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmSyslogReleaseText_Type = OctetString
_WtWebioEA12x6RelERPAlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmSyslogReleaseText = _WtWebioEA12x6RelERPAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 31),
    _WtWebioEA12x6RelERPAlarmSyslogReleaseText_Type()
)
wtWebioEA12x6RelERPAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelERPAlarmFtpReleaseText_Type = OctetString
_WtWebioEA12x6RelERPAlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA12x6RelERPAlarmFtpReleaseText = _WtWebioEA12x6RelERPAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 1, 5, 3, 1, 32),
    _WtWebioEA12x6RelERPAlarmFtpReleaseText_Type()
)
wtWebioEA12x6RelERPAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlarmFtpReleaseText.setStatus("mandatory")
_WtWebioEA12x6RelERPPorts_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPPorts = _WtWebioEA12x6RelERPPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2)
)
_WtWebioEA12x6RelERPInputPortTable_Object = MibTable
wtWebioEA12x6RelERPInputPortTable = _WtWebioEA12x6RelERPInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputPortTable.setStatus("mandatory")
_WtWebioEA12x6RelERPInputPortEntry_Object = MibTableRow
wtWebioEA12x6RelERPInputPortEntry = _WtWebioEA12x6RelERPInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1)
)
wtWebioEA12x6RelERPInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPInputPortEntry.setStatus("mandatory")
_WtWebioEA12x6RelERPPortInputName_Type = OctetString
_WtWebioEA12x6RelERPPortInputName_Object = MibTableColumn
wtWebioEA12x6RelERPPortInputName = _WtWebioEA12x6RelERPPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1, 1),
    _WtWebioEA12x6RelERPPortInputName_Type()
)
wtWebioEA12x6RelERPPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortInputName.setStatus("mandatory")
_WtWebioEA12x6RelERPPortInputText_Type = OctetString
_WtWebioEA12x6RelERPPortInputText_Object = MibTableColumn
wtWebioEA12x6RelERPPortInputText = _WtWebioEA12x6RelERPPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1, 2),
    _WtWebioEA12x6RelERPPortInputText_Type()
)
wtWebioEA12x6RelERPPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortInputText.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortInputMode_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortInputMode_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortInputMode_Object = MibTableColumn
wtWebioEA12x6RelERPPortInputMode = _WtWebioEA12x6RelERPPortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1, 3),
    _WtWebioEA12x6RelERPPortInputMode_Type()
)
wtWebioEA12x6RelERPPortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortInputMode.setStatus("mandatory")
_WtWebioEA12x6RelERPPortInputFilter_Type = Integer32
_WtWebioEA12x6RelERPPortInputFilter_Object = MibTableColumn
wtWebioEA12x6RelERPPortInputFilter = _WtWebioEA12x6RelERPPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1, 4),
    _WtWebioEA12x6RelERPPortInputFilter_Type()
)
wtWebioEA12x6RelERPPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortInputFilter.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA12x6RelERPPortInputBicountPulsePolarity = _WtWebioEA12x6RelERPPortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1, 5),
    _WtWebioEA12x6RelERPPortInputBicountPulsePolarity_Type()
)
wtWebioEA12x6RelERPPortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA12x6RelERPPortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA12x6RelERPPortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA12x6RelERPPortInputBicountInactivTimeout = _WtWebioEA12x6RelERPPortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 1, 1, 6),
    _WtWebioEA12x6RelERPPortInputBicountInactivTimeout_Type()
)
wtWebioEA12x6RelERPPortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputPortTable_Object = MibTable
wtWebioEA12x6RelERPOutputPortTable = _WtWebioEA12x6RelERPOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputPortTable.setStatus("mandatory")
_WtWebioEA12x6RelERPOutputPortEntry_Object = MibTableRow
wtWebioEA12x6RelERPOutputPortEntry = _WtWebioEA12x6RelERPOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1)
)
wtWebioEA12x6RelERPOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA12x6RelERPOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPOutputPortEntry.setStatus("mandatory")
_WtWebioEA12x6RelERPPortOutputName_Type = OctetString
_WtWebioEA12x6RelERPPortOutputName_Object = MibTableColumn
wtWebioEA12x6RelERPPortOutputName = _WtWebioEA12x6RelERPPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 1),
    _WtWebioEA12x6RelERPPortOutputName_Type()
)
wtWebioEA12x6RelERPPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortOutputName.setStatus("mandatory")
_WtWebioEA12x6RelERPPortOutputText_Type = OctetString
_WtWebioEA12x6RelERPPortOutputText_Object = MibTableColumn
wtWebioEA12x6RelERPPortOutputText = _WtWebioEA12x6RelERPPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 2),
    _WtWebioEA12x6RelERPPortOutputText_Type()
)
wtWebioEA12x6RelERPPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortOutputText.setStatus("mandatory")
_WtWebioEA12x6RelERPPortOutputGroupMode_Type = OctetString
_WtWebioEA12x6RelERPPortOutputGroupMode_Object = MibTableColumn
wtWebioEA12x6RelERPPortOutputGroupMode = _WtWebioEA12x6RelERPPortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 3),
    _WtWebioEA12x6RelERPPortOutputGroupMode_Type()
)
wtWebioEA12x6RelERPPortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortOutputGroupMode.setStatus("mandatory")
_WtWebioEA12x6RelERPPortOutputSafetyState_Type = OctetString
_WtWebioEA12x6RelERPPortOutputSafetyState_Object = MibTableColumn
wtWebioEA12x6RelERPPortOutputSafetyState = _WtWebioEA12x6RelERPPortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 4),
    _WtWebioEA12x6RelERPPortOutputSafetyState_Type()
)
wtWebioEA12x6RelERPPortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortLogicInputMask_Object = MibTableColumn
wtWebioEA12x6RelERPPortLogicInputMask = _WtWebioEA12x6RelERPPortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 5),
    _WtWebioEA12x6RelERPPortLogicInputMask_Type()
)
wtWebioEA12x6RelERPPortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortLogicInputMask.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortLogicInputInverter_Object = MibTableColumn
wtWebioEA12x6RelERPPortLogicInputInverter = _WtWebioEA12x6RelERPPortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 6),
    _WtWebioEA12x6RelERPPortLogicInputInverter_Type()
)
wtWebioEA12x6RelERPPortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortLogicFunction_Object = MibTableColumn
wtWebioEA12x6RelERPPortLogicFunction = _WtWebioEA12x6RelERPPortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 7),
    _WtWebioEA12x6RelERPPortLogicFunction_Type()
)
wtWebioEA12x6RelERPPortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortLogicFunction.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortLogicOutputInverter_Object = MibTableColumn
wtWebioEA12x6RelERPPortLogicOutputInverter = _WtWebioEA12x6RelERPPortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 8),
    _WtWebioEA12x6RelERPPortLogicOutputInverter_Type()
)
wtWebioEA12x6RelERPPortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA12x6RelERPPortPulseDuration_Type = Integer32
_WtWebioEA12x6RelERPPortPulseDuration_Object = MibTableColumn
wtWebioEA12x6RelERPPortPulseDuration = _WtWebioEA12x6RelERPPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 9),
    _WtWebioEA12x6RelERPPortPulseDuration_Type()
)
wtWebioEA12x6RelERPPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortPulseDuration.setStatus("mandatory")


class _WtWebioEA12x6RelERPPortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA12x6RelERPPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA12x6RelERPPortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA12x6RelERPPortPulsePolarity_Object = MibTableColumn
wtWebioEA12x6RelERPPortPulsePolarity = _WtWebioEA12x6RelERPPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 2, 2, 1, 10),
    _WtWebioEA12x6RelERPPortPulsePolarity_Type()
)
wtWebioEA12x6RelERPPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPPortPulsePolarity.setStatus("mandatory")
_WtWebioEA12x6RelERPManufact_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPManufact = _WtWebioEA12x6RelERPManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3)
)
_WtWebioEA12x6RelERPMfName_Type = OctetString
_WtWebioEA12x6RelERPMfName_Object = MibScalar
wtWebioEA12x6RelERPMfName = _WtWebioEA12x6RelERPMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3, 1),
    _WtWebioEA12x6RelERPMfName_Type()
)
wtWebioEA12x6RelERPMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMfName.setStatus("mandatory")
_WtWebioEA12x6RelERPMfAddr_Type = OctetString
_WtWebioEA12x6RelERPMfAddr_Object = MibScalar
wtWebioEA12x6RelERPMfAddr = _WtWebioEA12x6RelERPMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3, 2),
    _WtWebioEA12x6RelERPMfAddr_Type()
)
wtWebioEA12x6RelERPMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMfAddr.setStatus("mandatory")
_WtWebioEA12x6RelERPMfHotline_Type = OctetString
_WtWebioEA12x6RelERPMfHotline_Object = MibScalar
wtWebioEA12x6RelERPMfHotline = _WtWebioEA12x6RelERPMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3, 3),
    _WtWebioEA12x6RelERPMfHotline_Type()
)
wtWebioEA12x6RelERPMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMfHotline.setStatus("mandatory")
_WtWebioEA12x6RelERPMfInternet_Type = OctetString
_WtWebioEA12x6RelERPMfInternet_Object = MibScalar
wtWebioEA12x6RelERPMfInternet = _WtWebioEA12x6RelERPMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3, 4),
    _WtWebioEA12x6RelERPMfInternet_Type()
)
wtWebioEA12x6RelERPMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMfInternet.setStatus("mandatory")
_WtWebioEA12x6RelERPMfDeviceTyp_Type = OctetString
_WtWebioEA12x6RelERPMfDeviceTyp_Object = MibScalar
wtWebioEA12x6RelERPMfDeviceTyp = _WtWebioEA12x6RelERPMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3, 5),
    _WtWebioEA12x6RelERPMfDeviceTyp_Type()
)
wtWebioEA12x6RelERPMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMfDeviceTyp.setStatus("mandatory")
_WtWebioEA12x6RelERPMfOrderNo_Type = OctetString
_WtWebioEA12x6RelERPMfOrderNo_Object = MibScalar
wtWebioEA12x6RelERPMfOrderNo = _WtWebioEA12x6RelERPMfOrderNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 3, 3, 6),
    _WtWebioEA12x6RelERPMfOrderNo_Type()
)
wtWebioEA12x6RelERPMfOrderNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPMfOrderNo.setStatus("mandatory")
_WtWebioEA12x6RelERPDiag_ObjectIdentity = ObjectIdentity
wtWebioEA12x6RelERPDiag = _WtWebioEA12x6RelERPDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 4)
)
_WtWebioEA12x6RelERPDiagErrorCount_Type = Integer32
_WtWebioEA12x6RelERPDiagErrorCount_Object = MibScalar
wtWebioEA12x6RelERPDiagErrorCount = _WtWebioEA12x6RelERPDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 4, 1),
    _WtWebioEA12x6RelERPDiagErrorCount_Type()
)
wtWebioEA12x6RelERPDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDiagErrorCount.setStatus("mandatory")
_WtWebioEA12x6RelERPDiagBinaryError_Type = OctetString
_WtWebioEA12x6RelERPDiagBinaryError_Object = MibScalar
wtWebioEA12x6RelERPDiagBinaryError = _WtWebioEA12x6RelERPDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 4, 2),
    _WtWebioEA12x6RelERPDiagBinaryError_Type()
)
wtWebioEA12x6RelERPDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDiagBinaryError.setStatus("mandatory")
_WtWebioEA12x6RelERPDiagErrorIndex_Type = Integer32
_WtWebioEA12x6RelERPDiagErrorIndex_Object = MibScalar
wtWebioEA12x6RelERPDiagErrorIndex = _WtWebioEA12x6RelERPDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 4, 3),
    _WtWebioEA12x6RelERPDiagErrorIndex_Type()
)
wtWebioEA12x6RelERPDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDiagErrorIndex.setStatus("mandatory")
_WtWebioEA12x6RelERPDiagErrorMessage_Type = OctetString
_WtWebioEA12x6RelERPDiagErrorMessage_Object = MibScalar
wtWebioEA12x6RelERPDiagErrorMessage = _WtWebioEA12x6RelERPDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 4, 4),
    _WtWebioEA12x6RelERPDiagErrorMessage_Type()
)
wtWebioEA12x6RelERPDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDiagErrorMessage.setStatus("mandatory")
_WtWebioEA12x6RelERPDiagErrorClear_Type = Integer32
_WtWebioEA12x6RelERPDiagErrorClear_Object = MibScalar
wtWebioEA12x6RelERPDiagErrorClear = _WtWebioEA12x6RelERPDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 4, 5),
    _WtWebioEA12x6RelERPDiagErrorClear_Type()
)
wtWebioEA12x6RelERPDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPDiagErrorClear.setStatus("mandatory")
_WtIpWatcher_ObjectIdentity = ObjectIdentity
wtIpWatcher = _WtIpWatcher_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27)
)
_WtIpWatcherInOut_ObjectIdentity = ObjectIdentity
wtIpWatcherInOut = _WtIpWatcherInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1)
)


class _WtIpWatcherInputs_Type(Integer32):
    """Custom type wtIpWatcherInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtIpWatcherInputs_Type.__name__ = "Integer32"
_WtIpWatcherInputs_Object = MibScalar
wtIpWatcherInputs = _WtIpWatcherInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 1),
    _WtIpWatcherInputs_Type()
)
wtIpWatcherInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherInputs.setStatus("mandatory")


class _WtIpWatcherOutputs_Type(Integer32):
    """Custom type wtIpWatcherOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtIpWatcherOutputs_Type.__name__ = "Integer32"
_WtIpWatcherOutputs_Object = MibScalar
wtIpWatcherOutputs = _WtIpWatcherOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 2),
    _WtIpWatcherOutputs_Type()
)
wtIpWatcherOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherOutputs.setStatus("mandatory")
_WtIpWatcherInputTable_Object = MibTable
wtIpWatcherInputTable = _WtIpWatcherInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 3)
)
if mibBuilder.loadTexts:
    wtIpWatcherInputTable.setStatus("mandatory")
_WtIpWatcherInputEntry_Object = MibTableRow
wtIpWatcherInputEntry = _WtIpWatcherInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 3, 1)
)
wtIpWatcherInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherInputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherInputEntry.setStatus("mandatory")


class _WtIpWatcherInputNo_Type(Integer32):
    """Custom type wtIpWatcherInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtIpWatcherInputNo_Type.__name__ = "Integer32"
_WtIpWatcherInputNo_Object = MibTableColumn
wtIpWatcherInputNo = _WtIpWatcherInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 3, 1, 1),
    _WtIpWatcherInputNo_Type()
)
wtIpWatcherInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherInputNo.setStatus("mandatory")


class _WtIpWatcherInputCounter_Type(Integer32):
    """Custom type wtIpWatcherInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtIpWatcherInputCounter_Type.__name__ = "Integer32"
_WtIpWatcherInputCounter_Object = MibTableColumn
wtIpWatcherInputCounter = _WtIpWatcherInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 3, 1, 2),
    _WtIpWatcherInputCounter_Type()
)
wtIpWatcherInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherInputCounter.setStatus("mandatory")
_WtIpWatcherInputCounterClear_Type = Integer32
_WtIpWatcherInputCounterClear_Object = MibTableColumn
wtIpWatcherInputCounterClear = _WtIpWatcherInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 3, 1, 3),
    _WtIpWatcherInputCounterClear_Type()
)
wtIpWatcherInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherInputCounterClear.setStatus("mandatory")


class _WtIpWatcherInputState_Type(Integer32):
    """Custom type wtIpWatcherInputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherInputState-OFF", 0),
          ("wtIpWatcherInputState-ON", 1))
    )


_WtIpWatcherInputState_Type.__name__ = "Integer32"
_WtIpWatcherInputState_Object = MibTableColumn
wtIpWatcherInputState = _WtIpWatcherInputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 3, 1, 4),
    _WtIpWatcherInputState_Type()
)
wtIpWatcherInputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherInputState.setStatus("mandatory")
_WtIpWatcherInputValue_Type = Integer32
_WtIpWatcherInputValue_Object = MibScalar
wtIpWatcherInputValue = _WtIpWatcherInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 4),
    _WtIpWatcherInputValue_Type()
)
wtIpWatcherInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherInputValue.setStatus("mandatory")
_WtIpWatcherOutputTable_Object = MibTable
wtIpWatcherOutputTable = _WtIpWatcherOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 5)
)
if mibBuilder.loadTexts:
    wtIpWatcherOutputTable.setStatus("mandatory")
_WtIpWatcherOutputEntry_Object = MibTableRow
wtIpWatcherOutputEntry = _WtIpWatcherOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 5, 1)
)
wtIpWatcherOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherOutputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherOutputEntry.setStatus("mandatory")


class _WtIpWatcherOutputNo_Type(Integer32):
    """Custom type wtIpWatcherOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtIpWatcherOutputNo_Type.__name__ = "Integer32"
_WtIpWatcherOutputNo_Object = MibTableColumn
wtIpWatcherOutputNo = _WtIpWatcherOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 5, 1, 1),
    _WtIpWatcherOutputNo_Type()
)
wtIpWatcherOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherOutputNo.setStatus("mandatory")


class _WtIpWatcherOutputState_Type(Integer32):
    """Custom type wtIpWatcherOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherOutputState-OFF", 0),
          ("wtIpWatcherOutputState-ON", 1))
    )


_WtIpWatcherOutputState_Type.__name__ = "Integer32"
_WtIpWatcherOutputState_Object = MibTableColumn
wtIpWatcherOutputState = _WtIpWatcherOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 5, 1, 2),
    _WtIpWatcherOutputState_Type()
)
wtIpWatcherOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherOutputState.setStatus("mandatory")
_WtIpWatcherOutputValue_Type = Integer32
_WtIpWatcherOutputValue_Object = MibScalar
wtIpWatcherOutputValue = _WtIpWatcherOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 6),
    _WtIpWatcherOutputValue_Type()
)
wtIpWatcherOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherOutputValue.setStatus("mandatory")


class _WtIpWatcherSetOutput_Type(OctetString):
    """Custom type wtIpWatcherSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtIpWatcherSetOutput_Type.__name__ = "OctetString"
_WtIpWatcherSetOutput_Object = MibScalar
wtIpWatcherSetOutput = _WtIpWatcherSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 7),
    _WtIpWatcherSetOutput_Type()
)
wtIpWatcherSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSetOutput.setStatus("mandatory")
_WtIpWatcherAlarmOutputTable_Object = MibTable
wtIpWatcherAlarmOutputTable = _WtIpWatcherAlarmOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 8)
)
if mibBuilder.loadTexts:
    wtIpWatcherAlarmOutputTable.setStatus("mandatory")
_WtIpWatcherAlarmOutputEntry_Object = MibTableRow
wtIpWatcherAlarmOutputEntry = _WtIpWatcherAlarmOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 8, 1)
)
wtIpWatcherAlarmOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherAlarmNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherAlarmOutputEntry.setStatus("mandatory")


class _WtIpWatcherAlarmOutputState_Type(Integer32):
    """Custom type wtIpWatcherAlarmOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherAlarmOutputState-OFF", 0),
          ("wtIpWatcherAlarmOutputState-ON", 1))
    )


_WtIpWatcherAlarmOutputState_Type.__name__ = "Integer32"
_WtIpWatcherAlarmOutputState_Object = MibTableColumn
wtIpWatcherAlarmOutputState = _WtIpWatcherAlarmOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 8, 1, 1),
    _WtIpWatcherAlarmOutputState_Type()
)
wtIpWatcherAlarmOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmOutputState.setStatus("mandatory")


class _WtIpWatcherAlarmTriggerState_Type(Integer32):
    """Custom type wtIpWatcherAlarmTriggerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherAlarmTriggerState-OFF", 0),
          ("wtIpWatcherAlarmTriggerState-ON", 1))
    )


_WtIpWatcherAlarmTriggerState_Type.__name__ = "Integer32"
_WtIpWatcherAlarmTriggerState_Object = MibTableColumn
wtIpWatcherAlarmTriggerState = _WtIpWatcherAlarmTriggerState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 1, 8, 1, 2),
    _WtIpWatcherAlarmTriggerState_Type()
)
wtIpWatcherAlarmTriggerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTriggerState.setStatus("mandatory")
_WtIpWatcherSessCntrl_ObjectIdentity = ObjectIdentity
wtIpWatcherSessCntrl = _WtIpWatcherSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 2)
)
_WtIpWatcherSessCntrlPassword_Type = OctetString
_WtIpWatcherSessCntrlPassword_Object = MibScalar
wtIpWatcherSessCntrlPassword = _WtIpWatcherSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 2, 1),
    _WtIpWatcherSessCntrlPassword_Type()
)
wtIpWatcherSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSessCntrlPassword.setStatus("mandatory")


class _WtIpWatcherSessCntrlConfigMode_Type(Integer32):
    """Custom type wtIpWatcherSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherSessCntrl-NoSession", 0),
          ("wtIpWatcherSessCntrl-Session", 1))
    )


_WtIpWatcherSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtIpWatcherSessCntrlConfigMode_Object = MibScalar
wtIpWatcherSessCntrlConfigMode = _WtIpWatcherSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 2, 2),
    _WtIpWatcherSessCntrlConfigMode_Type()
)
wtIpWatcherSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherSessCntrlConfigMode.setStatus("mandatory")
_WtIpWatcherSessCntrlLogout_Type = Integer32
_WtIpWatcherSessCntrlLogout_Object = MibScalar
wtIpWatcherSessCntrlLogout = _WtIpWatcherSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 2, 3),
    _WtIpWatcherSessCntrlLogout_Type()
)
wtIpWatcherSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSessCntrlLogout.setStatus("mandatory")
_WtIpWatcherSessCntrlAdminPassword_Type = OctetString
_WtIpWatcherSessCntrlAdminPassword_Object = MibScalar
wtIpWatcherSessCntrlAdminPassword = _WtIpWatcherSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 2, 4),
    _WtIpWatcherSessCntrlAdminPassword_Type()
)
wtIpWatcherSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSessCntrlAdminPassword.setStatus("mandatory")
_WtIpWatcherSessCntrlConfigPassword_Type = OctetString
_WtIpWatcherSessCntrlConfigPassword_Object = MibScalar
wtIpWatcherSessCntrlConfigPassword = _WtIpWatcherSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 2, 5),
    _WtIpWatcherSessCntrlConfigPassword_Type()
)
wtIpWatcherSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSessCntrlConfigPassword.setStatus("mandatory")
_WtIpWatcherConfig_ObjectIdentity = ObjectIdentity
wtIpWatcherConfig = _WtIpWatcherConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3)
)
_WtIpWatcherDevice_ObjectIdentity = ObjectIdentity
wtIpWatcherDevice = _WtIpWatcherDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1)
)
_WtIpWatcherText_ObjectIdentity = ObjectIdentity
wtIpWatcherText = _WtIpWatcherText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 1)
)
_WtIpWatcherDeviceName_Type = OctetString
_WtIpWatcherDeviceName_Object = MibScalar
wtIpWatcherDeviceName = _WtIpWatcherDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 1, 1),
    _WtIpWatcherDeviceName_Type()
)
wtIpWatcherDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDeviceName.setStatus("mandatory")
_WtIpWatcherDeviceText_Type = OctetString
_WtIpWatcherDeviceText_Object = MibScalar
wtIpWatcherDeviceText = _WtIpWatcherDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 1, 2),
    _WtIpWatcherDeviceText_Type()
)
wtIpWatcherDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDeviceText.setStatus("mandatory")
_WtIpWatcherDeviceLocation_Type = OctetString
_WtIpWatcherDeviceLocation_Object = MibScalar
wtIpWatcherDeviceLocation = _WtIpWatcherDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 1, 3),
    _WtIpWatcherDeviceLocation_Type()
)
wtIpWatcherDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDeviceLocation.setStatus("mandatory")
_WtIpWatcherDeviceContact_Type = OctetString
_WtIpWatcherDeviceContact_Object = MibScalar
wtIpWatcherDeviceContact = _WtIpWatcherDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 1, 4),
    _WtIpWatcherDeviceContact_Type()
)
wtIpWatcherDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDeviceContact.setStatus("mandatory")
_WtIpWatcherTimeDate_ObjectIdentity = ObjectIdentity
wtIpWatcherTimeDate = _WtIpWatcherTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2)
)
_WtIpWatcherTimeZone_ObjectIdentity = ObjectIdentity
wtIpWatcherTimeZone = _WtIpWatcherTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1)
)
_WtIpWatcherTzOffsetHrs_Type = Integer32
_WtIpWatcherTzOffsetHrs_Object = MibScalar
wtIpWatcherTzOffsetHrs = _WtIpWatcherTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 1),
    _WtIpWatcherTzOffsetHrs_Type()
)
wtIpWatcherTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTzOffsetHrs.setStatus("mandatory")
_WtIpWatcherTzOffsetMin_Type = Integer32
_WtIpWatcherTzOffsetMin_Object = MibScalar
wtIpWatcherTzOffsetMin = _WtIpWatcherTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 2),
    _WtIpWatcherTzOffsetMin_Type()
)
wtIpWatcherTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTzOffsetMin.setStatus("mandatory")


class _WtIpWatcherTzEnable_Type(OctetString):
    """Custom type wtIpWatcherTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherTzEnable_Type.__name__ = "OctetString"
_WtIpWatcherTzEnable_Object = MibScalar
wtIpWatcherTzEnable = _WtIpWatcherTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 3),
    _WtIpWatcherTzEnable_Type()
)
wtIpWatcherTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTzEnable.setStatus("mandatory")
_WtIpWatcherStTzOffsetHrs_Type = Integer32
_WtIpWatcherStTzOffsetHrs_Object = MibScalar
wtIpWatcherStTzOffsetHrs = _WtIpWatcherStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 4),
    _WtIpWatcherStTzOffsetHrs_Type()
)
wtIpWatcherStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzOffsetHrs.setStatus("mandatory")
_WtIpWatcherStTzOffsetMin_Type = Integer32
_WtIpWatcherStTzOffsetMin_Object = MibScalar
wtIpWatcherStTzOffsetMin = _WtIpWatcherStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 5),
    _WtIpWatcherStTzOffsetMin_Type()
)
wtIpWatcherStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzOffsetMin.setStatus("mandatory")


class _WtIpWatcherStTzEnable_Type(OctetString):
    """Custom type wtIpWatcherStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherStTzEnable_Type.__name__ = "OctetString"
_WtIpWatcherStTzEnable_Object = MibScalar
wtIpWatcherStTzEnable = _WtIpWatcherStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 6),
    _WtIpWatcherStTzEnable_Type()
)
wtIpWatcherStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzEnable.setStatus("mandatory")


class _WtIpWatcherStTzStartMonth_Type(Integer32):
    """Custom type wtIpWatcherStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherStartMonth-April", 4),
          ("wtIpWatcherStartMonth-August", 8),
          ("wtIpWatcherStartMonth-December", 12),
          ("wtIpWatcherStartMonth-February", 2),
          ("wtIpWatcherStartMonth-January", 1),
          ("wtIpWatcherStartMonth-July", 7),
          ("wtIpWatcherStartMonth-June", 6),
          ("wtIpWatcherStartMonth-March", 3),
          ("wtIpWatcherStartMonth-May", 5),
          ("wtIpWatcherStartMonth-November", 11),
          ("wtIpWatcherStartMonth-October", 10),
          ("wtIpWatcherStartMonth-September", 9))
    )


_WtIpWatcherStTzStartMonth_Type.__name__ = "Integer32"
_WtIpWatcherStTzStartMonth_Object = MibScalar
wtIpWatcherStTzStartMonth = _WtIpWatcherStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 7),
    _WtIpWatcherStTzStartMonth_Type()
)
wtIpWatcherStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStartMonth.setStatus("mandatory")


class _WtIpWatcherStTzStartMode_Type(Integer32):
    """Custom type wtIpWatcherStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherStartMode-first", 1),
          ("wtIpWatcherStartMode-fourth", 4),
          ("wtIpWatcherStartMode-last", 5),
          ("wtIpWatcherStartMode-second", 2),
          ("wtIpWatcherStartMode-third", 3))
    )


_WtIpWatcherStTzStartMode_Type.__name__ = "Integer32"
_WtIpWatcherStTzStartMode_Object = MibScalar
wtIpWatcherStTzStartMode = _WtIpWatcherStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 8),
    _WtIpWatcherStTzStartMode_Type()
)
wtIpWatcherStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStartMode.setStatus("mandatory")


class _WtIpWatcherStTzStartWday_Type(Integer32):
    """Custom type wtIpWatcherStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherStartWday-Friday", 6),
          ("wtIpWatcherStartWday-Monday", 2),
          ("wtIpWatcherStartWday-Saturday", 7),
          ("wtIpWatcherStartWday-Sunday", 1),
          ("wtIpWatcherStartWday-Thursday", 4),
          ("wtIpWatcherStartWday-Tuesday", 3),
          ("wtIpWatcherStartWday-Wednesday", 5))
    )


_WtIpWatcherStTzStartWday_Type.__name__ = "Integer32"
_WtIpWatcherStTzStartWday_Object = MibScalar
wtIpWatcherStTzStartWday = _WtIpWatcherStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 9),
    _WtIpWatcherStTzStartWday_Type()
)
wtIpWatcherStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStartWday.setStatus("mandatory")
_WtIpWatcherStTzStartHrs_Type = Integer32
_WtIpWatcherStTzStartHrs_Object = MibScalar
wtIpWatcherStTzStartHrs = _WtIpWatcherStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 10),
    _WtIpWatcherStTzStartHrs_Type()
)
wtIpWatcherStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStartHrs.setStatus("mandatory")
_WtIpWatcherStTzStartMin_Type = Integer32
_WtIpWatcherStTzStartMin_Object = MibScalar
wtIpWatcherStTzStartMin = _WtIpWatcherStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 11),
    _WtIpWatcherStTzStartMin_Type()
)
wtIpWatcherStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStartMin.setStatus("mandatory")


class _WtIpWatcherStTzStopMonth_Type(Integer32):
    """Custom type wtIpWatcherStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherStopMonth-April", 4),
          ("wtIpWatcherStopMonth-August", 8),
          ("wtIpWatcherStopMonth-December", 12),
          ("wtIpWatcherStopMonth-February", 2),
          ("wtIpWatcherStopMonth-January", 1),
          ("wtIpWatcherStopMonth-July", 7),
          ("wtIpWatcherStopMonth-June", 6),
          ("wtIpWatcherStopMonth-March", 3),
          ("wtIpWatcherStopMonth-May", 5),
          ("wtIpWatcherStopMonth-November", 11),
          ("wtIpWatcherStopMonth-October", 10),
          ("wtIpWatcherStopMonth-September", 9))
    )


_WtIpWatcherStTzStopMonth_Type.__name__ = "Integer32"
_WtIpWatcherStTzStopMonth_Object = MibScalar
wtIpWatcherStTzStopMonth = _WtIpWatcherStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 12),
    _WtIpWatcherStTzStopMonth_Type()
)
wtIpWatcherStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStopMonth.setStatus("mandatory")


class _WtIpWatcherStTzStopMode_Type(Integer32):
    """Custom type wtIpWatcherStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherStopMode-first", 1),
          ("wtIpWatcherStopMode-fourth", 4),
          ("wtIpWatcherStopMode-last", 5),
          ("wtIpWatcherStopMode-second", 2),
          ("wtIpWatcherStopMode-third", 3))
    )


_WtIpWatcherStTzStopMode_Type.__name__ = "Integer32"
_WtIpWatcherStTzStopMode_Object = MibScalar
wtIpWatcherStTzStopMode = _WtIpWatcherStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 13),
    _WtIpWatcherStTzStopMode_Type()
)
wtIpWatcherStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStopMode.setStatus("mandatory")


class _WtIpWatcherStTzStopWday_Type(Integer32):
    """Custom type wtIpWatcherStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherStopWday-Friday", 6),
          ("wtIpWatcherStopWday-Monday", 2),
          ("wtIpWatcherStopWday-Saturday", 7),
          ("wtIpWatcherStopWday-Sunday", 1),
          ("wtIpWatcherStopWday-Thursday", 4),
          ("wtIpWatcherStopWday-Tuesday", 3),
          ("wtIpWatcherStopWday-Wednesday", 5))
    )


_WtIpWatcherStTzStopWday_Type.__name__ = "Integer32"
_WtIpWatcherStTzStopWday_Object = MibScalar
wtIpWatcherStTzStopWday = _WtIpWatcherStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 14),
    _WtIpWatcherStTzStopWday_Type()
)
wtIpWatcherStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStopWday.setStatus("mandatory")
_WtIpWatcherStTzStopHrs_Type = Integer32
_WtIpWatcherStTzStopHrs_Object = MibScalar
wtIpWatcherStTzStopHrs = _WtIpWatcherStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 15),
    _WtIpWatcherStTzStopHrs_Type()
)
wtIpWatcherStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStopHrs.setStatus("mandatory")
_WtIpWatcherStTzStopMin_Type = Integer32
_WtIpWatcherStTzStopMin_Object = MibScalar
wtIpWatcherStTzStopMin = _WtIpWatcherStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 1, 16),
    _WtIpWatcherStTzStopMin_Type()
)
wtIpWatcherStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherStTzStopMin.setStatus("mandatory")
_WtIpWatcherTimeServer_ObjectIdentity = ObjectIdentity
wtIpWatcherTimeServer = _WtIpWatcherTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 2)
)
_WtIpWatcherTimeServer1_Type = OctetString
_WtIpWatcherTimeServer1_Object = MibScalar
wtIpWatcherTimeServer1 = _WtIpWatcherTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 2, 1),
    _WtIpWatcherTimeServer1_Type()
)
wtIpWatcherTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTimeServer1.setStatus("mandatory")
_WtIpWatcherTimeServer2_Type = OctetString
_WtIpWatcherTimeServer2_Object = MibScalar
wtIpWatcherTimeServer2 = _WtIpWatcherTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 2, 2),
    _WtIpWatcherTimeServer2_Type()
)
wtIpWatcherTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTimeServer2.setStatus("mandatory")


class _WtIpWatcherTsEnable_Type(OctetString):
    """Custom type wtIpWatcherTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherTsEnable_Type.__name__ = "OctetString"
_WtIpWatcherTsEnable_Object = MibScalar
wtIpWatcherTsEnable = _WtIpWatcherTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 2, 3),
    _WtIpWatcherTsEnable_Type()
)
wtIpWatcherTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTsEnable.setStatus("mandatory")
_WtIpWatcherTsSyncTime_Type = Integer32
_WtIpWatcherTsSyncTime_Object = MibScalar
wtIpWatcherTsSyncTime = _WtIpWatcherTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 2, 4),
    _WtIpWatcherTsSyncTime_Type()
)
wtIpWatcherTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherTsSyncTime.setStatus("mandatory")
_WtIpWatcherDeviceClock_ObjectIdentity = ObjectIdentity
wtIpWatcherDeviceClock = _WtIpWatcherDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 3)
)


class _WtIpWatcherClockHrs_Type(Integer32):
    """Custom type wtIpWatcherClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtIpWatcherClockHrs_Type.__name__ = "Integer32"
_WtIpWatcherClockHrs_Object = MibScalar
wtIpWatcherClockHrs = _WtIpWatcherClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 3, 1),
    _WtIpWatcherClockHrs_Type()
)
wtIpWatcherClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherClockHrs.setStatus("mandatory")


class _WtIpWatcherClockMin_Type(Integer32):
    """Custom type wtIpWatcherClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtIpWatcherClockMin_Type.__name__ = "Integer32"
_WtIpWatcherClockMin_Object = MibScalar
wtIpWatcherClockMin = _WtIpWatcherClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 3, 2),
    _WtIpWatcherClockMin_Type()
)
wtIpWatcherClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherClockMin.setStatus("mandatory")


class _WtIpWatcherClockDay_Type(Integer32):
    """Custom type wtIpWatcherClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtIpWatcherClockDay_Type.__name__ = "Integer32"
_WtIpWatcherClockDay_Object = MibScalar
wtIpWatcherClockDay = _WtIpWatcherClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 3, 3),
    _WtIpWatcherClockDay_Type()
)
wtIpWatcherClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherClockDay.setStatus("mandatory")


class _WtIpWatcherClockMonth_Type(Integer32):
    """Custom type wtIpWatcherClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcherClockMonth-April", 4),
          ("wtIpWatcherClockMonth-August", 8),
          ("wtIpWatcherClockMonth-December", 12),
          ("wtIpWatcherClockMonth-February", 2),
          ("wtIpWatcherClockMonth-January", 1),
          ("wtIpWatcherClockMonth-July", 7),
          ("wtIpWatcherClockMonth-June", 6),
          ("wtIpWatcherClockMonth-March", 3),
          ("wtIpWatcherClockMonth-May", 5),
          ("wtIpWatcherClockMonth-November", 11),
          ("wtIpWatcherClockMonth-October", 10),
          ("wtIpWatcherClockMonth-September", 9))
    )


_WtIpWatcherClockMonth_Type.__name__ = "Integer32"
_WtIpWatcherClockMonth_Object = MibScalar
wtIpWatcherClockMonth = _WtIpWatcherClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 3, 4),
    _WtIpWatcherClockMonth_Type()
)
wtIpWatcherClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherClockMonth.setStatus("mandatory")


class _WtIpWatcherClockYear_Type(Integer32):
    """Custom type wtIpWatcherClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtIpWatcherClockYear_Type.__name__ = "Integer32"
_WtIpWatcherClockYear_Object = MibScalar
wtIpWatcherClockYear = _WtIpWatcherClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 2, 3, 5),
    _WtIpWatcherClockYear_Type()
)
wtIpWatcherClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherClockYear.setStatus("mandatory")
_WtIpWatcherBasic_ObjectIdentity = ObjectIdentity
wtIpWatcherBasic = _WtIpWatcherBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3)
)
_WtIpWatcherNetwork_ObjectIdentity = ObjectIdentity
wtIpWatcherNetwork = _WtIpWatcherNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1)
)
_WtIpWatcherIpAddress_Type = IpAddress
_WtIpWatcherIpAddress_Object = MibScalar
wtIpWatcherIpAddress = _WtIpWatcherIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1, 1),
    _WtIpWatcherIpAddress_Type()
)
wtIpWatcherIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherIpAddress.setStatus("mandatory")
_WtIpWatcherSubnetMask_Type = IpAddress
_WtIpWatcherSubnetMask_Object = MibScalar
wtIpWatcherSubnetMask = _WtIpWatcherSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1, 2),
    _WtIpWatcherSubnetMask_Type()
)
wtIpWatcherSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSubnetMask.setStatus("mandatory")
_WtIpWatcherGateway_Type = IpAddress
_WtIpWatcherGateway_Object = MibScalar
wtIpWatcherGateway = _WtIpWatcherGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1, 3),
    _WtIpWatcherGateway_Type()
)
wtIpWatcherGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherGateway.setStatus("mandatory")
_WtIpWatcherDnsServer1_Type = OctetString
_WtIpWatcherDnsServer1_Object = MibScalar
wtIpWatcherDnsServer1 = _WtIpWatcherDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1, 4),
    _WtIpWatcherDnsServer1_Type()
)
wtIpWatcherDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDnsServer1.setStatus("mandatory")
_WtIpWatcherDnsServer2_Type = OctetString
_WtIpWatcherDnsServer2_Object = MibScalar
wtIpWatcherDnsServer2 = _WtIpWatcherDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1, 5),
    _WtIpWatcherDnsServer2_Type()
)
wtIpWatcherDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDnsServer2.setStatus("mandatory")
_WtIpWatcherAddConfig_Type = OctetString
_WtIpWatcherAddConfig_Object = MibScalar
wtIpWatcherAddConfig = _WtIpWatcherAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 1, 6),
    _WtIpWatcherAddConfig_Type()
)
wtIpWatcherAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAddConfig.setStatus("mandatory")
_WtIpWatcherHTTP_ObjectIdentity = ObjectIdentity
wtIpWatcherHTTP = _WtIpWatcherHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 2)
)


class _WtIpWatcherHttpPort_Type(Integer32):
    """Custom type wtIpWatcherHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtIpWatcherHttpPort_Type.__name__ = "Integer32"
_WtIpWatcherHttpPort_Object = MibScalar
wtIpWatcherHttpPort = _WtIpWatcherHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 2, 4),
    _WtIpWatcherHttpPort_Type()
)
wtIpWatcherHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherHttpPort.setStatus("mandatory")
_WtIpWatcherMail_ObjectIdentity = ObjectIdentity
wtIpWatcherMail = _WtIpWatcherMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3)
)
_WtIpWatcherMailAdName_Type = OctetString
_WtIpWatcherMailAdName_Object = MibScalar
wtIpWatcherMailAdName = _WtIpWatcherMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 1),
    _WtIpWatcherMailAdName_Type()
)
wtIpWatcherMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailAdName.setStatus("mandatory")
_WtIpWatcherMailReply_Type = OctetString
_WtIpWatcherMailReply_Object = MibScalar
wtIpWatcherMailReply = _WtIpWatcherMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 2),
    _WtIpWatcherMailReply_Type()
)
wtIpWatcherMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailReply.setStatus("mandatory")
_WtIpWatcherMailServer_Type = OctetString
_WtIpWatcherMailServer_Object = MibScalar
wtIpWatcherMailServer = _WtIpWatcherMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 3),
    _WtIpWatcherMailServer_Type()
)
wtIpWatcherMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailServer.setStatus("mandatory")
_WtIpWatcherMailEnable_Type = OctetString
_WtIpWatcherMailEnable_Object = MibScalar
wtIpWatcherMailEnable = _WtIpWatcherMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 4),
    _WtIpWatcherMailEnable_Type()
)
wtIpWatcherMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailEnable.setStatus("mandatory")


class _WtIpWatcherMailAuthentication_Type(OctetString):
    """Custom type wtIpWatcherMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherMailAuthentication_Type.__name__ = "OctetString"
_WtIpWatcherMailAuthentication_Object = MibScalar
wtIpWatcherMailAuthentication = _WtIpWatcherMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 5),
    _WtIpWatcherMailAuthentication_Type()
)
wtIpWatcherMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailAuthentication.setStatus("mandatory")
_WtIpWatcherMailAuthUser_Type = OctetString
_WtIpWatcherMailAuthUser_Object = MibScalar
wtIpWatcherMailAuthUser = _WtIpWatcherMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 6),
    _WtIpWatcherMailAuthUser_Type()
)
wtIpWatcherMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailAuthUser.setStatus("mandatory")
_WtIpWatcherMailAuthPassword_Type = OctetString
_WtIpWatcherMailAuthPassword_Object = MibScalar
wtIpWatcherMailAuthPassword = _WtIpWatcherMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 7),
    _WtIpWatcherMailAuthPassword_Type()
)
wtIpWatcherMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailAuthPassword.setStatus("mandatory")
_WtIpWatcherMailPop3Server_Type = OctetString
_WtIpWatcherMailPop3Server_Object = MibScalar
wtIpWatcherMailPop3Server = _WtIpWatcherMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 3, 8),
    _WtIpWatcherMailPop3Server_Type()
)
wtIpWatcherMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMailPop3Server.setStatus("mandatory")
_WtIpWatcherSNMP_ObjectIdentity = ObjectIdentity
wtIpWatcherSNMP = _WtIpWatcherSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 4)
)
_WtIpWatcherSnmpEnable_Type = OctetString
_WtIpWatcherSnmpEnable_Object = MibScalar
wtIpWatcherSnmpEnable = _WtIpWatcherSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 4, 1),
    _WtIpWatcherSnmpEnable_Type()
)
wtIpWatcherSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSnmpEnable.setStatus("mandatory")
_WtIpWatcherSnmpCommunityStringRead_Type = OctetString
_WtIpWatcherSnmpCommunityStringRead_Object = MibScalar
wtIpWatcherSnmpCommunityStringRead = _WtIpWatcherSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 4, 2),
    _WtIpWatcherSnmpCommunityStringRead_Type()
)
wtIpWatcherSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSnmpCommunityStringRead.setStatus("mandatory")
_WtIpWatcherSnmpCommunityStringReadWrite_Type = OctetString
_WtIpWatcherSnmpCommunityStringReadWrite_Object = MibScalar
wtIpWatcherSnmpCommunityStringReadWrite = _WtIpWatcherSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 4, 3),
    _WtIpWatcherSnmpCommunityStringReadWrite_Type()
)
wtIpWatcherSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtIpWatcherSnmpSystemTrapManagerIP_Type = OctetString
_WtIpWatcherSnmpSystemTrapManagerIP_Object = MibScalar
wtIpWatcherSnmpSystemTrapManagerIP = _WtIpWatcherSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 4, 4),
    _WtIpWatcherSnmpSystemTrapManagerIP_Type()
)
wtIpWatcherSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtIpWatcherSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtIpWatcherSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtIpWatcherSnmpSystemTrapEnable_Object = MibScalar
wtIpWatcherSnmpSystemTrapEnable = _WtIpWatcherSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 4, 5),
    _WtIpWatcherSnmpSystemTrapEnable_Type()
)
wtIpWatcherSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSnmpSystemTrapEnable.setStatus("mandatory")
_WtIpWatcherUDP_ObjectIdentity = ObjectIdentity
wtIpWatcherUDP = _WtIpWatcherUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 5)
)
_WtIpWatcherUdpAdminPort_Type = Integer32
_WtIpWatcherUdpAdminPort_Object = MibScalar
wtIpWatcherUdpAdminPort = _WtIpWatcherUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 5, 1),
    _WtIpWatcherUdpAdminPort_Type()
)
wtIpWatcherUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherUdpAdminPort.setStatus("mandatory")
_WtIpWatcherUdpEnable_Type = OctetString
_WtIpWatcherUdpEnable_Object = MibScalar
wtIpWatcherUdpEnable = _WtIpWatcherUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 5, 2),
    _WtIpWatcherUdpEnable_Type()
)
wtIpWatcherUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherUdpEnable.setStatus("mandatory")
_WtIpWatcherUdpRemotePort_Type = Integer32
_WtIpWatcherUdpRemotePort_Object = MibScalar
wtIpWatcherUdpRemotePort = _WtIpWatcherUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 5, 3),
    _WtIpWatcherUdpRemotePort_Type()
)
wtIpWatcherUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherUdpRemotePort.setStatus("mandatory")
_WtIpWatcherSyslog_ObjectIdentity = ObjectIdentity
wtIpWatcherSyslog = _WtIpWatcherSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 7)
)
_WtIpWatcherSyslogServerIP_Type = OctetString
_WtIpWatcherSyslogServerIP_Object = MibScalar
wtIpWatcherSyslogServerIP = _WtIpWatcherSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 7, 1),
    _WtIpWatcherSyslogServerIP_Type()
)
wtIpWatcherSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSyslogServerIP.setStatus("mandatory")
_WtIpWatcherSyslogServerPort_Type = Integer32
_WtIpWatcherSyslogServerPort_Object = MibScalar
wtIpWatcherSyslogServerPort = _WtIpWatcherSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 7, 2),
    _WtIpWatcherSyslogServerPort_Type()
)
wtIpWatcherSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSyslogServerPort.setStatus("mandatory")


class _WtIpWatcherSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtIpWatcherSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtIpWatcherSyslogSystemMessagesEnable_Object = MibScalar
wtIpWatcherSyslogSystemMessagesEnable = _WtIpWatcherSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 7, 3),
    _WtIpWatcherSyslogSystemMessagesEnable_Type()
)
wtIpWatcherSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSyslogSystemMessagesEnable.setStatus("mandatory")
_WtIpWatcherSyslogEnable_Type = OctetString
_WtIpWatcherSyslogEnable_Object = MibScalar
wtIpWatcherSyslogEnable = _WtIpWatcherSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 7, 4),
    _WtIpWatcherSyslogEnable_Type()
)
wtIpWatcherSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherSyslogEnable.setStatus("mandatory")
_WtIpWatcherFTP_ObjectIdentity = ObjectIdentity
wtIpWatcherFTP = _WtIpWatcherFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8)
)
_WtIpWatcherFTPServerIP_Type = OctetString
_WtIpWatcherFTPServerIP_Object = MibScalar
wtIpWatcherFTPServerIP = _WtIpWatcherFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 1),
    _WtIpWatcherFTPServerIP_Type()
)
wtIpWatcherFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPServerIP.setStatus("mandatory")
_WtIpWatcherFTPServerControlPort_Type = Integer32
_WtIpWatcherFTPServerControlPort_Object = MibScalar
wtIpWatcherFTPServerControlPort = _WtIpWatcherFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 2),
    _WtIpWatcherFTPServerControlPort_Type()
)
wtIpWatcherFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPServerControlPort.setStatus("mandatory")
_WtIpWatcherFTPUserName_Type = OctetString
_WtIpWatcherFTPUserName_Object = MibScalar
wtIpWatcherFTPUserName = _WtIpWatcherFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 3),
    _WtIpWatcherFTPUserName_Type()
)
wtIpWatcherFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPUserName.setStatus("mandatory")
_WtIpWatcherFTPPassword_Type = OctetString
_WtIpWatcherFTPPassword_Object = MibScalar
wtIpWatcherFTPPassword = _WtIpWatcherFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 4),
    _WtIpWatcherFTPPassword_Type()
)
wtIpWatcherFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPPassword.setStatus("mandatory")
_WtIpWatcherFTPAccount_Type = OctetString
_WtIpWatcherFTPAccount_Object = MibScalar
wtIpWatcherFTPAccount = _WtIpWatcherFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 5),
    _WtIpWatcherFTPAccount_Type()
)
wtIpWatcherFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPAccount.setStatus("mandatory")
_WtIpWatcherFTPOption_Type = OctetString
_WtIpWatcherFTPOption_Object = MibScalar
wtIpWatcherFTPOption = _WtIpWatcherFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 6),
    _WtIpWatcherFTPOption_Type()
)
wtIpWatcherFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPOption.setStatus("mandatory")
_WtIpWatcherFTPEnable_Type = OctetString
_WtIpWatcherFTPEnable_Object = MibScalar
wtIpWatcherFTPEnable = _WtIpWatcherFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 8, 7),
    _WtIpWatcherFTPEnable_Type()
)
wtIpWatcherFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherFTPEnable.setStatus("mandatory")
_WtIpWatcherIpList_ObjectIdentity = ObjectIdentity
wtIpWatcherIpList = _WtIpWatcherIpList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11)
)
_WtIpWatcherIpListCount_Type = Integer32
_WtIpWatcherIpListCount_Object = MibScalar
wtIpWatcherIpListCount = _WtIpWatcherIpListCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 1),
    _WtIpWatcherIpListCount_Type()
)
wtIpWatcherIpListCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherIpListCount.setStatus("mandatory")
_WtIpWatcherIpListIfTable_Object = MibTable
wtIpWatcherIpListIfTable = _WtIpWatcherIpListIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 2)
)
if mibBuilder.loadTexts:
    wtIpWatcherIpListIfTable.setStatus("mandatory")
_WtIpWatcherIpListIfEntry_Object = MibTableRow
wtIpWatcherIpListIfEntry = _WtIpWatcherIpListIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 2, 1)
)
wtIpWatcherIpListIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherIpListNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherIpListIfEntry.setStatus("mandatory")


class _WtIpWatcherIpListNo_Type(Integer32):
    """Custom type wtIpWatcherIpListNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_WtIpWatcherIpListNo_Type.__name__ = "Integer32"
_WtIpWatcherIpListNo_Object = MibTableColumn
wtIpWatcherIpListNo = _WtIpWatcherIpListNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 2, 1, 1),
    _WtIpWatcherIpListNo_Type()
)
wtIpWatcherIpListNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherIpListNo.setStatus("mandatory")
_WtIpWatcherIpListTable_Object = MibTable
wtIpWatcherIpListTable = _WtIpWatcherIpListTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3)
)
if mibBuilder.loadTexts:
    wtIpWatcherIpListTable.setStatus("mandatory")
_WtIpWatcherIpListEntry_Object = MibTableRow
wtIpWatcherIpListEntry = _WtIpWatcherIpListEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3, 1)
)
wtIpWatcherIpListEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherIpListNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherIpListEntry.setStatus("mandatory")
_WtIpWatcherIpListName_Type = OctetString
_WtIpWatcherIpListName_Object = MibTableColumn
wtIpWatcherIpListName = _WtIpWatcherIpListName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3, 1, 1),
    _WtIpWatcherIpListName_Type()
)
wtIpWatcherIpListName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherIpListName.setStatus("mandatory")
_WtIpWatcherIpListPort_Type = Integer32
_WtIpWatcherIpListPort_Object = MibTableColumn
wtIpWatcherIpListPort = _WtIpWatcherIpListPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3, 1, 2),
    _WtIpWatcherIpListPort_Type()
)
wtIpWatcherIpListPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherIpListPort.setStatus("mandatory")
_WtIpWatcherIpListService_Type = OctetString
_WtIpWatcherIpListService_Object = MibTableColumn
wtIpWatcherIpListService = _WtIpWatcherIpListService_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3, 1, 3),
    _WtIpWatcherIpListService_Type()
)
wtIpWatcherIpListService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherIpListService.setStatus("mandatory")
_WtIpWatcherIpListEnable_Type = OctetString
_WtIpWatcherIpListEnable_Object = MibTableColumn
wtIpWatcherIpListEnable = _WtIpWatcherIpListEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3, 1, 4),
    _WtIpWatcherIpListEnable_Type()
)
wtIpWatcherIpListEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherIpListEnable.setStatus("mandatory")
_WtIpWatcherIpListAlias_Type = OctetString
_WtIpWatcherIpListAlias_Object = MibTableColumn
wtIpWatcherIpListAlias = _WtIpWatcherIpListAlias_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 3, 11, 3, 1, 5),
    _WtIpWatcherIpListAlias_Type()
)
wtIpWatcherIpListAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherIpListAlias.setStatus("mandatory")
_WtIpWatcherAlarm_ObjectIdentity = ObjectIdentity
wtIpWatcherAlarm = _WtIpWatcherAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5)
)


class _WtIpWatcherAlarmCount_Type(Integer32):
    """Custom type wtIpWatcherAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtIpWatcherAlarmCount_Type.__name__ = "Integer32"
_WtIpWatcherAlarmCount_Object = MibScalar
wtIpWatcherAlarmCount = _WtIpWatcherAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 1),
    _WtIpWatcherAlarmCount_Type()
)
wtIpWatcherAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmCount.setStatus("mandatory")
_WtIpWatcherAlarmIfTable_Object = MibTable
wtIpWatcherAlarmIfTable = _WtIpWatcherAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtIpWatcherAlarmIfTable.setStatus("mandatory")
_WtIpWatcherAlarmIfEntry_Object = MibTableRow
wtIpWatcherAlarmIfEntry = _WtIpWatcherAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 2, 1)
)
wtIpWatcherAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherAlarmNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherAlarmIfEntry.setStatus("mandatory")


class _WtIpWatcherAlarmNo_Type(Integer32):
    """Custom type wtIpWatcherAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtIpWatcherAlarmNo_Type.__name__ = "Integer32"
_WtIpWatcherAlarmNo_Object = MibTableColumn
wtIpWatcherAlarmNo = _WtIpWatcherAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 2, 1, 1),
    _WtIpWatcherAlarmNo_Type()
)
wtIpWatcherAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmNo.setStatus("mandatory")
_WtIpWatcherAlarmTable_Object = MibTable
wtIpWatcherAlarmTable = _WtIpWatcherAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTable.setStatus("mandatory")
_WtIpWatcherAlarmEntry_Object = MibTableRow
wtIpWatcherAlarmEntry = _WtIpWatcherAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1)
)
wtIpWatcherAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherAlarmNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherAlarmEntry.setStatus("mandatory")
_WtIpWatcherAlarmInterval_Type = OctetString
_WtIpWatcherAlarmInterval_Object = MibTableColumn
wtIpWatcherAlarmInterval = _WtIpWatcherAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 5),
    _WtIpWatcherAlarmInterval_Type()
)
wtIpWatcherAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmInterval.setStatus("mandatory")


class _WtIpWatcherAlarmEnable_Type(OctetString):
    """Custom type wtIpWatcherAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherAlarmEnable_Type.__name__ = "OctetString"
_WtIpWatcherAlarmEnable_Object = MibTableColumn
wtIpWatcherAlarmEnable = _WtIpWatcherAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 6),
    _WtIpWatcherAlarmEnable_Type()
)
wtIpWatcherAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmEnable.setStatus("mandatory")
_WtIpWatcherAlarmMailAddr_Type = OctetString
_WtIpWatcherAlarmMailAddr_Object = MibTableColumn
wtIpWatcherAlarmMailAddr = _WtIpWatcherAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 7),
    _WtIpWatcherAlarmMailAddr_Type()
)
wtIpWatcherAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailAddr.setStatus("mandatory")
_WtIpWatcherAlarmMailSubject_Type = OctetString
_WtIpWatcherAlarmMailSubject_Object = MibTableColumn
wtIpWatcherAlarmMailSubject = _WtIpWatcherAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 8),
    _WtIpWatcherAlarmMailSubject_Type()
)
wtIpWatcherAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailSubject.setStatus("mandatory")
_WtIpWatcherAlarmMailText_Type = OctetString
_WtIpWatcherAlarmMailText_Object = MibTableColumn
wtIpWatcherAlarmMailText = _WtIpWatcherAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 9),
    _WtIpWatcherAlarmMailText_Type()
)
wtIpWatcherAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailText.setStatus("mandatory")
_WtIpWatcherAlarmSnmpManagerIP_Type = OctetString
_WtIpWatcherAlarmSnmpManagerIP_Object = MibTableColumn
wtIpWatcherAlarmSnmpManagerIP = _WtIpWatcherAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 10),
    _WtIpWatcherAlarmSnmpManagerIP_Type()
)
wtIpWatcherAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSnmpManagerIP.setStatus("mandatory")
_WtIpWatcherAlarmSnmpTrapText_Type = OctetString
_WtIpWatcherAlarmSnmpTrapText_Object = MibTableColumn
wtIpWatcherAlarmSnmpTrapText = _WtIpWatcherAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 11),
    _WtIpWatcherAlarmSnmpTrapText_Type()
)
wtIpWatcherAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSnmpTrapText.setStatus("mandatory")
_WtIpWatcherAlarmUdpIpAddr_Type = OctetString
_WtIpWatcherAlarmUdpIpAddr_Object = MibTableColumn
wtIpWatcherAlarmUdpIpAddr = _WtIpWatcherAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 12),
    _WtIpWatcherAlarmUdpIpAddr_Type()
)
wtIpWatcherAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmUdpIpAddr.setStatus("mandatory")


class _WtIpWatcherAlarmUdpPort_Type(Integer32):
    """Custom type wtIpWatcherAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtIpWatcherAlarmUdpPort_Type.__name__ = "Integer32"
_WtIpWatcherAlarmUdpPort_Object = MibTableColumn
wtIpWatcherAlarmUdpPort = _WtIpWatcherAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 13),
    _WtIpWatcherAlarmUdpPort_Type()
)
wtIpWatcherAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmUdpPort.setStatus("mandatory")
_WtIpWatcherAlarmUdpText_Type = OctetString
_WtIpWatcherAlarmUdpText_Object = MibTableColumn
wtIpWatcherAlarmUdpText = _WtIpWatcherAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 14),
    _WtIpWatcherAlarmUdpText_Type()
)
wtIpWatcherAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmUdpText.setStatus("mandatory")
_WtIpWatcherAlarmTcpIpAddr_Type = OctetString
_WtIpWatcherAlarmTcpIpAddr_Object = MibTableColumn
wtIpWatcherAlarmTcpIpAddr = _WtIpWatcherAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 15),
    _WtIpWatcherAlarmTcpIpAddr_Type()
)
wtIpWatcherAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTcpIpAddr.setStatus("mandatory")


class _WtIpWatcherAlarmTcpPort_Type(Integer32):
    """Custom type wtIpWatcherAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtIpWatcherAlarmTcpPort_Type.__name__ = "Integer32"
_WtIpWatcherAlarmTcpPort_Object = MibTableColumn
wtIpWatcherAlarmTcpPort = _WtIpWatcherAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 16),
    _WtIpWatcherAlarmTcpPort_Type()
)
wtIpWatcherAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTcpPort.setStatus("mandatory")
_WtIpWatcherAlarmTcpText_Type = OctetString
_WtIpWatcherAlarmTcpText_Object = MibTableColumn
wtIpWatcherAlarmTcpText = _WtIpWatcherAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 17),
    _WtIpWatcherAlarmTcpText_Type()
)
wtIpWatcherAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTcpText.setStatus("mandatory")
_WtIpWatcherAlarmSyslogIpAddr_Type = OctetString
_WtIpWatcherAlarmSyslogIpAddr_Object = MibTableColumn
wtIpWatcherAlarmSyslogIpAddr = _WtIpWatcherAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 18),
    _WtIpWatcherAlarmSyslogIpAddr_Type()
)
wtIpWatcherAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSyslogIpAddr.setStatus("mandatory")


class _WtIpWatcherAlarmSyslogPort_Type(Integer32):
    """Custom type wtIpWatcherAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtIpWatcherAlarmSyslogPort_Type.__name__ = "Integer32"
_WtIpWatcherAlarmSyslogPort_Object = MibTableColumn
wtIpWatcherAlarmSyslogPort = _WtIpWatcherAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 19),
    _WtIpWatcherAlarmSyslogPort_Type()
)
wtIpWatcherAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSyslogPort.setStatus("mandatory")
_WtIpWatcherAlarmSyslogText_Type = OctetString
_WtIpWatcherAlarmSyslogText_Object = MibTableColumn
wtIpWatcherAlarmSyslogText = _WtIpWatcherAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 20),
    _WtIpWatcherAlarmSyslogText_Type()
)
wtIpWatcherAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSyslogText.setStatus("mandatory")
_WtIpWatcherAlarmFtpDataPort_Type = OctetString
_WtIpWatcherAlarmFtpDataPort_Object = MibTableColumn
wtIpWatcherAlarmFtpDataPort = _WtIpWatcherAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 21),
    _WtIpWatcherAlarmFtpDataPort_Type()
)
wtIpWatcherAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpDataPort.setStatus("mandatory")
_WtIpWatcherAlarmFtpFileName_Type = OctetString
_WtIpWatcherAlarmFtpFileName_Object = MibTableColumn
wtIpWatcherAlarmFtpFileName = _WtIpWatcherAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 22),
    _WtIpWatcherAlarmFtpFileName_Type()
)
wtIpWatcherAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpFileName.setStatus("mandatory")
_WtIpWatcherAlarmFtpText_Type = OctetString
_WtIpWatcherAlarmFtpText_Object = MibTableColumn
wtIpWatcherAlarmFtpText = _WtIpWatcherAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 23),
    _WtIpWatcherAlarmFtpText_Type()
)
wtIpWatcherAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpText.setStatus("mandatory")


class _WtIpWatcherAlarmFtpOption_Type(OctetString):
    """Custom type wtIpWatcherAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherAlarmFtpOption_Type.__name__ = "OctetString"
_WtIpWatcherAlarmFtpOption_Object = MibTableColumn
wtIpWatcherAlarmFtpOption = _WtIpWatcherAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 24),
    _WtIpWatcherAlarmFtpOption_Type()
)
wtIpWatcherAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpOption.setStatus("mandatory")
_WtIpWatcherAlarmTimerCron_Type = OctetString
_WtIpWatcherAlarmTimerCron_Object = MibTableColumn
wtIpWatcherAlarmTimerCron = _WtIpWatcherAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 25),
    _WtIpWatcherAlarmTimerCron_Type()
)
wtIpWatcherAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTimerCron.setStatus("mandatory")
_WtIpWatcherAlarmMailReleaseSubject_Type = OctetString
_WtIpWatcherAlarmMailReleaseSubject_Object = MibTableColumn
wtIpWatcherAlarmMailReleaseSubject = _WtIpWatcherAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 26),
    _WtIpWatcherAlarmMailReleaseSubject_Type()
)
wtIpWatcherAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailReleaseSubject.setStatus("mandatory")
_WtIpWatcherAlarmMailReleaseText_Type = OctetString
_WtIpWatcherAlarmMailReleaseText_Object = MibTableColumn
wtIpWatcherAlarmMailReleaseText = _WtIpWatcherAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 27),
    _WtIpWatcherAlarmMailReleaseText_Type()
)
wtIpWatcherAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailReleaseText.setStatus("mandatory")
_WtIpWatcherAlarmSnmpTrapReleaseText_Type = OctetString
_WtIpWatcherAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtIpWatcherAlarmSnmpTrapReleaseText = _WtIpWatcherAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 28),
    _WtIpWatcherAlarmSnmpTrapReleaseText_Type()
)
wtIpWatcherAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtIpWatcherAlarmUdpReleaseText_Type = OctetString
_WtIpWatcherAlarmUdpReleaseText_Object = MibTableColumn
wtIpWatcherAlarmUdpReleaseText = _WtIpWatcherAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 29),
    _WtIpWatcherAlarmUdpReleaseText_Type()
)
wtIpWatcherAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmUdpReleaseText.setStatus("mandatory")
_WtIpWatcherAlarmTcpReleaseText_Type = OctetString
_WtIpWatcherAlarmTcpReleaseText_Object = MibTableColumn
wtIpWatcherAlarmTcpReleaseText = _WtIpWatcherAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 30),
    _WtIpWatcherAlarmTcpReleaseText_Type()
)
wtIpWatcherAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTcpReleaseText.setStatus("mandatory")
_WtIpWatcherAlarmSyslogReleaseText_Type = OctetString
_WtIpWatcherAlarmSyslogReleaseText_Object = MibTableColumn
wtIpWatcherAlarmSyslogReleaseText = _WtIpWatcherAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 31),
    _WtIpWatcherAlarmSyslogReleaseText_Type()
)
wtIpWatcherAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSyslogReleaseText.setStatus("mandatory")
_WtIpWatcherAlarmFtpReleaseText_Type = OctetString
_WtIpWatcherAlarmFtpReleaseText_Object = MibTableColumn
wtIpWatcherAlarmFtpReleaseText = _WtIpWatcherAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 32),
    _WtIpWatcherAlarmFtpReleaseText_Type()
)
wtIpWatcherAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpReleaseText.setStatus("mandatory")
_WtIpWatcherAlarmName_Type = OctetString
_WtIpWatcherAlarmName_Object = MibTableColumn
wtIpWatcherAlarmName = _WtIpWatcherAlarmName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 33),
    _WtIpWatcherAlarmName_Type()
)
wtIpWatcherAlarmName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmName.setStatus("mandatory")
_WtIpWatcherAlarmGlobalEnable_Type = OctetString
_WtIpWatcherAlarmGlobalEnable_Object = MibTableColumn
wtIpWatcherAlarmGlobalEnable = _WtIpWatcherAlarmGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 34),
    _WtIpWatcherAlarmGlobalEnable_Type()
)
wtIpWatcherAlarmGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmGlobalEnable.setStatus("mandatory")
_WtIpWatcherAlarmCounterClear_Type = OctetString
_WtIpWatcherAlarmCounterClear_Object = MibTableColumn
wtIpWatcherAlarmCounterClear = _WtIpWatcherAlarmCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 35),
    _WtIpWatcherAlarmCounterClear_Type()
)
wtIpWatcherAlarmCounterClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmCounterClear.setStatus("mandatory")
_WtIpWatcherAlarmAckEnable_Type = OctetString
_WtIpWatcherAlarmAckEnable_Object = MibTableColumn
wtIpWatcherAlarmAckEnable = _WtIpWatcherAlarmAckEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 36),
    _WtIpWatcherAlarmAckEnable_Type()
)
wtIpWatcherAlarmAckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmAckEnable.setStatus("mandatory")
_WtIpWatcherAlarmAckPort_Type = Integer32
_WtIpWatcherAlarmAckPort_Object = MibTableColumn
wtIpWatcherAlarmAckPort = _WtIpWatcherAlarmAckPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 37),
    _WtIpWatcherAlarmAckPort_Type()
)
wtIpWatcherAlarmAckPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmAckPort.setStatus("mandatory")
_WtIpWatcherAlarmSetPort_Type = Integer32
_WtIpWatcherAlarmSetPort_Object = MibTableColumn
wtIpWatcherAlarmSetPort = _WtIpWatcherAlarmSetPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 38),
    _WtIpWatcherAlarmSetPort_Type()
)
wtIpWatcherAlarmSetPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSetPort.setStatus("mandatory")
_WtIpWatcherAlarmMailTrgClearSubject_Type = OctetString
_WtIpWatcherAlarmMailTrgClearSubject_Object = MibTableColumn
wtIpWatcherAlarmMailTrgClearSubject = _WtIpWatcherAlarmMailTrgClearSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 39),
    _WtIpWatcherAlarmMailTrgClearSubject_Type()
)
wtIpWatcherAlarmMailTrgClearSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailTrgClearSubject.setStatus("mandatory")
_WtIpWatcherAlarmMailTrgClearText_Type = OctetString
_WtIpWatcherAlarmMailTrgClearText_Object = MibTableColumn
wtIpWatcherAlarmMailTrgClearText = _WtIpWatcherAlarmMailTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 40),
    _WtIpWatcherAlarmMailTrgClearText_Type()
)
wtIpWatcherAlarmMailTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailTrgClearText.setStatus("mandatory")
_WtIpWatcherAlarmSnmpTrapTrgClearText_Type = OctetString
_WtIpWatcherAlarmSnmpTrapTrgClearText_Object = MibTableColumn
wtIpWatcherAlarmSnmpTrapTrgClearText = _WtIpWatcherAlarmSnmpTrapTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 41),
    _WtIpWatcherAlarmSnmpTrapTrgClearText_Type()
)
wtIpWatcherAlarmSnmpTrapTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSnmpTrapTrgClearText.setStatus("mandatory")
_WtIpWatcherAlarmUdpTrgClearText_Type = OctetString
_WtIpWatcherAlarmUdpTrgClearText_Object = MibTableColumn
wtIpWatcherAlarmUdpTrgClearText = _WtIpWatcherAlarmUdpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 42),
    _WtIpWatcherAlarmUdpTrgClearText_Type()
)
wtIpWatcherAlarmUdpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmUdpTrgClearText.setStatus("mandatory")
_WtIpWatcherAlarmTcpTrgClearText_Type = OctetString
_WtIpWatcherAlarmTcpTrgClearText_Object = MibTableColumn
wtIpWatcherAlarmTcpTrgClearText = _WtIpWatcherAlarmTcpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 43),
    _WtIpWatcherAlarmTcpTrgClearText_Type()
)
wtIpWatcherAlarmTcpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTcpTrgClearText.setStatus("mandatory")
_WtIpWatcherAlarmSyslogTrgClearText_Type = OctetString
_WtIpWatcherAlarmSyslogTrgClearText_Object = MibTableColumn
wtIpWatcherAlarmSyslogTrgClearText = _WtIpWatcherAlarmSyslogTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 44),
    _WtIpWatcherAlarmSyslogTrgClearText_Type()
)
wtIpWatcherAlarmSyslogTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSyslogTrgClearText.setStatus("mandatory")
_WtIpWatcherAlarmFtpTrgClearText_Type = OctetString
_WtIpWatcherAlarmFtpTrgClearText_Object = MibTableColumn
wtIpWatcherAlarmFtpTrgClearText = _WtIpWatcherAlarmFtpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 45),
    _WtIpWatcherAlarmFtpTrgClearText_Type()
)
wtIpWatcherAlarmFtpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpTrgClearText.setStatus("mandatory")
_WtIpWatcherAlarmMailTrapTxEnable_Type = OctetString
_WtIpWatcherAlarmMailTrapTxEnable_Object = MibTableColumn
wtIpWatcherAlarmMailTrapTxEnable = _WtIpWatcherAlarmMailTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 46),
    _WtIpWatcherAlarmMailTrapTxEnable_Type()
)
wtIpWatcherAlarmMailTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmMailTrapTxEnable.setStatus("mandatory")
_WtIpWatcherAlarmSnmpTrapTrapTxEnable_Type = OctetString
_WtIpWatcherAlarmSnmpTrapTrapTxEnable_Object = MibTableColumn
wtIpWatcherAlarmSnmpTrapTrapTxEnable = _WtIpWatcherAlarmSnmpTrapTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 47),
    _WtIpWatcherAlarmSnmpTrapTrapTxEnable_Type()
)
wtIpWatcherAlarmSnmpTrapTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSnmpTrapTrapTxEnable.setStatus("mandatory")
_WtIpWatcherAlarmUdpTrapTxEnable_Type = OctetString
_WtIpWatcherAlarmUdpTrapTxEnable_Object = MibTableColumn
wtIpWatcherAlarmUdpTrapTxEnable = _WtIpWatcherAlarmUdpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 48),
    _WtIpWatcherAlarmUdpTrapTxEnable_Type()
)
wtIpWatcherAlarmUdpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmUdpTrapTxEnable.setStatus("mandatory")
_WtIpWatcherAlarmTcpTrapTxEnable_Type = OctetString
_WtIpWatcherAlarmTcpTrapTxEnable_Object = MibTableColumn
wtIpWatcherAlarmTcpTrapTxEnable = _WtIpWatcherAlarmTcpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 49),
    _WtIpWatcherAlarmTcpTrapTxEnable_Type()
)
wtIpWatcherAlarmTcpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTcpTrapTxEnable.setStatus("mandatory")
_WtIpWatcherAlarmSyslogTrapTxEnable_Type = OctetString
_WtIpWatcherAlarmSyslogTrapTxEnable_Object = MibTableColumn
wtIpWatcherAlarmSyslogTrapTxEnable = _WtIpWatcherAlarmSyslogTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 50),
    _WtIpWatcherAlarmSyslogTrapTxEnable_Type()
)
wtIpWatcherAlarmSyslogTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmSyslogTrapTxEnable.setStatus("mandatory")
_WtIpWatcherAlarmFtpTrapTxEnable_Type = OctetString
_WtIpWatcherAlarmFtpTrapTxEnable_Object = MibTableColumn
wtIpWatcherAlarmFtpTrapTxEnable = _WtIpWatcherAlarmFtpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 51),
    _WtIpWatcherAlarmFtpTrapTxEnable_Type()
)
wtIpWatcherAlarmFtpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmFtpTrapTxEnable.setStatus("mandatory")
_WtIpWatcherAlarmTriggerCount_Type = Integer32
_WtIpWatcherAlarmTriggerCount_Object = MibTableColumn
wtIpWatcherAlarmTriggerCount = _WtIpWatcherAlarmTriggerCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 52),
    _WtIpWatcherAlarmTriggerCount_Type()
)
wtIpWatcherAlarmTriggerCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmTriggerCount.setStatus("mandatory")
_WtIpWatcherAlarmPollingRate_Type = Integer32
_WtIpWatcherAlarmPollingRate_Object = MibTableColumn
wtIpWatcherAlarmPollingRate = _WtIpWatcherAlarmPollingRate_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 1, 5, 3, 1, 53),
    _WtIpWatcherAlarmPollingRate_Type()
)
wtIpWatcherAlarmPollingRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherAlarmPollingRate.setStatus("mandatory")
_WtIpWatcherPorts_ObjectIdentity = ObjectIdentity
wtIpWatcherPorts = _WtIpWatcherPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2)
)
_WtIpWatcherInputPortTable_Object = MibTable
wtIpWatcherInputPortTable = _WtIpWatcherInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtIpWatcherInputPortTable.setStatus("mandatory")
_WtIpWatcherInputPortEntry_Object = MibTableRow
wtIpWatcherInputPortEntry = _WtIpWatcherInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 1, 1)
)
wtIpWatcherInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherInputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherInputPortEntry.setStatus("mandatory")
_WtIpWatcherPortInputName_Type = OctetString
_WtIpWatcherPortInputName_Object = MibTableColumn
wtIpWatcherPortInputName = _WtIpWatcherPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 1, 1, 1),
    _WtIpWatcherPortInputName_Type()
)
wtIpWatcherPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortInputName.setStatus("mandatory")
_WtIpWatcherPortInputText_Type = OctetString
_WtIpWatcherPortInputText_Object = MibTableColumn
wtIpWatcherPortInputText = _WtIpWatcherPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 1, 1, 2),
    _WtIpWatcherPortInputText_Type()
)
wtIpWatcherPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortInputText.setStatus("mandatory")
_WtIpWatcherPortInputFilter_Type = Integer32
_WtIpWatcherPortInputFilter_Object = MibTableColumn
wtIpWatcherPortInputFilter = _WtIpWatcherPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 1, 1, 4),
    _WtIpWatcherPortInputFilter_Type()
)
wtIpWatcherPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortInputFilter.setStatus("mandatory")
_WtIpWatcherOutputPortTable_Object = MibTable
wtIpWatcherOutputPortTable = _WtIpWatcherOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtIpWatcherOutputPortTable.setStatus("mandatory")
_WtIpWatcherOutputPortEntry_Object = MibTableRow
wtIpWatcherOutputPortEntry = _WtIpWatcherOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 2, 1)
)
wtIpWatcherOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcherOutputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcherOutputPortEntry.setStatus("mandatory")
_WtIpWatcherPortOutputName_Type = OctetString
_WtIpWatcherPortOutputName_Object = MibTableColumn
wtIpWatcherPortOutputName = _WtIpWatcherPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 2, 1, 1),
    _WtIpWatcherPortOutputName_Type()
)
wtIpWatcherPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortOutputName.setStatus("mandatory")
_WtIpWatcherPortOutputText_Type = OctetString
_WtIpWatcherPortOutputText_Object = MibTableColumn
wtIpWatcherPortOutputText = _WtIpWatcherPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 2, 1, 2),
    _WtIpWatcherPortOutputText_Type()
)
wtIpWatcherPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortOutputText.setStatus("mandatory")
_WtIpWatcherPortPulseDuration_Type = Integer32
_WtIpWatcherPortPulseDuration_Object = MibTableColumn
wtIpWatcherPortPulseDuration = _WtIpWatcherPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 2, 1, 9),
    _WtIpWatcherPortPulseDuration_Type()
)
wtIpWatcherPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortPulseDuration.setStatus("mandatory")


class _WtIpWatcherPortPulsePolarity_Type(OctetString):
    """Custom type wtIpWatcherPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcherPortPulsePolarity_Type.__name__ = "OctetString"
_WtIpWatcherPortPulsePolarity_Object = MibTableColumn
wtIpWatcherPortPulsePolarity = _WtIpWatcherPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 2, 2, 1, 10),
    _WtIpWatcherPortPulsePolarity_Type()
)
wtIpWatcherPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherPortPulsePolarity.setStatus("mandatory")
_WtIpWatcherManufact_ObjectIdentity = ObjectIdentity
wtIpWatcherManufact = _WtIpWatcherManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 3)
)
_WtIpWatcherMfName_Type = OctetString
_WtIpWatcherMfName_Object = MibScalar
wtIpWatcherMfName = _WtIpWatcherMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 3, 1),
    _WtIpWatcherMfName_Type()
)
wtIpWatcherMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMfName.setStatus("mandatory")
_WtIpWatcherMfAddr_Type = OctetString
_WtIpWatcherMfAddr_Object = MibScalar
wtIpWatcherMfAddr = _WtIpWatcherMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 3, 2),
    _WtIpWatcherMfAddr_Type()
)
wtIpWatcherMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMfAddr.setStatus("mandatory")
_WtIpWatcherMfHotline_Type = OctetString
_WtIpWatcherMfHotline_Object = MibScalar
wtIpWatcherMfHotline = _WtIpWatcherMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 3, 3),
    _WtIpWatcherMfHotline_Type()
)
wtIpWatcherMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMfHotline.setStatus("mandatory")
_WtIpWatcherMfInternet_Type = OctetString
_WtIpWatcherMfInternet_Object = MibScalar
wtIpWatcherMfInternet = _WtIpWatcherMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 3, 4),
    _WtIpWatcherMfInternet_Type()
)
wtIpWatcherMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMfInternet.setStatus("mandatory")
_WtIpWatcherMfDeviceTyp_Type = OctetString
_WtIpWatcherMfDeviceTyp_Object = MibScalar
wtIpWatcherMfDeviceTyp = _WtIpWatcherMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 3, 3, 5),
    _WtIpWatcherMfDeviceTyp_Type()
)
wtIpWatcherMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherMfDeviceTyp.setStatus("mandatory")
_WtIpWatcherDiag_ObjectIdentity = ObjectIdentity
wtIpWatcherDiag = _WtIpWatcherDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 4)
)
_WtIpWatcherDiagErrorCount_Type = Integer32
_WtIpWatcherDiagErrorCount_Object = MibScalar
wtIpWatcherDiagErrorCount = _WtIpWatcherDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 4, 1),
    _WtIpWatcherDiagErrorCount_Type()
)
wtIpWatcherDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherDiagErrorCount.setStatus("mandatory")
_WtIpWatcherDiagBinaryError_Type = OctetString
_WtIpWatcherDiagBinaryError_Object = MibScalar
wtIpWatcherDiagBinaryError = _WtIpWatcherDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 4, 2),
    _WtIpWatcherDiagBinaryError_Type()
)
wtIpWatcherDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherDiagBinaryError.setStatus("mandatory")
_WtIpWatcherDiagErrorIndex_Type = Integer32
_WtIpWatcherDiagErrorIndex_Object = MibScalar
wtIpWatcherDiagErrorIndex = _WtIpWatcherDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 4, 3),
    _WtIpWatcherDiagErrorIndex_Type()
)
wtIpWatcherDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcherDiagErrorIndex.setStatus("mandatory")
_WtIpWatcherDiagErrorMessage_Type = OctetString
_WtIpWatcherDiagErrorMessage_Object = MibScalar
wtIpWatcherDiagErrorMessage = _WtIpWatcherDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 4, 4),
    _WtIpWatcherDiagErrorMessage_Type()
)
wtIpWatcherDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcherDiagErrorMessage.setStatus("mandatory")
_WtIpWatcherDiagErrorClear_Type = Integer32
_WtIpWatcherDiagErrorClear_Object = MibScalar
wtIpWatcherDiagErrorClear = _WtIpWatcherDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 4, 5),
    _WtIpWatcherDiagErrorClear_Type()
)
wtIpWatcherDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtIpWatcherDiagErrorClear.setStatus("mandatory")
_WtWebioEA2x2_24V_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24V = _WtWebioEA2x2_24V_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30)
)
_WtWebioEA2x2_24VInOut_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VInOut = _WtWebioEA2x2_24VInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1)
)


class _WtWebioEA2x2_24VInputs_Type(Integer32):
    """Custom type wtWebioEA2x2_24VInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2_24VInputs_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VInputs_Object = MibScalar
wtWebioEA2x2_24VInputs = _WtWebioEA2x2_24VInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 1),
    _WtWebioEA2x2_24VInputs_Type()
)
wtWebioEA2x2_24VInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputs.setStatus("mandatory")


class _WtWebioEA2x2_24VOutputs_Type(Integer32):
    """Custom type wtWebioEA2x2_24VOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2_24VOutputs_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VOutputs_Object = MibScalar
wtWebioEA2x2_24VOutputs = _WtWebioEA2x2_24VOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 2),
    _WtWebioEA2x2_24VOutputs_Type()
)
wtWebioEA2x2_24VOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputs.setStatus("mandatory")
_WtWebioEA2x2_24VInputTable_Object = MibTable
wtWebioEA2x2_24VInputTable = _WtWebioEA2x2_24VInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputTable.setStatus("mandatory")
_WtWebioEA2x2_24VInputEntry_Object = MibTableRow
wtWebioEA2x2_24VInputEntry = _WtWebioEA2x2_24VInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 3, 1)
)
wtWebioEA2x2_24VInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VInputNo_Type(Integer32):
    """Custom type wtWebioEA2x2_24VInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2_24VInputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VInputNo_Object = MibTableColumn
wtWebioEA2x2_24VInputNo = _WtWebioEA2x2_24VInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 3, 1, 1),
    _WtWebioEA2x2_24VInputNo_Type()
)
wtWebioEA2x2_24VInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputNo.setStatus("mandatory")


class _WtWebioEA2x2_24VInputCounter_Type(Integer32):
    """Custom type wtWebioEA2x2_24VInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2_24VInputCounter_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VInputCounter_Object = MibTableColumn
wtWebioEA2x2_24VInputCounter = _WtWebioEA2x2_24VInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 3, 1, 2),
    _WtWebioEA2x2_24VInputCounter_Type()
)
wtWebioEA2x2_24VInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputCounter.setStatus("mandatory")
_WtWebioEA2x2_24VInputCounterClear_Type = Integer32
_WtWebioEA2x2_24VInputCounterClear_Object = MibTableColumn
wtWebioEA2x2_24VInputCounterClear = _WtWebioEA2x2_24VInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 3, 1, 3),
    _WtWebioEA2x2_24VInputCounterClear_Type()
)
wtWebioEA2x2_24VInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputCounterClear.setStatus("mandatory")


class _WtWebioEA2x2_24VInputState_Type(Integer32):
    """Custom type wtWebioEA2x2_24VInputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VInputState-OFF", 0),
          ("wtWebioEA2x2_24VInputState-ON", 1))
    )


_WtWebioEA2x2_24VInputState_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VInputState_Object = MibTableColumn
wtWebioEA2x2_24VInputState = _WtWebioEA2x2_24VInputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 3, 1, 4),
    _WtWebioEA2x2_24VInputState_Type()
)
wtWebioEA2x2_24VInputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputState.setStatus("mandatory")
_WtWebioEA2x2_24VInputValue_Type = Integer32
_WtWebioEA2x2_24VInputValue_Object = MibScalar
wtWebioEA2x2_24VInputValue = _WtWebioEA2x2_24VInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 4),
    _WtWebioEA2x2_24VInputValue_Type()
)
wtWebioEA2x2_24VInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputValue.setStatus("mandatory")
_WtWebioEA2x2_24VOutputTable_Object = MibTable
wtWebioEA2x2_24VOutputTable = _WtWebioEA2x2_24VOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputTable.setStatus("mandatory")
_WtWebioEA2x2_24VOutputEntry_Object = MibTableRow
wtWebioEA2x2_24VOutputEntry = _WtWebioEA2x2_24VOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 5, 1)
)
wtWebioEA2x2_24VOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VOutputNo_Type(Integer32):
    """Custom type wtWebioEA2x2_24VOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2_24VOutputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VOutputNo_Object = MibTableColumn
wtWebioEA2x2_24VOutputNo = _WtWebioEA2x2_24VOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 5, 1, 1),
    _WtWebioEA2x2_24VOutputNo_Type()
)
wtWebioEA2x2_24VOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputNo.setStatus("mandatory")


class _WtWebioEA2x2_24VOutputState_Type(Integer32):
    """Custom type wtWebioEA2x2_24VOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VOutputState-OFF", 0),
          ("wtWebioEA2x2_24VOutputState-ON", 1))
    )


_WtWebioEA2x2_24VOutputState_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VOutputState_Object = MibTableColumn
wtWebioEA2x2_24VOutputState = _WtWebioEA2x2_24VOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 5, 1, 2),
    _WtWebioEA2x2_24VOutputState_Type()
)
wtWebioEA2x2_24VOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputState.setStatus("mandatory")
_WtWebioEA2x2_24VOutputValue_Type = Integer32
_WtWebioEA2x2_24VOutputValue_Object = MibScalar
wtWebioEA2x2_24VOutputValue = _WtWebioEA2x2_24VOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 6),
    _WtWebioEA2x2_24VOutputValue_Type()
)
wtWebioEA2x2_24VOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputValue.setStatus("mandatory")


class _WtWebioEA2x2_24VSetOutput_Type(OctetString):
    """Custom type wtWebioEA2x2_24VSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA2x2_24VSetOutput_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VSetOutput_Object = MibScalar
wtWebioEA2x2_24VSetOutput = _WtWebioEA2x2_24VSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 1, 7),
    _WtWebioEA2x2_24VSetOutput_Type()
)
wtWebioEA2x2_24VSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSetOutput.setStatus("mandatory")
_WtWebioEA2x2_24VSessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VSessCntrl = _WtWebioEA2x2_24VSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 2)
)
_WtWebioEA2x2_24VSessCntrlPassword_Type = OctetString
_WtWebioEA2x2_24VSessCntrlPassword_Object = MibScalar
wtWebioEA2x2_24VSessCntrlPassword = _WtWebioEA2x2_24VSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 2, 1),
    _WtWebioEA2x2_24VSessCntrlPassword_Type()
)
wtWebioEA2x2_24VSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSessCntrlPassword.setStatus("mandatory")


class _WtWebioEA2x2_24VSessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA2x2_24VSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VSessCntrl-NoSession", 0),
          ("wtWebioEA2x2_24VSessCntrl-Session", 1))
    )


_WtWebioEA2x2_24VSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VSessCntrlConfigMode_Object = MibScalar
wtWebioEA2x2_24VSessCntrlConfigMode = _WtWebioEA2x2_24VSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 2, 2),
    _WtWebioEA2x2_24VSessCntrlConfigMode_Type()
)
wtWebioEA2x2_24VSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA2x2_24VSessCntrlLogout_Type = Integer32
_WtWebioEA2x2_24VSessCntrlLogout_Object = MibScalar
wtWebioEA2x2_24VSessCntrlLogout = _WtWebioEA2x2_24VSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 2, 3),
    _WtWebioEA2x2_24VSessCntrlLogout_Type()
)
wtWebioEA2x2_24VSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSessCntrlLogout.setStatus("mandatory")
_WtWebioEA2x2_24VSessCntrlAdminPassword_Type = OctetString
_WtWebioEA2x2_24VSessCntrlAdminPassword_Object = MibScalar
wtWebioEA2x2_24VSessCntrlAdminPassword = _WtWebioEA2x2_24VSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 2, 4),
    _WtWebioEA2x2_24VSessCntrlAdminPassword_Type()
)
wtWebioEA2x2_24VSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA2x2_24VSessCntrlConfigPassword_Type = OctetString
_WtWebioEA2x2_24VSessCntrlConfigPassword_Object = MibScalar
wtWebioEA2x2_24VSessCntrlConfigPassword = _WtWebioEA2x2_24VSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 2, 5),
    _WtWebioEA2x2_24VSessCntrlConfigPassword_Type()
)
wtWebioEA2x2_24VSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA2x2_24VConfig_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VConfig = _WtWebioEA2x2_24VConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3)
)
_WtWebioEA2x2_24VDevice_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VDevice = _WtWebioEA2x2_24VDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1)
)
_WtWebioEA2x2_24VText_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VText = _WtWebioEA2x2_24VText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 1)
)
_WtWebioEA2x2_24VDeviceName_Type = OctetString
_WtWebioEA2x2_24VDeviceName_Object = MibScalar
wtWebioEA2x2_24VDeviceName = _WtWebioEA2x2_24VDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 1, 1),
    _WtWebioEA2x2_24VDeviceName_Type()
)
wtWebioEA2x2_24VDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDeviceName.setStatus("mandatory")
_WtWebioEA2x2_24VDeviceText_Type = OctetString
_WtWebioEA2x2_24VDeviceText_Object = MibScalar
wtWebioEA2x2_24VDeviceText = _WtWebioEA2x2_24VDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 1, 2),
    _WtWebioEA2x2_24VDeviceText_Type()
)
wtWebioEA2x2_24VDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDeviceText.setStatus("mandatory")
_WtWebioEA2x2_24VDeviceLocation_Type = OctetString
_WtWebioEA2x2_24VDeviceLocation_Object = MibScalar
wtWebioEA2x2_24VDeviceLocation = _WtWebioEA2x2_24VDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 1, 3),
    _WtWebioEA2x2_24VDeviceLocation_Type()
)
wtWebioEA2x2_24VDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDeviceLocation.setStatus("mandatory")
_WtWebioEA2x2_24VDeviceContact_Type = OctetString
_WtWebioEA2x2_24VDeviceContact_Object = MibScalar
wtWebioEA2x2_24VDeviceContact = _WtWebioEA2x2_24VDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 1, 4),
    _WtWebioEA2x2_24VDeviceContact_Type()
)
wtWebioEA2x2_24VDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDeviceContact.setStatus("mandatory")
_WtWebioEA2x2_24VTimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VTimeDate = _WtWebioEA2x2_24VTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2)
)
_WtWebioEA2x2_24VTimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VTimeZone = _WtWebioEA2x2_24VTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1)
)
_WtWebioEA2x2_24VTzOffsetHrs_Type = Integer32
_WtWebioEA2x2_24VTzOffsetHrs_Object = MibScalar
wtWebioEA2x2_24VTzOffsetHrs = _WtWebioEA2x2_24VTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 1),
    _WtWebioEA2x2_24VTzOffsetHrs_Type()
)
wtWebioEA2x2_24VTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2_24VTzOffsetMin_Type = Integer32
_WtWebioEA2x2_24VTzOffsetMin_Object = MibScalar
wtWebioEA2x2_24VTzOffsetMin = _WtWebioEA2x2_24VTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 2),
    _WtWebioEA2x2_24VTzOffsetMin_Type()
)
wtWebioEA2x2_24VTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2_24VTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2_24VTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VTzEnable_Object = MibScalar
wtWebioEA2x2_24VTzEnable = _WtWebioEA2x2_24VTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 3),
    _WtWebioEA2x2_24VTzEnable_Type()
)
wtWebioEA2x2_24VTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTzEnable.setStatus("mandatory")
_WtWebioEA2x2_24VStTzOffsetHrs_Type = Integer32
_WtWebioEA2x2_24VStTzOffsetHrs_Object = MibScalar
wtWebioEA2x2_24VStTzOffsetHrs = _WtWebioEA2x2_24VStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 4),
    _WtWebioEA2x2_24VStTzOffsetHrs_Type()
)
wtWebioEA2x2_24VStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2_24VStTzOffsetMin_Type = Integer32
_WtWebioEA2x2_24VStTzOffsetMin_Object = MibScalar
wtWebioEA2x2_24VStTzOffsetMin = _WtWebioEA2x2_24VStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 5),
    _WtWebioEA2x2_24VStTzOffsetMin_Type()
)
wtWebioEA2x2_24VStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2_24VStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VStTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VStTzEnable_Object = MibScalar
wtWebioEA2x2_24VStTzEnable = _WtWebioEA2x2_24VStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 6),
    _WtWebioEA2x2_24VStTzEnable_Type()
)
wtWebioEA2x2_24VStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzEnable.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA2x2_24VStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VStartMonth-April", 4),
          ("wtWebioEA2x2_24VStartMonth-August", 8),
          ("wtWebioEA2x2_24VStartMonth-December", 12),
          ("wtWebioEA2x2_24VStartMonth-February", 2),
          ("wtWebioEA2x2_24VStartMonth-January", 1),
          ("wtWebioEA2x2_24VStartMonth-July", 7),
          ("wtWebioEA2x2_24VStartMonth-June", 6),
          ("wtWebioEA2x2_24VStartMonth-March", 3),
          ("wtWebioEA2x2_24VStartMonth-May", 5),
          ("wtWebioEA2x2_24VStartMonth-November", 11),
          ("wtWebioEA2x2_24VStartMonth-October", 10),
          ("wtWebioEA2x2_24VStartMonth-September", 9))
    )


_WtWebioEA2x2_24VStTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VStTzStartMonth_Object = MibScalar
wtWebioEA2x2_24VStTzStartMonth = _WtWebioEA2x2_24VStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 7),
    _WtWebioEA2x2_24VStTzStartMonth_Type()
)
wtWebioEA2x2_24VStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStartMonth.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzStartMode_Type(Integer32):
    """Custom type wtWebioEA2x2_24VStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VStartMode-first", 1),
          ("wtWebioEA2x2_24VStartMode-fourth", 4),
          ("wtWebioEA2x2_24VStartMode-last", 5),
          ("wtWebioEA2x2_24VStartMode-second", 2),
          ("wtWebioEA2x2_24VStartMode-third", 3))
    )


_WtWebioEA2x2_24VStTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VStTzStartMode_Object = MibScalar
wtWebioEA2x2_24VStTzStartMode = _WtWebioEA2x2_24VStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 8),
    _WtWebioEA2x2_24VStTzStartMode_Type()
)
wtWebioEA2x2_24VStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStartMode.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzStartWday_Type(Integer32):
    """Custom type wtWebioEA2x2_24VStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VStartWday-Friday", 6),
          ("wtWebioEA2x2_24VStartWday-Monday", 2),
          ("wtWebioEA2x2_24VStartWday-Saturday", 7),
          ("wtWebioEA2x2_24VStartWday-Sunday", 1),
          ("wtWebioEA2x2_24VStartWday-Thursday", 4),
          ("wtWebioEA2x2_24VStartWday-Tuesday", 3),
          ("wtWebioEA2x2_24VStartWday-Wednesday", 5))
    )


_WtWebioEA2x2_24VStTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VStTzStartWday_Object = MibScalar
wtWebioEA2x2_24VStTzStartWday = _WtWebioEA2x2_24VStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 9),
    _WtWebioEA2x2_24VStTzStartWday_Type()
)
wtWebioEA2x2_24VStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStartWday.setStatus("mandatory")
_WtWebioEA2x2_24VStTzStartHrs_Type = Integer32
_WtWebioEA2x2_24VStTzStartHrs_Object = MibScalar
wtWebioEA2x2_24VStTzStartHrs = _WtWebioEA2x2_24VStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 10),
    _WtWebioEA2x2_24VStTzStartHrs_Type()
)
wtWebioEA2x2_24VStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStartHrs.setStatus("mandatory")
_WtWebioEA2x2_24VStTzStartMin_Type = Integer32
_WtWebioEA2x2_24VStTzStartMin_Object = MibScalar
wtWebioEA2x2_24VStTzStartMin = _WtWebioEA2x2_24VStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 11),
    _WtWebioEA2x2_24VStTzStartMin_Type()
)
wtWebioEA2x2_24VStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStartMin.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA2x2_24VStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VStopMonth-April", 4),
          ("wtWebioEA2x2_24VStopMonth-August", 8),
          ("wtWebioEA2x2_24VStopMonth-December", 12),
          ("wtWebioEA2x2_24VStopMonth-February", 2),
          ("wtWebioEA2x2_24VStopMonth-January", 1),
          ("wtWebioEA2x2_24VStopMonth-July", 7),
          ("wtWebioEA2x2_24VStopMonth-June", 6),
          ("wtWebioEA2x2_24VStopMonth-March", 3),
          ("wtWebioEA2x2_24VStopMonth-May", 5),
          ("wtWebioEA2x2_24VStopMonth-November", 11),
          ("wtWebioEA2x2_24VStopMonth-October", 10),
          ("wtWebioEA2x2_24VStopMonth-September", 9))
    )


_WtWebioEA2x2_24VStTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VStTzStopMonth_Object = MibScalar
wtWebioEA2x2_24VStTzStopMonth = _WtWebioEA2x2_24VStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 12),
    _WtWebioEA2x2_24VStTzStopMonth_Type()
)
wtWebioEA2x2_24VStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStopMonth.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzStopMode_Type(Integer32):
    """Custom type wtWebioEA2x2_24VStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VStopMode-first", 1),
          ("wtWebioEA2x2_24VStopMode-fourth", 4),
          ("wtWebioEA2x2_24VStopMode-last", 5),
          ("wtWebioEA2x2_24VStopMode-second", 2),
          ("wtWebioEA2x2_24VStopMode-third", 3))
    )


_WtWebioEA2x2_24VStTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VStTzStopMode_Object = MibScalar
wtWebioEA2x2_24VStTzStopMode = _WtWebioEA2x2_24VStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 13),
    _WtWebioEA2x2_24VStTzStopMode_Type()
)
wtWebioEA2x2_24VStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStopMode.setStatus("mandatory")


class _WtWebioEA2x2_24VStTzStopWday_Type(Integer32):
    """Custom type wtWebioEA2x2_24VStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VStopWday-Friday", 6),
          ("wtWebioEA2x2_24VStopWday-Monday", 2),
          ("wtWebioEA2x2_24VStopWday-Saturday", 7),
          ("wtWebioEA2x2_24VStopWday-Sunday", 1),
          ("wtWebioEA2x2_24VStopWday-Thursday", 4),
          ("wtWebioEA2x2_24VStopWday-Tuesday", 3),
          ("wtWebioEA2x2_24VStopWday-Wednesday", 5))
    )


_WtWebioEA2x2_24VStTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VStTzStopWday_Object = MibScalar
wtWebioEA2x2_24VStTzStopWday = _WtWebioEA2x2_24VStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 14),
    _WtWebioEA2x2_24VStTzStopWday_Type()
)
wtWebioEA2x2_24VStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStopWday.setStatus("mandatory")
_WtWebioEA2x2_24VStTzStopHrs_Type = Integer32
_WtWebioEA2x2_24VStTzStopHrs_Object = MibScalar
wtWebioEA2x2_24VStTzStopHrs = _WtWebioEA2x2_24VStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 15),
    _WtWebioEA2x2_24VStTzStopHrs_Type()
)
wtWebioEA2x2_24VStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStopHrs.setStatus("mandatory")
_WtWebioEA2x2_24VStTzStopMin_Type = Integer32
_WtWebioEA2x2_24VStTzStopMin_Object = MibScalar
wtWebioEA2x2_24VStTzStopMin = _WtWebioEA2x2_24VStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 1, 16),
    _WtWebioEA2x2_24VStTzStopMin_Type()
)
wtWebioEA2x2_24VStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStTzStopMin.setStatus("mandatory")
_WtWebioEA2x2_24VTimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VTimeServer = _WtWebioEA2x2_24VTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 2)
)
_WtWebioEA2x2_24VTimeServer1_Type = OctetString
_WtWebioEA2x2_24VTimeServer1_Object = MibScalar
wtWebioEA2x2_24VTimeServer1 = _WtWebioEA2x2_24VTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 2, 1),
    _WtWebioEA2x2_24VTimeServer1_Type()
)
wtWebioEA2x2_24VTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTimeServer1.setStatus("mandatory")
_WtWebioEA2x2_24VTimeServer2_Type = OctetString
_WtWebioEA2x2_24VTimeServer2_Object = MibScalar
wtWebioEA2x2_24VTimeServer2 = _WtWebioEA2x2_24VTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 2, 2),
    _WtWebioEA2x2_24VTimeServer2_Type()
)
wtWebioEA2x2_24VTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTimeServer2.setStatus("mandatory")


class _WtWebioEA2x2_24VTsEnable_Type(OctetString):
    """Custom type wtWebioEA2x2_24VTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VTsEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VTsEnable_Object = MibScalar
wtWebioEA2x2_24VTsEnable = _WtWebioEA2x2_24VTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 2, 3),
    _WtWebioEA2x2_24VTsEnable_Type()
)
wtWebioEA2x2_24VTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTsEnable.setStatus("mandatory")
_WtWebioEA2x2_24VTsSyncTime_Type = Integer32
_WtWebioEA2x2_24VTsSyncTime_Object = MibScalar
wtWebioEA2x2_24VTsSyncTime = _WtWebioEA2x2_24VTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 2, 4),
    _WtWebioEA2x2_24VTsSyncTime_Type()
)
wtWebioEA2x2_24VTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VTsSyncTime.setStatus("mandatory")
_WtWebioEA2x2_24VDeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VDeviceClock = _WtWebioEA2x2_24VDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 3)
)


class _WtWebioEA2x2_24VClockHrs_Type(Integer32):
    """Custom type wtWebioEA2x2_24VClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA2x2_24VClockHrs_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VClockHrs_Object = MibScalar
wtWebioEA2x2_24VClockHrs = _WtWebioEA2x2_24VClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 3, 1),
    _WtWebioEA2x2_24VClockHrs_Type()
)
wtWebioEA2x2_24VClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VClockHrs.setStatus("mandatory")


class _WtWebioEA2x2_24VClockMin_Type(Integer32):
    """Custom type wtWebioEA2x2_24VClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA2x2_24VClockMin_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VClockMin_Object = MibScalar
wtWebioEA2x2_24VClockMin = _WtWebioEA2x2_24VClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 3, 2),
    _WtWebioEA2x2_24VClockMin_Type()
)
wtWebioEA2x2_24VClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VClockMin.setStatus("mandatory")


class _WtWebioEA2x2_24VClockDay_Type(Integer32):
    """Custom type wtWebioEA2x2_24VClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA2x2_24VClockDay_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VClockDay_Object = MibScalar
wtWebioEA2x2_24VClockDay = _WtWebioEA2x2_24VClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 3, 3),
    _WtWebioEA2x2_24VClockDay_Type()
)
wtWebioEA2x2_24VClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VClockDay.setStatus("mandatory")


class _WtWebioEA2x2_24VClockMonth_Type(Integer32):
    """Custom type wtWebioEA2x2_24VClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2_24VClockMonth-April", 4),
          ("wtWebioEA2x2_24VClockMonth-August", 8),
          ("wtWebioEA2x2_24VClockMonth-December", 12),
          ("wtWebioEA2x2_24VClockMonth-February", 2),
          ("wtWebioEA2x2_24VClockMonth-January", 1),
          ("wtWebioEA2x2_24VClockMonth-July", 7),
          ("wtWebioEA2x2_24VClockMonth-June", 6),
          ("wtWebioEA2x2_24VClockMonth-March", 3),
          ("wtWebioEA2x2_24VClockMonth-May", 5),
          ("wtWebioEA2x2_24VClockMonth-November", 11),
          ("wtWebioEA2x2_24VClockMonth-October", 10),
          ("wtWebioEA2x2_24VClockMonth-September", 9))
    )


_WtWebioEA2x2_24VClockMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VClockMonth_Object = MibScalar
wtWebioEA2x2_24VClockMonth = _WtWebioEA2x2_24VClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 3, 4),
    _WtWebioEA2x2_24VClockMonth_Type()
)
wtWebioEA2x2_24VClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VClockMonth.setStatus("mandatory")


class _WtWebioEA2x2_24VClockYear_Type(Integer32):
    """Custom type wtWebioEA2x2_24VClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2_24VClockYear_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VClockYear_Object = MibScalar
wtWebioEA2x2_24VClockYear = _WtWebioEA2x2_24VClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 2, 3, 5),
    _WtWebioEA2x2_24VClockYear_Type()
)
wtWebioEA2x2_24VClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VClockYear.setStatus("mandatory")
_WtWebioEA2x2_24VBasic_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VBasic = _WtWebioEA2x2_24VBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3)
)
_WtWebioEA2x2_24VNetwork_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VNetwork = _WtWebioEA2x2_24VNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1)
)
_WtWebioEA2x2_24VIpAddress_Type = IpAddress
_WtWebioEA2x2_24VIpAddress_Object = MibScalar
wtWebioEA2x2_24VIpAddress = _WtWebioEA2x2_24VIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1, 1),
    _WtWebioEA2x2_24VIpAddress_Type()
)
wtWebioEA2x2_24VIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VIpAddress.setStatus("mandatory")
_WtWebioEA2x2_24VSubnetMask_Type = IpAddress
_WtWebioEA2x2_24VSubnetMask_Object = MibScalar
wtWebioEA2x2_24VSubnetMask = _WtWebioEA2x2_24VSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1, 2),
    _WtWebioEA2x2_24VSubnetMask_Type()
)
wtWebioEA2x2_24VSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSubnetMask.setStatus("mandatory")
_WtWebioEA2x2_24VGateway_Type = IpAddress
_WtWebioEA2x2_24VGateway_Object = MibScalar
wtWebioEA2x2_24VGateway = _WtWebioEA2x2_24VGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1, 3),
    _WtWebioEA2x2_24VGateway_Type()
)
wtWebioEA2x2_24VGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VGateway.setStatus("mandatory")
_WtWebioEA2x2_24VDnsServer1_Type = OctetString
_WtWebioEA2x2_24VDnsServer1_Object = MibScalar
wtWebioEA2x2_24VDnsServer1 = _WtWebioEA2x2_24VDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1, 4),
    _WtWebioEA2x2_24VDnsServer1_Type()
)
wtWebioEA2x2_24VDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDnsServer1.setStatus("mandatory")
_WtWebioEA2x2_24VDnsServer2_Type = OctetString
_WtWebioEA2x2_24VDnsServer2_Object = MibScalar
wtWebioEA2x2_24VDnsServer2 = _WtWebioEA2x2_24VDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1, 5),
    _WtWebioEA2x2_24VDnsServer2_Type()
)
wtWebioEA2x2_24VDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDnsServer2.setStatus("mandatory")
_WtWebioEA2x2_24VAddConfig_Type = OctetString
_WtWebioEA2x2_24VAddConfig_Object = MibScalar
wtWebioEA2x2_24VAddConfig = _WtWebioEA2x2_24VAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 1, 6),
    _WtWebioEA2x2_24VAddConfig_Type()
)
wtWebioEA2x2_24VAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAddConfig.setStatus("mandatory")
_WtWebioEA2x2_24VHTTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VHTTP = _WtWebioEA2x2_24VHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 2)
)
_WtWebioEA2x2_24VStartup_Type = OctetString
_WtWebioEA2x2_24VStartup_Object = MibScalar
wtWebioEA2x2_24VStartup = _WtWebioEA2x2_24VStartup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 2, 1),
    _WtWebioEA2x2_24VStartup_Type()
)
wtWebioEA2x2_24VStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VStartup.setStatus("mandatory")
_WtWebioEA2x2_24VGetHeaderEnable_Type = OctetString
_WtWebioEA2x2_24VGetHeaderEnable_Object = MibScalar
wtWebioEA2x2_24VGetHeaderEnable = _WtWebioEA2x2_24VGetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 2, 2),
    _WtWebioEA2x2_24VGetHeaderEnable_Type()
)
wtWebioEA2x2_24VGetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VGetHeaderEnable.setStatus("mandatory")


class _WtWebioEA2x2_24VHttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VHttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VHttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VHttpInputTrigger_Object = MibScalar
wtWebioEA2x2_24VHttpInputTrigger = _WtWebioEA2x2_24VHttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 2, 3),
    _WtWebioEA2x2_24VHttpInputTrigger_Type()
)
wtWebioEA2x2_24VHttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VHttpInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2_24VHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA2x2_24VHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VHttpPort_Object = MibScalar
wtWebioEA2x2_24VHttpPort = _WtWebioEA2x2_24VHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 2, 4),
    _WtWebioEA2x2_24VHttpPort_Type()
)
wtWebioEA2x2_24VHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VHttpPort.setStatus("mandatory")
_WtWebioEA2x2_24VMail_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VMail = _WtWebioEA2x2_24VMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3)
)
_WtWebioEA2x2_24VMailAdName_Type = OctetString
_WtWebioEA2x2_24VMailAdName_Object = MibScalar
wtWebioEA2x2_24VMailAdName = _WtWebioEA2x2_24VMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 1),
    _WtWebioEA2x2_24VMailAdName_Type()
)
wtWebioEA2x2_24VMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailAdName.setStatus("mandatory")
_WtWebioEA2x2_24VMailReply_Type = OctetString
_WtWebioEA2x2_24VMailReply_Object = MibScalar
wtWebioEA2x2_24VMailReply = _WtWebioEA2x2_24VMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 2),
    _WtWebioEA2x2_24VMailReply_Type()
)
wtWebioEA2x2_24VMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailReply.setStatus("mandatory")
_WtWebioEA2x2_24VMailServer_Type = OctetString
_WtWebioEA2x2_24VMailServer_Object = MibScalar
wtWebioEA2x2_24VMailServer = _WtWebioEA2x2_24VMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 3),
    _WtWebioEA2x2_24VMailServer_Type()
)
wtWebioEA2x2_24VMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailServer.setStatus("mandatory")
_WtWebioEA2x2_24VMailEnable_Type = OctetString
_WtWebioEA2x2_24VMailEnable_Object = MibScalar
wtWebioEA2x2_24VMailEnable = _WtWebioEA2x2_24VMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 4),
    _WtWebioEA2x2_24VMailEnable_Type()
)
wtWebioEA2x2_24VMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailEnable.setStatus("mandatory")


class _WtWebioEA2x2_24VMailAuthentication_Type(OctetString):
    """Custom type wtWebioEA2x2_24VMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VMailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VMailAuthentication_Object = MibScalar
wtWebioEA2x2_24VMailAuthentication = _WtWebioEA2x2_24VMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 5),
    _WtWebioEA2x2_24VMailAuthentication_Type()
)
wtWebioEA2x2_24VMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailAuthentication.setStatus("mandatory")
_WtWebioEA2x2_24VMailAuthUser_Type = OctetString
_WtWebioEA2x2_24VMailAuthUser_Object = MibScalar
wtWebioEA2x2_24VMailAuthUser = _WtWebioEA2x2_24VMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 6),
    _WtWebioEA2x2_24VMailAuthUser_Type()
)
wtWebioEA2x2_24VMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailAuthUser.setStatus("mandatory")
_WtWebioEA2x2_24VMailAuthPassword_Type = OctetString
_WtWebioEA2x2_24VMailAuthPassword_Object = MibScalar
wtWebioEA2x2_24VMailAuthPassword = _WtWebioEA2x2_24VMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 7),
    _WtWebioEA2x2_24VMailAuthPassword_Type()
)
wtWebioEA2x2_24VMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailAuthPassword.setStatus("mandatory")
_WtWebioEA2x2_24VMailPop3Server_Type = OctetString
_WtWebioEA2x2_24VMailPop3Server_Object = MibScalar
wtWebioEA2x2_24VMailPop3Server = _WtWebioEA2x2_24VMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 3, 8),
    _WtWebioEA2x2_24VMailPop3Server_Type()
)
wtWebioEA2x2_24VMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMailPop3Server.setStatus("mandatory")
_WtWebioEA2x2_24VSNMP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VSNMP = _WtWebioEA2x2_24VSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 4)
)
_WtWebioEA2x2_24VSnmpEnable_Type = OctetString
_WtWebioEA2x2_24VSnmpEnable_Object = MibScalar
wtWebioEA2x2_24VSnmpEnable = _WtWebioEA2x2_24VSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 4, 1),
    _WtWebioEA2x2_24VSnmpEnable_Type()
)
wtWebioEA2x2_24VSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSnmpEnable.setStatus("mandatory")
_WtWebioEA2x2_24VSnmpCommunityStringRead_Type = OctetString
_WtWebioEA2x2_24VSnmpCommunityStringRead_Object = MibScalar
wtWebioEA2x2_24VSnmpCommunityStringRead = _WtWebioEA2x2_24VSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 4, 2),
    _WtWebioEA2x2_24VSnmpCommunityStringRead_Type()
)
wtWebioEA2x2_24VSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA2x2_24VSnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA2x2_24VSnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA2x2_24VSnmpCommunityStringReadWrite = _WtWebioEA2x2_24VSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 4, 3),
    _WtWebioEA2x2_24VSnmpCommunityStringReadWrite_Type()
)
wtWebioEA2x2_24VSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA2x2_24VSnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA2x2_24VSnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA2x2_24VSnmpSystemTrapManagerIP = _WtWebioEA2x2_24VSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 4, 4),
    _WtWebioEA2x2_24VSnmpSystemTrapManagerIP_Type()
)
wtWebioEA2x2_24VSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA2x2_24VSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA2x2_24VSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VSnmpSystemTrapEnable_Object = MibScalar
wtWebioEA2x2_24VSnmpSystemTrapEnable = _WtWebioEA2x2_24VSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 4, 5),
    _WtWebioEA2x2_24VSnmpSystemTrapEnable_Type()
)
wtWebioEA2x2_24VSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA2x2_24VUDP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VUDP = _WtWebioEA2x2_24VUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 5)
)
_WtWebioEA2x2_24VUdpAdminPort_Type = Integer32
_WtWebioEA2x2_24VUdpAdminPort_Object = MibScalar
wtWebioEA2x2_24VUdpAdminPort = _WtWebioEA2x2_24VUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 5, 1),
    _WtWebioEA2x2_24VUdpAdminPort_Type()
)
wtWebioEA2x2_24VUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VUdpAdminPort.setStatus("mandatory")
_WtWebioEA2x2_24VUdpEnable_Type = OctetString
_WtWebioEA2x2_24VUdpEnable_Object = MibScalar
wtWebioEA2x2_24VUdpEnable = _WtWebioEA2x2_24VUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 5, 2),
    _WtWebioEA2x2_24VUdpEnable_Type()
)
wtWebioEA2x2_24VUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VUdpEnable.setStatus("mandatory")
_WtWebioEA2x2_24VUdpRemotePort_Type = Integer32
_WtWebioEA2x2_24VUdpRemotePort_Object = MibScalar
wtWebioEA2x2_24VUdpRemotePort = _WtWebioEA2x2_24VUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 5, 3),
    _WtWebioEA2x2_24VUdpRemotePort_Type()
)
wtWebioEA2x2_24VUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VUdpRemotePort.setStatus("mandatory")
_WtWebioEA2x2_24VBinary_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VBinary = _WtWebioEA2x2_24VBinary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6)
)


class _WtWebioEA2x2_24VBinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2_24VBinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryModeCount_Object = MibScalar
wtWebioEA2x2_24VBinaryModeCount = _WtWebioEA2x2_24VBinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 1),
    _WtWebioEA2x2_24VBinaryModeCount_Type()
)
wtWebioEA2x2_24VBinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryModeCount.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryIfTable_Object = MibTable
wtWebioEA2x2_24VBinaryIfTable = _WtWebioEA2x2_24VBinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryIfTable.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryIfEntry_Object = MibTableRow
wtWebioEA2x2_24VBinaryIfEntry = _WtWebioEA2x2_24VBinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 2, 1)
)
wtWebioEA2x2_24VBinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryIfEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2_24VBinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryModeNo_Object = MibTableColumn
wtWebioEA2x2_24VBinaryModeNo = _WtWebioEA2x2_24VBinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA2x2_24VBinaryModeNo_Type()
)
wtWebioEA2x2_24VBinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryModeNo.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryTable_Object = MibTable
wtWebioEA2x2_24VBinaryTable = _WtWebioEA2x2_24VBinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTable.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryEntry_Object = MibTableRow
wtWebioEA2x2_24VBinaryEntry = _WtWebioEA2x2_24VBinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1)
)
wtWebioEA2x2_24VBinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryOperationMode_Object = MibTableColumn
wtWebioEA2x2_24VBinaryOperationMode = _WtWebioEA2x2_24VBinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA2x2_24VBinaryOperationMode_Type()
)
wtWebioEA2x2_24VBinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryOperationMode.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpServerLocalPort = _WtWebioEA2x2_24VBinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA2x2_24VBinaryTcpServerLocalPort_Type()
)
wtWebioEA2x2_24VBinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpServerInputTrigger = _WtWebioEA2x2_24VBinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA2x2_24VBinaryTcpServerInputTrigger_Type()
)
wtWebioEA2x2_24VBinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpServerApplicationMode = _WtWebioEA2x2_24VBinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA2x2_24VBinaryTcpServerApplicationMode_Type()
)
wtWebioEA2x2_24VBinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientLocalPort = _WtWebioEA2x2_24VBinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA2x2_24VBinaryTcpClientLocalPort_Type()
)
wtWebioEA2x2_24VBinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientServerPort = _WtWebioEA2x2_24VBinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA2x2_24VBinaryTcpClientServerPort_Type()
)
wtWebioEA2x2_24VBinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA2x2_24VBinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientServerIpAddr = _WtWebioEA2x2_24VBinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA2x2_24VBinaryTcpClientServerIpAddr_Type()
)
wtWebioEA2x2_24VBinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA2x2_24VBinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientServerPassword = _WtWebioEA2x2_24VBinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA2x2_24VBinaryTcpClientServerPassword_Type()
)
wtWebioEA2x2_24VBinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryTcpClientInactivity_Type = Integer32
_WtWebioEA2x2_24VBinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientInactivity = _WtWebioEA2x2_24VBinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA2x2_24VBinaryTcpClientInactivity_Type()
)
wtWebioEA2x2_24VBinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientInputTrigger = _WtWebioEA2x2_24VBinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA2x2_24VBinaryTcpClientInputTrigger_Type()
)
wtWebioEA2x2_24VBinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2_24VBinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientInterval = _WtWebioEA2x2_24VBinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA2x2_24VBinaryTcpClientInterval_Type()
)
wtWebioEA2x2_24VBinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientApplicationMode = _WtWebioEA2x2_24VBinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA2x2_24VBinaryTcpClientApplicationMode_Type()
)
wtWebioEA2x2_24VBinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryUdpPeerLocalPort = _WtWebioEA2x2_24VBinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA2x2_24VBinaryUdpPeerLocalPort_Type()
)
wtWebioEA2x2_24VBinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryUdpPeerRemotePort = _WtWebioEA2x2_24VBinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA2x2_24VBinaryUdpPeerRemotePort_Type()
)
wtWebioEA2x2_24VBinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr = _WtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA2x2_24VBinaryUdpPeerInputTrigger = _WtWebioEA2x2_24VBinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA2x2_24VBinaryUdpPeerInputTrigger_Type()
)
wtWebioEA2x2_24VBinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2_24VBinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA2x2_24VBinaryUdpPeerInterval = _WtWebioEA2x2_24VBinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA2x2_24VBinaryUdpPeerInterval_Type()
)
wtWebioEA2x2_24VBinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2_24VBinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VBinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VBinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA2x2_24VBinaryUdpPeerApplicationMode = _WtWebioEA2x2_24VBinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA2x2_24VBinaryUdpPeerApplicationMode_Type()
)
wtWebioEA2x2_24VBinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryConnectedPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryConnectedPort = _WtWebioEA2x2_24VBinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA2x2_24VBinaryConnectedPort_Type()
)
wtWebioEA2x2_24VBinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryConnectedPort.setStatus("mandatory")
_WtWebioEA2x2_24VBinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA2x2_24VBinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA2x2_24VBinaryConnectedIpAddr = _WtWebioEA2x2_24VBinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA2x2_24VBinaryConnectedIpAddr_Type()
)
wtWebioEA2x2_24VBinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpServerClientHttpPort = _WtWebioEA2x2_24VBinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA2x2_24VBinaryTcpServerClientHttpPort_Type()
)
wtWebioEA2x2_24VBinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA2x2_24VBinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VBinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VBinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VBinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA2x2_24VBinaryTcpClientServerHttpPort = _WtWebioEA2x2_24VBinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA2x2_24VBinaryTcpClientServerHttpPort_Type()
)
wtWebioEA2x2_24VBinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VBinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA2x2_24VSyslog_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VSyslog = _WtWebioEA2x2_24VSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 7)
)
_WtWebioEA2x2_24VSyslogServerIP_Type = OctetString
_WtWebioEA2x2_24VSyslogServerIP_Object = MibScalar
wtWebioEA2x2_24VSyslogServerIP = _WtWebioEA2x2_24VSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 7, 1),
    _WtWebioEA2x2_24VSyslogServerIP_Type()
)
wtWebioEA2x2_24VSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSyslogServerIP.setStatus("mandatory")
_WtWebioEA2x2_24VSyslogServerPort_Type = Integer32
_WtWebioEA2x2_24VSyslogServerPort_Object = MibScalar
wtWebioEA2x2_24VSyslogServerPort = _WtWebioEA2x2_24VSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 7, 2),
    _WtWebioEA2x2_24VSyslogServerPort_Type()
)
wtWebioEA2x2_24VSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSyslogServerPort.setStatus("mandatory")


class _WtWebioEA2x2_24VSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA2x2_24VSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VSyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA2x2_24VSyslogSystemMessagesEnable = _WtWebioEA2x2_24VSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 7, 3),
    _WtWebioEA2x2_24VSyslogSystemMessagesEnable_Type()
)
wtWebioEA2x2_24VSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA2x2_24VSyslogEnable_Type = OctetString
_WtWebioEA2x2_24VSyslogEnable_Object = MibScalar
wtWebioEA2x2_24VSyslogEnable = _WtWebioEA2x2_24VSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 7, 4),
    _WtWebioEA2x2_24VSyslogEnable_Type()
)
wtWebioEA2x2_24VSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSyslogEnable.setStatus("mandatory")
_WtWebioEA2x2_24VFTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VFTP = _WtWebioEA2x2_24VFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8)
)
_WtWebioEA2x2_24VFTPServerIP_Type = OctetString
_WtWebioEA2x2_24VFTPServerIP_Object = MibScalar
wtWebioEA2x2_24VFTPServerIP = _WtWebioEA2x2_24VFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 1),
    _WtWebioEA2x2_24VFTPServerIP_Type()
)
wtWebioEA2x2_24VFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPServerIP.setStatus("mandatory")
_WtWebioEA2x2_24VFTPServerControlPort_Type = Integer32
_WtWebioEA2x2_24VFTPServerControlPort_Object = MibScalar
wtWebioEA2x2_24VFTPServerControlPort = _WtWebioEA2x2_24VFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 2),
    _WtWebioEA2x2_24VFTPServerControlPort_Type()
)
wtWebioEA2x2_24VFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPServerControlPort.setStatus("mandatory")
_WtWebioEA2x2_24VFTPUserName_Type = OctetString
_WtWebioEA2x2_24VFTPUserName_Object = MibScalar
wtWebioEA2x2_24VFTPUserName = _WtWebioEA2x2_24VFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 3),
    _WtWebioEA2x2_24VFTPUserName_Type()
)
wtWebioEA2x2_24VFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPUserName.setStatus("mandatory")
_WtWebioEA2x2_24VFTPPassword_Type = OctetString
_WtWebioEA2x2_24VFTPPassword_Object = MibScalar
wtWebioEA2x2_24VFTPPassword = _WtWebioEA2x2_24VFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 4),
    _WtWebioEA2x2_24VFTPPassword_Type()
)
wtWebioEA2x2_24VFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPPassword.setStatus("mandatory")
_WtWebioEA2x2_24VFTPAccount_Type = OctetString
_WtWebioEA2x2_24VFTPAccount_Object = MibScalar
wtWebioEA2x2_24VFTPAccount = _WtWebioEA2x2_24VFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 5),
    _WtWebioEA2x2_24VFTPAccount_Type()
)
wtWebioEA2x2_24VFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPAccount.setStatus("mandatory")
_WtWebioEA2x2_24VFTPOption_Type = OctetString
_WtWebioEA2x2_24VFTPOption_Object = MibScalar
wtWebioEA2x2_24VFTPOption = _WtWebioEA2x2_24VFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 6),
    _WtWebioEA2x2_24VFTPOption_Type()
)
wtWebioEA2x2_24VFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPOption.setStatus("mandatory")
_WtWebioEA2x2_24VFTPEnable_Type = OctetString
_WtWebioEA2x2_24VFTPEnable_Object = MibScalar
wtWebioEA2x2_24VFTPEnable = _WtWebioEA2x2_24VFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 3, 8, 7),
    _WtWebioEA2x2_24VFTPEnable_Type()
)
wtWebioEA2x2_24VFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VFTPEnable.setStatus("mandatory")
_WtWebioEA2x2_24VOutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VOutputMode = _WtWebioEA2x2_24VOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 4)
)
_WtWebioEA2x2_24VOutputModeTable_Object = MibTable
wtWebioEA2x2_24VOutputModeTable = _WtWebioEA2x2_24VOutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputModeTable.setStatus("mandatory")
_WtWebioEA2x2_24VOutputModeEntry_Object = MibTableRow
wtWebioEA2x2_24VOutputModeEntry = _WtWebioEA2x2_24VOutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 4, 1, 1)
)
wtWebioEA2x2_24VOutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputModeEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VOutputModeBit_Type(OctetString):
    """Custom type wtWebioEA2x2_24VOutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VOutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VOutputModeBit_Object = MibTableColumn
wtWebioEA2x2_24VOutputModeBit = _WtWebioEA2x2_24VOutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 4, 1, 1, 1),
    _WtWebioEA2x2_24VOutputModeBit_Type()
)
wtWebioEA2x2_24VOutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputModeBit.setStatus("mandatory")


class _WtWebioEA2x2_24VSafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA2x2_24VSafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2_24VSafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VSafetyTimeout_Object = MibScalar
wtWebioEA2x2_24VSafetyTimeout = _WtWebioEA2x2_24VSafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 4, 2),
    _WtWebioEA2x2_24VSafetyTimeout_Type()
)
wtWebioEA2x2_24VSafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VSafetyTimeout.setStatus("mandatory")
_WtWebioEA2x2_24VPowerSupplyEnable_Type = OctetString
_WtWebioEA2x2_24VPowerSupplyEnable_Object = MibScalar
wtWebioEA2x2_24VPowerSupplyEnable = _WtWebioEA2x2_24VPowerSupplyEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 4, 4),
    _WtWebioEA2x2_24VPowerSupplyEnable_Type()
)
wtWebioEA2x2_24VPowerSupplyEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPowerSupplyEnable.setStatus("mandatory")
_WtWebioEA2x2_24VAlarm_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VAlarm = _WtWebioEA2x2_24VAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5)
)


class _WtWebioEA2x2_24VAlarmCount_Type(Integer32):
    """Custom type wtWebioEA2x2_24VAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2_24VAlarmCount_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VAlarmCount_Object = MibScalar
wtWebioEA2x2_24VAlarmCount = _WtWebioEA2x2_24VAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 1),
    _WtWebioEA2x2_24VAlarmCount_Type()
)
wtWebioEA2x2_24VAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmCount.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmIfTable_Object = MibTable
wtWebioEA2x2_24VAlarmIfTable = _WtWebioEA2x2_24VAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmIfTable.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmIfEntry_Object = MibTableRow
wtWebioEA2x2_24VAlarmIfEntry = _WtWebioEA2x2_24VAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 2, 1)
)
wtWebioEA2x2_24VAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmIfEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmNo_Type(Integer32):
    """Custom type wtWebioEA2x2_24VAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2_24VAlarmNo_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VAlarmNo_Object = MibTableColumn
wtWebioEA2x2_24VAlarmNo = _WtWebioEA2x2_24VAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 2, 1, 1),
    _WtWebioEA2x2_24VAlarmNo_Type()
)
wtWebioEA2x2_24VAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmNo.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmTable_Object = MibTable
wtWebioEA2x2_24VAlarmTable = _WtWebioEA2x2_24VAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmTable.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmEntry_Object = MibTableRow
wtWebioEA2x2_24VAlarmEntry = _WtWebioEA2x2_24VAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1)
)
wtWebioEA2x2_24VAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmEntry.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VAlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2_24VAlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VAlarmInputTrigger_Object = MibTableColumn
wtWebioEA2x2_24VAlarmInputTrigger = _WtWebioEA2x2_24VAlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 1),
    _WtWebioEA2x2_24VAlarmInputTrigger_Type()
)
wtWebioEA2x2_24VAlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VAlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2_24VAlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VAlarmOutputTrigger_Object = MibTableColumn
wtWebioEA2x2_24VAlarmOutputTrigger = _WtWebioEA2x2_24VAlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 2),
    _WtWebioEA2x2_24VAlarmOutputTrigger_Type()
)
wtWebioEA2x2_24VAlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2_24VAlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VAlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VAlarmSystemTrigger_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSystemTrigger = _WtWebioEA2x2_24VAlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 3),
    _WtWebioEA2x2_24VAlarmSystemTrigger_Type()
)
wtWebioEA2x2_24VAlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmMaxCounterValue_Type = OctetString
_WtWebioEA2x2_24VAlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA2x2_24VAlarmMaxCounterValue = _WtWebioEA2x2_24VAlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 4),
    _WtWebioEA2x2_24VAlarmMaxCounterValue_Type()
)
wtWebioEA2x2_24VAlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmInterval_Type = OctetString
_WtWebioEA2x2_24VAlarmInterval_Object = MibTableColumn
wtWebioEA2x2_24VAlarmInterval = _WtWebioEA2x2_24VAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 5),
    _WtWebioEA2x2_24VAlarmInterval_Type()
)
wtWebioEA2x2_24VAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmInterval.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmEnable_Type(OctetString):
    """Custom type wtWebioEA2x2_24VAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VAlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VAlarmEnable_Object = MibTableColumn
wtWebioEA2x2_24VAlarmEnable = _WtWebioEA2x2_24VAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 6),
    _WtWebioEA2x2_24VAlarmEnable_Type()
)
wtWebioEA2x2_24VAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmEnable.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmMailAddr_Type = OctetString
_WtWebioEA2x2_24VAlarmMailAddr_Object = MibTableColumn
wtWebioEA2x2_24VAlarmMailAddr = _WtWebioEA2x2_24VAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 7),
    _WtWebioEA2x2_24VAlarmMailAddr_Type()
)
wtWebioEA2x2_24VAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmMailAddr.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmMailSubject_Type = OctetString
_WtWebioEA2x2_24VAlarmMailSubject_Object = MibTableColumn
wtWebioEA2x2_24VAlarmMailSubject = _WtWebioEA2x2_24VAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 8),
    _WtWebioEA2x2_24VAlarmMailSubject_Type()
)
wtWebioEA2x2_24VAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmMailSubject.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmMailText_Type = OctetString
_WtWebioEA2x2_24VAlarmMailText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmMailText = _WtWebioEA2x2_24VAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 9),
    _WtWebioEA2x2_24VAlarmMailText_Type()
)
wtWebioEA2x2_24VAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmMailText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmSnmpManagerIP_Type = OctetString
_WtWebioEA2x2_24VAlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSnmpManagerIP = _WtWebioEA2x2_24VAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 10),
    _WtWebioEA2x2_24VAlarmSnmpManagerIP_Type()
)
wtWebioEA2x2_24VAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmSnmpTrapText_Type = OctetString
_WtWebioEA2x2_24VAlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSnmpTrapText = _WtWebioEA2x2_24VAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 11),
    _WtWebioEA2x2_24VAlarmSnmpTrapText_Type()
)
wtWebioEA2x2_24VAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmUdpIpAddr_Type = OctetString
_WtWebioEA2x2_24VAlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA2x2_24VAlarmUdpIpAddr = _WtWebioEA2x2_24VAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 12),
    _WtWebioEA2x2_24VAlarmUdpIpAddr_Type()
)
wtWebioEA2x2_24VAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VAlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VAlarmUdpPort_Object = MibTableColumn
wtWebioEA2x2_24VAlarmUdpPort = _WtWebioEA2x2_24VAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 13),
    _WtWebioEA2x2_24VAlarmUdpPort_Type()
)
wtWebioEA2x2_24VAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmUdpPort.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmUdpText_Type = OctetString
_WtWebioEA2x2_24VAlarmUdpText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmUdpText = _WtWebioEA2x2_24VAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 14),
    _WtWebioEA2x2_24VAlarmUdpText_Type()
)
wtWebioEA2x2_24VAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmUdpText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmTcpIpAddr_Type = OctetString
_WtWebioEA2x2_24VAlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA2x2_24VAlarmTcpIpAddr = _WtWebioEA2x2_24VAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 15),
    _WtWebioEA2x2_24VAlarmTcpIpAddr_Type()
)
wtWebioEA2x2_24VAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VAlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VAlarmTcpPort_Object = MibTableColumn
wtWebioEA2x2_24VAlarmTcpPort = _WtWebioEA2x2_24VAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 16),
    _WtWebioEA2x2_24VAlarmTcpPort_Type()
)
wtWebioEA2x2_24VAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmTcpPort.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmTcpText_Type = OctetString
_WtWebioEA2x2_24VAlarmTcpText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmTcpText = _WtWebioEA2x2_24VAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 17),
    _WtWebioEA2x2_24VAlarmTcpText_Type()
)
wtWebioEA2x2_24VAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmTcpText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmSyslogIpAddr_Type = OctetString
_WtWebioEA2x2_24VAlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSyslogIpAddr = _WtWebioEA2x2_24VAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 18),
    _WtWebioEA2x2_24VAlarmSyslogIpAddr_Type()
)
wtWebioEA2x2_24VAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA2x2_24VAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2_24VAlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA2x2_24VAlarmSyslogPort_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSyslogPort = _WtWebioEA2x2_24VAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 19),
    _WtWebioEA2x2_24VAlarmSyslogPort_Type()
)
wtWebioEA2x2_24VAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSyslogPort.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmSyslogText_Type = OctetString
_WtWebioEA2x2_24VAlarmSyslogText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSyslogText = _WtWebioEA2x2_24VAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 20),
    _WtWebioEA2x2_24VAlarmSyslogText_Type()
)
wtWebioEA2x2_24VAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSyslogText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmFtpDataPort_Type = OctetString
_WtWebioEA2x2_24VAlarmFtpDataPort_Object = MibTableColumn
wtWebioEA2x2_24VAlarmFtpDataPort = _WtWebioEA2x2_24VAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 21),
    _WtWebioEA2x2_24VAlarmFtpDataPort_Type()
)
wtWebioEA2x2_24VAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmFtpFileName_Type = OctetString
_WtWebioEA2x2_24VAlarmFtpFileName_Object = MibTableColumn
wtWebioEA2x2_24VAlarmFtpFileName = _WtWebioEA2x2_24VAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 22),
    _WtWebioEA2x2_24VAlarmFtpFileName_Type()
)
wtWebioEA2x2_24VAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmFtpFileName.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmFtpText_Type = OctetString
_WtWebioEA2x2_24VAlarmFtpText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmFtpText = _WtWebioEA2x2_24VAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 23),
    _WtWebioEA2x2_24VAlarmFtpText_Type()
)
wtWebioEA2x2_24VAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmFtpText.setStatus("mandatory")


class _WtWebioEA2x2_24VAlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA2x2_24VAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VAlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VAlarmFtpOption_Object = MibTableColumn
wtWebioEA2x2_24VAlarmFtpOption = _WtWebioEA2x2_24VAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 24),
    _WtWebioEA2x2_24VAlarmFtpOption_Type()
)
wtWebioEA2x2_24VAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmFtpOption.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmTimerCron_Type = OctetString
_WtWebioEA2x2_24VAlarmTimerCron_Object = MibTableColumn
wtWebioEA2x2_24VAlarmTimerCron = _WtWebioEA2x2_24VAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 25),
    _WtWebioEA2x2_24VAlarmTimerCron_Type()
)
wtWebioEA2x2_24VAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmTimerCron.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmMailReleaseSubject_Type = OctetString
_WtWebioEA2x2_24VAlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA2x2_24VAlarmMailReleaseSubject = _WtWebioEA2x2_24VAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 26),
    _WtWebioEA2x2_24VAlarmMailReleaseSubject_Type()
)
wtWebioEA2x2_24VAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmMailReleaseText_Type = OctetString
_WtWebioEA2x2_24VAlarmMailReleaseText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmMailReleaseText = _WtWebioEA2x2_24VAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 27),
    _WtWebioEA2x2_24VAlarmMailReleaseText_Type()
)
wtWebioEA2x2_24VAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA2x2_24VAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSnmpTrapReleaseText = _WtWebioEA2x2_24VAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 28),
    _WtWebioEA2x2_24VAlarmSnmpTrapReleaseText_Type()
)
wtWebioEA2x2_24VAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmUdpReleaseText_Type = OctetString
_WtWebioEA2x2_24VAlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmUdpReleaseText = _WtWebioEA2x2_24VAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 29),
    _WtWebioEA2x2_24VAlarmUdpReleaseText_Type()
)
wtWebioEA2x2_24VAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmTcpReleaseText_Type = OctetString
_WtWebioEA2x2_24VAlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmTcpReleaseText = _WtWebioEA2x2_24VAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 30),
    _WtWebioEA2x2_24VAlarmTcpReleaseText_Type()
)
wtWebioEA2x2_24VAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmSyslogReleaseText_Type = OctetString
_WtWebioEA2x2_24VAlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmSyslogReleaseText = _WtWebioEA2x2_24VAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 31),
    _WtWebioEA2x2_24VAlarmSyslogReleaseText_Type()
)
wtWebioEA2x2_24VAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA2x2_24VAlarmFtpReleaseText_Type = OctetString
_WtWebioEA2x2_24VAlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA2x2_24VAlarmFtpReleaseText = _WtWebioEA2x2_24VAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 1, 5, 3, 1, 32),
    _WtWebioEA2x2_24VAlarmFtpReleaseText_Type()
)
wtWebioEA2x2_24VAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlarmFtpReleaseText.setStatus("mandatory")
_WtWebioEA2x2_24VPorts_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VPorts = _WtWebioEA2x2_24VPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2)
)
_WtWebioEA2x2_24VInputPortTable_Object = MibTable
wtWebioEA2x2_24VInputPortTable = _WtWebioEA2x2_24VInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputPortTable.setStatus("mandatory")
_WtWebioEA2x2_24VInputPortEntry_Object = MibTableRow
wtWebioEA2x2_24VInputPortEntry = _WtWebioEA2x2_24VInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1)
)
wtWebioEA2x2_24VInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VInputPortEntry.setStatus("mandatory")
_WtWebioEA2x2_24VPortInputName_Type = OctetString
_WtWebioEA2x2_24VPortInputName_Object = MibTableColumn
wtWebioEA2x2_24VPortInputName = _WtWebioEA2x2_24VPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1, 1),
    _WtWebioEA2x2_24VPortInputName_Type()
)
wtWebioEA2x2_24VPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortInputName.setStatus("mandatory")
_WtWebioEA2x2_24VPortInputText_Type = OctetString
_WtWebioEA2x2_24VPortInputText_Object = MibTableColumn
wtWebioEA2x2_24VPortInputText = _WtWebioEA2x2_24VPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1, 2),
    _WtWebioEA2x2_24VPortInputText_Type()
)
wtWebioEA2x2_24VPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortInputText.setStatus("mandatory")


class _WtWebioEA2x2_24VPortInputMode_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortInputMode_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortInputMode_Object = MibTableColumn
wtWebioEA2x2_24VPortInputMode = _WtWebioEA2x2_24VPortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1, 3),
    _WtWebioEA2x2_24VPortInputMode_Type()
)
wtWebioEA2x2_24VPortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortInputMode.setStatus("mandatory")
_WtWebioEA2x2_24VPortInputFilter_Type = Integer32
_WtWebioEA2x2_24VPortInputFilter_Object = MibTableColumn
wtWebioEA2x2_24VPortInputFilter = _WtWebioEA2x2_24VPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1, 4),
    _WtWebioEA2x2_24VPortInputFilter_Type()
)
wtWebioEA2x2_24VPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortInputFilter.setStatus("mandatory")


class _WtWebioEA2x2_24VPortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA2x2_24VPortInputBicountPulsePolarity = _WtWebioEA2x2_24VPortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1, 5),
    _WtWebioEA2x2_24VPortInputBicountPulsePolarity_Type()
)
wtWebioEA2x2_24VPortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2_24VPortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA2x2_24VPortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA2x2_24VPortInputBicountInactivTimeout = _WtWebioEA2x2_24VPortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 1, 1, 6),
    _WtWebioEA2x2_24VPortInputBicountInactivTimeout_Type()
)
wtWebioEA2x2_24VPortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA2x2_24VOutputPortTable_Object = MibTable
wtWebioEA2x2_24VOutputPortTable = _WtWebioEA2x2_24VOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputPortTable.setStatus("mandatory")
_WtWebioEA2x2_24VOutputPortEntry_Object = MibTableRow
wtWebioEA2x2_24VOutputPortEntry = _WtWebioEA2x2_24VOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1)
)
wtWebioEA2x2_24VOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VOutputPortEntry.setStatus("mandatory")
_WtWebioEA2x2_24VPortOutputName_Type = OctetString
_WtWebioEA2x2_24VPortOutputName_Object = MibTableColumn
wtWebioEA2x2_24VPortOutputName = _WtWebioEA2x2_24VPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 1),
    _WtWebioEA2x2_24VPortOutputName_Type()
)
wtWebioEA2x2_24VPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortOutputName.setStatus("mandatory")
_WtWebioEA2x2_24VPortOutputText_Type = OctetString
_WtWebioEA2x2_24VPortOutputText_Object = MibTableColumn
wtWebioEA2x2_24VPortOutputText = _WtWebioEA2x2_24VPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 2),
    _WtWebioEA2x2_24VPortOutputText_Type()
)
wtWebioEA2x2_24VPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortOutputText.setStatus("mandatory")
_WtWebioEA2x2_24VPortOutputGroupMode_Type = OctetString
_WtWebioEA2x2_24VPortOutputGroupMode_Object = MibTableColumn
wtWebioEA2x2_24VPortOutputGroupMode = _WtWebioEA2x2_24VPortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 3),
    _WtWebioEA2x2_24VPortOutputGroupMode_Type()
)
wtWebioEA2x2_24VPortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortOutputGroupMode.setStatus("mandatory")
_WtWebioEA2x2_24VPortOutputSafetyState_Type = OctetString
_WtWebioEA2x2_24VPortOutputSafetyState_Object = MibTableColumn
wtWebioEA2x2_24VPortOutputSafetyState = _WtWebioEA2x2_24VPortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 4),
    _WtWebioEA2x2_24VPortOutputSafetyState_Type()
)
wtWebioEA2x2_24VPortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA2x2_24VPortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortLogicInputMask_Object = MibTableColumn
wtWebioEA2x2_24VPortLogicInputMask = _WtWebioEA2x2_24VPortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 5),
    _WtWebioEA2x2_24VPortLogicInputMask_Type()
)
wtWebioEA2x2_24VPortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortLogicInputMask.setStatus("mandatory")


class _WtWebioEA2x2_24VPortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortLogicInputInverter_Object = MibTableColumn
wtWebioEA2x2_24VPortLogicInputInverter = _WtWebioEA2x2_24VPortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 6),
    _WtWebioEA2x2_24VPortLogicInputInverter_Type()
)
wtWebioEA2x2_24VPortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA2x2_24VPortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortLogicFunction_Object = MibTableColumn
wtWebioEA2x2_24VPortLogicFunction = _WtWebioEA2x2_24VPortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 7),
    _WtWebioEA2x2_24VPortLogicFunction_Type()
)
wtWebioEA2x2_24VPortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortLogicFunction.setStatus("mandatory")


class _WtWebioEA2x2_24VPortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortLogicOutputInverter_Object = MibTableColumn
wtWebioEA2x2_24VPortLogicOutputInverter = _WtWebioEA2x2_24VPortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 8),
    _WtWebioEA2x2_24VPortLogicOutputInverter_Type()
)
wtWebioEA2x2_24VPortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA2x2_24VPortPulseDuration_Type = Integer32
_WtWebioEA2x2_24VPortPulseDuration_Object = MibTableColumn
wtWebioEA2x2_24VPortPulseDuration = _WtWebioEA2x2_24VPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 9),
    _WtWebioEA2x2_24VPortPulseDuration_Type()
)
wtWebioEA2x2_24VPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortPulseDuration.setStatus("mandatory")


class _WtWebioEA2x2_24VPortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2_24VPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2_24VPortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2_24VPortPulsePolarity_Object = MibTableColumn
wtWebioEA2x2_24VPortPulsePolarity = _WtWebioEA2x2_24VPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 2, 2, 1, 10),
    _WtWebioEA2x2_24VPortPulsePolarity_Type()
)
wtWebioEA2x2_24VPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VPortPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2_24VManufact_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VManufact = _WtWebioEA2x2_24VManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 3)
)
_WtWebioEA2x2_24VMfName_Type = OctetString
_WtWebioEA2x2_24VMfName_Object = MibScalar
wtWebioEA2x2_24VMfName = _WtWebioEA2x2_24VMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 3, 1),
    _WtWebioEA2x2_24VMfName_Type()
)
wtWebioEA2x2_24VMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMfName.setStatus("mandatory")
_WtWebioEA2x2_24VMfAddr_Type = OctetString
_WtWebioEA2x2_24VMfAddr_Object = MibScalar
wtWebioEA2x2_24VMfAddr = _WtWebioEA2x2_24VMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 3, 2),
    _WtWebioEA2x2_24VMfAddr_Type()
)
wtWebioEA2x2_24VMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMfAddr.setStatus("mandatory")
_WtWebioEA2x2_24VMfHotline_Type = OctetString
_WtWebioEA2x2_24VMfHotline_Object = MibScalar
wtWebioEA2x2_24VMfHotline = _WtWebioEA2x2_24VMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 3, 3),
    _WtWebioEA2x2_24VMfHotline_Type()
)
wtWebioEA2x2_24VMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMfHotline.setStatus("mandatory")
_WtWebioEA2x2_24VMfInternet_Type = OctetString
_WtWebioEA2x2_24VMfInternet_Object = MibScalar
wtWebioEA2x2_24VMfInternet = _WtWebioEA2x2_24VMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 3, 4),
    _WtWebioEA2x2_24VMfInternet_Type()
)
wtWebioEA2x2_24VMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMfInternet.setStatus("mandatory")
_WtWebioEA2x2_24VMfDeviceTyp_Type = OctetString
_WtWebioEA2x2_24VMfDeviceTyp_Object = MibScalar
wtWebioEA2x2_24VMfDeviceTyp = _WtWebioEA2x2_24VMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 3, 3, 5),
    _WtWebioEA2x2_24VMfDeviceTyp_Type()
)
wtWebioEA2x2_24VMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VMfDeviceTyp.setStatus("mandatory")
_WtWebioEA2x2_24VDiag_ObjectIdentity = ObjectIdentity
wtWebioEA2x2_24VDiag = _WtWebioEA2x2_24VDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 4)
)
_WtWebioEA2x2_24VDiagErrorCount_Type = Integer32
_WtWebioEA2x2_24VDiagErrorCount_Object = MibScalar
wtWebioEA2x2_24VDiagErrorCount = _WtWebioEA2x2_24VDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 4, 1),
    _WtWebioEA2x2_24VDiagErrorCount_Type()
)
wtWebioEA2x2_24VDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDiagErrorCount.setStatus("mandatory")
_WtWebioEA2x2_24VDiagBinaryError_Type = OctetString
_WtWebioEA2x2_24VDiagBinaryError_Object = MibScalar
wtWebioEA2x2_24VDiagBinaryError = _WtWebioEA2x2_24VDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 4, 2),
    _WtWebioEA2x2_24VDiagBinaryError_Type()
)
wtWebioEA2x2_24VDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDiagBinaryError.setStatus("mandatory")
_WtWebioEA2x2_24VDiagErrorIndex_Type = Integer32
_WtWebioEA2x2_24VDiagErrorIndex_Object = MibScalar
wtWebioEA2x2_24VDiagErrorIndex = _WtWebioEA2x2_24VDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 4, 3),
    _WtWebioEA2x2_24VDiagErrorIndex_Type()
)
wtWebioEA2x2_24VDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDiagErrorIndex.setStatus("mandatory")
_WtWebioEA2x2_24VDiagErrorMessage_Type = OctetString
_WtWebioEA2x2_24VDiagErrorMessage_Object = MibScalar
wtWebioEA2x2_24VDiagErrorMessage = _WtWebioEA2x2_24VDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 4, 4),
    _WtWebioEA2x2_24VDiagErrorMessage_Type()
)
wtWebioEA2x2_24VDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDiagErrorMessage.setStatus("mandatory")
_WtWebioEA2x2_24VDiagErrorClear_Type = Integer32
_WtWebioEA2x2_24VDiagErrorClear_Object = MibScalar
wtWebioEA2x2_24VDiagErrorClear = _WtWebioEA2x2_24VDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 4, 5),
    _WtWebioEA2x2_24VDiagErrorClear_Type()
)
wtWebioEA2x2_24VDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VDiagErrorClear.setStatus("mandatory")
_WtWebioEA2x2ERP_24V_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24V = _WtWebioEA2x2ERP_24V_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31)
)
_WtWebioEA2x2ERP_24VInOut_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VInOut = _WtWebioEA2x2ERP_24VInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1)
)


class _WtWebioEA2x2ERP_24VInputs_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERP_24VInputs_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VInputs_Object = MibScalar
wtWebioEA2x2ERP_24VInputs = _WtWebioEA2x2ERP_24VInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 1),
    _WtWebioEA2x2ERP_24VInputs_Type()
)
wtWebioEA2x2ERP_24VInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputs.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VOutputs_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERP_24VOutputs_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VOutputs_Object = MibScalar
wtWebioEA2x2ERP_24VOutputs = _WtWebioEA2x2ERP_24VOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 2),
    _WtWebioEA2x2ERP_24VOutputs_Type()
)
wtWebioEA2x2ERP_24VOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputs.setStatus("mandatory")
_WtWebioEA2x2ERP_24VInputTable_Object = MibTable
wtWebioEA2x2ERP_24VInputTable = _WtWebioEA2x2ERP_24VInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VInputEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VInputEntry = _WtWebioEA2x2ERP_24VInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 3, 1)
)
wtWebioEA2x2ERP_24VInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VInputNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2ERP_24VInputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VInputNo_Object = MibTableColumn
wtWebioEA2x2ERP_24VInputNo = _WtWebioEA2x2ERP_24VInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 3, 1, 1),
    _WtWebioEA2x2ERP_24VInputNo_Type()
)
wtWebioEA2x2ERP_24VInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputNo.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VInputCounter_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2ERP_24VInputCounter_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VInputCounter_Object = MibTableColumn
wtWebioEA2x2ERP_24VInputCounter = _WtWebioEA2x2ERP_24VInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 3, 1, 2),
    _WtWebioEA2x2ERP_24VInputCounter_Type()
)
wtWebioEA2x2ERP_24VInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputCounter.setStatus("mandatory")
_WtWebioEA2x2ERP_24VInputCounterClear_Type = Integer32
_WtWebioEA2x2ERP_24VInputCounterClear_Object = MibTableColumn
wtWebioEA2x2ERP_24VInputCounterClear = _WtWebioEA2x2ERP_24VInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 3, 1, 3),
    _WtWebioEA2x2ERP_24VInputCounterClear_Type()
)
wtWebioEA2x2ERP_24VInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputCounterClear.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VInputState_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VInputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VInputState-OFF", 0),
          ("wtWebioEA2x2ERP_24VInputState-ON", 1))
    )


_WtWebioEA2x2ERP_24VInputState_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VInputState_Object = MibTableColumn
wtWebioEA2x2ERP_24VInputState = _WtWebioEA2x2ERP_24VInputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 3, 1, 4),
    _WtWebioEA2x2ERP_24VInputState_Type()
)
wtWebioEA2x2ERP_24VInputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputState.setStatus("mandatory")
_WtWebioEA2x2ERP_24VInputValue_Type = Integer32
_WtWebioEA2x2ERP_24VInputValue_Object = MibScalar
wtWebioEA2x2ERP_24VInputValue = _WtWebioEA2x2ERP_24VInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 4),
    _WtWebioEA2x2ERP_24VInputValue_Type()
)
wtWebioEA2x2ERP_24VInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputValue.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputTable_Object = MibTable
wtWebioEA2x2ERP_24VOutputTable = _WtWebioEA2x2ERP_24VOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 5)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VOutputEntry = _WtWebioEA2x2ERP_24VOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 5, 1)
)
wtWebioEA2x2ERP_24VOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VOutputNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtWebioEA2x2ERP_24VOutputNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VOutputNo_Object = MibTableColumn
wtWebioEA2x2ERP_24VOutputNo = _WtWebioEA2x2ERP_24VOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 5, 1, 1),
    _WtWebioEA2x2ERP_24VOutputNo_Type()
)
wtWebioEA2x2ERP_24VOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputNo.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VOutputState_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VOutputState-OFF", 0),
          ("wtWebioEA2x2ERP_24VOutputState-ON", 1))
    )


_WtWebioEA2x2ERP_24VOutputState_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VOutputState_Object = MibTableColumn
wtWebioEA2x2ERP_24VOutputState = _WtWebioEA2x2ERP_24VOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 5, 1, 2),
    _WtWebioEA2x2ERP_24VOutputState_Type()
)
wtWebioEA2x2ERP_24VOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputState.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputValue_Type = Integer32
_WtWebioEA2x2ERP_24VOutputValue_Object = MibScalar
wtWebioEA2x2ERP_24VOutputValue = _WtWebioEA2x2ERP_24VOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 6),
    _WtWebioEA2x2ERP_24VOutputValue_Type()
)
wtWebioEA2x2ERP_24VOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputValue.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VSetOutput_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtWebioEA2x2ERP_24VSetOutput_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VSetOutput_Object = MibScalar
wtWebioEA2x2ERP_24VSetOutput = _WtWebioEA2x2ERP_24VSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 1, 7),
    _WtWebioEA2x2ERP_24VSetOutput_Type()
)
wtWebioEA2x2ERP_24VSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSetOutput.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSessCntrl_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VSessCntrl = _WtWebioEA2x2ERP_24VSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 2)
)
_WtWebioEA2x2ERP_24VSessCntrlPassword_Type = OctetString
_WtWebioEA2x2ERP_24VSessCntrlPassword_Object = MibScalar
wtWebioEA2x2ERP_24VSessCntrlPassword = _WtWebioEA2x2ERP_24VSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 2, 1),
    _WtWebioEA2x2ERP_24VSessCntrlPassword_Type()
)
wtWebioEA2x2ERP_24VSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSessCntrlPassword.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VSessCntrlConfigMode_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VSessCntrl-NoSession", 0),
          ("wtWebioEA2x2ERP_24VSessCntrl-Session", 1))
    )


_WtWebioEA2x2ERP_24VSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VSessCntrlConfigMode_Object = MibScalar
wtWebioEA2x2ERP_24VSessCntrlConfigMode = _WtWebioEA2x2ERP_24VSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 2, 2),
    _WtWebioEA2x2ERP_24VSessCntrlConfigMode_Type()
)
wtWebioEA2x2ERP_24VSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSessCntrlConfigMode.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSessCntrlLogout_Type = Integer32
_WtWebioEA2x2ERP_24VSessCntrlLogout_Object = MibScalar
wtWebioEA2x2ERP_24VSessCntrlLogout = _WtWebioEA2x2ERP_24VSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 2, 3),
    _WtWebioEA2x2ERP_24VSessCntrlLogout_Type()
)
wtWebioEA2x2ERP_24VSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSessCntrlLogout.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSessCntrlAdminPassword_Type = OctetString
_WtWebioEA2x2ERP_24VSessCntrlAdminPassword_Object = MibScalar
wtWebioEA2x2ERP_24VSessCntrlAdminPassword = _WtWebioEA2x2ERP_24VSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 2, 4),
    _WtWebioEA2x2ERP_24VSessCntrlAdminPassword_Type()
)
wtWebioEA2x2ERP_24VSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSessCntrlAdminPassword.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSessCntrlConfigPassword_Type = OctetString
_WtWebioEA2x2ERP_24VSessCntrlConfigPassword_Object = MibScalar
wtWebioEA2x2ERP_24VSessCntrlConfigPassword = _WtWebioEA2x2ERP_24VSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 2, 5),
    _WtWebioEA2x2ERP_24VSessCntrlConfigPassword_Type()
)
wtWebioEA2x2ERP_24VSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSessCntrlConfigPassword.setStatus("mandatory")
_WtWebioEA2x2ERP_24VConfig_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VConfig = _WtWebioEA2x2ERP_24VConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3)
)
_WtWebioEA2x2ERP_24VDevice_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VDevice = _WtWebioEA2x2ERP_24VDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1)
)
_WtWebioEA2x2ERP_24VText_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VText = _WtWebioEA2x2ERP_24VText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 1)
)
_WtWebioEA2x2ERP_24VDeviceName_Type = OctetString
_WtWebioEA2x2ERP_24VDeviceName_Object = MibScalar
wtWebioEA2x2ERP_24VDeviceName = _WtWebioEA2x2ERP_24VDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 1, 1),
    _WtWebioEA2x2ERP_24VDeviceName_Type()
)
wtWebioEA2x2ERP_24VDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDeviceName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDeviceText_Type = OctetString
_WtWebioEA2x2ERP_24VDeviceText_Object = MibScalar
wtWebioEA2x2ERP_24VDeviceText = _WtWebioEA2x2ERP_24VDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 1, 2),
    _WtWebioEA2x2ERP_24VDeviceText_Type()
)
wtWebioEA2x2ERP_24VDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDeviceText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDeviceLocation_Type = OctetString
_WtWebioEA2x2ERP_24VDeviceLocation_Object = MibScalar
wtWebioEA2x2ERP_24VDeviceLocation = _WtWebioEA2x2ERP_24VDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 1, 3),
    _WtWebioEA2x2ERP_24VDeviceLocation_Type()
)
wtWebioEA2x2ERP_24VDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDeviceLocation.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDeviceContact_Type = OctetString
_WtWebioEA2x2ERP_24VDeviceContact_Object = MibScalar
wtWebioEA2x2ERP_24VDeviceContact = _WtWebioEA2x2ERP_24VDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 1, 4),
    _WtWebioEA2x2ERP_24VDeviceContact_Type()
)
wtWebioEA2x2ERP_24VDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDeviceContact.setStatus("mandatory")
_WtWebioEA2x2ERP_24VTimeDate_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VTimeDate = _WtWebioEA2x2ERP_24VTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2)
)
_WtWebioEA2x2ERP_24VTimeZone_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VTimeZone = _WtWebioEA2x2ERP_24VTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1)
)
_WtWebioEA2x2ERP_24VTzOffsetHrs_Type = Integer32
_WtWebioEA2x2ERP_24VTzOffsetHrs_Object = MibScalar
wtWebioEA2x2ERP_24VTzOffsetHrs = _WtWebioEA2x2ERP_24VTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 1),
    _WtWebioEA2x2ERP_24VTzOffsetHrs_Type()
)
wtWebioEA2x2ERP_24VTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2ERP_24VTzOffsetMin_Type = Integer32
_WtWebioEA2x2ERP_24VTzOffsetMin_Object = MibScalar
wtWebioEA2x2ERP_24VTzOffsetMin = _WtWebioEA2x2ERP_24VTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 2),
    _WtWebioEA2x2ERP_24VTzOffsetMin_Type()
)
wtWebioEA2x2ERP_24VTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VTzEnable_Object = MibScalar
wtWebioEA2x2ERP_24VTzEnable = _WtWebioEA2x2ERP_24VTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 3),
    _WtWebioEA2x2ERP_24VTzEnable_Type()
)
wtWebioEA2x2ERP_24VTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTzEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VStTzOffsetHrs_Type = Integer32
_WtWebioEA2x2ERP_24VStTzOffsetHrs_Object = MibScalar
wtWebioEA2x2ERP_24VStTzOffsetHrs = _WtWebioEA2x2ERP_24VStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 4),
    _WtWebioEA2x2ERP_24VStTzOffsetHrs_Type()
)
wtWebioEA2x2ERP_24VStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzOffsetHrs.setStatus("mandatory")
_WtWebioEA2x2ERP_24VStTzOffsetMin_Type = Integer32
_WtWebioEA2x2ERP_24VStTzOffsetMin_Object = MibScalar
wtWebioEA2x2ERP_24VStTzOffsetMin = _WtWebioEA2x2ERP_24VStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 5),
    _WtWebioEA2x2ERP_24VStTzOffsetMin_Type()
)
wtWebioEA2x2ERP_24VStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzOffsetMin.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VStTzEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VStTzEnable_Object = MibScalar
wtWebioEA2x2ERP_24VStTzEnable = _WtWebioEA2x2ERP_24VStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 6),
    _WtWebioEA2x2ERP_24VStTzEnable_Type()
)
wtWebioEA2x2ERP_24VStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzEnable.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzStartMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VStartMonth-April", 4),
          ("wtWebioEA2x2ERP_24VStartMonth-August", 8),
          ("wtWebioEA2x2ERP_24VStartMonth-December", 12),
          ("wtWebioEA2x2ERP_24VStartMonth-February", 2),
          ("wtWebioEA2x2ERP_24VStartMonth-January", 1),
          ("wtWebioEA2x2ERP_24VStartMonth-July", 7),
          ("wtWebioEA2x2ERP_24VStartMonth-June", 6),
          ("wtWebioEA2x2ERP_24VStartMonth-March", 3),
          ("wtWebioEA2x2ERP_24VStartMonth-May", 5),
          ("wtWebioEA2x2ERP_24VStartMonth-November", 11),
          ("wtWebioEA2x2ERP_24VStartMonth-October", 10),
          ("wtWebioEA2x2ERP_24VStartMonth-September", 9))
    )


_WtWebioEA2x2ERP_24VStTzStartMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VStTzStartMonth_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStartMonth = _WtWebioEA2x2ERP_24VStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 7),
    _WtWebioEA2x2ERP_24VStTzStartMonth_Type()
)
wtWebioEA2x2ERP_24VStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStartMonth.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzStartMode_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VStartMode-first", 1),
          ("wtWebioEA2x2ERP_24VStartMode-fourth", 4),
          ("wtWebioEA2x2ERP_24VStartMode-last", 5),
          ("wtWebioEA2x2ERP_24VStartMode-second", 2),
          ("wtWebioEA2x2ERP_24VStartMode-third", 3))
    )


_WtWebioEA2x2ERP_24VStTzStartMode_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VStTzStartMode_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStartMode = _WtWebioEA2x2ERP_24VStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 8),
    _WtWebioEA2x2ERP_24VStTzStartMode_Type()
)
wtWebioEA2x2ERP_24VStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStartMode.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzStartWday_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VStartWday-Friday", 6),
          ("wtWebioEA2x2ERP_24VStartWday-Monday", 2),
          ("wtWebioEA2x2ERP_24VStartWday-Saturday", 7),
          ("wtWebioEA2x2ERP_24VStartWday-Sunday", 1),
          ("wtWebioEA2x2ERP_24VStartWday-Thursday", 4),
          ("wtWebioEA2x2ERP_24VStartWday-Tuesday", 3),
          ("wtWebioEA2x2ERP_24VStartWday-Wednesday", 5))
    )


_WtWebioEA2x2ERP_24VStTzStartWday_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VStTzStartWday_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStartWday = _WtWebioEA2x2ERP_24VStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 9),
    _WtWebioEA2x2ERP_24VStTzStartWday_Type()
)
wtWebioEA2x2ERP_24VStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStartWday.setStatus("mandatory")
_WtWebioEA2x2ERP_24VStTzStartHrs_Type = Integer32
_WtWebioEA2x2ERP_24VStTzStartHrs_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStartHrs = _WtWebioEA2x2ERP_24VStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 10),
    _WtWebioEA2x2ERP_24VStTzStartHrs_Type()
)
wtWebioEA2x2ERP_24VStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStartHrs.setStatus("mandatory")
_WtWebioEA2x2ERP_24VStTzStartMin_Type = Integer32
_WtWebioEA2x2ERP_24VStTzStartMin_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStartMin = _WtWebioEA2x2ERP_24VStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 11),
    _WtWebioEA2x2ERP_24VStTzStartMin_Type()
)
wtWebioEA2x2ERP_24VStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStartMin.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzStopMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VStopMonth-April", 4),
          ("wtWebioEA2x2ERP_24VStopMonth-August", 8),
          ("wtWebioEA2x2ERP_24VStopMonth-December", 12),
          ("wtWebioEA2x2ERP_24VStopMonth-February", 2),
          ("wtWebioEA2x2ERP_24VStopMonth-January", 1),
          ("wtWebioEA2x2ERP_24VStopMonth-July", 7),
          ("wtWebioEA2x2ERP_24VStopMonth-June", 6),
          ("wtWebioEA2x2ERP_24VStopMonth-March", 3),
          ("wtWebioEA2x2ERP_24VStopMonth-May", 5),
          ("wtWebioEA2x2ERP_24VStopMonth-November", 11),
          ("wtWebioEA2x2ERP_24VStopMonth-October", 10),
          ("wtWebioEA2x2ERP_24VStopMonth-September", 9))
    )


_WtWebioEA2x2ERP_24VStTzStopMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VStTzStopMonth_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStopMonth = _WtWebioEA2x2ERP_24VStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 12),
    _WtWebioEA2x2ERP_24VStTzStopMonth_Type()
)
wtWebioEA2x2ERP_24VStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStopMonth.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzStopMode_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VStopMode-first", 1),
          ("wtWebioEA2x2ERP_24VStopMode-fourth", 4),
          ("wtWebioEA2x2ERP_24VStopMode-last", 5),
          ("wtWebioEA2x2ERP_24VStopMode-second", 2),
          ("wtWebioEA2x2ERP_24VStopMode-third", 3))
    )


_WtWebioEA2x2ERP_24VStTzStopMode_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VStTzStopMode_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStopMode = _WtWebioEA2x2ERP_24VStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 13),
    _WtWebioEA2x2ERP_24VStTzStopMode_Type()
)
wtWebioEA2x2ERP_24VStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStopMode.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VStTzStopWday_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VStopWday-Friday", 6),
          ("wtWebioEA2x2ERP_24VStopWday-Monday", 2),
          ("wtWebioEA2x2ERP_24VStopWday-Saturday", 7),
          ("wtWebioEA2x2ERP_24VStopWday-Sunday", 1),
          ("wtWebioEA2x2ERP_24VStopWday-Thursday", 4),
          ("wtWebioEA2x2ERP_24VStopWday-Tuesday", 3),
          ("wtWebioEA2x2ERP_24VStopWday-Wednesday", 5))
    )


_WtWebioEA2x2ERP_24VStTzStopWday_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VStTzStopWday_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStopWday = _WtWebioEA2x2ERP_24VStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 14),
    _WtWebioEA2x2ERP_24VStTzStopWday_Type()
)
wtWebioEA2x2ERP_24VStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStopWday.setStatus("mandatory")
_WtWebioEA2x2ERP_24VStTzStopHrs_Type = Integer32
_WtWebioEA2x2ERP_24VStTzStopHrs_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStopHrs = _WtWebioEA2x2ERP_24VStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 15),
    _WtWebioEA2x2ERP_24VStTzStopHrs_Type()
)
wtWebioEA2x2ERP_24VStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStopHrs.setStatus("mandatory")
_WtWebioEA2x2ERP_24VStTzStopMin_Type = Integer32
_WtWebioEA2x2ERP_24VStTzStopMin_Object = MibScalar
wtWebioEA2x2ERP_24VStTzStopMin = _WtWebioEA2x2ERP_24VStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 1, 16),
    _WtWebioEA2x2ERP_24VStTzStopMin_Type()
)
wtWebioEA2x2ERP_24VStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStTzStopMin.setStatus("mandatory")
_WtWebioEA2x2ERP_24VTimeServer_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VTimeServer = _WtWebioEA2x2ERP_24VTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 2)
)
_WtWebioEA2x2ERP_24VTimeServer1_Type = OctetString
_WtWebioEA2x2ERP_24VTimeServer1_Object = MibScalar
wtWebioEA2x2ERP_24VTimeServer1 = _WtWebioEA2x2ERP_24VTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 2, 1),
    _WtWebioEA2x2ERP_24VTimeServer1_Type()
)
wtWebioEA2x2ERP_24VTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTimeServer1.setStatus("mandatory")
_WtWebioEA2x2ERP_24VTimeServer2_Type = OctetString
_WtWebioEA2x2ERP_24VTimeServer2_Object = MibScalar
wtWebioEA2x2ERP_24VTimeServer2 = _WtWebioEA2x2ERP_24VTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 2, 2),
    _WtWebioEA2x2ERP_24VTimeServer2_Type()
)
wtWebioEA2x2ERP_24VTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTimeServer2.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VTsEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VTsEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VTsEnable_Object = MibScalar
wtWebioEA2x2ERP_24VTsEnable = _WtWebioEA2x2ERP_24VTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 2, 3),
    _WtWebioEA2x2ERP_24VTsEnable_Type()
)
wtWebioEA2x2ERP_24VTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTsEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VTsSyncTime_Type = Integer32
_WtWebioEA2x2ERP_24VTsSyncTime_Object = MibScalar
wtWebioEA2x2ERP_24VTsSyncTime = _WtWebioEA2x2ERP_24VTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 2, 4),
    _WtWebioEA2x2ERP_24VTsSyncTime_Type()
)
wtWebioEA2x2ERP_24VTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VTsSyncTime.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDeviceClock_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VDeviceClock = _WtWebioEA2x2ERP_24VDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 3)
)


class _WtWebioEA2x2ERP_24VClockHrs_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtWebioEA2x2ERP_24VClockHrs_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VClockHrs_Object = MibScalar
wtWebioEA2x2ERP_24VClockHrs = _WtWebioEA2x2ERP_24VClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 3, 1),
    _WtWebioEA2x2ERP_24VClockHrs_Type()
)
wtWebioEA2x2ERP_24VClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VClockHrs.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VClockMin_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtWebioEA2x2ERP_24VClockMin_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VClockMin_Object = MibScalar
wtWebioEA2x2ERP_24VClockMin = _WtWebioEA2x2ERP_24VClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 3, 2),
    _WtWebioEA2x2ERP_24VClockMin_Type()
)
wtWebioEA2x2ERP_24VClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VClockMin.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VClockDay_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtWebioEA2x2ERP_24VClockDay_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VClockDay_Object = MibScalar
wtWebioEA2x2ERP_24VClockDay = _WtWebioEA2x2ERP_24VClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 3, 3),
    _WtWebioEA2x2ERP_24VClockDay_Type()
)
wtWebioEA2x2ERP_24VClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VClockDay.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VClockMonth_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtWebioEA2x2ERP_24VClockMonth-April", 4),
          ("wtWebioEA2x2ERP_24VClockMonth-August", 8),
          ("wtWebioEA2x2ERP_24VClockMonth-December", 12),
          ("wtWebioEA2x2ERP_24VClockMonth-February", 2),
          ("wtWebioEA2x2ERP_24VClockMonth-January", 1),
          ("wtWebioEA2x2ERP_24VClockMonth-July", 7),
          ("wtWebioEA2x2ERP_24VClockMonth-June", 6),
          ("wtWebioEA2x2ERP_24VClockMonth-March", 3),
          ("wtWebioEA2x2ERP_24VClockMonth-May", 5),
          ("wtWebioEA2x2ERP_24VClockMonth-November", 11),
          ("wtWebioEA2x2ERP_24VClockMonth-October", 10),
          ("wtWebioEA2x2ERP_24VClockMonth-September", 9))
    )


_WtWebioEA2x2ERP_24VClockMonth_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VClockMonth_Object = MibScalar
wtWebioEA2x2ERP_24VClockMonth = _WtWebioEA2x2ERP_24VClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 3, 4),
    _WtWebioEA2x2ERP_24VClockMonth_Type()
)
wtWebioEA2x2ERP_24VClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VClockMonth.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VClockYear_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERP_24VClockYear_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VClockYear_Object = MibScalar
wtWebioEA2x2ERP_24VClockYear = _WtWebioEA2x2ERP_24VClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 2, 3, 5),
    _WtWebioEA2x2ERP_24VClockYear_Type()
)
wtWebioEA2x2ERP_24VClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VClockYear.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBasic_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VBasic = _WtWebioEA2x2ERP_24VBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3)
)
_WtWebioEA2x2ERP_24VNetwork_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VNetwork = _WtWebioEA2x2ERP_24VNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1)
)
_WtWebioEA2x2ERP_24VIpAddress_Type = IpAddress
_WtWebioEA2x2ERP_24VIpAddress_Object = MibScalar
wtWebioEA2x2ERP_24VIpAddress = _WtWebioEA2x2ERP_24VIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1, 1),
    _WtWebioEA2x2ERP_24VIpAddress_Type()
)
wtWebioEA2x2ERP_24VIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VIpAddress.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSubnetMask_Type = IpAddress
_WtWebioEA2x2ERP_24VSubnetMask_Object = MibScalar
wtWebioEA2x2ERP_24VSubnetMask = _WtWebioEA2x2ERP_24VSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1, 2),
    _WtWebioEA2x2ERP_24VSubnetMask_Type()
)
wtWebioEA2x2ERP_24VSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSubnetMask.setStatus("mandatory")
_WtWebioEA2x2ERP_24VGateway_Type = IpAddress
_WtWebioEA2x2ERP_24VGateway_Object = MibScalar
wtWebioEA2x2ERP_24VGateway = _WtWebioEA2x2ERP_24VGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1, 3),
    _WtWebioEA2x2ERP_24VGateway_Type()
)
wtWebioEA2x2ERP_24VGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VGateway.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDnsServer1_Type = OctetString
_WtWebioEA2x2ERP_24VDnsServer1_Object = MibScalar
wtWebioEA2x2ERP_24VDnsServer1 = _WtWebioEA2x2ERP_24VDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1, 4),
    _WtWebioEA2x2ERP_24VDnsServer1_Type()
)
wtWebioEA2x2ERP_24VDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDnsServer1.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDnsServer2_Type = OctetString
_WtWebioEA2x2ERP_24VDnsServer2_Object = MibScalar
wtWebioEA2x2ERP_24VDnsServer2 = _WtWebioEA2x2ERP_24VDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1, 5),
    _WtWebioEA2x2ERP_24VDnsServer2_Type()
)
wtWebioEA2x2ERP_24VDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDnsServer2.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAddConfig_Type = OctetString
_WtWebioEA2x2ERP_24VAddConfig_Object = MibScalar
wtWebioEA2x2ERP_24VAddConfig = _WtWebioEA2x2ERP_24VAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 1, 6),
    _WtWebioEA2x2ERP_24VAddConfig_Type()
)
wtWebioEA2x2ERP_24VAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAddConfig.setStatus("mandatory")
_WtWebioEA2x2ERP_24VHTTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VHTTP = _WtWebioEA2x2ERP_24VHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 2)
)
_WtWebioEA2x2ERP_24VStartup_Type = OctetString
_WtWebioEA2x2ERP_24VStartup_Object = MibScalar
wtWebioEA2x2ERP_24VStartup = _WtWebioEA2x2ERP_24VStartup_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 2, 1),
    _WtWebioEA2x2ERP_24VStartup_Type()
)
wtWebioEA2x2ERP_24VStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VStartup.setStatus("mandatory")
_WtWebioEA2x2ERP_24VGetHeaderEnable_Type = OctetString
_WtWebioEA2x2ERP_24VGetHeaderEnable_Object = MibScalar
wtWebioEA2x2ERP_24VGetHeaderEnable = _WtWebioEA2x2ERP_24VGetHeaderEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 2, 2),
    _WtWebioEA2x2ERP_24VGetHeaderEnable_Type()
)
wtWebioEA2x2ERP_24VGetHeaderEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VGetHeaderEnable.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VHttpInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VHttpInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VHttpInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VHttpInputTrigger_Object = MibScalar
wtWebioEA2x2ERP_24VHttpInputTrigger = _WtWebioEA2x2ERP_24VHttpInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 2, 3),
    _WtWebioEA2x2ERP_24VHttpInputTrigger_Type()
)
wtWebioEA2x2ERP_24VHttpInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VHttpInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtWebioEA2x2ERP_24VHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VHttpPort_Object = MibScalar
wtWebioEA2x2ERP_24VHttpPort = _WtWebioEA2x2ERP_24VHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 2, 4),
    _WtWebioEA2x2ERP_24VHttpPort_Type()
)
wtWebioEA2x2ERP_24VHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VHttpPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMail_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VMail = _WtWebioEA2x2ERP_24VMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3)
)
_WtWebioEA2x2ERP_24VMailAdName_Type = OctetString
_WtWebioEA2x2ERP_24VMailAdName_Object = MibScalar
wtWebioEA2x2ERP_24VMailAdName = _WtWebioEA2x2ERP_24VMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 1),
    _WtWebioEA2x2ERP_24VMailAdName_Type()
)
wtWebioEA2x2ERP_24VMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailAdName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMailReply_Type = OctetString
_WtWebioEA2x2ERP_24VMailReply_Object = MibScalar
wtWebioEA2x2ERP_24VMailReply = _WtWebioEA2x2ERP_24VMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 2),
    _WtWebioEA2x2ERP_24VMailReply_Type()
)
wtWebioEA2x2ERP_24VMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailReply.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMailServer_Type = OctetString
_WtWebioEA2x2ERP_24VMailServer_Object = MibScalar
wtWebioEA2x2ERP_24VMailServer = _WtWebioEA2x2ERP_24VMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 3),
    _WtWebioEA2x2ERP_24VMailServer_Type()
)
wtWebioEA2x2ERP_24VMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailServer.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMailEnable_Type = OctetString
_WtWebioEA2x2ERP_24VMailEnable_Object = MibScalar
wtWebioEA2x2ERP_24VMailEnable = _WtWebioEA2x2ERP_24VMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 4),
    _WtWebioEA2x2ERP_24VMailEnable_Type()
)
wtWebioEA2x2ERP_24VMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailEnable.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VMailAuthentication_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VMailAuthentication_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VMailAuthentication_Object = MibScalar
wtWebioEA2x2ERP_24VMailAuthentication = _WtWebioEA2x2ERP_24VMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 5),
    _WtWebioEA2x2ERP_24VMailAuthentication_Type()
)
wtWebioEA2x2ERP_24VMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailAuthentication.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMailAuthUser_Type = OctetString
_WtWebioEA2x2ERP_24VMailAuthUser_Object = MibScalar
wtWebioEA2x2ERP_24VMailAuthUser = _WtWebioEA2x2ERP_24VMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 6),
    _WtWebioEA2x2ERP_24VMailAuthUser_Type()
)
wtWebioEA2x2ERP_24VMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailAuthUser.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMailAuthPassword_Type = OctetString
_WtWebioEA2x2ERP_24VMailAuthPassword_Object = MibScalar
wtWebioEA2x2ERP_24VMailAuthPassword = _WtWebioEA2x2ERP_24VMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 7),
    _WtWebioEA2x2ERP_24VMailAuthPassword_Type()
)
wtWebioEA2x2ERP_24VMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailAuthPassword.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMailPop3Server_Type = OctetString
_WtWebioEA2x2ERP_24VMailPop3Server_Object = MibScalar
wtWebioEA2x2ERP_24VMailPop3Server = _WtWebioEA2x2ERP_24VMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 3, 8),
    _WtWebioEA2x2ERP_24VMailPop3Server_Type()
)
wtWebioEA2x2ERP_24VMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMailPop3Server.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSNMP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VSNMP = _WtWebioEA2x2ERP_24VSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 4)
)
_WtWebioEA2x2ERP_24VSnmpEnable_Type = OctetString
_WtWebioEA2x2ERP_24VSnmpEnable_Object = MibScalar
wtWebioEA2x2ERP_24VSnmpEnable = _WtWebioEA2x2ERP_24VSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 4, 1),
    _WtWebioEA2x2ERP_24VSnmpEnable_Type()
)
wtWebioEA2x2ERP_24VSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSnmpEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSnmpCommunityStringRead_Type = OctetString
_WtWebioEA2x2ERP_24VSnmpCommunityStringRead_Object = MibScalar
wtWebioEA2x2ERP_24VSnmpCommunityStringRead = _WtWebioEA2x2ERP_24VSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 4, 2),
    _WtWebioEA2x2ERP_24VSnmpCommunityStringRead_Type()
)
wtWebioEA2x2ERP_24VSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSnmpCommunityStringRead.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite_Type = OctetString
_WtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite_Object = MibScalar
wtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite = _WtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 4, 3),
    _WtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite_Type()
)
wtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP_Type = OctetString
_WtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP_Object = MibScalar
wtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP = _WtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 4, 4),
    _WtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP_Type()
)
wtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VSnmpSystemTrapEnable_Object = MibScalar
wtWebioEA2x2ERP_24VSnmpSystemTrapEnable = _WtWebioEA2x2ERP_24VSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 4, 5),
    _WtWebioEA2x2ERP_24VSnmpSystemTrapEnable_Type()
)
wtWebioEA2x2ERP_24VSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSnmpSystemTrapEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VUDP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VUDP = _WtWebioEA2x2ERP_24VUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 5)
)
_WtWebioEA2x2ERP_24VUdpAdminPort_Type = Integer32
_WtWebioEA2x2ERP_24VUdpAdminPort_Object = MibScalar
wtWebioEA2x2ERP_24VUdpAdminPort = _WtWebioEA2x2ERP_24VUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 5, 1),
    _WtWebioEA2x2ERP_24VUdpAdminPort_Type()
)
wtWebioEA2x2ERP_24VUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VUdpAdminPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VUdpEnable_Type = OctetString
_WtWebioEA2x2ERP_24VUdpEnable_Object = MibScalar
wtWebioEA2x2ERP_24VUdpEnable = _WtWebioEA2x2ERP_24VUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 5, 2),
    _WtWebioEA2x2ERP_24VUdpEnable_Type()
)
wtWebioEA2x2ERP_24VUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VUdpEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VUdpRemotePort_Type = Integer32
_WtWebioEA2x2ERP_24VUdpRemotePort_Object = MibScalar
wtWebioEA2x2ERP_24VUdpRemotePort = _WtWebioEA2x2ERP_24VUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 5, 3),
    _WtWebioEA2x2ERP_24VUdpRemotePort_Type()
)
wtWebioEA2x2ERP_24VUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VUdpRemotePort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinary_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VBinary = _WtWebioEA2x2ERP_24VBinary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6)
)


class _WtWebioEA2x2ERP_24VBinaryModeCount_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryModeCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERP_24VBinaryModeCount_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryModeCount_Object = MibScalar
wtWebioEA2x2ERP_24VBinaryModeCount = _WtWebioEA2x2ERP_24VBinaryModeCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 1),
    _WtWebioEA2x2ERP_24VBinaryModeCount_Type()
)
wtWebioEA2x2ERP_24VBinaryModeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryModeCount.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryIfTable_Object = MibTable
wtWebioEA2x2ERP_24VBinaryIfTable = _WtWebioEA2x2ERP_24VBinaryIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryIfTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryIfEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VBinaryIfEntry = _WtWebioEA2x2ERP_24VBinaryIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 2, 1)
)
wtWebioEA2x2ERP_24VBinaryIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryIfEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryModeNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryModeNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtWebioEA2x2ERP_24VBinaryModeNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryModeNo_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryModeNo = _WtWebioEA2x2ERP_24VBinaryModeNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 2, 1, 1),
    _WtWebioEA2x2ERP_24VBinaryModeNo_Type()
)
wtWebioEA2x2ERP_24VBinaryModeNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryModeNo.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryTable_Object = MibTable
wtWebioEA2x2ERP_24VBinaryTable = _WtWebioEA2x2ERP_24VBinaryTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VBinaryEntry = _WtWebioEA2x2ERP_24VBinaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1)
)
wtWebioEA2x2ERP_24VBinaryEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VBinaryModeNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryOperationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryOperationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryOperationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryOperationMode_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryOperationMode = _WtWebioEA2x2ERP_24VBinaryOperationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 1),
    _WtWebioEA2x2ERP_24VBinaryOperationMode_Type()
)
wtWebioEA2x2ERP_24VBinaryOperationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryOperationMode.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpServerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpServerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryTcpServerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryTcpServerLocalPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpServerLocalPort = _WtWebioEA2x2ERP_24VBinaryTcpServerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 2),
    _WtWebioEA2x2ERP_24VBinaryTcpServerLocalPort_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpServerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpServerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger = _WtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 3),
    _WtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode = _WtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 4),
    _WtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpClientLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpClientLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryTcpClientLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryTcpClientLocalPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientLocalPort = _WtWebioEA2x2ERP_24VBinaryTcpClientLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 5),
    _WtWebioEA2x2ERP_24VBinaryTcpClientLocalPort_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientLocalPort.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpClientServerPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpClientServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryTcpClientServerPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryTcpClientServerPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientServerPort = _WtWebioEA2x2ERP_24VBinaryTcpClientServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 6),
    _WtWebioEA2x2ERP_24VBinaryTcpClientServerPort_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientServerPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr_Type = OctetString
_WtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr = _WtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 7),
    _WtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryTcpClientServerPassword_Type = OctetString
_WtWebioEA2x2ERP_24VBinaryTcpClientServerPassword_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientServerPassword = _WtWebioEA2x2ERP_24VBinaryTcpClientServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 8),
    _WtWebioEA2x2ERP_24VBinaryTcpClientServerPassword_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientServerPassword.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryTcpClientInactivity_Type = Integer32
_WtWebioEA2x2ERP_24VBinaryTcpClientInactivity_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientInactivity = _WtWebioEA2x2ERP_24VBinaryTcpClientInactivity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 9),
    _WtWebioEA2x2ERP_24VBinaryTcpClientInactivity_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientInactivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientInactivity.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger = _WtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 10),
    _WtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpClientInterval_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpClientInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryTcpClientInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryTcpClientInterval_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientInterval = _WtWebioEA2x2ERP_24VBinaryTcpClientInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 11),
    _WtWebioEA2x2ERP_24VBinaryTcpClientInterval_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientInterval.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode = _WtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 12),
    _WtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort = _WtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 13),
    _WtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort_Type()
)
wtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort = _WtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 14),
    _WtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort_Type()
)
wtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr_Type = OctetString
_WtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr = _WtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 15),
    _WtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr_Type()
)
wtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger = _WtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 16),
    _WtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger_Type()
)
wtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryUdpPeerInterval_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryUdpPeerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryUdpPeerInterval_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryUdpPeerInterval_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryUdpPeerInterval = _WtWebioEA2x2ERP_24VBinaryUdpPeerInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 17),
    _WtWebioEA2x2ERP_24VBinaryUdpPeerInterval_Type()
)
wtWebioEA2x2ERP_24VBinaryUdpPeerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryUdpPeerInterval.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode = _WtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 18),
    _WtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode_Type()
)
wtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryConnectedPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryConnectedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryConnectedPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryConnectedPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryConnectedPort = _WtWebioEA2x2ERP_24VBinaryConnectedPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 19),
    _WtWebioEA2x2ERP_24VBinaryConnectedPort_Type()
)
wtWebioEA2x2ERP_24VBinaryConnectedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryConnectedPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VBinaryConnectedIpAddr_Type = IpAddress
_WtWebioEA2x2ERP_24VBinaryConnectedIpAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryConnectedIpAddr = _WtWebioEA2x2ERP_24VBinaryConnectedIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 20),
    _WtWebioEA2x2ERP_24VBinaryConnectedIpAddr_Type()
)
wtWebioEA2x2ERP_24VBinaryConnectedIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryConnectedIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort = _WtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 21),
    _WtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort = _WtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 6, 3, 1, 22),
    _WtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort_Type()
)
wtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSyslog_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VSyslog = _WtWebioEA2x2ERP_24VSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 7)
)
_WtWebioEA2x2ERP_24VSyslogServerIP_Type = OctetString
_WtWebioEA2x2ERP_24VSyslogServerIP_Object = MibScalar
wtWebioEA2x2ERP_24VSyslogServerIP = _WtWebioEA2x2ERP_24VSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 7, 1),
    _WtWebioEA2x2ERP_24VSyslogServerIP_Type()
)
wtWebioEA2x2ERP_24VSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSyslogServerIP.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSyslogServerPort_Type = Integer32
_WtWebioEA2x2ERP_24VSyslogServerPort_Object = MibScalar
wtWebioEA2x2ERP_24VSyslogServerPort = _WtWebioEA2x2ERP_24VSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 7, 2),
    _WtWebioEA2x2ERP_24VSyslogServerPort_Type()
)
wtWebioEA2x2ERP_24VSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSyslogServerPort.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VSyslogSystemMessagesEnable_Object = MibScalar
wtWebioEA2x2ERP_24VSyslogSystemMessagesEnable = _WtWebioEA2x2ERP_24VSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 7, 3),
    _WtWebioEA2x2ERP_24VSyslogSystemMessagesEnable_Type()
)
wtWebioEA2x2ERP_24VSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSyslogSystemMessagesEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VSyslogEnable_Type = OctetString
_WtWebioEA2x2ERP_24VSyslogEnable_Object = MibScalar
wtWebioEA2x2ERP_24VSyslogEnable = _WtWebioEA2x2ERP_24VSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 7, 4),
    _WtWebioEA2x2ERP_24VSyslogEnable_Type()
)
wtWebioEA2x2ERP_24VSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSyslogEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTP_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VFTP = _WtWebioEA2x2ERP_24VFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8)
)
_WtWebioEA2x2ERP_24VFTPServerIP_Type = OctetString
_WtWebioEA2x2ERP_24VFTPServerIP_Object = MibScalar
wtWebioEA2x2ERP_24VFTPServerIP = _WtWebioEA2x2ERP_24VFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 1),
    _WtWebioEA2x2ERP_24VFTPServerIP_Type()
)
wtWebioEA2x2ERP_24VFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPServerIP.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTPServerControlPort_Type = Integer32
_WtWebioEA2x2ERP_24VFTPServerControlPort_Object = MibScalar
wtWebioEA2x2ERP_24VFTPServerControlPort = _WtWebioEA2x2ERP_24VFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 2),
    _WtWebioEA2x2ERP_24VFTPServerControlPort_Type()
)
wtWebioEA2x2ERP_24VFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPServerControlPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTPUserName_Type = OctetString
_WtWebioEA2x2ERP_24VFTPUserName_Object = MibScalar
wtWebioEA2x2ERP_24VFTPUserName = _WtWebioEA2x2ERP_24VFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 3),
    _WtWebioEA2x2ERP_24VFTPUserName_Type()
)
wtWebioEA2x2ERP_24VFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPUserName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTPPassword_Type = OctetString
_WtWebioEA2x2ERP_24VFTPPassword_Object = MibScalar
wtWebioEA2x2ERP_24VFTPPassword = _WtWebioEA2x2ERP_24VFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 4),
    _WtWebioEA2x2ERP_24VFTPPassword_Type()
)
wtWebioEA2x2ERP_24VFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPPassword.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTPAccount_Type = OctetString
_WtWebioEA2x2ERP_24VFTPAccount_Object = MibScalar
wtWebioEA2x2ERP_24VFTPAccount = _WtWebioEA2x2ERP_24VFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 5),
    _WtWebioEA2x2ERP_24VFTPAccount_Type()
)
wtWebioEA2x2ERP_24VFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPAccount.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTPOption_Type = OctetString
_WtWebioEA2x2ERP_24VFTPOption_Object = MibScalar
wtWebioEA2x2ERP_24VFTPOption = _WtWebioEA2x2ERP_24VFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 6),
    _WtWebioEA2x2ERP_24VFTPOption_Type()
)
wtWebioEA2x2ERP_24VFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPOption.setStatus("mandatory")
_WtWebioEA2x2ERP_24VFTPEnable_Type = OctetString
_WtWebioEA2x2ERP_24VFTPEnable_Object = MibScalar
wtWebioEA2x2ERP_24VFTPEnable = _WtWebioEA2x2ERP_24VFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 8, 7),
    _WtWebioEA2x2ERP_24VFTPEnable_Type()
)
wtWebioEA2x2ERP_24VFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VFTPEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VWayBack_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VWayBack = _WtWebioEA2x2ERP_24VWayBack_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 10)
)
_WtWebioEA2x2ERP_24VWayBackEnable_Type = OctetString
_WtWebioEA2x2ERP_24VWayBackEnable_Object = MibScalar
wtWebioEA2x2ERP_24VWayBackEnable = _WtWebioEA2x2ERP_24VWayBackEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 10, 1),
    _WtWebioEA2x2ERP_24VWayBackEnable_Type()
)
wtWebioEA2x2ERP_24VWayBackEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VWayBackEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VWayBackServerControlPort_Type = Integer32
_WtWebioEA2x2ERP_24VWayBackServerControlPort_Object = MibScalar
wtWebioEA2x2ERP_24VWayBackServerControlPort = _WtWebioEA2x2ERP_24VWayBackServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 10, 2),
    _WtWebioEA2x2ERP_24VWayBackServerControlPort_Type()
)
wtWebioEA2x2ERP_24VWayBackServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VWayBackServerControlPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VWayBackFTPPassword_Type = OctetString
_WtWebioEA2x2ERP_24VWayBackFTPPassword_Object = MibScalar
wtWebioEA2x2ERP_24VWayBackFTPPassword = _WtWebioEA2x2ERP_24VWayBackFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 10, 3),
    _WtWebioEA2x2ERP_24VWayBackFTPPassword_Type()
)
wtWebioEA2x2ERP_24VWayBackFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VWayBackFTPPassword.setStatus("mandatory")
_WtWebioEA2x2ERP_24VWayBackFTPResponse_Type = OctetString
_WtWebioEA2x2ERP_24VWayBackFTPResponse_Object = MibScalar
wtWebioEA2x2ERP_24VWayBackFTPResponse = _WtWebioEA2x2ERP_24VWayBackFTPResponse_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 10, 4),
    _WtWebioEA2x2ERP_24VWayBackFTPResponse_Type()
)
wtWebioEA2x2ERP_24VWayBackFTPResponse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VWayBackFTPResponse.setStatus("mandatory")
_WtWebioEA2x2ERP_24VWayBackFTPTimeOut_Type = OctetString
_WtWebioEA2x2ERP_24VWayBackFTPTimeOut_Object = MibScalar
wtWebioEA2x2ERP_24VWayBackFTPTimeOut = _WtWebioEA2x2ERP_24VWayBackFTPTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 3, 10, 5),
    _WtWebioEA2x2ERP_24VWayBackFTPTimeOut_Type()
)
wtWebioEA2x2ERP_24VWayBackFTPTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VWayBackFTPTimeOut.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputMode_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VOutputMode = _WtWebioEA2x2ERP_24VOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4)
)
_WtWebioEA2x2ERP_24VOutputModeTable_Object = MibTable
wtWebioEA2x2ERP_24VOutputModeTable = _WtWebioEA2x2ERP_24VOutputModeTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputModeTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputModeEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VOutputModeEntry = _WtWebioEA2x2ERP_24VOutputModeEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4, 1, 1)
)
wtWebioEA2x2ERP_24VOutputModeEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputModeEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VOutputModeBit_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VOutputModeBit based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VOutputModeBit_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VOutputModeBit_Object = MibTableColumn
wtWebioEA2x2ERP_24VOutputModeBit = _WtWebioEA2x2ERP_24VOutputModeBit_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4, 1, 1, 1),
    _WtWebioEA2x2ERP_24VOutputModeBit_Type()
)
wtWebioEA2x2ERP_24VOutputModeBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputModeBit.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VSafetyTimeout_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VSafetyTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtWebioEA2x2ERP_24VSafetyTimeout_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VSafetyTimeout_Object = MibScalar
wtWebioEA2x2ERP_24VSafetyTimeout = _WtWebioEA2x2ERP_24VSafetyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4, 2),
    _WtWebioEA2x2ERP_24VSafetyTimeout_Type()
)
wtWebioEA2x2ERP_24VSafetyTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VSafetyTimeout.setStatus("mandatory")
_WtWebioEA2x2ERP_24VLoadControlEnable_Type = OctetString
_WtWebioEA2x2ERP_24VLoadControlEnable_Object = MibScalar
wtWebioEA2x2ERP_24VLoadControlEnable = _WtWebioEA2x2ERP_24VLoadControlEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4, 3),
    _WtWebioEA2x2ERP_24VLoadControlEnable_Type()
)
wtWebioEA2x2ERP_24VLoadControlEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VLoadControlEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPowerSupplyEnable_Type = OctetString
_WtWebioEA2x2ERP_24VPowerSupplyEnable_Object = MibScalar
wtWebioEA2x2ERP_24VPowerSupplyEnable = _WtWebioEA2x2ERP_24VPowerSupplyEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 4, 4),
    _WtWebioEA2x2ERP_24VPowerSupplyEnable_Type()
)
wtWebioEA2x2ERP_24VPowerSupplyEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPowerSupplyEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarm_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VAlarm = _WtWebioEA2x2ERP_24VAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5)
)


class _WtWebioEA2x2ERP_24VAlarmCount_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2ERP_24VAlarmCount_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VAlarmCount_Object = MibScalar
wtWebioEA2x2ERP_24VAlarmCount = _WtWebioEA2x2ERP_24VAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 1),
    _WtWebioEA2x2ERP_24VAlarmCount_Type()
)
wtWebioEA2x2ERP_24VAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmCount.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmIfTable_Object = MibTable
wtWebioEA2x2ERP_24VAlarmIfTable = _WtWebioEA2x2ERP_24VAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmIfTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmIfEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VAlarmIfEntry = _WtWebioEA2x2ERP_24VAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 2, 1)
)
wtWebioEA2x2ERP_24VAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmIfEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmNo_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtWebioEA2x2ERP_24VAlarmNo_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VAlarmNo_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmNo = _WtWebioEA2x2ERP_24VAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 2, 1, 1),
    _WtWebioEA2x2ERP_24VAlarmNo_Type()
)
wtWebioEA2x2ERP_24VAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmNo.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmTable_Object = MibTable
wtWebioEA2x2ERP_24VAlarmTable = _WtWebioEA2x2ERP_24VAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VAlarmEntry = _WtWebioEA2x2ERP_24VAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1)
)
wtWebioEA2x2ERP_24VAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmEntry.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmInputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VAlarmInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2ERP_24VAlarmInputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VAlarmInputTrigger_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmInputTrigger = _WtWebioEA2x2ERP_24VAlarmInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 1),
    _WtWebioEA2x2ERP_24VAlarmInputTrigger_Type()
)
wtWebioEA2x2ERP_24VAlarmInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmInputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmOutputTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VAlarmOutputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtWebioEA2x2ERP_24VAlarmOutputTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VAlarmOutputTrigger_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmOutputTrigger = _WtWebioEA2x2ERP_24VAlarmOutputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 2),
    _WtWebioEA2x2ERP_24VAlarmOutputTrigger_Type()
)
wtWebioEA2x2ERP_24VAlarmOutputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmOutputTrigger.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmSystemTrigger_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VAlarmSystemTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VAlarmSystemTrigger_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VAlarmSystemTrigger_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSystemTrigger = _WtWebioEA2x2ERP_24VAlarmSystemTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 3),
    _WtWebioEA2x2ERP_24VAlarmSystemTrigger_Type()
)
wtWebioEA2x2ERP_24VAlarmSystemTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSystemTrigger.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmMaxCounterValue_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmMaxCounterValue_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmMaxCounterValue = _WtWebioEA2x2ERP_24VAlarmMaxCounterValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 4),
    _WtWebioEA2x2ERP_24VAlarmMaxCounterValue_Type()
)
wtWebioEA2x2ERP_24VAlarmMaxCounterValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmMaxCounterValue.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmInterval_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmInterval_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmInterval = _WtWebioEA2x2ERP_24VAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 5),
    _WtWebioEA2x2ERP_24VAlarmInterval_Type()
)
wtWebioEA2x2ERP_24VAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmInterval.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmEnable_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VAlarmEnable_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VAlarmEnable_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmEnable = _WtWebioEA2x2ERP_24VAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 6),
    _WtWebioEA2x2ERP_24VAlarmEnable_Type()
)
wtWebioEA2x2ERP_24VAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmEnable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmMailAddr_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmMailAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmMailAddr = _WtWebioEA2x2ERP_24VAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 7),
    _WtWebioEA2x2ERP_24VAlarmMailAddr_Type()
)
wtWebioEA2x2ERP_24VAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmMailAddr.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmMailSubject_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmMailSubject_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmMailSubject = _WtWebioEA2x2ERP_24VAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 8),
    _WtWebioEA2x2ERP_24VAlarmMailSubject_Type()
)
wtWebioEA2x2ERP_24VAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmMailSubject.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmMailText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmMailText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmMailText = _WtWebioEA2x2ERP_24VAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 9),
    _WtWebioEA2x2ERP_24VAlarmMailText_Type()
)
wtWebioEA2x2ERP_24VAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmMailText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmSnmpManagerIP_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmSnmpManagerIP_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSnmpManagerIP = _WtWebioEA2x2ERP_24VAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 10),
    _WtWebioEA2x2ERP_24VAlarmSnmpManagerIP_Type()
)
wtWebioEA2x2ERP_24VAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSnmpManagerIP.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmSnmpTrapText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmSnmpTrapText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSnmpTrapText = _WtWebioEA2x2ERP_24VAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 11),
    _WtWebioEA2x2ERP_24VAlarmSnmpTrapText_Type()
)
wtWebioEA2x2ERP_24VAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSnmpTrapText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmUdpIpAddr_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmUdpIpAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmUdpIpAddr = _WtWebioEA2x2ERP_24VAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 12),
    _WtWebioEA2x2ERP_24VAlarmUdpIpAddr_Type()
)
wtWebioEA2x2ERP_24VAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmUdpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmUdpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VAlarmUdpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VAlarmUdpPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmUdpPort = _WtWebioEA2x2ERP_24VAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 13),
    _WtWebioEA2x2ERP_24VAlarmUdpPort_Type()
)
wtWebioEA2x2ERP_24VAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmUdpPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmUdpText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmUdpText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmUdpText = _WtWebioEA2x2ERP_24VAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 14),
    _WtWebioEA2x2ERP_24VAlarmUdpText_Type()
)
wtWebioEA2x2ERP_24VAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmUdpText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmTcpIpAddr_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmTcpIpAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmTcpIpAddr = _WtWebioEA2x2ERP_24VAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 15),
    _WtWebioEA2x2ERP_24VAlarmTcpIpAddr_Type()
)
wtWebioEA2x2ERP_24VAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmTcpIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmTcpPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VAlarmTcpPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VAlarmTcpPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmTcpPort = _WtWebioEA2x2ERP_24VAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 16),
    _WtWebioEA2x2ERP_24VAlarmTcpPort_Type()
)
wtWebioEA2x2ERP_24VAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmTcpPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmTcpText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmTcpText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmTcpText = _WtWebioEA2x2ERP_24VAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 17),
    _WtWebioEA2x2ERP_24VAlarmTcpText_Type()
)
wtWebioEA2x2ERP_24VAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmTcpText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmSyslogIpAddr_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmSyslogIpAddr_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSyslogIpAddr = _WtWebioEA2x2ERP_24VAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 18),
    _WtWebioEA2x2ERP_24VAlarmSyslogIpAddr_Type()
)
wtWebioEA2x2ERP_24VAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSyslogIpAddr.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmSyslogPort_Type(Integer32):
    """Custom type wtWebioEA2x2ERP_24VAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtWebioEA2x2ERP_24VAlarmSyslogPort_Type.__name__ = "Integer32"
_WtWebioEA2x2ERP_24VAlarmSyslogPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSyslogPort = _WtWebioEA2x2ERP_24VAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 19),
    _WtWebioEA2x2ERP_24VAlarmSyslogPort_Type()
)
wtWebioEA2x2ERP_24VAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSyslogPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmSyslogText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmSyslogText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSyslogText = _WtWebioEA2x2ERP_24VAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 20),
    _WtWebioEA2x2ERP_24VAlarmSyslogText_Type()
)
wtWebioEA2x2ERP_24VAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSyslogText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmFtpDataPort_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmFtpDataPort_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmFtpDataPort = _WtWebioEA2x2ERP_24VAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 21),
    _WtWebioEA2x2ERP_24VAlarmFtpDataPort_Type()
)
wtWebioEA2x2ERP_24VAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmFtpDataPort.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmFtpFileName_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmFtpFileName_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmFtpFileName = _WtWebioEA2x2ERP_24VAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 22),
    _WtWebioEA2x2ERP_24VAlarmFtpFileName_Type()
)
wtWebioEA2x2ERP_24VAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmFtpFileName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmFtpText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmFtpText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmFtpText = _WtWebioEA2x2ERP_24VAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 23),
    _WtWebioEA2x2ERP_24VAlarmFtpText_Type()
)
wtWebioEA2x2ERP_24VAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmFtpText.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VAlarmFtpOption_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VAlarmFtpOption_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VAlarmFtpOption_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmFtpOption = _WtWebioEA2x2ERP_24VAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 24),
    _WtWebioEA2x2ERP_24VAlarmFtpOption_Type()
)
wtWebioEA2x2ERP_24VAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmFtpOption.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmTimerCron_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmTimerCron_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmTimerCron = _WtWebioEA2x2ERP_24VAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 25),
    _WtWebioEA2x2ERP_24VAlarmTimerCron_Type()
)
wtWebioEA2x2ERP_24VAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmTimerCron.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmMailReleaseSubject_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmMailReleaseSubject_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmMailReleaseSubject = _WtWebioEA2x2ERP_24VAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 26),
    _WtWebioEA2x2ERP_24VAlarmMailReleaseSubject_Type()
)
wtWebioEA2x2ERP_24VAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmMailReleaseSubject.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmMailReleaseText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmMailReleaseText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmMailReleaseText = _WtWebioEA2x2ERP_24VAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 27),
    _WtWebioEA2x2ERP_24VAlarmMailReleaseText_Type()
)
wtWebioEA2x2ERP_24VAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmMailReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText = _WtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 28),
    _WtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText_Type()
)
wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmUdpReleaseText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmUdpReleaseText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmUdpReleaseText = _WtWebioEA2x2ERP_24VAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 29),
    _WtWebioEA2x2ERP_24VAlarmUdpReleaseText_Type()
)
wtWebioEA2x2ERP_24VAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmUdpReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmTcpReleaseText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmTcpReleaseText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmTcpReleaseText = _WtWebioEA2x2ERP_24VAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 30),
    _WtWebioEA2x2ERP_24VAlarmTcpReleaseText_Type()
)
wtWebioEA2x2ERP_24VAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmTcpReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmSyslogReleaseText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmSyslogReleaseText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmSyslogReleaseText = _WtWebioEA2x2ERP_24VAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 31),
    _WtWebioEA2x2ERP_24VAlarmSyslogReleaseText_Type()
)
wtWebioEA2x2ERP_24VAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmSyslogReleaseText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VAlarmFtpReleaseText_Type = OctetString
_WtWebioEA2x2ERP_24VAlarmFtpReleaseText_Object = MibTableColumn
wtWebioEA2x2ERP_24VAlarmFtpReleaseText = _WtWebioEA2x2ERP_24VAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 3, 1, 32),
    _WtWebioEA2x2ERP_24VAlarmFtpReleaseText_Type()
)
wtWebioEA2x2ERP_24VAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlarmFtpReleaseText.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VLoadControlView_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VLoadControlView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VLoadControlView_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VLoadControlView_Object = MibScalar
wtWebioEA2x2ERP_24VLoadControlView = _WtWebioEA2x2ERP_24VLoadControlView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 4),
    _WtWebioEA2x2ERP_24VLoadControlView_Type()
)
wtWebioEA2x2ERP_24VLoadControlView.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VLoadControlView.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VLCShutDownView_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VLCShutDownView based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VLCShutDownView_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VLCShutDownView_Object = MibScalar
wtWebioEA2x2ERP_24VLCShutDownView = _WtWebioEA2x2ERP_24VLCShutDownView_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 1, 5, 5),
    _WtWebioEA2x2ERP_24VLCShutDownView_Type()
)
wtWebioEA2x2ERP_24VLCShutDownView.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VLCShutDownView.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPorts_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VPorts = _WtWebioEA2x2ERP_24VPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2)
)
_WtWebioEA2x2ERP_24VInputPortTable_Object = MibTable
wtWebioEA2x2ERP_24VInputPortTable = _WtWebioEA2x2ERP_24VInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputPortTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VInputPortEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VInputPortEntry = _WtWebioEA2x2ERP_24VInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1)
)
wtWebioEA2x2ERP_24VInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VInputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VInputPortEntry.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortInputName_Type = OctetString
_WtWebioEA2x2ERP_24VPortInputName_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortInputName = _WtWebioEA2x2ERP_24VPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1, 1),
    _WtWebioEA2x2ERP_24VPortInputName_Type()
)
wtWebioEA2x2ERP_24VPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortInputName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortInputText_Type = OctetString
_WtWebioEA2x2ERP_24VPortInputText_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortInputText = _WtWebioEA2x2ERP_24VPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1, 2),
    _WtWebioEA2x2ERP_24VPortInputText_Type()
)
wtWebioEA2x2ERP_24VPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortInputText.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortInputMode_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortInputMode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortInputMode_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortInputMode_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortInputMode = _WtWebioEA2x2ERP_24VPortInputMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1, 3),
    _WtWebioEA2x2ERP_24VPortInputMode_Type()
)
wtWebioEA2x2ERP_24VPortInputMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortInputMode.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortInputFilter_Type = Integer32
_WtWebioEA2x2ERP_24VPortInputFilter_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortInputFilter = _WtWebioEA2x2ERP_24VPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1, 4),
    _WtWebioEA2x2ERP_24VPortInputFilter_Type()
)
wtWebioEA2x2ERP_24VPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortInputFilter.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortInputBicountPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortInputBicountPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortInputBicountPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortInputBicountPulsePolarity_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortInputBicountPulsePolarity = _WtWebioEA2x2ERP_24VPortInputBicountPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1, 5),
    _WtWebioEA2x2ERP_24VPortInputBicountPulsePolarity_Type()
)
wtWebioEA2x2ERP_24VPortInputBicountPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortInputBicountPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortInputBicountInactivTimeout_Type = Integer32
_WtWebioEA2x2ERP_24VPortInputBicountInactivTimeout_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortInputBicountInactivTimeout = _WtWebioEA2x2ERP_24VPortInputBicountInactivTimeout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 1, 1, 6),
    _WtWebioEA2x2ERP_24VPortInputBicountInactivTimeout_Type()
)
wtWebioEA2x2ERP_24VPortInputBicountInactivTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortInputBicountInactivTimeout.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputPortTable_Object = MibTable
wtWebioEA2x2ERP_24VOutputPortTable = _WtWebioEA2x2ERP_24VOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputPortTable.setStatus("mandatory")
_WtWebioEA2x2ERP_24VOutputPortEntry_Object = MibTableRow
wtWebioEA2x2ERP_24VOutputPortEntry = _WtWebioEA2x2ERP_24VOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1)
)
wtWebioEA2x2ERP_24VOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VOutputPortEntry.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortOutputName_Type = OctetString
_WtWebioEA2x2ERP_24VPortOutputName_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortOutputName = _WtWebioEA2x2ERP_24VPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 1),
    _WtWebioEA2x2ERP_24VPortOutputName_Type()
)
wtWebioEA2x2ERP_24VPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortOutputName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortOutputText_Type = OctetString
_WtWebioEA2x2ERP_24VPortOutputText_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortOutputText = _WtWebioEA2x2ERP_24VPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 2),
    _WtWebioEA2x2ERP_24VPortOutputText_Type()
)
wtWebioEA2x2ERP_24VPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortOutputText.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortOutputGroupMode_Type = OctetString
_WtWebioEA2x2ERP_24VPortOutputGroupMode_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortOutputGroupMode = _WtWebioEA2x2ERP_24VPortOutputGroupMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 3),
    _WtWebioEA2x2ERP_24VPortOutputGroupMode_Type()
)
wtWebioEA2x2ERP_24VPortOutputGroupMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortOutputGroupMode.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortOutputSafetyState_Type = OctetString
_WtWebioEA2x2ERP_24VPortOutputSafetyState_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortOutputSafetyState = _WtWebioEA2x2ERP_24VPortOutputSafetyState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 4),
    _WtWebioEA2x2ERP_24VPortOutputSafetyState_Type()
)
wtWebioEA2x2ERP_24VPortOutputSafetyState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortOutputSafetyState.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortLogicInputMask_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortLogicInputMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortLogicInputMask_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortLogicInputMask_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortLogicInputMask = _WtWebioEA2x2ERP_24VPortLogicInputMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 5),
    _WtWebioEA2x2ERP_24VPortLogicInputMask_Type()
)
wtWebioEA2x2ERP_24VPortLogicInputMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortLogicInputMask.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortLogicInputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortLogicInputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortLogicInputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortLogicInputInverter_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortLogicInputInverter = _WtWebioEA2x2ERP_24VPortLogicInputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 6),
    _WtWebioEA2x2ERP_24VPortLogicInputInverter_Type()
)
wtWebioEA2x2ERP_24VPortLogicInputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortLogicInputInverter.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortLogicFunction_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortLogicFunction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortLogicFunction_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortLogicFunction_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortLogicFunction = _WtWebioEA2x2ERP_24VPortLogicFunction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 7),
    _WtWebioEA2x2ERP_24VPortLogicFunction_Type()
)
wtWebioEA2x2ERP_24VPortLogicFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortLogicFunction.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortLogicOutputInverter_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortLogicOutputInverter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortLogicOutputInverter_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortLogicOutputInverter_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortLogicOutputInverter = _WtWebioEA2x2ERP_24VPortLogicOutputInverter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 8),
    _WtWebioEA2x2ERP_24VPortLogicOutputInverter_Type()
)
wtWebioEA2x2ERP_24VPortLogicOutputInverter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortLogicOutputInverter.setStatus("mandatory")
_WtWebioEA2x2ERP_24VPortPulseDuration_Type = Integer32
_WtWebioEA2x2ERP_24VPortPulseDuration_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortPulseDuration = _WtWebioEA2x2ERP_24VPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 9),
    _WtWebioEA2x2ERP_24VPortPulseDuration_Type()
)
wtWebioEA2x2ERP_24VPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortPulseDuration.setStatus("mandatory")


class _WtWebioEA2x2ERP_24VPortPulsePolarity_Type(OctetString):
    """Custom type wtWebioEA2x2ERP_24VPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtWebioEA2x2ERP_24VPortPulsePolarity_Type.__name__ = "OctetString"
_WtWebioEA2x2ERP_24VPortPulsePolarity_Object = MibTableColumn
wtWebioEA2x2ERP_24VPortPulsePolarity = _WtWebioEA2x2ERP_24VPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 2, 2, 1, 10),
    _WtWebioEA2x2ERP_24VPortPulsePolarity_Type()
)
wtWebioEA2x2ERP_24VPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VPortPulsePolarity.setStatus("mandatory")
_WtWebioEA2x2ERP_24VManufact_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VManufact = _WtWebioEA2x2ERP_24VManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 3)
)
_WtWebioEA2x2ERP_24VMfName_Type = OctetString
_WtWebioEA2x2ERP_24VMfName_Object = MibScalar
wtWebioEA2x2ERP_24VMfName = _WtWebioEA2x2ERP_24VMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 3, 1),
    _WtWebioEA2x2ERP_24VMfName_Type()
)
wtWebioEA2x2ERP_24VMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMfName.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMfAddr_Type = OctetString
_WtWebioEA2x2ERP_24VMfAddr_Object = MibScalar
wtWebioEA2x2ERP_24VMfAddr = _WtWebioEA2x2ERP_24VMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 3, 2),
    _WtWebioEA2x2ERP_24VMfAddr_Type()
)
wtWebioEA2x2ERP_24VMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMfAddr.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMfHotline_Type = OctetString
_WtWebioEA2x2ERP_24VMfHotline_Object = MibScalar
wtWebioEA2x2ERP_24VMfHotline = _WtWebioEA2x2ERP_24VMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 3, 3),
    _WtWebioEA2x2ERP_24VMfHotline_Type()
)
wtWebioEA2x2ERP_24VMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMfHotline.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMfInternet_Type = OctetString
_WtWebioEA2x2ERP_24VMfInternet_Object = MibScalar
wtWebioEA2x2ERP_24VMfInternet = _WtWebioEA2x2ERP_24VMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 3, 4),
    _WtWebioEA2x2ERP_24VMfInternet_Type()
)
wtWebioEA2x2ERP_24VMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMfInternet.setStatus("mandatory")
_WtWebioEA2x2ERP_24VMfDeviceTyp_Type = OctetString
_WtWebioEA2x2ERP_24VMfDeviceTyp_Object = MibScalar
wtWebioEA2x2ERP_24VMfDeviceTyp = _WtWebioEA2x2ERP_24VMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 3, 3, 5),
    _WtWebioEA2x2ERP_24VMfDeviceTyp_Type()
)
wtWebioEA2x2ERP_24VMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VMfDeviceTyp.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDiag_ObjectIdentity = ObjectIdentity
wtWebioEA2x2ERP_24VDiag = _WtWebioEA2x2ERP_24VDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 4)
)
_WtWebioEA2x2ERP_24VDiagErrorCount_Type = Integer32
_WtWebioEA2x2ERP_24VDiagErrorCount_Object = MibScalar
wtWebioEA2x2ERP_24VDiagErrorCount = _WtWebioEA2x2ERP_24VDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 4, 1),
    _WtWebioEA2x2ERP_24VDiagErrorCount_Type()
)
wtWebioEA2x2ERP_24VDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDiagErrorCount.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDiagBinaryError_Type = OctetString
_WtWebioEA2x2ERP_24VDiagBinaryError_Object = MibScalar
wtWebioEA2x2ERP_24VDiagBinaryError = _WtWebioEA2x2ERP_24VDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 4, 2),
    _WtWebioEA2x2ERP_24VDiagBinaryError_Type()
)
wtWebioEA2x2ERP_24VDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDiagBinaryError.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDiagErrorIndex_Type = Integer32
_WtWebioEA2x2ERP_24VDiagErrorIndex_Object = MibScalar
wtWebioEA2x2ERP_24VDiagErrorIndex = _WtWebioEA2x2ERP_24VDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 4, 3),
    _WtWebioEA2x2ERP_24VDiagErrorIndex_Type()
)
wtWebioEA2x2ERP_24VDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDiagErrorIndex.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDiagErrorMessage_Type = OctetString
_WtWebioEA2x2ERP_24VDiagErrorMessage_Object = MibScalar
wtWebioEA2x2ERP_24VDiagErrorMessage = _WtWebioEA2x2ERP_24VDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 4, 4),
    _WtWebioEA2x2ERP_24VDiagErrorMessage_Type()
)
wtWebioEA2x2ERP_24VDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDiagErrorMessage.setStatus("mandatory")
_WtWebioEA2x2ERP_24VDiagErrorClear_Type = Integer32
_WtWebioEA2x2ERP_24VDiagErrorClear_Object = MibScalar
wtWebioEA2x2ERP_24VDiagErrorClear = _WtWebioEA2x2ERP_24VDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 4, 5),
    _WtWebioEA2x2ERP_24VDiagErrorClear_Type()
)
wtWebioEA2x2ERP_24VDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VDiagErrorClear.setStatus("mandatory")
_WtIpWatcher_24V_ObjectIdentity = ObjectIdentity
wtIpWatcher_24V = _WtIpWatcher_24V_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32)
)
_WtIpWatcher_24VInOut_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VInOut = _WtIpWatcher_24VInOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1)
)


class _WtIpWatcher_24VInputs_Type(Integer32):
    """Custom type wtIpWatcher_24VInputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtIpWatcher_24VInputs_Type.__name__ = "Integer32"
_WtIpWatcher_24VInputs_Object = MibScalar
wtIpWatcher_24VInputs = _WtIpWatcher_24VInputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 1),
    _WtIpWatcher_24VInputs_Type()
)
wtIpWatcher_24VInputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputs.setStatus("mandatory")


class _WtIpWatcher_24VOutputs_Type(Integer32):
    """Custom type wtIpWatcher_24VOutputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtIpWatcher_24VOutputs_Type.__name__ = "Integer32"
_WtIpWatcher_24VOutputs_Object = MibScalar
wtIpWatcher_24VOutputs = _WtIpWatcher_24VOutputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 2),
    _WtIpWatcher_24VOutputs_Type()
)
wtIpWatcher_24VOutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputs.setStatus("mandatory")
_WtIpWatcher_24VInputTable_Object = MibTable
wtIpWatcher_24VInputTable = _WtIpWatcher_24VInputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 3)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputTable.setStatus("mandatory")
_WtIpWatcher_24VInputEntry_Object = MibTableRow
wtIpWatcher_24VInputEntry = _WtIpWatcher_24VInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 3, 1)
)
wtIpWatcher_24VInputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VInputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputEntry.setStatus("mandatory")


class _WtIpWatcher_24VInputNo_Type(Integer32):
    """Custom type wtIpWatcher_24VInputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtIpWatcher_24VInputNo_Type.__name__ = "Integer32"
_WtIpWatcher_24VInputNo_Object = MibTableColumn
wtIpWatcher_24VInputNo = _WtIpWatcher_24VInputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 3, 1, 1),
    _WtIpWatcher_24VInputNo_Type()
)
wtIpWatcher_24VInputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputNo.setStatus("mandatory")


class _WtIpWatcher_24VInputCounter_Type(Integer32):
    """Custom type wtIpWatcher_24VInputCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtIpWatcher_24VInputCounter_Type.__name__ = "Integer32"
_WtIpWatcher_24VInputCounter_Object = MibTableColumn
wtIpWatcher_24VInputCounter = _WtIpWatcher_24VInputCounter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 3, 1, 2),
    _WtIpWatcher_24VInputCounter_Type()
)
wtIpWatcher_24VInputCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputCounter.setStatus("mandatory")
_WtIpWatcher_24VInputCounterClear_Type = Integer32
_WtIpWatcher_24VInputCounterClear_Object = MibTableColumn
wtIpWatcher_24VInputCounterClear = _WtIpWatcher_24VInputCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 3, 1, 3),
    _WtIpWatcher_24VInputCounterClear_Type()
)
wtIpWatcher_24VInputCounterClear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputCounterClear.setStatus("mandatory")


class _WtIpWatcher_24VInputState_Type(Integer32):
    """Custom type wtIpWatcher_24VInputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VInputState-OFF", 0),
          ("wtIpWatcher_24VInputState-ON", 1))
    )


_WtIpWatcher_24VInputState_Type.__name__ = "Integer32"
_WtIpWatcher_24VInputState_Object = MibTableColumn
wtIpWatcher_24VInputState = _WtIpWatcher_24VInputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 3, 1, 4),
    _WtIpWatcher_24VInputState_Type()
)
wtIpWatcher_24VInputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputState.setStatus("mandatory")
_WtIpWatcher_24VInputValue_Type = Integer32
_WtIpWatcher_24VInputValue_Object = MibScalar
wtIpWatcher_24VInputValue = _WtIpWatcher_24VInputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 4),
    _WtIpWatcher_24VInputValue_Type()
)
wtIpWatcher_24VInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputValue.setStatus("mandatory")
_WtIpWatcher_24VOutputTable_Object = MibTable
wtIpWatcher_24VOutputTable = _WtIpWatcher_24VOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 5)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputTable.setStatus("mandatory")
_WtIpWatcher_24VOutputEntry_Object = MibTableRow
wtIpWatcher_24VOutputEntry = _WtIpWatcher_24VOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 5, 1)
)
wtIpWatcher_24VOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputEntry.setStatus("mandatory")


class _WtIpWatcher_24VOutputNo_Type(Integer32):
    """Custom type wtIpWatcher_24VOutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtIpWatcher_24VOutputNo_Type.__name__ = "Integer32"
_WtIpWatcher_24VOutputNo_Object = MibTableColumn
wtIpWatcher_24VOutputNo = _WtIpWatcher_24VOutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 5, 1, 1),
    _WtIpWatcher_24VOutputNo_Type()
)
wtIpWatcher_24VOutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputNo.setStatus("mandatory")


class _WtIpWatcher_24VOutputState_Type(Integer32):
    """Custom type wtIpWatcher_24VOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VOutputState-OFF", 0),
          ("wtIpWatcher_24VOutputState-ON", 1))
    )


_WtIpWatcher_24VOutputState_Type.__name__ = "Integer32"
_WtIpWatcher_24VOutputState_Object = MibTableColumn
wtIpWatcher_24VOutputState = _WtIpWatcher_24VOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 5, 1, 2),
    _WtIpWatcher_24VOutputState_Type()
)
wtIpWatcher_24VOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputState.setStatus("mandatory")
_WtIpWatcher_24VOutputValue_Type = Integer32
_WtIpWatcher_24VOutputValue_Object = MibScalar
wtIpWatcher_24VOutputValue = _WtIpWatcher_24VOutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 6),
    _WtIpWatcher_24VOutputValue_Type()
)
wtIpWatcher_24VOutputValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputValue.setStatus("mandatory")


class _WtIpWatcher_24VSetOutput_Type(OctetString):
    """Custom type wtIpWatcher_24VSetOutput based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_WtIpWatcher_24VSetOutput_Type.__name__ = "OctetString"
_WtIpWatcher_24VSetOutput_Object = MibScalar
wtIpWatcher_24VSetOutput = _WtIpWatcher_24VSetOutput_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 7),
    _WtIpWatcher_24VSetOutput_Type()
)
wtIpWatcher_24VSetOutput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSetOutput.setStatus("mandatory")
_WtIpWatcher_24VAlarmOutputTable_Object = MibTable
wtIpWatcher_24VAlarmOutputTable = _WtIpWatcher_24VAlarmOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 8)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmOutputTable.setStatus("mandatory")
_WtIpWatcher_24VAlarmOutputEntry_Object = MibTableRow
wtIpWatcher_24VAlarmOutputEntry = _WtIpWatcher_24VAlarmOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 8, 1)
)
wtIpWatcher_24VAlarmOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmOutputEntry.setStatus("mandatory")


class _WtIpWatcher_24VAlarmOutputState_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VAlarmOutputState-OFF", 0),
          ("wtIpWatcher_24VAlarmOutputState-ON", 1))
    )


_WtIpWatcher_24VAlarmOutputState_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmOutputState_Object = MibTableColumn
wtIpWatcher_24VAlarmOutputState = _WtIpWatcher_24VAlarmOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 8, 1, 1),
    _WtIpWatcher_24VAlarmOutputState_Type()
)
wtIpWatcher_24VAlarmOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmOutputState.setStatus("mandatory")


class _WtIpWatcher_24VAlarmTriggerState_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmTriggerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VAlarmTriggerState-OFF", 0),
          ("wtIpWatcher_24VAlarmTriggerState-ON", 1))
    )


_WtIpWatcher_24VAlarmTriggerState_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmTriggerState_Object = MibTableColumn
wtIpWatcher_24VAlarmTriggerState = _WtIpWatcher_24VAlarmTriggerState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 1, 8, 1, 2),
    _WtIpWatcher_24VAlarmTriggerState_Type()
)
wtIpWatcher_24VAlarmTriggerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTriggerState.setStatus("mandatory")
_WtIpWatcher_24VSessCntrl_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VSessCntrl = _WtIpWatcher_24VSessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 2)
)
_WtIpWatcher_24VSessCntrlPassword_Type = OctetString
_WtIpWatcher_24VSessCntrlPassword_Object = MibScalar
wtIpWatcher_24VSessCntrlPassword = _WtIpWatcher_24VSessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 2, 1),
    _WtIpWatcher_24VSessCntrlPassword_Type()
)
wtIpWatcher_24VSessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSessCntrlPassword.setStatus("mandatory")


class _WtIpWatcher_24VSessCntrlConfigMode_Type(Integer32):
    """Custom type wtIpWatcher_24VSessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VSessCntrl-NoSession", 0),
          ("wtIpWatcher_24VSessCntrl-Session", 1))
    )


_WtIpWatcher_24VSessCntrlConfigMode_Type.__name__ = "Integer32"
_WtIpWatcher_24VSessCntrlConfigMode_Object = MibScalar
wtIpWatcher_24VSessCntrlConfigMode = _WtIpWatcher_24VSessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 2, 2),
    _WtIpWatcher_24VSessCntrlConfigMode_Type()
)
wtIpWatcher_24VSessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSessCntrlConfigMode.setStatus("mandatory")
_WtIpWatcher_24VSessCntrlLogout_Type = Integer32
_WtIpWatcher_24VSessCntrlLogout_Object = MibScalar
wtIpWatcher_24VSessCntrlLogout = _WtIpWatcher_24VSessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 2, 3),
    _WtIpWatcher_24VSessCntrlLogout_Type()
)
wtIpWatcher_24VSessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSessCntrlLogout.setStatus("mandatory")
_WtIpWatcher_24VSessCntrlAdminPassword_Type = OctetString
_WtIpWatcher_24VSessCntrlAdminPassword_Object = MibScalar
wtIpWatcher_24VSessCntrlAdminPassword = _WtIpWatcher_24VSessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 2, 4),
    _WtIpWatcher_24VSessCntrlAdminPassword_Type()
)
wtIpWatcher_24VSessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSessCntrlAdminPassword.setStatus("mandatory")
_WtIpWatcher_24VSessCntrlConfigPassword_Type = OctetString
_WtIpWatcher_24VSessCntrlConfigPassword_Object = MibScalar
wtIpWatcher_24VSessCntrlConfigPassword = _WtIpWatcher_24VSessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 2, 5),
    _WtIpWatcher_24VSessCntrlConfigPassword_Type()
)
wtIpWatcher_24VSessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSessCntrlConfigPassword.setStatus("mandatory")
_WtIpWatcher_24VConfig_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VConfig = _WtIpWatcher_24VConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3)
)
_WtIpWatcher_24VDevice_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VDevice = _WtIpWatcher_24VDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1)
)
_WtIpWatcher_24VText_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VText = _WtIpWatcher_24VText_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 1)
)
_WtIpWatcher_24VDeviceName_Type = OctetString
_WtIpWatcher_24VDeviceName_Object = MibScalar
wtIpWatcher_24VDeviceName = _WtIpWatcher_24VDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 1, 1),
    _WtIpWatcher_24VDeviceName_Type()
)
wtIpWatcher_24VDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDeviceName.setStatus("mandatory")
_WtIpWatcher_24VDeviceText_Type = OctetString
_WtIpWatcher_24VDeviceText_Object = MibScalar
wtIpWatcher_24VDeviceText = _WtIpWatcher_24VDeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 1, 2),
    _WtIpWatcher_24VDeviceText_Type()
)
wtIpWatcher_24VDeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDeviceText.setStatus("mandatory")
_WtIpWatcher_24VDeviceLocation_Type = OctetString
_WtIpWatcher_24VDeviceLocation_Object = MibScalar
wtIpWatcher_24VDeviceLocation = _WtIpWatcher_24VDeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 1, 3),
    _WtIpWatcher_24VDeviceLocation_Type()
)
wtIpWatcher_24VDeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDeviceLocation.setStatus("mandatory")
_WtIpWatcher_24VDeviceContact_Type = OctetString
_WtIpWatcher_24VDeviceContact_Object = MibScalar
wtIpWatcher_24VDeviceContact = _WtIpWatcher_24VDeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 1, 4),
    _WtIpWatcher_24VDeviceContact_Type()
)
wtIpWatcher_24VDeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDeviceContact.setStatus("mandatory")
_WtIpWatcher_24VTimeDate_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VTimeDate = _WtIpWatcher_24VTimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2)
)
_WtIpWatcher_24VTimeZone_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VTimeZone = _WtIpWatcher_24VTimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1)
)
_WtIpWatcher_24VTzOffsetHrs_Type = Integer32
_WtIpWatcher_24VTzOffsetHrs_Object = MibScalar
wtIpWatcher_24VTzOffsetHrs = _WtIpWatcher_24VTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 1),
    _WtIpWatcher_24VTzOffsetHrs_Type()
)
wtIpWatcher_24VTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTzOffsetHrs.setStatus("mandatory")
_WtIpWatcher_24VTzOffsetMin_Type = Integer32
_WtIpWatcher_24VTzOffsetMin_Object = MibScalar
wtIpWatcher_24VTzOffsetMin = _WtIpWatcher_24VTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 2),
    _WtIpWatcher_24VTzOffsetMin_Type()
)
wtIpWatcher_24VTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTzOffsetMin.setStatus("mandatory")


class _WtIpWatcher_24VTzEnable_Type(OctetString):
    """Custom type wtIpWatcher_24VTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VTzEnable_Type.__name__ = "OctetString"
_WtIpWatcher_24VTzEnable_Object = MibScalar
wtIpWatcher_24VTzEnable = _WtIpWatcher_24VTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 3),
    _WtIpWatcher_24VTzEnable_Type()
)
wtIpWatcher_24VTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTzEnable.setStatus("mandatory")
_WtIpWatcher_24VStTzOffsetHrs_Type = Integer32
_WtIpWatcher_24VStTzOffsetHrs_Object = MibScalar
wtIpWatcher_24VStTzOffsetHrs = _WtIpWatcher_24VStTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 4),
    _WtIpWatcher_24VStTzOffsetHrs_Type()
)
wtIpWatcher_24VStTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzOffsetHrs.setStatus("mandatory")
_WtIpWatcher_24VStTzOffsetMin_Type = Integer32
_WtIpWatcher_24VStTzOffsetMin_Object = MibScalar
wtIpWatcher_24VStTzOffsetMin = _WtIpWatcher_24VStTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 5),
    _WtIpWatcher_24VStTzOffsetMin_Type()
)
wtIpWatcher_24VStTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzOffsetMin.setStatus("mandatory")


class _WtIpWatcher_24VStTzEnable_Type(OctetString):
    """Custom type wtIpWatcher_24VStTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VStTzEnable_Type.__name__ = "OctetString"
_WtIpWatcher_24VStTzEnable_Object = MibScalar
wtIpWatcher_24VStTzEnable = _WtIpWatcher_24VStTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 6),
    _WtIpWatcher_24VStTzEnable_Type()
)
wtIpWatcher_24VStTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzEnable.setStatus("mandatory")


class _WtIpWatcher_24VStTzStartMonth_Type(Integer32):
    """Custom type wtIpWatcher_24VStTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VStartMonth-April", 4),
          ("wtIpWatcher_24VStartMonth-August", 8),
          ("wtIpWatcher_24VStartMonth-December", 12),
          ("wtIpWatcher_24VStartMonth-February", 2),
          ("wtIpWatcher_24VStartMonth-January", 1),
          ("wtIpWatcher_24VStartMonth-July", 7),
          ("wtIpWatcher_24VStartMonth-June", 6),
          ("wtIpWatcher_24VStartMonth-March", 3),
          ("wtIpWatcher_24VStartMonth-May", 5),
          ("wtIpWatcher_24VStartMonth-November", 11),
          ("wtIpWatcher_24VStartMonth-October", 10),
          ("wtIpWatcher_24VStartMonth-September", 9))
    )


_WtIpWatcher_24VStTzStartMonth_Type.__name__ = "Integer32"
_WtIpWatcher_24VStTzStartMonth_Object = MibScalar
wtIpWatcher_24VStTzStartMonth = _WtIpWatcher_24VStTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 7),
    _WtIpWatcher_24VStTzStartMonth_Type()
)
wtIpWatcher_24VStTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStartMonth.setStatus("mandatory")


class _WtIpWatcher_24VStTzStartMode_Type(Integer32):
    """Custom type wtIpWatcher_24VStTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VStartMode-first", 1),
          ("wtIpWatcher_24VStartMode-fourth", 4),
          ("wtIpWatcher_24VStartMode-last", 5),
          ("wtIpWatcher_24VStartMode-second", 2),
          ("wtIpWatcher_24VStartMode-third", 3))
    )


_WtIpWatcher_24VStTzStartMode_Type.__name__ = "Integer32"
_WtIpWatcher_24VStTzStartMode_Object = MibScalar
wtIpWatcher_24VStTzStartMode = _WtIpWatcher_24VStTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 8),
    _WtIpWatcher_24VStTzStartMode_Type()
)
wtIpWatcher_24VStTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStartMode.setStatus("mandatory")


class _WtIpWatcher_24VStTzStartWday_Type(Integer32):
    """Custom type wtIpWatcher_24VStTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VStartWday-Friday", 6),
          ("wtIpWatcher_24VStartWday-Monday", 2),
          ("wtIpWatcher_24VStartWday-Saturday", 7),
          ("wtIpWatcher_24VStartWday-Sunday", 1),
          ("wtIpWatcher_24VStartWday-Thursday", 4),
          ("wtIpWatcher_24VStartWday-Tuesday", 3),
          ("wtIpWatcher_24VStartWday-Wednesday", 5))
    )


_WtIpWatcher_24VStTzStartWday_Type.__name__ = "Integer32"
_WtIpWatcher_24VStTzStartWday_Object = MibScalar
wtIpWatcher_24VStTzStartWday = _WtIpWatcher_24VStTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 9),
    _WtIpWatcher_24VStTzStartWday_Type()
)
wtIpWatcher_24VStTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStartWday.setStatus("mandatory")
_WtIpWatcher_24VStTzStartHrs_Type = Integer32
_WtIpWatcher_24VStTzStartHrs_Object = MibScalar
wtIpWatcher_24VStTzStartHrs = _WtIpWatcher_24VStTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 10),
    _WtIpWatcher_24VStTzStartHrs_Type()
)
wtIpWatcher_24VStTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStartHrs.setStatus("mandatory")
_WtIpWatcher_24VStTzStartMin_Type = Integer32
_WtIpWatcher_24VStTzStartMin_Object = MibScalar
wtIpWatcher_24VStTzStartMin = _WtIpWatcher_24VStTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 11),
    _WtIpWatcher_24VStTzStartMin_Type()
)
wtIpWatcher_24VStTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStartMin.setStatus("mandatory")


class _WtIpWatcher_24VStTzStopMonth_Type(Integer32):
    """Custom type wtIpWatcher_24VStTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VStopMonth-April", 4),
          ("wtIpWatcher_24VStopMonth-August", 8),
          ("wtIpWatcher_24VStopMonth-December", 12),
          ("wtIpWatcher_24VStopMonth-February", 2),
          ("wtIpWatcher_24VStopMonth-January", 1),
          ("wtIpWatcher_24VStopMonth-July", 7),
          ("wtIpWatcher_24VStopMonth-June", 6),
          ("wtIpWatcher_24VStopMonth-March", 3),
          ("wtIpWatcher_24VStopMonth-May", 5),
          ("wtIpWatcher_24VStopMonth-November", 11),
          ("wtIpWatcher_24VStopMonth-October", 10),
          ("wtIpWatcher_24VStopMonth-September", 9))
    )


_WtIpWatcher_24VStTzStopMonth_Type.__name__ = "Integer32"
_WtIpWatcher_24VStTzStopMonth_Object = MibScalar
wtIpWatcher_24VStTzStopMonth = _WtIpWatcher_24VStTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 12),
    _WtIpWatcher_24VStTzStopMonth_Type()
)
wtIpWatcher_24VStTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStopMonth.setStatus("mandatory")


class _WtIpWatcher_24VStTzStopMode_Type(Integer32):
    """Custom type wtIpWatcher_24VStTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VStopMode-first", 1),
          ("wtIpWatcher_24VStopMode-fourth", 4),
          ("wtIpWatcher_24VStopMode-last", 5),
          ("wtIpWatcher_24VStopMode-second", 2),
          ("wtIpWatcher_24VStopMode-third", 3))
    )


_WtIpWatcher_24VStTzStopMode_Type.__name__ = "Integer32"
_WtIpWatcher_24VStTzStopMode_Object = MibScalar
wtIpWatcher_24VStTzStopMode = _WtIpWatcher_24VStTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 13),
    _WtIpWatcher_24VStTzStopMode_Type()
)
wtIpWatcher_24VStTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStopMode.setStatus("mandatory")


class _WtIpWatcher_24VStTzStopWday_Type(Integer32):
    """Custom type wtIpWatcher_24VStTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VStopWday-Friday", 6),
          ("wtIpWatcher_24VStopWday-Monday", 2),
          ("wtIpWatcher_24VStopWday-Saturday", 7),
          ("wtIpWatcher_24VStopWday-Sunday", 1),
          ("wtIpWatcher_24VStopWday-Thursday", 4),
          ("wtIpWatcher_24VStopWday-Tuesday", 3),
          ("wtIpWatcher_24VStopWday-Wednesday", 5))
    )


_WtIpWatcher_24VStTzStopWday_Type.__name__ = "Integer32"
_WtIpWatcher_24VStTzStopWday_Object = MibScalar
wtIpWatcher_24VStTzStopWday = _WtIpWatcher_24VStTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 14),
    _WtIpWatcher_24VStTzStopWday_Type()
)
wtIpWatcher_24VStTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStopWday.setStatus("mandatory")
_WtIpWatcher_24VStTzStopHrs_Type = Integer32
_WtIpWatcher_24VStTzStopHrs_Object = MibScalar
wtIpWatcher_24VStTzStopHrs = _WtIpWatcher_24VStTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 15),
    _WtIpWatcher_24VStTzStopHrs_Type()
)
wtIpWatcher_24VStTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStopHrs.setStatus("mandatory")
_WtIpWatcher_24VStTzStopMin_Type = Integer32
_WtIpWatcher_24VStTzStopMin_Object = MibScalar
wtIpWatcher_24VStTzStopMin = _WtIpWatcher_24VStTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 1, 16),
    _WtIpWatcher_24VStTzStopMin_Type()
)
wtIpWatcher_24VStTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VStTzStopMin.setStatus("mandatory")
_WtIpWatcher_24VTimeServer_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VTimeServer = _WtIpWatcher_24VTimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 2)
)
_WtIpWatcher_24VTimeServer1_Type = OctetString
_WtIpWatcher_24VTimeServer1_Object = MibScalar
wtIpWatcher_24VTimeServer1 = _WtIpWatcher_24VTimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 2, 1),
    _WtIpWatcher_24VTimeServer1_Type()
)
wtIpWatcher_24VTimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTimeServer1.setStatus("mandatory")
_WtIpWatcher_24VTimeServer2_Type = OctetString
_WtIpWatcher_24VTimeServer2_Object = MibScalar
wtIpWatcher_24VTimeServer2 = _WtIpWatcher_24VTimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 2, 2),
    _WtIpWatcher_24VTimeServer2_Type()
)
wtIpWatcher_24VTimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTimeServer2.setStatus("mandatory")


class _WtIpWatcher_24VTsEnable_Type(OctetString):
    """Custom type wtIpWatcher_24VTsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VTsEnable_Type.__name__ = "OctetString"
_WtIpWatcher_24VTsEnable_Object = MibScalar
wtIpWatcher_24VTsEnable = _WtIpWatcher_24VTsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 2, 3),
    _WtIpWatcher_24VTsEnable_Type()
)
wtIpWatcher_24VTsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTsEnable.setStatus("mandatory")
_WtIpWatcher_24VTsSyncTime_Type = Integer32
_WtIpWatcher_24VTsSyncTime_Object = MibScalar
wtIpWatcher_24VTsSyncTime = _WtIpWatcher_24VTsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 2, 4),
    _WtIpWatcher_24VTsSyncTime_Type()
)
wtIpWatcher_24VTsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VTsSyncTime.setStatus("mandatory")
_WtIpWatcher_24VDeviceClock_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VDeviceClock = _WtIpWatcher_24VDeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 3)
)


class _WtIpWatcher_24VClockHrs_Type(Integer32):
    """Custom type wtIpWatcher_24VClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtIpWatcher_24VClockHrs_Type.__name__ = "Integer32"
_WtIpWatcher_24VClockHrs_Object = MibScalar
wtIpWatcher_24VClockHrs = _WtIpWatcher_24VClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 3, 1),
    _WtIpWatcher_24VClockHrs_Type()
)
wtIpWatcher_24VClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VClockHrs.setStatus("mandatory")


class _WtIpWatcher_24VClockMin_Type(Integer32):
    """Custom type wtIpWatcher_24VClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtIpWatcher_24VClockMin_Type.__name__ = "Integer32"
_WtIpWatcher_24VClockMin_Object = MibScalar
wtIpWatcher_24VClockMin = _WtIpWatcher_24VClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 3, 2),
    _WtIpWatcher_24VClockMin_Type()
)
wtIpWatcher_24VClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VClockMin.setStatus("mandatory")


class _WtIpWatcher_24VClockDay_Type(Integer32):
    """Custom type wtIpWatcher_24VClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtIpWatcher_24VClockDay_Type.__name__ = "Integer32"
_WtIpWatcher_24VClockDay_Object = MibScalar
wtIpWatcher_24VClockDay = _WtIpWatcher_24VClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 3, 3),
    _WtIpWatcher_24VClockDay_Type()
)
wtIpWatcher_24VClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VClockDay.setStatus("mandatory")


class _WtIpWatcher_24VClockMonth_Type(Integer32):
    """Custom type wtIpWatcher_24VClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtIpWatcher_24VClockMonth-April", 4),
          ("wtIpWatcher_24VClockMonth-August", 8),
          ("wtIpWatcher_24VClockMonth-December", 12),
          ("wtIpWatcher_24VClockMonth-February", 2),
          ("wtIpWatcher_24VClockMonth-January", 1),
          ("wtIpWatcher_24VClockMonth-July", 7),
          ("wtIpWatcher_24VClockMonth-June", 6),
          ("wtIpWatcher_24VClockMonth-March", 3),
          ("wtIpWatcher_24VClockMonth-May", 5),
          ("wtIpWatcher_24VClockMonth-November", 11),
          ("wtIpWatcher_24VClockMonth-October", 10),
          ("wtIpWatcher_24VClockMonth-September", 9))
    )


_WtIpWatcher_24VClockMonth_Type.__name__ = "Integer32"
_WtIpWatcher_24VClockMonth_Object = MibScalar
wtIpWatcher_24VClockMonth = _WtIpWatcher_24VClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 3, 4),
    _WtIpWatcher_24VClockMonth_Type()
)
wtIpWatcher_24VClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VClockMonth.setStatus("mandatory")


class _WtIpWatcher_24VClockYear_Type(Integer32):
    """Custom type wtIpWatcher_24VClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtIpWatcher_24VClockYear_Type.__name__ = "Integer32"
_WtIpWatcher_24VClockYear_Object = MibScalar
wtIpWatcher_24VClockYear = _WtIpWatcher_24VClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 2, 3, 5),
    _WtIpWatcher_24VClockYear_Type()
)
wtIpWatcher_24VClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VClockYear.setStatus("mandatory")
_WtIpWatcher_24VBasic_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VBasic = _WtIpWatcher_24VBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3)
)
_WtIpWatcher_24VNetwork_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VNetwork = _WtIpWatcher_24VNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1)
)
_WtIpWatcher_24VIpAddress_Type = IpAddress
_WtIpWatcher_24VIpAddress_Object = MibScalar
wtIpWatcher_24VIpAddress = _WtIpWatcher_24VIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1, 1),
    _WtIpWatcher_24VIpAddress_Type()
)
wtIpWatcher_24VIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpAddress.setStatus("mandatory")
_WtIpWatcher_24VSubnetMask_Type = IpAddress
_WtIpWatcher_24VSubnetMask_Object = MibScalar
wtIpWatcher_24VSubnetMask = _WtIpWatcher_24VSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1, 2),
    _WtIpWatcher_24VSubnetMask_Type()
)
wtIpWatcher_24VSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSubnetMask.setStatus("mandatory")
_WtIpWatcher_24VGateway_Type = IpAddress
_WtIpWatcher_24VGateway_Object = MibScalar
wtIpWatcher_24VGateway = _WtIpWatcher_24VGateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1, 3),
    _WtIpWatcher_24VGateway_Type()
)
wtIpWatcher_24VGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VGateway.setStatus("mandatory")
_WtIpWatcher_24VDnsServer1_Type = OctetString
_WtIpWatcher_24VDnsServer1_Object = MibScalar
wtIpWatcher_24VDnsServer1 = _WtIpWatcher_24VDnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1, 4),
    _WtIpWatcher_24VDnsServer1_Type()
)
wtIpWatcher_24VDnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDnsServer1.setStatus("mandatory")
_WtIpWatcher_24VDnsServer2_Type = OctetString
_WtIpWatcher_24VDnsServer2_Object = MibScalar
wtIpWatcher_24VDnsServer2 = _WtIpWatcher_24VDnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1, 5),
    _WtIpWatcher_24VDnsServer2_Type()
)
wtIpWatcher_24VDnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDnsServer2.setStatus("mandatory")
_WtIpWatcher_24VAddConfig_Type = OctetString
_WtIpWatcher_24VAddConfig_Object = MibScalar
wtIpWatcher_24VAddConfig = _WtIpWatcher_24VAddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 1, 6),
    _WtIpWatcher_24VAddConfig_Type()
)
wtIpWatcher_24VAddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAddConfig.setStatus("mandatory")
_WtIpWatcher_24VHTTP_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VHTTP = _WtIpWatcher_24VHTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 2)
)


class _WtIpWatcher_24VHttpPort_Type(Integer32):
    """Custom type wtIpWatcher_24VHttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtIpWatcher_24VHttpPort_Type.__name__ = "Integer32"
_WtIpWatcher_24VHttpPort_Object = MibScalar
wtIpWatcher_24VHttpPort = _WtIpWatcher_24VHttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 2, 4),
    _WtIpWatcher_24VHttpPort_Type()
)
wtIpWatcher_24VHttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VHttpPort.setStatus("mandatory")
_WtIpWatcher_24VMail_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VMail = _WtIpWatcher_24VMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3)
)
_WtIpWatcher_24VMailAdName_Type = OctetString
_WtIpWatcher_24VMailAdName_Object = MibScalar
wtIpWatcher_24VMailAdName = _WtIpWatcher_24VMailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 1),
    _WtIpWatcher_24VMailAdName_Type()
)
wtIpWatcher_24VMailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailAdName.setStatus("mandatory")
_WtIpWatcher_24VMailReply_Type = OctetString
_WtIpWatcher_24VMailReply_Object = MibScalar
wtIpWatcher_24VMailReply = _WtIpWatcher_24VMailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 2),
    _WtIpWatcher_24VMailReply_Type()
)
wtIpWatcher_24VMailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailReply.setStatus("mandatory")
_WtIpWatcher_24VMailServer_Type = OctetString
_WtIpWatcher_24VMailServer_Object = MibScalar
wtIpWatcher_24VMailServer = _WtIpWatcher_24VMailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 3),
    _WtIpWatcher_24VMailServer_Type()
)
wtIpWatcher_24VMailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailServer.setStatus("mandatory")
_WtIpWatcher_24VMailEnable_Type = OctetString
_WtIpWatcher_24VMailEnable_Object = MibScalar
wtIpWatcher_24VMailEnable = _WtIpWatcher_24VMailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 4),
    _WtIpWatcher_24VMailEnable_Type()
)
wtIpWatcher_24VMailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailEnable.setStatus("mandatory")


class _WtIpWatcher_24VMailAuthentication_Type(OctetString):
    """Custom type wtIpWatcher_24VMailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VMailAuthentication_Type.__name__ = "OctetString"
_WtIpWatcher_24VMailAuthentication_Object = MibScalar
wtIpWatcher_24VMailAuthentication = _WtIpWatcher_24VMailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 5),
    _WtIpWatcher_24VMailAuthentication_Type()
)
wtIpWatcher_24VMailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailAuthentication.setStatus("mandatory")
_WtIpWatcher_24VMailAuthUser_Type = OctetString
_WtIpWatcher_24VMailAuthUser_Object = MibScalar
wtIpWatcher_24VMailAuthUser = _WtIpWatcher_24VMailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 6),
    _WtIpWatcher_24VMailAuthUser_Type()
)
wtIpWatcher_24VMailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailAuthUser.setStatus("mandatory")
_WtIpWatcher_24VMailAuthPassword_Type = OctetString
_WtIpWatcher_24VMailAuthPassword_Object = MibScalar
wtIpWatcher_24VMailAuthPassword = _WtIpWatcher_24VMailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 7),
    _WtIpWatcher_24VMailAuthPassword_Type()
)
wtIpWatcher_24VMailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailAuthPassword.setStatus("mandatory")
_WtIpWatcher_24VMailPop3Server_Type = OctetString
_WtIpWatcher_24VMailPop3Server_Object = MibScalar
wtIpWatcher_24VMailPop3Server = _WtIpWatcher_24VMailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 3, 8),
    _WtIpWatcher_24VMailPop3Server_Type()
)
wtIpWatcher_24VMailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMailPop3Server.setStatus("mandatory")
_WtIpWatcher_24VSNMP_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VSNMP = _WtIpWatcher_24VSNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 4)
)
_WtIpWatcher_24VSnmpEnable_Type = OctetString
_WtIpWatcher_24VSnmpEnable_Object = MibScalar
wtIpWatcher_24VSnmpEnable = _WtIpWatcher_24VSnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 4, 1),
    _WtIpWatcher_24VSnmpEnable_Type()
)
wtIpWatcher_24VSnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSnmpEnable.setStatus("mandatory")
_WtIpWatcher_24VSnmpCommunityStringRead_Type = OctetString
_WtIpWatcher_24VSnmpCommunityStringRead_Object = MibScalar
wtIpWatcher_24VSnmpCommunityStringRead = _WtIpWatcher_24VSnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 4, 2),
    _WtIpWatcher_24VSnmpCommunityStringRead_Type()
)
wtIpWatcher_24VSnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSnmpCommunityStringRead.setStatus("mandatory")
_WtIpWatcher_24VSnmpCommunityStringReadWrite_Type = OctetString
_WtIpWatcher_24VSnmpCommunityStringReadWrite_Object = MibScalar
wtIpWatcher_24VSnmpCommunityStringReadWrite = _WtIpWatcher_24VSnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 4, 3),
    _WtIpWatcher_24VSnmpCommunityStringReadWrite_Type()
)
wtIpWatcher_24VSnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSnmpCommunityStringReadWrite.setStatus("mandatory")
_WtIpWatcher_24VSnmpSystemTrapManagerIP_Type = OctetString
_WtIpWatcher_24VSnmpSystemTrapManagerIP_Object = MibScalar
wtIpWatcher_24VSnmpSystemTrapManagerIP = _WtIpWatcher_24VSnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 4, 4),
    _WtIpWatcher_24VSnmpSystemTrapManagerIP_Type()
)
wtIpWatcher_24VSnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtIpWatcher_24VSnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtIpWatcher_24VSnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VSnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtIpWatcher_24VSnmpSystemTrapEnable_Object = MibScalar
wtIpWatcher_24VSnmpSystemTrapEnable = _WtIpWatcher_24VSnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 4, 5),
    _WtIpWatcher_24VSnmpSystemTrapEnable_Type()
)
wtIpWatcher_24VSnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSnmpSystemTrapEnable.setStatus("mandatory")
_WtIpWatcher_24VUDP_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VUDP = _WtIpWatcher_24VUDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 5)
)
_WtIpWatcher_24VUdpAdminPort_Type = Integer32
_WtIpWatcher_24VUdpAdminPort_Object = MibScalar
wtIpWatcher_24VUdpAdminPort = _WtIpWatcher_24VUdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 5, 1),
    _WtIpWatcher_24VUdpAdminPort_Type()
)
wtIpWatcher_24VUdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VUdpAdminPort.setStatus("mandatory")
_WtIpWatcher_24VUdpEnable_Type = OctetString
_WtIpWatcher_24VUdpEnable_Object = MibScalar
wtIpWatcher_24VUdpEnable = _WtIpWatcher_24VUdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 5, 2),
    _WtIpWatcher_24VUdpEnable_Type()
)
wtIpWatcher_24VUdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VUdpEnable.setStatus("mandatory")
_WtIpWatcher_24VUdpRemotePort_Type = Integer32
_WtIpWatcher_24VUdpRemotePort_Object = MibScalar
wtIpWatcher_24VUdpRemotePort = _WtIpWatcher_24VUdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 5, 3),
    _WtIpWatcher_24VUdpRemotePort_Type()
)
wtIpWatcher_24VUdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VUdpRemotePort.setStatus("mandatory")
_WtIpWatcher_24VSyslog_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VSyslog = _WtIpWatcher_24VSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 7)
)
_WtIpWatcher_24VSyslogServerIP_Type = OctetString
_WtIpWatcher_24VSyslogServerIP_Object = MibScalar
wtIpWatcher_24VSyslogServerIP = _WtIpWatcher_24VSyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 7, 1),
    _WtIpWatcher_24VSyslogServerIP_Type()
)
wtIpWatcher_24VSyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSyslogServerIP.setStatus("mandatory")
_WtIpWatcher_24VSyslogServerPort_Type = Integer32
_WtIpWatcher_24VSyslogServerPort_Object = MibScalar
wtIpWatcher_24VSyslogServerPort = _WtIpWatcher_24VSyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 7, 2),
    _WtIpWatcher_24VSyslogServerPort_Type()
)
wtIpWatcher_24VSyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSyslogServerPort.setStatus("mandatory")


class _WtIpWatcher_24VSyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtIpWatcher_24VSyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VSyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtIpWatcher_24VSyslogSystemMessagesEnable_Object = MibScalar
wtIpWatcher_24VSyslogSystemMessagesEnable = _WtIpWatcher_24VSyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 7, 3),
    _WtIpWatcher_24VSyslogSystemMessagesEnable_Type()
)
wtIpWatcher_24VSyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSyslogSystemMessagesEnable.setStatus("mandatory")
_WtIpWatcher_24VSyslogEnable_Type = OctetString
_WtIpWatcher_24VSyslogEnable_Object = MibScalar
wtIpWatcher_24VSyslogEnable = _WtIpWatcher_24VSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 7, 4),
    _WtIpWatcher_24VSyslogEnable_Type()
)
wtIpWatcher_24VSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VSyslogEnable.setStatus("mandatory")
_WtIpWatcher_24VFTP_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VFTP = _WtIpWatcher_24VFTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8)
)
_WtIpWatcher_24VFTPServerIP_Type = OctetString
_WtIpWatcher_24VFTPServerIP_Object = MibScalar
wtIpWatcher_24VFTPServerIP = _WtIpWatcher_24VFTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 1),
    _WtIpWatcher_24VFTPServerIP_Type()
)
wtIpWatcher_24VFTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPServerIP.setStatus("mandatory")
_WtIpWatcher_24VFTPServerControlPort_Type = Integer32
_WtIpWatcher_24VFTPServerControlPort_Object = MibScalar
wtIpWatcher_24VFTPServerControlPort = _WtIpWatcher_24VFTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 2),
    _WtIpWatcher_24VFTPServerControlPort_Type()
)
wtIpWatcher_24VFTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPServerControlPort.setStatus("mandatory")
_WtIpWatcher_24VFTPUserName_Type = OctetString
_WtIpWatcher_24VFTPUserName_Object = MibScalar
wtIpWatcher_24VFTPUserName = _WtIpWatcher_24VFTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 3),
    _WtIpWatcher_24VFTPUserName_Type()
)
wtIpWatcher_24VFTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPUserName.setStatus("mandatory")
_WtIpWatcher_24VFTPPassword_Type = OctetString
_WtIpWatcher_24VFTPPassword_Object = MibScalar
wtIpWatcher_24VFTPPassword = _WtIpWatcher_24VFTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 4),
    _WtIpWatcher_24VFTPPassword_Type()
)
wtIpWatcher_24VFTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPPassword.setStatus("mandatory")
_WtIpWatcher_24VFTPAccount_Type = OctetString
_WtIpWatcher_24VFTPAccount_Object = MibScalar
wtIpWatcher_24VFTPAccount = _WtIpWatcher_24VFTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 5),
    _WtIpWatcher_24VFTPAccount_Type()
)
wtIpWatcher_24VFTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPAccount.setStatus("mandatory")
_WtIpWatcher_24VFTPOption_Type = OctetString
_WtIpWatcher_24VFTPOption_Object = MibScalar
wtIpWatcher_24VFTPOption = _WtIpWatcher_24VFTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 6),
    _WtIpWatcher_24VFTPOption_Type()
)
wtIpWatcher_24VFTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPOption.setStatus("mandatory")
_WtIpWatcher_24VFTPEnable_Type = OctetString
_WtIpWatcher_24VFTPEnable_Object = MibScalar
wtIpWatcher_24VFTPEnable = _WtIpWatcher_24VFTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 8, 7),
    _WtIpWatcher_24VFTPEnable_Type()
)
wtIpWatcher_24VFTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VFTPEnable.setStatus("mandatory")
_WtIpWatcher_24VIpList_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VIpList = _WtIpWatcher_24VIpList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11)
)
_WtIpWatcher_24VIpListCount_Type = Integer32
_WtIpWatcher_24VIpListCount_Object = MibScalar
wtIpWatcher_24VIpListCount = _WtIpWatcher_24VIpListCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 1),
    _WtIpWatcher_24VIpListCount_Type()
)
wtIpWatcher_24VIpListCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListCount.setStatus("mandatory")
_WtIpWatcher_24VIpListIfTable_Object = MibTable
wtIpWatcher_24VIpListIfTable = _WtIpWatcher_24VIpListIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 2)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListIfTable.setStatus("mandatory")
_WtIpWatcher_24VIpListIfEntry_Object = MibTableRow
wtIpWatcher_24VIpListIfEntry = _WtIpWatcher_24VIpListIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 2, 1)
)
wtIpWatcher_24VIpListIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VIpListNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListIfEntry.setStatus("mandatory")


class _WtIpWatcher_24VIpListNo_Type(Integer32):
    """Custom type wtIpWatcher_24VIpListNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_WtIpWatcher_24VIpListNo_Type.__name__ = "Integer32"
_WtIpWatcher_24VIpListNo_Object = MibTableColumn
wtIpWatcher_24VIpListNo = _WtIpWatcher_24VIpListNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 2, 1, 1),
    _WtIpWatcher_24VIpListNo_Type()
)
wtIpWatcher_24VIpListNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListNo.setStatus("mandatory")
_WtIpWatcher_24VIpListTable_Object = MibTable
wtIpWatcher_24VIpListTable = _WtIpWatcher_24VIpListTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListTable.setStatus("mandatory")
_WtIpWatcher_24VIpListEntry_Object = MibTableRow
wtIpWatcher_24VIpListEntry = _WtIpWatcher_24VIpListEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3, 1)
)
wtIpWatcher_24VIpListEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VIpListNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListEntry.setStatus("mandatory")
_WtIpWatcher_24VIpListName_Type = OctetString
_WtIpWatcher_24VIpListName_Object = MibTableColumn
wtIpWatcher_24VIpListName = _WtIpWatcher_24VIpListName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3, 1, 1),
    _WtIpWatcher_24VIpListName_Type()
)
wtIpWatcher_24VIpListName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListName.setStatus("mandatory")
_WtIpWatcher_24VIpListPort_Type = Integer32
_WtIpWatcher_24VIpListPort_Object = MibTableColumn
wtIpWatcher_24VIpListPort = _WtIpWatcher_24VIpListPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3, 1, 2),
    _WtIpWatcher_24VIpListPort_Type()
)
wtIpWatcher_24VIpListPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListPort.setStatus("mandatory")
_WtIpWatcher_24VIpListService_Type = OctetString
_WtIpWatcher_24VIpListService_Object = MibTableColumn
wtIpWatcher_24VIpListService = _WtIpWatcher_24VIpListService_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3, 1, 3),
    _WtIpWatcher_24VIpListService_Type()
)
wtIpWatcher_24VIpListService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListService.setStatus("mandatory")
_WtIpWatcher_24VIpListEnable_Type = OctetString
_WtIpWatcher_24VIpListEnable_Object = MibTableColumn
wtIpWatcher_24VIpListEnable = _WtIpWatcher_24VIpListEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3, 1, 4),
    _WtIpWatcher_24VIpListEnable_Type()
)
wtIpWatcher_24VIpListEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListEnable.setStatus("mandatory")
_WtIpWatcher_24VIpListAlias_Type = OctetString
_WtIpWatcher_24VIpListAlias_Object = MibTableColumn
wtIpWatcher_24VIpListAlias = _WtIpWatcher_24VIpListAlias_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 3, 11, 3, 1, 5),
    _WtIpWatcher_24VIpListAlias_Type()
)
wtIpWatcher_24VIpListAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VIpListAlias.setStatus("mandatory")
_WtIpWatcher_24VOutputMode_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VOutputMode = _WtIpWatcher_24VOutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 4)
)
_WtIpWatcher_24VPowerSupplyEnable_Type = OctetString
_WtIpWatcher_24VPowerSupplyEnable_Object = MibScalar
wtIpWatcher_24VPowerSupplyEnable = _WtIpWatcher_24VPowerSupplyEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 4, 4),
    _WtIpWatcher_24VPowerSupplyEnable_Type()
)
wtIpWatcher_24VPowerSupplyEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPowerSupplyEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarm_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VAlarm = _WtIpWatcher_24VAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5)
)


class _WtIpWatcher_24VAlarmCount_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtIpWatcher_24VAlarmCount_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmCount_Object = MibScalar
wtIpWatcher_24VAlarmCount = _WtIpWatcher_24VAlarmCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 1),
    _WtIpWatcher_24VAlarmCount_Type()
)
wtIpWatcher_24VAlarmCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmCount.setStatus("mandatory")
_WtIpWatcher_24VAlarmIfTable_Object = MibTable
wtIpWatcher_24VAlarmIfTable = _WtIpWatcher_24VAlarmIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmIfTable.setStatus("mandatory")
_WtIpWatcher_24VAlarmIfEntry_Object = MibTableRow
wtIpWatcher_24VAlarmIfEntry = _WtIpWatcher_24VAlarmIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 2, 1)
)
wtIpWatcher_24VAlarmIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmIfEntry.setStatus("mandatory")


class _WtIpWatcher_24VAlarmNo_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtIpWatcher_24VAlarmNo_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmNo_Object = MibTableColumn
wtIpWatcher_24VAlarmNo = _WtIpWatcher_24VAlarmNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 2, 1, 1),
    _WtIpWatcher_24VAlarmNo_Type()
)
wtIpWatcher_24VAlarmNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmNo.setStatus("mandatory")
_WtIpWatcher_24VAlarmTable_Object = MibTable
wtIpWatcher_24VAlarmTable = _WtIpWatcher_24VAlarmTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTable.setStatus("mandatory")
_WtIpWatcher_24VAlarmEntry_Object = MibTableRow
wtIpWatcher_24VAlarmEntry = _WtIpWatcher_24VAlarmEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1)
)
wtIpWatcher_24VAlarmEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmEntry.setStatus("mandatory")
_WtIpWatcher_24VAlarmInterval_Type = OctetString
_WtIpWatcher_24VAlarmInterval_Object = MibTableColumn
wtIpWatcher_24VAlarmInterval = _WtIpWatcher_24VAlarmInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 5),
    _WtIpWatcher_24VAlarmInterval_Type()
)
wtIpWatcher_24VAlarmInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmInterval.setStatus("mandatory")


class _WtIpWatcher_24VAlarmEnable_Type(OctetString):
    """Custom type wtIpWatcher_24VAlarmEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VAlarmEnable_Type.__name__ = "OctetString"
_WtIpWatcher_24VAlarmEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmEnable = _WtIpWatcher_24VAlarmEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 6),
    _WtIpWatcher_24VAlarmEnable_Type()
)
wtIpWatcher_24VAlarmEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailAddr_Type = OctetString
_WtIpWatcher_24VAlarmMailAddr_Object = MibTableColumn
wtIpWatcher_24VAlarmMailAddr = _WtIpWatcher_24VAlarmMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 7),
    _WtIpWatcher_24VAlarmMailAddr_Type()
)
wtIpWatcher_24VAlarmMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailAddr.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailSubject_Type = OctetString
_WtIpWatcher_24VAlarmMailSubject_Object = MibTableColumn
wtIpWatcher_24VAlarmMailSubject = _WtIpWatcher_24VAlarmMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 8),
    _WtIpWatcher_24VAlarmMailSubject_Type()
)
wtIpWatcher_24VAlarmMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailSubject.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailText_Type = OctetString
_WtIpWatcher_24VAlarmMailText_Object = MibTableColumn
wtIpWatcher_24VAlarmMailText = _WtIpWatcher_24VAlarmMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 9),
    _WtIpWatcher_24VAlarmMailText_Type()
)
wtIpWatcher_24VAlarmMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailText.setStatus("mandatory")
_WtIpWatcher_24VAlarmSnmpManagerIP_Type = OctetString
_WtIpWatcher_24VAlarmSnmpManagerIP_Object = MibTableColumn
wtIpWatcher_24VAlarmSnmpManagerIP = _WtIpWatcher_24VAlarmSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 10),
    _WtIpWatcher_24VAlarmSnmpManagerIP_Type()
)
wtIpWatcher_24VAlarmSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSnmpManagerIP.setStatus("mandatory")
_WtIpWatcher_24VAlarmSnmpTrapText_Type = OctetString
_WtIpWatcher_24VAlarmSnmpTrapText_Object = MibTableColumn
wtIpWatcher_24VAlarmSnmpTrapText = _WtIpWatcher_24VAlarmSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 11),
    _WtIpWatcher_24VAlarmSnmpTrapText_Type()
)
wtIpWatcher_24VAlarmSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSnmpTrapText.setStatus("mandatory")
_WtIpWatcher_24VAlarmUdpIpAddr_Type = OctetString
_WtIpWatcher_24VAlarmUdpIpAddr_Object = MibTableColumn
wtIpWatcher_24VAlarmUdpIpAddr = _WtIpWatcher_24VAlarmUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 12),
    _WtIpWatcher_24VAlarmUdpIpAddr_Type()
)
wtIpWatcher_24VAlarmUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmUdpIpAddr.setStatus("mandatory")


class _WtIpWatcher_24VAlarmUdpPort_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtIpWatcher_24VAlarmUdpPort_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmUdpPort_Object = MibTableColumn
wtIpWatcher_24VAlarmUdpPort = _WtIpWatcher_24VAlarmUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 13),
    _WtIpWatcher_24VAlarmUdpPort_Type()
)
wtIpWatcher_24VAlarmUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmUdpPort.setStatus("mandatory")
_WtIpWatcher_24VAlarmUdpText_Type = OctetString
_WtIpWatcher_24VAlarmUdpText_Object = MibTableColumn
wtIpWatcher_24VAlarmUdpText = _WtIpWatcher_24VAlarmUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 14),
    _WtIpWatcher_24VAlarmUdpText_Type()
)
wtIpWatcher_24VAlarmUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmUdpText.setStatus("mandatory")
_WtIpWatcher_24VAlarmTcpIpAddr_Type = OctetString
_WtIpWatcher_24VAlarmTcpIpAddr_Object = MibTableColumn
wtIpWatcher_24VAlarmTcpIpAddr = _WtIpWatcher_24VAlarmTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 15),
    _WtIpWatcher_24VAlarmTcpIpAddr_Type()
)
wtIpWatcher_24VAlarmTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTcpIpAddr.setStatus("mandatory")


class _WtIpWatcher_24VAlarmTcpPort_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtIpWatcher_24VAlarmTcpPort_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmTcpPort_Object = MibTableColumn
wtIpWatcher_24VAlarmTcpPort = _WtIpWatcher_24VAlarmTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 16),
    _WtIpWatcher_24VAlarmTcpPort_Type()
)
wtIpWatcher_24VAlarmTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTcpPort.setStatus("mandatory")
_WtIpWatcher_24VAlarmTcpText_Type = OctetString
_WtIpWatcher_24VAlarmTcpText_Object = MibTableColumn
wtIpWatcher_24VAlarmTcpText = _WtIpWatcher_24VAlarmTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 17),
    _WtIpWatcher_24VAlarmTcpText_Type()
)
wtIpWatcher_24VAlarmTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTcpText.setStatus("mandatory")
_WtIpWatcher_24VAlarmSyslogIpAddr_Type = OctetString
_WtIpWatcher_24VAlarmSyslogIpAddr_Object = MibTableColumn
wtIpWatcher_24VAlarmSyslogIpAddr = _WtIpWatcher_24VAlarmSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 18),
    _WtIpWatcher_24VAlarmSyslogIpAddr_Type()
)
wtIpWatcher_24VAlarmSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSyslogIpAddr.setStatus("mandatory")


class _WtIpWatcher_24VAlarmSyslogPort_Type(Integer32):
    """Custom type wtIpWatcher_24VAlarmSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtIpWatcher_24VAlarmSyslogPort_Type.__name__ = "Integer32"
_WtIpWatcher_24VAlarmSyslogPort_Object = MibTableColumn
wtIpWatcher_24VAlarmSyslogPort = _WtIpWatcher_24VAlarmSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 19),
    _WtIpWatcher_24VAlarmSyslogPort_Type()
)
wtIpWatcher_24VAlarmSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSyslogPort.setStatus("mandatory")
_WtIpWatcher_24VAlarmSyslogText_Type = OctetString
_WtIpWatcher_24VAlarmSyslogText_Object = MibTableColumn
wtIpWatcher_24VAlarmSyslogText = _WtIpWatcher_24VAlarmSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 20),
    _WtIpWatcher_24VAlarmSyslogText_Type()
)
wtIpWatcher_24VAlarmSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSyslogText.setStatus("mandatory")
_WtIpWatcher_24VAlarmFtpDataPort_Type = OctetString
_WtIpWatcher_24VAlarmFtpDataPort_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpDataPort = _WtIpWatcher_24VAlarmFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 21),
    _WtIpWatcher_24VAlarmFtpDataPort_Type()
)
wtIpWatcher_24VAlarmFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpDataPort.setStatus("mandatory")
_WtIpWatcher_24VAlarmFtpFileName_Type = OctetString
_WtIpWatcher_24VAlarmFtpFileName_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpFileName = _WtIpWatcher_24VAlarmFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 22),
    _WtIpWatcher_24VAlarmFtpFileName_Type()
)
wtIpWatcher_24VAlarmFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpFileName.setStatus("mandatory")
_WtIpWatcher_24VAlarmFtpText_Type = OctetString
_WtIpWatcher_24VAlarmFtpText_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpText = _WtIpWatcher_24VAlarmFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 23),
    _WtIpWatcher_24VAlarmFtpText_Type()
)
wtIpWatcher_24VAlarmFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpText.setStatus("mandatory")


class _WtIpWatcher_24VAlarmFtpOption_Type(OctetString):
    """Custom type wtIpWatcher_24VAlarmFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VAlarmFtpOption_Type.__name__ = "OctetString"
_WtIpWatcher_24VAlarmFtpOption_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpOption = _WtIpWatcher_24VAlarmFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 24),
    _WtIpWatcher_24VAlarmFtpOption_Type()
)
wtIpWatcher_24VAlarmFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpOption.setStatus("mandatory")
_WtIpWatcher_24VAlarmTimerCron_Type = OctetString
_WtIpWatcher_24VAlarmTimerCron_Object = MibTableColumn
wtIpWatcher_24VAlarmTimerCron = _WtIpWatcher_24VAlarmTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 25),
    _WtIpWatcher_24VAlarmTimerCron_Type()
)
wtIpWatcher_24VAlarmTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTimerCron.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailReleaseSubject_Type = OctetString
_WtIpWatcher_24VAlarmMailReleaseSubject_Object = MibTableColumn
wtIpWatcher_24VAlarmMailReleaseSubject = _WtIpWatcher_24VAlarmMailReleaseSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 26),
    _WtIpWatcher_24VAlarmMailReleaseSubject_Type()
)
wtIpWatcher_24VAlarmMailReleaseSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailReleaseSubject.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailReleaseText_Type = OctetString
_WtIpWatcher_24VAlarmMailReleaseText_Object = MibTableColumn
wtIpWatcher_24VAlarmMailReleaseText = _WtIpWatcher_24VAlarmMailReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 27),
    _WtIpWatcher_24VAlarmMailReleaseText_Type()
)
wtIpWatcher_24VAlarmMailReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailReleaseText.setStatus("mandatory")
_WtIpWatcher_24VAlarmSnmpTrapReleaseText_Type = OctetString
_WtIpWatcher_24VAlarmSnmpTrapReleaseText_Object = MibTableColumn
wtIpWatcher_24VAlarmSnmpTrapReleaseText = _WtIpWatcher_24VAlarmSnmpTrapReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 28),
    _WtIpWatcher_24VAlarmSnmpTrapReleaseText_Type()
)
wtIpWatcher_24VAlarmSnmpTrapReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSnmpTrapReleaseText.setStatus("mandatory")
_WtIpWatcher_24VAlarmUdpReleaseText_Type = OctetString
_WtIpWatcher_24VAlarmUdpReleaseText_Object = MibTableColumn
wtIpWatcher_24VAlarmUdpReleaseText = _WtIpWatcher_24VAlarmUdpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 29),
    _WtIpWatcher_24VAlarmUdpReleaseText_Type()
)
wtIpWatcher_24VAlarmUdpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmUdpReleaseText.setStatus("mandatory")
_WtIpWatcher_24VAlarmTcpReleaseText_Type = OctetString
_WtIpWatcher_24VAlarmTcpReleaseText_Object = MibTableColumn
wtIpWatcher_24VAlarmTcpReleaseText = _WtIpWatcher_24VAlarmTcpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 30),
    _WtIpWatcher_24VAlarmTcpReleaseText_Type()
)
wtIpWatcher_24VAlarmTcpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTcpReleaseText.setStatus("mandatory")
_WtIpWatcher_24VAlarmSyslogReleaseText_Type = OctetString
_WtIpWatcher_24VAlarmSyslogReleaseText_Object = MibTableColumn
wtIpWatcher_24VAlarmSyslogReleaseText = _WtIpWatcher_24VAlarmSyslogReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 31),
    _WtIpWatcher_24VAlarmSyslogReleaseText_Type()
)
wtIpWatcher_24VAlarmSyslogReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSyslogReleaseText.setStatus("mandatory")
_WtIpWatcher_24VAlarmFtpReleaseText_Type = OctetString
_WtIpWatcher_24VAlarmFtpReleaseText_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpReleaseText = _WtIpWatcher_24VAlarmFtpReleaseText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 32),
    _WtIpWatcher_24VAlarmFtpReleaseText_Type()
)
wtIpWatcher_24VAlarmFtpReleaseText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpReleaseText.setStatus("mandatory")
_WtIpWatcher_24VAlarmName_Type = OctetString
_WtIpWatcher_24VAlarmName_Object = MibTableColumn
wtIpWatcher_24VAlarmName = _WtIpWatcher_24VAlarmName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 33),
    _WtIpWatcher_24VAlarmName_Type()
)
wtIpWatcher_24VAlarmName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmName.setStatus("mandatory")
_WtIpWatcher_24VAlarmGlobalEnable_Type = OctetString
_WtIpWatcher_24VAlarmGlobalEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmGlobalEnable = _WtIpWatcher_24VAlarmGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 34),
    _WtIpWatcher_24VAlarmGlobalEnable_Type()
)
wtIpWatcher_24VAlarmGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmGlobalEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmCounterClear_Type = OctetString
_WtIpWatcher_24VAlarmCounterClear_Object = MibTableColumn
wtIpWatcher_24VAlarmCounterClear = _WtIpWatcher_24VAlarmCounterClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 35),
    _WtIpWatcher_24VAlarmCounterClear_Type()
)
wtIpWatcher_24VAlarmCounterClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmCounterClear.setStatus("mandatory")
_WtIpWatcher_24VAlarmAckEnable_Type = OctetString
_WtIpWatcher_24VAlarmAckEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmAckEnable = _WtIpWatcher_24VAlarmAckEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 36),
    _WtIpWatcher_24VAlarmAckEnable_Type()
)
wtIpWatcher_24VAlarmAckEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmAckEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmAckPort_Type = Integer32
_WtIpWatcher_24VAlarmAckPort_Object = MibTableColumn
wtIpWatcher_24VAlarmAckPort = _WtIpWatcher_24VAlarmAckPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 37),
    _WtIpWatcher_24VAlarmAckPort_Type()
)
wtIpWatcher_24VAlarmAckPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmAckPort.setStatus("mandatory")
_WtIpWatcher_24VAlarmSetPort_Type = Integer32
_WtIpWatcher_24VAlarmSetPort_Object = MibTableColumn
wtIpWatcher_24VAlarmSetPort = _WtIpWatcher_24VAlarmSetPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 38),
    _WtIpWatcher_24VAlarmSetPort_Type()
)
wtIpWatcher_24VAlarmSetPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSetPort.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailTrgClearSubject_Type = OctetString
_WtIpWatcher_24VAlarmMailTrgClearSubject_Object = MibTableColumn
wtIpWatcher_24VAlarmMailTrgClearSubject = _WtIpWatcher_24VAlarmMailTrgClearSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 39),
    _WtIpWatcher_24VAlarmMailTrgClearSubject_Type()
)
wtIpWatcher_24VAlarmMailTrgClearSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailTrgClearSubject.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailTrgClearText_Type = OctetString
_WtIpWatcher_24VAlarmMailTrgClearText_Object = MibTableColumn
wtIpWatcher_24VAlarmMailTrgClearText = _WtIpWatcher_24VAlarmMailTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 40),
    _WtIpWatcher_24VAlarmMailTrgClearText_Type()
)
wtIpWatcher_24VAlarmMailTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailTrgClearText.setStatus("mandatory")
_WtIpWatcher_24VAlarmSnmpTrapTrgClearText_Type = OctetString
_WtIpWatcher_24VAlarmSnmpTrapTrgClearText_Object = MibTableColumn
wtIpWatcher_24VAlarmSnmpTrapTrgClearText = _WtIpWatcher_24VAlarmSnmpTrapTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 41),
    _WtIpWatcher_24VAlarmSnmpTrapTrgClearText_Type()
)
wtIpWatcher_24VAlarmSnmpTrapTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSnmpTrapTrgClearText.setStatus("mandatory")
_WtIpWatcher_24VAlarmUdpTrgClearText_Type = OctetString
_WtIpWatcher_24VAlarmUdpTrgClearText_Object = MibTableColumn
wtIpWatcher_24VAlarmUdpTrgClearText = _WtIpWatcher_24VAlarmUdpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 42),
    _WtIpWatcher_24VAlarmUdpTrgClearText_Type()
)
wtIpWatcher_24VAlarmUdpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmUdpTrgClearText.setStatus("mandatory")
_WtIpWatcher_24VAlarmTcpTrgClearText_Type = OctetString
_WtIpWatcher_24VAlarmTcpTrgClearText_Object = MibTableColumn
wtIpWatcher_24VAlarmTcpTrgClearText = _WtIpWatcher_24VAlarmTcpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 43),
    _WtIpWatcher_24VAlarmTcpTrgClearText_Type()
)
wtIpWatcher_24VAlarmTcpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTcpTrgClearText.setStatus("mandatory")
_WtIpWatcher_24VAlarmSyslogTrgClearText_Type = OctetString
_WtIpWatcher_24VAlarmSyslogTrgClearText_Object = MibTableColumn
wtIpWatcher_24VAlarmSyslogTrgClearText = _WtIpWatcher_24VAlarmSyslogTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 44),
    _WtIpWatcher_24VAlarmSyslogTrgClearText_Type()
)
wtIpWatcher_24VAlarmSyslogTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSyslogTrgClearText.setStatus("mandatory")
_WtIpWatcher_24VAlarmFtpTrgClearText_Type = OctetString
_WtIpWatcher_24VAlarmFtpTrgClearText_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpTrgClearText = _WtIpWatcher_24VAlarmFtpTrgClearText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 45),
    _WtIpWatcher_24VAlarmFtpTrgClearText_Type()
)
wtIpWatcher_24VAlarmFtpTrgClearText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpTrgClearText.setStatus("mandatory")
_WtIpWatcher_24VAlarmMailTrapTxEnable_Type = OctetString
_WtIpWatcher_24VAlarmMailTrapTxEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmMailTrapTxEnable = _WtIpWatcher_24VAlarmMailTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 46),
    _WtIpWatcher_24VAlarmMailTrapTxEnable_Type()
)
wtIpWatcher_24VAlarmMailTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmMailTrapTxEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmSnmpTrapTrapTxEnable_Type = OctetString
_WtIpWatcher_24VAlarmSnmpTrapTrapTxEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmSnmpTrapTrapTxEnable = _WtIpWatcher_24VAlarmSnmpTrapTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 47),
    _WtIpWatcher_24VAlarmSnmpTrapTrapTxEnable_Type()
)
wtIpWatcher_24VAlarmSnmpTrapTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSnmpTrapTrapTxEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmUdpTrapTxEnable_Type = OctetString
_WtIpWatcher_24VAlarmUdpTrapTxEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmUdpTrapTxEnable = _WtIpWatcher_24VAlarmUdpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 48),
    _WtIpWatcher_24VAlarmUdpTrapTxEnable_Type()
)
wtIpWatcher_24VAlarmUdpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmUdpTrapTxEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmTcpTrapTxEnable_Type = OctetString
_WtIpWatcher_24VAlarmTcpTrapTxEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmTcpTrapTxEnable = _WtIpWatcher_24VAlarmTcpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 49),
    _WtIpWatcher_24VAlarmTcpTrapTxEnable_Type()
)
wtIpWatcher_24VAlarmTcpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTcpTrapTxEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmSyslogTrapTxEnable_Type = OctetString
_WtIpWatcher_24VAlarmSyslogTrapTxEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmSyslogTrapTxEnable = _WtIpWatcher_24VAlarmSyslogTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 50),
    _WtIpWatcher_24VAlarmSyslogTrapTxEnable_Type()
)
wtIpWatcher_24VAlarmSyslogTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmSyslogTrapTxEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmFtpTrapTxEnable_Type = OctetString
_WtIpWatcher_24VAlarmFtpTrapTxEnable_Object = MibTableColumn
wtIpWatcher_24VAlarmFtpTrapTxEnable = _WtIpWatcher_24VAlarmFtpTrapTxEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 51),
    _WtIpWatcher_24VAlarmFtpTrapTxEnable_Type()
)
wtIpWatcher_24VAlarmFtpTrapTxEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmFtpTrapTxEnable.setStatus("mandatory")
_WtIpWatcher_24VAlarmTriggerCount_Type = Integer32
_WtIpWatcher_24VAlarmTriggerCount_Object = MibTableColumn
wtIpWatcher_24VAlarmTriggerCount = _WtIpWatcher_24VAlarmTriggerCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 52),
    _WtIpWatcher_24VAlarmTriggerCount_Type()
)
wtIpWatcher_24VAlarmTriggerCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmTriggerCount.setStatus("mandatory")
_WtIpWatcher_24VAlarmPollingRate_Type = Integer32
_WtIpWatcher_24VAlarmPollingRate_Object = MibTableColumn
wtIpWatcher_24VAlarmPollingRate = _WtIpWatcher_24VAlarmPollingRate_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 1, 5, 3, 1, 53),
    _WtIpWatcher_24VAlarmPollingRate_Type()
)
wtIpWatcher_24VAlarmPollingRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlarmPollingRate.setStatus("mandatory")
_WtIpWatcher_24VPorts_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VPorts = _WtIpWatcher_24VPorts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2)
)
_WtIpWatcher_24VInputPortTable_Object = MibTable
wtIpWatcher_24VInputPortTable = _WtIpWatcher_24VInputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 1)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputPortTable.setStatus("mandatory")
_WtIpWatcher_24VInputPortEntry_Object = MibTableRow
wtIpWatcher_24VInputPortEntry = _WtIpWatcher_24VInputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 1, 1)
)
wtIpWatcher_24VInputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VInputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VInputPortEntry.setStatus("mandatory")
_WtIpWatcher_24VPortInputName_Type = OctetString
_WtIpWatcher_24VPortInputName_Object = MibTableColumn
wtIpWatcher_24VPortInputName = _WtIpWatcher_24VPortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 1, 1, 1),
    _WtIpWatcher_24VPortInputName_Type()
)
wtIpWatcher_24VPortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortInputName.setStatus("mandatory")
_WtIpWatcher_24VPortInputText_Type = OctetString
_WtIpWatcher_24VPortInputText_Object = MibTableColumn
wtIpWatcher_24VPortInputText = _WtIpWatcher_24VPortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 1, 1, 2),
    _WtIpWatcher_24VPortInputText_Type()
)
wtIpWatcher_24VPortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortInputText.setStatus("mandatory")
_WtIpWatcher_24VPortInputFilter_Type = Integer32
_WtIpWatcher_24VPortInputFilter_Object = MibTableColumn
wtIpWatcher_24VPortInputFilter = _WtIpWatcher_24VPortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 1, 1, 4),
    _WtIpWatcher_24VPortInputFilter_Type()
)
wtIpWatcher_24VPortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortInputFilter.setStatus("mandatory")
_WtIpWatcher_24VOutputPortTable_Object = MibTable
wtIpWatcher_24VOutputPortTable = _WtIpWatcher_24VOutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 2)
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputPortTable.setStatus("mandatory")
_WtIpWatcher_24VOutputPortEntry_Object = MibTableRow
wtIpWatcher_24VOutputPortEntry = _WtIpWatcher_24VOutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 2, 1)
)
wtIpWatcher_24VOutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtIpWatcher_24VOutputNo"),
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VOutputPortEntry.setStatus("mandatory")
_WtIpWatcher_24VPortOutputName_Type = OctetString
_WtIpWatcher_24VPortOutputName_Object = MibTableColumn
wtIpWatcher_24VPortOutputName = _WtIpWatcher_24VPortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 2, 1, 1),
    _WtIpWatcher_24VPortOutputName_Type()
)
wtIpWatcher_24VPortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortOutputName.setStatus("mandatory")
_WtIpWatcher_24VPortOutputText_Type = OctetString
_WtIpWatcher_24VPortOutputText_Object = MibTableColumn
wtIpWatcher_24VPortOutputText = _WtIpWatcher_24VPortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 2, 1, 2),
    _WtIpWatcher_24VPortOutputText_Type()
)
wtIpWatcher_24VPortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortOutputText.setStatus("mandatory")
_WtIpWatcher_24VPortPulseDuration_Type = Integer32
_WtIpWatcher_24VPortPulseDuration_Object = MibTableColumn
wtIpWatcher_24VPortPulseDuration = _WtIpWatcher_24VPortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 2, 1, 9),
    _WtIpWatcher_24VPortPulseDuration_Type()
)
wtIpWatcher_24VPortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortPulseDuration.setStatus("mandatory")


class _WtIpWatcher_24VPortPulsePolarity_Type(OctetString):
    """Custom type wtIpWatcher_24VPortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtIpWatcher_24VPortPulsePolarity_Type.__name__ = "OctetString"
_WtIpWatcher_24VPortPulsePolarity_Object = MibTableColumn
wtIpWatcher_24VPortPulsePolarity = _WtIpWatcher_24VPortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 2, 2, 1, 10),
    _WtIpWatcher_24VPortPulsePolarity_Type()
)
wtIpWatcher_24VPortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VPortPulsePolarity.setStatus("mandatory")
_WtIpWatcher_24VManufact_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VManufact = _WtIpWatcher_24VManufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 3)
)
_WtIpWatcher_24VMfName_Type = OctetString
_WtIpWatcher_24VMfName_Object = MibScalar
wtIpWatcher_24VMfName = _WtIpWatcher_24VMfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 3, 1),
    _WtIpWatcher_24VMfName_Type()
)
wtIpWatcher_24VMfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMfName.setStatus("mandatory")
_WtIpWatcher_24VMfAddr_Type = OctetString
_WtIpWatcher_24VMfAddr_Object = MibScalar
wtIpWatcher_24VMfAddr = _WtIpWatcher_24VMfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 3, 2),
    _WtIpWatcher_24VMfAddr_Type()
)
wtIpWatcher_24VMfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMfAddr.setStatus("mandatory")
_WtIpWatcher_24VMfHotline_Type = OctetString
_WtIpWatcher_24VMfHotline_Object = MibScalar
wtIpWatcher_24VMfHotline = _WtIpWatcher_24VMfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 3, 3),
    _WtIpWatcher_24VMfHotline_Type()
)
wtIpWatcher_24VMfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMfHotline.setStatus("mandatory")
_WtIpWatcher_24VMfInternet_Type = OctetString
_WtIpWatcher_24VMfInternet_Object = MibScalar
wtIpWatcher_24VMfInternet = _WtIpWatcher_24VMfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 3, 4),
    _WtIpWatcher_24VMfInternet_Type()
)
wtIpWatcher_24VMfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMfInternet.setStatus("mandatory")
_WtIpWatcher_24VMfDeviceTyp_Type = OctetString
_WtIpWatcher_24VMfDeviceTyp_Object = MibScalar
wtIpWatcher_24VMfDeviceTyp = _WtIpWatcher_24VMfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 3, 3, 5),
    _WtIpWatcher_24VMfDeviceTyp_Type()
)
wtIpWatcher_24VMfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VMfDeviceTyp.setStatus("mandatory")
_WtIpWatcher_24VDiag_ObjectIdentity = ObjectIdentity
wtIpWatcher_24VDiag = _WtIpWatcher_24VDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 4)
)
_WtIpWatcher_24VDiagErrorCount_Type = Integer32
_WtIpWatcher_24VDiagErrorCount_Object = MibScalar
wtIpWatcher_24VDiagErrorCount = _WtIpWatcher_24VDiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 4, 1),
    _WtIpWatcher_24VDiagErrorCount_Type()
)
wtIpWatcher_24VDiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDiagErrorCount.setStatus("mandatory")
_WtIpWatcher_24VDiagBinaryError_Type = OctetString
_WtIpWatcher_24VDiagBinaryError_Object = MibScalar
wtIpWatcher_24VDiagBinaryError = _WtIpWatcher_24VDiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 4, 2),
    _WtIpWatcher_24VDiagBinaryError_Type()
)
wtIpWatcher_24VDiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDiagBinaryError.setStatus("mandatory")
_WtIpWatcher_24VDiagErrorIndex_Type = Integer32
_WtIpWatcher_24VDiagErrorIndex_Object = MibScalar
wtIpWatcher_24VDiagErrorIndex = _WtIpWatcher_24VDiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 4, 3),
    _WtIpWatcher_24VDiagErrorIndex_Type()
)
wtIpWatcher_24VDiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDiagErrorIndex.setStatus("mandatory")
_WtIpWatcher_24VDiagErrorMessage_Type = OctetString
_WtIpWatcher_24VDiagErrorMessage_Object = MibScalar
wtIpWatcher_24VDiagErrorMessage = _WtIpWatcher_24VDiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 4, 4),
    _WtIpWatcher_24VDiagErrorMessage_Type()
)
wtIpWatcher_24VDiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDiagErrorMessage.setStatus("mandatory")
_WtIpWatcher_24VDiagErrorClear_Type = Integer32
_WtIpWatcher_24VDiagErrorClear_Object = MibScalar
wtIpWatcher_24VDiagErrorClear = _WtIpWatcher_24VDiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 4, 5),
    _WtIpWatcher_24VDiagErrorClear_Type()
)
wtIpWatcher_24VDiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtIpWatcher_24VDiagErrorClear.setStatus("mandatory")
_WtTrapReceiver2x2_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2 = _WtTrapReceiver2x2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33)
)
_WtTrapReceiver2x2InOut_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2InOut = _WtTrapReceiver2x2InOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1)
)


class _WtTrapReceiver2x2Inputs_Type(Integer32):
    """Custom type wtTrapReceiver2x2Inputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtTrapReceiver2x2Inputs_Type.__name__ = "Integer32"
_WtTrapReceiver2x2Inputs_Object = MibScalar
wtTrapReceiver2x2Inputs = _WtTrapReceiver2x2Inputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 1),
    _WtTrapReceiver2x2Inputs_Type()
)
wtTrapReceiver2x2Inputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Inputs.setStatus("mandatory")


class _WtTrapReceiver2x2Outputs_Type(Integer32):
    """Custom type wtTrapReceiver2x2Outputs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WtTrapReceiver2x2Outputs_Type.__name__ = "Integer32"
_WtTrapReceiver2x2Outputs_Object = MibScalar
wtTrapReceiver2x2Outputs = _WtTrapReceiver2x2Outputs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 2),
    _WtTrapReceiver2x2Outputs_Type()
)
wtTrapReceiver2x2Outputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Outputs.setStatus("mandatory")
_WtTrapReceiver2x2InputTable_Object = MibTable
wtTrapReceiver2x2InputTable = _WtTrapReceiver2x2InputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 3)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputTable.setStatus("mandatory")
_WtTrapReceiver2x2InputEntry_Object = MibTableRow
wtTrapReceiver2x2InputEntry = _WtTrapReceiver2x2InputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 3, 1)
)
wtTrapReceiver2x2InputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2InputNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputEntry.setStatus("mandatory")


class _WtTrapReceiver2x2InputNo_Type(Integer32):
    """Custom type wtTrapReceiver2x2InputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtTrapReceiver2x2InputNo_Type.__name__ = "Integer32"
_WtTrapReceiver2x2InputNo_Object = MibTableColumn
wtTrapReceiver2x2InputNo = _WtTrapReceiver2x2InputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 3, 1, 1),
    _WtTrapReceiver2x2InputNo_Type()
)
wtTrapReceiver2x2InputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputNo.setStatus("mandatory")


class _WtTrapReceiver2x2InputState_Type(Integer32):
    """Custom type wtTrapReceiver2x2InputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2InputState-OFF", 0),
          ("wtTrapReceiver2x2InputState-ON", 1))
    )


_WtTrapReceiver2x2InputState_Type.__name__ = "Integer32"
_WtTrapReceiver2x2InputState_Object = MibTableColumn
wtTrapReceiver2x2InputState = _WtTrapReceiver2x2InputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 3, 1, 4),
    _WtTrapReceiver2x2InputState_Type()
)
wtTrapReceiver2x2InputState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputState.setStatus("mandatory")
_WtTrapReceiver2x2InputValue_Type = Integer32
_WtTrapReceiver2x2InputValue_Object = MibScalar
wtTrapReceiver2x2InputValue = _WtTrapReceiver2x2InputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 4),
    _WtTrapReceiver2x2InputValue_Type()
)
wtTrapReceiver2x2InputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputValue.setStatus("mandatory")
_WtTrapReceiver2x2OutputTable_Object = MibTable
wtTrapReceiver2x2OutputTable = _WtTrapReceiver2x2OutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 5)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputTable.setStatus("mandatory")
_WtTrapReceiver2x2OutputEntry_Object = MibTableRow
wtTrapReceiver2x2OutputEntry = _WtTrapReceiver2x2OutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 5, 1)
)
wtTrapReceiver2x2OutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2OutputNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputEntry.setStatus("mandatory")


class _WtTrapReceiver2x2OutputNo_Type(Integer32):
    """Custom type wtTrapReceiver2x2OutputNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_WtTrapReceiver2x2OutputNo_Type.__name__ = "Integer32"
_WtTrapReceiver2x2OutputNo_Object = MibTableColumn
wtTrapReceiver2x2OutputNo = _WtTrapReceiver2x2OutputNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 5, 1, 1),
    _WtTrapReceiver2x2OutputNo_Type()
)
wtTrapReceiver2x2OutputNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputNo.setStatus("mandatory")


class _WtTrapReceiver2x2OutputState_Type(Integer32):
    """Custom type wtTrapReceiver2x2OutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2OutputState-OFF", 0),
          ("wtTrapReceiver2x2OutputState-ON", 1))
    )


_WtTrapReceiver2x2OutputState_Type.__name__ = "Integer32"
_WtTrapReceiver2x2OutputState_Object = MibTableColumn
wtTrapReceiver2x2OutputState = _WtTrapReceiver2x2OutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 5, 1, 2),
    _WtTrapReceiver2x2OutputState_Type()
)
wtTrapReceiver2x2OutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputState.setStatus("mandatory")
_WtTrapReceiver2x2OutputValue_Type = Integer32
_WtTrapReceiver2x2OutputValue_Object = MibScalar
wtTrapReceiver2x2OutputValue = _WtTrapReceiver2x2OutputValue_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 6),
    _WtTrapReceiver2x2OutputValue_Type()
)
wtTrapReceiver2x2OutputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputValue.setStatus("mandatory")
_WtTrapReceiver2x2ActionOutputTable_Object = MibTable
wtTrapReceiver2x2ActionOutputTable = _WtTrapReceiver2x2ActionOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 8)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionOutputTable.setStatus("mandatory")
_WtTrapReceiver2x2ActionOutputEntry_Object = MibTableRow
wtTrapReceiver2x2ActionOutputEntry = _WtTrapReceiver2x2ActionOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 8, 1)
)
wtTrapReceiver2x2ActionOutputEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionOutputEntry.setStatus("mandatory")


class _WtTrapReceiver2x2ActionOutputState_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionOutputState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2ActionOutputState-OFF", 0),
          ("wtTrapReceiver2x2ActionOutputState-ON", 1))
    )


_WtTrapReceiver2x2ActionOutputState_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionOutputState_Object = MibTableColumn
wtTrapReceiver2x2ActionOutputState = _WtTrapReceiver2x2ActionOutputState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 8, 1, 1),
    _WtTrapReceiver2x2ActionOutputState_Type()
)
wtTrapReceiver2x2ActionOutputState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionOutputState.setStatus("mandatory")


class _WtTrapReceiver2x2ActionTriggerState_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionTriggerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2ActionTriggerState-OFF", 0),
          ("wtTrapReceiver2x2ActionTriggerState-ON", 1))
    )


_WtTrapReceiver2x2ActionTriggerState_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionTriggerState_Object = MibTableColumn
wtTrapReceiver2x2ActionTriggerState = _WtTrapReceiver2x2ActionTriggerState_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 8, 1, 2),
    _WtTrapReceiver2x2ActionTriggerState_Type()
)
wtTrapReceiver2x2ActionTriggerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionTriggerState.setStatus("mandatory")
_WtTrapReceiver2x2SystemTimerTable_Object = MibTable
wtTrapReceiver2x2SystemTimerTable = _WtTrapReceiver2x2SystemTimerTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 9)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SystemTimerTable.setStatus("mandatory")
_WtTrapReceiver2x2SystemTimerEntry_Object = MibTableRow
wtTrapReceiver2x2SystemTimerEntry = _WtTrapReceiver2x2SystemTimerEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 9, 1)
)
wtTrapReceiver2x2SystemTimerEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2SystemTimerNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SystemTimerEntry.setStatus("mandatory")
_WtTrapReceiver2x2SystemTimerNo_Type = Integer32
_WtTrapReceiver2x2SystemTimerNo_Object = MibTableColumn
wtTrapReceiver2x2SystemTimerNo = _WtTrapReceiver2x2SystemTimerNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 9, 1, 1),
    _WtTrapReceiver2x2SystemTimerNo_Type()
)
wtTrapReceiver2x2SystemTimerNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SystemTimerNo.setStatus("mandatory")
_WtTrapReceiver2x2ButtonTable_Object = MibTable
wtTrapReceiver2x2ButtonTable = _WtTrapReceiver2x2ButtonTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 10)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ButtonTable.setStatus("mandatory")
_WtTrapReceiver2x2ButtonEntry_Object = MibTableRow
wtTrapReceiver2x2ButtonEntry = _WtTrapReceiver2x2ButtonEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 10, 1)
)
wtTrapReceiver2x2ButtonEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2ButtonNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ButtonEntry.setStatus("mandatory")
_WtTrapReceiver2x2ButtonNo_Type = Integer32
_WtTrapReceiver2x2ButtonNo_Object = MibTableColumn
wtTrapReceiver2x2ButtonNo = _WtTrapReceiver2x2ButtonNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 1, 10, 1, 1),
    _WtTrapReceiver2x2ButtonNo_Type()
)
wtTrapReceiver2x2ButtonNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ButtonNo.setStatus("mandatory")
_WtTrapReceiver2x2SessCntrl_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2SessCntrl = _WtTrapReceiver2x2SessCntrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 2)
)
_WtTrapReceiver2x2SessCntrlPassword_Type = OctetString
_WtTrapReceiver2x2SessCntrlPassword_Object = MibScalar
wtTrapReceiver2x2SessCntrlPassword = _WtTrapReceiver2x2SessCntrlPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 2, 1),
    _WtTrapReceiver2x2SessCntrlPassword_Type()
)
wtTrapReceiver2x2SessCntrlPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SessCntrlPassword.setStatus("mandatory")


class _WtTrapReceiver2x2SessCntrlConfigMode_Type(Integer32):
    """Custom type wtTrapReceiver2x2SessCntrlConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2SessCntrl-NoSession", 0),
          ("wtTrapReceiver2x2SessCntrl-Session", 1))
    )


_WtTrapReceiver2x2SessCntrlConfigMode_Type.__name__ = "Integer32"
_WtTrapReceiver2x2SessCntrlConfigMode_Object = MibScalar
wtTrapReceiver2x2SessCntrlConfigMode = _WtTrapReceiver2x2SessCntrlConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 2, 2),
    _WtTrapReceiver2x2SessCntrlConfigMode_Type()
)
wtTrapReceiver2x2SessCntrlConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SessCntrlConfigMode.setStatus("mandatory")
_WtTrapReceiver2x2SessCntrlLogout_Type = Integer32
_WtTrapReceiver2x2SessCntrlLogout_Object = MibScalar
wtTrapReceiver2x2SessCntrlLogout = _WtTrapReceiver2x2SessCntrlLogout_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 2, 3),
    _WtTrapReceiver2x2SessCntrlLogout_Type()
)
wtTrapReceiver2x2SessCntrlLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SessCntrlLogout.setStatus("mandatory")
_WtTrapReceiver2x2SessCntrlAdminPassword_Type = OctetString
_WtTrapReceiver2x2SessCntrlAdminPassword_Object = MibScalar
wtTrapReceiver2x2SessCntrlAdminPassword = _WtTrapReceiver2x2SessCntrlAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 2, 4),
    _WtTrapReceiver2x2SessCntrlAdminPassword_Type()
)
wtTrapReceiver2x2SessCntrlAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SessCntrlAdminPassword.setStatus("mandatory")
_WtTrapReceiver2x2SessCntrlConfigPassword_Type = OctetString
_WtTrapReceiver2x2SessCntrlConfigPassword_Object = MibScalar
wtTrapReceiver2x2SessCntrlConfigPassword = _WtTrapReceiver2x2SessCntrlConfigPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 2, 5),
    _WtTrapReceiver2x2SessCntrlConfigPassword_Type()
)
wtTrapReceiver2x2SessCntrlConfigPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SessCntrlConfigPassword.setStatus("mandatory")
_WtTrapReceiver2x2Config_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Config = _WtTrapReceiver2x2Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3)
)
_WtTrapReceiver2x2Device_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Device = _WtTrapReceiver2x2Device_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1)
)
_WtTrapReceiver2x2Text_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Text = _WtTrapReceiver2x2Text_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 1)
)
_WtTrapReceiver2x2DeviceName_Type = OctetString
_WtTrapReceiver2x2DeviceName_Object = MibScalar
wtTrapReceiver2x2DeviceName = _WtTrapReceiver2x2DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 1, 1),
    _WtTrapReceiver2x2DeviceName_Type()
)
wtTrapReceiver2x2DeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DeviceName.setStatus("mandatory")
_WtTrapReceiver2x2DeviceText_Type = OctetString
_WtTrapReceiver2x2DeviceText_Object = MibScalar
wtTrapReceiver2x2DeviceText = _WtTrapReceiver2x2DeviceText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 1, 2),
    _WtTrapReceiver2x2DeviceText_Type()
)
wtTrapReceiver2x2DeviceText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DeviceText.setStatus("mandatory")
_WtTrapReceiver2x2DeviceLocation_Type = OctetString
_WtTrapReceiver2x2DeviceLocation_Object = MibScalar
wtTrapReceiver2x2DeviceLocation = _WtTrapReceiver2x2DeviceLocation_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 1, 3),
    _WtTrapReceiver2x2DeviceLocation_Type()
)
wtTrapReceiver2x2DeviceLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DeviceLocation.setStatus("mandatory")
_WtTrapReceiver2x2DeviceContact_Type = OctetString
_WtTrapReceiver2x2DeviceContact_Object = MibScalar
wtTrapReceiver2x2DeviceContact = _WtTrapReceiver2x2DeviceContact_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 1, 4),
    _WtTrapReceiver2x2DeviceContact_Type()
)
wtTrapReceiver2x2DeviceContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DeviceContact.setStatus("mandatory")
_WtTrapReceiver2x2TimeDate_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2TimeDate = _WtTrapReceiver2x2TimeDate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2)
)
_WtTrapReceiver2x2TimeZone_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2TimeZone = _WtTrapReceiver2x2TimeZone_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1)
)
_WtTrapReceiver2x2TzOffsetHrs_Type = Integer32
_WtTrapReceiver2x2TzOffsetHrs_Object = MibScalar
wtTrapReceiver2x2TzOffsetHrs = _WtTrapReceiver2x2TzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 1),
    _WtTrapReceiver2x2TzOffsetHrs_Type()
)
wtTrapReceiver2x2TzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TzOffsetHrs.setStatus("mandatory")
_WtTrapReceiver2x2TzOffsetMin_Type = Integer32
_WtTrapReceiver2x2TzOffsetMin_Object = MibScalar
wtTrapReceiver2x2TzOffsetMin = _WtTrapReceiver2x2TzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 2),
    _WtTrapReceiver2x2TzOffsetMin_Type()
)
wtTrapReceiver2x2TzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TzOffsetMin.setStatus("mandatory")


class _WtTrapReceiver2x2TzEnable_Type(OctetString):
    """Custom type wtTrapReceiver2x2TzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2TzEnable_Type.__name__ = "OctetString"
_WtTrapReceiver2x2TzEnable_Object = MibScalar
wtTrapReceiver2x2TzEnable = _WtTrapReceiver2x2TzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 3),
    _WtTrapReceiver2x2TzEnable_Type()
)
wtTrapReceiver2x2TzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TzEnable.setStatus("mandatory")
_WtTrapReceiver2x2StTzOffsetHrs_Type = Integer32
_WtTrapReceiver2x2StTzOffsetHrs_Object = MibScalar
wtTrapReceiver2x2StTzOffsetHrs = _WtTrapReceiver2x2StTzOffsetHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 4),
    _WtTrapReceiver2x2StTzOffsetHrs_Type()
)
wtTrapReceiver2x2StTzOffsetHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzOffsetHrs.setStatus("mandatory")
_WtTrapReceiver2x2StTzOffsetMin_Type = Integer32
_WtTrapReceiver2x2StTzOffsetMin_Object = MibScalar
wtTrapReceiver2x2StTzOffsetMin = _WtTrapReceiver2x2StTzOffsetMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 5),
    _WtTrapReceiver2x2StTzOffsetMin_Type()
)
wtTrapReceiver2x2StTzOffsetMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzOffsetMin.setStatus("mandatory")


class _WtTrapReceiver2x2StTzEnable_Type(OctetString):
    """Custom type wtTrapReceiver2x2StTzEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2StTzEnable_Type.__name__ = "OctetString"
_WtTrapReceiver2x2StTzEnable_Object = MibScalar
wtTrapReceiver2x2StTzEnable = _WtTrapReceiver2x2StTzEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 6),
    _WtTrapReceiver2x2StTzEnable_Type()
)
wtTrapReceiver2x2StTzEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzEnable.setStatus("mandatory")


class _WtTrapReceiver2x2StTzStartMonth_Type(Integer32):
    """Custom type wtTrapReceiver2x2StTzStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2StartMonth-April", 4),
          ("wtTrapReceiver2x2StartMonth-August", 8),
          ("wtTrapReceiver2x2StartMonth-December", 12),
          ("wtTrapReceiver2x2StartMonth-February", 2),
          ("wtTrapReceiver2x2StartMonth-January", 1),
          ("wtTrapReceiver2x2StartMonth-July", 7),
          ("wtTrapReceiver2x2StartMonth-June", 6),
          ("wtTrapReceiver2x2StartMonth-March", 3),
          ("wtTrapReceiver2x2StartMonth-May", 5),
          ("wtTrapReceiver2x2StartMonth-November", 11),
          ("wtTrapReceiver2x2StartMonth-October", 10),
          ("wtTrapReceiver2x2StartMonth-September", 9))
    )


_WtTrapReceiver2x2StTzStartMonth_Type.__name__ = "Integer32"
_WtTrapReceiver2x2StTzStartMonth_Object = MibScalar
wtTrapReceiver2x2StTzStartMonth = _WtTrapReceiver2x2StTzStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 7),
    _WtTrapReceiver2x2StTzStartMonth_Type()
)
wtTrapReceiver2x2StTzStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStartMonth.setStatus("mandatory")


class _WtTrapReceiver2x2StTzStartMode_Type(Integer32):
    """Custom type wtTrapReceiver2x2StTzStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2StartMode-first", 1),
          ("wtTrapReceiver2x2StartMode-fourth", 4),
          ("wtTrapReceiver2x2StartMode-last", 5),
          ("wtTrapReceiver2x2StartMode-second", 2),
          ("wtTrapReceiver2x2StartMode-third", 3))
    )


_WtTrapReceiver2x2StTzStartMode_Type.__name__ = "Integer32"
_WtTrapReceiver2x2StTzStartMode_Object = MibScalar
wtTrapReceiver2x2StTzStartMode = _WtTrapReceiver2x2StTzStartMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 8),
    _WtTrapReceiver2x2StTzStartMode_Type()
)
wtTrapReceiver2x2StTzStartMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStartMode.setStatus("mandatory")


class _WtTrapReceiver2x2StTzStartWday_Type(Integer32):
    """Custom type wtTrapReceiver2x2StTzStartWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2StartWday-Friday", 6),
          ("wtTrapReceiver2x2StartWday-Monday", 2),
          ("wtTrapReceiver2x2StartWday-Saturday", 7),
          ("wtTrapReceiver2x2StartWday-Sunday", 1),
          ("wtTrapReceiver2x2StartWday-Thursday", 4),
          ("wtTrapReceiver2x2StartWday-Tuesday", 3),
          ("wtTrapReceiver2x2StartWday-Wednesday", 5))
    )


_WtTrapReceiver2x2StTzStartWday_Type.__name__ = "Integer32"
_WtTrapReceiver2x2StTzStartWday_Object = MibScalar
wtTrapReceiver2x2StTzStartWday = _WtTrapReceiver2x2StTzStartWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 9),
    _WtTrapReceiver2x2StTzStartWday_Type()
)
wtTrapReceiver2x2StTzStartWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStartWday.setStatus("mandatory")
_WtTrapReceiver2x2StTzStartHrs_Type = Integer32
_WtTrapReceiver2x2StTzStartHrs_Object = MibScalar
wtTrapReceiver2x2StTzStartHrs = _WtTrapReceiver2x2StTzStartHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 10),
    _WtTrapReceiver2x2StTzStartHrs_Type()
)
wtTrapReceiver2x2StTzStartHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStartHrs.setStatus("mandatory")
_WtTrapReceiver2x2StTzStartMin_Type = Integer32
_WtTrapReceiver2x2StTzStartMin_Object = MibScalar
wtTrapReceiver2x2StTzStartMin = _WtTrapReceiver2x2StTzStartMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 11),
    _WtTrapReceiver2x2StTzStartMin_Type()
)
wtTrapReceiver2x2StTzStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStartMin.setStatus("mandatory")


class _WtTrapReceiver2x2StTzStopMonth_Type(Integer32):
    """Custom type wtTrapReceiver2x2StTzStopMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2StopMonth-April", 4),
          ("wtTrapReceiver2x2StopMonth-August", 8),
          ("wtTrapReceiver2x2StopMonth-December", 12),
          ("wtTrapReceiver2x2StopMonth-February", 2),
          ("wtTrapReceiver2x2StopMonth-January", 1),
          ("wtTrapReceiver2x2StopMonth-July", 7),
          ("wtTrapReceiver2x2StopMonth-June", 6),
          ("wtTrapReceiver2x2StopMonth-March", 3),
          ("wtTrapReceiver2x2StopMonth-May", 5),
          ("wtTrapReceiver2x2StopMonth-November", 11),
          ("wtTrapReceiver2x2StopMonth-October", 10),
          ("wtTrapReceiver2x2StopMonth-September", 9))
    )


_WtTrapReceiver2x2StTzStopMonth_Type.__name__ = "Integer32"
_WtTrapReceiver2x2StTzStopMonth_Object = MibScalar
wtTrapReceiver2x2StTzStopMonth = _WtTrapReceiver2x2StTzStopMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 12),
    _WtTrapReceiver2x2StTzStopMonth_Type()
)
wtTrapReceiver2x2StTzStopMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStopMonth.setStatus("mandatory")


class _WtTrapReceiver2x2StTzStopMode_Type(Integer32):
    """Custom type wtTrapReceiver2x2StTzStopMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2StopMode-first", 1),
          ("wtTrapReceiver2x2StopMode-fourth", 4),
          ("wtTrapReceiver2x2StopMode-last", 5),
          ("wtTrapReceiver2x2StopMode-second", 2),
          ("wtTrapReceiver2x2StopMode-third", 3))
    )


_WtTrapReceiver2x2StTzStopMode_Type.__name__ = "Integer32"
_WtTrapReceiver2x2StTzStopMode_Object = MibScalar
wtTrapReceiver2x2StTzStopMode = _WtTrapReceiver2x2StTzStopMode_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 13),
    _WtTrapReceiver2x2StTzStopMode_Type()
)
wtTrapReceiver2x2StTzStopMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStopMode.setStatus("mandatory")


class _WtTrapReceiver2x2StTzStopWday_Type(Integer32):
    """Custom type wtTrapReceiver2x2StTzStopWday based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2StopWday-Friday", 6),
          ("wtTrapReceiver2x2StopWday-Monday", 2),
          ("wtTrapReceiver2x2StopWday-Saturday", 7),
          ("wtTrapReceiver2x2StopWday-Sunday", 1),
          ("wtTrapReceiver2x2StopWday-Thursday", 4),
          ("wtTrapReceiver2x2StopWday-Tuesday", 3),
          ("wtTrapReceiver2x2StopWday-Wednesday", 5))
    )


_WtTrapReceiver2x2StTzStopWday_Type.__name__ = "Integer32"
_WtTrapReceiver2x2StTzStopWday_Object = MibScalar
wtTrapReceiver2x2StTzStopWday = _WtTrapReceiver2x2StTzStopWday_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 14),
    _WtTrapReceiver2x2StTzStopWday_Type()
)
wtTrapReceiver2x2StTzStopWday.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStopWday.setStatus("mandatory")
_WtTrapReceiver2x2StTzStopHrs_Type = Integer32
_WtTrapReceiver2x2StTzStopHrs_Object = MibScalar
wtTrapReceiver2x2StTzStopHrs = _WtTrapReceiver2x2StTzStopHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 15),
    _WtTrapReceiver2x2StTzStopHrs_Type()
)
wtTrapReceiver2x2StTzStopHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStopHrs.setStatus("mandatory")
_WtTrapReceiver2x2StTzStopMin_Type = Integer32
_WtTrapReceiver2x2StTzStopMin_Object = MibScalar
wtTrapReceiver2x2StTzStopMin = _WtTrapReceiver2x2StTzStopMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 1, 16),
    _WtTrapReceiver2x2StTzStopMin_Type()
)
wtTrapReceiver2x2StTzStopMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2StTzStopMin.setStatus("mandatory")
_WtTrapReceiver2x2TimeServer_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2TimeServer = _WtTrapReceiver2x2TimeServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 2)
)
_WtTrapReceiver2x2TimeServer1_Type = OctetString
_WtTrapReceiver2x2TimeServer1_Object = MibScalar
wtTrapReceiver2x2TimeServer1 = _WtTrapReceiver2x2TimeServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 2, 1),
    _WtTrapReceiver2x2TimeServer1_Type()
)
wtTrapReceiver2x2TimeServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TimeServer1.setStatus("mandatory")
_WtTrapReceiver2x2TimeServer2_Type = OctetString
_WtTrapReceiver2x2TimeServer2_Object = MibScalar
wtTrapReceiver2x2TimeServer2 = _WtTrapReceiver2x2TimeServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 2, 2),
    _WtTrapReceiver2x2TimeServer2_Type()
)
wtTrapReceiver2x2TimeServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TimeServer2.setStatus("mandatory")


class _WtTrapReceiver2x2TsEnable_Type(OctetString):
    """Custom type wtTrapReceiver2x2TsEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2TsEnable_Type.__name__ = "OctetString"
_WtTrapReceiver2x2TsEnable_Object = MibScalar
wtTrapReceiver2x2TsEnable = _WtTrapReceiver2x2TsEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 2, 3),
    _WtTrapReceiver2x2TsEnable_Type()
)
wtTrapReceiver2x2TsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TsEnable.setStatus("mandatory")
_WtTrapReceiver2x2TsSyncTime_Type = Integer32
_WtTrapReceiver2x2TsSyncTime_Object = MibScalar
wtTrapReceiver2x2TsSyncTime = _WtTrapReceiver2x2TsSyncTime_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 2, 4),
    _WtTrapReceiver2x2TsSyncTime_Type()
)
wtTrapReceiver2x2TsSyncTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2TsSyncTime.setStatus("mandatory")
_WtTrapReceiver2x2DeviceClock_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2DeviceClock = _WtTrapReceiver2x2DeviceClock_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 3)
)


class _WtTrapReceiver2x2ClockHrs_Type(Integer32):
    """Custom type wtTrapReceiver2x2ClockHrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WtTrapReceiver2x2ClockHrs_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ClockHrs_Object = MibScalar
wtTrapReceiver2x2ClockHrs = _WtTrapReceiver2x2ClockHrs_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 3, 1),
    _WtTrapReceiver2x2ClockHrs_Type()
)
wtTrapReceiver2x2ClockHrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ClockHrs.setStatus("mandatory")


class _WtTrapReceiver2x2ClockMin_Type(Integer32):
    """Custom type wtTrapReceiver2x2ClockMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_WtTrapReceiver2x2ClockMin_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ClockMin_Object = MibScalar
wtTrapReceiver2x2ClockMin = _WtTrapReceiver2x2ClockMin_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 3, 2),
    _WtTrapReceiver2x2ClockMin_Type()
)
wtTrapReceiver2x2ClockMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ClockMin.setStatus("mandatory")


class _WtTrapReceiver2x2ClockDay_Type(Integer32):
    """Custom type wtTrapReceiver2x2ClockDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_WtTrapReceiver2x2ClockDay_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ClockDay_Object = MibScalar
wtTrapReceiver2x2ClockDay = _WtTrapReceiver2x2ClockDay_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 3, 3),
    _WtTrapReceiver2x2ClockDay_Type()
)
wtTrapReceiver2x2ClockDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ClockDay.setStatus("mandatory")


class _WtTrapReceiver2x2ClockMonth_Type(Integer32):
    """Custom type wtTrapReceiver2x2ClockMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2ClockMonth-April", 4),
          ("wtTrapReceiver2x2ClockMonth-August", 8),
          ("wtTrapReceiver2x2ClockMonth-December", 12),
          ("wtTrapReceiver2x2ClockMonth-February", 2),
          ("wtTrapReceiver2x2ClockMonth-January", 1),
          ("wtTrapReceiver2x2ClockMonth-July", 7),
          ("wtTrapReceiver2x2ClockMonth-June", 6),
          ("wtTrapReceiver2x2ClockMonth-March", 3),
          ("wtTrapReceiver2x2ClockMonth-May", 5),
          ("wtTrapReceiver2x2ClockMonth-November", 11),
          ("wtTrapReceiver2x2ClockMonth-October", 10),
          ("wtTrapReceiver2x2ClockMonth-September", 9))
    )


_WtTrapReceiver2x2ClockMonth_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ClockMonth_Object = MibScalar
wtTrapReceiver2x2ClockMonth = _WtTrapReceiver2x2ClockMonth_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 3, 4),
    _WtTrapReceiver2x2ClockMonth_Type()
)
wtTrapReceiver2x2ClockMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ClockMonth.setStatus("mandatory")


class _WtTrapReceiver2x2ClockYear_Type(Integer32):
    """Custom type wtTrapReceiver2x2ClockYear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WtTrapReceiver2x2ClockYear_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ClockYear_Object = MibScalar
wtTrapReceiver2x2ClockYear = _WtTrapReceiver2x2ClockYear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 2, 3, 5),
    _WtTrapReceiver2x2ClockYear_Type()
)
wtTrapReceiver2x2ClockYear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ClockYear.setStatus("mandatory")
_WtTrapReceiver2x2Basic_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Basic = _WtTrapReceiver2x2Basic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3)
)
_WtTrapReceiver2x2Network_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Network = _WtTrapReceiver2x2Network_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1)
)
_WtTrapReceiver2x2IpAddress_Type = IpAddress
_WtTrapReceiver2x2IpAddress_Object = MibScalar
wtTrapReceiver2x2IpAddress = _WtTrapReceiver2x2IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1, 1),
    _WtTrapReceiver2x2IpAddress_Type()
)
wtTrapReceiver2x2IpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2IpAddress.setStatus("mandatory")
_WtTrapReceiver2x2SubnetMask_Type = IpAddress
_WtTrapReceiver2x2SubnetMask_Object = MibScalar
wtTrapReceiver2x2SubnetMask = _WtTrapReceiver2x2SubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1, 2),
    _WtTrapReceiver2x2SubnetMask_Type()
)
wtTrapReceiver2x2SubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SubnetMask.setStatus("mandatory")
_WtTrapReceiver2x2Gateway_Type = IpAddress
_WtTrapReceiver2x2Gateway_Object = MibScalar
wtTrapReceiver2x2Gateway = _WtTrapReceiver2x2Gateway_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1, 3),
    _WtTrapReceiver2x2Gateway_Type()
)
wtTrapReceiver2x2Gateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Gateway.setStatus("mandatory")
_WtTrapReceiver2x2DnsServer1_Type = OctetString
_WtTrapReceiver2x2DnsServer1_Object = MibScalar
wtTrapReceiver2x2DnsServer1 = _WtTrapReceiver2x2DnsServer1_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1, 4),
    _WtTrapReceiver2x2DnsServer1_Type()
)
wtTrapReceiver2x2DnsServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DnsServer1.setStatus("mandatory")
_WtTrapReceiver2x2DnsServer2_Type = OctetString
_WtTrapReceiver2x2DnsServer2_Object = MibScalar
wtTrapReceiver2x2DnsServer2 = _WtTrapReceiver2x2DnsServer2_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1, 5),
    _WtTrapReceiver2x2DnsServer2_Type()
)
wtTrapReceiver2x2DnsServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DnsServer2.setStatus("mandatory")
_WtTrapReceiver2x2AddConfig_Type = OctetString
_WtTrapReceiver2x2AddConfig_Object = MibScalar
wtTrapReceiver2x2AddConfig = _WtTrapReceiver2x2AddConfig_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 1, 6),
    _WtTrapReceiver2x2AddConfig_Type()
)
wtTrapReceiver2x2AddConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2AddConfig.setStatus("mandatory")
_WtTrapReceiver2x2HTTP_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2HTTP = _WtTrapReceiver2x2HTTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 2)
)


class _WtTrapReceiver2x2HttpPort_Type(Integer32):
    """Custom type wtTrapReceiver2x2HttpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65534),
    )


_WtTrapReceiver2x2HttpPort_Type.__name__ = "Integer32"
_WtTrapReceiver2x2HttpPort_Object = MibScalar
wtTrapReceiver2x2HttpPort = _WtTrapReceiver2x2HttpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 2, 4),
    _WtTrapReceiver2x2HttpPort_Type()
)
wtTrapReceiver2x2HttpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2HttpPort.setStatus("mandatory")
_WtTrapReceiver2x2Mail_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Mail = _WtTrapReceiver2x2Mail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3)
)
_WtTrapReceiver2x2MailAdName_Type = OctetString
_WtTrapReceiver2x2MailAdName_Object = MibScalar
wtTrapReceiver2x2MailAdName = _WtTrapReceiver2x2MailAdName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 1),
    _WtTrapReceiver2x2MailAdName_Type()
)
wtTrapReceiver2x2MailAdName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailAdName.setStatus("mandatory")
_WtTrapReceiver2x2MailReply_Type = OctetString
_WtTrapReceiver2x2MailReply_Object = MibScalar
wtTrapReceiver2x2MailReply = _WtTrapReceiver2x2MailReply_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 2),
    _WtTrapReceiver2x2MailReply_Type()
)
wtTrapReceiver2x2MailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailReply.setStatus("mandatory")
_WtTrapReceiver2x2MailServer_Type = OctetString
_WtTrapReceiver2x2MailServer_Object = MibScalar
wtTrapReceiver2x2MailServer = _WtTrapReceiver2x2MailServer_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 3),
    _WtTrapReceiver2x2MailServer_Type()
)
wtTrapReceiver2x2MailServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailServer.setStatus("mandatory")
_WtTrapReceiver2x2MailEnable_Type = OctetString
_WtTrapReceiver2x2MailEnable_Object = MibScalar
wtTrapReceiver2x2MailEnable = _WtTrapReceiver2x2MailEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 4),
    _WtTrapReceiver2x2MailEnable_Type()
)
wtTrapReceiver2x2MailEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailEnable.setStatus("mandatory")


class _WtTrapReceiver2x2MailAuthentication_Type(OctetString):
    """Custom type wtTrapReceiver2x2MailAuthentication based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2MailAuthentication_Type.__name__ = "OctetString"
_WtTrapReceiver2x2MailAuthentication_Object = MibScalar
wtTrapReceiver2x2MailAuthentication = _WtTrapReceiver2x2MailAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 5),
    _WtTrapReceiver2x2MailAuthentication_Type()
)
wtTrapReceiver2x2MailAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailAuthentication.setStatus("mandatory")
_WtTrapReceiver2x2MailAuthUser_Type = OctetString
_WtTrapReceiver2x2MailAuthUser_Object = MibScalar
wtTrapReceiver2x2MailAuthUser = _WtTrapReceiver2x2MailAuthUser_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 6),
    _WtTrapReceiver2x2MailAuthUser_Type()
)
wtTrapReceiver2x2MailAuthUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailAuthUser.setStatus("mandatory")
_WtTrapReceiver2x2MailAuthPassword_Type = OctetString
_WtTrapReceiver2x2MailAuthPassword_Object = MibScalar
wtTrapReceiver2x2MailAuthPassword = _WtTrapReceiver2x2MailAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 7),
    _WtTrapReceiver2x2MailAuthPassword_Type()
)
wtTrapReceiver2x2MailAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailAuthPassword.setStatus("mandatory")
_WtTrapReceiver2x2MailPop3Server_Type = OctetString
_WtTrapReceiver2x2MailPop3Server_Object = MibScalar
wtTrapReceiver2x2MailPop3Server = _WtTrapReceiver2x2MailPop3Server_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 3, 8),
    _WtTrapReceiver2x2MailPop3Server_Type()
)
wtTrapReceiver2x2MailPop3Server.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MailPop3Server.setStatus("mandatory")
_WtTrapReceiver2x2SNMP_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2SNMP = _WtTrapReceiver2x2SNMP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 4)
)
_WtTrapReceiver2x2SnmpEnable_Type = OctetString
_WtTrapReceiver2x2SnmpEnable_Object = MibScalar
wtTrapReceiver2x2SnmpEnable = _WtTrapReceiver2x2SnmpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 4, 1),
    _WtTrapReceiver2x2SnmpEnable_Type()
)
wtTrapReceiver2x2SnmpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SnmpEnable.setStatus("mandatory")
_WtTrapReceiver2x2SnmpCommunityStringRead_Type = OctetString
_WtTrapReceiver2x2SnmpCommunityStringRead_Object = MibScalar
wtTrapReceiver2x2SnmpCommunityStringRead = _WtTrapReceiver2x2SnmpCommunityStringRead_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 4, 2),
    _WtTrapReceiver2x2SnmpCommunityStringRead_Type()
)
wtTrapReceiver2x2SnmpCommunityStringRead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SnmpCommunityStringRead.setStatus("mandatory")
_WtTrapReceiver2x2SnmpCommunityStringReadWrite_Type = OctetString
_WtTrapReceiver2x2SnmpCommunityStringReadWrite_Object = MibScalar
wtTrapReceiver2x2SnmpCommunityStringReadWrite = _WtTrapReceiver2x2SnmpCommunityStringReadWrite_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 4, 3),
    _WtTrapReceiver2x2SnmpCommunityStringReadWrite_Type()
)
wtTrapReceiver2x2SnmpCommunityStringReadWrite.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SnmpCommunityStringReadWrite.setStatus("mandatory")
_WtTrapReceiver2x2SnmpSystemTrapManagerIP_Type = OctetString
_WtTrapReceiver2x2SnmpSystemTrapManagerIP_Object = MibScalar
wtTrapReceiver2x2SnmpSystemTrapManagerIP = _WtTrapReceiver2x2SnmpSystemTrapManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 4, 4),
    _WtTrapReceiver2x2SnmpSystemTrapManagerIP_Type()
)
wtTrapReceiver2x2SnmpSystemTrapManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SnmpSystemTrapManagerIP.setStatus("mandatory")


class _WtTrapReceiver2x2SnmpSystemTrapEnable_Type(OctetString):
    """Custom type wtTrapReceiver2x2SnmpSystemTrapEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2SnmpSystemTrapEnable_Type.__name__ = "OctetString"
_WtTrapReceiver2x2SnmpSystemTrapEnable_Object = MibScalar
wtTrapReceiver2x2SnmpSystemTrapEnable = _WtTrapReceiver2x2SnmpSystemTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 4, 5),
    _WtTrapReceiver2x2SnmpSystemTrapEnable_Type()
)
wtTrapReceiver2x2SnmpSystemTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SnmpSystemTrapEnable.setStatus("mandatory")
_WtTrapReceiver2x2UDP_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2UDP = _WtTrapReceiver2x2UDP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 5)
)
_WtTrapReceiver2x2UdpAdminPort_Type = Integer32
_WtTrapReceiver2x2UdpAdminPort_Object = MibScalar
wtTrapReceiver2x2UdpAdminPort = _WtTrapReceiver2x2UdpAdminPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 5, 1),
    _WtTrapReceiver2x2UdpAdminPort_Type()
)
wtTrapReceiver2x2UdpAdminPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2UdpAdminPort.setStatus("mandatory")
_WtTrapReceiver2x2UdpEnable_Type = OctetString
_WtTrapReceiver2x2UdpEnable_Object = MibScalar
wtTrapReceiver2x2UdpEnable = _WtTrapReceiver2x2UdpEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 5, 2),
    _WtTrapReceiver2x2UdpEnable_Type()
)
wtTrapReceiver2x2UdpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2UdpEnable.setStatus("mandatory")
_WtTrapReceiver2x2UdpRemotePort_Type = Integer32
_WtTrapReceiver2x2UdpRemotePort_Object = MibScalar
wtTrapReceiver2x2UdpRemotePort = _WtTrapReceiver2x2UdpRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 5, 3),
    _WtTrapReceiver2x2UdpRemotePort_Type()
)
wtTrapReceiver2x2UdpRemotePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2UdpRemotePort.setStatus("mandatory")
_WtTrapReceiver2x2Syslog_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Syslog = _WtTrapReceiver2x2Syslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 7)
)
_WtTrapReceiver2x2SyslogServerIP_Type = OctetString
_WtTrapReceiver2x2SyslogServerIP_Object = MibScalar
wtTrapReceiver2x2SyslogServerIP = _WtTrapReceiver2x2SyslogServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 7, 1),
    _WtTrapReceiver2x2SyslogServerIP_Type()
)
wtTrapReceiver2x2SyslogServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SyslogServerIP.setStatus("mandatory")
_WtTrapReceiver2x2SyslogServerPort_Type = Integer32
_WtTrapReceiver2x2SyslogServerPort_Object = MibScalar
wtTrapReceiver2x2SyslogServerPort = _WtTrapReceiver2x2SyslogServerPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 7, 2),
    _WtTrapReceiver2x2SyslogServerPort_Type()
)
wtTrapReceiver2x2SyslogServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SyslogServerPort.setStatus("mandatory")


class _WtTrapReceiver2x2SyslogSystemMessagesEnable_Type(OctetString):
    """Custom type wtTrapReceiver2x2SyslogSystemMessagesEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2SyslogSystemMessagesEnable_Type.__name__ = "OctetString"
_WtTrapReceiver2x2SyslogSystemMessagesEnable_Object = MibScalar
wtTrapReceiver2x2SyslogSystemMessagesEnable = _WtTrapReceiver2x2SyslogSystemMessagesEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 7, 3),
    _WtTrapReceiver2x2SyslogSystemMessagesEnable_Type()
)
wtTrapReceiver2x2SyslogSystemMessagesEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SyslogSystemMessagesEnable.setStatus("mandatory")
_WtTrapReceiver2x2SyslogEnable_Type = OctetString
_WtTrapReceiver2x2SyslogEnable_Object = MibScalar
wtTrapReceiver2x2SyslogEnable = _WtTrapReceiver2x2SyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 7, 4),
    _WtTrapReceiver2x2SyslogEnable_Type()
)
wtTrapReceiver2x2SyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SyslogEnable.setStatus("mandatory")
_WtTrapReceiver2x2FTP_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2FTP = _WtTrapReceiver2x2FTP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8)
)
_WtTrapReceiver2x2FTPServerIP_Type = OctetString
_WtTrapReceiver2x2FTPServerIP_Object = MibScalar
wtTrapReceiver2x2FTPServerIP = _WtTrapReceiver2x2FTPServerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 1),
    _WtTrapReceiver2x2FTPServerIP_Type()
)
wtTrapReceiver2x2FTPServerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPServerIP.setStatus("mandatory")
_WtTrapReceiver2x2FTPServerControlPort_Type = Integer32
_WtTrapReceiver2x2FTPServerControlPort_Object = MibScalar
wtTrapReceiver2x2FTPServerControlPort = _WtTrapReceiver2x2FTPServerControlPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 2),
    _WtTrapReceiver2x2FTPServerControlPort_Type()
)
wtTrapReceiver2x2FTPServerControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPServerControlPort.setStatus("mandatory")
_WtTrapReceiver2x2FTPUserName_Type = OctetString
_WtTrapReceiver2x2FTPUserName_Object = MibScalar
wtTrapReceiver2x2FTPUserName = _WtTrapReceiver2x2FTPUserName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 3),
    _WtTrapReceiver2x2FTPUserName_Type()
)
wtTrapReceiver2x2FTPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPUserName.setStatus("mandatory")
_WtTrapReceiver2x2FTPPassword_Type = OctetString
_WtTrapReceiver2x2FTPPassword_Object = MibScalar
wtTrapReceiver2x2FTPPassword = _WtTrapReceiver2x2FTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 4),
    _WtTrapReceiver2x2FTPPassword_Type()
)
wtTrapReceiver2x2FTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPPassword.setStatus("mandatory")
_WtTrapReceiver2x2FTPAccount_Type = OctetString
_WtTrapReceiver2x2FTPAccount_Object = MibScalar
wtTrapReceiver2x2FTPAccount = _WtTrapReceiver2x2FTPAccount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 5),
    _WtTrapReceiver2x2FTPAccount_Type()
)
wtTrapReceiver2x2FTPAccount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPAccount.setStatus("mandatory")
_WtTrapReceiver2x2FTPOption_Type = OctetString
_WtTrapReceiver2x2FTPOption_Object = MibScalar
wtTrapReceiver2x2FTPOption = _WtTrapReceiver2x2FTPOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 6),
    _WtTrapReceiver2x2FTPOption_Type()
)
wtTrapReceiver2x2FTPOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPOption.setStatus("mandatory")
_WtTrapReceiver2x2FTPEnable_Type = OctetString
_WtTrapReceiver2x2FTPEnable_Object = MibScalar
wtTrapReceiver2x2FTPEnable = _WtTrapReceiver2x2FTPEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 3, 8, 7),
    _WtTrapReceiver2x2FTPEnable_Type()
)
wtTrapReceiver2x2FTPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2FTPEnable.setStatus("mandatory")
_WtTrapReceiver2x2OutputMode_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2OutputMode = _WtTrapReceiver2x2OutputMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 4)
)
_WtTrapReceiver2x2PowerSupplyEnable_Type = OctetString
_WtTrapReceiver2x2PowerSupplyEnable_Object = MibScalar
wtTrapReceiver2x2PowerSupplyEnable = _WtTrapReceiver2x2PowerSupplyEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 4, 4),
    _WtTrapReceiver2x2PowerSupplyEnable_Type()
)
wtTrapReceiver2x2PowerSupplyEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PowerSupplyEnable.setStatus("mandatory")
_WtTrapReceiver2x2Action_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Action = _WtTrapReceiver2x2Action_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5)
)


class _WtTrapReceiver2x2ActionCount_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtTrapReceiver2x2ActionCount_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionCount_Object = MibScalar
wtTrapReceiver2x2ActionCount = _WtTrapReceiver2x2ActionCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 1),
    _WtTrapReceiver2x2ActionCount_Type()
)
wtTrapReceiver2x2ActionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionCount.setStatus("mandatory")
_WtTrapReceiver2x2ActionIfTable_Object = MibTable
wtTrapReceiver2x2ActionIfTable = _WtTrapReceiver2x2ActionIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionIfTable.setStatus("mandatory")
_WtTrapReceiver2x2ActionIfEntry_Object = MibTableRow
wtTrapReceiver2x2ActionIfEntry = _WtTrapReceiver2x2ActionIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 2, 1)
)
wtTrapReceiver2x2ActionIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionIfEntry.setStatus("mandatory")


class _WtTrapReceiver2x2ActionNo_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WtTrapReceiver2x2ActionNo_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionNo_Object = MibTableColumn
wtTrapReceiver2x2ActionNo = _WtTrapReceiver2x2ActionNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 2, 1, 1),
    _WtTrapReceiver2x2ActionNo_Type()
)
wtTrapReceiver2x2ActionNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionNo.setStatus("mandatory")
_WtTrapReceiver2x2ActionTable_Object = MibTable
wtTrapReceiver2x2ActionTable = _WtTrapReceiver2x2ActionTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionTable.setStatus("mandatory")
_WtTrapReceiver2x2ActionEntry_Object = MibTableRow
wtTrapReceiver2x2ActionEntry = _WtTrapReceiver2x2ActionEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1)
)
wtTrapReceiver2x2ActionEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionEntry.setStatus("mandatory")


class _WtTrapReceiver2x2ActionInputTrigger_Type(OctetString):
    """Custom type wtTrapReceiver2x2ActionInputTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtTrapReceiver2x2ActionInputTrigger_Type.__name__ = "OctetString"
_WtTrapReceiver2x2ActionInputTrigger_Object = MibTableColumn
wtTrapReceiver2x2ActionInputTrigger = _WtTrapReceiver2x2ActionInputTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 1),
    _WtTrapReceiver2x2ActionInputTrigger_Type()
)
wtTrapReceiver2x2ActionInputTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionInputTrigger.setStatus("mandatory")
_WtTrapReceiver2x2ActionInterval_Type = OctetString
_WtTrapReceiver2x2ActionInterval_Object = MibTableColumn
wtTrapReceiver2x2ActionInterval = _WtTrapReceiver2x2ActionInterval_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 5),
    _WtTrapReceiver2x2ActionInterval_Type()
)
wtTrapReceiver2x2ActionInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionInterval.setStatus("mandatory")


class _WtTrapReceiver2x2ActionEnable_Type(OctetString):
    """Custom type wtTrapReceiver2x2ActionEnable based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2ActionEnable_Type.__name__ = "OctetString"
_WtTrapReceiver2x2ActionEnable_Object = MibTableColumn
wtTrapReceiver2x2ActionEnable = _WtTrapReceiver2x2ActionEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 6),
    _WtTrapReceiver2x2ActionEnable_Type()
)
wtTrapReceiver2x2ActionEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionEnable.setStatus("mandatory")
_WtTrapReceiver2x2ActionMailAddr_Type = OctetString
_WtTrapReceiver2x2ActionMailAddr_Object = MibTableColumn
wtTrapReceiver2x2ActionMailAddr = _WtTrapReceiver2x2ActionMailAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 7),
    _WtTrapReceiver2x2ActionMailAddr_Type()
)
wtTrapReceiver2x2ActionMailAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionMailAddr.setStatus("mandatory")
_WtTrapReceiver2x2ActionMailSubject_Type = OctetString
_WtTrapReceiver2x2ActionMailSubject_Object = MibTableColumn
wtTrapReceiver2x2ActionMailSubject = _WtTrapReceiver2x2ActionMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 8),
    _WtTrapReceiver2x2ActionMailSubject_Type()
)
wtTrapReceiver2x2ActionMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionMailSubject.setStatus("mandatory")
_WtTrapReceiver2x2ActionMailText_Type = OctetString
_WtTrapReceiver2x2ActionMailText_Object = MibTableColumn
wtTrapReceiver2x2ActionMailText = _WtTrapReceiver2x2ActionMailText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 9),
    _WtTrapReceiver2x2ActionMailText_Type()
)
wtTrapReceiver2x2ActionMailText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionMailText.setStatus("mandatory")
_WtTrapReceiver2x2ActionSnmpManagerIP_Type = OctetString
_WtTrapReceiver2x2ActionSnmpManagerIP_Object = MibTableColumn
wtTrapReceiver2x2ActionSnmpManagerIP = _WtTrapReceiver2x2ActionSnmpManagerIP_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 10),
    _WtTrapReceiver2x2ActionSnmpManagerIP_Type()
)
wtTrapReceiver2x2ActionSnmpManagerIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSnmpManagerIP.setStatus("mandatory")
_WtTrapReceiver2x2ActionSnmpTrapText_Type = OctetString
_WtTrapReceiver2x2ActionSnmpTrapText_Object = MibTableColumn
wtTrapReceiver2x2ActionSnmpTrapText = _WtTrapReceiver2x2ActionSnmpTrapText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 11),
    _WtTrapReceiver2x2ActionSnmpTrapText_Type()
)
wtTrapReceiver2x2ActionSnmpTrapText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSnmpTrapText.setStatus("mandatory")
_WtTrapReceiver2x2ActionUdpIpAddr_Type = OctetString
_WtTrapReceiver2x2ActionUdpIpAddr_Object = MibTableColumn
wtTrapReceiver2x2ActionUdpIpAddr = _WtTrapReceiver2x2ActionUdpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 12),
    _WtTrapReceiver2x2ActionUdpIpAddr_Type()
)
wtTrapReceiver2x2ActionUdpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionUdpIpAddr.setStatus("mandatory")


class _WtTrapReceiver2x2ActionUdpPort_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtTrapReceiver2x2ActionUdpPort_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionUdpPort_Object = MibTableColumn
wtTrapReceiver2x2ActionUdpPort = _WtTrapReceiver2x2ActionUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 13),
    _WtTrapReceiver2x2ActionUdpPort_Type()
)
wtTrapReceiver2x2ActionUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionUdpPort.setStatus("mandatory")
_WtTrapReceiver2x2ActionUdpText_Type = OctetString
_WtTrapReceiver2x2ActionUdpText_Object = MibTableColumn
wtTrapReceiver2x2ActionUdpText = _WtTrapReceiver2x2ActionUdpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 14),
    _WtTrapReceiver2x2ActionUdpText_Type()
)
wtTrapReceiver2x2ActionUdpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionUdpText.setStatus("mandatory")
_WtTrapReceiver2x2ActionTcpIpAddr_Type = OctetString
_WtTrapReceiver2x2ActionTcpIpAddr_Object = MibTableColumn
wtTrapReceiver2x2ActionTcpIpAddr = _WtTrapReceiver2x2ActionTcpIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 15),
    _WtTrapReceiver2x2ActionTcpIpAddr_Type()
)
wtTrapReceiver2x2ActionTcpIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionTcpIpAddr.setStatus("mandatory")


class _WtTrapReceiver2x2ActionTcpPort_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtTrapReceiver2x2ActionTcpPort_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionTcpPort_Object = MibTableColumn
wtTrapReceiver2x2ActionTcpPort = _WtTrapReceiver2x2ActionTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 16),
    _WtTrapReceiver2x2ActionTcpPort_Type()
)
wtTrapReceiver2x2ActionTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionTcpPort.setStatus("mandatory")
_WtTrapReceiver2x2ActionTcpText_Type = OctetString
_WtTrapReceiver2x2ActionTcpText_Object = MibTableColumn
wtTrapReceiver2x2ActionTcpText = _WtTrapReceiver2x2ActionTcpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 17),
    _WtTrapReceiver2x2ActionTcpText_Type()
)
wtTrapReceiver2x2ActionTcpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionTcpText.setStatus("mandatory")
_WtTrapReceiver2x2ActionSyslogIpAddr_Type = OctetString
_WtTrapReceiver2x2ActionSyslogIpAddr_Object = MibTableColumn
wtTrapReceiver2x2ActionSyslogIpAddr = _WtTrapReceiver2x2ActionSyslogIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 18),
    _WtTrapReceiver2x2ActionSyslogIpAddr_Type()
)
wtTrapReceiver2x2ActionSyslogIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSyslogIpAddr.setStatus("mandatory")


class _WtTrapReceiver2x2ActionSyslogPort_Type(Integer32):
    """Custom type wtTrapReceiver2x2ActionSyslogPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WtTrapReceiver2x2ActionSyslogPort_Type.__name__ = "Integer32"
_WtTrapReceiver2x2ActionSyslogPort_Object = MibTableColumn
wtTrapReceiver2x2ActionSyslogPort = _WtTrapReceiver2x2ActionSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 19),
    _WtTrapReceiver2x2ActionSyslogPort_Type()
)
wtTrapReceiver2x2ActionSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSyslogPort.setStatus("mandatory")
_WtTrapReceiver2x2ActionSyslogText_Type = OctetString
_WtTrapReceiver2x2ActionSyslogText_Object = MibTableColumn
wtTrapReceiver2x2ActionSyslogText = _WtTrapReceiver2x2ActionSyslogText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 20),
    _WtTrapReceiver2x2ActionSyslogText_Type()
)
wtTrapReceiver2x2ActionSyslogText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSyslogText.setStatus("mandatory")
_WtTrapReceiver2x2ActionFtpDataPort_Type = OctetString
_WtTrapReceiver2x2ActionFtpDataPort_Object = MibTableColumn
wtTrapReceiver2x2ActionFtpDataPort = _WtTrapReceiver2x2ActionFtpDataPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 21),
    _WtTrapReceiver2x2ActionFtpDataPort_Type()
)
wtTrapReceiver2x2ActionFtpDataPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionFtpDataPort.setStatus("mandatory")
_WtTrapReceiver2x2ActionFtpFileName_Type = OctetString
_WtTrapReceiver2x2ActionFtpFileName_Object = MibTableColumn
wtTrapReceiver2x2ActionFtpFileName = _WtTrapReceiver2x2ActionFtpFileName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 22),
    _WtTrapReceiver2x2ActionFtpFileName_Type()
)
wtTrapReceiver2x2ActionFtpFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionFtpFileName.setStatus("mandatory")
_WtTrapReceiver2x2ActionFtpText_Type = OctetString
_WtTrapReceiver2x2ActionFtpText_Object = MibTableColumn
wtTrapReceiver2x2ActionFtpText = _WtTrapReceiver2x2ActionFtpText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 23),
    _WtTrapReceiver2x2ActionFtpText_Type()
)
wtTrapReceiver2x2ActionFtpText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionFtpText.setStatus("mandatory")


class _WtTrapReceiver2x2ActionFtpOption_Type(OctetString):
    """Custom type wtTrapReceiver2x2ActionFtpOption based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2ActionFtpOption_Type.__name__ = "OctetString"
_WtTrapReceiver2x2ActionFtpOption_Object = MibTableColumn
wtTrapReceiver2x2ActionFtpOption = _WtTrapReceiver2x2ActionFtpOption_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 24),
    _WtTrapReceiver2x2ActionFtpOption_Type()
)
wtTrapReceiver2x2ActionFtpOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionFtpOption.setStatus("mandatory")
_WtTrapReceiver2x2ActionTimerCron_Type = OctetString
_WtTrapReceiver2x2ActionTimerCron_Object = MibTableColumn
wtTrapReceiver2x2ActionTimerCron = _WtTrapReceiver2x2ActionTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 25),
    _WtTrapReceiver2x2ActionTimerCron_Type()
)
wtTrapReceiver2x2ActionTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionTimerCron.setStatus("mandatory")
_WtTrapReceiver2x2ActionName_Type = OctetString
_WtTrapReceiver2x2ActionName_Object = MibTableColumn
wtTrapReceiver2x2ActionName = _WtTrapReceiver2x2ActionName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 33),
    _WtTrapReceiver2x2ActionName_Type()
)
wtTrapReceiver2x2ActionName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionName.setStatus("mandatory")
_WtTrapReceiver2x2ActionGlobalEnable_Type = OctetString
_WtTrapReceiver2x2ActionGlobalEnable_Object = MibTableColumn
wtTrapReceiver2x2ActionGlobalEnable = _WtTrapReceiver2x2ActionGlobalEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 34),
    _WtTrapReceiver2x2ActionGlobalEnable_Type()
)
wtTrapReceiver2x2ActionGlobalEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionGlobalEnable.setStatus("mandatory")


class _WtTrapReceiver2x2ActionSystemTimerTrigger_Type(OctetString):
    """Custom type wtTrapReceiver2x2ActionSystemTimerTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2ActionSystemTimerTrigger_Type.__name__ = "OctetString"
_WtTrapReceiver2x2ActionSystemTimerTrigger_Object = MibTableColumn
wtTrapReceiver2x2ActionSystemTimerTrigger = _WtTrapReceiver2x2ActionSystemTimerTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 55),
    _WtTrapReceiver2x2ActionSystemTimerTrigger_Type()
)
wtTrapReceiver2x2ActionSystemTimerTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSystemTimerTrigger.setStatus("mandatory")


class _WtTrapReceiver2x2ActionSystemButtonTrigger_Type(OctetString):
    """Custom type wtTrapReceiver2x2ActionSystemButtonTrigger based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2ActionSystemButtonTrigger_Type.__name__ = "OctetString"
_WtTrapReceiver2x2ActionSystemButtonTrigger_Object = MibTableColumn
wtTrapReceiver2x2ActionSystemButtonTrigger = _WtTrapReceiver2x2ActionSystemButtonTrigger_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 56),
    _WtTrapReceiver2x2ActionSystemButtonTrigger_Type()
)
wtTrapReceiver2x2ActionSystemButtonTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionSystemButtonTrigger.setStatus("mandatory")


class _WtTrapReceiver2x2ActionOutputAction_Type(OctetString):
    """Custom type wtTrapReceiver2x2ActionOutputAction based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_WtTrapReceiver2x2ActionOutputAction_Type.__name__ = "OctetString"
_WtTrapReceiver2x2ActionOutputAction_Object = MibTableColumn
wtTrapReceiver2x2ActionOutputAction = _WtTrapReceiver2x2ActionOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 5, 3, 1, 57),
    _WtTrapReceiver2x2ActionOutputAction_Type()
)
wtTrapReceiver2x2ActionOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ActionOutputAction.setStatus("mandatory")
_WtTrapReceiver2x2PrepareInEvents_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2PrepareInEvents = _WtTrapReceiver2x2PrepareInEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6)
)
_WtTrapReceiver2x2WatchList_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2WatchList = _WtTrapReceiver2x2WatchList_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1)
)
_WtTrapReceiver2x2WatchListCount_Type = Integer32
_WtTrapReceiver2x2WatchListCount_Object = MibScalar
wtTrapReceiver2x2WatchListCount = _WtTrapReceiver2x2WatchListCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 1),
    _WtTrapReceiver2x2WatchListCount_Type()
)
wtTrapReceiver2x2WatchListCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListCount.setStatus("mandatory")
_WtTrapReceiver2x2WatchListIfTable_Object = MibTable
wtTrapReceiver2x2WatchListIfTable = _WtTrapReceiver2x2WatchListIfTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 2)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListIfTable.setStatus("mandatory")
_WtTrapReceiver2x2WatchListIfEntry_Object = MibTableRow
wtTrapReceiver2x2WatchListIfEntry = _WtTrapReceiver2x2WatchListIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 2, 1)
)
wtTrapReceiver2x2WatchListIfEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2WatchListNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListIfEntry.setStatus("mandatory")


class _WtTrapReceiver2x2WatchListNo_Type(Integer32):
    """Custom type wtTrapReceiver2x2WatchListNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_WtTrapReceiver2x2WatchListNo_Type.__name__ = "Integer32"
_WtTrapReceiver2x2WatchListNo_Object = MibTableColumn
wtTrapReceiver2x2WatchListNo = _WtTrapReceiver2x2WatchListNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 2, 1, 1),
    _WtTrapReceiver2x2WatchListNo_Type()
)
wtTrapReceiver2x2WatchListNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListNo.setStatus("mandatory")
_WtTrapReceiver2x2WatchListTable_Object = MibTable
wtTrapReceiver2x2WatchListTable = _WtTrapReceiver2x2WatchListTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListTable.setStatus("mandatory")
_WtTrapReceiver2x2WatchListEntry_Object = MibTableRow
wtTrapReceiver2x2WatchListEntry = _WtTrapReceiver2x2WatchListEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1)
)
wtTrapReceiver2x2WatchListEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2WatchListNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListEntry.setStatus("mandatory")
_WtTrapReceiver2x2WatchListName_Type = OctetString
_WtTrapReceiver2x2WatchListName_Object = MibTableColumn
wtTrapReceiver2x2WatchListName = _WtTrapReceiver2x2WatchListName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 1),
    _WtTrapReceiver2x2WatchListName_Type()
)
wtTrapReceiver2x2WatchListName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListName.setStatus("mandatory")
_WtTrapReceiver2x2WatchListPort_Type = Integer32
_WtTrapReceiver2x2WatchListPort_Object = MibTableColumn
wtTrapReceiver2x2WatchListPort = _WtTrapReceiver2x2WatchListPort_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 2),
    _WtTrapReceiver2x2WatchListPort_Type()
)
wtTrapReceiver2x2WatchListPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListPort.setStatus("mandatory")
_WtTrapReceiver2x2WatchListService_Type = OctetString
_WtTrapReceiver2x2WatchListService_Object = MibTableColumn
wtTrapReceiver2x2WatchListService = _WtTrapReceiver2x2WatchListService_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 3),
    _WtTrapReceiver2x2WatchListService_Type()
)
wtTrapReceiver2x2WatchListService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListService.setStatus("mandatory")
_WtTrapReceiver2x2WatchListEnable_Type = OctetString
_WtTrapReceiver2x2WatchListEnable_Object = MibTableColumn
wtTrapReceiver2x2WatchListEnable = _WtTrapReceiver2x2WatchListEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 4),
    _WtTrapReceiver2x2WatchListEnable_Type()
)
wtTrapReceiver2x2WatchListEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListEnable.setStatus("mandatory")
_WtTrapReceiver2x2WatchListAlias_Type = OctetString
_WtTrapReceiver2x2WatchListAlias_Object = MibTableColumn
wtTrapReceiver2x2WatchListAlias = _WtTrapReceiver2x2WatchListAlias_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 5),
    _WtTrapReceiver2x2WatchListAlias_Type()
)
wtTrapReceiver2x2WatchListAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListAlias.setStatus("mandatory")


class _WtTrapReceiver2x2WatchListTrapNo_Type(Integer32):
    """Custom type wtTrapReceiver2x2WatchListTrapNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2WatchListTrapNo-AuthFailure", 4),
          ("wtTrapReceiver2x2WatchListTrapNo-ColdStart", 0),
          ("wtTrapReceiver2x2WatchListTrapNo-EPGneighborLoss", 5),
          ("wtTrapReceiver2x2WatchListTrapNo-EnterpriseSpecific", 6),
          ("wtTrapReceiver2x2WatchListTrapNo-LinkDown", 2),
          ("wtTrapReceiver2x2WatchListTrapNo-LinkUp", 3),
          ("wtTrapReceiver2x2WatchListTrapNo-WarmStart", 1),
          ("wtTrapReceiver2x2WatchListTrapNo-WildCard", 7))
    )


_WtTrapReceiver2x2WatchListTrapNo_Type.__name__ = "Integer32"
_WtTrapReceiver2x2WatchListTrapNo_Object = MibTableColumn
wtTrapReceiver2x2WatchListTrapNo = _WtTrapReceiver2x2WatchListTrapNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 6),
    _WtTrapReceiver2x2WatchListTrapNo_Type()
)
wtTrapReceiver2x2WatchListTrapNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListTrapNo.setStatus("mandatory")
_WtTrapReceiver2x2WatchListSpecificNo_Type = Integer32
_WtTrapReceiver2x2WatchListSpecificNo_Object = MibTableColumn
wtTrapReceiver2x2WatchListSpecificNo = _WtTrapReceiver2x2WatchListSpecificNo_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 7),
    _WtTrapReceiver2x2WatchListSpecificNo_Type()
)
wtTrapReceiver2x2WatchListSpecificNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListSpecificNo.setStatus("mandatory")


class _WtTrapReceiver2x2WatchListFacility_Type(Integer32):
    """Custom type wtTrapReceiver2x2WatchListFacility based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2WatchListFacility-Alert", 1),
          ("wtTrapReceiver2x2WatchListFacility-Critical", 2),
          ("wtTrapReceiver2x2WatchListFacility-Debug", 7),
          ("wtTrapReceiver2x2WatchListFacility-Emergency", 0),
          ("wtTrapReceiver2x2WatchListFacility-Error", 3),
          ("wtTrapReceiver2x2WatchListFacility-Informational", 6),
          ("wtTrapReceiver2x2WatchListFacility-Notice", 5),
          ("wtTrapReceiver2x2WatchListFacility-Warning", 4),
          ("wtTrapReceiver2x2WatchListFacility-WildCard", 8))
    )


_WtTrapReceiver2x2WatchListFacility_Type.__name__ = "Integer32"
_WtTrapReceiver2x2WatchListFacility_Object = MibTableColumn
wtTrapReceiver2x2WatchListFacility = _WtTrapReceiver2x2WatchListFacility_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 8),
    _WtTrapReceiver2x2WatchListFacility_Type()
)
wtTrapReceiver2x2WatchListFacility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListFacility.setStatus("mandatory")


class _WtTrapReceiver2x2WatchListSeverity_Type(Integer32):
    """Custom type wtTrapReceiver2x2WatchListSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24)
        )
    )
    namedValues = NamedValues(
        *(("wtTrapReceiver2x2WatchListSeverity-FTP_daemon", 11),
          ("wtTrapReceiver2x2WatchListSeverity-NTP_subsystem", 12),
          ("wtTrapReceiver2x2WatchListSeverity-UUCP_subsystem", 8),
          ("wtTrapReceiver2x2WatchListSeverity-WildCard", 24),
          ("wtTrapReceiver2x2WatchListSeverity-clock_daemon", 9),
          ("wtTrapReceiver2x2WatchListSeverity-clock_daemon_15", 15),
          ("wtTrapReceiver2x2WatchListSeverity-kernel_messages", 0),
          ("wtTrapReceiver2x2WatchListSeverity-line_printer_subsystem", 6),
          ("wtTrapReceiver2x2WatchListSeverity-local0", 16),
          ("wtTrapReceiver2x2WatchListSeverity-local1", 17),
          ("wtTrapReceiver2x2WatchListSeverity-local2", 18),
          ("wtTrapReceiver2x2WatchListSeverity-local3", 19),
          ("wtTrapReceiver2x2WatchListSeverity-local4", 20),
          ("wtTrapReceiver2x2WatchListSeverity-local5", 21),
          ("wtTrapReceiver2x2WatchListSeverity-local6", 22),
          ("wtTrapReceiver2x2WatchListSeverity-local7", 23),
          ("wtTrapReceiver2x2WatchListSeverity-log_alert", 14),
          ("wtTrapReceiver2x2WatchListSeverity-log_audit", 13),
          ("wtTrapReceiver2x2WatchListSeverity-mail_system", 2),
          ("wtTrapReceiver2x2WatchListSeverity-messages_generated_internaly_by_syslogd", 5),
          ("wtTrapReceiver2x2WatchListSeverity-network_news_subsystem", 7),
          ("wtTrapReceiver2x2WatchListSeverity-security_authorization_messages", 4),
          ("wtTrapReceiver2x2WatchListSeverity-security_authorization_messages_private", 10),
          ("wtTrapReceiver2x2WatchListSeverity-system_daemons", 3),
          ("wtTrapReceiver2x2WatchListSeverity-user_level_messages", 1))
    )


_WtTrapReceiver2x2WatchListSeverity_Type.__name__ = "Integer32"
_WtTrapReceiver2x2WatchListSeverity_Object = MibTableColumn
wtTrapReceiver2x2WatchListSeverity = _WtTrapReceiver2x2WatchListSeverity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 1, 3, 1, 9),
    _WtTrapReceiver2x2WatchListSeverity_Type()
)
wtTrapReceiver2x2WatchListSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2WatchListSeverity.setStatus("mandatory")
_WtTrapReceiver2x2InEvSystemTimer_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2InEvSystemTimer = _WtTrapReceiver2x2InEvSystemTimer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 2)
)
_WtTrapReceiver2x2SystemTimerPortTable_Object = MibTable
wtTrapReceiver2x2SystemTimerPortTable = _WtTrapReceiver2x2SystemTimerPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 2, 1)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SystemTimerPortTable.setStatus("mandatory")
_WtTrapReceiver2x2SystemTimerPortEntry_Object = MibTableRow
wtTrapReceiver2x2SystemTimerPortEntry = _WtTrapReceiver2x2SystemTimerPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 2, 1, 1)
)
wtTrapReceiver2x2SystemTimerPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2SystemTimerNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2SystemTimerPortEntry.setStatus("mandatory")
_WtTrapReceiver2x2PortSystemTimerEnable_Type = OctetString
_WtTrapReceiver2x2PortSystemTimerEnable_Object = MibTableColumn
wtTrapReceiver2x2PortSystemTimerEnable = _WtTrapReceiver2x2PortSystemTimerEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 2, 1, 1, 1),
    _WtTrapReceiver2x2PortSystemTimerEnable_Type()
)
wtTrapReceiver2x2PortSystemTimerEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortSystemTimerEnable.setStatus("mandatory")
_WtTrapReceiver2x2PortSystemTimerName_Type = OctetString
_WtTrapReceiver2x2PortSystemTimerName_Object = MibTableColumn
wtTrapReceiver2x2PortSystemTimerName = _WtTrapReceiver2x2PortSystemTimerName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 2, 1, 1, 2),
    _WtTrapReceiver2x2PortSystemTimerName_Type()
)
wtTrapReceiver2x2PortSystemTimerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortSystemTimerName.setStatus("mandatory")
_WtTrapReceiver2x2PortSystemTimerCron_Type = OctetString
_WtTrapReceiver2x2PortSystemTimerCron_Object = MibTableColumn
wtTrapReceiver2x2PortSystemTimerCron = _WtTrapReceiver2x2PortSystemTimerCron_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 2, 1, 1, 3),
    _WtTrapReceiver2x2PortSystemTimerCron_Type()
)
wtTrapReceiver2x2PortSystemTimerCron.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortSystemTimerCron.setStatus("mandatory")
_WtTrapReceiver2x2InEvButtons_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2InEvButtons = _WtTrapReceiver2x2InEvButtons_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3)
)
_WtTrapReceiver2x2ButtonPortTable_Object = MibTable
wtTrapReceiver2x2ButtonPortTable = _WtTrapReceiver2x2ButtonPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3, 1)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ButtonPortTable.setStatus("mandatory")
_WtTrapReceiver2x2ButtonPortEntry_Object = MibTableRow
wtTrapReceiver2x2ButtonPortEntry = _WtTrapReceiver2x2ButtonPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3, 1, 1)
)
wtTrapReceiver2x2ButtonPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2ButtonNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2ButtonPortEntry.setStatus("mandatory")
_WtTrapReceiver2x2PortButtonEnable_Type = OctetString
_WtTrapReceiver2x2PortButtonEnable_Object = MibTableColumn
wtTrapReceiver2x2PortButtonEnable = _WtTrapReceiver2x2PortButtonEnable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3, 1, 1, 1),
    _WtTrapReceiver2x2PortButtonEnable_Type()
)
wtTrapReceiver2x2PortButtonEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortButtonEnable.setStatus("mandatory")
_WtTrapReceiver2x2PortButtonName_Type = OctetString
_WtTrapReceiver2x2PortButtonName_Object = MibTableColumn
wtTrapReceiver2x2PortButtonName = _WtTrapReceiver2x2PortButtonName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3, 1, 1, 2),
    _WtTrapReceiver2x2PortButtonName_Type()
)
wtTrapReceiver2x2PortButtonName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortButtonName.setStatus("mandatory")
_WtTrapReceiver2x2PortButtonText_Type = OctetString
_WtTrapReceiver2x2PortButtonText_Object = MibTableColumn
wtTrapReceiver2x2PortButtonText = _WtTrapReceiver2x2PortButtonText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3, 1, 1, 3),
    _WtTrapReceiver2x2PortButtonText_Type()
)
wtTrapReceiver2x2PortButtonText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortButtonText.setStatus("mandatory")
_WtTrapReceiver2x2PortButtonAccess_Type = OctetString
_WtTrapReceiver2x2PortButtonAccess_Object = MibTableColumn
wtTrapReceiver2x2PortButtonAccess = _WtTrapReceiver2x2PortButtonAccess_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 3, 1, 1, 4),
    _WtTrapReceiver2x2PortButtonAccess_Type()
)
wtTrapReceiver2x2PortButtonAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortButtonAccess.setStatus("mandatory")
_WtTrapReceiver2x2InEvInputs_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2InEvInputs = _WtTrapReceiver2x2InEvInputs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 4)
)
_WtTrapReceiver2x2InputPortTable_Object = MibTable
wtTrapReceiver2x2InputPortTable = _WtTrapReceiver2x2InputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 4, 1)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputPortTable.setStatus("mandatory")
_WtTrapReceiver2x2InputPortEntry_Object = MibTableRow
wtTrapReceiver2x2InputPortEntry = _WtTrapReceiver2x2InputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 4, 1, 1)
)
wtTrapReceiver2x2InputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2InputNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2InputPortEntry.setStatus("mandatory")
_WtTrapReceiver2x2PortInputName_Type = OctetString
_WtTrapReceiver2x2PortInputName_Object = MibTableColumn
wtTrapReceiver2x2PortInputName = _WtTrapReceiver2x2PortInputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 4, 1, 1, 1),
    _WtTrapReceiver2x2PortInputName_Type()
)
wtTrapReceiver2x2PortInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortInputName.setStatus("mandatory")
_WtTrapReceiver2x2PortInputText_Type = OctetString
_WtTrapReceiver2x2PortInputText_Object = MibTableColumn
wtTrapReceiver2x2PortInputText = _WtTrapReceiver2x2PortInputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 4, 1, 1, 2),
    _WtTrapReceiver2x2PortInputText_Type()
)
wtTrapReceiver2x2PortInputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortInputText.setStatus("mandatory")
_WtTrapReceiver2x2PortInputFilter_Type = Integer32
_WtTrapReceiver2x2PortInputFilter_Object = MibTableColumn
wtTrapReceiver2x2PortInputFilter = _WtTrapReceiver2x2PortInputFilter_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 6, 4, 1, 1, 4),
    _WtTrapReceiver2x2PortInputFilter_Type()
)
wtTrapReceiver2x2PortInputFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortInputFilter.setStatus("mandatory")
_WtTrapReceiver2x2PrepareOutEvents_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2PrepareOutEvents = _WtTrapReceiver2x2PrepareOutEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7)
)
_WtTrapReceiver2x2OutEvOutputs_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2OutEvOutputs = _WtTrapReceiver2x2OutEvOutputs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1)
)
_WtTrapReceiver2x2OutputPortTable_Object = MibTable
wtTrapReceiver2x2OutputPortTable = _WtTrapReceiver2x2OutputPortTable_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1, 1)
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputPortTable.setStatus("mandatory")
_WtTrapReceiver2x2OutputPortEntry_Object = MibTableRow
wtTrapReceiver2x2OutputPortEntry = _WtTrapReceiver2x2OutputPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1, 1, 1)
)
wtTrapReceiver2x2OutputPortEntry.setIndexNames(
    (0, "Webio-Digital-MIB-US", "wtTrapReceiver2x2OutputNo"),
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2OutputPortEntry.setStatus("mandatory")
_WtTrapReceiver2x2PortOutputName_Type = OctetString
_WtTrapReceiver2x2PortOutputName_Object = MibTableColumn
wtTrapReceiver2x2PortOutputName = _WtTrapReceiver2x2PortOutputName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1, 1, 1, 1),
    _WtTrapReceiver2x2PortOutputName_Type()
)
wtTrapReceiver2x2PortOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortOutputName.setStatus("mandatory")
_WtTrapReceiver2x2PortOutputText_Type = OctetString
_WtTrapReceiver2x2PortOutputText_Object = MibTableColumn
wtTrapReceiver2x2PortOutputText = _WtTrapReceiver2x2PortOutputText_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1, 1, 1, 2),
    _WtTrapReceiver2x2PortOutputText_Type()
)
wtTrapReceiver2x2PortOutputText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortOutputText.setStatus("mandatory")
_WtTrapReceiver2x2PortPulseDuration_Type = Integer32
_WtTrapReceiver2x2PortPulseDuration_Object = MibTableColumn
wtTrapReceiver2x2PortPulseDuration = _WtTrapReceiver2x2PortPulseDuration_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1, 1, 1, 9),
    _WtTrapReceiver2x2PortPulseDuration_Type()
)
wtTrapReceiver2x2PortPulseDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortPulseDuration.setStatus("mandatory")


class _WtTrapReceiver2x2PortPulsePolarity_Type(OctetString):
    """Custom type wtTrapReceiver2x2PortPulsePolarity based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_WtTrapReceiver2x2PortPulsePolarity_Type.__name__ = "OctetString"
_WtTrapReceiver2x2PortPulsePolarity_Object = MibTableColumn
wtTrapReceiver2x2PortPulsePolarity = _WtTrapReceiver2x2PortPulsePolarity_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 1, 7, 1, 1, 1, 10),
    _WtTrapReceiver2x2PortPulsePolarity_Type()
)
wtTrapReceiver2x2PortPulsePolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2PortPulsePolarity.setStatus("mandatory")
_WtTrapReceiver2x2Ports_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Ports = _WtTrapReceiver2x2Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 2)
)
_WtTrapReceiver2x2Manufact_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Manufact = _WtTrapReceiver2x2Manufact_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 3)
)
_WtTrapReceiver2x2MfName_Type = OctetString
_WtTrapReceiver2x2MfName_Object = MibScalar
wtTrapReceiver2x2MfName = _WtTrapReceiver2x2MfName_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 3, 1),
    _WtTrapReceiver2x2MfName_Type()
)
wtTrapReceiver2x2MfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MfName.setStatus("mandatory")
_WtTrapReceiver2x2MfAddr_Type = OctetString
_WtTrapReceiver2x2MfAddr_Object = MibScalar
wtTrapReceiver2x2MfAddr = _WtTrapReceiver2x2MfAddr_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 3, 2),
    _WtTrapReceiver2x2MfAddr_Type()
)
wtTrapReceiver2x2MfAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MfAddr.setStatus("mandatory")
_WtTrapReceiver2x2MfHotline_Type = OctetString
_WtTrapReceiver2x2MfHotline_Object = MibScalar
wtTrapReceiver2x2MfHotline = _WtTrapReceiver2x2MfHotline_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 3, 3),
    _WtTrapReceiver2x2MfHotline_Type()
)
wtTrapReceiver2x2MfHotline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MfHotline.setStatus("mandatory")
_WtTrapReceiver2x2MfInternet_Type = OctetString
_WtTrapReceiver2x2MfInternet_Object = MibScalar
wtTrapReceiver2x2MfInternet = _WtTrapReceiver2x2MfInternet_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 3, 4),
    _WtTrapReceiver2x2MfInternet_Type()
)
wtTrapReceiver2x2MfInternet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MfInternet.setStatus("mandatory")
_WtTrapReceiver2x2MfDeviceTyp_Type = OctetString
_WtTrapReceiver2x2MfDeviceTyp_Object = MibScalar
wtTrapReceiver2x2MfDeviceTyp = _WtTrapReceiver2x2MfDeviceTyp_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 3, 3, 5),
    _WtTrapReceiver2x2MfDeviceTyp_Type()
)
wtTrapReceiver2x2MfDeviceTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2MfDeviceTyp.setStatus("mandatory")
_WtTrapReceiver2x2Diag_ObjectIdentity = ObjectIdentity
wtTrapReceiver2x2Diag = _WtTrapReceiver2x2Diag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 4)
)
_WtTrapReceiver2x2DiagErrorCount_Type = Integer32
_WtTrapReceiver2x2DiagErrorCount_Object = MibScalar
wtTrapReceiver2x2DiagErrorCount = _WtTrapReceiver2x2DiagErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 4, 1),
    _WtTrapReceiver2x2DiagErrorCount_Type()
)
wtTrapReceiver2x2DiagErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DiagErrorCount.setStatus("mandatory")
_WtTrapReceiver2x2DiagBinaryError_Type = OctetString
_WtTrapReceiver2x2DiagBinaryError_Object = MibScalar
wtTrapReceiver2x2DiagBinaryError = _WtTrapReceiver2x2DiagBinaryError_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 4, 2),
    _WtTrapReceiver2x2DiagBinaryError_Type()
)
wtTrapReceiver2x2DiagBinaryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DiagBinaryError.setStatus("mandatory")
_WtTrapReceiver2x2DiagErrorIndex_Type = Integer32
_WtTrapReceiver2x2DiagErrorIndex_Object = MibScalar
wtTrapReceiver2x2DiagErrorIndex = _WtTrapReceiver2x2DiagErrorIndex_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 4, 3),
    _WtTrapReceiver2x2DiagErrorIndex_Type()
)
wtTrapReceiver2x2DiagErrorIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DiagErrorIndex.setStatus("mandatory")
_WtTrapReceiver2x2DiagErrorMessage_Type = OctetString
_WtTrapReceiver2x2DiagErrorMessage_Object = MibScalar
wtTrapReceiver2x2DiagErrorMessage = _WtTrapReceiver2x2DiagErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 4, 4),
    _WtTrapReceiver2x2DiagErrorMessage_Type()
)
wtTrapReceiver2x2DiagErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DiagErrorMessage.setStatus("mandatory")
_WtTrapReceiver2x2DiagErrorClear_Type = Integer32
_WtTrapReceiver2x2DiagErrorClear_Object = MibScalar
wtTrapReceiver2x2DiagErrorClear = _WtTrapReceiver2x2DiagErrorClear_Object(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 4, 5),
    _WtTrapReceiver2x2DiagErrorClear_Type()
)
wtTrapReceiver2x2DiagErrorClear.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    wtTrapReceiver2x2DiagErrorClear.setStatus("mandatory")

# Managed Objects groups


# Notification objects

wtWebioEA12x12Alert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 41)
)
wtWebioEA12x12Alert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert1.setStatus(
        ""
    )

wtWebioEA12x12Alert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 42)
)
wtWebioEA12x12Alert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert2.setStatus(
        ""
    )

wtWebioEA12x12Alert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 43)
)
wtWebioEA12x12Alert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert3.setStatus(
        ""
    )

wtWebioEA12x12Alert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 44)
)
wtWebioEA12x12Alert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert4.setStatus(
        ""
    )

wtWebioEA12x12Alert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 45)
)
wtWebioEA12x12Alert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert5.setStatus(
        ""
    )

wtWebioEA12x12Alert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 46)
)
wtWebioEA12x12Alert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert6.setStatus(
        ""
    )

wtWebioEA12x12Alert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 47)
)
wtWebioEA12x12Alert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert7.setStatus(
        ""
    )

wtWebioEA12x12Alert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 48)
)
wtWebioEA12x12Alert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert8.setStatus(
        ""
    )

wtWebioEA12x12Alert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 49)
)
wtWebioEA12x12Alert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert9.setStatus(
        ""
    )

wtWebioEA12x12Alert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 50)
)
wtWebioEA12x12Alert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert10.setStatus(
        ""
    )

wtWebioEA12x12Alert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 51)
)
wtWebioEA12x12Alert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert11.setStatus(
        ""
    )

wtWebioEA12x12Alert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 52)
)
wtWebioEA12x12Alert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert12.setStatus(
        ""
    )

wtWebioEA12x12Alert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 71)
)
wtWebioEA12x12Alert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert13.setStatus(
        ""
    )

wtWebioEA12x12Alert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 72)
)
wtWebioEA12x12Alert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert14.setStatus(
        ""
    )

wtWebioEA12x12Alert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 73)
)
wtWebioEA12x12Alert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert15.setStatus(
        ""
    )

wtWebioEA12x12Alert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 74)
)
wtWebioEA12x12Alert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert16.setStatus(
        ""
    )

wtWebioEA12x12Alert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 75)
)
wtWebioEA12x12Alert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert17.setStatus(
        ""
    )

wtWebioEA12x12Alert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 76)
)
wtWebioEA12x12Alert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert18.setStatus(
        ""
    )

wtWebioEA12x12Alert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 77)
)
wtWebioEA12x12Alert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert19.setStatus(
        ""
    )

wtWebioEA12x12Alert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 78)
)
wtWebioEA12x12Alert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert20.setStatus(
        ""
    )

wtWebioEA12x12Alert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 79)
)
wtWebioEA12x12Alert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert21.setStatus(
        ""
    )

wtWebioEA12x12Alert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 80)
)
wtWebioEA12x12Alert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert22.setStatus(
        ""
    )

wtWebioEA12x12Alert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 81)
)
wtWebioEA12x12Alert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert23.setStatus(
        ""
    )

wtWebioEA12x12Alert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 82)
)
wtWebioEA12x12Alert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x12AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x12Alert24.setStatus(
        ""
    )

wtWebioEA12x12AlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 4, 0, 110)
)
wtWebioEA12x12AlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA12x12DiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA12x12DiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA12x12AlertDiag.setStatus(
        ""
    )

wtWebioEA2x2Alert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 41)
)
wtWebioEA2x2Alert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert1.setStatus(
        ""
    )

wtWebioEA2x2Alert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 42)
)
wtWebioEA2x2Alert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert2.setStatus(
        ""
    )

wtWebioEA2x2Alert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 43)
)
wtWebioEA2x2Alert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert3.setStatus(
        ""
    )

wtWebioEA2x2Alert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 44)
)
wtWebioEA2x2Alert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert4.setStatus(
        ""
    )

wtWebioEA2x2Alert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 45)
)
wtWebioEA2x2Alert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert5.setStatus(
        ""
    )

wtWebioEA2x2Alert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 46)
)
wtWebioEA2x2Alert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert6.setStatus(
        ""
    )

wtWebioEA2x2Alert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 47)
)
wtWebioEA2x2Alert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert7.setStatus(
        ""
    )

wtWebioEA2x2Alert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 48)
)
wtWebioEA2x2Alert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert8.setStatus(
        ""
    )

wtWebioEA2x2Alert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 49)
)
wtWebioEA2x2Alert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert9.setStatus(
        ""
    )

wtWebioEA2x2Alert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 50)
)
wtWebioEA2x2Alert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert10.setStatus(
        ""
    )

wtWebioEA2x2Alert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 51)
)
wtWebioEA2x2Alert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert11.setStatus(
        ""
    )

wtWebioEA2x2Alert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 52)
)
wtWebioEA2x2Alert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert12.setStatus(
        ""
    )

wtWebioEA2x2Alert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 71)
)
wtWebioEA2x2Alert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert13.setStatus(
        ""
    )

wtWebioEA2x2Alert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 72)
)
wtWebioEA2x2Alert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert14.setStatus(
        ""
    )

wtWebioEA2x2Alert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 73)
)
wtWebioEA2x2Alert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert15.setStatus(
        ""
    )

wtWebioEA2x2Alert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 74)
)
wtWebioEA2x2Alert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert16.setStatus(
        ""
    )

wtWebioEA2x2Alert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 75)
)
wtWebioEA2x2Alert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert17.setStatus(
        ""
    )

wtWebioEA2x2Alert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 76)
)
wtWebioEA2x2Alert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert18.setStatus(
        ""
    )

wtWebioEA2x2Alert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 77)
)
wtWebioEA2x2Alert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert19.setStatus(
        ""
    )

wtWebioEA2x2Alert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 78)
)
wtWebioEA2x2Alert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert20.setStatus(
        ""
    )

wtWebioEA2x2Alert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 79)
)
wtWebioEA2x2Alert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert21.setStatus(
        ""
    )

wtWebioEA2x2Alert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 80)
)
wtWebioEA2x2Alert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert22.setStatus(
        ""
    )

wtWebioEA2x2Alert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 81)
)
wtWebioEA2x2Alert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert23.setStatus(
        ""
    )

wtWebioEA2x2Alert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 82)
)
wtWebioEA2x2Alert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2Alert24.setStatus(
        ""
    )

wtWebioEA2x2AlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 13, 0, 110)
)
wtWebioEA2x2AlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA2x2DiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA2x2DiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA2x2AlertDiag.setStatus(
        ""
    )

wtWebioEA24oemAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 53)
)
wtWebioEA24oemAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert1.setStatus(
        ""
    )

wtWebioEA24oemAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 54)
)
wtWebioEA24oemAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert2.setStatus(
        ""
    )

wtWebioEA24oemAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 55)
)
wtWebioEA24oemAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert3.setStatus(
        ""
    )

wtWebioEA24oemAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 56)
)
wtWebioEA24oemAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert4.setStatus(
        ""
    )

wtWebioEA24oemAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 57)
)
wtWebioEA24oemAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert5.setStatus(
        ""
    )

wtWebioEA24oemAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 58)
)
wtWebioEA24oemAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert6.setStatus(
        ""
    )

wtWebioEA24oemAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 59)
)
wtWebioEA24oemAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert7.setStatus(
        ""
    )

wtWebioEA24oemAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 60)
)
wtWebioEA24oemAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert8.setStatus(
        ""
    )

wtWebioEA24oemAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 61)
)
wtWebioEA24oemAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert9.setStatus(
        ""
    )

wtWebioEA24oemAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 62)
)
wtWebioEA24oemAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert10.setStatus(
        ""
    )

wtWebioEA24oemAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 63)
)
wtWebioEA24oemAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert11.setStatus(
        ""
    )

wtWebioEA24oemAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 64)
)
wtWebioEA24oemAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert12.setStatus(
        ""
    )

wtWebioEA24oemAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 65)
)
wtWebioEA24oemAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert13.setStatus(
        ""
    )

wtWebioEA24oemAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 66)
)
wtWebioEA24oemAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert14.setStatus(
        ""
    )

wtWebioEA24oemAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 67)
)
wtWebioEA24oemAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert15.setStatus(
        ""
    )

wtWebioEA24oemAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 68)
)
wtWebioEA24oemAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert16.setStatus(
        ""
    )

wtWebioEA24oemAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 71)
)
wtWebioEA24oemAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert17.setStatus(
        ""
    )

wtWebioEA24oemAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 72)
)
wtWebioEA24oemAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert18.setStatus(
        ""
    )

wtWebioEA24oemAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 73)
)
wtWebioEA24oemAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert19.setStatus(
        ""
    )

wtWebioEA24oemAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 74)
)
wtWebioEA24oemAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert20.setStatus(
        ""
    )

wtWebioEA24oemAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 75)
)
wtWebioEA24oemAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert21.setStatus(
        ""
    )

wtWebioEA24oemAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 76)
)
wtWebioEA24oemAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert22.setStatus(
        ""
    )

wtWebioEA24oemAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 77)
)
wtWebioEA24oemAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert23.setStatus(
        ""
    )

wtWebioEA24oemAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 78)
)
wtWebioEA24oemAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert24.setStatus(
        ""
    )

wtWebioEA24oemAlert25 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 79)
)
wtWebioEA24oemAlert25.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert25.setStatus(
        ""
    )

wtWebioEA24oemAlert26 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 80)
)
wtWebioEA24oemAlert26.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert26.setStatus(
        ""
    )

wtWebioEA24oemAlert27 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 81)
)
wtWebioEA24oemAlert27.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert27.setStatus(
        ""
    )

wtWebioEA24oemAlert28 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 82)
)
wtWebioEA24oemAlert28.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert28.setStatus(
        ""
    )

wtWebioEA24oemAlert29 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 83)
)
wtWebioEA24oemAlert29.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert29.setStatus(
        ""
    )

wtWebioEA24oemAlert30 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 84)
)
wtWebioEA24oemAlert30.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert30.setStatus(
        ""
    )

wtWebioEA24oemAlert31 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 85)
)
wtWebioEA24oemAlert31.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert31.setStatus(
        ""
    )

wtWebioEA24oemAlert32 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 86)
)
wtWebioEA24oemAlert32.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA24oemAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlert32.setStatus(
        ""
    )

wtWebioEA24oemAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 14, 0, 110)
)
wtWebioEA24oemAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA24oemDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA24oemDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA24oemAlertDiag.setStatus(
        ""
    )

wtWebioEA12x6RelAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 41)
)
wtWebioEA12x6RelAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert1.setStatus(
        ""
    )

wtWebioEA12x6RelAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 42)
)
wtWebioEA12x6RelAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert2.setStatus(
        ""
    )

wtWebioEA12x6RelAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 43)
)
wtWebioEA12x6RelAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert3.setStatus(
        ""
    )

wtWebioEA12x6RelAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 44)
)
wtWebioEA12x6RelAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert4.setStatus(
        ""
    )

wtWebioEA12x6RelAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 45)
)
wtWebioEA12x6RelAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert5.setStatus(
        ""
    )

wtWebioEA12x6RelAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 46)
)
wtWebioEA12x6RelAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert6.setStatus(
        ""
    )

wtWebioEA12x6RelAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 47)
)
wtWebioEA12x6RelAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert7.setStatus(
        ""
    )

wtWebioEA12x6RelAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 48)
)
wtWebioEA12x6RelAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert8.setStatus(
        ""
    )

wtWebioEA12x6RelAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 49)
)
wtWebioEA12x6RelAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert9.setStatus(
        ""
    )

wtWebioEA12x6RelAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 50)
)
wtWebioEA12x6RelAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert10.setStatus(
        ""
    )

wtWebioEA12x6RelAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 51)
)
wtWebioEA12x6RelAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert11.setStatus(
        ""
    )

wtWebioEA12x6RelAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 52)
)
wtWebioEA12x6RelAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert12.setStatus(
        ""
    )

wtWebioEA12x6RelAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 71)
)
wtWebioEA12x6RelAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert13.setStatus(
        ""
    )

wtWebioEA12x6RelAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 72)
)
wtWebioEA12x6RelAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert14.setStatus(
        ""
    )

wtWebioEA12x6RelAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 73)
)
wtWebioEA12x6RelAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert15.setStatus(
        ""
    )

wtWebioEA12x6RelAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 74)
)
wtWebioEA12x6RelAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert16.setStatus(
        ""
    )

wtWebioEA12x6RelAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 75)
)
wtWebioEA12x6RelAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert17.setStatus(
        ""
    )

wtWebioEA12x6RelAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 76)
)
wtWebioEA12x6RelAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert18.setStatus(
        ""
    )

wtWebioEA12x6RelAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 77)
)
wtWebioEA12x6RelAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert19.setStatus(
        ""
    )

wtWebioEA12x6RelAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 78)
)
wtWebioEA12x6RelAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert20.setStatus(
        ""
    )

wtWebioEA12x6RelAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 79)
)
wtWebioEA12x6RelAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert21.setStatus(
        ""
    )

wtWebioEA12x6RelAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 80)
)
wtWebioEA12x6RelAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert22.setStatus(
        ""
    )

wtWebioEA12x6RelAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 81)
)
wtWebioEA12x6RelAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert23.setStatus(
        ""
    )

wtWebioEA12x6RelAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 82)
)
wtWebioEA12x6RelAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlert24.setStatus(
        ""
    )

wtWebioEA12x6RelAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 19, 0, 110)
)
wtWebioEA12x6RelAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA12x6RelDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA12x6RelDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelAlertDiag.setStatus(
        ""
    )

wtWebAlarm6x6Alert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 41)
)
wtWebAlarm6x6Alert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert1.setStatus(
        ""
    )

wtWebAlarm6x6Alert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 42)
)
wtWebAlarm6x6Alert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert2.setStatus(
        ""
    )

wtWebAlarm6x6Alert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 43)
)
wtWebAlarm6x6Alert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert3.setStatus(
        ""
    )

wtWebAlarm6x6Alert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 44)
)
wtWebAlarm6x6Alert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert4.setStatus(
        ""
    )

wtWebAlarm6x6Alert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 45)
)
wtWebAlarm6x6Alert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert5.setStatus(
        ""
    )

wtWebAlarm6x6Alert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 46)
)
wtWebAlarm6x6Alert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert6.setStatus(
        ""
    )

wtWebAlarm6x6Alert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 47)
)
wtWebAlarm6x6Alert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert7.setStatus(
        ""
    )

wtWebAlarm6x6Alert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 48)
)
wtWebAlarm6x6Alert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert8.setStatus(
        ""
    )

wtWebAlarm6x6Alert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 49)
)
wtWebAlarm6x6Alert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert9.setStatus(
        ""
    )

wtWebAlarm6x6Alert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 50)
)
wtWebAlarm6x6Alert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert10.setStatus(
        ""
    )

wtWebAlarm6x6Alert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 51)
)
wtWebAlarm6x6Alert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert11.setStatus(
        ""
    )

wtWebAlarm6x6Alert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 52)
)
wtWebAlarm6x6Alert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert12.setStatus(
        ""
    )

wtWebAlarm6x6Alert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 71)
)
wtWebAlarm6x6Alert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert13.setStatus(
        ""
    )

wtWebAlarm6x6Alert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 72)
)
wtWebAlarm6x6Alert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert14.setStatus(
        ""
    )

wtWebAlarm6x6Alert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 73)
)
wtWebAlarm6x6Alert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert15.setStatus(
        ""
    )

wtWebAlarm6x6Alert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 74)
)
wtWebAlarm6x6Alert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert16.setStatus(
        ""
    )

wtWebAlarm6x6Alert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 75)
)
wtWebAlarm6x6Alert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert17.setStatus(
        ""
    )

wtWebAlarm6x6Alert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 76)
)
wtWebAlarm6x6Alert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert18.setStatus(
        ""
    )

wtWebAlarm6x6Alert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 77)
)
wtWebAlarm6x6Alert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert19.setStatus(
        ""
    )

wtWebAlarm6x6Alert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 78)
)
wtWebAlarm6x6Alert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert20.setStatus(
        ""
    )

wtWebAlarm6x6Alert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 79)
)
wtWebAlarm6x6Alert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert21.setStatus(
        ""
    )

wtWebAlarm6x6Alert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 80)
)
wtWebAlarm6x6Alert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert22.setStatus(
        ""
    )

wtWebAlarm6x6Alert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 81)
)
wtWebAlarm6x6Alert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert23.setStatus(
        ""
    )

wtWebAlarm6x6Alert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 82)
)
wtWebAlarm6x6Alert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert24.setStatus(
        ""
    )

wtWebAlarm6x6Alert25 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 91)
)
wtWebAlarm6x6Alert25.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert25.setStatus(
        ""
    )

wtWebAlarm6x6Alert26 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 92)
)
wtWebAlarm6x6Alert26.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert26.setStatus(
        ""
    )

wtWebAlarm6x6Alert27 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 93)
)
wtWebAlarm6x6Alert27.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert27.setStatus(
        ""
    )

wtWebAlarm6x6Alert28 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 94)
)
wtWebAlarm6x6Alert28.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert28.setStatus(
        ""
    )

wtWebAlarm6x6Alert29 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 95)
)
wtWebAlarm6x6Alert29.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert29.setStatus(
        ""
    )

wtWebAlarm6x6Alert30 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 96)
)
wtWebAlarm6x6Alert30.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert30.setStatus(
        ""
    )

wtWebAlarm6x6Alert31 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 97)
)
wtWebAlarm6x6Alert31.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert31.setStatus(
        ""
    )

wtWebAlarm6x6Alert32 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 98)
)
wtWebAlarm6x6Alert32.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert32.setStatus(
        ""
    )

wtWebAlarm6x6Alert33 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 99)
)
wtWebAlarm6x6Alert33.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert33.setStatus(
        ""
    )

wtWebAlarm6x6Alert34 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 100)
)
wtWebAlarm6x6Alert34.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert34.setStatus(
        ""
    )

wtWebAlarm6x6Alert35 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 101)
)
wtWebAlarm6x6Alert35.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert35.setStatus(
        ""
    )

wtWebAlarm6x6Alert36 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 102)
)
wtWebAlarm6x6Alert36.setObjects(
    ("Webio-Digital-MIB-US", "wtWebAlarm6x6AlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6Alert36.setStatus(
        ""
    )

wtWebAlarm6x6AlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 20, 0, 110)
)
wtWebAlarm6x6AlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebAlarm6x6DiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebAlarm6x6DiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebAlarm6x6AlertDiag.setStatus(
        ""
    )

wtWebCount6Alert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 41)
)
wtWebCount6Alert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert1.setStatus(
        ""
    )

wtWebCount6Alert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 42)
)
wtWebCount6Alert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert2.setStatus(
        ""
    )

wtWebCount6Alert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 43)
)
wtWebCount6Alert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert3.setStatus(
        ""
    )

wtWebCount6Alert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 44)
)
wtWebCount6Alert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert4.setStatus(
        ""
    )

wtWebCount6Alert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 45)
)
wtWebCount6Alert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert5.setStatus(
        ""
    )

wtWebCount6Alert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 46)
)
wtWebCount6Alert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert6.setStatus(
        ""
    )

wtWebCount6Alert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 47)
)
wtWebCount6Alert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert7.setStatus(
        ""
    )

wtWebCount6Alert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 48)
)
wtWebCount6Alert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert8.setStatus(
        ""
    )

wtWebCount6Alert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 49)
)
wtWebCount6Alert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert9.setStatus(
        ""
    )

wtWebCount6Alert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 50)
)
wtWebCount6Alert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert10.setStatus(
        ""
    )

wtWebCount6Alert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 51)
)
wtWebCount6Alert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert11.setStatus(
        ""
    )

wtWebCount6Alert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 52)
)
wtWebCount6Alert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebCount6ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebCount6Alert12.setStatus(
        ""
    )

wtWebCount6AlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 22, 0, 110)
)
wtWebCount6AlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebCount6DiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebCount6DiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebCount6AlertDiag.setStatus(
        ""
    )

wtWebioEA6x6Alert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 41)
)
wtWebioEA6x6Alert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert1.setStatus(
        ""
    )

wtWebioEA6x6Alert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 42)
)
wtWebioEA6x6Alert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert2.setStatus(
        ""
    )

wtWebioEA6x6Alert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 43)
)
wtWebioEA6x6Alert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert3.setStatus(
        ""
    )

wtWebioEA6x6Alert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 44)
)
wtWebioEA6x6Alert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert4.setStatus(
        ""
    )

wtWebioEA6x6Alert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 45)
)
wtWebioEA6x6Alert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert5.setStatus(
        ""
    )

wtWebioEA6x6Alert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 46)
)
wtWebioEA6x6Alert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert6.setStatus(
        ""
    )

wtWebioEA6x6Alert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 47)
)
wtWebioEA6x6Alert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert7.setStatus(
        ""
    )

wtWebioEA6x6Alert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 48)
)
wtWebioEA6x6Alert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert8.setStatus(
        ""
    )

wtWebioEA6x6Alert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 49)
)
wtWebioEA6x6Alert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert9.setStatus(
        ""
    )

wtWebioEA6x6Alert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 50)
)
wtWebioEA6x6Alert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert10.setStatus(
        ""
    )

wtWebioEA6x6Alert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 51)
)
wtWebioEA6x6Alert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert11.setStatus(
        ""
    )

wtWebioEA6x6Alert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 52)
)
wtWebioEA6x6Alert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert12.setStatus(
        ""
    )

wtWebioEA6x6Alert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 71)
)
wtWebioEA6x6Alert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert13.setStatus(
        ""
    )

wtWebioEA6x6Alert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 72)
)
wtWebioEA6x6Alert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert14.setStatus(
        ""
    )

wtWebioEA6x6Alert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 73)
)
wtWebioEA6x6Alert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert15.setStatus(
        ""
    )

wtWebioEA6x6Alert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 74)
)
wtWebioEA6x6Alert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert16.setStatus(
        ""
    )

wtWebioEA6x6Alert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 75)
)
wtWebioEA6x6Alert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert17.setStatus(
        ""
    )

wtWebioEA6x6Alert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 76)
)
wtWebioEA6x6Alert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert18.setStatus(
        ""
    )

wtWebioEA6x6Alert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 77)
)
wtWebioEA6x6Alert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert19.setStatus(
        ""
    )

wtWebioEA6x6Alert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 78)
)
wtWebioEA6x6Alert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert20.setStatus(
        ""
    )

wtWebioEA6x6Alert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 79)
)
wtWebioEA6x6Alert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert21.setStatus(
        ""
    )

wtWebioEA6x6Alert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 80)
)
wtWebioEA6x6Alert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert22.setStatus(
        ""
    )

wtWebioEA6x6Alert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 81)
)
wtWebioEA6x6Alert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert23.setStatus(
        ""
    )

wtWebioEA6x6Alert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 82)
)
wtWebioEA6x6Alert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA6x6AlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA6x6Alert24.setStatus(
        ""
    )

wtWebioEA6x6AlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 24, 0, 110)
)
wtWebioEA6x6AlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA6x6DiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA6x6DiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA6x6AlertDiag.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 41)
)
wtWebioEA2x2ERPAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert1.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 42)
)
wtWebioEA2x2ERPAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert2.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 43)
)
wtWebioEA2x2ERPAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert3.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 44)
)
wtWebioEA2x2ERPAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert4.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 45)
)
wtWebioEA2x2ERPAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert5.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 46)
)
wtWebioEA2x2ERPAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert6.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 47)
)
wtWebioEA2x2ERPAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert7.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 48)
)
wtWebioEA2x2ERPAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert8.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 49)
)
wtWebioEA2x2ERPAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert9.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 50)
)
wtWebioEA2x2ERPAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert10.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 51)
)
wtWebioEA2x2ERPAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert11.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 52)
)
wtWebioEA2x2ERPAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert12.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 71)
)
wtWebioEA2x2ERPAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert13.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 72)
)
wtWebioEA2x2ERPAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert14.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 73)
)
wtWebioEA2x2ERPAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert15.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 74)
)
wtWebioEA2x2ERPAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert16.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 75)
)
wtWebioEA2x2ERPAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert17.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 76)
)
wtWebioEA2x2ERPAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert18.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 77)
)
wtWebioEA2x2ERPAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert19.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 78)
)
wtWebioEA2x2ERPAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert20.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 79)
)
wtWebioEA2x2ERPAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert21.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 80)
)
wtWebioEA2x2ERPAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert22.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 81)
)
wtWebioEA2x2ERPAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert23.setStatus(
        ""
    )

wtWebioEA2x2ERPAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 82)
)
wtWebioEA2x2ERPAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlert24.setStatus(
        ""
    )

wtWebioEA2x2ERPAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 25, 0, 110)
)
wtWebioEA2x2ERPAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA2x2ERPDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA2x2ERPDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERPAlertDiag.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 41)
)
wtWebioEA12x6RelERPAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert1.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 42)
)
wtWebioEA12x6RelERPAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert2.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 43)
)
wtWebioEA12x6RelERPAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert3.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 44)
)
wtWebioEA12x6RelERPAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert4.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 45)
)
wtWebioEA12x6RelERPAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert5.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 46)
)
wtWebioEA12x6RelERPAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert6.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 47)
)
wtWebioEA12x6RelERPAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert7.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 48)
)
wtWebioEA12x6RelERPAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert8.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 49)
)
wtWebioEA12x6RelERPAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert9.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 50)
)
wtWebioEA12x6RelERPAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert10.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 51)
)
wtWebioEA12x6RelERPAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert11.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 52)
)
wtWebioEA12x6RelERPAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert12.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 71)
)
wtWebioEA12x6RelERPAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert13.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 72)
)
wtWebioEA12x6RelERPAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert14.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 73)
)
wtWebioEA12x6RelERPAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert15.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 74)
)
wtWebioEA12x6RelERPAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert16.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 75)
)
wtWebioEA12x6RelERPAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert17.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 76)
)
wtWebioEA12x6RelERPAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert18.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 77)
)
wtWebioEA12x6RelERPAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert19.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 78)
)
wtWebioEA12x6RelERPAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert20.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 79)
)
wtWebioEA12x6RelERPAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert21.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 80)
)
wtWebioEA12x6RelERPAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert22.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 81)
)
wtWebioEA12x6RelERPAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert23.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 82)
)
wtWebioEA12x6RelERPAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlert24.setStatus(
        ""
    )

wtWebioEA12x6RelERPAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 26, 0, 110)
)
wtWebioEA12x6RelERPAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA12x6RelERPDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA12x6RelERPAlertDiag.setStatus(
        ""
    )

wtIpWatcherAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 41)
)
wtIpWatcherAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert1.setStatus(
        ""
    )

wtIpWatcherAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 42)
)
wtIpWatcherAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert2.setStatus(
        ""
    )

wtIpWatcherAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 43)
)
wtIpWatcherAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert3.setStatus(
        ""
    )

wtIpWatcherAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 44)
)
wtIpWatcherAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert4.setStatus(
        ""
    )

wtIpWatcherAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 45)
)
wtIpWatcherAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert5.setStatus(
        ""
    )

wtIpWatcherAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 46)
)
wtIpWatcherAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert6.setStatus(
        ""
    )

wtIpWatcherAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 47)
)
wtIpWatcherAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert7.setStatus(
        ""
    )

wtIpWatcherAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 48)
)
wtIpWatcherAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert8.setStatus(
        ""
    )

wtIpWatcherAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 49)
)
wtIpWatcherAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert9.setStatus(
        ""
    )

wtIpWatcherAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 50)
)
wtIpWatcherAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert10.setStatus(
        ""
    )

wtIpWatcherAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 51)
)
wtIpWatcherAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert11.setStatus(
        ""
    )

wtIpWatcherAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 52)
)
wtIpWatcherAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert12.setStatus(
        ""
    )

wtIpWatcherAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 71)
)
wtIpWatcherAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert13.setStatus(
        ""
    )

wtIpWatcherAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 72)
)
wtIpWatcherAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert14.setStatus(
        ""
    )

wtIpWatcherAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 73)
)
wtIpWatcherAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert15.setStatus(
        ""
    )

wtIpWatcherAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 74)
)
wtIpWatcherAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert16.setStatus(
        ""
    )

wtIpWatcherAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 75)
)
wtIpWatcherAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert17.setStatus(
        ""
    )

wtIpWatcherAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 76)
)
wtIpWatcherAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert18.setStatus(
        ""
    )

wtIpWatcherAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 77)
)
wtIpWatcherAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert19.setStatus(
        ""
    )

wtIpWatcherAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 78)
)
wtIpWatcherAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert20.setStatus(
        ""
    )

wtIpWatcherAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 79)
)
wtIpWatcherAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert21.setStatus(
        ""
    )

wtIpWatcherAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 80)
)
wtIpWatcherAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert22.setStatus(
        ""
    )

wtIpWatcherAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 81)
)
wtIpWatcherAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert23.setStatus(
        ""
    )

wtIpWatcherAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 82)
)
wtIpWatcherAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert24.setStatus(
        ""
    )

wtIpWatcherAlert25 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 91)
)
wtIpWatcherAlert25.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert25.setStatus(
        ""
    )

wtIpWatcherAlert26 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 92)
)
wtIpWatcherAlert26.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert26.setStatus(
        ""
    )

wtIpWatcherAlert27 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 93)
)
wtIpWatcherAlert27.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert27.setStatus(
        ""
    )

wtIpWatcherAlert28 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 94)
)
wtIpWatcherAlert28.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert28.setStatus(
        ""
    )

wtIpWatcherAlert29 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 95)
)
wtIpWatcherAlert29.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert29.setStatus(
        ""
    )

wtIpWatcherAlert30 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 96)
)
wtIpWatcherAlert30.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert30.setStatus(
        ""
    )

wtIpWatcherAlert31 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 97)
)
wtIpWatcherAlert31.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert31.setStatus(
        ""
    )

wtIpWatcherAlert32 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 98)
)
wtIpWatcherAlert32.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert32.setStatus(
        ""
    )

wtIpWatcherAlert33 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 99)
)
wtIpWatcherAlert33.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert33.setStatus(
        ""
    )

wtIpWatcherAlert34 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 100)
)
wtIpWatcherAlert34.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert34.setStatus(
        ""
    )

wtIpWatcherAlert35 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 101)
)
wtIpWatcherAlert35.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert35.setStatus(
        ""
    )

wtIpWatcherAlert36 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 102)
)
wtIpWatcherAlert36.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcherAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcherAlert36.setStatus(
        ""
    )

wtIpWatcherAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 27, 0, 110)
)
wtIpWatcherAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtIpWatcherDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtIpWatcherDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtIpWatcherAlertDiag.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 41)
)
wtWebioEA2x2_24VAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert1.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 42)
)
wtWebioEA2x2_24VAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert2.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 43)
)
wtWebioEA2x2_24VAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert3.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 44)
)
wtWebioEA2x2_24VAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert4.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 45)
)
wtWebioEA2x2_24VAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert5.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 46)
)
wtWebioEA2x2_24VAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert6.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 47)
)
wtWebioEA2x2_24VAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert7.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 48)
)
wtWebioEA2x2_24VAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert8.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 49)
)
wtWebioEA2x2_24VAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert9.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 50)
)
wtWebioEA2x2_24VAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert10.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 51)
)
wtWebioEA2x2_24VAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert11.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 52)
)
wtWebioEA2x2_24VAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert12.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 71)
)
wtWebioEA2x2_24VAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert13.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 72)
)
wtWebioEA2x2_24VAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert14.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 73)
)
wtWebioEA2x2_24VAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert15.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 74)
)
wtWebioEA2x2_24VAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert16.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 75)
)
wtWebioEA2x2_24VAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert17.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 76)
)
wtWebioEA2x2_24VAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert18.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 77)
)
wtWebioEA2x2_24VAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert19.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 78)
)
wtWebioEA2x2_24VAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert20.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 79)
)
wtWebioEA2x2_24VAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert21.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 80)
)
wtWebioEA2x2_24VAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert22.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 81)
)
wtWebioEA2x2_24VAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert23.setStatus(
        ""
    )

wtWebioEA2x2_24VAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 82)
)
wtWebioEA2x2_24VAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlert24.setStatus(
        ""
    )

wtWebioEA2x2_24VAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 30, 0, 110)
)
wtWebioEA2x2_24VAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA2x2_24VDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA2x2_24VDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA2x2_24VAlertDiag.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 41)
)
wtWebioEA2x2ERP_24VAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert1.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 42)
)
wtWebioEA2x2ERP_24VAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert2.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 43)
)
wtWebioEA2x2ERP_24VAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert3.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 44)
)
wtWebioEA2x2ERP_24VAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert4.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 45)
)
wtWebioEA2x2ERP_24VAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert5.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 46)
)
wtWebioEA2x2ERP_24VAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert6.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 47)
)
wtWebioEA2x2ERP_24VAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert7.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 48)
)
wtWebioEA2x2ERP_24VAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert8.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 49)
)
wtWebioEA2x2ERP_24VAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert9.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 50)
)
wtWebioEA2x2ERP_24VAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert10.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 51)
)
wtWebioEA2x2ERP_24VAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert11.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 52)
)
wtWebioEA2x2ERP_24VAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert12.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 71)
)
wtWebioEA2x2ERP_24VAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert13.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 72)
)
wtWebioEA2x2ERP_24VAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert14.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 73)
)
wtWebioEA2x2ERP_24VAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert15.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 74)
)
wtWebioEA2x2ERP_24VAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert16.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 75)
)
wtWebioEA2x2ERP_24VAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert17.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 76)
)
wtWebioEA2x2ERP_24VAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert18.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 77)
)
wtWebioEA2x2ERP_24VAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert19.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 78)
)
wtWebioEA2x2ERP_24VAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert20.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 79)
)
wtWebioEA2x2ERP_24VAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert21.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 80)
)
wtWebioEA2x2ERP_24VAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert22.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 81)
)
wtWebioEA2x2ERP_24VAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert23.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 82)
)
wtWebioEA2x2ERP_24VAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlert24.setStatus(
        ""
    )

wtWebioEA2x2ERP_24VAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 31, 0, 110)
)
wtWebioEA2x2ERP_24VAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtWebioEA2x2ERP_24VDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtWebioEA2x2ERP_24VAlertDiag.setStatus(
        ""
    )

wtIpWatcher_24VAlert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 41)
)
wtIpWatcher_24VAlert1.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert1.setStatus(
        ""
    )

wtIpWatcher_24VAlert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 42)
)
wtIpWatcher_24VAlert2.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert2.setStatus(
        ""
    )

wtIpWatcher_24VAlert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 43)
)
wtIpWatcher_24VAlert3.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert3.setStatus(
        ""
    )

wtIpWatcher_24VAlert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 44)
)
wtIpWatcher_24VAlert4.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert4.setStatus(
        ""
    )

wtIpWatcher_24VAlert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 45)
)
wtIpWatcher_24VAlert5.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert5.setStatus(
        ""
    )

wtIpWatcher_24VAlert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 46)
)
wtIpWatcher_24VAlert6.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert6.setStatus(
        ""
    )

wtIpWatcher_24VAlert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 47)
)
wtIpWatcher_24VAlert7.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert7.setStatus(
        ""
    )

wtIpWatcher_24VAlert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 48)
)
wtIpWatcher_24VAlert8.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert8.setStatus(
        ""
    )

wtIpWatcher_24VAlert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 49)
)
wtIpWatcher_24VAlert9.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert9.setStatus(
        ""
    )

wtIpWatcher_24VAlert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 50)
)
wtIpWatcher_24VAlert10.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert10.setStatus(
        ""
    )

wtIpWatcher_24VAlert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 51)
)
wtIpWatcher_24VAlert11.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert11.setStatus(
        ""
    )

wtIpWatcher_24VAlert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 52)
)
wtIpWatcher_24VAlert12.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert12.setStatus(
        ""
    )

wtIpWatcher_24VAlert13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 71)
)
wtIpWatcher_24VAlert13.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert13.setStatus(
        ""
    )

wtIpWatcher_24VAlert14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 72)
)
wtIpWatcher_24VAlert14.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert14.setStatus(
        ""
    )

wtIpWatcher_24VAlert15 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 73)
)
wtIpWatcher_24VAlert15.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert15.setStatus(
        ""
    )

wtIpWatcher_24VAlert16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 74)
)
wtIpWatcher_24VAlert16.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert16.setStatus(
        ""
    )

wtIpWatcher_24VAlert17 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 75)
)
wtIpWatcher_24VAlert17.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert17.setStatus(
        ""
    )

wtIpWatcher_24VAlert18 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 76)
)
wtIpWatcher_24VAlert18.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert18.setStatus(
        ""
    )

wtIpWatcher_24VAlert19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 77)
)
wtIpWatcher_24VAlert19.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert19.setStatus(
        ""
    )

wtIpWatcher_24VAlert20 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 78)
)
wtIpWatcher_24VAlert20.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert20.setStatus(
        ""
    )

wtIpWatcher_24VAlert21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 79)
)
wtIpWatcher_24VAlert21.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert21.setStatus(
        ""
    )

wtIpWatcher_24VAlert22 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 80)
)
wtIpWatcher_24VAlert22.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert22.setStatus(
        ""
    )

wtIpWatcher_24VAlert23 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 81)
)
wtIpWatcher_24VAlert23.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert23.setStatus(
        ""
    )

wtIpWatcher_24VAlert24 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 82)
)
wtIpWatcher_24VAlert24.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapReleaseText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert24.setStatus(
        ""
    )

wtIpWatcher_24VAlert25 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 91)
)
wtIpWatcher_24VAlert25.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert25.setStatus(
        ""
    )

wtIpWatcher_24VAlert26 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 92)
)
wtIpWatcher_24VAlert26.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert26.setStatus(
        ""
    )

wtIpWatcher_24VAlert27 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 93)
)
wtIpWatcher_24VAlert27.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert27.setStatus(
        ""
    )

wtIpWatcher_24VAlert28 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 94)
)
wtIpWatcher_24VAlert28.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert28.setStatus(
        ""
    )

wtIpWatcher_24VAlert29 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 95)
)
wtIpWatcher_24VAlert29.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert29.setStatus(
        ""
    )

wtIpWatcher_24VAlert30 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 96)
)
wtIpWatcher_24VAlert30.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert30.setStatus(
        ""
    )

wtIpWatcher_24VAlert31 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 97)
)
wtIpWatcher_24VAlert31.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert31.setStatus(
        ""
    )

wtIpWatcher_24VAlert32 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 98)
)
wtIpWatcher_24VAlert32.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert32.setStatus(
        ""
    )

wtIpWatcher_24VAlert33 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 99)
)
wtIpWatcher_24VAlert33.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert33.setStatus(
        ""
    )

wtIpWatcher_24VAlert34 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 100)
)
wtIpWatcher_24VAlert34.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert34.setStatus(
        ""
    )

wtIpWatcher_24VAlert35 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 101)
)
wtIpWatcher_24VAlert35.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert35.setStatus(
        ""
    )

wtIpWatcher_24VAlert36 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 102)
)
wtIpWatcher_24VAlert36.setObjects(
    ("Webio-Digital-MIB-US", "wtIpWatcher_24VAlarmSnmpTrapTrgClearText")
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlert36.setStatus(
        ""
    )

wtIpWatcher_24VAlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 32, 0, 110)
)
wtIpWatcher_24VAlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtIpWatcher_24VDiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtIpWatcher_24VDiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtIpWatcher_24VAlertDiag.setStatus(
        ""
    )

wtTrapReceiver2x2Alert1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 41)
)
wtTrapReceiver2x2Alert1.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ReportSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert1.setStatus(
        ""
    )

wtTrapReceiver2x2Alert2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 42)
)
wtTrapReceiver2x2Alert2.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert2.setStatus(
        ""
    )

wtTrapReceiver2x2Alert3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 43)
)
wtTrapReceiver2x2Alert3.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert3.setStatus(
        ""
    )

wtTrapReceiver2x2Alert4 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 44)
)
wtTrapReceiver2x2Alert4.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert4.setStatus(
        ""
    )

wtTrapReceiver2x2Alert5 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 45)
)
wtTrapReceiver2x2Alert5.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert5.setStatus(
        ""
    )

wtTrapReceiver2x2Alert6 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 46)
)
wtTrapReceiver2x2Alert6.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert6.setStatus(
        ""
    )

wtTrapReceiver2x2Alert7 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 47)
)
wtTrapReceiver2x2Alert7.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert7.setStatus(
        ""
    )

wtTrapReceiver2x2Alert8 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 48)
)
wtTrapReceiver2x2Alert8.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert8.setStatus(
        ""
    )

wtTrapReceiver2x2Alert9 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 49)
)
wtTrapReceiver2x2Alert9.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert9.setStatus(
        ""
    )

wtTrapReceiver2x2Alert10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 50)
)
wtTrapReceiver2x2Alert10.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert10.setStatus(
        ""
    )

wtTrapReceiver2x2Alert11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 51)
)
wtTrapReceiver2x2Alert11.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert11.setStatus(
        ""
    )

wtTrapReceiver2x2Alert12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 52)
)
wtTrapReceiver2x2Alert12.setObjects(
    ("Webio-Digital-MIB-US", "wtTrapReceiver2x2ActionSnmpTrapText")
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2Alert12.setStatus(
        ""
    )

wtTrapReceiver2x2AlertDiag = NotificationType(
    (1, 3, 6, 1, 4, 1, 5040, 1, 2, 33, 0, 110)
)
wtTrapReceiver2x2AlertDiag.setObjects(
      *(("Webio-Digital-MIB-US", "wtTrapReceiver2x2DiagErrorIndex"),
        ("Webio-Digital-MIB-US", "wtTrapReceiver2x2DiagErrorMessage"))
)
if mibBuilder.loadTexts:
    wtTrapReceiver2x2AlertDiag.setStatus(
        ""
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "Webio-Digital-MIB-US",
    **{"wut": wut,
       "wtComServer": wtComServer,
       "wtWebio": wtWebio,
       "wtWebioEA12x12": wtWebioEA12x12,
       "wtWebioEA12x12Alert1": wtWebioEA12x12Alert1,
       "wtWebioEA12x12Alert2": wtWebioEA12x12Alert2,
       "wtWebioEA12x12Alert3": wtWebioEA12x12Alert3,
       "wtWebioEA12x12Alert4": wtWebioEA12x12Alert4,
       "wtWebioEA12x12Alert5": wtWebioEA12x12Alert5,
       "wtWebioEA12x12Alert6": wtWebioEA12x12Alert6,
       "wtWebioEA12x12Alert7": wtWebioEA12x12Alert7,
       "wtWebioEA12x12Alert8": wtWebioEA12x12Alert8,
       "wtWebioEA12x12Alert9": wtWebioEA12x12Alert9,
       "wtWebioEA12x12Alert10": wtWebioEA12x12Alert10,
       "wtWebioEA12x12Alert11": wtWebioEA12x12Alert11,
       "wtWebioEA12x12Alert12": wtWebioEA12x12Alert12,
       "wtWebioEA12x12Alert13": wtWebioEA12x12Alert13,
       "wtWebioEA12x12Alert14": wtWebioEA12x12Alert14,
       "wtWebioEA12x12Alert15": wtWebioEA12x12Alert15,
       "wtWebioEA12x12Alert16": wtWebioEA12x12Alert16,
       "wtWebioEA12x12Alert17": wtWebioEA12x12Alert17,
       "wtWebioEA12x12Alert18": wtWebioEA12x12Alert18,
       "wtWebioEA12x12Alert19": wtWebioEA12x12Alert19,
       "wtWebioEA12x12Alert20": wtWebioEA12x12Alert20,
       "wtWebioEA12x12Alert21": wtWebioEA12x12Alert21,
       "wtWebioEA12x12Alert22": wtWebioEA12x12Alert22,
       "wtWebioEA12x12Alert23": wtWebioEA12x12Alert23,
       "wtWebioEA12x12Alert24": wtWebioEA12x12Alert24,
       "wtWebioEA12x12AlertDiag": wtWebioEA12x12AlertDiag,
       "wtWebioEA12x12InOut": wtWebioEA12x12InOut,
       "wtWebioEA12x12Inputs": wtWebioEA12x12Inputs,
       "wtWebioEA12x12Outputs": wtWebioEA12x12Outputs,
       "wtWebioEA12x12InputTable": wtWebioEA12x12InputTable,
       "wtWebioEA12x12InputEntry": wtWebioEA12x12InputEntry,
       "wtWebioEA12x12InputNo": wtWebioEA12x12InputNo,
       "wtWebioEA12x12InputCounter": wtWebioEA12x12InputCounter,
       "wtWebioEA12x12InputCounterClear": wtWebioEA12x12InputCounterClear,
       "wtWebioEA12x12InputState": wtWebioEA12x12InputState,
       "wtWebioEA12x12InputValue": wtWebioEA12x12InputValue,
       "wtWebioEA12x12OutputTable": wtWebioEA12x12OutputTable,
       "wtWebioEA12x12OutputEntry": wtWebioEA12x12OutputEntry,
       "wtWebioEA12x12OutputNo": wtWebioEA12x12OutputNo,
       "wtWebioEA12x12OutputState": wtWebioEA12x12OutputState,
       "wtWebioEA12x12OutputValue": wtWebioEA12x12OutputValue,
       "wtWebioEA12x12SetOutput": wtWebioEA12x12SetOutput,
       "wtWebioEA12x12SessCntrl": wtWebioEA12x12SessCntrl,
       "wtWebioEA12x12SessCntrlPassword": wtWebioEA12x12SessCntrlPassword,
       "wtWebioEA12x12SessCntrlConfigMode": wtWebioEA12x12SessCntrlConfigMode,
       "wtWebioEA12x12SessCntrlLogout": wtWebioEA12x12SessCntrlLogout,
       "wtWebioEA12x12SessCntrlAdminPassword": wtWebioEA12x12SessCntrlAdminPassword,
       "wtWebioEA12x12SessCntrlConfigPassword": wtWebioEA12x12SessCntrlConfigPassword,
       "wtWebioEA12x12Config": wtWebioEA12x12Config,
       "wtWebioEA12x12Device": wtWebioEA12x12Device,
       "wtWebioEA12x12Text": wtWebioEA12x12Text,
       "wtWebioEA12x12DeviceName": wtWebioEA12x12DeviceName,
       "wtWebioEA12x12DeviceText": wtWebioEA12x12DeviceText,
       "wtWebioEA12x12DeviceLocation": wtWebioEA12x12DeviceLocation,
       "wtWebioEA12x12DeviceContact": wtWebioEA12x12DeviceContact,
       "wtWebioEA12x12TimeDate": wtWebioEA12x12TimeDate,
       "wtWebioEA12x12TimeZone": wtWebioEA12x12TimeZone,
       "wtWebioEA12x12TzOffsetHrs": wtWebioEA12x12TzOffsetHrs,
       "wtWebioEA12x12TzOffsetMin": wtWebioEA12x12TzOffsetMin,
       "wtWebioEA12x12TzEnable": wtWebioEA12x12TzEnable,
       "wtWebioEA12x12StTzOffsetHrs": wtWebioEA12x12StTzOffsetHrs,
       "wtWebioEA12x12StTzOffsetMin": wtWebioEA12x12StTzOffsetMin,
       "wtWebioEA12x12StTzEnable": wtWebioEA12x12StTzEnable,
       "wtWebioEA12x12StTzStartMonth": wtWebioEA12x12StTzStartMonth,
       "wtWebioEA12x12StTzStartMode": wtWebioEA12x12StTzStartMode,
       "wtWebioEA12x12StTzStartWday": wtWebioEA12x12StTzStartWday,
       "wtWebioEA12x12StTzStartHrs": wtWebioEA12x12StTzStartHrs,
       "wtWebioEA12x12StTzStartMin": wtWebioEA12x12StTzStartMin,
       "wtWebioEA12x12StTzStopMonth": wtWebioEA12x12StTzStopMonth,
       "wtWebioEA12x12StTzStopMode": wtWebioEA12x12StTzStopMode,
       "wtWebioEA12x12StTzStopWday": wtWebioEA12x12StTzStopWday,
       "wtWebioEA12x12StTzStopHrs": wtWebioEA12x12StTzStopHrs,
       "wtWebioEA12x12StTzStopMin": wtWebioEA12x12StTzStopMin,
       "wtWebioEA12x12TimeServer": wtWebioEA12x12TimeServer,
       "wtWebioEA12x12TimeServer1": wtWebioEA12x12TimeServer1,
       "wtWebioEA12x12TimeServer2": wtWebioEA12x12TimeServer2,
       "wtWebioEA12x12TsEnable": wtWebioEA12x12TsEnable,
       "wtWebioEA12x12TsSyncTime": wtWebioEA12x12TsSyncTime,
       "wtWebioEA12x12DeviceClock": wtWebioEA12x12DeviceClock,
       "wtWebioEA12x12ClockHrs": wtWebioEA12x12ClockHrs,
       "wtWebioEA12x12ClockMin": wtWebioEA12x12ClockMin,
       "wtWebioEA12x12ClockDay": wtWebioEA12x12ClockDay,
       "wtWebioEA12x12ClockMonth": wtWebioEA12x12ClockMonth,
       "wtWebioEA12x12ClockYear": wtWebioEA12x12ClockYear,
       "wtWebioEA12x12Basic": wtWebioEA12x12Basic,
       "wtWebioEA12x12Network": wtWebioEA12x12Network,
       "wtWebioEA12x12IpAddress": wtWebioEA12x12IpAddress,
       "wtWebioEA12x12SubnetMask": wtWebioEA12x12SubnetMask,
       "wtWebioEA12x12Gateway": wtWebioEA12x12Gateway,
       "wtWebioEA12x12DnsServer1": wtWebioEA12x12DnsServer1,
       "wtWebioEA12x12DnsServer2": wtWebioEA12x12DnsServer2,
       "wtWebioEA12x12AddConfig": wtWebioEA12x12AddConfig,
       "wtWebioEA12x12HTTP": wtWebioEA12x12HTTP,
       "wtWebioEA12x12Startup": wtWebioEA12x12Startup,
       "wtWebioEA12x12GetHeaderEnable": wtWebioEA12x12GetHeaderEnable,
       "wtWebioEA12x12HttpInputTrigger": wtWebioEA12x12HttpInputTrigger,
       "wtWebioEA12x12HttpPort": wtWebioEA12x12HttpPort,
       "wtWebioEA12x12Mail": wtWebioEA12x12Mail,
       "wtWebioEA12x12MailAdName": wtWebioEA12x12MailAdName,
       "wtWebioEA12x12MailReply": wtWebioEA12x12MailReply,
       "wtWebioEA12x12MailServer": wtWebioEA12x12MailServer,
       "wtWebioEA12x12MailEnable": wtWebioEA12x12MailEnable,
       "wtWebioEA12x12MailAuthentication": wtWebioEA12x12MailAuthentication,
       "wtWebioEA12x12MailAuthUser": wtWebioEA12x12MailAuthUser,
       "wtWebioEA12x12MailAuthPassword": wtWebioEA12x12MailAuthPassword,
       "wtWebioEA12x12MailPop3Server": wtWebioEA12x12MailPop3Server,
       "wtWebioEA12x12SNMP": wtWebioEA12x12SNMP,
       "wtWebioEA12x12SnmpEnable": wtWebioEA12x12SnmpEnable,
       "wtWebioEA12x12SnmpCommunityStringRead": wtWebioEA12x12SnmpCommunityStringRead,
       "wtWebioEA12x12SnmpCommunityStringReadWrite": wtWebioEA12x12SnmpCommunityStringReadWrite,
       "wtWebioEA12x12SnmpSystemTrapManagerIP": wtWebioEA12x12SnmpSystemTrapManagerIP,
       "wtWebioEA12x12SnmpSystemTrapEnable": wtWebioEA12x12SnmpSystemTrapEnable,
       "wtWebioEA12x12UDP": wtWebioEA12x12UDP,
       "wtWebioEA12x12UdpAdminPort": wtWebioEA12x12UdpAdminPort,
       "wtWebioEA12x12UdpEnable": wtWebioEA12x12UdpEnable,
       "wtWebioEA12x12UdpRemotePort": wtWebioEA12x12UdpRemotePort,
       "wtWebioEA12x12Binary": wtWebioEA12x12Binary,
       "wtWebioEA12x12BinaryModeCount": wtWebioEA12x12BinaryModeCount,
       "wtWebioEA12x12BinaryIfTable": wtWebioEA12x12BinaryIfTable,
       "wtWebioEA12x12BinaryIfEntry": wtWebioEA12x12BinaryIfEntry,
       "wtWebioEA12x12BinaryModeNo": wtWebioEA12x12BinaryModeNo,
       "wtWebioEA12x12BinaryTable": wtWebioEA12x12BinaryTable,
       "wtWebioEA12x12BinaryEntry": wtWebioEA12x12BinaryEntry,
       "wtWebioEA12x12BinaryOperationMode": wtWebioEA12x12BinaryOperationMode,
       "wtWebioEA12x12BinaryTcpServerLocalPort": wtWebioEA12x12BinaryTcpServerLocalPort,
       "wtWebioEA12x12BinaryTcpServerInputTrigger": wtWebioEA12x12BinaryTcpServerInputTrigger,
       "wtWebioEA12x12BinaryTcpServerApplicationMode": wtWebioEA12x12BinaryTcpServerApplicationMode,
       "wtWebioEA12x12BinaryTcpClientLocalPort": wtWebioEA12x12BinaryTcpClientLocalPort,
       "wtWebioEA12x12BinaryTcpClientServerPort": wtWebioEA12x12BinaryTcpClientServerPort,
       "wtWebioEA12x12BinaryTcpClientServerIpAddr": wtWebioEA12x12BinaryTcpClientServerIpAddr,
       "wtWebioEA12x12BinaryTcpClientServerPassword": wtWebioEA12x12BinaryTcpClientServerPassword,
       "wtWebioEA12x12BinaryTcpClientInactivity": wtWebioEA12x12BinaryTcpClientInactivity,
       "wtWebioEA12x12BinaryTcpClientInputTrigger": wtWebioEA12x12BinaryTcpClientInputTrigger,
       "wtWebioEA12x12BinaryTcpClientInterval": wtWebioEA12x12BinaryTcpClientInterval,
       "wtWebioEA12x12BinaryTcpClientApplicationMode": wtWebioEA12x12BinaryTcpClientApplicationMode,
       "wtWebioEA12x12BinaryUdpPeerLocalPort": wtWebioEA12x12BinaryUdpPeerLocalPort,
       "wtWebioEA12x12BinaryUdpPeerRemotePort": wtWebioEA12x12BinaryUdpPeerRemotePort,
       "wtWebioEA12x12BinaryUdpPeerRemoteIpAddr": wtWebioEA12x12BinaryUdpPeerRemoteIpAddr,
       "wtWebioEA12x12BinaryUdpPeerInputTrigger": wtWebioEA12x12BinaryUdpPeerInputTrigger,
       "wtWebioEA12x12BinaryUdpPeerInterval": wtWebioEA12x12BinaryUdpPeerInterval,
       "wtWebioEA12x12BinaryUdpPeerApplicationMode": wtWebioEA12x12BinaryUdpPeerApplicationMode,
       "wtWebioEA12x12BinaryConnectedPort": wtWebioEA12x12BinaryConnectedPort,
       "wtWebioEA12x12BinaryConnectedIpAddr": wtWebioEA12x12BinaryConnectedIpAddr,
       "wtWebioEA12x12BinaryTcpServerClientHttpPort": wtWebioEA12x12BinaryTcpServerClientHttpPort,
       "wtWebioEA12x12BinaryTcpClientServerHttpPort": wtWebioEA12x12BinaryTcpClientServerHttpPort,
       "wtWebioEA12x12Syslog": wtWebioEA12x12Syslog,
       "wtWebioEA12x12SyslogServerIP": wtWebioEA12x12SyslogServerIP,
       "wtWebioEA12x12SyslogServerPort": wtWebioEA12x12SyslogServerPort,
       "wtWebioEA12x12SyslogSystemMessagesEnable": wtWebioEA12x12SyslogSystemMessagesEnable,
       "wtWebioEA12x12SyslogEnable": wtWebioEA12x12SyslogEnable,
       "wtWebioEA12x12FTP": wtWebioEA12x12FTP,
       "wtWebioEA12x12FTPServerIP": wtWebioEA12x12FTPServerIP,
       "wtWebioEA12x12FTPServerControlPort": wtWebioEA12x12FTPServerControlPort,
       "wtWebioEA12x12FTPUserName": wtWebioEA12x12FTPUserName,
       "wtWebioEA12x12FTPPassword": wtWebioEA12x12FTPPassword,
       "wtWebioEA12x12FTPAccount": wtWebioEA12x12FTPAccount,
       "wtWebioEA12x12FTPOption": wtWebioEA12x12FTPOption,
       "wtWebioEA12x12FTPEnable": wtWebioEA12x12FTPEnable,
       "wtWebioEA12x12OutputMode": wtWebioEA12x12OutputMode,
       "wtWebioEA12x12OutputModeTable": wtWebioEA12x12OutputModeTable,
       "wtWebioEA12x12OutputModeEntry": wtWebioEA12x12OutputModeEntry,
       "wtWebioEA12x12OutputModeBit": wtWebioEA12x12OutputModeBit,
       "wtWebioEA12x12SafetyTimeout": wtWebioEA12x12SafetyTimeout,
       "wtWebioEA12x12LoadControlEnable": wtWebioEA12x12LoadControlEnable,
       "wtWebioEA12x12Alarm": wtWebioEA12x12Alarm,
       "wtWebioEA12x12AlarmCount": wtWebioEA12x12AlarmCount,
       "wtWebioEA12x12AlarmIfTable": wtWebioEA12x12AlarmIfTable,
       "wtWebioEA12x12AlarmIfEntry": wtWebioEA12x12AlarmIfEntry,
       "wtWebioEA12x12AlarmNo": wtWebioEA12x12AlarmNo,
       "wtWebioEA12x12AlarmTable": wtWebioEA12x12AlarmTable,
       "wtWebioEA12x12AlarmEntry": wtWebioEA12x12AlarmEntry,
       "wtWebioEA12x12AlarmInputTrigger": wtWebioEA12x12AlarmInputTrigger,
       "wtWebioEA12x12AlarmOutputTrigger": wtWebioEA12x12AlarmOutputTrigger,
       "wtWebioEA12x12AlarmSystemTrigger": wtWebioEA12x12AlarmSystemTrigger,
       "wtWebioEA12x12AlarmMaxCounterValue": wtWebioEA12x12AlarmMaxCounterValue,
       "wtWebioEA12x12AlarmInterval": wtWebioEA12x12AlarmInterval,
       "wtWebioEA12x12AlarmEnable": wtWebioEA12x12AlarmEnable,
       "wtWebioEA12x12AlarmMailAddr": wtWebioEA12x12AlarmMailAddr,
       "wtWebioEA12x12AlarmMailSubject": wtWebioEA12x12AlarmMailSubject,
       "wtWebioEA12x12AlarmMailText": wtWebioEA12x12AlarmMailText,
       "wtWebioEA12x12AlarmSnmpManagerIP": wtWebioEA12x12AlarmSnmpManagerIP,
       "wtWebioEA12x12AlarmSnmpTrapText": wtWebioEA12x12AlarmSnmpTrapText,
       "wtWebioEA12x12AlarmUdpIpAddr": wtWebioEA12x12AlarmUdpIpAddr,
       "wtWebioEA12x12AlarmUdpPort": wtWebioEA12x12AlarmUdpPort,
       "wtWebioEA12x12AlarmUdpText": wtWebioEA12x12AlarmUdpText,
       "wtWebioEA12x12AlarmTcpIpAddr": wtWebioEA12x12AlarmTcpIpAddr,
       "wtWebioEA12x12AlarmTcpPort": wtWebioEA12x12AlarmTcpPort,
       "wtWebioEA12x12AlarmTcpText": wtWebioEA12x12AlarmTcpText,
       "wtWebioEA12x12AlarmSyslogIpAddr": wtWebioEA12x12AlarmSyslogIpAddr,
       "wtWebioEA12x12AlarmSyslogPort": wtWebioEA12x12AlarmSyslogPort,
       "wtWebioEA12x12AlarmSyslogText": wtWebioEA12x12AlarmSyslogText,
       "wtWebioEA12x12AlarmFtpDataPort": wtWebioEA12x12AlarmFtpDataPort,
       "wtWebioEA12x12AlarmFtpFileName": wtWebioEA12x12AlarmFtpFileName,
       "wtWebioEA12x12AlarmFtpText": wtWebioEA12x12AlarmFtpText,
       "wtWebioEA12x12AlarmFtpOption": wtWebioEA12x12AlarmFtpOption,
       "wtWebioEA12x12AlarmTimerCron": wtWebioEA12x12AlarmTimerCron,
       "wtWebioEA12x12AlarmMailReleaseSubject": wtWebioEA12x12AlarmMailReleaseSubject,
       "wtWebioEA12x12AlarmMailReleaseText": wtWebioEA12x12AlarmMailReleaseText,
       "wtWebioEA12x12AlarmSnmpTrapReleaseText": wtWebioEA12x12AlarmSnmpTrapReleaseText,
       "wtWebioEA12x12AlarmUdpReleaseText": wtWebioEA12x12AlarmUdpReleaseText,
       "wtWebioEA12x12AlarmTcpReleaseText": wtWebioEA12x12AlarmTcpReleaseText,
       "wtWebioEA12x12AlarmSyslogReleaseText": wtWebioEA12x12AlarmSyslogReleaseText,
       "wtWebioEA12x12AlarmFtpReleaseText": wtWebioEA12x12AlarmFtpReleaseText,
       "wtWebioEA12x12LoadControlView": wtWebioEA12x12LoadControlView,
       "wtWebioEA12x12LCShutDownView": wtWebioEA12x12LCShutDownView,
       "wtWebioEA12x12Ports": wtWebioEA12x12Ports,
       "wtWebioEA12x12InputPortTable": wtWebioEA12x12InputPortTable,
       "wtWebioEA12x12InputPortEntry": wtWebioEA12x12InputPortEntry,
       "wtWebioEA12x12PortInputName": wtWebioEA12x12PortInputName,
       "wtWebioEA12x12PortInputText": wtWebioEA12x12PortInputText,
       "wtWebioEA12x12PortInputMode": wtWebioEA12x12PortInputMode,
       "wtWebioEA12x12PortInputFilter": wtWebioEA12x12PortInputFilter,
       "wtWebioEA12x12PortInputBicountPulsePolarity": wtWebioEA12x12PortInputBicountPulsePolarity,
       "wtWebioEA12x12PortInputBicountInactivTimeout": wtWebioEA12x12PortInputBicountInactivTimeout,
       "wtWebioEA12x12OutputPortTable": wtWebioEA12x12OutputPortTable,
       "wtWebioEA12x12OutputPortEntry": wtWebioEA12x12OutputPortEntry,
       "wtWebioEA12x12PortOutputName": wtWebioEA12x12PortOutputName,
       "wtWebioEA12x12PortOutputText": wtWebioEA12x12PortOutputText,
       "wtWebioEA12x12PortOutputGroupMode": wtWebioEA12x12PortOutputGroupMode,
       "wtWebioEA12x12PortOutputSafetyState": wtWebioEA12x12PortOutputSafetyState,
       "wtWebioEA12x12PortLogicInputMask": wtWebioEA12x12PortLogicInputMask,
       "wtWebioEA12x12PortLogicInputInverter": wtWebioEA12x12PortLogicInputInverter,
       "wtWebioEA12x12PortLogicFunction": wtWebioEA12x12PortLogicFunction,
       "wtWebioEA12x12PortLogicOutputInverter": wtWebioEA12x12PortLogicOutputInverter,
       "wtWebioEA12x12PortPulseDuration": wtWebioEA12x12PortPulseDuration,
       "wtWebioEA12x12PortPulsePolarity": wtWebioEA12x12PortPulsePolarity,
       "wtWebioEA12x12Manufact": wtWebioEA12x12Manufact,
       "wtWebioEA12x12MfName": wtWebioEA12x12MfName,
       "wtWebioEA12x12MfAddr": wtWebioEA12x12MfAddr,
       "wtWebioEA12x12MfHotline": wtWebioEA12x12MfHotline,
       "wtWebioEA12x12MfInternet": wtWebioEA12x12MfInternet,
       "wtWebioEA12x12MfDeviceTyp": wtWebioEA12x12MfDeviceTyp,
       "wtWebioEA12x12Diag": wtWebioEA12x12Diag,
       "wtWebioEA12x12DiagErrorCount": wtWebioEA12x12DiagErrorCount,
       "wtWebioEA12x12DiagBinaryError": wtWebioEA12x12DiagBinaryError,
       "wtWebioEA12x12DiagErrorIndex": wtWebioEA12x12DiagErrorIndex,
       "wtWebioEA12x12DiagErrorMessage": wtWebioEA12x12DiagErrorMessage,
       "wtWebioEA12x12DiagErrorClear": wtWebioEA12x12DiagErrorClear,
       "wtWebioEA2x2": wtWebioEA2x2,
       "wtWebioEA2x2Alert1": wtWebioEA2x2Alert1,
       "wtWebioEA2x2Alert2": wtWebioEA2x2Alert2,
       "wtWebioEA2x2Alert3": wtWebioEA2x2Alert3,
       "wtWebioEA2x2Alert4": wtWebioEA2x2Alert4,
       "wtWebioEA2x2Alert5": wtWebioEA2x2Alert5,
       "wtWebioEA2x2Alert6": wtWebioEA2x2Alert6,
       "wtWebioEA2x2Alert7": wtWebioEA2x2Alert7,
       "wtWebioEA2x2Alert8": wtWebioEA2x2Alert8,
       "wtWebioEA2x2Alert9": wtWebioEA2x2Alert9,
       "wtWebioEA2x2Alert10": wtWebioEA2x2Alert10,
       "wtWebioEA2x2Alert11": wtWebioEA2x2Alert11,
       "wtWebioEA2x2Alert12": wtWebioEA2x2Alert12,
       "wtWebioEA2x2Alert13": wtWebioEA2x2Alert13,
       "wtWebioEA2x2Alert14": wtWebioEA2x2Alert14,
       "wtWebioEA2x2Alert15": wtWebioEA2x2Alert15,
       "wtWebioEA2x2Alert16": wtWebioEA2x2Alert16,
       "wtWebioEA2x2Alert17": wtWebioEA2x2Alert17,
       "wtWebioEA2x2Alert18": wtWebioEA2x2Alert18,
       "wtWebioEA2x2Alert19": wtWebioEA2x2Alert19,
       "wtWebioEA2x2Alert20": wtWebioEA2x2Alert20,
       "wtWebioEA2x2Alert21": wtWebioEA2x2Alert21,
       "wtWebioEA2x2Alert22": wtWebioEA2x2Alert22,
       "wtWebioEA2x2Alert23": wtWebioEA2x2Alert23,
       "wtWebioEA2x2Alert24": wtWebioEA2x2Alert24,
       "wtWebioEA2x2AlertDiag": wtWebioEA2x2AlertDiag,
       "wtWebioEA2x2InOut": wtWebioEA2x2InOut,
       "wtWebioEA2x2Inputs": wtWebioEA2x2Inputs,
       "wtWebioEA2x2Outputs": wtWebioEA2x2Outputs,
       "wtWebioEA2x2InputTable": wtWebioEA2x2InputTable,
       "wtWebioEA2x2InputEntry": wtWebioEA2x2InputEntry,
       "wtWebioEA2x2InputNo": wtWebioEA2x2InputNo,
       "wtWebioEA2x2InputCounter": wtWebioEA2x2InputCounter,
       "wtWebioEA2x2InputCounterClear": wtWebioEA2x2InputCounterClear,
       "wtWebioEA2x2InputState": wtWebioEA2x2InputState,
       "wtWebioEA2x2InputValue": wtWebioEA2x2InputValue,
       "wtWebioEA2x2OutputTable": wtWebioEA2x2OutputTable,
       "wtWebioEA2x2OutputEntry": wtWebioEA2x2OutputEntry,
       "wtWebioEA2x2OutputNo": wtWebioEA2x2OutputNo,
       "wtWebioEA2x2OutputState": wtWebioEA2x2OutputState,
       "wtWebioEA2x2OutputValue": wtWebioEA2x2OutputValue,
       "wtWebioEA2x2SetOutput": wtWebioEA2x2SetOutput,
       "wtWebioEA2x2SessCntrl": wtWebioEA2x2SessCntrl,
       "wtWebioEA2x2SessCntrlPassword": wtWebioEA2x2SessCntrlPassword,
       "wtWebioEA2x2SessCntrlConfigMode": wtWebioEA2x2SessCntrlConfigMode,
       "wtWebioEA2x2SessCntrlLogout": wtWebioEA2x2SessCntrlLogout,
       "wtWebioEA2x2SessCntrlAdminPassword": wtWebioEA2x2SessCntrlAdminPassword,
       "wtWebioEA2x2SessCntrlConfigPassword": wtWebioEA2x2SessCntrlConfigPassword,
       "wtWebioEA2x2Config": wtWebioEA2x2Config,
       "wtWebioEA2x2Device": wtWebioEA2x2Device,
       "wtWebioEA2x2Text": wtWebioEA2x2Text,
       "wtWebioEA2x2DeviceName": wtWebioEA2x2DeviceName,
       "wtWebioEA2x2DeviceText": wtWebioEA2x2DeviceText,
       "wtWebioEA2x2DeviceLocation": wtWebioEA2x2DeviceLocation,
       "wtWebioEA2x2DeviceContact": wtWebioEA2x2DeviceContact,
       "wtWebioEA2x2TimeDate": wtWebioEA2x2TimeDate,
       "wtWebioEA2x2TimeZone": wtWebioEA2x2TimeZone,
       "wtWebioEA2x2TzOffsetHrs": wtWebioEA2x2TzOffsetHrs,
       "wtWebioEA2x2TzOffsetMin": wtWebioEA2x2TzOffsetMin,
       "wtWebioEA2x2TzEnable": wtWebioEA2x2TzEnable,
       "wtWebioEA2x2StTzOffsetHrs": wtWebioEA2x2StTzOffsetHrs,
       "wtWebioEA2x2StTzOffsetMin": wtWebioEA2x2StTzOffsetMin,
       "wtWebioEA2x2StTzEnable": wtWebioEA2x2StTzEnable,
       "wtWebioEA2x2StTzStartMonth": wtWebioEA2x2StTzStartMonth,
       "wtWebioEA2x2StTzStartMode": wtWebioEA2x2StTzStartMode,
       "wtWebioEA2x2StTzStartWday": wtWebioEA2x2StTzStartWday,
       "wtWebioEA2x2StTzStartHrs": wtWebioEA2x2StTzStartHrs,
       "wtWebioEA2x2StTzStartMin": wtWebioEA2x2StTzStartMin,
       "wtWebioEA2x2StTzStopMonth": wtWebioEA2x2StTzStopMonth,
       "wtWebioEA2x2StTzStopMode": wtWebioEA2x2StTzStopMode,
       "wtWebioEA2x2StTzStopWday": wtWebioEA2x2StTzStopWday,
       "wtWebioEA2x2StTzStopHrs": wtWebioEA2x2StTzStopHrs,
       "wtWebioEA2x2StTzStopMin": wtWebioEA2x2StTzStopMin,
       "wtWebioEA2x2TimeServer": wtWebioEA2x2TimeServer,
       "wtWebioEA2x2TimeServer1": wtWebioEA2x2TimeServer1,
       "wtWebioEA2x2TimeServer2": wtWebioEA2x2TimeServer2,
       "wtWebioEA2x2TsEnable": wtWebioEA2x2TsEnable,
       "wtWebioEA2x2TsSyncTime": wtWebioEA2x2TsSyncTime,
       "wtWebioEA2x2DeviceClock": wtWebioEA2x2DeviceClock,
       "wtWebioEA2x2ClockHrs": wtWebioEA2x2ClockHrs,
       "wtWebioEA2x2ClockMin": wtWebioEA2x2ClockMin,
       "wtWebioEA2x2ClockDay": wtWebioEA2x2ClockDay,
       "wtWebioEA2x2ClockMonth": wtWebioEA2x2ClockMonth,
       "wtWebioEA2x2ClockYear": wtWebioEA2x2ClockYear,
       "wtWebioEA2x2Basic": wtWebioEA2x2Basic,
       "wtWebioEA2x2Network": wtWebioEA2x2Network,
       "wtWebioEA2x2IpAddress": wtWebioEA2x2IpAddress,
       "wtWebioEA2x2SubnetMask": wtWebioEA2x2SubnetMask,
       "wtWebioEA2x2Gateway": wtWebioEA2x2Gateway,
       "wtWebioEA2x2DnsServer1": wtWebioEA2x2DnsServer1,
       "wtWebioEA2x2DnsServer2": wtWebioEA2x2DnsServer2,
       "wtWebioEA2x2AddConfig": wtWebioEA2x2AddConfig,
       "wtWebioEA2x2HTTP": wtWebioEA2x2HTTP,
       "wtWebioEA2x2Startup": wtWebioEA2x2Startup,
       "wtWebioEA2x2GetHeaderEnable": wtWebioEA2x2GetHeaderEnable,
       "wtWebioEA2x2HttpInputTrigger": wtWebioEA2x2HttpInputTrigger,
       "wtWebioEA2x2HttpPort": wtWebioEA2x2HttpPort,
       "wtWebioEA2x2Mail": wtWebioEA2x2Mail,
       "wtWebioEA2x2MailAdName": wtWebioEA2x2MailAdName,
       "wtWebioEA2x2MailReply": wtWebioEA2x2MailReply,
       "wtWebioEA2x2MailServer": wtWebioEA2x2MailServer,
       "wtWebioEA2x2MailEnable": wtWebioEA2x2MailEnable,
       "wtWebioEA2x2MailAuthentication": wtWebioEA2x2MailAuthentication,
       "wtWebioEA2x2MailAuthUser": wtWebioEA2x2MailAuthUser,
       "wtWebioEA2x2MailAuthPassword": wtWebioEA2x2MailAuthPassword,
       "wtWebioEA2x2MailPop3Server": wtWebioEA2x2MailPop3Server,
       "wtWebioEA2x2SNMP": wtWebioEA2x2SNMP,
       "wtWebioEA2x2SnmpEnable": wtWebioEA2x2SnmpEnable,
       "wtWebioEA2x2SnmpCommunityStringRead": wtWebioEA2x2SnmpCommunityStringRead,
       "wtWebioEA2x2SnmpCommunityStringReadWrite": wtWebioEA2x2SnmpCommunityStringReadWrite,
       "wtWebioEA2x2SnmpSystemTrapManagerIP": wtWebioEA2x2SnmpSystemTrapManagerIP,
       "wtWebioEA2x2SnmpSystemTrapEnable": wtWebioEA2x2SnmpSystemTrapEnable,
       "wtWebioEA2x2UDP": wtWebioEA2x2UDP,
       "wtWebioEA2x2UdpAdminPort": wtWebioEA2x2UdpAdminPort,
       "wtWebioEA2x2UdpEnable": wtWebioEA2x2UdpEnable,
       "wtWebioEA2x2UdpRemotePort": wtWebioEA2x2UdpRemotePort,
       "wtWebioEA2x2Binary": wtWebioEA2x2Binary,
       "wtWebioEA2x2BinaryModeCount": wtWebioEA2x2BinaryModeCount,
       "wtWebioEA2x2BinaryIfTable": wtWebioEA2x2BinaryIfTable,
       "wtWebioEA2x2BinaryIfEntry": wtWebioEA2x2BinaryIfEntry,
       "wtWebioEA2x2BinaryModeNo": wtWebioEA2x2BinaryModeNo,
       "wtWebioEA2x2BinaryTable": wtWebioEA2x2BinaryTable,
       "wtWebioEA2x2BinaryEntry": wtWebioEA2x2BinaryEntry,
       "wtWebioEA2x2BinaryOperationMode": wtWebioEA2x2BinaryOperationMode,
       "wtWebioEA2x2BinaryTcpServerLocalPort": wtWebioEA2x2BinaryTcpServerLocalPort,
       "wtWebioEA2x2BinaryTcpServerInputTrigger": wtWebioEA2x2BinaryTcpServerInputTrigger,
       "wtWebioEA2x2BinaryTcpServerApplicationMode": wtWebioEA2x2BinaryTcpServerApplicationMode,
       "wtWebioEA2x2BinaryTcpClientLocalPort": wtWebioEA2x2BinaryTcpClientLocalPort,
       "wtWebioEA2x2BinaryTcpClientServerPort": wtWebioEA2x2BinaryTcpClientServerPort,
       "wtWebioEA2x2BinaryTcpClientServerIpAddr": wtWebioEA2x2BinaryTcpClientServerIpAddr,
       "wtWebioEA2x2BinaryTcpClientServerPassword": wtWebioEA2x2BinaryTcpClientServerPassword,
       "wtWebioEA2x2BinaryTcpClientInactivity": wtWebioEA2x2BinaryTcpClientInactivity,
       "wtWebioEA2x2BinaryTcpClientInputTrigger": wtWebioEA2x2BinaryTcpClientInputTrigger,
       "wtWebioEA2x2BinaryTcpClientInterval": wtWebioEA2x2BinaryTcpClientInterval,
       "wtWebioEA2x2BinaryTcpClientApplicationMode": wtWebioEA2x2BinaryTcpClientApplicationMode,
       "wtWebioEA2x2BinaryUdpPeerLocalPort": wtWebioEA2x2BinaryUdpPeerLocalPort,
       "wtWebioEA2x2BinaryUdpPeerRemotePort": wtWebioEA2x2BinaryUdpPeerRemotePort,
       "wtWebioEA2x2BinaryUdpPeerRemoteIpAddr": wtWebioEA2x2BinaryUdpPeerRemoteIpAddr,
       "wtWebioEA2x2BinaryUdpPeerInputTrigger": wtWebioEA2x2BinaryUdpPeerInputTrigger,
       "wtWebioEA2x2BinaryUdpPeerInterval": wtWebioEA2x2BinaryUdpPeerInterval,
       "wtWebioEA2x2BinaryUdpPeerApplicationMode": wtWebioEA2x2BinaryUdpPeerApplicationMode,
       "wtWebioEA2x2BinaryConnectedPort": wtWebioEA2x2BinaryConnectedPort,
       "wtWebioEA2x2BinaryConnectedIpAddr": wtWebioEA2x2BinaryConnectedIpAddr,
       "wtWebioEA2x2BinaryTcpServerClientHttpPort": wtWebioEA2x2BinaryTcpServerClientHttpPort,
       "wtWebioEA2x2BinaryTcpClientServerHttpPort": wtWebioEA2x2BinaryTcpClientServerHttpPort,
       "wtWebioEA2x2Syslog": wtWebioEA2x2Syslog,
       "wtWebioEA2x2SyslogServerIP": wtWebioEA2x2SyslogServerIP,
       "wtWebioEA2x2SyslogServerPort": wtWebioEA2x2SyslogServerPort,
       "wtWebioEA2x2SyslogSystemMessagesEnable": wtWebioEA2x2SyslogSystemMessagesEnable,
       "wtWebioEA2x2SyslogEnable": wtWebioEA2x2SyslogEnable,
       "wtWebioEA2x2FTP": wtWebioEA2x2FTP,
       "wtWebioEA2x2FTPServerIP": wtWebioEA2x2FTPServerIP,
       "wtWebioEA2x2FTPServerControlPort": wtWebioEA2x2FTPServerControlPort,
       "wtWebioEA2x2FTPUserName": wtWebioEA2x2FTPUserName,
       "wtWebioEA2x2FTPPassword": wtWebioEA2x2FTPPassword,
       "wtWebioEA2x2FTPAccount": wtWebioEA2x2FTPAccount,
       "wtWebioEA2x2FTPOption": wtWebioEA2x2FTPOption,
       "wtWebioEA2x2FTPEnable": wtWebioEA2x2FTPEnable,
       "wtWebioEA2x2OutputMode": wtWebioEA2x2OutputMode,
       "wtWebioEA2x2OutputModeTable": wtWebioEA2x2OutputModeTable,
       "wtWebioEA2x2OutputModeEntry": wtWebioEA2x2OutputModeEntry,
       "wtWebioEA2x2OutputModeBit": wtWebioEA2x2OutputModeBit,
       "wtWebioEA2x2SafetyTimeout": wtWebioEA2x2SafetyTimeout,
       "wtWebioEA2x2LoadControlEnable": wtWebioEA2x2LoadControlEnable,
       "wtWebioEA2x2Alarm": wtWebioEA2x2Alarm,
       "wtWebioEA2x2AlarmCount": wtWebioEA2x2AlarmCount,
       "wtWebioEA2x2AlarmIfTable": wtWebioEA2x2AlarmIfTable,
       "wtWebioEA2x2AlarmIfEntry": wtWebioEA2x2AlarmIfEntry,
       "wtWebioEA2x2AlarmNo": wtWebioEA2x2AlarmNo,
       "wtWebioEA2x2AlarmTable": wtWebioEA2x2AlarmTable,
       "wtWebioEA2x2AlarmEntry": wtWebioEA2x2AlarmEntry,
       "wtWebioEA2x2AlarmInputTrigger": wtWebioEA2x2AlarmInputTrigger,
       "wtWebioEA2x2AlarmOutputTrigger": wtWebioEA2x2AlarmOutputTrigger,
       "wtWebioEA2x2AlarmSystemTrigger": wtWebioEA2x2AlarmSystemTrigger,
       "wtWebioEA2x2AlarmMaxCounterValue": wtWebioEA2x2AlarmMaxCounterValue,
       "wtWebioEA2x2AlarmInterval": wtWebioEA2x2AlarmInterval,
       "wtWebioEA2x2AlarmEnable": wtWebioEA2x2AlarmEnable,
       "wtWebioEA2x2AlarmMailAddr": wtWebioEA2x2AlarmMailAddr,
       "wtWebioEA2x2AlarmMailSubject": wtWebioEA2x2AlarmMailSubject,
       "wtWebioEA2x2AlarmMailText": wtWebioEA2x2AlarmMailText,
       "wtWebioEA2x2AlarmSnmpManagerIP": wtWebioEA2x2AlarmSnmpManagerIP,
       "wtWebioEA2x2AlarmSnmpTrapText": wtWebioEA2x2AlarmSnmpTrapText,
       "wtWebioEA2x2AlarmUdpIpAddr": wtWebioEA2x2AlarmUdpIpAddr,
       "wtWebioEA2x2AlarmUdpPort": wtWebioEA2x2AlarmUdpPort,
       "wtWebioEA2x2AlarmUdpText": wtWebioEA2x2AlarmUdpText,
       "wtWebioEA2x2AlarmTcpIpAddr": wtWebioEA2x2AlarmTcpIpAddr,
       "wtWebioEA2x2AlarmTcpPort": wtWebioEA2x2AlarmTcpPort,
       "wtWebioEA2x2AlarmTcpText": wtWebioEA2x2AlarmTcpText,
       "wtWebioEA2x2AlarmSyslogIpAddr": wtWebioEA2x2AlarmSyslogIpAddr,
       "wtWebioEA2x2AlarmSyslogPort": wtWebioEA2x2AlarmSyslogPort,
       "wtWebioEA2x2AlarmSyslogText": wtWebioEA2x2AlarmSyslogText,
       "wtWebioEA2x2AlarmFtpDataPort": wtWebioEA2x2AlarmFtpDataPort,
       "wtWebioEA2x2AlarmFtpFileName": wtWebioEA2x2AlarmFtpFileName,
       "wtWebioEA2x2AlarmFtpText": wtWebioEA2x2AlarmFtpText,
       "wtWebioEA2x2AlarmFtpOption": wtWebioEA2x2AlarmFtpOption,
       "wtWebioEA2x2AlarmTimerCron": wtWebioEA2x2AlarmTimerCron,
       "wtWebioEA2x2AlarmMailReleaseSubject": wtWebioEA2x2AlarmMailReleaseSubject,
       "wtWebioEA2x2AlarmMailReleaseText": wtWebioEA2x2AlarmMailReleaseText,
       "wtWebioEA2x2AlarmSnmpTrapReleaseText": wtWebioEA2x2AlarmSnmpTrapReleaseText,
       "wtWebioEA2x2AlarmUdpReleaseText": wtWebioEA2x2AlarmUdpReleaseText,
       "wtWebioEA2x2AlarmTcpReleaseText": wtWebioEA2x2AlarmTcpReleaseText,
       "wtWebioEA2x2AlarmSyslogReleaseText": wtWebioEA2x2AlarmSyslogReleaseText,
       "wtWebioEA2x2AlarmFtpReleaseText": wtWebioEA2x2AlarmFtpReleaseText,
       "wtWebioEA2x2LoadControlView": wtWebioEA2x2LoadControlView,
       "wtWebioEA2x2LCShutDownView": wtWebioEA2x2LCShutDownView,
       "wtWebioEA2x2Ports": wtWebioEA2x2Ports,
       "wtWebioEA2x2InputPortTable": wtWebioEA2x2InputPortTable,
       "wtWebioEA2x2InputPortEntry": wtWebioEA2x2InputPortEntry,
       "wtWebioEA2x2PortInputName": wtWebioEA2x2PortInputName,
       "wtWebioEA2x2PortInputText": wtWebioEA2x2PortInputText,
       "wtWebioEA2x2PortInputMode": wtWebioEA2x2PortInputMode,
       "wtWebioEA2x2PortInputFilter": wtWebioEA2x2PortInputFilter,
       "wtWebioEA2x2PortInputBicountPulsePolarity": wtWebioEA2x2PortInputBicountPulsePolarity,
       "wtWebioEA2x2PortInputBicountInactivTimeout": wtWebioEA2x2PortInputBicountInactivTimeout,
       "wtWebioEA2x2OutputPortTable": wtWebioEA2x2OutputPortTable,
       "wtWebioEA2x2OutputPortEntry": wtWebioEA2x2OutputPortEntry,
       "wtWebioEA2x2PortOutputName": wtWebioEA2x2PortOutputName,
       "wtWebioEA2x2PortOutputText": wtWebioEA2x2PortOutputText,
       "wtWebioEA2x2PortOutputGroupMode": wtWebioEA2x2PortOutputGroupMode,
       "wtWebioEA2x2PortOutputSafetyState": wtWebioEA2x2PortOutputSafetyState,
       "wtWebioEA2x2PortLogicInputMask": wtWebioEA2x2PortLogicInputMask,
       "wtWebioEA2x2PortLogicInputInverter": wtWebioEA2x2PortLogicInputInverter,
       "wtWebioEA2x2PortLogicFunction": wtWebioEA2x2PortLogicFunction,
       "wtWebioEA2x2PortLogicOutputInverter": wtWebioEA2x2PortLogicOutputInverter,
       "wtWebioEA2x2PortPulseDuration": wtWebioEA2x2PortPulseDuration,
       "wtWebioEA2x2PortPulsePolarity": wtWebioEA2x2PortPulsePolarity,
       "wtWebioEA2x2Manufact": wtWebioEA2x2Manufact,
       "wtWebioEA2x2MfName": wtWebioEA2x2MfName,
       "wtWebioEA2x2MfAddr": wtWebioEA2x2MfAddr,
       "wtWebioEA2x2MfHotline": wtWebioEA2x2MfHotline,
       "wtWebioEA2x2MfInternet": wtWebioEA2x2MfInternet,
       "wtWebioEA2x2MfDeviceTyp": wtWebioEA2x2MfDeviceTyp,
       "wtWebioEA2x2Diag": wtWebioEA2x2Diag,
       "wtWebioEA2x2DiagErrorCount": wtWebioEA2x2DiagErrorCount,
       "wtWebioEA2x2DiagBinaryError": wtWebioEA2x2DiagBinaryError,
       "wtWebioEA2x2DiagErrorIndex": wtWebioEA2x2DiagErrorIndex,
       "wtWebioEA2x2DiagErrorMessage": wtWebioEA2x2DiagErrorMessage,
       "wtWebioEA2x2DiagErrorClear": wtWebioEA2x2DiagErrorClear,
       "wtWebioEA24oem": wtWebioEA24oem,
       "wtWebioEA24oemAlert1": wtWebioEA24oemAlert1,
       "wtWebioEA24oemAlert2": wtWebioEA24oemAlert2,
       "wtWebioEA24oemAlert3": wtWebioEA24oemAlert3,
       "wtWebioEA24oemAlert4": wtWebioEA24oemAlert4,
       "wtWebioEA24oemAlert5": wtWebioEA24oemAlert5,
       "wtWebioEA24oemAlert6": wtWebioEA24oemAlert6,
       "wtWebioEA24oemAlert7": wtWebioEA24oemAlert7,
       "wtWebioEA24oemAlert8": wtWebioEA24oemAlert8,
       "wtWebioEA24oemAlert9": wtWebioEA24oemAlert9,
       "wtWebioEA24oemAlert10": wtWebioEA24oemAlert10,
       "wtWebioEA24oemAlert11": wtWebioEA24oemAlert11,
       "wtWebioEA24oemAlert12": wtWebioEA24oemAlert12,
       "wtWebioEA24oemAlert13": wtWebioEA24oemAlert13,
       "wtWebioEA24oemAlert14": wtWebioEA24oemAlert14,
       "wtWebioEA24oemAlert15": wtWebioEA24oemAlert15,
       "wtWebioEA24oemAlert16": wtWebioEA24oemAlert16,
       "wtWebioEA24oemAlert17": wtWebioEA24oemAlert17,
       "wtWebioEA24oemAlert18": wtWebioEA24oemAlert18,
       "wtWebioEA24oemAlert19": wtWebioEA24oemAlert19,
       "wtWebioEA24oemAlert20": wtWebioEA24oemAlert20,
       "wtWebioEA24oemAlert21": wtWebioEA24oemAlert21,
       "wtWebioEA24oemAlert22": wtWebioEA24oemAlert22,
       "wtWebioEA24oemAlert23": wtWebioEA24oemAlert23,
       "wtWebioEA24oemAlert24": wtWebioEA24oemAlert24,
       "wtWebioEA24oemAlert25": wtWebioEA24oemAlert25,
       "wtWebioEA24oemAlert26": wtWebioEA24oemAlert26,
       "wtWebioEA24oemAlert27": wtWebioEA24oemAlert27,
       "wtWebioEA24oemAlert28": wtWebioEA24oemAlert28,
       "wtWebioEA24oemAlert29": wtWebioEA24oemAlert29,
       "wtWebioEA24oemAlert30": wtWebioEA24oemAlert30,
       "wtWebioEA24oemAlert31": wtWebioEA24oemAlert31,
       "wtWebioEA24oemAlert32": wtWebioEA24oemAlert32,
       "wtWebioEA24oemAlertDiag": wtWebioEA24oemAlertDiag,
       "wtWebioEA24oemInOut": wtWebioEA24oemInOut,
       "wtWebioEA24oemInputs": wtWebioEA24oemInputs,
       "wtWebioEA24oemOutputs": wtWebioEA24oemOutputs,
       "wtWebioEA24oemInputTable": wtWebioEA24oemInputTable,
       "wtWebioEA24oemInputEntry": wtWebioEA24oemInputEntry,
       "wtWebioEA24oemInputNo": wtWebioEA24oemInputNo,
       "wtWebioEA24oemInputCounter": wtWebioEA24oemInputCounter,
       "wtWebioEA24oemInputCounterClear": wtWebioEA24oemInputCounterClear,
       "wtWebioEA24oemInputState": wtWebioEA24oemInputState,
       "wtWebioEA24oemInputValue": wtWebioEA24oemInputValue,
       "wtWebioEA24oemOutputTable": wtWebioEA24oemOutputTable,
       "wtWebioEA24oemOutputEntry": wtWebioEA24oemOutputEntry,
       "wtWebioEA24oemOutputNo": wtWebioEA24oemOutputNo,
       "wtWebioEA24oemOutputState": wtWebioEA24oemOutputState,
       "wtWebioEA24oemOutputValue": wtWebioEA24oemOutputValue,
       "wtWebioEA24oemSetOutput": wtWebioEA24oemSetOutput,
       "wtWebioEA24oemSessCntrl": wtWebioEA24oemSessCntrl,
       "wtWebioEA24oemSessCntrlPassword": wtWebioEA24oemSessCntrlPassword,
       "wtWebioEA24oemSessCntrlConfigMode": wtWebioEA24oemSessCntrlConfigMode,
       "wtWebioEA24oemSessCntrlLogout": wtWebioEA24oemSessCntrlLogout,
       "wtWebioEA24oemSessCntrlAdminPassword": wtWebioEA24oemSessCntrlAdminPassword,
       "wtWebioEA24oemSessCntrlConfigPassword": wtWebioEA24oemSessCntrlConfigPassword,
       "wtWebioEA24oemConfig": wtWebioEA24oemConfig,
       "wtWebioEA24oemDevice": wtWebioEA24oemDevice,
       "wtWebioEA24oemText": wtWebioEA24oemText,
       "wtWebioEA24oemDeviceName": wtWebioEA24oemDeviceName,
       "wtWebioEA24oemDeviceText": wtWebioEA24oemDeviceText,
       "wtWebioEA24oemDeviceLocation": wtWebioEA24oemDeviceLocation,
       "wtWebioEA24oemDeviceContact": wtWebioEA24oemDeviceContact,
       "wtWebioEA24oemTimeDate": wtWebioEA24oemTimeDate,
       "wtWebioEA24oemTimeZone": wtWebioEA24oemTimeZone,
       "wtWebioEA24oemTzOffsetHrs": wtWebioEA24oemTzOffsetHrs,
       "wtWebioEA24oemTzOffsetMin": wtWebioEA24oemTzOffsetMin,
       "wtWebioEA24oemTzEnable": wtWebioEA24oemTzEnable,
       "wtWebioEA24oemStTzOffsetHrs": wtWebioEA24oemStTzOffsetHrs,
       "wtWebioEA24oemStTzOffsetMin": wtWebioEA24oemStTzOffsetMin,
       "wtWebioEA24oemStTzEnable": wtWebioEA24oemStTzEnable,
       "wtWebioEA24oemStTzStartMonth": wtWebioEA24oemStTzStartMonth,
       "wtWebioEA24oemStTzStartMode": wtWebioEA24oemStTzStartMode,
       "wtWebioEA24oemStTzStartWday": wtWebioEA24oemStTzStartWday,
       "wtWebioEA24oemStTzStartHrs": wtWebioEA24oemStTzStartHrs,
       "wtWebioEA24oemStTzStartMin": wtWebioEA24oemStTzStartMin,
       "wtWebioEA24oemStTzStopMonth": wtWebioEA24oemStTzStopMonth,
       "wtWebioEA24oemStTzStopMode": wtWebioEA24oemStTzStopMode,
       "wtWebioEA24oemStTzStopWday": wtWebioEA24oemStTzStopWday,
       "wtWebioEA24oemStTzStopHrs": wtWebioEA24oemStTzStopHrs,
       "wtWebioEA24oemStTzStopMin": wtWebioEA24oemStTzStopMin,
       "wtWebioEA24oemTimeServer": wtWebioEA24oemTimeServer,
       "wtWebioEA24oemTimeServer1": wtWebioEA24oemTimeServer1,
       "wtWebioEA24oemTimeServer2": wtWebioEA24oemTimeServer2,
       "wtWebioEA24oemTsEnable": wtWebioEA24oemTsEnable,
       "wtWebioEA24oemTsSyncTime": wtWebioEA24oemTsSyncTime,
       "wtWebioEA24oemDeviceClock": wtWebioEA24oemDeviceClock,
       "wtWebioEA24oemClockHrs": wtWebioEA24oemClockHrs,
       "wtWebioEA24oemClockMin": wtWebioEA24oemClockMin,
       "wtWebioEA24oemClockDay": wtWebioEA24oemClockDay,
       "wtWebioEA24oemClockMonth": wtWebioEA24oemClockMonth,
       "wtWebioEA24oemClockYear": wtWebioEA24oemClockYear,
       "wtWebioEA24oemBasic": wtWebioEA24oemBasic,
       "wtWebioEA24oemNetwork": wtWebioEA24oemNetwork,
       "wtWebioEA24oemIpAddress": wtWebioEA24oemIpAddress,
       "wtWebioEA24oemSubnetMask": wtWebioEA24oemSubnetMask,
       "wtWebioEA24oemGateway": wtWebioEA24oemGateway,
       "wtWebioEA24oemDnsServer1": wtWebioEA24oemDnsServer1,
       "wtWebioEA24oemDnsServer2": wtWebioEA24oemDnsServer2,
       "wtWebioEA24oemAddConfig": wtWebioEA24oemAddConfig,
       "wtWebioEA24oemHTTP": wtWebioEA24oemHTTP,
       "wtWebioEA24oemStartup": wtWebioEA24oemStartup,
       "wtWebioEA24oemGetHeaderEnable": wtWebioEA24oemGetHeaderEnable,
       "wtWebioEA24oemHttpInputTrigger": wtWebioEA24oemHttpInputTrigger,
       "wtWebioEA24oemHttpPort": wtWebioEA24oemHttpPort,
       "wtWebioEA24oemMail": wtWebioEA24oemMail,
       "wtWebioEA24oemMailAdName": wtWebioEA24oemMailAdName,
       "wtWebioEA24oemMailReply": wtWebioEA24oemMailReply,
       "wtWebioEA24oemMailServer": wtWebioEA24oemMailServer,
       "wtWebioEA24oemMailEnable": wtWebioEA24oemMailEnable,
       "wtWebioEA24oemMailAuthentication": wtWebioEA24oemMailAuthentication,
       "wtWebioEA24oemMailAuthUser": wtWebioEA24oemMailAuthUser,
       "wtWebioEA24oemMailAuthPassword": wtWebioEA24oemMailAuthPassword,
       "wtWebioEA24oemMailPop3Server": wtWebioEA24oemMailPop3Server,
       "wtWebioEA24oemSNMP": wtWebioEA24oemSNMP,
       "wtWebioEA24oemSnmpEnable": wtWebioEA24oemSnmpEnable,
       "wtWebioEA24oemSnmpCommunityStringRead": wtWebioEA24oemSnmpCommunityStringRead,
       "wtWebioEA24oemSnmpCommunityStringReadWrite": wtWebioEA24oemSnmpCommunityStringReadWrite,
       "wtWebioEA24oemSnmpSystemTrapManagerIP": wtWebioEA24oemSnmpSystemTrapManagerIP,
       "wtWebioEA24oemSnmpSystemTrapEnable": wtWebioEA24oemSnmpSystemTrapEnable,
       "wtWebioEA24oemUDP": wtWebioEA24oemUDP,
       "wtWebioEA24oemUdpAdminPort": wtWebioEA24oemUdpAdminPort,
       "wtWebioEA24oemUdpEnable": wtWebioEA24oemUdpEnable,
       "wtWebioEA24oemUdpRemotePort": wtWebioEA24oemUdpRemotePort,
       "wtWebioEA24oemBinary": wtWebioEA24oemBinary,
       "wtWebioEA24oemBinaryModeCount": wtWebioEA24oemBinaryModeCount,
       "wtWebioEA24oemBinaryIfTable": wtWebioEA24oemBinaryIfTable,
       "wtWebioEA24oemBinaryIfEntry": wtWebioEA24oemBinaryIfEntry,
       "wtWebioEA24oemBinaryModeNo": wtWebioEA24oemBinaryModeNo,
       "wtWebioEA24oemBinaryTable": wtWebioEA24oemBinaryTable,
       "wtWebioEA24oemBinaryEntry": wtWebioEA24oemBinaryEntry,
       "wtWebioEA24oemBinaryOperationMode": wtWebioEA24oemBinaryOperationMode,
       "wtWebioEA24oemBinaryTcpServerLocalPort": wtWebioEA24oemBinaryTcpServerLocalPort,
       "wtWebioEA24oemBinaryTcpServerInputTrigger": wtWebioEA24oemBinaryTcpServerInputTrigger,
       "wtWebioEA24oemBinaryTcpServerApplicationMode": wtWebioEA24oemBinaryTcpServerApplicationMode,
       "wtWebioEA24oemBinaryTcpClientLocalPort": wtWebioEA24oemBinaryTcpClientLocalPort,
       "wtWebioEA24oemBinaryTcpClientServerPort": wtWebioEA24oemBinaryTcpClientServerPort,
       "wtWebioEA24oemBinaryTcpClientServerIpAddr": wtWebioEA24oemBinaryTcpClientServerIpAddr,
       "wtWebioEA24oemBinaryTcpClientServerPassword": wtWebioEA24oemBinaryTcpClientServerPassword,
       "wtWebioEA24oemBinaryTcpClientInactivity": wtWebioEA24oemBinaryTcpClientInactivity,
       "wtWebioEA24oemBinaryTcpClientInputTrigger": wtWebioEA24oemBinaryTcpClientInputTrigger,
       "wtWebioEA24oemBinaryTcpClientInterval": wtWebioEA24oemBinaryTcpClientInterval,
       "wtWebioEA24oemBinaryTcpClientApplicationMode": wtWebioEA24oemBinaryTcpClientApplicationMode,
       "wtWebioEA24oemBinaryUdpPeerLocalPort": wtWebioEA24oemBinaryUdpPeerLocalPort,
       "wtWebioEA24oemBinaryUdpPeerRemotePort": wtWebioEA24oemBinaryUdpPeerRemotePort,
       "wtWebioEA24oemBinaryUdpPeerRemoteIpAddr": wtWebioEA24oemBinaryUdpPeerRemoteIpAddr,
       "wtWebioEA24oemBinaryUdpPeerInputTrigger": wtWebioEA24oemBinaryUdpPeerInputTrigger,
       "wtWebioEA24oemBinaryUdpPeerInterval": wtWebioEA24oemBinaryUdpPeerInterval,
       "wtWebioEA24oemBinaryUdpPeerApplicationMode": wtWebioEA24oemBinaryUdpPeerApplicationMode,
       "wtWebioEA24oemBinaryConnectedPort": wtWebioEA24oemBinaryConnectedPort,
       "wtWebioEA24oemBinaryConnectedIpAddr": wtWebioEA24oemBinaryConnectedIpAddr,
       "wtWebioEA24oemBinaryTcpServerClientHttpPort": wtWebioEA24oemBinaryTcpServerClientHttpPort,
       "wtWebioEA24oemBinaryTcpClientServerHttpPort": wtWebioEA24oemBinaryTcpClientServerHttpPort,
       "wtWebioEA24oemSyslog": wtWebioEA24oemSyslog,
       "wtWebioEA24oemSyslogServerIP": wtWebioEA24oemSyslogServerIP,
       "wtWebioEA24oemSyslogServerPort": wtWebioEA24oemSyslogServerPort,
       "wtWebioEA24oemSyslogSystemMessagesEnable": wtWebioEA24oemSyslogSystemMessagesEnable,
       "wtWebioEA24oemSyslogEnable": wtWebioEA24oemSyslogEnable,
       "wtWebioEA24oemFTP": wtWebioEA24oemFTP,
       "wtWebioEA24oemFTPServerIP": wtWebioEA24oemFTPServerIP,
       "wtWebioEA24oemFTPServerControlPort": wtWebioEA24oemFTPServerControlPort,
       "wtWebioEA24oemFTPUserName": wtWebioEA24oemFTPUserName,
       "wtWebioEA24oemFTPPassword": wtWebioEA24oemFTPPassword,
       "wtWebioEA24oemFTPAccount": wtWebioEA24oemFTPAccount,
       "wtWebioEA24oemFTPOption": wtWebioEA24oemFTPOption,
       "wtWebioEA24oemFTPEnable": wtWebioEA24oemFTPEnable,
       "wtWebioEA24oemOutputMode": wtWebioEA24oemOutputMode,
       "wtWebioEA24oemOutputModeTable": wtWebioEA24oemOutputModeTable,
       "wtWebioEA24oemOutputModeEntry": wtWebioEA24oemOutputModeEntry,
       "wtWebioEA24oemOutputModeBit": wtWebioEA24oemOutputModeBit,
       "wtWebioEA24oemSafetyTimeout": wtWebioEA24oemSafetyTimeout,
       "wtWebioEA24oemLoadControlEnable": wtWebioEA24oemLoadControlEnable,
       "wtWebioEA24oemAlarm": wtWebioEA24oemAlarm,
       "wtWebioEA24oemAlarmCount": wtWebioEA24oemAlarmCount,
       "wtWebioEA24oemAlarmIfTable": wtWebioEA24oemAlarmIfTable,
       "wtWebioEA24oemAlarmIfEntry": wtWebioEA24oemAlarmIfEntry,
       "wtWebioEA24oemAlarmNo": wtWebioEA24oemAlarmNo,
       "wtWebioEA24oemAlarmTable": wtWebioEA24oemAlarmTable,
       "wtWebioEA24oemAlarmEntry": wtWebioEA24oemAlarmEntry,
       "wtWebioEA24oemAlarmInputTrigger": wtWebioEA24oemAlarmInputTrigger,
       "wtWebioEA24oemAlarmOutputTrigger": wtWebioEA24oemAlarmOutputTrigger,
       "wtWebioEA24oemAlarmSystemTrigger": wtWebioEA24oemAlarmSystemTrigger,
       "wtWebioEA24oemAlarmMaxCounterValue": wtWebioEA24oemAlarmMaxCounterValue,
       "wtWebioEA24oemAlarmInterval": wtWebioEA24oemAlarmInterval,
       "wtWebioEA24oemAlarmEnable": wtWebioEA24oemAlarmEnable,
       "wtWebioEA24oemAlarmMailAddr": wtWebioEA24oemAlarmMailAddr,
       "wtWebioEA24oemAlarmMailSubject": wtWebioEA24oemAlarmMailSubject,
       "wtWebioEA24oemAlarmMailText": wtWebioEA24oemAlarmMailText,
       "wtWebioEA24oemAlarmSnmpManagerIP": wtWebioEA24oemAlarmSnmpManagerIP,
       "wtWebioEA24oemAlarmSnmpTrapText": wtWebioEA24oemAlarmSnmpTrapText,
       "wtWebioEA24oemAlarmUdpIpAddr": wtWebioEA24oemAlarmUdpIpAddr,
       "wtWebioEA24oemAlarmUdpPort": wtWebioEA24oemAlarmUdpPort,
       "wtWebioEA24oemAlarmUdpText": wtWebioEA24oemAlarmUdpText,
       "wtWebioEA24oemAlarmTcpIpAddr": wtWebioEA24oemAlarmTcpIpAddr,
       "wtWebioEA24oemAlarmTcpPort": wtWebioEA24oemAlarmTcpPort,
       "wtWebioEA24oemAlarmTcpText": wtWebioEA24oemAlarmTcpText,
       "wtWebioEA24oemAlarmSyslogIpAddr": wtWebioEA24oemAlarmSyslogIpAddr,
       "wtWebioEA24oemAlarmSyslogPort": wtWebioEA24oemAlarmSyslogPort,
       "wtWebioEA24oemAlarmSyslogText": wtWebioEA24oemAlarmSyslogText,
       "wtWebioEA24oemAlarmFtpDataPort": wtWebioEA24oemAlarmFtpDataPort,
       "wtWebioEA24oemAlarmFtpFileName": wtWebioEA24oemAlarmFtpFileName,
       "wtWebioEA24oemAlarmFtpText": wtWebioEA24oemAlarmFtpText,
       "wtWebioEA24oemAlarmFtpOption": wtWebioEA24oemAlarmFtpOption,
       "wtWebioEA24oemAlarmTimerCron": wtWebioEA24oemAlarmTimerCron,
       "wtWebioEA24oemLoadControlView": wtWebioEA24oemLoadControlView,
       "wtWebioEA24oemLCShutDownView": wtWebioEA24oemLCShutDownView,
       "wtWebioEA24oemPorts": wtWebioEA24oemPorts,
       "wtWebioEA24oemInputPortTable": wtWebioEA24oemInputPortTable,
       "wtWebioEA24oemInputPortEntry": wtWebioEA24oemInputPortEntry,
       "wtWebioEA24oemPortInputName": wtWebioEA24oemPortInputName,
       "wtWebioEA24oemPortInputText": wtWebioEA24oemPortInputText,
       "wtWebioEA24oemPortInputMode": wtWebioEA24oemPortInputMode,
       "wtWebioEA24oemPortInputFilter": wtWebioEA24oemPortInputFilter,
       "wtWebioEA24oemOutputPortTable": wtWebioEA24oemOutputPortTable,
       "wtWebioEA24oemOutputPortEntry": wtWebioEA24oemOutputPortEntry,
       "wtWebioEA24oemPortOutputName": wtWebioEA24oemPortOutputName,
       "wtWebioEA24oemPortOutputText": wtWebioEA24oemPortOutputText,
       "wtWebioEA24oemPortOutputGroupMode": wtWebioEA24oemPortOutputGroupMode,
       "wtWebioEA24oemPortOutputSafetyState": wtWebioEA24oemPortOutputSafetyState,
       "wtWebioEA24oemPortLogicInputMask": wtWebioEA24oemPortLogicInputMask,
       "wtWebioEA24oemPortLogicInputInverter": wtWebioEA24oemPortLogicInputInverter,
       "wtWebioEA24oemPortLogicFunction": wtWebioEA24oemPortLogicFunction,
       "wtWebioEA24oemPortLogicOutputInverter": wtWebioEA24oemPortLogicOutputInverter,
       "wtWebioEA24oemPortPulseDuration": wtWebioEA24oemPortPulseDuration,
       "wtWebioEA24oemPortPulsePolarity": wtWebioEA24oemPortPulsePolarity,
       "wtWebioEA24oemManufact": wtWebioEA24oemManufact,
       "wtWebioEA24oemMfName": wtWebioEA24oemMfName,
       "wtWebioEA24oemMfAddr": wtWebioEA24oemMfAddr,
       "wtWebioEA24oemMfHotline": wtWebioEA24oemMfHotline,
       "wtWebioEA24oemMfInternet": wtWebioEA24oemMfInternet,
       "wtWebioEA24oemMfDeviceTyp": wtWebioEA24oemMfDeviceTyp,
       "wtWebioEA24oemDiag": wtWebioEA24oemDiag,
       "wtWebioEA24oemDiagErrorCount": wtWebioEA24oemDiagErrorCount,
       "wtWebioEA24oemDiagBinaryError": wtWebioEA24oemDiagBinaryError,
       "wtWebioEA24oemDiagErrorIndex": wtWebioEA24oemDiagErrorIndex,
       "wtWebioEA24oemDiagErrorMessage": wtWebioEA24oemDiagErrorMessage,
       "wtWebioEA24oemDiagErrorClear": wtWebioEA24oemDiagErrorClear,
       "wtWebioEA12x6Rel": wtWebioEA12x6Rel,
       "wtWebioEA12x6RelAlert1": wtWebioEA12x6RelAlert1,
       "wtWebioEA12x6RelAlert2": wtWebioEA12x6RelAlert2,
       "wtWebioEA12x6RelAlert3": wtWebioEA12x6RelAlert3,
       "wtWebioEA12x6RelAlert4": wtWebioEA12x6RelAlert4,
       "wtWebioEA12x6RelAlert5": wtWebioEA12x6RelAlert5,
       "wtWebioEA12x6RelAlert6": wtWebioEA12x6RelAlert6,
       "wtWebioEA12x6RelAlert7": wtWebioEA12x6RelAlert7,
       "wtWebioEA12x6RelAlert8": wtWebioEA12x6RelAlert8,
       "wtWebioEA12x6RelAlert9": wtWebioEA12x6RelAlert9,
       "wtWebioEA12x6RelAlert10": wtWebioEA12x6RelAlert10,
       "wtWebioEA12x6RelAlert11": wtWebioEA12x6RelAlert11,
       "wtWebioEA12x6RelAlert12": wtWebioEA12x6RelAlert12,
       "wtWebioEA12x6RelAlert13": wtWebioEA12x6RelAlert13,
       "wtWebioEA12x6RelAlert14": wtWebioEA12x6RelAlert14,
       "wtWebioEA12x6RelAlert15": wtWebioEA12x6RelAlert15,
       "wtWebioEA12x6RelAlert16": wtWebioEA12x6RelAlert16,
       "wtWebioEA12x6RelAlert17": wtWebioEA12x6RelAlert17,
       "wtWebioEA12x6RelAlert18": wtWebioEA12x6RelAlert18,
       "wtWebioEA12x6RelAlert19": wtWebioEA12x6RelAlert19,
       "wtWebioEA12x6RelAlert20": wtWebioEA12x6RelAlert20,
       "wtWebioEA12x6RelAlert21": wtWebioEA12x6RelAlert21,
       "wtWebioEA12x6RelAlert22": wtWebioEA12x6RelAlert22,
       "wtWebioEA12x6RelAlert23": wtWebioEA12x6RelAlert23,
       "wtWebioEA12x6RelAlert24": wtWebioEA12x6RelAlert24,
       "wtWebioEA12x6RelAlertDiag": wtWebioEA12x6RelAlertDiag,
       "wtWebioEA12x6RelInOut": wtWebioEA12x6RelInOut,
       "wtWebioEA12x6RelInputs": wtWebioEA12x6RelInputs,
       "wtWebioEA12x6RelOutputs": wtWebioEA12x6RelOutputs,
       "wtWebioEA12x6RelInputTable": wtWebioEA12x6RelInputTable,
       "wtWebioEA12x6RelInputEntry": wtWebioEA12x6RelInputEntry,
       "wtWebioEA12x6RelInputNo": wtWebioEA12x6RelInputNo,
       "wtWebioEA12x6RelInputCounter": wtWebioEA12x6RelInputCounter,
       "wtWebioEA12x6RelInputCounterClear": wtWebioEA12x6RelInputCounterClear,
       "wtWebioEA12x6RelInputValue": wtWebioEA12x6RelInputValue,
       "wtWebioEA12x6RelOutputTable": wtWebioEA12x6RelOutputTable,
       "wtWebioEA12x6RelOutputEntry": wtWebioEA12x6RelOutputEntry,
       "wtWebioEA12x6RelOutputNo": wtWebioEA12x6RelOutputNo,
       "wtWebioEA12x6RelOutputState": wtWebioEA12x6RelOutputState,
       "wtWebioEA12x6RelOutputValue": wtWebioEA12x6RelOutputValue,
       "wtWebioEA12x6RelSetOutput": wtWebioEA12x6RelSetOutput,
       "wtWebioEA12x6RelSessCntrl": wtWebioEA12x6RelSessCntrl,
       "wtWebioEA12x6RelSessCntrlPassword": wtWebioEA12x6RelSessCntrlPassword,
       "wtWebioEA12x6RelSessCntrlConfigMode": wtWebioEA12x6RelSessCntrlConfigMode,
       "wtWebioEA12x6RelSessCntrlLogout": wtWebioEA12x6RelSessCntrlLogout,
       "wtWebioEA12x6RelSessCntrlAdminPassword": wtWebioEA12x6RelSessCntrlAdminPassword,
       "wtWebioEA12x6RelSessCntrlConfigPassword": wtWebioEA12x6RelSessCntrlConfigPassword,
       "wtWebioEA12x6RelConfig": wtWebioEA12x6RelConfig,
       "wtWebioEA12x6RelDevice": wtWebioEA12x6RelDevice,
       "wtWebioEA12x6RelText": wtWebioEA12x6RelText,
       "wtWebioEA12x6RelDeviceName": wtWebioEA12x6RelDeviceName,
       "wtWebioEA12x6RelDeviceText": wtWebioEA12x6RelDeviceText,
       "wtWebioEA12x6RelDeviceLocation": wtWebioEA12x6RelDeviceLocation,
       "wtWebioEA12x6RelDeviceContact": wtWebioEA12x6RelDeviceContact,
       "wtWebioEA12x6RelTimeDate": wtWebioEA12x6RelTimeDate,
       "wtWebioEA12x6RelTimeZone": wtWebioEA12x6RelTimeZone,
       "wtWebioEA12x6RelTzOffsetHrs": wtWebioEA12x6RelTzOffsetHrs,
       "wtWebioEA12x6RelTzOffsetMin": wtWebioEA12x6RelTzOffsetMin,
       "wtWebioEA12x6RelTzEnable": wtWebioEA12x6RelTzEnable,
       "wtWebioEA12x6RelStTzOffsetHrs": wtWebioEA12x6RelStTzOffsetHrs,
       "wtWebioEA12x6RelStTzOffsetMin": wtWebioEA12x6RelStTzOffsetMin,
       "wtWebioEA12x6RelStTzEnable": wtWebioEA12x6RelStTzEnable,
       "wtWebioEA12x6RelStTzStartMonth": wtWebioEA12x6RelStTzStartMonth,
       "wtWebioEA12x6RelStTzStartMode": wtWebioEA12x6RelStTzStartMode,
       "wtWebioEA12x6RelStTzStartWday": wtWebioEA12x6RelStTzStartWday,
       "wtWebioEA12x6RelStTzStartHrs": wtWebioEA12x6RelStTzStartHrs,
       "wtWebioEA12x6RelStTzStartMin": wtWebioEA12x6RelStTzStartMin,
       "wtWebioEA12x6RelStTzStopMonth": wtWebioEA12x6RelStTzStopMonth,
       "wtWebioEA12x6RelStTzStopMode": wtWebioEA12x6RelStTzStopMode,
       "wtWebioEA12x6RelStTzStopWday": wtWebioEA12x6RelStTzStopWday,
       "wtWebioEA12x6RelStTzStopHrs": wtWebioEA12x6RelStTzStopHrs,
       "wtWebioEA12x6RelStTzStopMin": wtWebioEA12x6RelStTzStopMin,
       "wtWebioEA12x6RelTimeServer": wtWebioEA12x6RelTimeServer,
       "wtWebioEA12x6RelTimeServer1": wtWebioEA12x6RelTimeServer1,
       "wtWebioEA12x6RelTimeServer2": wtWebioEA12x6RelTimeServer2,
       "wtWebioEA12x6RelTsEnable": wtWebioEA12x6RelTsEnable,
       "wtWebioEA12x6RelTsSyncTime": wtWebioEA12x6RelTsSyncTime,
       "wtWebioEA12x6RelDeviceClock": wtWebioEA12x6RelDeviceClock,
       "wtWebioEA12x6RelClockHrs": wtWebioEA12x6RelClockHrs,
       "wtWebioEA12x6RelClockMin": wtWebioEA12x6RelClockMin,
       "wtWebioEA12x6RelClockDay": wtWebioEA12x6RelClockDay,
       "wtWebioEA12x6RelClockMonth": wtWebioEA12x6RelClockMonth,
       "wtWebioEA12x6RelClockYear": wtWebioEA12x6RelClockYear,
       "wtWebioEA12x6RelBasic": wtWebioEA12x6RelBasic,
       "wtWebioEA12x6RelNetwork": wtWebioEA12x6RelNetwork,
       "wtWebioEA12x6RelIpAddress": wtWebioEA12x6RelIpAddress,
       "wtWebioEA12x6RelSubnetMask": wtWebioEA12x6RelSubnetMask,
       "wtWebioEA12x6RelGateway": wtWebioEA12x6RelGateway,
       "wtWebioEA12x6RelDnsServer1": wtWebioEA12x6RelDnsServer1,
       "wtWebioEA12x6RelDnsServer2": wtWebioEA12x6RelDnsServer2,
       "wtWebioEA12x6RelAddConfig": wtWebioEA12x6RelAddConfig,
       "wtWebioEA12x6RelHTTP": wtWebioEA12x6RelHTTP,
       "wtWebioEA12x6RelStartup": wtWebioEA12x6RelStartup,
       "wtWebioEA12x6RelGetHeaderEnable": wtWebioEA12x6RelGetHeaderEnable,
       "wtWebioEA12x6RelHttpInputTrigger": wtWebioEA12x6RelHttpInputTrigger,
       "wtWebioEA12x6RelHttpPort": wtWebioEA12x6RelHttpPort,
       "wtWebioEA12x6RelMail": wtWebioEA12x6RelMail,
       "wtWebioEA12x6RelMailAdName": wtWebioEA12x6RelMailAdName,
       "wtWebioEA12x6RelMailReply": wtWebioEA12x6RelMailReply,
       "wtWebioEA12x6RelMailServer": wtWebioEA12x6RelMailServer,
       "wtWebioEA12x6RelMailEnable": wtWebioEA12x6RelMailEnable,
       "wtWebioEA12x6RelMailAuthentication": wtWebioEA12x6RelMailAuthentication,
       "wtWebioEA12x6RelMailAuthUser": wtWebioEA12x6RelMailAuthUser,
       "wtWebioEA12x6RelMailAuthPassword": wtWebioEA12x6RelMailAuthPassword,
       "wtWebioEA12x6RelMailPop3Server": wtWebioEA12x6RelMailPop3Server,
       "wtWebioEA12x6RelSNMP": wtWebioEA12x6RelSNMP,
       "wtWebioEA12x6RelSnmpEnable": wtWebioEA12x6RelSnmpEnable,
       "wtWebioEA12x6RelSnmpCommunityStringRead": wtWebioEA12x6RelSnmpCommunityStringRead,
       "wtWebioEA12x6RelSnmpCommunityStringReadWrite": wtWebioEA12x6RelSnmpCommunityStringReadWrite,
       "wtWebioEA12x6RelSnmpSystemTrapManagerIP": wtWebioEA12x6RelSnmpSystemTrapManagerIP,
       "wtWebioEA12x6RelSnmpSystemTrapEnable": wtWebioEA12x6RelSnmpSystemTrapEnable,
       "wtWebioEA12x6RelUDP": wtWebioEA12x6RelUDP,
       "wtWebioEA12x6RelUdpAdminPort": wtWebioEA12x6RelUdpAdminPort,
       "wtWebioEA12x6RelUdpEnable": wtWebioEA12x6RelUdpEnable,
       "wtWebioEA12x6RelUdpRemotePort": wtWebioEA12x6RelUdpRemotePort,
       "wtWebioEA12x6RelBinary": wtWebioEA12x6RelBinary,
       "wtWebioEA12x6RelBinaryModeCount": wtWebioEA12x6RelBinaryModeCount,
       "wtWebioEA12x6RelBinaryIfTable": wtWebioEA12x6RelBinaryIfTable,
       "wtWebioEA12x6RelBinaryIfEntry": wtWebioEA12x6RelBinaryIfEntry,
       "wtWebioEA12x6RelBinaryModeNo": wtWebioEA12x6RelBinaryModeNo,
       "wtWebioEA12x6RelBinaryTable": wtWebioEA12x6RelBinaryTable,
       "wtWebioEA12x6RelBinaryEntry": wtWebioEA12x6RelBinaryEntry,
       "wtWebioEA12x6RelBinaryOperationMode": wtWebioEA12x6RelBinaryOperationMode,
       "wtWebioEA12x6RelBinaryTcpServerLocalPort": wtWebioEA12x6RelBinaryTcpServerLocalPort,
       "wtWebioEA12x6RelBinaryTcpServerInputTrigger": wtWebioEA12x6RelBinaryTcpServerInputTrigger,
       "wtWebioEA12x6RelBinaryTcpServerApplicationMode": wtWebioEA12x6RelBinaryTcpServerApplicationMode,
       "wtWebioEA12x6RelBinaryTcpClientLocalPort": wtWebioEA12x6RelBinaryTcpClientLocalPort,
       "wtWebioEA12x6RelBinaryTcpClientServerPort": wtWebioEA12x6RelBinaryTcpClientServerPort,
       "wtWebioEA12x6RelBinaryTcpClientServerIpAddr": wtWebioEA12x6RelBinaryTcpClientServerIpAddr,
       "wtWebioEA12x6RelBinaryTcpClientServerPassword": wtWebioEA12x6RelBinaryTcpClientServerPassword,
       "wtWebioEA12x6RelBinaryTcpClientInactivity": wtWebioEA12x6RelBinaryTcpClientInactivity,
       "wtWebioEA12x6RelBinaryTcpClientInputTrigger": wtWebioEA12x6RelBinaryTcpClientInputTrigger,
       "wtWebioEA12x6RelBinaryTcpClientInterval": wtWebioEA12x6RelBinaryTcpClientInterval,
       "wtWebioEA12x6RelBinaryTcpClientApplicationMode": wtWebioEA12x6RelBinaryTcpClientApplicationMode,
       "wtWebioEA12x6RelBinaryUdpPeerLocalPort": wtWebioEA12x6RelBinaryUdpPeerLocalPort,
       "wtWebioEA12x6RelBinaryUdpPeerRemotePort": wtWebioEA12x6RelBinaryUdpPeerRemotePort,
       "wtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr": wtWebioEA12x6RelBinaryUdpPeerRemoteIpAddr,
       "wtWebioEA12x6RelBinaryUdpPeerInputTrigger": wtWebioEA12x6RelBinaryUdpPeerInputTrigger,
       "wtWebioEA12x6RelBinaryUdpPeerInterval": wtWebioEA12x6RelBinaryUdpPeerInterval,
       "wtWebioEA12x6RelBinaryUdpPeerApplicationMode": wtWebioEA12x6RelBinaryUdpPeerApplicationMode,
       "wtWebioEA12x6RelBinaryConnectedPort": wtWebioEA12x6RelBinaryConnectedPort,
       "wtWebioEA12x6RelBinaryConnectedIpAddr": wtWebioEA12x6RelBinaryConnectedIpAddr,
       "wtWebioEA12x6RelBinaryTcpServerClientHttpPort": wtWebioEA12x6RelBinaryTcpServerClientHttpPort,
       "wtWebioEA12x6RelBinaryTcpClientServerHttpPort": wtWebioEA12x6RelBinaryTcpClientServerHttpPort,
       "wtWebioEA12x6RelSyslog": wtWebioEA12x6RelSyslog,
       "wtWebioEA12x6RelSyslogServerIP": wtWebioEA12x6RelSyslogServerIP,
       "wtWebioEA12x6RelSyslogServerPort": wtWebioEA12x6RelSyslogServerPort,
       "wtWebioEA12x6RelSyslogSystemMessagesEnable": wtWebioEA12x6RelSyslogSystemMessagesEnable,
       "wtWebioEA12x6RelSyslogEnable": wtWebioEA12x6RelSyslogEnable,
       "wtWebioEA12x6RelFTP": wtWebioEA12x6RelFTP,
       "wtWebioEA12x6RelFTPServerIP": wtWebioEA12x6RelFTPServerIP,
       "wtWebioEA12x6RelFTPServerControlPort": wtWebioEA12x6RelFTPServerControlPort,
       "wtWebioEA12x6RelFTPUserName": wtWebioEA12x6RelFTPUserName,
       "wtWebioEA12x6RelFTPPassword": wtWebioEA12x6RelFTPPassword,
       "wtWebioEA12x6RelFTPAccount": wtWebioEA12x6RelFTPAccount,
       "wtWebioEA12x6RelFTPOption": wtWebioEA12x6RelFTPOption,
       "wtWebioEA12x6RelFTPEnable": wtWebioEA12x6RelFTPEnable,
       "wtWebioEA12x6RelOutputMode": wtWebioEA12x6RelOutputMode,
       "wtWebioEA12x6RelOutputModeTable": wtWebioEA12x6RelOutputModeTable,
       "wtWebioEA12x6RelOutputModeEntry": wtWebioEA12x6RelOutputModeEntry,
       "wtWebioEA12x6RelOutputModeBit": wtWebioEA12x6RelOutputModeBit,
       "wtWebioEA12x6RelSafetyTimeout": wtWebioEA12x6RelSafetyTimeout,
       "wtWebioEA12x6RelAlarm": wtWebioEA12x6RelAlarm,
       "wtWebioEA12x6RelAlarmCount": wtWebioEA12x6RelAlarmCount,
       "wtWebioEA12x6RelAlarmIfTable": wtWebioEA12x6RelAlarmIfTable,
       "wtWebioEA12x6RelAlarmIfEntry": wtWebioEA12x6RelAlarmIfEntry,
       "wtWebioEA12x6RelAlarmNo": wtWebioEA12x6RelAlarmNo,
       "wtWebioEA12x6RelAlarmTable": wtWebioEA12x6RelAlarmTable,
       "wtWebioEA12x6RelAlarmEntry": wtWebioEA12x6RelAlarmEntry,
       "wtWebioEA12x6RelAlarmInputTrigger": wtWebioEA12x6RelAlarmInputTrigger,
       "wtWebioEA12x6RelAlarmOutputTrigger": wtWebioEA12x6RelAlarmOutputTrigger,
       "wtWebioEA12x6RelAlarmSystemTrigger": wtWebioEA12x6RelAlarmSystemTrigger,
       "wtWebioEA12x6RelAlarmMaxCounterValue": wtWebioEA12x6RelAlarmMaxCounterValue,
       "wtWebioEA12x6RelAlarmInterval": wtWebioEA12x6RelAlarmInterval,
       "wtWebioEA12x6RelAlarmEnable": wtWebioEA12x6RelAlarmEnable,
       "wtWebioEA12x6RelAlarmMailAddr": wtWebioEA12x6RelAlarmMailAddr,
       "wtWebioEA12x6RelAlarmMailSubject": wtWebioEA12x6RelAlarmMailSubject,
       "wtWebioEA12x6RelAlarmMailText": wtWebioEA12x6RelAlarmMailText,
       "wtWebioEA12x6RelAlarmSnmpManagerIP": wtWebioEA12x6RelAlarmSnmpManagerIP,
       "wtWebioEA12x6RelAlarmSnmpTrapText": wtWebioEA12x6RelAlarmSnmpTrapText,
       "wtWebioEA12x6RelAlarmUdpIpAddr": wtWebioEA12x6RelAlarmUdpIpAddr,
       "wtWebioEA12x6RelAlarmUdpPort": wtWebioEA12x6RelAlarmUdpPort,
       "wtWebioEA12x6RelAlarmUdpText": wtWebioEA12x6RelAlarmUdpText,
       "wtWebioEA12x6RelAlarmTcpIpAddr": wtWebioEA12x6RelAlarmTcpIpAddr,
       "wtWebioEA12x6RelAlarmTcpPort": wtWebioEA12x6RelAlarmTcpPort,
       "wtWebioEA12x6RelAlarmTcpText": wtWebioEA12x6RelAlarmTcpText,
       "wtWebioEA12x6RelAlarmSyslogIpAddr": wtWebioEA12x6RelAlarmSyslogIpAddr,
       "wtWebioEA12x6RelAlarmSyslogPort": wtWebioEA12x6RelAlarmSyslogPort,
       "wtWebioEA12x6RelAlarmSyslogText": wtWebioEA12x6RelAlarmSyslogText,
       "wtWebioEA12x6RelAlarmFtpDataPort": wtWebioEA12x6RelAlarmFtpDataPort,
       "wtWebioEA12x6RelAlarmFtpFileName": wtWebioEA12x6RelAlarmFtpFileName,
       "wtWebioEA12x6RelAlarmFtpText": wtWebioEA12x6RelAlarmFtpText,
       "wtWebioEA12x6RelAlarmFtpOption": wtWebioEA12x6RelAlarmFtpOption,
       "wtWebioEA12x6RelAlarmTimerCron": wtWebioEA12x6RelAlarmTimerCron,
       "wtWebioEA12x6RelAlarmMailReleaseSubject": wtWebioEA12x6RelAlarmMailReleaseSubject,
       "wtWebioEA12x6RelAlarmMailReleaseText": wtWebioEA12x6RelAlarmMailReleaseText,
       "wtWebioEA12x6RelAlarmSnmpTrapReleaseText": wtWebioEA12x6RelAlarmSnmpTrapReleaseText,
       "wtWebioEA12x6RelAlarmUdpReleaseText": wtWebioEA12x6RelAlarmUdpReleaseText,
       "wtWebioEA12x6RelAlarmTcpReleaseText": wtWebioEA12x6RelAlarmTcpReleaseText,
       "wtWebioEA12x6RelAlarmSyslogReleaseText": wtWebioEA12x6RelAlarmSyslogReleaseText,
       "wtWebioEA12x6RelAlarmFtpReleaseText": wtWebioEA12x6RelAlarmFtpReleaseText,
       "wtWebioEA12x6RelPorts": wtWebioEA12x6RelPorts,
       "wtWebioEA12x6RelInputPortTable": wtWebioEA12x6RelInputPortTable,
       "wtWebioEA12x6RelInputPortEntry": wtWebioEA12x6RelInputPortEntry,
       "wtWebioEA12x6RelPortInputName": wtWebioEA12x6RelPortInputName,
       "wtWebioEA12x6RelPortInputText": wtWebioEA12x6RelPortInputText,
       "wtWebioEA12x6RelPortInputMode": wtWebioEA12x6RelPortInputMode,
       "wtWebioEA12x6RelPortInputFilter": wtWebioEA12x6RelPortInputFilter,
       "wtWebioEA12x6RelPortInputBicountPulsePolarity": wtWebioEA12x6RelPortInputBicountPulsePolarity,
       "wtWebioEA12x6RelPortInputBicountInactivTimeout": wtWebioEA12x6RelPortInputBicountInactivTimeout,
       "wtWebioEA12x6RelOutputPortTable": wtWebioEA12x6RelOutputPortTable,
       "wtWebioEA12x6RelOutputPortEntry": wtWebioEA12x6RelOutputPortEntry,
       "wtWebioEA12x6RelPortOutputName": wtWebioEA12x6RelPortOutputName,
       "wtWebioEA12x6RelPortOutputText": wtWebioEA12x6RelPortOutputText,
       "wtWebioEA12x6RelPortOutputGroupMode": wtWebioEA12x6RelPortOutputGroupMode,
       "wtWebioEA12x6RelPortOutputSafetyState": wtWebioEA12x6RelPortOutputSafetyState,
       "wtWebioEA12x6RelPortLogicInputMask": wtWebioEA12x6RelPortLogicInputMask,
       "wtWebioEA12x6RelPortLogicInputInverter": wtWebioEA12x6RelPortLogicInputInverter,
       "wtWebioEA12x6RelPortLogicFunction": wtWebioEA12x6RelPortLogicFunction,
       "wtWebioEA12x6RelPortLogicOutputInverter": wtWebioEA12x6RelPortLogicOutputInverter,
       "wtWebioEA12x6RelPortPulseDuration": wtWebioEA12x6RelPortPulseDuration,
       "wtWebioEA12x6RelPortPulsePolarity": wtWebioEA12x6RelPortPulsePolarity,
       "wtWebioEA12x6RelManufact": wtWebioEA12x6RelManufact,
       "wtWebioEA12x6RelMfName": wtWebioEA12x6RelMfName,
       "wtWebioEA12x6RelMfAddr": wtWebioEA12x6RelMfAddr,
       "wtWebioEA12x6RelMfHotline": wtWebioEA12x6RelMfHotline,
       "wtWebioEA12x6RelMfInternet": wtWebioEA12x6RelMfInternet,
       "wtWebioEA12x6RelMfDeviceTyp": wtWebioEA12x6RelMfDeviceTyp,
       "wtWebioEA12x6RelMfOrderNo": wtWebioEA12x6RelMfOrderNo,
       "wtWebioEA12x6RelDiag": wtWebioEA12x6RelDiag,
       "wtWebioEA12x6RelDiagErrorCount": wtWebioEA12x6RelDiagErrorCount,
       "wtWebioEA12x6RelDiagBinaryError": wtWebioEA12x6RelDiagBinaryError,
       "wtWebioEA12x6RelDiagErrorIndex": wtWebioEA12x6RelDiagErrorIndex,
       "wtWebioEA12x6RelDiagErrorMessage": wtWebioEA12x6RelDiagErrorMessage,
       "wtWebioEA12x6RelDiagErrorClear": wtWebioEA12x6RelDiagErrorClear,
       "wtWebAlarm6x6": wtWebAlarm6x6,
       "wtWebAlarm6x6Alert1": wtWebAlarm6x6Alert1,
       "wtWebAlarm6x6Alert2": wtWebAlarm6x6Alert2,
       "wtWebAlarm6x6Alert3": wtWebAlarm6x6Alert3,
       "wtWebAlarm6x6Alert4": wtWebAlarm6x6Alert4,
       "wtWebAlarm6x6Alert5": wtWebAlarm6x6Alert5,
       "wtWebAlarm6x6Alert6": wtWebAlarm6x6Alert6,
       "wtWebAlarm6x6Alert7": wtWebAlarm6x6Alert7,
       "wtWebAlarm6x6Alert8": wtWebAlarm6x6Alert8,
       "wtWebAlarm6x6Alert9": wtWebAlarm6x6Alert9,
       "wtWebAlarm6x6Alert10": wtWebAlarm6x6Alert10,
       "wtWebAlarm6x6Alert11": wtWebAlarm6x6Alert11,
       "wtWebAlarm6x6Alert12": wtWebAlarm6x6Alert12,
       "wtWebAlarm6x6Alert13": wtWebAlarm6x6Alert13,
       "wtWebAlarm6x6Alert14": wtWebAlarm6x6Alert14,
       "wtWebAlarm6x6Alert15": wtWebAlarm6x6Alert15,
       "wtWebAlarm6x6Alert16": wtWebAlarm6x6Alert16,
       "wtWebAlarm6x6Alert17": wtWebAlarm6x6Alert17,
       "wtWebAlarm6x6Alert18": wtWebAlarm6x6Alert18,
       "wtWebAlarm6x6Alert19": wtWebAlarm6x6Alert19,
       "wtWebAlarm6x6Alert20": wtWebAlarm6x6Alert20,
       "wtWebAlarm6x6Alert21": wtWebAlarm6x6Alert21,
       "wtWebAlarm6x6Alert22": wtWebAlarm6x6Alert22,
       "wtWebAlarm6x6Alert23": wtWebAlarm6x6Alert23,
       "wtWebAlarm6x6Alert24": wtWebAlarm6x6Alert24,
       "wtWebAlarm6x6Alert25": wtWebAlarm6x6Alert25,
       "wtWebAlarm6x6Alert26": wtWebAlarm6x6Alert26,
       "wtWebAlarm6x6Alert27": wtWebAlarm6x6Alert27,
       "wtWebAlarm6x6Alert28": wtWebAlarm6x6Alert28,
       "wtWebAlarm6x6Alert29": wtWebAlarm6x6Alert29,
       "wtWebAlarm6x6Alert30": wtWebAlarm6x6Alert30,
       "wtWebAlarm6x6Alert31": wtWebAlarm6x6Alert31,
       "wtWebAlarm6x6Alert32": wtWebAlarm6x6Alert32,
       "wtWebAlarm6x6Alert33": wtWebAlarm6x6Alert33,
       "wtWebAlarm6x6Alert34": wtWebAlarm6x6Alert34,
       "wtWebAlarm6x6Alert35": wtWebAlarm6x6Alert35,
       "wtWebAlarm6x6Alert36": wtWebAlarm6x6Alert36,
       "wtWebAlarm6x6AlertDiag": wtWebAlarm6x6AlertDiag,
       "wtWebAlarm6x6InOut": wtWebAlarm6x6InOut,
       "wtWebAlarm6x6Inputs": wtWebAlarm6x6Inputs,
       "wtWebAlarm6x6Outputs": wtWebAlarm6x6Outputs,
       "wtWebAlarm6x6InputTable": wtWebAlarm6x6InputTable,
       "wtWebAlarm6x6InputEntry": wtWebAlarm6x6InputEntry,
       "wtWebAlarm6x6InputNo": wtWebAlarm6x6InputNo,
       "wtWebAlarm6x6InputCounter": wtWebAlarm6x6InputCounter,
       "wtWebAlarm6x6InputCounterClear": wtWebAlarm6x6InputCounterClear,
       "wtWebAlarm6x6InputState": wtWebAlarm6x6InputState,
       "wtWebAlarm6x6InputValue": wtWebAlarm6x6InputValue,
       "wtWebAlarm6x6OutputTable": wtWebAlarm6x6OutputTable,
       "wtWebAlarm6x6OutputEntry": wtWebAlarm6x6OutputEntry,
       "wtWebAlarm6x6OutputNo": wtWebAlarm6x6OutputNo,
       "wtWebAlarm6x6OutputState": wtWebAlarm6x6OutputState,
       "wtWebAlarm6x6OutputValue": wtWebAlarm6x6OutputValue,
       "wtWebAlarm6x6AlarmOutputTable": wtWebAlarm6x6AlarmOutputTable,
       "wtWebAlarm6x6AlarmOutputEntry": wtWebAlarm6x6AlarmOutputEntry,
       "wtWebAlarm6x6AlarmOutputState": wtWebAlarm6x6AlarmOutputState,
       "wtWebAlarm6x6AlarmTriggerState": wtWebAlarm6x6AlarmTriggerState,
       "wtWebAlarm6x6SessCntrl": wtWebAlarm6x6SessCntrl,
       "wtWebAlarm6x6SessCntrlPassword": wtWebAlarm6x6SessCntrlPassword,
       "wtWebAlarm6x6SessCntrlConfigMode": wtWebAlarm6x6SessCntrlConfigMode,
       "wtWebAlarm6x6SessCntrlLogout": wtWebAlarm6x6SessCntrlLogout,
       "wtWebAlarm6x6SessCntrlAdminPassword": wtWebAlarm6x6SessCntrlAdminPassword,
       "wtWebAlarm6x6SessCntrlConfigPassword": wtWebAlarm6x6SessCntrlConfigPassword,
       "wtWebAlarm6x6Config": wtWebAlarm6x6Config,
       "wtWebAlarm6x6Device": wtWebAlarm6x6Device,
       "wtWebAlarm6x6Text": wtWebAlarm6x6Text,
       "wtWebAlarm6x6DeviceName": wtWebAlarm6x6DeviceName,
       "wtWebAlarm6x6DeviceText": wtWebAlarm6x6DeviceText,
       "wtWebAlarm6x6DeviceLocation": wtWebAlarm6x6DeviceLocation,
       "wtWebAlarm6x6DeviceContact": wtWebAlarm6x6DeviceContact,
       "wtWebAlarm6x6TimeDate": wtWebAlarm6x6TimeDate,
       "wtWebAlarm6x6TimeZone": wtWebAlarm6x6TimeZone,
       "wtWebAlarm6x6TzOffsetHrs": wtWebAlarm6x6TzOffsetHrs,
       "wtWebAlarm6x6TzOffsetMin": wtWebAlarm6x6TzOffsetMin,
       "wtWebAlarm6x6TzEnable": wtWebAlarm6x6TzEnable,
       "wtWebAlarm6x6StTzOffsetHrs": wtWebAlarm6x6StTzOffsetHrs,
       "wtWebAlarm6x6StTzOffsetMin": wtWebAlarm6x6StTzOffsetMin,
       "wtWebAlarm6x6StTzEnable": wtWebAlarm6x6StTzEnable,
       "wtWebAlarm6x6StTzStartMonth": wtWebAlarm6x6StTzStartMonth,
       "wtWebAlarm6x6StTzStartMode": wtWebAlarm6x6StTzStartMode,
       "wtWebAlarm6x6StTzStartWday": wtWebAlarm6x6StTzStartWday,
       "wtWebAlarm6x6StTzStartHrs": wtWebAlarm6x6StTzStartHrs,
       "wtWebAlarm6x6StTzStartMin": wtWebAlarm6x6StTzStartMin,
       "wtWebAlarm6x6StTzStopMonth": wtWebAlarm6x6StTzStopMonth,
       "wtWebAlarm6x6StTzStopMode": wtWebAlarm6x6StTzStopMode,
       "wtWebAlarm6x6StTzStopWday": wtWebAlarm6x6StTzStopWday,
       "wtWebAlarm6x6StTzStopHrs": wtWebAlarm6x6StTzStopHrs,
       "wtWebAlarm6x6StTzStopMin": wtWebAlarm6x6StTzStopMin,
       "wtWebAlarm6x6TimeServer": wtWebAlarm6x6TimeServer,
       "wtWebAlarm6x6TimeServer1": wtWebAlarm6x6TimeServer1,
       "wtWebAlarm6x6TimeServer2": wtWebAlarm6x6TimeServer2,
       "wtWebAlarm6x6TsEnable": wtWebAlarm6x6TsEnable,
       "wtWebAlarm6x6TsSyncTime": wtWebAlarm6x6TsSyncTime,
       "wtWebAlarm6x6DeviceClock": wtWebAlarm6x6DeviceClock,
       "wtWebAlarm6x6ClockHrs": wtWebAlarm6x6ClockHrs,
       "wtWebAlarm6x6ClockMin": wtWebAlarm6x6ClockMin,
       "wtWebAlarm6x6ClockDay": wtWebAlarm6x6ClockDay,
       "wtWebAlarm6x6ClockMonth": wtWebAlarm6x6ClockMonth,
       "wtWebAlarm6x6ClockYear": wtWebAlarm6x6ClockYear,
       "wtWebAlarm6x6Basic": wtWebAlarm6x6Basic,
       "wtWebAlarm6x6Network": wtWebAlarm6x6Network,
       "wtWebAlarm6x6IpAddress": wtWebAlarm6x6IpAddress,
       "wtWebAlarm6x6SubnetMask": wtWebAlarm6x6SubnetMask,
       "wtWebAlarm6x6Gateway": wtWebAlarm6x6Gateway,
       "wtWebAlarm6x6DnsServer1": wtWebAlarm6x6DnsServer1,
       "wtWebAlarm6x6DnsServer2": wtWebAlarm6x6DnsServer2,
       "wtWebAlarm6x6AddConfig": wtWebAlarm6x6AddConfig,
       "wtWebAlarm6x6HTTP": wtWebAlarm6x6HTTP,
       "wtWebAlarm6x6HttpPort": wtWebAlarm6x6HttpPort,
       "wtWebAlarm6x6Mail": wtWebAlarm6x6Mail,
       "wtWebAlarm6x6MailAdName": wtWebAlarm6x6MailAdName,
       "wtWebAlarm6x6MailReply": wtWebAlarm6x6MailReply,
       "wtWebAlarm6x6MailServer": wtWebAlarm6x6MailServer,
       "wtWebAlarm6x6MailEnable": wtWebAlarm6x6MailEnable,
       "wtWebAlarm6x6MailAuthentication": wtWebAlarm6x6MailAuthentication,
       "wtWebAlarm6x6MailAuthUser": wtWebAlarm6x6MailAuthUser,
       "wtWebAlarm6x6MailAuthPassword": wtWebAlarm6x6MailAuthPassword,
       "wtWebAlarm6x6MailPop3Server": wtWebAlarm6x6MailPop3Server,
       "wtWebAlarm6x6SNMP": wtWebAlarm6x6SNMP,
       "wtWebAlarm6x6SnmpEnable": wtWebAlarm6x6SnmpEnable,
       "wtWebAlarm6x6SnmpCommunityStringRead": wtWebAlarm6x6SnmpCommunityStringRead,
       "wtWebAlarm6x6SnmpCommunityStringReadWrite": wtWebAlarm6x6SnmpCommunityStringReadWrite,
       "wtWebAlarm6x6SnmpSystemTrapManagerIP": wtWebAlarm6x6SnmpSystemTrapManagerIP,
       "wtWebAlarm6x6SnmpSystemTrapEnable": wtWebAlarm6x6SnmpSystemTrapEnable,
       "wtWebAlarm6x6UDP": wtWebAlarm6x6UDP,
       "wtWebAlarm6x6UdpAdminPort": wtWebAlarm6x6UdpAdminPort,
       "wtWebAlarm6x6UdpEnable": wtWebAlarm6x6UdpEnable,
       "wtWebAlarm6x6UdpRemotePort": wtWebAlarm6x6UdpRemotePort,
       "wtWebAlarm6x6Syslog": wtWebAlarm6x6Syslog,
       "wtWebAlarm6x6SyslogServerIP": wtWebAlarm6x6SyslogServerIP,
       "wtWebAlarm6x6SyslogServerPort": wtWebAlarm6x6SyslogServerPort,
       "wtWebAlarm6x6SyslogSystemMessagesEnable": wtWebAlarm6x6SyslogSystemMessagesEnable,
       "wtWebAlarm6x6SyslogEnable": wtWebAlarm6x6SyslogEnable,
       "wtWebAlarm6x6FTP": wtWebAlarm6x6FTP,
       "wtWebAlarm6x6FTPServerIP": wtWebAlarm6x6FTPServerIP,
       "wtWebAlarm6x6FTPServerControlPort": wtWebAlarm6x6FTPServerControlPort,
       "wtWebAlarm6x6FTPUserName": wtWebAlarm6x6FTPUserName,
       "wtWebAlarm6x6FTPPassword": wtWebAlarm6x6FTPPassword,
       "wtWebAlarm6x6FTPAccount": wtWebAlarm6x6FTPAccount,
       "wtWebAlarm6x6FTPOption": wtWebAlarm6x6FTPOption,
       "wtWebAlarm6x6FTPEnable": wtWebAlarm6x6FTPEnable,
       "wtWebAlarm6x6Alarm": wtWebAlarm6x6Alarm,
       "wtWebAlarm6x6AlarmCount": wtWebAlarm6x6AlarmCount,
       "wtWebAlarm6x6AlarmIfTable": wtWebAlarm6x6AlarmIfTable,
       "wtWebAlarm6x6AlarmIfEntry": wtWebAlarm6x6AlarmIfEntry,
       "wtWebAlarm6x6AlarmNo": wtWebAlarm6x6AlarmNo,
       "wtWebAlarm6x6AlarmTable": wtWebAlarm6x6AlarmTable,
       "wtWebAlarm6x6AlarmEntry": wtWebAlarm6x6AlarmEntry,
       "wtWebAlarm6x6AlarmInputTrigger": wtWebAlarm6x6AlarmInputTrigger,
       "wtWebAlarm6x6AlarmMaxCounterValue": wtWebAlarm6x6AlarmMaxCounterValue,
       "wtWebAlarm6x6AlarmInterval": wtWebAlarm6x6AlarmInterval,
       "wtWebAlarm6x6AlarmEnable": wtWebAlarm6x6AlarmEnable,
       "wtWebAlarm6x6AlarmMailAddr": wtWebAlarm6x6AlarmMailAddr,
       "wtWebAlarm6x6AlarmMailSubject": wtWebAlarm6x6AlarmMailSubject,
       "wtWebAlarm6x6AlarmMailText": wtWebAlarm6x6AlarmMailText,
       "wtWebAlarm6x6AlarmSnmpManagerIP": wtWebAlarm6x6AlarmSnmpManagerIP,
       "wtWebAlarm6x6AlarmSnmpTrapText": wtWebAlarm6x6AlarmSnmpTrapText,
       "wtWebAlarm6x6AlarmUdpIpAddr": wtWebAlarm6x6AlarmUdpIpAddr,
       "wtWebAlarm6x6AlarmUdpPort": wtWebAlarm6x6AlarmUdpPort,
       "wtWebAlarm6x6AlarmUdpText": wtWebAlarm6x6AlarmUdpText,
       "wtWebAlarm6x6AlarmTcpIpAddr": wtWebAlarm6x6AlarmTcpIpAddr,
       "wtWebAlarm6x6AlarmTcpPort": wtWebAlarm6x6AlarmTcpPort,
       "wtWebAlarm6x6AlarmTcpText": wtWebAlarm6x6AlarmTcpText,
       "wtWebAlarm6x6AlarmSyslogIpAddr": wtWebAlarm6x6AlarmSyslogIpAddr,
       "wtWebAlarm6x6AlarmSyslogPort": wtWebAlarm6x6AlarmSyslogPort,
       "wtWebAlarm6x6AlarmSyslogText": wtWebAlarm6x6AlarmSyslogText,
       "wtWebAlarm6x6AlarmFtpDataPort": wtWebAlarm6x6AlarmFtpDataPort,
       "wtWebAlarm6x6AlarmFtpFileName": wtWebAlarm6x6AlarmFtpFileName,
       "wtWebAlarm6x6AlarmFtpText": wtWebAlarm6x6AlarmFtpText,
       "wtWebAlarm6x6AlarmFtpOption": wtWebAlarm6x6AlarmFtpOption,
       "wtWebAlarm6x6AlarmMailReleaseSubject": wtWebAlarm6x6AlarmMailReleaseSubject,
       "wtWebAlarm6x6AlarmMailReleaseText": wtWebAlarm6x6AlarmMailReleaseText,
       "wtWebAlarm6x6AlarmSnmpTrapReleaseText": wtWebAlarm6x6AlarmSnmpTrapReleaseText,
       "wtWebAlarm6x6AlarmUdpReleaseText": wtWebAlarm6x6AlarmUdpReleaseText,
       "wtWebAlarm6x6AlarmTcpReleaseText": wtWebAlarm6x6AlarmTcpReleaseText,
       "wtWebAlarm6x6AlarmSyslogReleaseText": wtWebAlarm6x6AlarmSyslogReleaseText,
       "wtWebAlarm6x6AlarmFtpReleaseText": wtWebAlarm6x6AlarmFtpReleaseText,
       "wtWebAlarm6x6AlarmName": wtWebAlarm6x6AlarmName,
       "wtWebAlarm6x6AlarmGlobalEnable": wtWebAlarm6x6AlarmGlobalEnable,
       "wtWebAlarm6x6AlarmCounterClear": wtWebAlarm6x6AlarmCounterClear,
       "wtWebAlarm6x6AlarmAckEnable": wtWebAlarm6x6AlarmAckEnable,
       "wtWebAlarm6x6AlarmAckPort": wtWebAlarm6x6AlarmAckPort,
       "wtWebAlarm6x6AlarmSetPort": wtWebAlarm6x6AlarmSetPort,
       "wtWebAlarm6x6AlarmMailTrgClearSubject": wtWebAlarm6x6AlarmMailTrgClearSubject,
       "wtWebAlarm6x6AlarmMailTrgClearText": wtWebAlarm6x6AlarmMailTrgClearText,
       "wtWebAlarm6x6AlarmSnmpTrapTrgClearText": wtWebAlarm6x6AlarmSnmpTrapTrgClearText,
       "wtWebAlarm6x6AlarmUdpTrgClearText": wtWebAlarm6x6AlarmUdpTrgClearText,
       "wtWebAlarm6x6AlarmTcpTrgClearText": wtWebAlarm6x6AlarmTcpTrgClearText,
       "wtWebAlarm6x6AlarmSyslogTrgClearText": wtWebAlarm6x6AlarmSyslogTrgClearText,
       "wtWebAlarm6x6AlarmFtpTrgClearText": wtWebAlarm6x6AlarmFtpTrgClearText,
       "wtWebAlarm6x6AlarmMailTrapTxEnable": wtWebAlarm6x6AlarmMailTrapTxEnable,
       "wtWebAlarm6x6AlarmSnmpTrapTrapTxEnable": wtWebAlarm6x6AlarmSnmpTrapTrapTxEnable,
       "wtWebAlarm6x6AlarmUdpTrapTxEnable": wtWebAlarm6x6AlarmUdpTrapTxEnable,
       "wtWebAlarm6x6AlarmTcpTrapTxEnable": wtWebAlarm6x6AlarmTcpTrapTxEnable,
       "wtWebAlarm6x6AlarmSyslogTrapTxEnable": wtWebAlarm6x6AlarmSyslogTrapTxEnable,
       "wtWebAlarm6x6AlarmFtpTrapTxEnable": wtWebAlarm6x6AlarmFtpTrapTxEnable,
       "wtWebAlarm6x6Ports": wtWebAlarm6x6Ports,
       "wtWebAlarm6x6InputPortTable": wtWebAlarm6x6InputPortTable,
       "wtWebAlarm6x6InputPortEntry": wtWebAlarm6x6InputPortEntry,
       "wtWebAlarm6x6PortInputName": wtWebAlarm6x6PortInputName,
       "wtWebAlarm6x6PortInputText": wtWebAlarm6x6PortInputText,
       "wtWebAlarm6x6PortInputFilter": wtWebAlarm6x6PortInputFilter,
       "wtWebAlarm6x6PortInputPulsePolarity": wtWebAlarm6x6PortInputPulsePolarity,
       "wtWebAlarm6x6PortInputCounterSet": wtWebAlarm6x6PortInputCounterSet,
       "wtWebAlarm6x6OutputPortTable": wtWebAlarm6x6OutputPortTable,
       "wtWebAlarm6x6OutputPortEntry": wtWebAlarm6x6OutputPortEntry,
       "wtWebAlarm6x6PortOutputName": wtWebAlarm6x6PortOutputName,
       "wtWebAlarm6x6PortOutputText": wtWebAlarm6x6PortOutputText,
       "wtWebAlarm6x6PortPulseDuration": wtWebAlarm6x6PortPulseDuration,
       "wtWebAlarm6x6PortPulsePolarity": wtWebAlarm6x6PortPulsePolarity,
       "wtWebAlarm6x6Manufact": wtWebAlarm6x6Manufact,
       "wtWebAlarm6x6MfName": wtWebAlarm6x6MfName,
       "wtWebAlarm6x6MfAddr": wtWebAlarm6x6MfAddr,
       "wtWebAlarm6x6MfHotline": wtWebAlarm6x6MfHotline,
       "wtWebAlarm6x6MfInternet": wtWebAlarm6x6MfInternet,
       "wtWebAlarm6x6MfDeviceTyp": wtWebAlarm6x6MfDeviceTyp,
       "wtWebAlarm6x6MfOrderNo": wtWebAlarm6x6MfOrderNo,
       "wtWebAlarm6x6Diag": wtWebAlarm6x6Diag,
       "wtWebAlarm6x6DiagErrorCount": wtWebAlarm6x6DiagErrorCount,
       "wtWebAlarm6x6DiagBinaryError": wtWebAlarm6x6DiagBinaryError,
       "wtWebAlarm6x6DiagErrorIndex": wtWebAlarm6x6DiagErrorIndex,
       "wtWebAlarm6x6DiagErrorMessage": wtWebAlarm6x6DiagErrorMessage,
       "wtWebAlarm6x6DiagErrorClear": wtWebAlarm6x6DiagErrorClear,
       "wtWebCount6": wtWebCount6,
       "wtWebCount6Alert1": wtWebCount6Alert1,
       "wtWebCount6Alert2": wtWebCount6Alert2,
       "wtWebCount6Alert3": wtWebCount6Alert3,
       "wtWebCount6Alert4": wtWebCount6Alert4,
       "wtWebCount6Alert5": wtWebCount6Alert5,
       "wtWebCount6Alert6": wtWebCount6Alert6,
       "wtWebCount6Alert7": wtWebCount6Alert7,
       "wtWebCount6Alert8": wtWebCount6Alert8,
       "wtWebCount6Alert9": wtWebCount6Alert9,
       "wtWebCount6Alert10": wtWebCount6Alert10,
       "wtWebCount6Alert11": wtWebCount6Alert11,
       "wtWebCount6Alert12": wtWebCount6Alert12,
       "wtWebCount6AlertDiag": wtWebCount6AlertDiag,
       "wtWebCount6InOut": wtWebCount6InOut,
       "wtWebCount6Inputs": wtWebCount6Inputs,
       "wtWebCount6Outputs": wtWebCount6Outputs,
       "wtWebCount6InputTable": wtWebCount6InputTable,
       "wtWebCount6InputEntry": wtWebCount6InputEntry,
       "wtWebCount6InputNo": wtWebCount6InputNo,
       "wtWebCount6InputCounter": wtWebCount6InputCounter,
       "wtWebCount6InputCounterClear": wtWebCount6InputCounterClear,
       "wtWebCount6InputState": wtWebCount6InputState,
       "wtWebCount6InputValue": wtWebCount6InputValue,
       "wtWebCount6ReportOutputTable": wtWebCount6ReportOutputTable,
       "wtWebCount6ReportOutputEntry": wtWebCount6ReportOutputEntry,
       "wtWebCount6ReportOutputState": wtWebCount6ReportOutputState,
       "wtWebCount6ReportTriggerState": wtWebCount6ReportTriggerState,
       "wtWebCount6SessCntrl": wtWebCount6SessCntrl,
       "wtWebCount6SessCntrlPassword": wtWebCount6SessCntrlPassword,
       "wtWebCount6SessCntrlConfigMode": wtWebCount6SessCntrlConfigMode,
       "wtWebCount6SessCntrlLogout": wtWebCount6SessCntrlLogout,
       "wtWebCount6SessCntrlAdminPassword": wtWebCount6SessCntrlAdminPassword,
       "wtWebCount6SessCntrlConfigPassword": wtWebCount6SessCntrlConfigPassword,
       "wtWebCount6Config": wtWebCount6Config,
       "wtWebCount6Device": wtWebCount6Device,
       "wtWebCount6Text": wtWebCount6Text,
       "wtWebCount6DeviceName": wtWebCount6DeviceName,
       "wtWebCount6DeviceText": wtWebCount6DeviceText,
       "wtWebCount6DeviceLocation": wtWebCount6DeviceLocation,
       "wtWebCount6DeviceContact": wtWebCount6DeviceContact,
       "wtWebCount6TimeDate": wtWebCount6TimeDate,
       "wtWebCount6TimeZone": wtWebCount6TimeZone,
       "wtWebCount6TzOffsetHrs": wtWebCount6TzOffsetHrs,
       "wtWebCount6TzOffsetMin": wtWebCount6TzOffsetMin,
       "wtWebCount6TzEnable": wtWebCount6TzEnable,
       "wtWebCount6StTzOffsetHrs": wtWebCount6StTzOffsetHrs,
       "wtWebCount6StTzOffsetMin": wtWebCount6StTzOffsetMin,
       "wtWebCount6StTzEnable": wtWebCount6StTzEnable,
       "wtWebCount6StTzStartMonth": wtWebCount6StTzStartMonth,
       "wtWebCount6StTzStartMode": wtWebCount6StTzStartMode,
       "wtWebCount6StTzStartWday": wtWebCount6StTzStartWday,
       "wtWebCount6StTzStartHrs": wtWebCount6StTzStartHrs,
       "wtWebCount6StTzStartMin": wtWebCount6StTzStartMin,
       "wtWebCount6StTzStopMonth": wtWebCount6StTzStopMonth,
       "wtWebCount6StTzStopMode": wtWebCount6StTzStopMode,
       "wtWebCount6StTzStopWday": wtWebCount6StTzStopWday,
       "wtWebCount6StTzStopHrs": wtWebCount6StTzStopHrs,
       "wtWebCount6StTzStopMin": wtWebCount6StTzStopMin,
       "wtWebCount6TimeServer": wtWebCount6TimeServer,
       "wtWebCount6TimeServer1": wtWebCount6TimeServer1,
       "wtWebCount6TimeServer2": wtWebCount6TimeServer2,
       "wtWebCount6TsEnable": wtWebCount6TsEnable,
       "wtWebCount6TsSyncTime": wtWebCount6TsSyncTime,
       "wtWebCount6DeviceClock": wtWebCount6DeviceClock,
       "wtWebCount6ClockHrs": wtWebCount6ClockHrs,
       "wtWebCount6ClockMin": wtWebCount6ClockMin,
       "wtWebCount6ClockDay": wtWebCount6ClockDay,
       "wtWebCount6ClockMonth": wtWebCount6ClockMonth,
       "wtWebCount6ClockYear": wtWebCount6ClockYear,
       "wtWebCount6Basic": wtWebCount6Basic,
       "wtWebCount6Network": wtWebCount6Network,
       "wtWebCount6IpAddress": wtWebCount6IpAddress,
       "wtWebCount6SubnetMask": wtWebCount6SubnetMask,
       "wtWebCount6Gateway": wtWebCount6Gateway,
       "wtWebCount6DnsServer1": wtWebCount6DnsServer1,
       "wtWebCount6DnsServer2": wtWebCount6DnsServer2,
       "wtWebCount6AddConfig": wtWebCount6AddConfig,
       "wtWebCount6HTTP": wtWebCount6HTTP,
       "wtWebCount6HttpPort": wtWebCount6HttpPort,
       "wtWebCount6Mail": wtWebCount6Mail,
       "wtWebCount6MailAdName": wtWebCount6MailAdName,
       "wtWebCount6MailReply": wtWebCount6MailReply,
       "wtWebCount6MailServer": wtWebCount6MailServer,
       "wtWebCount6MailEnable": wtWebCount6MailEnable,
       "wtWebCount6MailAuthentication": wtWebCount6MailAuthentication,
       "wtWebCount6MailAuthUser": wtWebCount6MailAuthUser,
       "wtWebCount6MailAuthPassword": wtWebCount6MailAuthPassword,
       "wtWebCount6MailPop3Server": wtWebCount6MailPop3Server,
       "wtWebCount6SNMP": wtWebCount6SNMP,
       "wtWebCount6SnmpEnable": wtWebCount6SnmpEnable,
       "wtWebCount6SnmpCommunityStringRead": wtWebCount6SnmpCommunityStringRead,
       "wtWebCount6SnmpCommunityStringReadWrite": wtWebCount6SnmpCommunityStringReadWrite,
       "wtWebCount6SnmpSystemTrapManagerIP": wtWebCount6SnmpSystemTrapManagerIP,
       "wtWebCount6SnmpSystemTrapEnable": wtWebCount6SnmpSystemTrapEnable,
       "wtWebCount6UDP": wtWebCount6UDP,
       "wtWebCount6UdpAdminPort": wtWebCount6UdpAdminPort,
       "wtWebCount6UdpEnable": wtWebCount6UdpEnable,
       "wtWebCount6UdpRemotePort": wtWebCount6UdpRemotePort,
       "wtWebCount6Syslog": wtWebCount6Syslog,
       "wtWebCount6SyslogServerIP": wtWebCount6SyslogServerIP,
       "wtWebCount6SyslogServerPort": wtWebCount6SyslogServerPort,
       "wtWebCount6SyslogSystemMessagesEnable": wtWebCount6SyslogSystemMessagesEnable,
       "wtWebCount6SyslogEnable": wtWebCount6SyslogEnable,
       "wtWebCount6FTP": wtWebCount6FTP,
       "wtWebCount6FTPServerIP": wtWebCount6FTPServerIP,
       "wtWebCount6FTPServerControlPort": wtWebCount6FTPServerControlPort,
       "wtWebCount6FTPUserName": wtWebCount6FTPUserName,
       "wtWebCount6FTPPassword": wtWebCount6FTPPassword,
       "wtWebCount6FTPAccount": wtWebCount6FTPAccount,
       "wtWebCount6FTPOption": wtWebCount6FTPOption,
       "wtWebCount6FTPEnable": wtWebCount6FTPEnable,
       "wtWebCount6Report": wtWebCount6Report,
       "wtWebCount6ReportCount": wtWebCount6ReportCount,
       "wtWebCount6ReportIfTable": wtWebCount6ReportIfTable,
       "wtWebCount6ReportIfEntry": wtWebCount6ReportIfEntry,
       "wtWebCount6ReportNo": wtWebCount6ReportNo,
       "wtWebCount6ReportTable": wtWebCount6ReportTable,
       "wtWebCount6ReportEntry": wtWebCount6ReportEntry,
       "wtWebCount6ReportInputTrigger": wtWebCount6ReportInputTrigger,
       "wtWebCount6ReportSystemTrigger": wtWebCount6ReportSystemTrigger,
       "wtWebCount6ReportMaxCounterValue": wtWebCount6ReportMaxCounterValue,
       "wtWebCount6ReportInterval": wtWebCount6ReportInterval,
       "wtWebCount6ReportEnable": wtWebCount6ReportEnable,
       "wtWebCount6ReportMailAddr": wtWebCount6ReportMailAddr,
       "wtWebCount6ReportMailSubject": wtWebCount6ReportMailSubject,
       "wtWebCount6ReportMailText": wtWebCount6ReportMailText,
       "wtWebCount6ReportSnmpManagerIP": wtWebCount6ReportSnmpManagerIP,
       "wtWebCount6ReportSnmpTrapText": wtWebCount6ReportSnmpTrapText,
       "wtWebCount6ReportUdpIpAddr": wtWebCount6ReportUdpIpAddr,
       "wtWebCount6ReportUdpPort": wtWebCount6ReportUdpPort,
       "wtWebCount6ReportUdpText": wtWebCount6ReportUdpText,
       "wtWebCount6ReportTcpIpAddr": wtWebCount6ReportTcpIpAddr,
       "wtWebCount6ReportTcpPort": wtWebCount6ReportTcpPort,
       "wtWebCount6ReportTcpText": wtWebCount6ReportTcpText,
       "wtWebCount6ReportSyslogIpAddr": wtWebCount6ReportSyslogIpAddr,
       "wtWebCount6ReportSyslogPort": wtWebCount6ReportSyslogPort,
       "wtWebCount6ReportSyslogText": wtWebCount6ReportSyslogText,
       "wtWebCount6ReportFtpDataPort": wtWebCount6ReportFtpDataPort,
       "wtWebCount6ReportFtpFileName": wtWebCount6ReportFtpFileName,
       "wtWebCount6ReportFtpText": wtWebCount6ReportFtpText,
       "wtWebCount6ReportFtpOption": wtWebCount6ReportFtpOption,
       "wtWebCount6ReportTimerCron": wtWebCount6ReportTimerCron,
       "wtWebCount6ReportName": wtWebCount6ReportName,
       "wtWebCount6ReportGlobalEnable": wtWebCount6ReportGlobalEnable,
       "wtWebCount6ReportCounterClear": wtWebCount6ReportCounterClear,
       "wtWebCount6ReportRateOfChange": wtWebCount6ReportRateOfChange,
       "wtWebCount6ReportRateOfChangeWindow": wtWebCount6ReportRateOfChangeWindow,
       "wtWebCount6ReportRateOfChangeMode": wtWebCount6ReportRateOfChangeMode,
       "wtWebCount6Ports": wtWebCount6Ports,
       "wtWebCount6InputPortTable": wtWebCount6InputPortTable,
       "wtWebCount6InputPortEntry": wtWebCount6InputPortEntry,
       "wtWebCount6PortInputName": wtWebCount6PortInputName,
       "wtWebCount6PortInputText": wtWebCount6PortInputText,
       "wtWebCount6PortInputMode": wtWebCount6PortInputMode,
       "wtWebCount6PortInputFilter": wtWebCount6PortInputFilter,
       "wtWebCount6PortInputPulsePolarity": wtWebCount6PortInputPulsePolarity,
       "wtWebCount6PortInputBicountInactivTimeout": wtWebCount6PortInputBicountInactivTimeout,
       "wtWebCount6PortInputCounterSet": wtWebCount6PortInputCounterSet,
       "wtWebCount6PortInputCounterScale": wtWebCount6PortInputCounterScale,
       "wtWebCount6PortInputCounterUnit": wtWebCount6PortInputCounterUnit,
       "wtWebCount6Manufact": wtWebCount6Manufact,
       "wtWebCount6MfName": wtWebCount6MfName,
       "wtWebCount6MfAddr": wtWebCount6MfAddr,
       "wtWebCount6MfHotline": wtWebCount6MfHotline,
       "wtWebCount6MfInternet": wtWebCount6MfInternet,
       "wtWebCount6MfDeviceTyp": wtWebCount6MfDeviceTyp,
       "wtWebCount6MfOrderNo": wtWebCount6MfOrderNo,
       "wtWebCount6Diag": wtWebCount6Diag,
       "wtWebCount6DiagErrorCount": wtWebCount6DiagErrorCount,
       "wtWebCount6DiagBinaryError": wtWebCount6DiagBinaryError,
       "wtWebCount6DiagErrorIndex": wtWebCount6DiagErrorIndex,
       "wtWebCount6DiagErrorMessage": wtWebCount6DiagErrorMessage,
       "wtWebCount6DiagErrorClear": wtWebCount6DiagErrorClear,
       "wtWebioEA6x6": wtWebioEA6x6,
       "wtWebioEA6x6Alert1": wtWebioEA6x6Alert1,
       "wtWebioEA6x6Alert2": wtWebioEA6x6Alert2,
       "wtWebioEA6x6Alert3": wtWebioEA6x6Alert3,
       "wtWebioEA6x6Alert4": wtWebioEA6x6Alert4,
       "wtWebioEA6x6Alert5": wtWebioEA6x6Alert5,
       "wtWebioEA6x6Alert6": wtWebioEA6x6Alert6,
       "wtWebioEA6x6Alert7": wtWebioEA6x6Alert7,
       "wtWebioEA6x6Alert8": wtWebioEA6x6Alert8,
       "wtWebioEA6x6Alert9": wtWebioEA6x6Alert9,
       "wtWebioEA6x6Alert10": wtWebioEA6x6Alert10,
       "wtWebioEA6x6Alert11": wtWebioEA6x6Alert11,
       "wtWebioEA6x6Alert12": wtWebioEA6x6Alert12,
       "wtWebioEA6x6Alert13": wtWebioEA6x6Alert13,
       "wtWebioEA6x6Alert14": wtWebioEA6x6Alert14,
       "wtWebioEA6x6Alert15": wtWebioEA6x6Alert15,
       "wtWebioEA6x6Alert16": wtWebioEA6x6Alert16,
       "wtWebioEA6x6Alert17": wtWebioEA6x6Alert17,
       "wtWebioEA6x6Alert18": wtWebioEA6x6Alert18,
       "wtWebioEA6x6Alert19": wtWebioEA6x6Alert19,
       "wtWebioEA6x6Alert20": wtWebioEA6x6Alert20,
       "wtWebioEA6x6Alert21": wtWebioEA6x6Alert21,
       "wtWebioEA6x6Alert22": wtWebioEA6x6Alert22,
       "wtWebioEA6x6Alert23": wtWebioEA6x6Alert23,
       "wtWebioEA6x6Alert24": wtWebioEA6x6Alert24,
       "wtWebioEA6x6AlertDiag": wtWebioEA6x6AlertDiag,
       "wtWebioEA6x6InOut": wtWebioEA6x6InOut,
       "wtWebioEA6x6Inputs": wtWebioEA6x6Inputs,
       "wtWebioEA6x6Outputs": wtWebioEA6x6Outputs,
       "wtWebioEA6x6InputTable": wtWebioEA6x6InputTable,
       "wtWebioEA6x6InputEntry": wtWebioEA6x6InputEntry,
       "wtWebioEA6x6InputNo": wtWebioEA6x6InputNo,
       "wtWebioEA6x6InputCounter": wtWebioEA6x6InputCounter,
       "wtWebioEA6x6InputCounterClear": wtWebioEA6x6InputCounterClear,
       "wtWebioEA6x6InputState": wtWebioEA6x6InputState,
       "wtWebioEA6x6InputValue": wtWebioEA6x6InputValue,
       "wtWebioEA6x6OutputTable": wtWebioEA6x6OutputTable,
       "wtWebioEA6x6OutputEntry": wtWebioEA6x6OutputEntry,
       "wtWebioEA6x6OutputNo": wtWebioEA6x6OutputNo,
       "wtWebioEA6x6OutputState": wtWebioEA6x6OutputState,
       "wtWebioEA6x6OutputValue": wtWebioEA6x6OutputValue,
       "wtWebioEA6x6SetOutput": wtWebioEA6x6SetOutput,
       "wtWebioEA6x6SessCntrl": wtWebioEA6x6SessCntrl,
       "wtWebioEA6x6SessCntrlPassword": wtWebioEA6x6SessCntrlPassword,
       "wtWebioEA6x6SessCntrlConfigMode": wtWebioEA6x6SessCntrlConfigMode,
       "wtWebioEA6x6SessCntrlLogout": wtWebioEA6x6SessCntrlLogout,
       "wtWebioEA6x6SessCntrlAdminPassword": wtWebioEA6x6SessCntrlAdminPassword,
       "wtWebioEA6x6SessCntrlConfigPassword": wtWebioEA6x6SessCntrlConfigPassword,
       "wtWebioEA6x6Config": wtWebioEA6x6Config,
       "wtWebioEA6x6Device": wtWebioEA6x6Device,
       "wtWebioEA6x6Text": wtWebioEA6x6Text,
       "wtWebioEA6x6DeviceName": wtWebioEA6x6DeviceName,
       "wtWebioEA6x6DeviceText": wtWebioEA6x6DeviceText,
       "wtWebioEA6x6DeviceLocation": wtWebioEA6x6DeviceLocation,
       "wtWebioEA6x6DeviceContact": wtWebioEA6x6DeviceContact,
       "wtWebioEA6x6TimeDate": wtWebioEA6x6TimeDate,
       "wtWebioEA6x6TimeZone": wtWebioEA6x6TimeZone,
       "wtWebioEA6x6TzOffsetHrs": wtWebioEA6x6TzOffsetHrs,
       "wtWebioEA6x6TzOffsetMin": wtWebioEA6x6TzOffsetMin,
       "wtWebioEA6x6TzEnable": wtWebioEA6x6TzEnable,
       "wtWebioEA6x6StTzOffsetHrs": wtWebioEA6x6StTzOffsetHrs,
       "wtWebioEA6x6StTzOffsetMin": wtWebioEA6x6StTzOffsetMin,
       "wtWebioEA6x6StTzEnable": wtWebioEA6x6StTzEnable,
       "wtWebioEA6x6StTzStartMonth": wtWebioEA6x6StTzStartMonth,
       "wtWebioEA6x6StTzStartMode": wtWebioEA6x6StTzStartMode,
       "wtWebioEA6x6StTzStartWday": wtWebioEA6x6StTzStartWday,
       "wtWebioEA6x6StTzStartHrs": wtWebioEA6x6StTzStartHrs,
       "wtWebioEA6x6StTzStartMin": wtWebioEA6x6StTzStartMin,
       "wtWebioEA6x6StTzStopMonth": wtWebioEA6x6StTzStopMonth,
       "wtWebioEA6x6StTzStopMode": wtWebioEA6x6StTzStopMode,
       "wtWebioEA6x6StTzStopWday": wtWebioEA6x6StTzStopWday,
       "wtWebioEA6x6StTzStopHrs": wtWebioEA6x6StTzStopHrs,
       "wtWebioEA6x6StTzStopMin": wtWebioEA6x6StTzStopMin,
       "wtWebioEA6x6TimeServer": wtWebioEA6x6TimeServer,
       "wtWebioEA6x6TimeServer1": wtWebioEA6x6TimeServer1,
       "wtWebioEA6x6TimeServer2": wtWebioEA6x6TimeServer2,
       "wtWebioEA6x6TsEnable": wtWebioEA6x6TsEnable,
       "wtWebioEA6x6TsSyncTime": wtWebioEA6x6TsSyncTime,
       "wtWebioEA6x6DeviceClock": wtWebioEA6x6DeviceClock,
       "wtWebioEA6x6ClockHrs": wtWebioEA6x6ClockHrs,
       "wtWebioEA6x6ClockMin": wtWebioEA6x6ClockMin,
       "wtWebioEA6x6ClockDay": wtWebioEA6x6ClockDay,
       "wtWebioEA6x6ClockMonth": wtWebioEA6x6ClockMonth,
       "wtWebioEA6x6ClockYear": wtWebioEA6x6ClockYear,
       "wtWebioEA6x6Basic": wtWebioEA6x6Basic,
       "wtWebioEA6x6Network": wtWebioEA6x6Network,
       "wtWebioEA6x6IpAddress": wtWebioEA6x6IpAddress,
       "wtWebioEA6x6SubnetMask": wtWebioEA6x6SubnetMask,
       "wtWebioEA6x6Gateway": wtWebioEA6x6Gateway,
       "wtWebioEA6x6DnsServer1": wtWebioEA6x6DnsServer1,
       "wtWebioEA6x6DnsServer2": wtWebioEA6x6DnsServer2,
       "wtWebioEA6x6AddConfig": wtWebioEA6x6AddConfig,
       "wtWebioEA6x6HTTP": wtWebioEA6x6HTTP,
       "wtWebioEA6x6Startup": wtWebioEA6x6Startup,
       "wtWebioEA6x6GetHeaderEnable": wtWebioEA6x6GetHeaderEnable,
       "wtWebioEA6x6HttpInputTrigger": wtWebioEA6x6HttpInputTrigger,
       "wtWebioEA6x6HttpPort": wtWebioEA6x6HttpPort,
       "wtWebioEA6x6Mail": wtWebioEA6x6Mail,
       "wtWebioEA6x6MailAdName": wtWebioEA6x6MailAdName,
       "wtWebioEA6x6MailReply": wtWebioEA6x6MailReply,
       "wtWebioEA6x6MailServer": wtWebioEA6x6MailServer,
       "wtWebioEA6x6MailEnable": wtWebioEA6x6MailEnable,
       "wtWebioEA6x6MailAuthentication": wtWebioEA6x6MailAuthentication,
       "wtWebioEA6x6MailAuthUser": wtWebioEA6x6MailAuthUser,
       "wtWebioEA6x6MailAuthPassword": wtWebioEA6x6MailAuthPassword,
       "wtWebioEA6x6MailPop3Server": wtWebioEA6x6MailPop3Server,
       "wtWebioEA6x6SNMP": wtWebioEA6x6SNMP,
       "wtWebioEA6x6SnmpEnable": wtWebioEA6x6SnmpEnable,
       "wtWebioEA6x6SnmpCommunityStringRead": wtWebioEA6x6SnmpCommunityStringRead,
       "wtWebioEA6x6SnmpCommunityStringReadWrite": wtWebioEA6x6SnmpCommunityStringReadWrite,
       "wtWebioEA6x6SnmpSystemTrapManagerIP": wtWebioEA6x6SnmpSystemTrapManagerIP,
       "wtWebioEA6x6SnmpSystemTrapEnable": wtWebioEA6x6SnmpSystemTrapEnable,
       "wtWebioEA6x6UDP": wtWebioEA6x6UDP,
       "wtWebioEA6x6UdpAdminPort": wtWebioEA6x6UdpAdminPort,
       "wtWebioEA6x6UdpEnable": wtWebioEA6x6UdpEnable,
       "wtWebioEA6x6UdpRemotePort": wtWebioEA6x6UdpRemotePort,
       "wtWebioEA6x6Binary": wtWebioEA6x6Binary,
       "wtWebioEA6x6BinaryModeCount": wtWebioEA6x6BinaryModeCount,
       "wtWebioEA6x6BinaryIfTable": wtWebioEA6x6BinaryIfTable,
       "wtWebioEA6x6BinaryIfEntry": wtWebioEA6x6BinaryIfEntry,
       "wtWebioEA6x6BinaryModeNo": wtWebioEA6x6BinaryModeNo,
       "wtWebioEA6x6BinaryTable": wtWebioEA6x6BinaryTable,
       "wtWebioEA6x6BinaryEntry": wtWebioEA6x6BinaryEntry,
       "wtWebioEA6x6BinaryOperationMode": wtWebioEA6x6BinaryOperationMode,
       "wtWebioEA6x6BinaryTcpServerLocalPort": wtWebioEA6x6BinaryTcpServerLocalPort,
       "wtWebioEA6x6BinaryTcpServerInputTrigger": wtWebioEA6x6BinaryTcpServerInputTrigger,
       "wtWebioEA6x6BinaryTcpServerApplicationMode": wtWebioEA6x6BinaryTcpServerApplicationMode,
       "wtWebioEA6x6BinaryTcpClientLocalPort": wtWebioEA6x6BinaryTcpClientLocalPort,
       "wtWebioEA6x6BinaryTcpClientServerPort": wtWebioEA6x6BinaryTcpClientServerPort,
       "wtWebioEA6x6BinaryTcpClientServerIpAddr": wtWebioEA6x6BinaryTcpClientServerIpAddr,
       "wtWebioEA6x6BinaryTcpClientServerPassword": wtWebioEA6x6BinaryTcpClientServerPassword,
       "wtWebioEA6x6BinaryTcpClientInactivity": wtWebioEA6x6BinaryTcpClientInactivity,
       "wtWebioEA6x6BinaryTcpClientInputTrigger": wtWebioEA6x6BinaryTcpClientInputTrigger,
       "wtWebioEA6x6BinaryTcpClientInterval": wtWebioEA6x6BinaryTcpClientInterval,
       "wtWebioEA6x6BinaryTcpClientApplicationMode": wtWebioEA6x6BinaryTcpClientApplicationMode,
       "wtWebioEA6x6BinaryUdpPeerLocalPort": wtWebioEA6x6BinaryUdpPeerLocalPort,
       "wtWebioEA6x6BinaryUdpPeerRemotePort": wtWebioEA6x6BinaryUdpPeerRemotePort,
       "wtWebioEA6x6BinaryUdpPeerRemoteIpAddr": wtWebioEA6x6BinaryUdpPeerRemoteIpAddr,
       "wtWebioEA6x6BinaryUdpPeerInputTrigger": wtWebioEA6x6BinaryUdpPeerInputTrigger,
       "wtWebioEA6x6BinaryUdpPeerInterval": wtWebioEA6x6BinaryUdpPeerInterval,
       "wtWebioEA6x6BinaryUdpPeerApplicationMode": wtWebioEA6x6BinaryUdpPeerApplicationMode,
       "wtWebioEA6x6BinaryConnectedPort": wtWebioEA6x6BinaryConnectedPort,
       "wtWebioEA6x6BinaryConnectedIpAddr": wtWebioEA6x6BinaryConnectedIpAddr,
       "wtWebioEA6x6BinaryTcpServerClientHttpPort": wtWebioEA6x6BinaryTcpServerClientHttpPort,
       "wtWebioEA6x6BinaryTcpClientServerHttpPort": wtWebioEA6x6BinaryTcpClientServerHttpPort,
       "wtWebioEA6x6Syslog": wtWebioEA6x6Syslog,
       "wtWebioEA6x6SyslogServerIP": wtWebioEA6x6SyslogServerIP,
       "wtWebioEA6x6SyslogServerPort": wtWebioEA6x6SyslogServerPort,
       "wtWebioEA6x6SyslogSystemMessagesEnable": wtWebioEA6x6SyslogSystemMessagesEnable,
       "wtWebioEA6x6SyslogEnable": wtWebioEA6x6SyslogEnable,
       "wtWebioEA6x6FTP": wtWebioEA6x6FTP,
       "wtWebioEA6x6FTPServerIP": wtWebioEA6x6FTPServerIP,
       "wtWebioEA6x6FTPServerControlPort": wtWebioEA6x6FTPServerControlPort,
       "wtWebioEA6x6FTPUserName": wtWebioEA6x6FTPUserName,
       "wtWebioEA6x6FTPPassword": wtWebioEA6x6FTPPassword,
       "wtWebioEA6x6FTPAccount": wtWebioEA6x6FTPAccount,
       "wtWebioEA6x6FTPOption": wtWebioEA6x6FTPOption,
       "wtWebioEA6x6FTPEnable": wtWebioEA6x6FTPEnable,
       "wtWebioEA6x6OutputMode": wtWebioEA6x6OutputMode,
       "wtWebioEA6x6OutputModeTable": wtWebioEA6x6OutputModeTable,
       "wtWebioEA6x6OutputModeEntry": wtWebioEA6x6OutputModeEntry,
       "wtWebioEA6x6OutputModeBit": wtWebioEA6x6OutputModeBit,
       "wtWebioEA6x6SafetyTimeout": wtWebioEA6x6SafetyTimeout,
       "wtWebioEA6x6Alarm": wtWebioEA6x6Alarm,
       "wtWebioEA6x6AlarmCount": wtWebioEA6x6AlarmCount,
       "wtWebioEA6x6AlarmIfTable": wtWebioEA6x6AlarmIfTable,
       "wtWebioEA6x6AlarmIfEntry": wtWebioEA6x6AlarmIfEntry,
       "wtWebioEA6x6AlarmNo": wtWebioEA6x6AlarmNo,
       "wtWebioEA6x6AlarmTable": wtWebioEA6x6AlarmTable,
       "wtWebioEA6x6AlarmEntry": wtWebioEA6x6AlarmEntry,
       "wtWebioEA6x6AlarmInputTrigger": wtWebioEA6x6AlarmInputTrigger,
       "wtWebioEA6x6AlarmOutputTrigger": wtWebioEA6x6AlarmOutputTrigger,
       "wtWebioEA6x6AlarmSystemTrigger": wtWebioEA6x6AlarmSystemTrigger,
       "wtWebioEA6x6AlarmMaxCounterValue": wtWebioEA6x6AlarmMaxCounterValue,
       "wtWebioEA6x6AlarmInterval": wtWebioEA6x6AlarmInterval,
       "wtWebioEA6x6AlarmEnable": wtWebioEA6x6AlarmEnable,
       "wtWebioEA6x6AlarmMailAddr": wtWebioEA6x6AlarmMailAddr,
       "wtWebioEA6x6AlarmMailSubject": wtWebioEA6x6AlarmMailSubject,
       "wtWebioEA6x6AlarmMailText": wtWebioEA6x6AlarmMailText,
       "wtWebioEA6x6AlarmSnmpManagerIP": wtWebioEA6x6AlarmSnmpManagerIP,
       "wtWebioEA6x6AlarmSnmpTrapText": wtWebioEA6x6AlarmSnmpTrapText,
       "wtWebioEA6x6AlarmUdpIpAddr": wtWebioEA6x6AlarmUdpIpAddr,
       "wtWebioEA6x6AlarmUdpPort": wtWebioEA6x6AlarmUdpPort,
       "wtWebioEA6x6AlarmUdpText": wtWebioEA6x6AlarmUdpText,
       "wtWebioEA6x6AlarmTcpIpAddr": wtWebioEA6x6AlarmTcpIpAddr,
       "wtWebioEA6x6AlarmTcpPort": wtWebioEA6x6AlarmTcpPort,
       "wtWebioEA6x6AlarmTcpText": wtWebioEA6x6AlarmTcpText,
       "wtWebioEA6x6AlarmSyslogIpAddr": wtWebioEA6x6AlarmSyslogIpAddr,
       "wtWebioEA6x6AlarmSyslogPort": wtWebioEA6x6AlarmSyslogPort,
       "wtWebioEA6x6AlarmSyslogText": wtWebioEA6x6AlarmSyslogText,
       "wtWebioEA6x6AlarmFtpDataPort": wtWebioEA6x6AlarmFtpDataPort,
       "wtWebioEA6x6AlarmFtpFileName": wtWebioEA6x6AlarmFtpFileName,
       "wtWebioEA6x6AlarmFtpText": wtWebioEA6x6AlarmFtpText,
       "wtWebioEA6x6AlarmFtpOption": wtWebioEA6x6AlarmFtpOption,
       "wtWebioEA6x6AlarmTimerCron": wtWebioEA6x6AlarmTimerCron,
       "wtWebioEA6x6AlarmMailReleaseSubject": wtWebioEA6x6AlarmMailReleaseSubject,
       "wtWebioEA6x6AlarmMailReleaseText": wtWebioEA6x6AlarmMailReleaseText,
       "wtWebioEA6x6AlarmSnmpTrapReleaseText": wtWebioEA6x6AlarmSnmpTrapReleaseText,
       "wtWebioEA6x6AlarmUdpReleaseText": wtWebioEA6x6AlarmUdpReleaseText,
       "wtWebioEA6x6AlarmTcpReleaseText": wtWebioEA6x6AlarmTcpReleaseText,
       "wtWebioEA6x6AlarmSyslogReleaseText": wtWebioEA6x6AlarmSyslogReleaseText,
       "wtWebioEA6x6AlarmFtpReleaseText": wtWebioEA6x6AlarmFtpReleaseText,
       "wtWebioEA6x6Ports": wtWebioEA6x6Ports,
       "wtWebioEA6x6InputPortTable": wtWebioEA6x6InputPortTable,
       "wtWebioEA6x6InputPortEntry": wtWebioEA6x6InputPortEntry,
       "wtWebioEA6x6PortInputName": wtWebioEA6x6PortInputName,
       "wtWebioEA6x6PortInputText": wtWebioEA6x6PortInputText,
       "wtWebioEA6x6PortInputMode": wtWebioEA6x6PortInputMode,
       "wtWebioEA6x6PortInputFilter": wtWebioEA6x6PortInputFilter,
       "wtWebioEA6x6PortInputBicountPulsePolarity": wtWebioEA6x6PortInputBicountPulsePolarity,
       "wtWebioEA6x6PortInputBicountInactivTimeout": wtWebioEA6x6PortInputBicountInactivTimeout,
       "wtWebioEA6x6OutputPortTable": wtWebioEA6x6OutputPortTable,
       "wtWebioEA6x6OutputPortEntry": wtWebioEA6x6OutputPortEntry,
       "wtWebioEA6x6PortOutputName": wtWebioEA6x6PortOutputName,
       "wtWebioEA6x6PortOutputText": wtWebioEA6x6PortOutputText,
       "wtWebioEA6x6PortOutputGroupMode": wtWebioEA6x6PortOutputGroupMode,
       "wtWebioEA6x6PortOutputSafetyState": wtWebioEA6x6PortOutputSafetyState,
       "wtWebioEA6x6PortLogicInputMask": wtWebioEA6x6PortLogicInputMask,
       "wtWebioEA6x6PortLogicInputInverter": wtWebioEA6x6PortLogicInputInverter,
       "wtWebioEA6x6PortLogicFunction": wtWebioEA6x6PortLogicFunction,
       "wtWebioEA6x6PortLogicOutputInverter": wtWebioEA6x6PortLogicOutputInverter,
       "wtWebioEA6x6PortPulseDuration": wtWebioEA6x6PortPulseDuration,
       "wtWebioEA6x6PortPulsePolarity": wtWebioEA6x6PortPulsePolarity,
       "wtWebioEA6x6Manufact": wtWebioEA6x6Manufact,
       "wtWebioEA6x6MfName": wtWebioEA6x6MfName,
       "wtWebioEA6x6MfAddr": wtWebioEA6x6MfAddr,
       "wtWebioEA6x6MfHotline": wtWebioEA6x6MfHotline,
       "wtWebioEA6x6MfInternet": wtWebioEA6x6MfInternet,
       "wtWebioEA6x6MfDeviceTyp": wtWebioEA6x6MfDeviceTyp,
       "wtWebioEA6x6Diag": wtWebioEA6x6Diag,
       "wtWebioEA6x6DiagErrorCount": wtWebioEA6x6DiagErrorCount,
       "wtWebioEA6x6DiagBinaryError": wtWebioEA6x6DiagBinaryError,
       "wtWebioEA6x6DiagErrorIndex": wtWebioEA6x6DiagErrorIndex,
       "wtWebioEA6x6DiagErrorMessage": wtWebioEA6x6DiagErrorMessage,
       "wtWebioEA6x6DiagErrorClear": wtWebioEA6x6DiagErrorClear,
       "wtWebioEA2x2ERP": wtWebioEA2x2ERP,
       "wtWebioEA2x2ERPAlert1": wtWebioEA2x2ERPAlert1,
       "wtWebioEA2x2ERPAlert2": wtWebioEA2x2ERPAlert2,
       "wtWebioEA2x2ERPAlert3": wtWebioEA2x2ERPAlert3,
       "wtWebioEA2x2ERPAlert4": wtWebioEA2x2ERPAlert4,
       "wtWebioEA2x2ERPAlert5": wtWebioEA2x2ERPAlert5,
       "wtWebioEA2x2ERPAlert6": wtWebioEA2x2ERPAlert6,
       "wtWebioEA2x2ERPAlert7": wtWebioEA2x2ERPAlert7,
       "wtWebioEA2x2ERPAlert8": wtWebioEA2x2ERPAlert8,
       "wtWebioEA2x2ERPAlert9": wtWebioEA2x2ERPAlert9,
       "wtWebioEA2x2ERPAlert10": wtWebioEA2x2ERPAlert10,
       "wtWebioEA2x2ERPAlert11": wtWebioEA2x2ERPAlert11,
       "wtWebioEA2x2ERPAlert12": wtWebioEA2x2ERPAlert12,
       "wtWebioEA2x2ERPAlert13": wtWebioEA2x2ERPAlert13,
       "wtWebioEA2x2ERPAlert14": wtWebioEA2x2ERPAlert14,
       "wtWebioEA2x2ERPAlert15": wtWebioEA2x2ERPAlert15,
       "wtWebioEA2x2ERPAlert16": wtWebioEA2x2ERPAlert16,
       "wtWebioEA2x2ERPAlert17": wtWebioEA2x2ERPAlert17,
       "wtWebioEA2x2ERPAlert18": wtWebioEA2x2ERPAlert18,
       "wtWebioEA2x2ERPAlert19": wtWebioEA2x2ERPAlert19,
       "wtWebioEA2x2ERPAlert20": wtWebioEA2x2ERPAlert20,
       "wtWebioEA2x2ERPAlert21": wtWebioEA2x2ERPAlert21,
       "wtWebioEA2x2ERPAlert22": wtWebioEA2x2ERPAlert22,
       "wtWebioEA2x2ERPAlert23": wtWebioEA2x2ERPAlert23,
       "wtWebioEA2x2ERPAlert24": wtWebioEA2x2ERPAlert24,
       "wtWebioEA2x2ERPAlertDiag": wtWebioEA2x2ERPAlertDiag,
       "wtWebioEA2x2ERPInOut": wtWebioEA2x2ERPInOut,
       "wtWebioEA2x2ERPInputs": wtWebioEA2x2ERPInputs,
       "wtWebioEA2x2ERPOutputs": wtWebioEA2x2ERPOutputs,
       "wtWebioEA2x2ERPInputTable": wtWebioEA2x2ERPInputTable,
       "wtWebioEA2x2ERPInputEntry": wtWebioEA2x2ERPInputEntry,
       "wtWebioEA2x2ERPInputNo": wtWebioEA2x2ERPInputNo,
       "wtWebioEA2x2ERPInputCounter": wtWebioEA2x2ERPInputCounter,
       "wtWebioEA2x2ERPInputCounterClear": wtWebioEA2x2ERPInputCounterClear,
       "wtWebioEA2x2ERPInputState": wtWebioEA2x2ERPInputState,
       "wtWebioEA2x2ERPInputValue": wtWebioEA2x2ERPInputValue,
       "wtWebioEA2x2ERPOutputTable": wtWebioEA2x2ERPOutputTable,
       "wtWebioEA2x2ERPOutputEntry": wtWebioEA2x2ERPOutputEntry,
       "wtWebioEA2x2ERPOutputNo": wtWebioEA2x2ERPOutputNo,
       "wtWebioEA2x2ERPOutputState": wtWebioEA2x2ERPOutputState,
       "wtWebioEA2x2ERPOutputValue": wtWebioEA2x2ERPOutputValue,
       "wtWebioEA2x2ERPSetOutput": wtWebioEA2x2ERPSetOutput,
       "wtWebioEA2x2ERPSessCntrl": wtWebioEA2x2ERPSessCntrl,
       "wtWebioEA2x2ERPSessCntrlPassword": wtWebioEA2x2ERPSessCntrlPassword,
       "wtWebioEA2x2ERPSessCntrlConfigMode": wtWebioEA2x2ERPSessCntrlConfigMode,
       "wtWebioEA2x2ERPSessCntrlLogout": wtWebioEA2x2ERPSessCntrlLogout,
       "wtWebioEA2x2ERPSessCntrlAdminPassword": wtWebioEA2x2ERPSessCntrlAdminPassword,
       "wtWebioEA2x2ERPSessCntrlConfigPassword": wtWebioEA2x2ERPSessCntrlConfigPassword,
       "wtWebioEA2x2ERPConfig": wtWebioEA2x2ERPConfig,
       "wtWebioEA2x2ERPDevice": wtWebioEA2x2ERPDevice,
       "wtWebioEA2x2ERPText": wtWebioEA2x2ERPText,
       "wtWebioEA2x2ERPDeviceName": wtWebioEA2x2ERPDeviceName,
       "wtWebioEA2x2ERPDeviceText": wtWebioEA2x2ERPDeviceText,
       "wtWebioEA2x2ERPDeviceLocation": wtWebioEA2x2ERPDeviceLocation,
       "wtWebioEA2x2ERPDeviceContact": wtWebioEA2x2ERPDeviceContact,
       "wtWebioEA2x2ERPTimeDate": wtWebioEA2x2ERPTimeDate,
       "wtWebioEA2x2ERPTimeZone": wtWebioEA2x2ERPTimeZone,
       "wtWebioEA2x2ERPTzOffsetHrs": wtWebioEA2x2ERPTzOffsetHrs,
       "wtWebioEA2x2ERPTzOffsetMin": wtWebioEA2x2ERPTzOffsetMin,
       "wtWebioEA2x2ERPTzEnable": wtWebioEA2x2ERPTzEnable,
       "wtWebioEA2x2ERPStTzOffsetHrs": wtWebioEA2x2ERPStTzOffsetHrs,
       "wtWebioEA2x2ERPStTzOffsetMin": wtWebioEA2x2ERPStTzOffsetMin,
       "wtWebioEA2x2ERPStTzEnable": wtWebioEA2x2ERPStTzEnable,
       "wtWebioEA2x2ERPStTzStartMonth": wtWebioEA2x2ERPStTzStartMonth,
       "wtWebioEA2x2ERPStTzStartMode": wtWebioEA2x2ERPStTzStartMode,
       "wtWebioEA2x2ERPStTzStartWday": wtWebioEA2x2ERPStTzStartWday,
       "wtWebioEA2x2ERPStTzStartHrs": wtWebioEA2x2ERPStTzStartHrs,
       "wtWebioEA2x2ERPStTzStartMin": wtWebioEA2x2ERPStTzStartMin,
       "wtWebioEA2x2ERPStTzStopMonth": wtWebioEA2x2ERPStTzStopMonth,
       "wtWebioEA2x2ERPStTzStopMode": wtWebioEA2x2ERPStTzStopMode,
       "wtWebioEA2x2ERPStTzStopWday": wtWebioEA2x2ERPStTzStopWday,
       "wtWebioEA2x2ERPStTzStopHrs": wtWebioEA2x2ERPStTzStopHrs,
       "wtWebioEA2x2ERPStTzStopMin": wtWebioEA2x2ERPStTzStopMin,
       "wtWebioEA2x2ERPTimeServer": wtWebioEA2x2ERPTimeServer,
       "wtWebioEA2x2ERPTimeServer1": wtWebioEA2x2ERPTimeServer1,
       "wtWebioEA2x2ERPTimeServer2": wtWebioEA2x2ERPTimeServer2,
       "wtWebioEA2x2ERPTsEnable": wtWebioEA2x2ERPTsEnable,
       "wtWebioEA2x2ERPTsSyncTime": wtWebioEA2x2ERPTsSyncTime,
       "wtWebioEA2x2ERPDeviceClock": wtWebioEA2x2ERPDeviceClock,
       "wtWebioEA2x2ERPClockHrs": wtWebioEA2x2ERPClockHrs,
       "wtWebioEA2x2ERPClockMin": wtWebioEA2x2ERPClockMin,
       "wtWebioEA2x2ERPClockDay": wtWebioEA2x2ERPClockDay,
       "wtWebioEA2x2ERPClockMonth": wtWebioEA2x2ERPClockMonth,
       "wtWebioEA2x2ERPClockYear": wtWebioEA2x2ERPClockYear,
       "wtWebioEA2x2ERPBasic": wtWebioEA2x2ERPBasic,
       "wtWebioEA2x2ERPNetwork": wtWebioEA2x2ERPNetwork,
       "wtWebioEA2x2ERPIpAddress": wtWebioEA2x2ERPIpAddress,
       "wtWebioEA2x2ERPSubnetMask": wtWebioEA2x2ERPSubnetMask,
       "wtWebioEA2x2ERPGateway": wtWebioEA2x2ERPGateway,
       "wtWebioEA2x2ERPDnsServer1": wtWebioEA2x2ERPDnsServer1,
       "wtWebioEA2x2ERPDnsServer2": wtWebioEA2x2ERPDnsServer2,
       "wtWebioEA2x2ERPAddConfig": wtWebioEA2x2ERPAddConfig,
       "wtWebioEA2x2ERPHTTP": wtWebioEA2x2ERPHTTP,
       "wtWebioEA2x2ERPStartup": wtWebioEA2x2ERPStartup,
       "wtWebioEA2x2ERPGetHeaderEnable": wtWebioEA2x2ERPGetHeaderEnable,
       "wtWebioEA2x2ERPHttpInputTrigger": wtWebioEA2x2ERPHttpInputTrigger,
       "wtWebioEA2x2ERPHttpPort": wtWebioEA2x2ERPHttpPort,
       "wtWebioEA2x2ERPMail": wtWebioEA2x2ERPMail,
       "wtWebioEA2x2ERPMailAdName": wtWebioEA2x2ERPMailAdName,
       "wtWebioEA2x2ERPMailReply": wtWebioEA2x2ERPMailReply,
       "wtWebioEA2x2ERPMailServer": wtWebioEA2x2ERPMailServer,
       "wtWebioEA2x2ERPMailEnable": wtWebioEA2x2ERPMailEnable,
       "wtWebioEA2x2ERPMailAuthentication": wtWebioEA2x2ERPMailAuthentication,
       "wtWebioEA2x2ERPMailAuthUser": wtWebioEA2x2ERPMailAuthUser,
       "wtWebioEA2x2ERPMailAuthPassword": wtWebioEA2x2ERPMailAuthPassword,
       "wtWebioEA2x2ERPMailPop3Server": wtWebioEA2x2ERPMailPop3Server,
       "wtWebioEA2x2ERPSNMP": wtWebioEA2x2ERPSNMP,
       "wtWebioEA2x2ERPSnmpEnable": wtWebioEA2x2ERPSnmpEnable,
       "wtWebioEA2x2ERPSnmpCommunityStringRead": wtWebioEA2x2ERPSnmpCommunityStringRead,
       "wtWebioEA2x2ERPSnmpCommunityStringReadWrite": wtWebioEA2x2ERPSnmpCommunityStringReadWrite,
       "wtWebioEA2x2ERPSnmpSystemTrapManagerIP": wtWebioEA2x2ERPSnmpSystemTrapManagerIP,
       "wtWebioEA2x2ERPSnmpSystemTrapEnable": wtWebioEA2x2ERPSnmpSystemTrapEnable,
       "wtWebioEA2x2ERPUDP": wtWebioEA2x2ERPUDP,
       "wtWebioEA2x2ERPUdpAdminPort": wtWebioEA2x2ERPUdpAdminPort,
       "wtWebioEA2x2ERPUdpEnable": wtWebioEA2x2ERPUdpEnable,
       "wtWebioEA2x2ERPUdpRemotePort": wtWebioEA2x2ERPUdpRemotePort,
       "wtWebioEA2x2ERPBinary": wtWebioEA2x2ERPBinary,
       "wtWebioEA2x2ERPBinaryModeCount": wtWebioEA2x2ERPBinaryModeCount,
       "wtWebioEA2x2ERPBinaryIfTable": wtWebioEA2x2ERPBinaryIfTable,
       "wtWebioEA2x2ERPBinaryIfEntry": wtWebioEA2x2ERPBinaryIfEntry,
       "wtWebioEA2x2ERPBinaryModeNo": wtWebioEA2x2ERPBinaryModeNo,
       "wtWebioEA2x2ERPBinaryTable": wtWebioEA2x2ERPBinaryTable,
       "wtWebioEA2x2ERPBinaryEntry": wtWebioEA2x2ERPBinaryEntry,
       "wtWebioEA2x2ERPBinaryOperationMode": wtWebioEA2x2ERPBinaryOperationMode,
       "wtWebioEA2x2ERPBinaryTcpServerLocalPort": wtWebioEA2x2ERPBinaryTcpServerLocalPort,
       "wtWebioEA2x2ERPBinaryTcpServerInputTrigger": wtWebioEA2x2ERPBinaryTcpServerInputTrigger,
       "wtWebioEA2x2ERPBinaryTcpServerApplicationMode": wtWebioEA2x2ERPBinaryTcpServerApplicationMode,
       "wtWebioEA2x2ERPBinaryTcpClientLocalPort": wtWebioEA2x2ERPBinaryTcpClientLocalPort,
       "wtWebioEA2x2ERPBinaryTcpClientServerPort": wtWebioEA2x2ERPBinaryTcpClientServerPort,
       "wtWebioEA2x2ERPBinaryTcpClientServerIpAddr": wtWebioEA2x2ERPBinaryTcpClientServerIpAddr,
       "wtWebioEA2x2ERPBinaryTcpClientServerPassword": wtWebioEA2x2ERPBinaryTcpClientServerPassword,
       "wtWebioEA2x2ERPBinaryTcpClientInactivity": wtWebioEA2x2ERPBinaryTcpClientInactivity,
       "wtWebioEA2x2ERPBinaryTcpClientInputTrigger": wtWebioEA2x2ERPBinaryTcpClientInputTrigger,
       "wtWebioEA2x2ERPBinaryTcpClientInterval": wtWebioEA2x2ERPBinaryTcpClientInterval,
       "wtWebioEA2x2ERPBinaryTcpClientApplicationMode": wtWebioEA2x2ERPBinaryTcpClientApplicationMode,
       "wtWebioEA2x2ERPBinaryUdpPeerLocalPort": wtWebioEA2x2ERPBinaryUdpPeerLocalPort,
       "wtWebioEA2x2ERPBinaryUdpPeerRemotePort": wtWebioEA2x2ERPBinaryUdpPeerRemotePort,
       "wtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr": wtWebioEA2x2ERPBinaryUdpPeerRemoteIpAddr,
       "wtWebioEA2x2ERPBinaryUdpPeerInputTrigger": wtWebioEA2x2ERPBinaryUdpPeerInputTrigger,
       "wtWebioEA2x2ERPBinaryUdpPeerInterval": wtWebioEA2x2ERPBinaryUdpPeerInterval,
       "wtWebioEA2x2ERPBinaryUdpPeerApplicationMode": wtWebioEA2x2ERPBinaryUdpPeerApplicationMode,
       "wtWebioEA2x2ERPBinaryConnectedPort": wtWebioEA2x2ERPBinaryConnectedPort,
       "wtWebioEA2x2ERPBinaryConnectedIpAddr": wtWebioEA2x2ERPBinaryConnectedIpAddr,
       "wtWebioEA2x2ERPBinaryTcpServerClientHttpPort": wtWebioEA2x2ERPBinaryTcpServerClientHttpPort,
       "wtWebioEA2x2ERPBinaryTcpClientServerHttpPort": wtWebioEA2x2ERPBinaryTcpClientServerHttpPort,
       "wtWebioEA2x2ERPSyslog": wtWebioEA2x2ERPSyslog,
       "wtWebioEA2x2ERPSyslogServerIP": wtWebioEA2x2ERPSyslogServerIP,
       "wtWebioEA2x2ERPSyslogServerPort": wtWebioEA2x2ERPSyslogServerPort,
       "wtWebioEA2x2ERPSyslogSystemMessagesEnable": wtWebioEA2x2ERPSyslogSystemMessagesEnable,
       "wtWebioEA2x2ERPSyslogEnable": wtWebioEA2x2ERPSyslogEnable,
       "wtWebioEA2x2ERPFTP": wtWebioEA2x2ERPFTP,
       "wtWebioEA2x2ERPFTPServerIP": wtWebioEA2x2ERPFTPServerIP,
       "wtWebioEA2x2ERPFTPServerControlPort": wtWebioEA2x2ERPFTPServerControlPort,
       "wtWebioEA2x2ERPFTPUserName": wtWebioEA2x2ERPFTPUserName,
       "wtWebioEA2x2ERPFTPPassword": wtWebioEA2x2ERPFTPPassword,
       "wtWebioEA2x2ERPFTPAccount": wtWebioEA2x2ERPFTPAccount,
       "wtWebioEA2x2ERPFTPOption": wtWebioEA2x2ERPFTPOption,
       "wtWebioEA2x2ERPFTPEnable": wtWebioEA2x2ERPFTPEnable,
       "wtWebioEA2x2ERPWayBack": wtWebioEA2x2ERPWayBack,
       "wtWebioEA2x2ERPWayBackEnable": wtWebioEA2x2ERPWayBackEnable,
       "wtWebioEA2x2ERPWayBackServerControlPort": wtWebioEA2x2ERPWayBackServerControlPort,
       "wtWebioEA2x2ERPWayBackFTPPassword": wtWebioEA2x2ERPWayBackFTPPassword,
       "wtWebioEA2x2ERPWayBackFTPResponse": wtWebioEA2x2ERPWayBackFTPResponse,
       "wtWebioEA2x2ERPWayBackFTPTimeOut": wtWebioEA2x2ERPWayBackFTPTimeOut,
       "wtWebioEA2x2ERPOutputMode": wtWebioEA2x2ERPOutputMode,
       "wtWebioEA2x2ERPOutputModeTable": wtWebioEA2x2ERPOutputModeTable,
       "wtWebioEA2x2ERPOutputModeEntry": wtWebioEA2x2ERPOutputModeEntry,
       "wtWebioEA2x2ERPOutputModeBit": wtWebioEA2x2ERPOutputModeBit,
       "wtWebioEA2x2ERPSafetyTimeout": wtWebioEA2x2ERPSafetyTimeout,
       "wtWebioEA2x2ERPLoadControlEnable": wtWebioEA2x2ERPLoadControlEnable,
       "wtWebioEA2x2ERPAlarm": wtWebioEA2x2ERPAlarm,
       "wtWebioEA2x2ERPAlarmCount": wtWebioEA2x2ERPAlarmCount,
       "wtWebioEA2x2ERPAlarmIfTable": wtWebioEA2x2ERPAlarmIfTable,
       "wtWebioEA2x2ERPAlarmIfEntry": wtWebioEA2x2ERPAlarmIfEntry,
       "wtWebioEA2x2ERPAlarmNo": wtWebioEA2x2ERPAlarmNo,
       "wtWebioEA2x2ERPAlarmTable": wtWebioEA2x2ERPAlarmTable,
       "wtWebioEA2x2ERPAlarmEntry": wtWebioEA2x2ERPAlarmEntry,
       "wtWebioEA2x2ERPAlarmInputTrigger": wtWebioEA2x2ERPAlarmInputTrigger,
       "wtWebioEA2x2ERPAlarmOutputTrigger": wtWebioEA2x2ERPAlarmOutputTrigger,
       "wtWebioEA2x2ERPAlarmSystemTrigger": wtWebioEA2x2ERPAlarmSystemTrigger,
       "wtWebioEA2x2ERPAlarmMaxCounterValue": wtWebioEA2x2ERPAlarmMaxCounterValue,
       "wtWebioEA2x2ERPAlarmInterval": wtWebioEA2x2ERPAlarmInterval,
       "wtWebioEA2x2ERPAlarmEnable": wtWebioEA2x2ERPAlarmEnable,
       "wtWebioEA2x2ERPAlarmMailAddr": wtWebioEA2x2ERPAlarmMailAddr,
       "wtWebioEA2x2ERPAlarmMailSubject": wtWebioEA2x2ERPAlarmMailSubject,
       "wtWebioEA2x2ERPAlarmMailText": wtWebioEA2x2ERPAlarmMailText,
       "wtWebioEA2x2ERPAlarmSnmpManagerIP": wtWebioEA2x2ERPAlarmSnmpManagerIP,
       "wtWebioEA2x2ERPAlarmSnmpTrapText": wtWebioEA2x2ERPAlarmSnmpTrapText,
       "wtWebioEA2x2ERPAlarmUdpIpAddr": wtWebioEA2x2ERPAlarmUdpIpAddr,
       "wtWebioEA2x2ERPAlarmUdpPort": wtWebioEA2x2ERPAlarmUdpPort,
       "wtWebioEA2x2ERPAlarmUdpText": wtWebioEA2x2ERPAlarmUdpText,
       "wtWebioEA2x2ERPAlarmTcpIpAddr": wtWebioEA2x2ERPAlarmTcpIpAddr,
       "wtWebioEA2x2ERPAlarmTcpPort": wtWebioEA2x2ERPAlarmTcpPort,
       "wtWebioEA2x2ERPAlarmTcpText": wtWebioEA2x2ERPAlarmTcpText,
       "wtWebioEA2x2ERPAlarmSyslogIpAddr": wtWebioEA2x2ERPAlarmSyslogIpAddr,
       "wtWebioEA2x2ERPAlarmSyslogPort": wtWebioEA2x2ERPAlarmSyslogPort,
       "wtWebioEA2x2ERPAlarmSyslogText": wtWebioEA2x2ERPAlarmSyslogText,
       "wtWebioEA2x2ERPAlarmFtpDataPort": wtWebioEA2x2ERPAlarmFtpDataPort,
       "wtWebioEA2x2ERPAlarmFtpFileName": wtWebioEA2x2ERPAlarmFtpFileName,
       "wtWebioEA2x2ERPAlarmFtpText": wtWebioEA2x2ERPAlarmFtpText,
       "wtWebioEA2x2ERPAlarmFtpOption": wtWebioEA2x2ERPAlarmFtpOption,
       "wtWebioEA2x2ERPAlarmTimerCron": wtWebioEA2x2ERPAlarmTimerCron,
       "wtWebioEA2x2ERPAlarmMailReleaseSubject": wtWebioEA2x2ERPAlarmMailReleaseSubject,
       "wtWebioEA2x2ERPAlarmMailReleaseText": wtWebioEA2x2ERPAlarmMailReleaseText,
       "wtWebioEA2x2ERPAlarmSnmpTrapReleaseText": wtWebioEA2x2ERPAlarmSnmpTrapReleaseText,
       "wtWebioEA2x2ERPAlarmUdpReleaseText": wtWebioEA2x2ERPAlarmUdpReleaseText,
       "wtWebioEA2x2ERPAlarmTcpReleaseText": wtWebioEA2x2ERPAlarmTcpReleaseText,
       "wtWebioEA2x2ERPAlarmSyslogReleaseText": wtWebioEA2x2ERPAlarmSyslogReleaseText,
       "wtWebioEA2x2ERPAlarmFtpReleaseText": wtWebioEA2x2ERPAlarmFtpReleaseText,
       "wtWebioEA2x2ERPLoadControlView": wtWebioEA2x2ERPLoadControlView,
       "wtWebioEA2x2ERPLCShutDownView": wtWebioEA2x2ERPLCShutDownView,
       "wtWebioEA2x2ERPPorts": wtWebioEA2x2ERPPorts,
       "wtWebioEA2x2ERPInputPortTable": wtWebioEA2x2ERPInputPortTable,
       "wtWebioEA2x2ERPInputPortEntry": wtWebioEA2x2ERPInputPortEntry,
       "wtWebioEA2x2ERPPortInputName": wtWebioEA2x2ERPPortInputName,
       "wtWebioEA2x2ERPPortInputText": wtWebioEA2x2ERPPortInputText,
       "wtWebioEA2x2ERPPortInputMode": wtWebioEA2x2ERPPortInputMode,
       "wtWebioEA2x2ERPPortInputFilter": wtWebioEA2x2ERPPortInputFilter,
       "wtWebioEA2x2ERPPortInputBicountPulsePolarity": wtWebioEA2x2ERPPortInputBicountPulsePolarity,
       "wtWebioEA2x2ERPPortInputBicountInactivTimeout": wtWebioEA2x2ERPPortInputBicountInactivTimeout,
       "wtWebioEA2x2ERPOutputPortTable": wtWebioEA2x2ERPOutputPortTable,
       "wtWebioEA2x2ERPOutputPortEntry": wtWebioEA2x2ERPOutputPortEntry,
       "wtWebioEA2x2ERPPortOutputName": wtWebioEA2x2ERPPortOutputName,
       "wtWebioEA2x2ERPPortOutputText": wtWebioEA2x2ERPPortOutputText,
       "wtWebioEA2x2ERPPortOutputGroupMode": wtWebioEA2x2ERPPortOutputGroupMode,
       "wtWebioEA2x2ERPPortOutputSafetyState": wtWebioEA2x2ERPPortOutputSafetyState,
       "wtWebioEA2x2ERPPortLogicInputMask": wtWebioEA2x2ERPPortLogicInputMask,
       "wtWebioEA2x2ERPPortLogicInputInverter": wtWebioEA2x2ERPPortLogicInputInverter,
       "wtWebioEA2x2ERPPortLogicFunction": wtWebioEA2x2ERPPortLogicFunction,
       "wtWebioEA2x2ERPPortLogicOutputInverter": wtWebioEA2x2ERPPortLogicOutputInverter,
       "wtWebioEA2x2ERPPortPulseDuration": wtWebioEA2x2ERPPortPulseDuration,
       "wtWebioEA2x2ERPPortPulsePolarity": wtWebioEA2x2ERPPortPulsePolarity,
       "wtWebioEA2x2ERPManufact": wtWebioEA2x2ERPManufact,
       "wtWebioEA2x2ERPMfName": wtWebioEA2x2ERPMfName,
       "wtWebioEA2x2ERPMfAddr": wtWebioEA2x2ERPMfAddr,
       "wtWebioEA2x2ERPMfHotline": wtWebioEA2x2ERPMfHotline,
       "wtWebioEA2x2ERPMfInternet": wtWebioEA2x2ERPMfInternet,
       "wtWebioEA2x2ERPMfDeviceTyp": wtWebioEA2x2ERPMfDeviceTyp,
       "wtWebioEA2x2ERPDiag": wtWebioEA2x2ERPDiag,
       "wtWebioEA2x2ERPDiagErrorCount": wtWebioEA2x2ERPDiagErrorCount,
       "wtWebioEA2x2ERPDiagBinaryError": wtWebioEA2x2ERPDiagBinaryError,
       "wtWebioEA2x2ERPDiagErrorIndex": wtWebioEA2x2ERPDiagErrorIndex,
       "wtWebioEA2x2ERPDiagErrorMessage": wtWebioEA2x2ERPDiagErrorMessage,
       "wtWebioEA2x2ERPDiagErrorClear": wtWebioEA2x2ERPDiagErrorClear,
       "wtWebioEA12x6RelERP": wtWebioEA12x6RelERP,
       "wtWebioEA12x6RelERPAlert1": wtWebioEA12x6RelERPAlert1,
       "wtWebioEA12x6RelERPAlert2": wtWebioEA12x6RelERPAlert2,
       "wtWebioEA12x6RelERPAlert3": wtWebioEA12x6RelERPAlert3,
       "wtWebioEA12x6RelERPAlert4": wtWebioEA12x6RelERPAlert4,
       "wtWebioEA12x6RelERPAlert5": wtWebioEA12x6RelERPAlert5,
       "wtWebioEA12x6RelERPAlert6": wtWebioEA12x6RelERPAlert6,
       "wtWebioEA12x6RelERPAlert7": wtWebioEA12x6RelERPAlert7,
       "wtWebioEA12x6RelERPAlert8": wtWebioEA12x6RelERPAlert8,
       "wtWebioEA12x6RelERPAlert9": wtWebioEA12x6RelERPAlert9,
       "wtWebioEA12x6RelERPAlert10": wtWebioEA12x6RelERPAlert10,
       "wtWebioEA12x6RelERPAlert11": wtWebioEA12x6RelERPAlert11,
       "wtWebioEA12x6RelERPAlert12": wtWebioEA12x6RelERPAlert12,
       "wtWebioEA12x6RelERPAlert13": wtWebioEA12x6RelERPAlert13,
       "wtWebioEA12x6RelERPAlert14": wtWebioEA12x6RelERPAlert14,
       "wtWebioEA12x6RelERPAlert15": wtWebioEA12x6RelERPAlert15,
       "wtWebioEA12x6RelERPAlert16": wtWebioEA12x6RelERPAlert16,
       "wtWebioEA12x6RelERPAlert17": wtWebioEA12x6RelERPAlert17,
       "wtWebioEA12x6RelERPAlert18": wtWebioEA12x6RelERPAlert18,
       "wtWebioEA12x6RelERPAlert19": wtWebioEA12x6RelERPAlert19,
       "wtWebioEA12x6RelERPAlert20": wtWebioEA12x6RelERPAlert20,
       "wtWebioEA12x6RelERPAlert21": wtWebioEA12x6RelERPAlert21,
       "wtWebioEA12x6RelERPAlert22": wtWebioEA12x6RelERPAlert22,
       "wtWebioEA12x6RelERPAlert23": wtWebioEA12x6RelERPAlert23,
       "wtWebioEA12x6RelERPAlert24": wtWebioEA12x6RelERPAlert24,
       "wtWebioEA12x6RelERPAlertDiag": wtWebioEA12x6RelERPAlertDiag,
       "wtWebioEA12x6RelERPInOut": wtWebioEA12x6RelERPInOut,
       "wtWebioEA12x6RelERPInputs": wtWebioEA12x6RelERPInputs,
       "wtWebioEA12x6RelERPOutputs": wtWebioEA12x6RelERPOutputs,
       "wtWebioEA12x6RelERPInputTable": wtWebioEA12x6RelERPInputTable,
       "wtWebioEA12x6RelERPInputEntry": wtWebioEA12x6RelERPInputEntry,
       "wtWebioEA12x6RelERPInputNo": wtWebioEA12x6RelERPInputNo,
       "wtWebioEA12x6RelERPInputCounter": wtWebioEA12x6RelERPInputCounter,
       "wtWebioEA12x6RelERPInputCounterClear": wtWebioEA12x6RelERPInputCounterClear,
       "wtWebioEA12x6RelERPInputValue": wtWebioEA12x6RelERPInputValue,
       "wtWebioEA12x6RelERPOutputTable": wtWebioEA12x6RelERPOutputTable,
       "wtWebioEA12x6RelERPOutputEntry": wtWebioEA12x6RelERPOutputEntry,
       "wtWebioEA12x6RelERPOutputNo": wtWebioEA12x6RelERPOutputNo,
       "wtWebioEA12x6RelERPOutputState": wtWebioEA12x6RelERPOutputState,
       "wtWebioEA12x6RelERPOutputValue": wtWebioEA12x6RelERPOutputValue,
       "wtWebioEA12x6RelERPSetOutput": wtWebioEA12x6RelERPSetOutput,
       "wtWebioEA12x6RelERPSessCntrl": wtWebioEA12x6RelERPSessCntrl,
       "wtWebioEA12x6RelERPSessCntrlPassword": wtWebioEA12x6RelERPSessCntrlPassword,
       "wtWebioEA12x6RelERPSessCntrlConfigMode": wtWebioEA12x6RelERPSessCntrlConfigMode,
       "wtWebioEA12x6RelERPSessCntrlLogout": wtWebioEA12x6RelERPSessCntrlLogout,
       "wtWebioEA12x6RelERPSessCntrlAdminPassword": wtWebioEA12x6RelERPSessCntrlAdminPassword,
       "wtWebioEA12x6RelERPSessCntrlConfigPassword": wtWebioEA12x6RelERPSessCntrlConfigPassword,
       "wtWebioEA12x6RelERPConfig": wtWebioEA12x6RelERPConfig,
       "wtWebioEA12x6RelERPDevice": wtWebioEA12x6RelERPDevice,
       "wtWebioEA12x6RelERPText": wtWebioEA12x6RelERPText,
       "wtWebioEA12x6RelERPDeviceName": wtWebioEA12x6RelERPDeviceName,
       "wtWebioEA12x6RelERPDeviceText": wtWebioEA12x6RelERPDeviceText,
       "wtWebioEA12x6RelERPDeviceLocation": wtWebioEA12x6RelERPDeviceLocation,
       "wtWebioEA12x6RelERPDeviceContact": wtWebioEA12x6RelERPDeviceContact,
       "wtWebioEA12x6RelERPTimeDate": wtWebioEA12x6RelERPTimeDate,
       "wtWebioEA12x6RelERPTimeZone": wtWebioEA12x6RelERPTimeZone,
       "wtWebioEA12x6RelERPTzOffsetHrs": wtWebioEA12x6RelERPTzOffsetHrs,
       "wtWebioEA12x6RelERPTzOffsetMin": wtWebioEA12x6RelERPTzOffsetMin,
       "wtWebioEA12x6RelERPTzEnable": wtWebioEA12x6RelERPTzEnable,
       "wtWebioEA12x6RelERPStTzOffsetHrs": wtWebioEA12x6RelERPStTzOffsetHrs,
       "wtWebioEA12x6RelERPStTzOffsetMin": wtWebioEA12x6RelERPStTzOffsetMin,
       "wtWebioEA12x6RelERPStTzEnable": wtWebioEA12x6RelERPStTzEnable,
       "wtWebioEA12x6RelERPStTzStartMonth": wtWebioEA12x6RelERPStTzStartMonth,
       "wtWebioEA12x6RelERPStTzStartMode": wtWebioEA12x6RelERPStTzStartMode,
       "wtWebioEA12x6RelERPStTzStartWday": wtWebioEA12x6RelERPStTzStartWday,
       "wtWebioEA12x6RelERPStTzStartHrs": wtWebioEA12x6RelERPStTzStartHrs,
       "wtWebioEA12x6RelERPStTzStartMin": wtWebioEA12x6RelERPStTzStartMin,
       "wtWebioEA12x6RelERPStTzStopMonth": wtWebioEA12x6RelERPStTzStopMonth,
       "wtWebioEA12x6RelERPStTzStopMode": wtWebioEA12x6RelERPStTzStopMode,
       "wtWebioEA12x6RelERPStTzStopWday": wtWebioEA12x6RelERPStTzStopWday,
       "wtWebioEA12x6RelERPStTzStopHrs": wtWebioEA12x6RelERPStTzStopHrs,
       "wtWebioEA12x6RelERPStTzStopMin": wtWebioEA12x6RelERPStTzStopMin,
       "wtWebioEA12x6RelERPTimeServer": wtWebioEA12x6RelERPTimeServer,
       "wtWebioEA12x6RelERPTimeServer1": wtWebioEA12x6RelERPTimeServer1,
       "wtWebioEA12x6RelERPTimeServer2": wtWebioEA12x6RelERPTimeServer2,
       "wtWebioEA12x6RelERPTsEnable": wtWebioEA12x6RelERPTsEnable,
       "wtWebioEA12x6RelERPTsSyncTime": wtWebioEA12x6RelERPTsSyncTime,
       "wtWebioEA12x6RelERPDeviceClock": wtWebioEA12x6RelERPDeviceClock,
       "wtWebioEA12x6RelERPClockHrs": wtWebioEA12x6RelERPClockHrs,
       "wtWebioEA12x6RelERPClockMin": wtWebioEA12x6RelERPClockMin,
       "wtWebioEA12x6RelERPClockDay": wtWebioEA12x6RelERPClockDay,
       "wtWebioEA12x6RelERPClockMonth": wtWebioEA12x6RelERPClockMonth,
       "wtWebioEA12x6RelERPClockYear": wtWebioEA12x6RelERPClockYear,
       "wtWebioEA12x6RelERPBasic": wtWebioEA12x6RelERPBasic,
       "wtWebioEA12x6RelERPNetwork": wtWebioEA12x6RelERPNetwork,
       "wtWebioEA12x6RelERPIpAddress": wtWebioEA12x6RelERPIpAddress,
       "wtWebioEA12x6RelERPSubnetMask": wtWebioEA12x6RelERPSubnetMask,
       "wtWebioEA12x6RelERPGateway": wtWebioEA12x6RelERPGateway,
       "wtWebioEA12x6RelERPDnsServer1": wtWebioEA12x6RelERPDnsServer1,
       "wtWebioEA12x6RelERPDnsServer2": wtWebioEA12x6RelERPDnsServer2,
       "wtWebioEA12x6RelERPAddConfig": wtWebioEA12x6RelERPAddConfig,
       "wtWebioEA12x6RelERPHTTP": wtWebioEA12x6RelERPHTTP,
       "wtWebioEA12x6RelERPStartup": wtWebioEA12x6RelERPStartup,
       "wtWebioEA12x6RelERPGetHeaderEnable": wtWebioEA12x6RelERPGetHeaderEnable,
       "wtWebioEA12x6RelERPHttpInputTrigger": wtWebioEA12x6RelERPHttpInputTrigger,
       "wtWebioEA12x6RelERPHttpPort": wtWebioEA12x6RelERPHttpPort,
       "wtWebioEA12x6RelERPMail": wtWebioEA12x6RelERPMail,
       "wtWebioEA12x6RelERPMailAdName": wtWebioEA12x6RelERPMailAdName,
       "wtWebioEA12x6RelERPMailReply": wtWebioEA12x6RelERPMailReply,
       "wtWebioEA12x6RelERPMailServer": wtWebioEA12x6RelERPMailServer,
       "wtWebioEA12x6RelERPMailEnable": wtWebioEA12x6RelERPMailEnable,
       "wtWebioEA12x6RelERPMailAuthentication": wtWebioEA12x6RelERPMailAuthentication,
       "wtWebioEA12x6RelERPMailAuthUser": wtWebioEA12x6RelERPMailAuthUser,
       "wtWebioEA12x6RelERPMailAuthPassword": wtWebioEA12x6RelERPMailAuthPassword,
       "wtWebioEA12x6RelERPMailPop3Server": wtWebioEA12x6RelERPMailPop3Server,
       "wtWebioEA12x6RelERPSNMP": wtWebioEA12x6RelERPSNMP,
       "wtWebioEA12x6RelERPSnmpEnable": wtWebioEA12x6RelERPSnmpEnable,
       "wtWebioEA12x6RelERPSnmpCommunityStringRead": wtWebioEA12x6RelERPSnmpCommunityStringRead,
       "wtWebioEA12x6RelERPSnmpCommunityStringReadWrite": wtWebioEA12x6RelERPSnmpCommunityStringReadWrite,
       "wtWebioEA12x6RelERPSnmpSystemTrapManagerIP": wtWebioEA12x6RelERPSnmpSystemTrapManagerIP,
       "wtWebioEA12x6RelERPSnmpSystemTrapEnable": wtWebioEA12x6RelERPSnmpSystemTrapEnable,
       "wtWebioEA12x6RelERPUDP": wtWebioEA12x6RelERPUDP,
       "wtWebioEA12x6RelERPUdpAdminPort": wtWebioEA12x6RelERPUdpAdminPort,
       "wtWebioEA12x6RelERPUdpEnable": wtWebioEA12x6RelERPUdpEnable,
       "wtWebioEA12x6RelERPUdpRemotePort": wtWebioEA12x6RelERPUdpRemotePort,
       "wtWebioEA12x6RelERPBinary": wtWebioEA12x6RelERPBinary,
       "wtWebioEA12x6RelERPBinaryModeCount": wtWebioEA12x6RelERPBinaryModeCount,
       "wtWebioEA12x6RelERPBinaryIfTable": wtWebioEA12x6RelERPBinaryIfTable,
       "wtWebioEA12x6RelERPBinaryIfEntry": wtWebioEA12x6RelERPBinaryIfEntry,
       "wtWebioEA12x6RelERPBinaryModeNo": wtWebioEA12x6RelERPBinaryModeNo,
       "wtWebioEA12x6RelERPBinaryTable": wtWebioEA12x6RelERPBinaryTable,
       "wtWebioEA12x6RelERPBinaryEntry": wtWebioEA12x6RelERPBinaryEntry,
       "wtWebioEA12x6RelERPBinaryOperationMode": wtWebioEA12x6RelERPBinaryOperationMode,
       "wtWebioEA12x6RelERPBinaryTcpServerLocalPort": wtWebioEA12x6RelERPBinaryTcpServerLocalPort,
       "wtWebioEA12x6RelERPBinaryTcpServerInputTrigger": wtWebioEA12x6RelERPBinaryTcpServerInputTrigger,
       "wtWebioEA12x6RelERPBinaryTcpServerApplicationMode": wtWebioEA12x6RelERPBinaryTcpServerApplicationMode,
       "wtWebioEA12x6RelERPBinaryTcpClientLocalPort": wtWebioEA12x6RelERPBinaryTcpClientLocalPort,
       "wtWebioEA12x6RelERPBinaryTcpClientServerPort": wtWebioEA12x6RelERPBinaryTcpClientServerPort,
       "wtWebioEA12x6RelERPBinaryTcpClientServerIpAddr": wtWebioEA12x6RelERPBinaryTcpClientServerIpAddr,
       "wtWebioEA12x6RelERPBinaryTcpClientServerPassword": wtWebioEA12x6RelERPBinaryTcpClientServerPassword,
       "wtWebioEA12x6RelERPBinaryTcpClientInactivity": wtWebioEA12x6RelERPBinaryTcpClientInactivity,
       "wtWebioEA12x6RelERPBinaryTcpClientInputTrigger": wtWebioEA12x6RelERPBinaryTcpClientInputTrigger,
       "wtWebioEA12x6RelERPBinaryTcpClientInterval": wtWebioEA12x6RelERPBinaryTcpClientInterval,
       "wtWebioEA12x6RelERPBinaryTcpClientApplicationMode": wtWebioEA12x6RelERPBinaryTcpClientApplicationMode,
       "wtWebioEA12x6RelERPBinaryUdpPeerLocalPort": wtWebioEA12x6RelERPBinaryUdpPeerLocalPort,
       "wtWebioEA12x6RelERPBinaryUdpPeerRemotePort": wtWebioEA12x6RelERPBinaryUdpPeerRemotePort,
       "wtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr": wtWebioEA12x6RelERPBinaryUdpPeerRemoteIpAddr,
       "wtWebioEA12x6RelERPBinaryUdpPeerInputTrigger": wtWebioEA12x6RelERPBinaryUdpPeerInputTrigger,
       "wtWebioEA12x6RelERPBinaryUdpPeerInterval": wtWebioEA12x6RelERPBinaryUdpPeerInterval,
       "wtWebioEA12x6RelERPBinaryUdpPeerApplicationMode": wtWebioEA12x6RelERPBinaryUdpPeerApplicationMode,
       "wtWebioEA12x6RelERPBinaryConnectedPort": wtWebioEA12x6RelERPBinaryConnectedPort,
       "wtWebioEA12x6RelERPBinaryConnectedIpAddr": wtWebioEA12x6RelERPBinaryConnectedIpAddr,
       "wtWebioEA12x6RelERPBinaryTcpServerClientHttpPort": wtWebioEA12x6RelERPBinaryTcpServerClientHttpPort,
       "wtWebioEA12x6RelERPBinaryTcpClientServerHttpPort": wtWebioEA12x6RelERPBinaryTcpClientServerHttpPort,
       "wtWebioEA12x6RelERPSyslog": wtWebioEA12x6RelERPSyslog,
       "wtWebioEA12x6RelERPSyslogServerIP": wtWebioEA12x6RelERPSyslogServerIP,
       "wtWebioEA12x6RelERPSyslogServerPort": wtWebioEA12x6RelERPSyslogServerPort,
       "wtWebioEA12x6RelERPSyslogSystemMessagesEnable": wtWebioEA12x6RelERPSyslogSystemMessagesEnable,
       "wtWebioEA12x6RelERPSyslogEnable": wtWebioEA12x6RelERPSyslogEnable,
       "wtWebioEA12x6RelERPFTP": wtWebioEA12x6RelERPFTP,
       "wtWebioEA12x6RelERPFTPServerIP": wtWebioEA12x6RelERPFTPServerIP,
       "wtWebioEA12x6RelERPFTPServerControlPort": wtWebioEA12x6RelERPFTPServerControlPort,
       "wtWebioEA12x6RelERPFTPUserName": wtWebioEA12x6RelERPFTPUserName,
       "wtWebioEA12x6RelERPFTPPassword": wtWebioEA12x6RelERPFTPPassword,
       "wtWebioEA12x6RelERPFTPAccount": wtWebioEA12x6RelERPFTPAccount,
       "wtWebioEA12x6RelERPFTPOption": wtWebioEA12x6RelERPFTPOption,
       "wtWebioEA12x6RelERPFTPEnable": wtWebioEA12x6RelERPFTPEnable,
       "wtWebioEA12x6RelERPWayBack": wtWebioEA12x6RelERPWayBack,
       "wtWebioEA12x6RelERPWayBackEnable": wtWebioEA12x6RelERPWayBackEnable,
       "wtWebioEA12x6RelERPWayBackServerControlPort": wtWebioEA12x6RelERPWayBackServerControlPort,
       "wtWebioEA12x6RelERPWayBackFTPPassword": wtWebioEA12x6RelERPWayBackFTPPassword,
       "wtWebioEA12x6RelERPWayBackFTPResponse": wtWebioEA12x6RelERPWayBackFTPResponse,
       "wtWebioEA12x6RelERPWayBackFTPTimeOut": wtWebioEA12x6RelERPWayBackFTPTimeOut,
       "wtWebioEA12x6RelERPOutputMode": wtWebioEA12x6RelERPOutputMode,
       "wtWebioEA12x6RelERPOutputModeTable": wtWebioEA12x6RelERPOutputModeTable,
       "wtWebioEA12x6RelERPOutputModeEntry": wtWebioEA12x6RelERPOutputModeEntry,
       "wtWebioEA12x6RelERPOutputModeBit": wtWebioEA12x6RelERPOutputModeBit,
       "wtWebioEA12x6RelERPSafetyTimeout": wtWebioEA12x6RelERPSafetyTimeout,
       "wtWebioEA12x6RelERPAlarm": wtWebioEA12x6RelERPAlarm,
       "wtWebioEA12x6RelERPAlarmCount": wtWebioEA12x6RelERPAlarmCount,
       "wtWebioEA12x6RelERPAlarmIfTable": wtWebioEA12x6RelERPAlarmIfTable,
       "wtWebioEA12x6RelERPAlarmIfEntry": wtWebioEA12x6RelERPAlarmIfEntry,
       "wtWebioEA12x6RelERPAlarmNo": wtWebioEA12x6RelERPAlarmNo,
       "wtWebioEA12x6RelERPAlarmTable": wtWebioEA12x6RelERPAlarmTable,
       "wtWebioEA12x6RelERPAlarmEntry": wtWebioEA12x6RelERPAlarmEntry,
       "wtWebioEA12x6RelERPAlarmInputTrigger": wtWebioEA12x6RelERPAlarmInputTrigger,
       "wtWebioEA12x6RelERPAlarmOutputTrigger": wtWebioEA12x6RelERPAlarmOutputTrigger,
       "wtWebioEA12x6RelERPAlarmSystemTrigger": wtWebioEA12x6RelERPAlarmSystemTrigger,
       "wtWebioEA12x6RelERPAlarmMaxCounterValue": wtWebioEA12x6RelERPAlarmMaxCounterValue,
       "wtWebioEA12x6RelERPAlarmInterval": wtWebioEA12x6RelERPAlarmInterval,
       "wtWebioEA12x6RelERPAlarmEnable": wtWebioEA12x6RelERPAlarmEnable,
       "wtWebioEA12x6RelERPAlarmMailAddr": wtWebioEA12x6RelERPAlarmMailAddr,
       "wtWebioEA12x6RelERPAlarmMailSubject": wtWebioEA12x6RelERPAlarmMailSubject,
       "wtWebioEA12x6RelERPAlarmMailText": wtWebioEA12x6RelERPAlarmMailText,
       "wtWebioEA12x6RelERPAlarmSnmpManagerIP": wtWebioEA12x6RelERPAlarmSnmpManagerIP,
       "wtWebioEA12x6RelERPAlarmSnmpTrapText": wtWebioEA12x6RelERPAlarmSnmpTrapText,
       "wtWebioEA12x6RelERPAlarmUdpIpAddr": wtWebioEA12x6RelERPAlarmUdpIpAddr,
       "wtWebioEA12x6RelERPAlarmUdpPort": wtWebioEA12x6RelERPAlarmUdpPort,
       "wtWebioEA12x6RelERPAlarmUdpText": wtWebioEA12x6RelERPAlarmUdpText,
       "wtWebioEA12x6RelERPAlarmTcpIpAddr": wtWebioEA12x6RelERPAlarmTcpIpAddr,
       "wtWebioEA12x6RelERPAlarmTcpPort": wtWebioEA12x6RelERPAlarmTcpPort,
       "wtWebioEA12x6RelERPAlarmTcpText": wtWebioEA12x6RelERPAlarmTcpText,
       "wtWebioEA12x6RelERPAlarmSyslogIpAddr": wtWebioEA12x6RelERPAlarmSyslogIpAddr,
       "wtWebioEA12x6RelERPAlarmSyslogPort": wtWebioEA12x6RelERPAlarmSyslogPort,
       "wtWebioEA12x6RelERPAlarmSyslogText": wtWebioEA12x6RelERPAlarmSyslogText,
       "wtWebioEA12x6RelERPAlarmFtpDataPort": wtWebioEA12x6RelERPAlarmFtpDataPort,
       "wtWebioEA12x6RelERPAlarmFtpFileName": wtWebioEA12x6RelERPAlarmFtpFileName,
       "wtWebioEA12x6RelERPAlarmFtpText": wtWebioEA12x6RelERPAlarmFtpText,
       "wtWebioEA12x6RelERPAlarmFtpOption": wtWebioEA12x6RelERPAlarmFtpOption,
       "wtWebioEA12x6RelERPAlarmTimerCron": wtWebioEA12x6RelERPAlarmTimerCron,
       "wtWebioEA12x6RelERPAlarmMailReleaseSubject": wtWebioEA12x6RelERPAlarmMailReleaseSubject,
       "wtWebioEA12x6RelERPAlarmMailReleaseText": wtWebioEA12x6RelERPAlarmMailReleaseText,
       "wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText": wtWebioEA12x6RelERPAlarmSnmpTrapReleaseText,
       "wtWebioEA12x6RelERPAlarmUdpReleaseText": wtWebioEA12x6RelERPAlarmUdpReleaseText,
       "wtWebioEA12x6RelERPAlarmTcpReleaseText": wtWebioEA12x6RelERPAlarmTcpReleaseText,
       "wtWebioEA12x6RelERPAlarmSyslogReleaseText": wtWebioEA12x6RelERPAlarmSyslogReleaseText,
       "wtWebioEA12x6RelERPAlarmFtpReleaseText": wtWebioEA12x6RelERPAlarmFtpReleaseText,
       "wtWebioEA12x6RelERPPorts": wtWebioEA12x6RelERPPorts,
       "wtWebioEA12x6RelERPInputPortTable": wtWebioEA12x6RelERPInputPortTable,
       "wtWebioEA12x6RelERPInputPortEntry": wtWebioEA12x6RelERPInputPortEntry,
       "wtWebioEA12x6RelERPPortInputName": wtWebioEA12x6RelERPPortInputName,
       "wtWebioEA12x6RelERPPortInputText": wtWebioEA12x6RelERPPortInputText,
       "wtWebioEA12x6RelERPPortInputMode": wtWebioEA12x6RelERPPortInputMode,
       "wtWebioEA12x6RelERPPortInputFilter": wtWebioEA12x6RelERPPortInputFilter,
       "wtWebioEA12x6RelERPPortInputBicountPulsePolarity": wtWebioEA12x6RelERPPortInputBicountPulsePolarity,
       "wtWebioEA12x6RelERPPortInputBicountInactivTimeout": wtWebioEA12x6RelERPPortInputBicountInactivTimeout,
       "wtWebioEA12x6RelERPOutputPortTable": wtWebioEA12x6RelERPOutputPortTable,
       "wtWebioEA12x6RelERPOutputPortEntry": wtWebioEA12x6RelERPOutputPortEntry,
       "wtWebioEA12x6RelERPPortOutputName": wtWebioEA12x6RelERPPortOutputName,
       "wtWebioEA12x6RelERPPortOutputText": wtWebioEA12x6RelERPPortOutputText,
       "wtWebioEA12x6RelERPPortOutputGroupMode": wtWebioEA12x6RelERPPortOutputGroupMode,
       "wtWebioEA12x6RelERPPortOutputSafetyState": wtWebioEA12x6RelERPPortOutputSafetyState,
       "wtWebioEA12x6RelERPPortLogicInputMask": wtWebioEA12x6RelERPPortLogicInputMask,
       "wtWebioEA12x6RelERPPortLogicInputInverter": wtWebioEA12x6RelERPPortLogicInputInverter,
       "wtWebioEA12x6RelERPPortLogicFunction": wtWebioEA12x6RelERPPortLogicFunction,
       "wtWebioEA12x6RelERPPortLogicOutputInverter": wtWebioEA12x6RelERPPortLogicOutputInverter,
       "wtWebioEA12x6RelERPPortPulseDuration": wtWebioEA12x6RelERPPortPulseDuration,
       "wtWebioEA12x6RelERPPortPulsePolarity": wtWebioEA12x6RelERPPortPulsePolarity,
       "wtWebioEA12x6RelERPManufact": wtWebioEA12x6RelERPManufact,
       "wtWebioEA12x6RelERPMfName": wtWebioEA12x6RelERPMfName,
       "wtWebioEA12x6RelERPMfAddr": wtWebioEA12x6RelERPMfAddr,
       "wtWebioEA12x6RelERPMfHotline": wtWebioEA12x6RelERPMfHotline,
       "wtWebioEA12x6RelERPMfInternet": wtWebioEA12x6RelERPMfInternet,
       "wtWebioEA12x6RelERPMfDeviceTyp": wtWebioEA12x6RelERPMfDeviceTyp,
       "wtWebioEA12x6RelERPMfOrderNo": wtWebioEA12x6RelERPMfOrderNo,
       "wtWebioEA12x6RelERPDiag": wtWebioEA12x6RelERPDiag,
       "wtWebioEA12x6RelERPDiagErrorCount": wtWebioEA12x6RelERPDiagErrorCount,
       "wtWebioEA12x6RelERPDiagBinaryError": wtWebioEA12x6RelERPDiagBinaryError,
       "wtWebioEA12x6RelERPDiagErrorIndex": wtWebioEA12x6RelERPDiagErrorIndex,
       "wtWebioEA12x6RelERPDiagErrorMessage": wtWebioEA12x6RelERPDiagErrorMessage,
       "wtWebioEA12x6RelERPDiagErrorClear": wtWebioEA12x6RelERPDiagErrorClear,
       "wtIpWatcher": wtIpWatcher,
       "wtIpWatcherAlert1": wtIpWatcherAlert1,
       "wtIpWatcherAlert2": wtIpWatcherAlert2,
       "wtIpWatcherAlert3": wtIpWatcherAlert3,
       "wtIpWatcherAlert4": wtIpWatcherAlert4,
       "wtIpWatcherAlert5": wtIpWatcherAlert5,
       "wtIpWatcherAlert6": wtIpWatcherAlert6,
       "wtIpWatcherAlert7": wtIpWatcherAlert7,
       "wtIpWatcherAlert8": wtIpWatcherAlert8,
       "wtIpWatcherAlert9": wtIpWatcherAlert9,
       "wtIpWatcherAlert10": wtIpWatcherAlert10,
       "wtIpWatcherAlert11": wtIpWatcherAlert11,
       "wtIpWatcherAlert12": wtIpWatcherAlert12,
       "wtIpWatcherAlert13": wtIpWatcherAlert13,
       "wtIpWatcherAlert14": wtIpWatcherAlert14,
       "wtIpWatcherAlert15": wtIpWatcherAlert15,
       "wtIpWatcherAlert16": wtIpWatcherAlert16,
       "wtIpWatcherAlert17": wtIpWatcherAlert17,
       "wtIpWatcherAlert18": wtIpWatcherAlert18,
       "wtIpWatcherAlert19": wtIpWatcherAlert19,
       "wtIpWatcherAlert20": wtIpWatcherAlert20,
       "wtIpWatcherAlert21": wtIpWatcherAlert21,
       "wtIpWatcherAlert22": wtIpWatcherAlert22,
       "wtIpWatcherAlert23": wtIpWatcherAlert23,
       "wtIpWatcherAlert24": wtIpWatcherAlert24,
       "wtIpWatcherAlert25": wtIpWatcherAlert25,
       "wtIpWatcherAlert26": wtIpWatcherAlert26,
       "wtIpWatcherAlert27": wtIpWatcherAlert27,
       "wtIpWatcherAlert28": wtIpWatcherAlert28,
       "wtIpWatcherAlert29": wtIpWatcherAlert29,
       "wtIpWatcherAlert30": wtIpWatcherAlert30,
       "wtIpWatcherAlert31": wtIpWatcherAlert31,
       "wtIpWatcherAlert32": wtIpWatcherAlert32,
       "wtIpWatcherAlert33": wtIpWatcherAlert33,
       "wtIpWatcherAlert34": wtIpWatcherAlert34,
       "wtIpWatcherAlert35": wtIpWatcherAlert35,
       "wtIpWatcherAlert36": wtIpWatcherAlert36,
       "wtIpWatcherAlertDiag": wtIpWatcherAlertDiag,
       "wtIpWatcherInOut": wtIpWatcherInOut,
       "wtIpWatcherInputs": wtIpWatcherInputs,
       "wtIpWatcherOutputs": wtIpWatcherOutputs,
       "wtIpWatcherInputTable": wtIpWatcherInputTable,
       "wtIpWatcherInputEntry": wtIpWatcherInputEntry,
       "wtIpWatcherInputNo": wtIpWatcherInputNo,
       "wtIpWatcherInputCounter": wtIpWatcherInputCounter,
       "wtIpWatcherInputCounterClear": wtIpWatcherInputCounterClear,
       "wtIpWatcherInputState": wtIpWatcherInputState,
       "wtIpWatcherInputValue": wtIpWatcherInputValue,
       "wtIpWatcherOutputTable": wtIpWatcherOutputTable,
       "wtIpWatcherOutputEntry": wtIpWatcherOutputEntry,
       "wtIpWatcherOutputNo": wtIpWatcherOutputNo,
       "wtIpWatcherOutputState": wtIpWatcherOutputState,
       "wtIpWatcherOutputValue": wtIpWatcherOutputValue,
       "wtIpWatcherSetOutput": wtIpWatcherSetOutput,
       "wtIpWatcherAlarmOutputTable": wtIpWatcherAlarmOutputTable,
       "wtIpWatcherAlarmOutputEntry": wtIpWatcherAlarmOutputEntry,
       "wtIpWatcherAlarmOutputState": wtIpWatcherAlarmOutputState,
       "wtIpWatcherAlarmTriggerState": wtIpWatcherAlarmTriggerState,
       "wtIpWatcherSessCntrl": wtIpWatcherSessCntrl,
       "wtIpWatcherSessCntrlPassword": wtIpWatcherSessCntrlPassword,
       "wtIpWatcherSessCntrlConfigMode": wtIpWatcherSessCntrlConfigMode,
       "wtIpWatcherSessCntrlLogout": wtIpWatcherSessCntrlLogout,
       "wtIpWatcherSessCntrlAdminPassword": wtIpWatcherSessCntrlAdminPassword,
       "wtIpWatcherSessCntrlConfigPassword": wtIpWatcherSessCntrlConfigPassword,
       "wtIpWatcherConfig": wtIpWatcherConfig,
       "wtIpWatcherDevice": wtIpWatcherDevice,
       "wtIpWatcherText": wtIpWatcherText,
       "wtIpWatcherDeviceName": wtIpWatcherDeviceName,
       "wtIpWatcherDeviceText": wtIpWatcherDeviceText,
       "wtIpWatcherDeviceLocation": wtIpWatcherDeviceLocation,
       "wtIpWatcherDeviceContact": wtIpWatcherDeviceContact,
       "wtIpWatcherTimeDate": wtIpWatcherTimeDate,
       "wtIpWatcherTimeZone": wtIpWatcherTimeZone,
       "wtIpWatcherTzOffsetHrs": wtIpWatcherTzOffsetHrs,
       "wtIpWatcherTzOffsetMin": wtIpWatcherTzOffsetMin,
       "wtIpWatcherTzEnable": wtIpWatcherTzEnable,
       "wtIpWatcherStTzOffsetHrs": wtIpWatcherStTzOffsetHrs,
       "wtIpWatcherStTzOffsetMin": wtIpWatcherStTzOffsetMin,
       "wtIpWatcherStTzEnable": wtIpWatcherStTzEnable,
       "wtIpWatcherStTzStartMonth": wtIpWatcherStTzStartMonth,
       "wtIpWatcherStTzStartMode": wtIpWatcherStTzStartMode,
       "wtIpWatcherStTzStartWday": wtIpWatcherStTzStartWday,
       "wtIpWatcherStTzStartHrs": wtIpWatcherStTzStartHrs,
       "wtIpWatcherStTzStartMin": wtIpWatcherStTzStartMin,
       "wtIpWatcherStTzStopMonth": wtIpWatcherStTzStopMonth,
       "wtIpWatcherStTzStopMode": wtIpWatcherStTzStopMode,
       "wtIpWatcherStTzStopWday": wtIpWatcherStTzStopWday,
       "wtIpWatcherStTzStopHrs": wtIpWatcherStTzStopHrs,
       "wtIpWatcherStTzStopMin": wtIpWatcherStTzStopMin,
       "wtIpWatcherTimeServer": wtIpWatcherTimeServer,
       "wtIpWatcherTimeServer1": wtIpWatcherTimeServer1,
       "wtIpWatcherTimeServer2": wtIpWatcherTimeServer2,
       "wtIpWatcherTsEnable": wtIpWatcherTsEnable,
       "wtIpWatcherTsSyncTime": wtIpWatcherTsSyncTime,
       "wtIpWatcherDeviceClock": wtIpWatcherDeviceClock,
       "wtIpWatcherClockHrs": wtIpWatcherClockHrs,
       "wtIpWatcherClockMin": wtIpWatcherClockMin,
       "wtIpWatcherClockDay": wtIpWatcherClockDay,
       "wtIpWatcherClockMonth": wtIpWatcherClockMonth,
       "wtIpWatcherClockYear": wtIpWatcherClockYear,
       "wtIpWatcherBasic": wtIpWatcherBasic,
       "wtIpWatcherNetwork": wtIpWatcherNetwork,
       "wtIpWatcherIpAddress": wtIpWatcherIpAddress,
       "wtIpWatcherSubnetMask": wtIpWatcherSubnetMask,
       "wtIpWatcherGateway": wtIpWatcherGateway,
       "wtIpWatcherDnsServer1": wtIpWatcherDnsServer1,
       "wtIpWatcherDnsServer2": wtIpWatcherDnsServer2,
       "wtIpWatcherAddConfig": wtIpWatcherAddConfig,
       "wtIpWatcherHTTP": wtIpWatcherHTTP,
       "wtIpWatcherHttpPort": wtIpWatcherHttpPort,
       "wtIpWatcherMail": wtIpWatcherMail,
       "wtIpWatcherMailAdName": wtIpWatcherMailAdName,
       "wtIpWatcherMailReply": wtIpWatcherMailReply,
       "wtIpWatcherMailServer": wtIpWatcherMailServer,
       "wtIpWatcherMailEnable": wtIpWatcherMailEnable,
       "wtIpWatcherMailAuthentication": wtIpWatcherMailAuthentication,
       "wtIpWatcherMailAuthUser": wtIpWatcherMailAuthUser,
       "wtIpWatcherMailAuthPassword": wtIpWatcherMailAuthPassword,
       "wtIpWatcherMailPop3Server": wtIpWatcherMailPop3Server,
       "wtIpWatcherSNMP": wtIpWatcherSNMP,
       "wtIpWatcherSnmpEnable": wtIpWatcherSnmpEnable,
       "wtIpWatcherSnmpCommunityStringRead": wtIpWatcherSnmpCommunityStringRead,
       "wtIpWatcherSnmpCommunityStringReadWrite": wtIpWatcherSnmpCommunityStringReadWrite,
       "wtIpWatcherSnmpSystemTrapManagerIP": wtIpWatcherSnmpSystemTrapManagerIP,
       "wtIpWatcherSnmpSystemTrapEnable": wtIpWatcherSnmpSystemTrapEnable,
       "wtIpWatcherUDP": wtIpWatcherUDP,
       "wtIpWatcherUdpAdminPort": wtIpWatcherUdpAdminPort,
       "wtIpWatcherUdpEnable": wtIpWatcherUdpEnable,
       "wtIpWatcherUdpRemotePort": wtIpWatcherUdpRemotePort,
       "wtIpWatcherSyslog": wtIpWatcherSyslog,
       "wtIpWatcherSyslogServerIP": wtIpWatcherSyslogServerIP,
       "wtIpWatcherSyslogServerPort": wtIpWatcherSyslogServerPort,
       "wtIpWatcherSyslogSystemMessagesEnable": wtIpWatcherSyslogSystemMessagesEnable,
       "wtIpWatcherSyslogEnable": wtIpWatcherSyslogEnable,
       "wtIpWatcherFTP": wtIpWatcherFTP,
       "wtIpWatcherFTPServerIP": wtIpWatcherFTPServerIP,
       "wtIpWatcherFTPServerControlPort": wtIpWatcherFTPServerControlPort,
       "wtIpWatcherFTPUserName": wtIpWatcherFTPUserName,
       "wtIpWatcherFTPPassword": wtIpWatcherFTPPassword,
       "wtIpWatcherFTPAccount": wtIpWatcherFTPAccount,
       "wtIpWatcherFTPOption": wtIpWatcherFTPOption,
       "wtIpWatcherFTPEnable": wtIpWatcherFTPEnable,
       "wtIpWatcherIpList": wtIpWatcherIpList,
       "wtIpWatcherIpListCount": wtIpWatcherIpListCount,
       "wtIpWatcherIpListIfTable": wtIpWatcherIpListIfTable,
       "wtIpWatcherIpListIfEntry": wtIpWatcherIpListIfEntry,
       "wtIpWatcherIpListNo": wtIpWatcherIpListNo,
       "wtIpWatcherIpListTable": wtIpWatcherIpListTable,
       "wtIpWatcherIpListEntry": wtIpWatcherIpListEntry,
       "wtIpWatcherIpListName": wtIpWatcherIpListName,
       "wtIpWatcherIpListPort": wtIpWatcherIpListPort,
       "wtIpWatcherIpListService": wtIpWatcherIpListService,
       "wtIpWatcherIpListEnable": wtIpWatcherIpListEnable,
       "wtIpWatcherIpListAlias": wtIpWatcherIpListAlias,
       "wtIpWatcherAlarm": wtIpWatcherAlarm,
       "wtIpWatcherAlarmCount": wtIpWatcherAlarmCount,
       "wtIpWatcherAlarmIfTable": wtIpWatcherAlarmIfTable,
       "wtIpWatcherAlarmIfEntry": wtIpWatcherAlarmIfEntry,
       "wtIpWatcherAlarmNo": wtIpWatcherAlarmNo,
       "wtIpWatcherAlarmTable": wtIpWatcherAlarmTable,
       "wtIpWatcherAlarmEntry": wtIpWatcherAlarmEntry,
       "wtIpWatcherAlarmInterval": wtIpWatcherAlarmInterval,
       "wtIpWatcherAlarmEnable": wtIpWatcherAlarmEnable,
       "wtIpWatcherAlarmMailAddr": wtIpWatcherAlarmMailAddr,
       "wtIpWatcherAlarmMailSubject": wtIpWatcherAlarmMailSubject,
       "wtIpWatcherAlarmMailText": wtIpWatcherAlarmMailText,
       "wtIpWatcherAlarmSnmpManagerIP": wtIpWatcherAlarmSnmpManagerIP,
       "wtIpWatcherAlarmSnmpTrapText": wtIpWatcherAlarmSnmpTrapText,
       "wtIpWatcherAlarmUdpIpAddr": wtIpWatcherAlarmUdpIpAddr,
       "wtIpWatcherAlarmUdpPort": wtIpWatcherAlarmUdpPort,
       "wtIpWatcherAlarmUdpText": wtIpWatcherAlarmUdpText,
       "wtIpWatcherAlarmTcpIpAddr": wtIpWatcherAlarmTcpIpAddr,
       "wtIpWatcherAlarmTcpPort": wtIpWatcherAlarmTcpPort,
       "wtIpWatcherAlarmTcpText": wtIpWatcherAlarmTcpText,
       "wtIpWatcherAlarmSyslogIpAddr": wtIpWatcherAlarmSyslogIpAddr,
       "wtIpWatcherAlarmSyslogPort": wtIpWatcherAlarmSyslogPort,
       "wtIpWatcherAlarmSyslogText": wtIpWatcherAlarmSyslogText,
       "wtIpWatcherAlarmFtpDataPort": wtIpWatcherAlarmFtpDataPort,
       "wtIpWatcherAlarmFtpFileName": wtIpWatcherAlarmFtpFileName,
       "wtIpWatcherAlarmFtpText": wtIpWatcherAlarmFtpText,
       "wtIpWatcherAlarmFtpOption": wtIpWatcherAlarmFtpOption,
       "wtIpWatcherAlarmTimerCron": wtIpWatcherAlarmTimerCron,
       "wtIpWatcherAlarmMailReleaseSubject": wtIpWatcherAlarmMailReleaseSubject,
       "wtIpWatcherAlarmMailReleaseText": wtIpWatcherAlarmMailReleaseText,
       "wtIpWatcherAlarmSnmpTrapReleaseText": wtIpWatcherAlarmSnmpTrapReleaseText,
       "wtIpWatcherAlarmUdpReleaseText": wtIpWatcherAlarmUdpReleaseText,
       "wtIpWatcherAlarmTcpReleaseText": wtIpWatcherAlarmTcpReleaseText,
       "wtIpWatcherAlarmSyslogReleaseText": wtIpWatcherAlarmSyslogReleaseText,
       "wtIpWatcherAlarmFtpReleaseText": wtIpWatcherAlarmFtpReleaseText,
       "wtIpWatcherAlarmName": wtIpWatcherAlarmName,
       "wtIpWatcherAlarmGlobalEnable": wtIpWatcherAlarmGlobalEnable,
       "wtIpWatcherAlarmCounterClear": wtIpWatcherAlarmCounterClear,
       "wtIpWatcherAlarmAckEnable": wtIpWatcherAlarmAckEnable,
       "wtIpWatcherAlarmAckPort": wtIpWatcherAlarmAckPort,
       "wtIpWatcherAlarmSetPort": wtIpWatcherAlarmSetPort,
       "wtIpWatcherAlarmMailTrgClearSubject": wtIpWatcherAlarmMailTrgClearSubject,
       "wtIpWatcherAlarmMailTrgClearText": wtIpWatcherAlarmMailTrgClearText,
       "wtIpWatcherAlarmSnmpTrapTrgClearText": wtIpWatcherAlarmSnmpTrapTrgClearText,
       "wtIpWatcherAlarmUdpTrgClearText": wtIpWatcherAlarmUdpTrgClearText,
       "wtIpWatcherAlarmTcpTrgClearText": wtIpWatcherAlarmTcpTrgClearText,
       "wtIpWatcherAlarmSyslogTrgClearText": wtIpWatcherAlarmSyslogTrgClearText,
       "wtIpWatcherAlarmFtpTrgClearText": wtIpWatcherAlarmFtpTrgClearText,
       "wtIpWatcherAlarmMailTrapTxEnable": wtIpWatcherAlarmMailTrapTxEnable,
       "wtIpWatcherAlarmSnmpTrapTrapTxEnable": wtIpWatcherAlarmSnmpTrapTrapTxEnable,
       "wtIpWatcherAlarmUdpTrapTxEnable": wtIpWatcherAlarmUdpTrapTxEnable,
       "wtIpWatcherAlarmTcpTrapTxEnable": wtIpWatcherAlarmTcpTrapTxEnable,
       "wtIpWatcherAlarmSyslogTrapTxEnable": wtIpWatcherAlarmSyslogTrapTxEnable,
       "wtIpWatcherAlarmFtpTrapTxEnable": wtIpWatcherAlarmFtpTrapTxEnable,
       "wtIpWatcherAlarmTriggerCount": wtIpWatcherAlarmTriggerCount,
       "wtIpWatcherAlarmPollingRate": wtIpWatcherAlarmPollingRate,
       "wtIpWatcherPorts": wtIpWatcherPorts,
       "wtIpWatcherInputPortTable": wtIpWatcherInputPortTable,
       "wtIpWatcherInputPortEntry": wtIpWatcherInputPortEntry,
       "wtIpWatcherPortInputName": wtIpWatcherPortInputName,
       "wtIpWatcherPortInputText": wtIpWatcherPortInputText,
       "wtIpWatcherPortInputFilter": wtIpWatcherPortInputFilter,
       "wtIpWatcherOutputPortTable": wtIpWatcherOutputPortTable,
       "wtIpWatcherOutputPortEntry": wtIpWatcherOutputPortEntry,
       "wtIpWatcherPortOutputName": wtIpWatcherPortOutputName,
       "wtIpWatcherPortOutputText": wtIpWatcherPortOutputText,
       "wtIpWatcherPortPulseDuration": wtIpWatcherPortPulseDuration,
       "wtIpWatcherPortPulsePolarity": wtIpWatcherPortPulsePolarity,
       "wtIpWatcherManufact": wtIpWatcherManufact,
       "wtIpWatcherMfName": wtIpWatcherMfName,
       "wtIpWatcherMfAddr": wtIpWatcherMfAddr,
       "wtIpWatcherMfHotline": wtIpWatcherMfHotline,
       "wtIpWatcherMfInternet": wtIpWatcherMfInternet,
       "wtIpWatcherMfDeviceTyp": wtIpWatcherMfDeviceTyp,
       "wtIpWatcherDiag": wtIpWatcherDiag,
       "wtIpWatcherDiagErrorCount": wtIpWatcherDiagErrorCount,
       "wtIpWatcherDiagBinaryError": wtIpWatcherDiagBinaryError,
       "wtIpWatcherDiagErrorIndex": wtIpWatcherDiagErrorIndex,
       "wtIpWatcherDiagErrorMessage": wtIpWatcherDiagErrorMessage,
       "wtIpWatcherDiagErrorClear": wtIpWatcherDiagErrorClear,
       "wtWebioEA2x2_24V": wtWebioEA2x2_24V,
       "wtWebioEA2x2_24VAlert1": wtWebioEA2x2_24VAlert1,
       "wtWebioEA2x2_24VAlert2": wtWebioEA2x2_24VAlert2,
       "wtWebioEA2x2_24VAlert3": wtWebioEA2x2_24VAlert3,
       "wtWebioEA2x2_24VAlert4": wtWebioEA2x2_24VAlert4,
       "wtWebioEA2x2_24VAlert5": wtWebioEA2x2_24VAlert5,
       "wtWebioEA2x2_24VAlert6": wtWebioEA2x2_24VAlert6,
       "wtWebioEA2x2_24VAlert7": wtWebioEA2x2_24VAlert7,
       "wtWebioEA2x2_24VAlert8": wtWebioEA2x2_24VAlert8,
       "wtWebioEA2x2_24VAlert9": wtWebioEA2x2_24VAlert9,
       "wtWebioEA2x2_24VAlert10": wtWebioEA2x2_24VAlert10,
       "wtWebioEA2x2_24VAlert11": wtWebioEA2x2_24VAlert11,
       "wtWebioEA2x2_24VAlert12": wtWebioEA2x2_24VAlert12,
       "wtWebioEA2x2_24VAlert13": wtWebioEA2x2_24VAlert13,
       "wtWebioEA2x2_24VAlert14": wtWebioEA2x2_24VAlert14,
       "wtWebioEA2x2_24VAlert15": wtWebioEA2x2_24VAlert15,
       "wtWebioEA2x2_24VAlert16": wtWebioEA2x2_24VAlert16,
       "wtWebioEA2x2_24VAlert17": wtWebioEA2x2_24VAlert17,
       "wtWebioEA2x2_24VAlert18": wtWebioEA2x2_24VAlert18,
       "wtWebioEA2x2_24VAlert19": wtWebioEA2x2_24VAlert19,
       "wtWebioEA2x2_24VAlert20": wtWebioEA2x2_24VAlert20,
       "wtWebioEA2x2_24VAlert21": wtWebioEA2x2_24VAlert21,
       "wtWebioEA2x2_24VAlert22": wtWebioEA2x2_24VAlert22,
       "wtWebioEA2x2_24VAlert23": wtWebioEA2x2_24VAlert23,
       "wtWebioEA2x2_24VAlert24": wtWebioEA2x2_24VAlert24,
       "wtWebioEA2x2_24VAlertDiag": wtWebioEA2x2_24VAlertDiag,
       "wtWebioEA2x2_24VInOut": wtWebioEA2x2_24VInOut,
       "wtWebioEA2x2_24VInputs": wtWebioEA2x2_24VInputs,
       "wtWebioEA2x2_24VOutputs": wtWebioEA2x2_24VOutputs,
       "wtWebioEA2x2_24VInputTable": wtWebioEA2x2_24VInputTable,
       "wtWebioEA2x2_24VInputEntry": wtWebioEA2x2_24VInputEntry,
       "wtWebioEA2x2_24VInputNo": wtWebioEA2x2_24VInputNo,
       "wtWebioEA2x2_24VInputCounter": wtWebioEA2x2_24VInputCounter,
       "wtWebioEA2x2_24VInputCounterClear": wtWebioEA2x2_24VInputCounterClear,
       "wtWebioEA2x2_24VInputState": wtWebioEA2x2_24VInputState,
       "wtWebioEA2x2_24VInputValue": wtWebioEA2x2_24VInputValue,
       "wtWebioEA2x2_24VOutputTable": wtWebioEA2x2_24VOutputTable,
       "wtWebioEA2x2_24VOutputEntry": wtWebioEA2x2_24VOutputEntry,
       "wtWebioEA2x2_24VOutputNo": wtWebioEA2x2_24VOutputNo,
       "wtWebioEA2x2_24VOutputState": wtWebioEA2x2_24VOutputState,
       "wtWebioEA2x2_24VOutputValue": wtWebioEA2x2_24VOutputValue,
       "wtWebioEA2x2_24VSetOutput": wtWebioEA2x2_24VSetOutput,
       "wtWebioEA2x2_24VSessCntrl": wtWebioEA2x2_24VSessCntrl,
       "wtWebioEA2x2_24VSessCntrlPassword": wtWebioEA2x2_24VSessCntrlPassword,
       "wtWebioEA2x2_24VSessCntrlConfigMode": wtWebioEA2x2_24VSessCntrlConfigMode,
       "wtWebioEA2x2_24VSessCntrlLogout": wtWebioEA2x2_24VSessCntrlLogout,
       "wtWebioEA2x2_24VSessCntrlAdminPassword": wtWebioEA2x2_24VSessCntrlAdminPassword,
       "wtWebioEA2x2_24VSessCntrlConfigPassword": wtWebioEA2x2_24VSessCntrlConfigPassword,
       "wtWebioEA2x2_24VConfig": wtWebioEA2x2_24VConfig,
       "wtWebioEA2x2_24VDevice": wtWebioEA2x2_24VDevice,
       "wtWebioEA2x2_24VText": wtWebioEA2x2_24VText,
       "wtWebioEA2x2_24VDeviceName": wtWebioEA2x2_24VDeviceName,
       "wtWebioEA2x2_24VDeviceText": wtWebioEA2x2_24VDeviceText,
       "wtWebioEA2x2_24VDeviceLocation": wtWebioEA2x2_24VDeviceLocation,
       "wtWebioEA2x2_24VDeviceContact": wtWebioEA2x2_24VDeviceContact,
       "wtWebioEA2x2_24VTimeDate": wtWebioEA2x2_24VTimeDate,
       "wtWebioEA2x2_24VTimeZone": wtWebioEA2x2_24VTimeZone,
       "wtWebioEA2x2_24VTzOffsetHrs": wtWebioEA2x2_24VTzOffsetHrs,
       "wtWebioEA2x2_24VTzOffsetMin": wtWebioEA2x2_24VTzOffsetMin,
       "wtWebioEA2x2_24VTzEnable": wtWebioEA2x2_24VTzEnable,
       "wtWebioEA2x2_24VStTzOffsetHrs": wtWebioEA2x2_24VStTzOffsetHrs,
       "wtWebioEA2x2_24VStTzOffsetMin": wtWebioEA2x2_24VStTzOffsetMin,
       "wtWebioEA2x2_24VStTzEnable": wtWebioEA2x2_24VStTzEnable,
       "wtWebioEA2x2_24VStTzStartMonth": wtWebioEA2x2_24VStTzStartMonth,
       "wtWebioEA2x2_24VStTzStartMode": wtWebioEA2x2_24VStTzStartMode,
       "wtWebioEA2x2_24VStTzStartWday": wtWebioEA2x2_24VStTzStartWday,
       "wtWebioEA2x2_24VStTzStartHrs": wtWebioEA2x2_24VStTzStartHrs,
       "wtWebioEA2x2_24VStTzStartMin": wtWebioEA2x2_24VStTzStartMin,
       "wtWebioEA2x2_24VStTzStopMonth": wtWebioEA2x2_24VStTzStopMonth,
       "wtWebioEA2x2_24VStTzStopMode": wtWebioEA2x2_24VStTzStopMode,
       "wtWebioEA2x2_24VStTzStopWday": wtWebioEA2x2_24VStTzStopWday,
       "wtWebioEA2x2_24VStTzStopHrs": wtWebioEA2x2_24VStTzStopHrs,
       "wtWebioEA2x2_24VStTzStopMin": wtWebioEA2x2_24VStTzStopMin,
       "wtWebioEA2x2_24VTimeServer": wtWebioEA2x2_24VTimeServer,
       "wtWebioEA2x2_24VTimeServer1": wtWebioEA2x2_24VTimeServer1,
       "wtWebioEA2x2_24VTimeServer2": wtWebioEA2x2_24VTimeServer2,
       "wtWebioEA2x2_24VTsEnable": wtWebioEA2x2_24VTsEnable,
       "wtWebioEA2x2_24VTsSyncTime": wtWebioEA2x2_24VTsSyncTime,
       "wtWebioEA2x2_24VDeviceClock": wtWebioEA2x2_24VDeviceClock,
       "wtWebioEA2x2_24VClockHrs": wtWebioEA2x2_24VClockHrs,
       "wtWebioEA2x2_24VClockMin": wtWebioEA2x2_24VClockMin,
       "wtWebioEA2x2_24VClockDay": wtWebioEA2x2_24VClockDay,
       "wtWebioEA2x2_24VClockMonth": wtWebioEA2x2_24VClockMonth,
       "wtWebioEA2x2_24VClockYear": wtWebioEA2x2_24VClockYear,
       "wtWebioEA2x2_24VBasic": wtWebioEA2x2_24VBasic,
       "wtWebioEA2x2_24VNetwork": wtWebioEA2x2_24VNetwork,
       "wtWebioEA2x2_24VIpAddress": wtWebioEA2x2_24VIpAddress,
       "wtWebioEA2x2_24VSubnetMask": wtWebioEA2x2_24VSubnetMask,
       "wtWebioEA2x2_24VGateway": wtWebioEA2x2_24VGateway,
       "wtWebioEA2x2_24VDnsServer1": wtWebioEA2x2_24VDnsServer1,
       "wtWebioEA2x2_24VDnsServer2": wtWebioEA2x2_24VDnsServer2,
       "wtWebioEA2x2_24VAddConfig": wtWebioEA2x2_24VAddConfig,
       "wtWebioEA2x2_24VHTTP": wtWebioEA2x2_24VHTTP,
       "wtWebioEA2x2_24VStartup": wtWebioEA2x2_24VStartup,
       "wtWebioEA2x2_24VGetHeaderEnable": wtWebioEA2x2_24VGetHeaderEnable,
       "wtWebioEA2x2_24VHttpInputTrigger": wtWebioEA2x2_24VHttpInputTrigger,
       "wtWebioEA2x2_24VHttpPort": wtWebioEA2x2_24VHttpPort,
       "wtWebioEA2x2_24VMail": wtWebioEA2x2_24VMail,
       "wtWebioEA2x2_24VMailAdName": wtWebioEA2x2_24VMailAdName,
       "wtWebioEA2x2_24VMailReply": wtWebioEA2x2_24VMailReply,
       "wtWebioEA2x2_24VMailServer": wtWebioEA2x2_24VMailServer,
       "wtWebioEA2x2_24VMailEnable": wtWebioEA2x2_24VMailEnable,
       "wtWebioEA2x2_24VMailAuthentication": wtWebioEA2x2_24VMailAuthentication,
       "wtWebioEA2x2_24VMailAuthUser": wtWebioEA2x2_24VMailAuthUser,
       "wtWebioEA2x2_24VMailAuthPassword": wtWebioEA2x2_24VMailAuthPassword,
       "wtWebioEA2x2_24VMailPop3Server": wtWebioEA2x2_24VMailPop3Server,
       "wtWebioEA2x2_24VSNMP": wtWebioEA2x2_24VSNMP,
       "wtWebioEA2x2_24VSnmpEnable": wtWebioEA2x2_24VSnmpEnable,
       "wtWebioEA2x2_24VSnmpCommunityStringRead": wtWebioEA2x2_24VSnmpCommunityStringRead,
       "wtWebioEA2x2_24VSnmpCommunityStringReadWrite": wtWebioEA2x2_24VSnmpCommunityStringReadWrite,
       "wtWebioEA2x2_24VSnmpSystemTrapManagerIP": wtWebioEA2x2_24VSnmpSystemTrapManagerIP,
       "wtWebioEA2x2_24VSnmpSystemTrapEnable": wtWebioEA2x2_24VSnmpSystemTrapEnable,
       "wtWebioEA2x2_24VUDP": wtWebioEA2x2_24VUDP,
       "wtWebioEA2x2_24VUdpAdminPort": wtWebioEA2x2_24VUdpAdminPort,
       "wtWebioEA2x2_24VUdpEnable": wtWebioEA2x2_24VUdpEnable,
       "wtWebioEA2x2_24VUdpRemotePort": wtWebioEA2x2_24VUdpRemotePort,
       "wtWebioEA2x2_24VBinary": wtWebioEA2x2_24VBinary,
       "wtWebioEA2x2_24VBinaryModeCount": wtWebioEA2x2_24VBinaryModeCount,
       "wtWebioEA2x2_24VBinaryIfTable": wtWebioEA2x2_24VBinaryIfTable,
       "wtWebioEA2x2_24VBinaryIfEntry": wtWebioEA2x2_24VBinaryIfEntry,
       "wtWebioEA2x2_24VBinaryModeNo": wtWebioEA2x2_24VBinaryModeNo,
       "wtWebioEA2x2_24VBinaryTable": wtWebioEA2x2_24VBinaryTable,
       "wtWebioEA2x2_24VBinaryEntry": wtWebioEA2x2_24VBinaryEntry,
       "wtWebioEA2x2_24VBinaryOperationMode": wtWebioEA2x2_24VBinaryOperationMode,
       "wtWebioEA2x2_24VBinaryTcpServerLocalPort": wtWebioEA2x2_24VBinaryTcpServerLocalPort,
       "wtWebioEA2x2_24VBinaryTcpServerInputTrigger": wtWebioEA2x2_24VBinaryTcpServerInputTrigger,
       "wtWebioEA2x2_24VBinaryTcpServerApplicationMode": wtWebioEA2x2_24VBinaryTcpServerApplicationMode,
       "wtWebioEA2x2_24VBinaryTcpClientLocalPort": wtWebioEA2x2_24VBinaryTcpClientLocalPort,
       "wtWebioEA2x2_24VBinaryTcpClientServerPort": wtWebioEA2x2_24VBinaryTcpClientServerPort,
       "wtWebioEA2x2_24VBinaryTcpClientServerIpAddr": wtWebioEA2x2_24VBinaryTcpClientServerIpAddr,
       "wtWebioEA2x2_24VBinaryTcpClientServerPassword": wtWebioEA2x2_24VBinaryTcpClientServerPassword,
       "wtWebioEA2x2_24VBinaryTcpClientInactivity": wtWebioEA2x2_24VBinaryTcpClientInactivity,
       "wtWebioEA2x2_24VBinaryTcpClientInputTrigger": wtWebioEA2x2_24VBinaryTcpClientInputTrigger,
       "wtWebioEA2x2_24VBinaryTcpClientInterval": wtWebioEA2x2_24VBinaryTcpClientInterval,
       "wtWebioEA2x2_24VBinaryTcpClientApplicationMode": wtWebioEA2x2_24VBinaryTcpClientApplicationMode,
       "wtWebioEA2x2_24VBinaryUdpPeerLocalPort": wtWebioEA2x2_24VBinaryUdpPeerLocalPort,
       "wtWebioEA2x2_24VBinaryUdpPeerRemotePort": wtWebioEA2x2_24VBinaryUdpPeerRemotePort,
       "wtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr": wtWebioEA2x2_24VBinaryUdpPeerRemoteIpAddr,
       "wtWebioEA2x2_24VBinaryUdpPeerInputTrigger": wtWebioEA2x2_24VBinaryUdpPeerInputTrigger,
       "wtWebioEA2x2_24VBinaryUdpPeerInterval": wtWebioEA2x2_24VBinaryUdpPeerInterval,
       "wtWebioEA2x2_24VBinaryUdpPeerApplicationMode": wtWebioEA2x2_24VBinaryUdpPeerApplicationMode,
       "wtWebioEA2x2_24VBinaryConnectedPort": wtWebioEA2x2_24VBinaryConnectedPort,
       "wtWebioEA2x2_24VBinaryConnectedIpAddr": wtWebioEA2x2_24VBinaryConnectedIpAddr,
       "wtWebioEA2x2_24VBinaryTcpServerClientHttpPort": wtWebioEA2x2_24VBinaryTcpServerClientHttpPort,
       "wtWebioEA2x2_24VBinaryTcpClientServerHttpPort": wtWebioEA2x2_24VBinaryTcpClientServerHttpPort,
       "wtWebioEA2x2_24VSyslog": wtWebioEA2x2_24VSyslog,
       "wtWebioEA2x2_24VSyslogServerIP": wtWebioEA2x2_24VSyslogServerIP,
       "wtWebioEA2x2_24VSyslogServerPort": wtWebioEA2x2_24VSyslogServerPort,
       "wtWebioEA2x2_24VSyslogSystemMessagesEnable": wtWebioEA2x2_24VSyslogSystemMessagesEnable,
       "wtWebioEA2x2_24VSyslogEnable": wtWebioEA2x2_24VSyslogEnable,
       "wtWebioEA2x2_24VFTP": wtWebioEA2x2_24VFTP,
       "wtWebioEA2x2_24VFTPServerIP": wtWebioEA2x2_24VFTPServerIP,
       "wtWebioEA2x2_24VFTPServerControlPort": wtWebioEA2x2_24VFTPServerControlPort,
       "wtWebioEA2x2_24VFTPUserName": wtWebioEA2x2_24VFTPUserName,
       "wtWebioEA2x2_24VFTPPassword": wtWebioEA2x2_24VFTPPassword,
       "wtWebioEA2x2_24VFTPAccount": wtWebioEA2x2_24VFTPAccount,
       "wtWebioEA2x2_24VFTPOption": wtWebioEA2x2_24VFTPOption,
       "wtWebioEA2x2_24VFTPEnable": wtWebioEA2x2_24VFTPEnable,
       "wtWebioEA2x2_24VOutputMode": wtWebioEA2x2_24VOutputMode,
       "wtWebioEA2x2_24VOutputModeTable": wtWebioEA2x2_24VOutputModeTable,
       "wtWebioEA2x2_24VOutputModeEntry": wtWebioEA2x2_24VOutputModeEntry,
       "wtWebioEA2x2_24VOutputModeBit": wtWebioEA2x2_24VOutputModeBit,
       "wtWebioEA2x2_24VSafetyTimeout": wtWebioEA2x2_24VSafetyTimeout,
       "wtWebioEA2x2_24VPowerSupplyEnable": wtWebioEA2x2_24VPowerSupplyEnable,
       "wtWebioEA2x2_24VAlarm": wtWebioEA2x2_24VAlarm,
       "wtWebioEA2x2_24VAlarmCount": wtWebioEA2x2_24VAlarmCount,
       "wtWebioEA2x2_24VAlarmIfTable": wtWebioEA2x2_24VAlarmIfTable,
       "wtWebioEA2x2_24VAlarmIfEntry": wtWebioEA2x2_24VAlarmIfEntry,
       "wtWebioEA2x2_24VAlarmNo": wtWebioEA2x2_24VAlarmNo,
       "wtWebioEA2x2_24VAlarmTable": wtWebioEA2x2_24VAlarmTable,
       "wtWebioEA2x2_24VAlarmEntry": wtWebioEA2x2_24VAlarmEntry,
       "wtWebioEA2x2_24VAlarmInputTrigger": wtWebioEA2x2_24VAlarmInputTrigger,
       "wtWebioEA2x2_24VAlarmOutputTrigger": wtWebioEA2x2_24VAlarmOutputTrigger,
       "wtWebioEA2x2_24VAlarmSystemTrigger": wtWebioEA2x2_24VAlarmSystemTrigger,
       "wtWebioEA2x2_24VAlarmMaxCounterValue": wtWebioEA2x2_24VAlarmMaxCounterValue,
       "wtWebioEA2x2_24VAlarmInterval": wtWebioEA2x2_24VAlarmInterval,
       "wtWebioEA2x2_24VAlarmEnable": wtWebioEA2x2_24VAlarmEnable,
       "wtWebioEA2x2_24VAlarmMailAddr": wtWebioEA2x2_24VAlarmMailAddr,
       "wtWebioEA2x2_24VAlarmMailSubject": wtWebioEA2x2_24VAlarmMailSubject,
       "wtWebioEA2x2_24VAlarmMailText": wtWebioEA2x2_24VAlarmMailText,
       "wtWebioEA2x2_24VAlarmSnmpManagerIP": wtWebioEA2x2_24VAlarmSnmpManagerIP,
       "wtWebioEA2x2_24VAlarmSnmpTrapText": wtWebioEA2x2_24VAlarmSnmpTrapText,
       "wtWebioEA2x2_24VAlarmUdpIpAddr": wtWebioEA2x2_24VAlarmUdpIpAddr,
       "wtWebioEA2x2_24VAlarmUdpPort": wtWebioEA2x2_24VAlarmUdpPort,
       "wtWebioEA2x2_24VAlarmUdpText": wtWebioEA2x2_24VAlarmUdpText,
       "wtWebioEA2x2_24VAlarmTcpIpAddr": wtWebioEA2x2_24VAlarmTcpIpAddr,
       "wtWebioEA2x2_24VAlarmTcpPort": wtWebioEA2x2_24VAlarmTcpPort,
       "wtWebioEA2x2_24VAlarmTcpText": wtWebioEA2x2_24VAlarmTcpText,
       "wtWebioEA2x2_24VAlarmSyslogIpAddr": wtWebioEA2x2_24VAlarmSyslogIpAddr,
       "wtWebioEA2x2_24VAlarmSyslogPort": wtWebioEA2x2_24VAlarmSyslogPort,
       "wtWebioEA2x2_24VAlarmSyslogText": wtWebioEA2x2_24VAlarmSyslogText,
       "wtWebioEA2x2_24VAlarmFtpDataPort": wtWebioEA2x2_24VAlarmFtpDataPort,
       "wtWebioEA2x2_24VAlarmFtpFileName": wtWebioEA2x2_24VAlarmFtpFileName,
       "wtWebioEA2x2_24VAlarmFtpText": wtWebioEA2x2_24VAlarmFtpText,
       "wtWebioEA2x2_24VAlarmFtpOption": wtWebioEA2x2_24VAlarmFtpOption,
       "wtWebioEA2x2_24VAlarmTimerCron": wtWebioEA2x2_24VAlarmTimerCron,
       "wtWebioEA2x2_24VAlarmMailReleaseSubject": wtWebioEA2x2_24VAlarmMailReleaseSubject,
       "wtWebioEA2x2_24VAlarmMailReleaseText": wtWebioEA2x2_24VAlarmMailReleaseText,
       "wtWebioEA2x2_24VAlarmSnmpTrapReleaseText": wtWebioEA2x2_24VAlarmSnmpTrapReleaseText,
       "wtWebioEA2x2_24VAlarmUdpReleaseText": wtWebioEA2x2_24VAlarmUdpReleaseText,
       "wtWebioEA2x2_24VAlarmTcpReleaseText": wtWebioEA2x2_24VAlarmTcpReleaseText,
       "wtWebioEA2x2_24VAlarmSyslogReleaseText": wtWebioEA2x2_24VAlarmSyslogReleaseText,
       "wtWebioEA2x2_24VAlarmFtpReleaseText": wtWebioEA2x2_24VAlarmFtpReleaseText,
       "wtWebioEA2x2_24VPorts": wtWebioEA2x2_24VPorts,
       "wtWebioEA2x2_24VInputPortTable": wtWebioEA2x2_24VInputPortTable,
       "wtWebioEA2x2_24VInputPortEntry": wtWebioEA2x2_24VInputPortEntry,
       "wtWebioEA2x2_24VPortInputName": wtWebioEA2x2_24VPortInputName,
       "wtWebioEA2x2_24VPortInputText": wtWebioEA2x2_24VPortInputText,
       "wtWebioEA2x2_24VPortInputMode": wtWebioEA2x2_24VPortInputMode,
       "wtWebioEA2x2_24VPortInputFilter": wtWebioEA2x2_24VPortInputFilter,
       "wtWebioEA2x2_24VPortInputBicountPulsePolarity": wtWebioEA2x2_24VPortInputBicountPulsePolarity,
       "wtWebioEA2x2_24VPortInputBicountInactivTimeout": wtWebioEA2x2_24VPortInputBicountInactivTimeout,
       "wtWebioEA2x2_24VOutputPortTable": wtWebioEA2x2_24VOutputPortTable,
       "wtWebioEA2x2_24VOutputPortEntry": wtWebioEA2x2_24VOutputPortEntry,
       "wtWebioEA2x2_24VPortOutputName": wtWebioEA2x2_24VPortOutputName,
       "wtWebioEA2x2_24VPortOutputText": wtWebioEA2x2_24VPortOutputText,
       "wtWebioEA2x2_24VPortOutputGroupMode": wtWebioEA2x2_24VPortOutputGroupMode,
       "wtWebioEA2x2_24VPortOutputSafetyState": wtWebioEA2x2_24VPortOutputSafetyState,
       "wtWebioEA2x2_24VPortLogicInputMask": wtWebioEA2x2_24VPortLogicInputMask,
       "wtWebioEA2x2_24VPortLogicInputInverter": wtWebioEA2x2_24VPortLogicInputInverter,
       "wtWebioEA2x2_24VPortLogicFunction": wtWebioEA2x2_24VPortLogicFunction,
       "wtWebioEA2x2_24VPortLogicOutputInverter": wtWebioEA2x2_24VPortLogicOutputInverter,
       "wtWebioEA2x2_24VPortPulseDuration": wtWebioEA2x2_24VPortPulseDuration,
       "wtWebioEA2x2_24VPortPulsePolarity": wtWebioEA2x2_24VPortPulsePolarity,
       "wtWebioEA2x2_24VManufact": wtWebioEA2x2_24VManufact,
       "wtWebioEA2x2_24VMfName": wtWebioEA2x2_24VMfName,
       "wtWebioEA2x2_24VMfAddr": wtWebioEA2x2_24VMfAddr,
       "wtWebioEA2x2_24VMfHotline": wtWebioEA2x2_24VMfHotline,
       "wtWebioEA2x2_24VMfInternet": wtWebioEA2x2_24VMfInternet,
       "wtWebioEA2x2_24VMfDeviceTyp": wtWebioEA2x2_24VMfDeviceTyp,
       "wtWebioEA2x2_24VDiag": wtWebioEA2x2_24VDiag,
       "wtWebioEA2x2_24VDiagErrorCount": wtWebioEA2x2_24VDiagErrorCount,
       "wtWebioEA2x2_24VDiagBinaryError": wtWebioEA2x2_24VDiagBinaryError,
       "wtWebioEA2x2_24VDiagErrorIndex": wtWebioEA2x2_24VDiagErrorIndex,
       "wtWebioEA2x2_24VDiagErrorMessage": wtWebioEA2x2_24VDiagErrorMessage,
       "wtWebioEA2x2_24VDiagErrorClear": wtWebioEA2x2_24VDiagErrorClear,
       "wtWebioEA2x2ERP_24V": wtWebioEA2x2ERP_24V,
       "wtWebioEA2x2ERP_24VAlert1": wtWebioEA2x2ERP_24VAlert1,
       "wtWebioEA2x2ERP_24VAlert2": wtWebioEA2x2ERP_24VAlert2,
       "wtWebioEA2x2ERP_24VAlert3": wtWebioEA2x2ERP_24VAlert3,
       "wtWebioEA2x2ERP_24VAlert4": wtWebioEA2x2ERP_24VAlert4,
       "wtWebioEA2x2ERP_24VAlert5": wtWebioEA2x2ERP_24VAlert5,
       "wtWebioEA2x2ERP_24VAlert6": wtWebioEA2x2ERP_24VAlert6,
       "wtWebioEA2x2ERP_24VAlert7": wtWebioEA2x2ERP_24VAlert7,
       "wtWebioEA2x2ERP_24VAlert8": wtWebioEA2x2ERP_24VAlert8,
       "wtWebioEA2x2ERP_24VAlert9": wtWebioEA2x2ERP_24VAlert9,
       "wtWebioEA2x2ERP_24VAlert10": wtWebioEA2x2ERP_24VAlert10,
       "wtWebioEA2x2ERP_24VAlert11": wtWebioEA2x2ERP_24VAlert11,
       "wtWebioEA2x2ERP_24VAlert12": wtWebioEA2x2ERP_24VAlert12,
       "wtWebioEA2x2ERP_24VAlert13": wtWebioEA2x2ERP_24VAlert13,
       "wtWebioEA2x2ERP_24VAlert14": wtWebioEA2x2ERP_24VAlert14,
       "wtWebioEA2x2ERP_24VAlert15": wtWebioEA2x2ERP_24VAlert15,
       "wtWebioEA2x2ERP_24VAlert16": wtWebioEA2x2ERP_24VAlert16,
       "wtWebioEA2x2ERP_24VAlert17": wtWebioEA2x2ERP_24VAlert17,
       "wtWebioEA2x2ERP_24VAlert18": wtWebioEA2x2ERP_24VAlert18,
       "wtWebioEA2x2ERP_24VAlert19": wtWebioEA2x2ERP_24VAlert19,
       "wtWebioEA2x2ERP_24VAlert20": wtWebioEA2x2ERP_24VAlert20,
       "wtWebioEA2x2ERP_24VAlert21": wtWebioEA2x2ERP_24VAlert21,
       "wtWebioEA2x2ERP_24VAlert22": wtWebioEA2x2ERP_24VAlert22,
       "wtWebioEA2x2ERP_24VAlert23": wtWebioEA2x2ERP_24VAlert23,
       "wtWebioEA2x2ERP_24VAlert24": wtWebioEA2x2ERP_24VAlert24,
       "wtWebioEA2x2ERP_24VAlertDiag": wtWebioEA2x2ERP_24VAlertDiag,
       "wtWebioEA2x2ERP_24VInOut": wtWebioEA2x2ERP_24VInOut,
       "wtWebioEA2x2ERP_24VInputs": wtWebioEA2x2ERP_24VInputs,
       "wtWebioEA2x2ERP_24VOutputs": wtWebioEA2x2ERP_24VOutputs,
       "wtWebioEA2x2ERP_24VInputTable": wtWebioEA2x2ERP_24VInputTable,
       "wtWebioEA2x2ERP_24VInputEntry": wtWebioEA2x2ERP_24VInputEntry,
       "wtWebioEA2x2ERP_24VInputNo": wtWebioEA2x2ERP_24VInputNo,
       "wtWebioEA2x2ERP_24VInputCounter": wtWebioEA2x2ERP_24VInputCounter,
       "wtWebioEA2x2ERP_24VInputCounterClear": wtWebioEA2x2ERP_24VInputCounterClear,
       "wtWebioEA2x2ERP_24VInputState": wtWebioEA2x2ERP_24VInputState,
       "wtWebioEA2x2ERP_24VInputValue": wtWebioEA2x2ERP_24VInputValue,
       "wtWebioEA2x2ERP_24VOutputTable": wtWebioEA2x2ERP_24VOutputTable,
       "wtWebioEA2x2ERP_24VOutputEntry": wtWebioEA2x2ERP_24VOutputEntry,
       "wtWebioEA2x2ERP_24VOutputNo": wtWebioEA2x2ERP_24VOutputNo,
       "wtWebioEA2x2ERP_24VOutputState": wtWebioEA2x2ERP_24VOutputState,
       "wtWebioEA2x2ERP_24VOutputValue": wtWebioEA2x2ERP_24VOutputValue,
       "wtWebioEA2x2ERP_24VSetOutput": wtWebioEA2x2ERP_24VSetOutput,
       "wtWebioEA2x2ERP_24VSessCntrl": wtWebioEA2x2ERP_24VSessCntrl,
       "wtWebioEA2x2ERP_24VSessCntrlPassword": wtWebioEA2x2ERP_24VSessCntrlPassword,
       "wtWebioEA2x2ERP_24VSessCntrlConfigMode": wtWebioEA2x2ERP_24VSessCntrlConfigMode,
       "wtWebioEA2x2ERP_24VSessCntrlLogout": wtWebioEA2x2ERP_24VSessCntrlLogout,
       "wtWebioEA2x2ERP_24VSessCntrlAdminPassword": wtWebioEA2x2ERP_24VSessCntrlAdminPassword,
       "wtWebioEA2x2ERP_24VSessCntrlConfigPassword": wtWebioEA2x2ERP_24VSessCntrlConfigPassword,
       "wtWebioEA2x2ERP_24VConfig": wtWebioEA2x2ERP_24VConfig,
       "wtWebioEA2x2ERP_24VDevice": wtWebioEA2x2ERP_24VDevice,
       "wtWebioEA2x2ERP_24VText": wtWebioEA2x2ERP_24VText,
       "wtWebioEA2x2ERP_24VDeviceName": wtWebioEA2x2ERP_24VDeviceName,
       "wtWebioEA2x2ERP_24VDeviceText": wtWebioEA2x2ERP_24VDeviceText,
       "wtWebioEA2x2ERP_24VDeviceLocation": wtWebioEA2x2ERP_24VDeviceLocation,
       "wtWebioEA2x2ERP_24VDeviceContact": wtWebioEA2x2ERP_24VDeviceContact,
       "wtWebioEA2x2ERP_24VTimeDate": wtWebioEA2x2ERP_24VTimeDate,
       "wtWebioEA2x2ERP_24VTimeZone": wtWebioEA2x2ERP_24VTimeZone,
       "wtWebioEA2x2ERP_24VTzOffsetHrs": wtWebioEA2x2ERP_24VTzOffsetHrs,
       "wtWebioEA2x2ERP_24VTzOffsetMin": wtWebioEA2x2ERP_24VTzOffsetMin,
       "wtWebioEA2x2ERP_24VTzEnable": wtWebioEA2x2ERP_24VTzEnable,
       "wtWebioEA2x2ERP_24VStTzOffsetHrs": wtWebioEA2x2ERP_24VStTzOffsetHrs,
       "wtWebioEA2x2ERP_24VStTzOffsetMin": wtWebioEA2x2ERP_24VStTzOffsetMin,
       "wtWebioEA2x2ERP_24VStTzEnable": wtWebioEA2x2ERP_24VStTzEnable,
       "wtWebioEA2x2ERP_24VStTzStartMonth": wtWebioEA2x2ERP_24VStTzStartMonth,
       "wtWebioEA2x2ERP_24VStTzStartMode": wtWebioEA2x2ERP_24VStTzStartMode,
       "wtWebioEA2x2ERP_24VStTzStartWday": wtWebioEA2x2ERP_24VStTzStartWday,
       "wtWebioEA2x2ERP_24VStTzStartHrs": wtWebioEA2x2ERP_24VStTzStartHrs,
       "wtWebioEA2x2ERP_24VStTzStartMin": wtWebioEA2x2ERP_24VStTzStartMin,
       "wtWebioEA2x2ERP_24VStTzStopMonth": wtWebioEA2x2ERP_24VStTzStopMonth,
       "wtWebioEA2x2ERP_24VStTzStopMode": wtWebioEA2x2ERP_24VStTzStopMode,
       "wtWebioEA2x2ERP_24VStTzStopWday": wtWebioEA2x2ERP_24VStTzStopWday,
       "wtWebioEA2x2ERP_24VStTzStopHrs": wtWebioEA2x2ERP_24VStTzStopHrs,
       "wtWebioEA2x2ERP_24VStTzStopMin": wtWebioEA2x2ERP_24VStTzStopMin,
       "wtWebioEA2x2ERP_24VTimeServer": wtWebioEA2x2ERP_24VTimeServer,
       "wtWebioEA2x2ERP_24VTimeServer1": wtWebioEA2x2ERP_24VTimeServer1,
       "wtWebioEA2x2ERP_24VTimeServer2": wtWebioEA2x2ERP_24VTimeServer2,
       "wtWebioEA2x2ERP_24VTsEnable": wtWebioEA2x2ERP_24VTsEnable,
       "wtWebioEA2x2ERP_24VTsSyncTime": wtWebioEA2x2ERP_24VTsSyncTime,
       "wtWebioEA2x2ERP_24VDeviceClock": wtWebioEA2x2ERP_24VDeviceClock,
       "wtWebioEA2x2ERP_24VClockHrs": wtWebioEA2x2ERP_24VClockHrs,
       "wtWebioEA2x2ERP_24VClockMin": wtWebioEA2x2ERP_24VClockMin,
       "wtWebioEA2x2ERP_24VClockDay": wtWebioEA2x2ERP_24VClockDay,
       "wtWebioEA2x2ERP_24VClockMonth": wtWebioEA2x2ERP_24VClockMonth,
       "wtWebioEA2x2ERP_24VClockYear": wtWebioEA2x2ERP_24VClockYear,
       "wtWebioEA2x2ERP_24VBasic": wtWebioEA2x2ERP_24VBasic,
       "wtWebioEA2x2ERP_24VNetwork": wtWebioEA2x2ERP_24VNetwork,
       "wtWebioEA2x2ERP_24VIpAddress": wtWebioEA2x2ERP_24VIpAddress,
       "wtWebioEA2x2ERP_24VSubnetMask": wtWebioEA2x2ERP_24VSubnetMask,
       "wtWebioEA2x2ERP_24VGateway": wtWebioEA2x2ERP_24VGateway,
       "wtWebioEA2x2ERP_24VDnsServer1": wtWebioEA2x2ERP_24VDnsServer1,
       "wtWebioEA2x2ERP_24VDnsServer2": wtWebioEA2x2ERP_24VDnsServer2,
       "wtWebioEA2x2ERP_24VAddConfig": wtWebioEA2x2ERP_24VAddConfig,
       "wtWebioEA2x2ERP_24VHTTP": wtWebioEA2x2ERP_24VHTTP,
       "wtWebioEA2x2ERP_24VStartup": wtWebioEA2x2ERP_24VStartup,
       "wtWebioEA2x2ERP_24VGetHeaderEnable": wtWebioEA2x2ERP_24VGetHeaderEnable,
       "wtWebioEA2x2ERP_24VHttpInputTrigger": wtWebioEA2x2ERP_24VHttpInputTrigger,
       "wtWebioEA2x2ERP_24VHttpPort": wtWebioEA2x2ERP_24VHttpPort,
       "wtWebioEA2x2ERP_24VMail": wtWebioEA2x2ERP_24VMail,
       "wtWebioEA2x2ERP_24VMailAdName": wtWebioEA2x2ERP_24VMailAdName,
       "wtWebioEA2x2ERP_24VMailReply": wtWebioEA2x2ERP_24VMailReply,
       "wtWebioEA2x2ERP_24VMailServer": wtWebioEA2x2ERP_24VMailServer,
       "wtWebioEA2x2ERP_24VMailEnable": wtWebioEA2x2ERP_24VMailEnable,
       "wtWebioEA2x2ERP_24VMailAuthentication": wtWebioEA2x2ERP_24VMailAuthentication,
       "wtWebioEA2x2ERP_24VMailAuthUser": wtWebioEA2x2ERP_24VMailAuthUser,
       "wtWebioEA2x2ERP_24VMailAuthPassword": wtWebioEA2x2ERP_24VMailAuthPassword,
       "wtWebioEA2x2ERP_24VMailPop3Server": wtWebioEA2x2ERP_24VMailPop3Server,
       "wtWebioEA2x2ERP_24VSNMP": wtWebioEA2x2ERP_24VSNMP,
       "wtWebioEA2x2ERP_24VSnmpEnable": wtWebioEA2x2ERP_24VSnmpEnable,
       "wtWebioEA2x2ERP_24VSnmpCommunityStringRead": wtWebioEA2x2ERP_24VSnmpCommunityStringRead,
       "wtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite": wtWebioEA2x2ERP_24VSnmpCommunityStringReadWrite,
       "wtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP": wtWebioEA2x2ERP_24VSnmpSystemTrapManagerIP,
       "wtWebioEA2x2ERP_24VSnmpSystemTrapEnable": wtWebioEA2x2ERP_24VSnmpSystemTrapEnable,
       "wtWebioEA2x2ERP_24VUDP": wtWebioEA2x2ERP_24VUDP,
       "wtWebioEA2x2ERP_24VUdpAdminPort": wtWebioEA2x2ERP_24VUdpAdminPort,
       "wtWebioEA2x2ERP_24VUdpEnable": wtWebioEA2x2ERP_24VUdpEnable,
       "wtWebioEA2x2ERP_24VUdpRemotePort": wtWebioEA2x2ERP_24VUdpRemotePort,
       "wtWebioEA2x2ERP_24VBinary": wtWebioEA2x2ERP_24VBinary,
       "wtWebioEA2x2ERP_24VBinaryModeCount": wtWebioEA2x2ERP_24VBinaryModeCount,
       "wtWebioEA2x2ERP_24VBinaryIfTable": wtWebioEA2x2ERP_24VBinaryIfTable,
       "wtWebioEA2x2ERP_24VBinaryIfEntry": wtWebioEA2x2ERP_24VBinaryIfEntry,
       "wtWebioEA2x2ERP_24VBinaryModeNo": wtWebioEA2x2ERP_24VBinaryModeNo,
       "wtWebioEA2x2ERP_24VBinaryTable": wtWebioEA2x2ERP_24VBinaryTable,
       "wtWebioEA2x2ERP_24VBinaryEntry": wtWebioEA2x2ERP_24VBinaryEntry,
       "wtWebioEA2x2ERP_24VBinaryOperationMode": wtWebioEA2x2ERP_24VBinaryOperationMode,
       "wtWebioEA2x2ERP_24VBinaryTcpServerLocalPort": wtWebioEA2x2ERP_24VBinaryTcpServerLocalPort,
       "wtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger": wtWebioEA2x2ERP_24VBinaryTcpServerInputTrigger,
       "wtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode": wtWebioEA2x2ERP_24VBinaryTcpServerApplicationMode,
       "wtWebioEA2x2ERP_24VBinaryTcpClientLocalPort": wtWebioEA2x2ERP_24VBinaryTcpClientLocalPort,
       "wtWebioEA2x2ERP_24VBinaryTcpClientServerPort": wtWebioEA2x2ERP_24VBinaryTcpClientServerPort,
       "wtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr": wtWebioEA2x2ERP_24VBinaryTcpClientServerIpAddr,
       "wtWebioEA2x2ERP_24VBinaryTcpClientServerPassword": wtWebioEA2x2ERP_24VBinaryTcpClientServerPassword,
       "wtWebioEA2x2ERP_24VBinaryTcpClientInactivity": wtWebioEA2x2ERP_24VBinaryTcpClientInactivity,
       "wtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger": wtWebioEA2x2ERP_24VBinaryTcpClientInputTrigger,
       "wtWebioEA2x2ERP_24VBinaryTcpClientInterval": wtWebioEA2x2ERP_24VBinaryTcpClientInterval,
       "wtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode": wtWebioEA2x2ERP_24VBinaryTcpClientApplicationMode,
       "wtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort": wtWebioEA2x2ERP_24VBinaryUdpPeerLocalPort,
       "wtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort": wtWebioEA2x2ERP_24VBinaryUdpPeerRemotePort,
       "wtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr": wtWebioEA2x2ERP_24VBinaryUdpPeerRemoteIpAddr,
       "wtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger": wtWebioEA2x2ERP_24VBinaryUdpPeerInputTrigger,
       "wtWebioEA2x2ERP_24VBinaryUdpPeerInterval": wtWebioEA2x2ERP_24VBinaryUdpPeerInterval,
       "wtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode": wtWebioEA2x2ERP_24VBinaryUdpPeerApplicationMode,
       "wtWebioEA2x2ERP_24VBinaryConnectedPort": wtWebioEA2x2ERP_24VBinaryConnectedPort,
       "wtWebioEA2x2ERP_24VBinaryConnectedIpAddr": wtWebioEA2x2ERP_24VBinaryConnectedIpAddr,
       "wtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort": wtWebioEA2x2ERP_24VBinaryTcpServerClientHttpPort,
       "wtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort": wtWebioEA2x2ERP_24VBinaryTcpClientServerHttpPort,
       "wtWebioEA2x2ERP_24VSyslog": wtWebioEA2x2ERP_24VSyslog,
       "wtWebioEA2x2ERP_24VSyslogServerIP": wtWebioEA2x2ERP_24VSyslogServerIP,
       "wtWebioEA2x2ERP_24VSyslogServerPort": wtWebioEA2x2ERP_24VSyslogServerPort,
       "wtWebioEA2x2ERP_24VSyslogSystemMessagesEnable": wtWebioEA2x2ERP_24VSyslogSystemMessagesEnable,
       "wtWebioEA2x2ERP_24VSyslogEnable": wtWebioEA2x2ERP_24VSyslogEnable,
       "wtWebioEA2x2ERP_24VFTP": wtWebioEA2x2ERP_24VFTP,
       "wtWebioEA2x2ERP_24VFTPServerIP": wtWebioEA2x2ERP_24VFTPServerIP,
       "wtWebioEA2x2ERP_24VFTPServerControlPort": wtWebioEA2x2ERP_24VFTPServerControlPort,
       "wtWebioEA2x2ERP_24VFTPUserName": wtWebioEA2x2ERP_24VFTPUserName,
       "wtWebioEA2x2ERP_24VFTPPassword": wtWebioEA2x2ERP_24VFTPPassword,
       "wtWebioEA2x2ERP_24VFTPAccount": wtWebioEA2x2ERP_24VFTPAccount,
       "wtWebioEA2x2ERP_24VFTPOption": wtWebioEA2x2ERP_24VFTPOption,
       "wtWebioEA2x2ERP_24VFTPEnable": wtWebioEA2x2ERP_24VFTPEnable,
       "wtWebioEA2x2ERP_24VWayBack": wtWebioEA2x2ERP_24VWayBack,
       "wtWebioEA2x2ERP_24VWayBackEnable": wtWebioEA2x2ERP_24VWayBackEnable,
       "wtWebioEA2x2ERP_24VWayBackServerControlPort": wtWebioEA2x2ERP_24VWayBackServerControlPort,
       "wtWebioEA2x2ERP_24VWayBackFTPPassword": wtWebioEA2x2ERP_24VWayBackFTPPassword,
       "wtWebioEA2x2ERP_24VWayBackFTPResponse": wtWebioEA2x2ERP_24VWayBackFTPResponse,
       "wtWebioEA2x2ERP_24VWayBackFTPTimeOut": wtWebioEA2x2ERP_24VWayBackFTPTimeOut,
       "wtWebioEA2x2ERP_24VOutputMode": wtWebioEA2x2ERP_24VOutputMode,
       "wtWebioEA2x2ERP_24VOutputModeTable": wtWebioEA2x2ERP_24VOutputModeTable,
       "wtWebioEA2x2ERP_24VOutputModeEntry": wtWebioEA2x2ERP_24VOutputModeEntry,
       "wtWebioEA2x2ERP_24VOutputModeBit": wtWebioEA2x2ERP_24VOutputModeBit,
       "wtWebioEA2x2ERP_24VSafetyTimeout": wtWebioEA2x2ERP_24VSafetyTimeout,
       "wtWebioEA2x2ERP_24VLoadControlEnable": wtWebioEA2x2ERP_24VLoadControlEnable,
       "wtWebioEA2x2ERP_24VPowerSupplyEnable": wtWebioEA2x2ERP_24VPowerSupplyEnable,
       "wtWebioEA2x2ERP_24VAlarm": wtWebioEA2x2ERP_24VAlarm,
       "wtWebioEA2x2ERP_24VAlarmCount": wtWebioEA2x2ERP_24VAlarmCount,
       "wtWebioEA2x2ERP_24VAlarmIfTable": wtWebioEA2x2ERP_24VAlarmIfTable,
       "wtWebioEA2x2ERP_24VAlarmIfEntry": wtWebioEA2x2ERP_24VAlarmIfEntry,
       "wtWebioEA2x2ERP_24VAlarmNo": wtWebioEA2x2ERP_24VAlarmNo,
       "wtWebioEA2x2ERP_24VAlarmTable": wtWebioEA2x2ERP_24VAlarmTable,
       "wtWebioEA2x2ERP_24VAlarmEntry": wtWebioEA2x2ERP_24VAlarmEntry,
       "wtWebioEA2x2ERP_24VAlarmInputTrigger": wtWebioEA2x2ERP_24VAlarmInputTrigger,
       "wtWebioEA2x2ERP_24VAlarmOutputTrigger": wtWebioEA2x2ERP_24VAlarmOutputTrigger,
       "wtWebioEA2x2ERP_24VAlarmSystemTrigger": wtWebioEA2x2ERP_24VAlarmSystemTrigger,
       "wtWebioEA2x2ERP_24VAlarmMaxCounterValue": wtWebioEA2x2ERP_24VAlarmMaxCounterValue,
       "wtWebioEA2x2ERP_24VAlarmInterval": wtWebioEA2x2ERP_24VAlarmInterval,
       "wtWebioEA2x2ERP_24VAlarmEnable": wtWebioEA2x2ERP_24VAlarmEnable,
       "wtWebioEA2x2ERP_24VAlarmMailAddr": wtWebioEA2x2ERP_24VAlarmMailAddr,
       "wtWebioEA2x2ERP_24VAlarmMailSubject": wtWebioEA2x2ERP_24VAlarmMailSubject,
       "wtWebioEA2x2ERP_24VAlarmMailText": wtWebioEA2x2ERP_24VAlarmMailText,
       "wtWebioEA2x2ERP_24VAlarmSnmpManagerIP": wtWebioEA2x2ERP_24VAlarmSnmpManagerIP,
       "wtWebioEA2x2ERP_24VAlarmSnmpTrapText": wtWebioEA2x2ERP_24VAlarmSnmpTrapText,
       "wtWebioEA2x2ERP_24VAlarmUdpIpAddr": wtWebioEA2x2ERP_24VAlarmUdpIpAddr,
       "wtWebioEA2x2ERP_24VAlarmUdpPort": wtWebioEA2x2ERP_24VAlarmUdpPort,
       "wtWebioEA2x2ERP_24VAlarmUdpText": wtWebioEA2x2ERP_24VAlarmUdpText,
       "wtWebioEA2x2ERP_24VAlarmTcpIpAddr": wtWebioEA2x2ERP_24VAlarmTcpIpAddr,
       "wtWebioEA2x2ERP_24VAlarmTcpPort": wtWebioEA2x2ERP_24VAlarmTcpPort,
       "wtWebioEA2x2ERP_24VAlarmTcpText": wtWebioEA2x2ERP_24VAlarmTcpText,
       "wtWebioEA2x2ERP_24VAlarmSyslogIpAddr": wtWebioEA2x2ERP_24VAlarmSyslogIpAddr,
       "wtWebioEA2x2ERP_24VAlarmSyslogPort": wtWebioEA2x2ERP_24VAlarmSyslogPort,
       "wtWebioEA2x2ERP_24VAlarmSyslogText": wtWebioEA2x2ERP_24VAlarmSyslogText,
       "wtWebioEA2x2ERP_24VAlarmFtpDataPort": wtWebioEA2x2ERP_24VAlarmFtpDataPort,
       "wtWebioEA2x2ERP_24VAlarmFtpFileName": wtWebioEA2x2ERP_24VAlarmFtpFileName,
       "wtWebioEA2x2ERP_24VAlarmFtpText": wtWebioEA2x2ERP_24VAlarmFtpText,
       "wtWebioEA2x2ERP_24VAlarmFtpOption": wtWebioEA2x2ERP_24VAlarmFtpOption,
       "wtWebioEA2x2ERP_24VAlarmTimerCron": wtWebioEA2x2ERP_24VAlarmTimerCron,
       "wtWebioEA2x2ERP_24VAlarmMailReleaseSubject": wtWebioEA2x2ERP_24VAlarmMailReleaseSubject,
       "wtWebioEA2x2ERP_24VAlarmMailReleaseText": wtWebioEA2x2ERP_24VAlarmMailReleaseText,
       "wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText": wtWebioEA2x2ERP_24VAlarmSnmpTrapReleaseText,
       "wtWebioEA2x2ERP_24VAlarmUdpReleaseText": wtWebioEA2x2ERP_24VAlarmUdpReleaseText,
       "wtWebioEA2x2ERP_24VAlarmTcpReleaseText": wtWebioEA2x2ERP_24VAlarmTcpReleaseText,
       "wtWebioEA2x2ERP_24VAlarmSyslogReleaseText": wtWebioEA2x2ERP_24VAlarmSyslogReleaseText,
       "wtWebioEA2x2ERP_24VAlarmFtpReleaseText": wtWebioEA2x2ERP_24VAlarmFtpReleaseText,
       "wtWebioEA2x2ERP_24VLoadControlView": wtWebioEA2x2ERP_24VLoadControlView,
       "wtWebioEA2x2ERP_24VLCShutDownView": wtWebioEA2x2ERP_24VLCShutDownView,
       "wtWebioEA2x2ERP_24VPorts": wtWebioEA2x2ERP_24VPorts,
       "wtWebioEA2x2ERP_24VInputPortTable": wtWebioEA2x2ERP_24VInputPortTable,
       "wtWebioEA2x2ERP_24VInputPortEntry": wtWebioEA2x2ERP_24VInputPortEntry,
       "wtWebioEA2x2ERP_24VPortInputName": wtWebioEA2x2ERP_24VPortInputName,
       "wtWebioEA2x2ERP_24VPortInputText": wtWebioEA2x2ERP_24VPortInputText,
       "wtWebioEA2x2ERP_24VPortInputMode": wtWebioEA2x2ERP_24VPortInputMode,
       "wtWebioEA2x2ERP_24VPortInputFilter": wtWebioEA2x2ERP_24VPortInputFilter,
       "wtWebioEA2x2ERP_24VPortInputBicountPulsePolarity": wtWebioEA2x2ERP_24VPortInputBicountPulsePolarity,
       "wtWebioEA2x2ERP_24VPortInputBicountInactivTimeout": wtWebioEA2x2ERP_24VPortInputBicountInactivTimeout,
       "wtWebioEA2x2ERP_24VOutputPortTable": wtWebioEA2x2ERP_24VOutputPortTable,
       "wtWebioEA2x2ERP_24VOutputPortEntry": wtWebioEA2x2ERP_24VOutputPortEntry,
       "wtWebioEA2x2ERP_24VPortOutputName": wtWebioEA2x2ERP_24VPortOutputName,
       "wtWebioEA2x2ERP_24VPortOutputText": wtWebioEA2x2ERP_24VPortOutputText,
       "wtWebioEA2x2ERP_24VPortOutputGroupMode": wtWebioEA2x2ERP_24VPortOutputGroupMode,
       "wtWebioEA2x2ERP_24VPortOutputSafetyState": wtWebioEA2x2ERP_24VPortOutputSafetyState,
       "wtWebioEA2x2ERP_24VPortLogicInputMask": wtWebioEA2x2ERP_24VPortLogicInputMask,
       "wtWebioEA2x2ERP_24VPortLogicInputInverter": wtWebioEA2x2ERP_24VPortLogicInputInverter,
       "wtWebioEA2x2ERP_24VPortLogicFunction": wtWebioEA2x2ERP_24VPortLogicFunction,
       "wtWebioEA2x2ERP_24VPortLogicOutputInverter": wtWebioEA2x2ERP_24VPortLogicOutputInverter,
       "wtWebioEA2x2ERP_24VPortPulseDuration": wtWebioEA2x2ERP_24VPortPulseDuration,
       "wtWebioEA2x2ERP_24VPortPulsePolarity": wtWebioEA2x2ERP_24VPortPulsePolarity,
       "wtWebioEA2x2ERP_24VManufact": wtWebioEA2x2ERP_24VManufact,
       "wtWebioEA2x2ERP_24VMfName": wtWebioEA2x2ERP_24VMfName,
       "wtWebioEA2x2ERP_24VMfAddr": wtWebioEA2x2ERP_24VMfAddr,
       "wtWebioEA2x2ERP_24VMfHotline": wtWebioEA2x2ERP_24VMfHotline,
       "wtWebioEA2x2ERP_24VMfInternet": wtWebioEA2x2ERP_24VMfInternet,
       "wtWebioEA2x2ERP_24VMfDeviceTyp": wtWebioEA2x2ERP_24VMfDeviceTyp,
       "wtWebioEA2x2ERP_24VDiag": wtWebioEA2x2ERP_24VDiag,
       "wtWebioEA2x2ERP_24VDiagErrorCount": wtWebioEA2x2ERP_24VDiagErrorCount,
       "wtWebioEA2x2ERP_24VDiagBinaryError": wtWebioEA2x2ERP_24VDiagBinaryError,
       "wtWebioEA2x2ERP_24VDiagErrorIndex": wtWebioEA2x2ERP_24VDiagErrorIndex,
       "wtWebioEA2x2ERP_24VDiagErrorMessage": wtWebioEA2x2ERP_24VDiagErrorMessage,
       "wtWebioEA2x2ERP_24VDiagErrorClear": wtWebioEA2x2ERP_24VDiagErrorClear,
       "wtIpWatcher_24V": wtIpWatcher_24V,
       "wtIpWatcher_24VAlert1": wtIpWatcher_24VAlert1,
       "wtIpWatcher_24VAlert2": wtIpWatcher_24VAlert2,
       "wtIpWatcher_24VAlert3": wtIpWatcher_24VAlert3,
       "wtIpWatcher_24VAlert4": wtIpWatcher_24VAlert4,
       "wtIpWatcher_24VAlert5": wtIpWatcher_24VAlert5,
       "wtIpWatcher_24VAlert6": wtIpWatcher_24VAlert6,
       "wtIpWatcher_24VAlert7": wtIpWatcher_24VAlert7,
       "wtIpWatcher_24VAlert8": wtIpWatcher_24VAlert8,
       "wtIpWatcher_24VAlert9": wtIpWatcher_24VAlert9,
       "wtIpWatcher_24VAlert10": wtIpWatcher_24VAlert10,
       "wtIpWatcher_24VAlert11": wtIpWatcher_24VAlert11,
       "wtIpWatcher_24VAlert12": wtIpWatcher_24VAlert12,
       "wtIpWatcher_24VAlert13": wtIpWatcher_24VAlert13,
       "wtIpWatcher_24VAlert14": wtIpWatcher_24VAlert14,
       "wtIpWatcher_24VAlert15": wtIpWatcher_24VAlert15,
       "wtIpWatcher_24VAlert16": wtIpWatcher_24VAlert16,
       "wtIpWatcher_24VAlert17": wtIpWatcher_24VAlert17,
       "wtIpWatcher_24VAlert18": wtIpWatcher_24VAlert18,
       "wtIpWatcher_24VAlert19": wtIpWatcher_24VAlert19,
       "wtIpWatcher_24VAlert20": wtIpWatcher_24VAlert20,
       "wtIpWatcher_24VAlert21": wtIpWatcher_24VAlert21,
       "wtIpWatcher_24VAlert22": wtIpWatcher_24VAlert22,
       "wtIpWatcher_24VAlert23": wtIpWatcher_24VAlert23,
       "wtIpWatcher_24VAlert24": wtIpWatcher_24VAlert24,
       "wtIpWatcher_24VAlert25": wtIpWatcher_24VAlert25,
       "wtIpWatcher_24VAlert26": wtIpWatcher_24VAlert26,
       "wtIpWatcher_24VAlert27": wtIpWatcher_24VAlert27,
       "wtIpWatcher_24VAlert28": wtIpWatcher_24VAlert28,
       "wtIpWatcher_24VAlert29": wtIpWatcher_24VAlert29,
       "wtIpWatcher_24VAlert30": wtIpWatcher_24VAlert30,
       "wtIpWatcher_24VAlert31": wtIpWatcher_24VAlert31,
       "wtIpWatcher_24VAlert32": wtIpWatcher_24VAlert32,
       "wtIpWatcher_24VAlert33": wtIpWatcher_24VAlert33,
       "wtIpWatcher_24VAlert34": wtIpWatcher_24VAlert34,
       "wtIpWatcher_24VAlert35": wtIpWatcher_24VAlert35,
       "wtIpWatcher_24VAlert36": wtIpWatcher_24VAlert36,
       "wtIpWatcher_24VAlertDiag": wtIpWatcher_24VAlertDiag,
       "wtIpWatcher_24VInOut": wtIpWatcher_24VInOut,
       "wtIpWatcher_24VInputs": wtIpWatcher_24VInputs,
       "wtIpWatcher_24VOutputs": wtIpWatcher_24VOutputs,
       "wtIpWatcher_24VInputTable": wtIpWatcher_24VInputTable,
       "wtIpWatcher_24VInputEntry": wtIpWatcher_24VInputEntry,
       "wtIpWatcher_24VInputNo": wtIpWatcher_24VInputNo,
       "wtIpWatcher_24VInputCounter": wtIpWatcher_24VInputCounter,
       "wtIpWatcher_24VInputCounterClear": wtIpWatcher_24VInputCounterClear,
       "wtIpWatcher_24VInputState": wtIpWatcher_24VInputState,
       "wtIpWatcher_24VInputValue": wtIpWatcher_24VInputValue,
       "wtIpWatcher_24VOutputTable": wtIpWatcher_24VOutputTable,
       "wtIpWatcher_24VOutputEntry": wtIpWatcher_24VOutputEntry,
       "wtIpWatcher_24VOutputNo": wtIpWatcher_24VOutputNo,
       "wtIpWatcher_24VOutputState": wtIpWatcher_24VOutputState,
       "wtIpWatcher_24VOutputValue": wtIpWatcher_24VOutputValue,
       "wtIpWatcher_24VSetOutput": wtIpWatcher_24VSetOutput,
       "wtIpWatcher_24VAlarmOutputTable": wtIpWatcher_24VAlarmOutputTable,
       "wtIpWatcher_24VAlarmOutputEntry": wtIpWatcher_24VAlarmOutputEntry,
       "wtIpWatcher_24VAlarmOutputState": wtIpWatcher_24VAlarmOutputState,
       "wtIpWatcher_24VAlarmTriggerState": wtIpWatcher_24VAlarmTriggerState,
       "wtIpWatcher_24VSessCntrl": wtIpWatcher_24VSessCntrl,
       "wtIpWatcher_24VSessCntrlPassword": wtIpWatcher_24VSessCntrlPassword,
       "wtIpWatcher_24VSessCntrlConfigMode": wtIpWatcher_24VSessCntrlConfigMode,
       "wtIpWatcher_24VSessCntrlLogout": wtIpWatcher_24VSessCntrlLogout,
       "wtIpWatcher_24VSessCntrlAdminPassword": wtIpWatcher_24VSessCntrlAdminPassword,
       "wtIpWatcher_24VSessCntrlConfigPassword": wtIpWatcher_24VSessCntrlConfigPassword,
       "wtIpWatcher_24VConfig": wtIpWatcher_24VConfig,
       "wtIpWatcher_24VDevice": wtIpWatcher_24VDevice,
       "wtIpWatcher_24VText": wtIpWatcher_24VText,
       "wtIpWatcher_24VDeviceName": wtIpWatcher_24VDeviceName,
       "wtIpWatcher_24VDeviceText": wtIpWatcher_24VDeviceText,
       "wtIpWatcher_24VDeviceLocation": wtIpWatcher_24VDeviceLocation,
       "wtIpWatcher_24VDeviceContact": wtIpWatcher_24VDeviceContact,
       "wtIpWatcher_24VTimeDate": wtIpWatcher_24VTimeDate,
       "wtIpWatcher_24VTimeZone": wtIpWatcher_24VTimeZone,
       "wtIpWatcher_24VTzOffsetHrs": wtIpWatcher_24VTzOffsetHrs,
       "wtIpWatcher_24VTzOffsetMin": wtIpWatcher_24VTzOffsetMin,
       "wtIpWatcher_24VTzEnable": wtIpWatcher_24VTzEnable,
       "wtIpWatcher_24VStTzOffsetHrs": wtIpWatcher_24VStTzOffsetHrs,
       "wtIpWatcher_24VStTzOffsetMin": wtIpWatcher_24VStTzOffsetMin,
       "wtIpWatcher_24VStTzEnable": wtIpWatcher_24VStTzEnable,
       "wtIpWatcher_24VStTzStartMonth": wtIpWatcher_24VStTzStartMonth,
       "wtIpWatcher_24VStTzStartMode": wtIpWatcher_24VStTzStartMode,
       "wtIpWatcher_24VStTzStartWday": wtIpWatcher_24VStTzStartWday,
       "wtIpWatcher_24VStTzStartHrs": wtIpWatcher_24VStTzStartHrs,
       "wtIpWatcher_24VStTzStartMin": wtIpWatcher_24VStTzStartMin,
       "wtIpWatcher_24VStTzStopMonth": wtIpWatcher_24VStTzStopMonth,
       "wtIpWatcher_24VStTzStopMode": wtIpWatcher_24VStTzStopMode,
       "wtIpWatcher_24VStTzStopWday": wtIpWatcher_24VStTzStopWday,
       "wtIpWatcher_24VStTzStopHrs": wtIpWatcher_24VStTzStopHrs,
       "wtIpWatcher_24VStTzStopMin": wtIpWatcher_24VStTzStopMin,
       "wtIpWatcher_24VTimeServer": wtIpWatcher_24VTimeServer,
       "wtIpWatcher_24VTimeServer1": wtIpWatcher_24VTimeServer1,
       "wtIpWatcher_24VTimeServer2": wtIpWatcher_24VTimeServer2,
       "wtIpWatcher_24VTsEnable": wtIpWatcher_24VTsEnable,
       "wtIpWatcher_24VTsSyncTime": wtIpWatcher_24VTsSyncTime,
       "wtIpWatcher_24VDeviceClock": wtIpWatcher_24VDeviceClock,
       "wtIpWatcher_24VClockHrs": wtIpWatcher_24VClockHrs,
       "wtIpWatcher_24VClockMin": wtIpWatcher_24VClockMin,
       "wtIpWatcher_24VClockDay": wtIpWatcher_24VClockDay,
       "wtIpWatcher_24VClockMonth": wtIpWatcher_24VClockMonth,
       "wtIpWatcher_24VClockYear": wtIpWatcher_24VClockYear,
       "wtIpWatcher_24VBasic": wtIpWatcher_24VBasic,
       "wtIpWatcher_24VNetwork": wtIpWatcher_24VNetwork,
       "wtIpWatcher_24VIpAddress": wtIpWatcher_24VIpAddress,
       "wtIpWatcher_24VSubnetMask": wtIpWatcher_24VSubnetMask,
       "wtIpWatcher_24VGateway": wtIpWatcher_24VGateway,
       "wtIpWatcher_24VDnsServer1": wtIpWatcher_24VDnsServer1,
       "wtIpWatcher_24VDnsServer2": wtIpWatcher_24VDnsServer2,
       "wtIpWatcher_24VAddConfig": wtIpWatcher_24VAddConfig,
       "wtIpWatcher_24VHTTP": wtIpWatcher_24VHTTP,
       "wtIpWatcher_24VHttpPort": wtIpWatcher_24VHttpPort,
       "wtIpWatcher_24VMail": wtIpWatcher_24VMail,
       "wtIpWatcher_24VMailAdName": wtIpWatcher_24VMailAdName,
       "wtIpWatcher_24VMailReply": wtIpWatcher_24VMailReply,
       "wtIpWatcher_24VMailServer": wtIpWatcher_24VMailServer,
       "wtIpWatcher_24VMailEnable": wtIpWatcher_24VMailEnable,
       "wtIpWatcher_24VMailAuthentication": wtIpWatcher_24VMailAuthentication,
       "wtIpWatcher_24VMailAuthUser": wtIpWatcher_24VMailAuthUser,
       "wtIpWatcher_24VMailAuthPassword": wtIpWatcher_24VMailAuthPassword,
       "wtIpWatcher_24VMailPop3Server": wtIpWatcher_24VMailPop3Server,
       "wtIpWatcher_24VSNMP": wtIpWatcher_24VSNMP,
       "wtIpWatcher_24VSnmpEnable": wtIpWatcher_24VSnmpEnable,
       "wtIpWatcher_24VSnmpCommunityStringRead": wtIpWatcher_24VSnmpCommunityStringRead,
       "wtIpWatcher_24VSnmpCommunityStringReadWrite": wtIpWatcher_24VSnmpCommunityStringReadWrite,
       "wtIpWatcher_24VSnmpSystemTrapManagerIP": wtIpWatcher_24VSnmpSystemTrapManagerIP,
       "wtIpWatcher_24VSnmpSystemTrapEnable": wtIpWatcher_24VSnmpSystemTrapEnable,
       "wtIpWatcher_24VUDP": wtIpWatcher_24VUDP,
       "wtIpWatcher_24VUdpAdminPort": wtIpWatcher_24VUdpAdminPort,
       "wtIpWatcher_24VUdpEnable": wtIpWatcher_24VUdpEnable,
       "wtIpWatcher_24VUdpRemotePort": wtIpWatcher_24VUdpRemotePort,
       "wtIpWatcher_24VSyslog": wtIpWatcher_24VSyslog,
       "wtIpWatcher_24VSyslogServerIP": wtIpWatcher_24VSyslogServerIP,
       "wtIpWatcher_24VSyslogServerPort": wtIpWatcher_24VSyslogServerPort,
       "wtIpWatcher_24VSyslogSystemMessagesEnable": wtIpWatcher_24VSyslogSystemMessagesEnable,
       "wtIpWatcher_24VSyslogEnable": wtIpWatcher_24VSyslogEnable,
       "wtIpWatcher_24VFTP": wtIpWatcher_24VFTP,
       "wtIpWatcher_24VFTPServerIP": wtIpWatcher_24VFTPServerIP,
       "wtIpWatcher_24VFTPServerControlPort": wtIpWatcher_24VFTPServerControlPort,
       "wtIpWatcher_24VFTPUserName": wtIpWatcher_24VFTPUserName,
       "wtIpWatcher_24VFTPPassword": wtIpWatcher_24VFTPPassword,
       "wtIpWatcher_24VFTPAccount": wtIpWatcher_24VFTPAccount,
       "wtIpWatcher_24VFTPOption": wtIpWatcher_24VFTPOption,
       "wtIpWatcher_24VFTPEnable": wtIpWatcher_24VFTPEnable,
       "wtIpWatcher_24VIpList": wtIpWatcher_24VIpList,
       "wtIpWatcher_24VIpListCount": wtIpWatcher_24VIpListCount,
       "wtIpWatcher_24VIpListIfTable": wtIpWatcher_24VIpListIfTable,
       "wtIpWatcher_24VIpListIfEntry": wtIpWatcher_24VIpListIfEntry,
       "wtIpWatcher_24VIpListNo": wtIpWatcher_24VIpListNo,
       "wtIpWatcher_24VIpListTable": wtIpWatcher_24VIpListTable,
       "wtIpWatcher_24VIpListEntry": wtIpWatcher_24VIpListEntry,
       "wtIpWatcher_24VIpListName": wtIpWatcher_24VIpListName,
       "wtIpWatcher_24VIpListPort": wtIpWatcher_24VIpListPort,
       "wtIpWatcher_24VIpListService": wtIpWatcher_24VIpListService,
       "wtIpWatcher_24VIpListEnable": wtIpWatcher_24VIpListEnable,
       "wtIpWatcher_24VIpListAlias": wtIpWatcher_24VIpListAlias,
       "wtIpWatcher_24VOutputMode": wtIpWatcher_24VOutputMode,
       "wtIpWatcher_24VPowerSupplyEnable": wtIpWatcher_24VPowerSupplyEnable,
       "wtIpWatcher_24VAlarm": wtIpWatcher_24VAlarm,
       "wtIpWatcher_24VAlarmCount": wtIpWatcher_24VAlarmCount,
       "wtIpWatcher_24VAlarmIfTable": wtIpWatcher_24VAlarmIfTable,
       "wtIpWatcher_24VAlarmIfEntry": wtIpWatcher_24VAlarmIfEntry,
       "wtIpWatcher_24VAlarmNo": wtIpWatcher_24VAlarmNo,
       "wtIpWatcher_24VAlarmTable": wtIpWatcher_24VAlarmTable,
       "wtIpWatcher_24VAlarmEntry": wtIpWatcher_24VAlarmEntry,
       "wtIpWatcher_24VAlarmInterval": wtIpWatcher_24VAlarmInterval,
       "wtIpWatcher_24VAlarmEnable": wtIpWatcher_24VAlarmEnable,
       "wtIpWatcher_24VAlarmMailAddr": wtIpWatcher_24VAlarmMailAddr,
       "wtIpWatcher_24VAlarmMailSubject": wtIpWatcher_24VAlarmMailSubject,
       "wtIpWatcher_24VAlarmMailText": wtIpWatcher_24VAlarmMailText,
       "wtIpWatcher_24VAlarmSnmpManagerIP": wtIpWatcher_24VAlarmSnmpManagerIP,
       "wtIpWatcher_24VAlarmSnmpTrapText": wtIpWatcher_24VAlarmSnmpTrapText,
       "wtIpWatcher_24VAlarmUdpIpAddr": wtIpWatcher_24VAlarmUdpIpAddr,
       "wtIpWatcher_24VAlarmUdpPort": wtIpWatcher_24VAlarmUdpPort,
       "wtIpWatcher_24VAlarmUdpText": wtIpWatcher_24VAlarmUdpText,
       "wtIpWatcher_24VAlarmTcpIpAddr": wtIpWatcher_24VAlarmTcpIpAddr,
       "wtIpWatcher_24VAlarmTcpPort": wtIpWatcher_24VAlarmTcpPort,
       "wtIpWatcher_24VAlarmTcpText": wtIpWatcher_24VAlarmTcpText,
       "wtIpWatcher_24VAlarmSyslogIpAddr": wtIpWatcher_24VAlarmSyslogIpAddr,
       "wtIpWatcher_24VAlarmSyslogPort": wtIpWatcher_24VAlarmSyslogPort,
       "wtIpWatcher_24VAlarmSyslogText": wtIpWatcher_24VAlarmSyslogText,
       "wtIpWatcher_24VAlarmFtpDataPort": wtIpWatcher_24VAlarmFtpDataPort,
       "wtIpWatcher_24VAlarmFtpFileName": wtIpWatcher_24VAlarmFtpFileName,
       "wtIpWatcher_24VAlarmFtpText": wtIpWatcher_24VAlarmFtpText,
       "wtIpWatcher_24VAlarmFtpOption": wtIpWatcher_24VAlarmFtpOption,
       "wtIpWatcher_24VAlarmTimerCron": wtIpWatcher_24VAlarmTimerCron,
       "wtIpWatcher_24VAlarmMailReleaseSubject": wtIpWatcher_24VAlarmMailReleaseSubject,
       "wtIpWatcher_24VAlarmMailReleaseText": wtIpWatcher_24VAlarmMailReleaseText,
       "wtIpWatcher_24VAlarmSnmpTrapReleaseText": wtIpWatcher_24VAlarmSnmpTrapReleaseText,
       "wtIpWatcher_24VAlarmUdpReleaseText": wtIpWatcher_24VAlarmUdpReleaseText,
       "wtIpWatcher_24VAlarmTcpReleaseText": wtIpWatcher_24VAlarmTcpReleaseText,
       "wtIpWatcher_24VAlarmSyslogReleaseText": wtIpWatcher_24VAlarmSyslogReleaseText,
       "wtIpWatcher_24VAlarmFtpReleaseText": wtIpWatcher_24VAlarmFtpReleaseText,
       "wtIpWatcher_24VAlarmName": wtIpWatcher_24VAlarmName,
       "wtIpWatcher_24VAlarmGlobalEnable": wtIpWatcher_24VAlarmGlobalEnable,
       "wtIpWatcher_24VAlarmCounterClear": wtIpWatcher_24VAlarmCounterClear,
       "wtIpWatcher_24VAlarmAckEnable": wtIpWatcher_24VAlarmAckEnable,
       "wtIpWatcher_24VAlarmAckPort": wtIpWatcher_24VAlarmAckPort,
       "wtIpWatcher_24VAlarmSetPort": wtIpWatcher_24VAlarmSetPort,
       "wtIpWatcher_24VAlarmMailTrgClearSubject": wtIpWatcher_24VAlarmMailTrgClearSubject,
       "wtIpWatcher_24VAlarmMailTrgClearText": wtIpWatcher_24VAlarmMailTrgClearText,
       "wtIpWatcher_24VAlarmSnmpTrapTrgClearText": wtIpWatcher_24VAlarmSnmpTrapTrgClearText,
       "wtIpWatcher_24VAlarmUdpTrgClearText": wtIpWatcher_24VAlarmUdpTrgClearText,
       "wtIpWatcher_24VAlarmTcpTrgClearText": wtIpWatcher_24VAlarmTcpTrgClearText,
       "wtIpWatcher_24VAlarmSyslogTrgClearText": wtIpWatcher_24VAlarmSyslogTrgClearText,
       "wtIpWatcher_24VAlarmFtpTrgClearText": wtIpWatcher_24VAlarmFtpTrgClearText,
       "wtIpWatcher_24VAlarmMailTrapTxEnable": wtIpWatcher_24VAlarmMailTrapTxEnable,
       "wtIpWatcher_24VAlarmSnmpTrapTrapTxEnable": wtIpWatcher_24VAlarmSnmpTrapTrapTxEnable,
       "wtIpWatcher_24VAlarmUdpTrapTxEnable": wtIpWatcher_24VAlarmUdpTrapTxEnable,
       "wtIpWatcher_24VAlarmTcpTrapTxEnable": wtIpWatcher_24VAlarmTcpTrapTxEnable,
       "wtIpWatcher_24VAlarmSyslogTrapTxEnable": wtIpWatcher_24VAlarmSyslogTrapTxEnable,
       "wtIpWatcher_24VAlarmFtpTrapTxEnable": wtIpWatcher_24VAlarmFtpTrapTxEnable,
       "wtIpWatcher_24VAlarmTriggerCount": wtIpWatcher_24VAlarmTriggerCount,
       "wtIpWatcher_24VAlarmPollingRate": wtIpWatcher_24VAlarmPollingRate,
       "wtIpWatcher_24VPorts": wtIpWatcher_24VPorts,
       "wtIpWatcher_24VInputPortTable": wtIpWatcher_24VInputPortTable,
       "wtIpWatcher_24VInputPortEntry": wtIpWatcher_24VInputPortEntry,
       "wtIpWatcher_24VPortInputName": wtIpWatcher_24VPortInputName,
       "wtIpWatcher_24VPortInputText": wtIpWatcher_24VPortInputText,
       "wtIpWatcher_24VPortInputFilter": wtIpWatcher_24VPortInputFilter,
       "wtIpWatcher_24VOutputPortTable": wtIpWatcher_24VOutputPortTable,
       "wtIpWatcher_24VOutputPortEntry": wtIpWatcher_24VOutputPortEntry,
       "wtIpWatcher_24VPortOutputName": wtIpWatcher_24VPortOutputName,
       "wtIpWatcher_24VPortOutputText": wtIpWatcher_24VPortOutputText,
       "wtIpWatcher_24VPortPulseDuration": wtIpWatcher_24VPortPulseDuration,
       "wtIpWatcher_24VPortPulsePolarity": wtIpWatcher_24VPortPulsePolarity,
       "wtIpWatcher_24VManufact": wtIpWatcher_24VManufact,
       "wtIpWatcher_24VMfName": wtIpWatcher_24VMfName,
       "wtIpWatcher_24VMfAddr": wtIpWatcher_24VMfAddr,
       "wtIpWatcher_24VMfHotline": wtIpWatcher_24VMfHotline,
       "wtIpWatcher_24VMfInternet": wtIpWatcher_24VMfInternet,
       "wtIpWatcher_24VMfDeviceTyp": wtIpWatcher_24VMfDeviceTyp,
       "wtIpWatcher_24VDiag": wtIpWatcher_24VDiag,
       "wtIpWatcher_24VDiagErrorCount": wtIpWatcher_24VDiagErrorCount,
       "wtIpWatcher_24VDiagBinaryError": wtIpWatcher_24VDiagBinaryError,
       "wtIpWatcher_24VDiagErrorIndex": wtIpWatcher_24VDiagErrorIndex,
       "wtIpWatcher_24VDiagErrorMessage": wtIpWatcher_24VDiagErrorMessage,
       "wtIpWatcher_24VDiagErrorClear": wtIpWatcher_24VDiagErrorClear,
       "wtTrapReceiver2x2": wtTrapReceiver2x2,
       "wtTrapReceiver2x2Alert1": wtTrapReceiver2x2Alert1,
       "wtTrapReceiver2x2Alert2": wtTrapReceiver2x2Alert2,
       "wtTrapReceiver2x2Alert3": wtTrapReceiver2x2Alert3,
       "wtTrapReceiver2x2Alert4": wtTrapReceiver2x2Alert4,
       "wtTrapReceiver2x2Alert5": wtTrapReceiver2x2Alert5,
       "wtTrapReceiver2x2Alert6": wtTrapReceiver2x2Alert6,
       "wtTrapReceiver2x2Alert7": wtTrapReceiver2x2Alert7,
       "wtTrapReceiver2x2Alert8": wtTrapReceiver2x2Alert8,
       "wtTrapReceiver2x2Alert9": wtTrapReceiver2x2Alert9,
       "wtTrapReceiver2x2Alert10": wtTrapReceiver2x2Alert10,
       "wtTrapReceiver2x2Alert11": wtTrapReceiver2x2Alert11,
       "wtTrapReceiver2x2Alert12": wtTrapReceiver2x2Alert12,
       "wtTrapReceiver2x2AlertDiag": wtTrapReceiver2x2AlertDiag,
       "wtTrapReceiver2x2InOut": wtTrapReceiver2x2InOut,
       "wtTrapReceiver2x2Inputs": wtTrapReceiver2x2Inputs,
       "wtTrapReceiver2x2Outputs": wtTrapReceiver2x2Outputs,
       "wtTrapReceiver2x2InputTable": wtTrapReceiver2x2InputTable,
       "wtTrapReceiver2x2InputEntry": wtTrapReceiver2x2InputEntry,
       "wtTrapReceiver2x2InputNo": wtTrapReceiver2x2InputNo,
       "wtTrapReceiver2x2InputState": wtTrapReceiver2x2InputState,
       "wtTrapReceiver2x2InputValue": wtTrapReceiver2x2InputValue,
       "wtTrapReceiver2x2OutputTable": wtTrapReceiver2x2OutputTable,
       "wtTrapReceiver2x2OutputEntry": wtTrapReceiver2x2OutputEntry,
       "wtTrapReceiver2x2OutputNo": wtTrapReceiver2x2OutputNo,
       "wtTrapReceiver2x2OutputState": wtTrapReceiver2x2OutputState,
       "wtTrapReceiver2x2OutputValue": wtTrapReceiver2x2OutputValue,
       "wtTrapReceiver2x2ActionOutputTable": wtTrapReceiver2x2ActionOutputTable,
       "wtTrapReceiver2x2ActionOutputEntry": wtTrapReceiver2x2ActionOutputEntry,
       "wtTrapReceiver2x2ActionOutputState": wtTrapReceiver2x2ActionOutputState,
       "wtTrapReceiver2x2ActionTriggerState": wtTrapReceiver2x2ActionTriggerState,
       "wtTrapReceiver2x2SystemTimerTable": wtTrapReceiver2x2SystemTimerTable,
       "wtTrapReceiver2x2SystemTimerEntry": wtTrapReceiver2x2SystemTimerEntry,
       "wtTrapReceiver2x2SystemTimerNo": wtTrapReceiver2x2SystemTimerNo,
       "wtTrapReceiver2x2ButtonTable": wtTrapReceiver2x2ButtonTable,
       "wtTrapReceiver2x2ButtonEntry": wtTrapReceiver2x2ButtonEntry,
       "wtTrapReceiver2x2ButtonNo": wtTrapReceiver2x2ButtonNo,
       "wtTrapReceiver2x2SessCntrl": wtTrapReceiver2x2SessCntrl,
       "wtTrapReceiver2x2SessCntrlPassword": wtTrapReceiver2x2SessCntrlPassword,
       "wtTrapReceiver2x2SessCntrlConfigMode": wtTrapReceiver2x2SessCntrlConfigMode,
       "wtTrapReceiver2x2SessCntrlLogout": wtTrapReceiver2x2SessCntrlLogout,
       "wtTrapReceiver2x2SessCntrlAdminPassword": wtTrapReceiver2x2SessCntrlAdminPassword,
       "wtTrapReceiver2x2SessCntrlConfigPassword": wtTrapReceiver2x2SessCntrlConfigPassword,
       "wtTrapReceiver2x2Config": wtTrapReceiver2x2Config,
       "wtTrapReceiver2x2Device": wtTrapReceiver2x2Device,
       "wtTrapReceiver2x2Text": wtTrapReceiver2x2Text,
       "wtTrapReceiver2x2DeviceName": wtTrapReceiver2x2DeviceName,
       "wtTrapReceiver2x2DeviceText": wtTrapReceiver2x2DeviceText,
       "wtTrapReceiver2x2DeviceLocation": wtTrapReceiver2x2DeviceLocation,
       "wtTrapReceiver2x2DeviceContact": wtTrapReceiver2x2DeviceContact,
       "wtTrapReceiver2x2TimeDate": wtTrapReceiver2x2TimeDate,
       "wtTrapReceiver2x2TimeZone": wtTrapReceiver2x2TimeZone,
       "wtTrapReceiver2x2TzOffsetHrs": wtTrapReceiver2x2TzOffsetHrs,
       "wtTrapReceiver2x2TzOffsetMin": wtTrapReceiver2x2TzOffsetMin,
       "wtTrapReceiver2x2TzEnable": wtTrapReceiver2x2TzEnable,
       "wtTrapReceiver2x2StTzOffsetHrs": wtTrapReceiver2x2StTzOffsetHrs,
       "wtTrapReceiver2x2StTzOffsetMin": wtTrapReceiver2x2StTzOffsetMin,
       "wtTrapReceiver2x2StTzEnable": wtTrapReceiver2x2StTzEnable,
       "wtTrapReceiver2x2StTzStartMonth": wtTrapReceiver2x2StTzStartMonth,
       "wtTrapReceiver2x2StTzStartMode": wtTrapReceiver2x2StTzStartMode,
       "wtTrapReceiver2x2StTzStartWday": wtTrapReceiver2x2StTzStartWday,
       "wtTrapReceiver2x2StTzStartHrs": wtTrapReceiver2x2StTzStartHrs,
       "wtTrapReceiver2x2StTzStartMin": wtTrapReceiver2x2StTzStartMin,
       "wtTrapReceiver2x2StTzStopMonth": wtTrapReceiver2x2StTzStopMonth,
       "wtTrapReceiver2x2StTzStopMode": wtTrapReceiver2x2StTzStopMode,
       "wtTrapReceiver2x2StTzStopWday": wtTrapReceiver2x2StTzStopWday,
       "wtTrapReceiver2x2StTzStopHrs": wtTrapReceiver2x2StTzStopHrs,
       "wtTrapReceiver2x2StTzStopMin": wtTrapReceiver2x2StTzStopMin,
       "wtTrapReceiver2x2TimeServer": wtTrapReceiver2x2TimeServer,
       "wtTrapReceiver2x2TimeServer1": wtTrapReceiver2x2TimeServer1,
       "wtTrapReceiver2x2TimeServer2": wtTrapReceiver2x2TimeServer2,
       "wtTrapReceiver2x2TsEnable": wtTrapReceiver2x2TsEnable,
       "wtTrapReceiver2x2TsSyncTime": wtTrapReceiver2x2TsSyncTime,
       "wtTrapReceiver2x2DeviceClock": wtTrapReceiver2x2DeviceClock,
       "wtTrapReceiver2x2ClockHrs": wtTrapReceiver2x2ClockHrs,
       "wtTrapReceiver2x2ClockMin": wtTrapReceiver2x2ClockMin,
       "wtTrapReceiver2x2ClockDay": wtTrapReceiver2x2ClockDay,
       "wtTrapReceiver2x2ClockMonth": wtTrapReceiver2x2ClockMonth,
       "wtTrapReceiver2x2ClockYear": wtTrapReceiver2x2ClockYear,
       "wtTrapReceiver2x2Basic": wtTrapReceiver2x2Basic,
       "wtTrapReceiver2x2Network": wtTrapReceiver2x2Network,
       "wtTrapReceiver2x2IpAddress": wtTrapReceiver2x2IpAddress,
       "wtTrapReceiver2x2SubnetMask": wtTrapReceiver2x2SubnetMask,
       "wtTrapReceiver2x2Gateway": wtTrapReceiver2x2Gateway,
       "wtTrapReceiver2x2DnsServer1": wtTrapReceiver2x2DnsServer1,
       "wtTrapReceiver2x2DnsServer2": wtTrapReceiver2x2DnsServer2,
       "wtTrapReceiver2x2AddConfig": wtTrapReceiver2x2AddConfig,
       "wtTrapReceiver2x2HTTP": wtTrapReceiver2x2HTTP,
       "wtTrapReceiver2x2HttpPort": wtTrapReceiver2x2HttpPort,
       "wtTrapReceiver2x2Mail": wtTrapReceiver2x2Mail,
       "wtTrapReceiver2x2MailAdName": wtTrapReceiver2x2MailAdName,
       "wtTrapReceiver2x2MailReply": wtTrapReceiver2x2MailReply,
       "wtTrapReceiver2x2MailServer": wtTrapReceiver2x2MailServer,
       "wtTrapReceiver2x2MailEnable": wtTrapReceiver2x2MailEnable,
       "wtTrapReceiver2x2MailAuthentication": wtTrapReceiver2x2MailAuthentication,
       "wtTrapReceiver2x2MailAuthUser": wtTrapReceiver2x2MailAuthUser,
       "wtTrapReceiver2x2MailAuthPassword": wtTrapReceiver2x2MailAuthPassword,
       "wtTrapReceiver2x2MailPop3Server": wtTrapReceiver2x2MailPop3Server,
       "wtTrapReceiver2x2SNMP": wtTrapReceiver2x2SNMP,
       "wtTrapReceiver2x2SnmpEnable": wtTrapReceiver2x2SnmpEnable,
       "wtTrapReceiver2x2SnmpCommunityStringRead": wtTrapReceiver2x2SnmpCommunityStringRead,
       "wtTrapReceiver2x2SnmpCommunityStringReadWrite": wtTrapReceiver2x2SnmpCommunityStringReadWrite,
       "wtTrapReceiver2x2SnmpSystemTrapManagerIP": wtTrapReceiver2x2SnmpSystemTrapManagerIP,
       "wtTrapReceiver2x2SnmpSystemTrapEnable": wtTrapReceiver2x2SnmpSystemTrapEnable,
       "wtTrapReceiver2x2UDP": wtTrapReceiver2x2UDP,
       "wtTrapReceiver2x2UdpAdminPort": wtTrapReceiver2x2UdpAdminPort,
       "wtTrapReceiver2x2UdpEnable": wtTrapReceiver2x2UdpEnable,
       "wtTrapReceiver2x2UdpRemotePort": wtTrapReceiver2x2UdpRemotePort,
       "wtTrapReceiver2x2Syslog": wtTrapReceiver2x2Syslog,
       "wtTrapReceiver2x2SyslogServerIP": wtTrapReceiver2x2SyslogServerIP,
       "wtTrapReceiver2x2SyslogServerPort": wtTrapReceiver2x2SyslogServerPort,
       "wtTrapReceiver2x2SyslogSystemMessagesEnable": wtTrapReceiver2x2SyslogSystemMessagesEnable,
       "wtTrapReceiver2x2SyslogEnable": wtTrapReceiver2x2SyslogEnable,
       "wtTrapReceiver2x2FTP": wtTrapReceiver2x2FTP,
       "wtTrapReceiver2x2FTPServerIP": wtTrapReceiver2x2FTPServerIP,
       "wtTrapReceiver2x2FTPServerControlPort": wtTrapReceiver2x2FTPServerControlPort,
       "wtTrapReceiver2x2FTPUserName": wtTrapReceiver2x2FTPUserName,
       "wtTrapReceiver2x2FTPPassword": wtTrapReceiver2x2FTPPassword,
       "wtTrapReceiver2x2FTPAccount": wtTrapReceiver2x2FTPAccount,
       "wtTrapReceiver2x2FTPOption": wtTrapReceiver2x2FTPOption,
       "wtTrapReceiver2x2FTPEnable": wtTrapReceiver2x2FTPEnable,
       "wtTrapReceiver2x2OutputMode": wtTrapReceiver2x2OutputMode,
       "wtTrapReceiver2x2PowerSupplyEnable": wtTrapReceiver2x2PowerSupplyEnable,
       "wtTrapReceiver2x2Action": wtTrapReceiver2x2Action,
       "wtTrapReceiver2x2ActionCount": wtTrapReceiver2x2ActionCount,
       "wtTrapReceiver2x2ActionIfTable": wtTrapReceiver2x2ActionIfTable,
       "wtTrapReceiver2x2ActionIfEntry": wtTrapReceiver2x2ActionIfEntry,
       "wtTrapReceiver2x2ActionNo": wtTrapReceiver2x2ActionNo,
       "wtTrapReceiver2x2ActionTable": wtTrapReceiver2x2ActionTable,
       "wtTrapReceiver2x2ActionEntry": wtTrapReceiver2x2ActionEntry,
       "wtTrapReceiver2x2ActionInputTrigger": wtTrapReceiver2x2ActionInputTrigger,
       "wtTrapReceiver2x2ActionInterval": wtTrapReceiver2x2ActionInterval,
       "wtTrapReceiver2x2ActionEnable": wtTrapReceiver2x2ActionEnable,
       "wtTrapReceiver2x2ActionMailAddr": wtTrapReceiver2x2ActionMailAddr,
       "wtTrapReceiver2x2ActionMailSubject": wtTrapReceiver2x2ActionMailSubject,
       "wtTrapReceiver2x2ActionMailText": wtTrapReceiver2x2ActionMailText,
       "wtTrapReceiver2x2ActionSnmpManagerIP": wtTrapReceiver2x2ActionSnmpManagerIP,
       "wtTrapReceiver2x2ActionSnmpTrapText": wtTrapReceiver2x2ActionSnmpTrapText,
       "wtTrapReceiver2x2ActionUdpIpAddr": wtTrapReceiver2x2ActionUdpIpAddr,
       "wtTrapReceiver2x2ActionUdpPort": wtTrapReceiver2x2ActionUdpPort,
       "wtTrapReceiver2x2ActionUdpText": wtTrapReceiver2x2ActionUdpText,
       "wtTrapReceiver2x2ActionTcpIpAddr": wtTrapReceiver2x2ActionTcpIpAddr,
       "wtTrapReceiver2x2ActionTcpPort": wtTrapReceiver2x2ActionTcpPort,
       "wtTrapReceiver2x2ActionTcpText": wtTrapReceiver2x2ActionTcpText,
       "wtTrapReceiver2x2ActionSyslogIpAddr": wtTrapReceiver2x2ActionSyslogIpAddr,
       "wtTrapReceiver2x2ActionSyslogPort": wtTrapReceiver2x2ActionSyslogPort,
       "wtTrapReceiver2x2ActionSyslogText": wtTrapReceiver2x2ActionSyslogText,
       "wtTrapReceiver2x2ActionFtpDataPort": wtTrapReceiver2x2ActionFtpDataPort,
       "wtTrapReceiver2x2ActionFtpFileName": wtTrapReceiver2x2ActionFtpFileName,
       "wtTrapReceiver2x2ActionFtpText": wtTrapReceiver2x2ActionFtpText,
       "wtTrapReceiver2x2ActionFtpOption": wtTrapReceiver2x2ActionFtpOption,
       "wtTrapReceiver2x2ActionTimerCron": wtTrapReceiver2x2ActionTimerCron,
       "wtTrapReceiver2x2ActionName": wtTrapReceiver2x2ActionName,
       "wtTrapReceiver2x2ActionGlobalEnable": wtTrapReceiver2x2ActionGlobalEnable,
       "wtTrapReceiver2x2ActionSystemTimerTrigger": wtTrapReceiver2x2ActionSystemTimerTrigger,
       "wtTrapReceiver2x2ActionSystemButtonTrigger": wtTrapReceiver2x2ActionSystemButtonTrigger,
       "wtTrapReceiver2x2ActionOutputAction": wtTrapReceiver2x2ActionOutputAction,
       "wtTrapReceiver2x2PrepareInEvents": wtTrapReceiver2x2PrepareInEvents,
       "wtTrapReceiver2x2WatchList": wtTrapReceiver2x2WatchList,
       "wtTrapReceiver2x2WatchListCount": wtTrapReceiver2x2WatchListCount,
       "wtTrapReceiver2x2WatchListIfTable": wtTrapReceiver2x2WatchListIfTable,
       "wtTrapReceiver2x2WatchListIfEntry": wtTrapReceiver2x2WatchListIfEntry,
       "wtTrapReceiver2x2WatchListNo": wtTrapReceiver2x2WatchListNo,
       "wtTrapReceiver2x2WatchListTable": wtTrapReceiver2x2WatchListTable,
       "wtTrapReceiver2x2WatchListEntry": wtTrapReceiver2x2WatchListEntry,
       "wtTrapReceiver2x2WatchListName": wtTrapReceiver2x2WatchListName,
       "wtTrapReceiver2x2WatchListPort": wtTrapReceiver2x2WatchListPort,
       "wtTrapReceiver2x2WatchListService": wtTrapReceiver2x2WatchListService,
       "wtTrapReceiver2x2WatchListEnable": wtTrapReceiver2x2WatchListEnable,
       "wtTrapReceiver2x2WatchListAlias": wtTrapReceiver2x2WatchListAlias,
       "wtTrapReceiver2x2WatchListTrapNo": wtTrapReceiver2x2WatchListTrapNo,
       "wtTrapReceiver2x2WatchListSpecificNo": wtTrapReceiver2x2WatchListSpecificNo,
       "wtTrapReceiver2x2WatchListFacility": wtTrapReceiver2x2WatchListFacility,
       "wtTrapReceiver2x2WatchListSeverity": wtTrapReceiver2x2WatchListSeverity,
       "wtTrapReceiver2x2InEvSystemTimer": wtTrapReceiver2x2InEvSystemTimer,
       "wtTrapReceiver2x2SystemTimerPortTable": wtTrapReceiver2x2SystemTimerPortTable,
       "wtTrapReceiver2x2SystemTimerPortEntry": wtTrapReceiver2x2SystemTimerPortEntry,
       "wtTrapReceiver2x2PortSystemTimerEnable": wtTrapReceiver2x2PortSystemTimerEnable,
       "wtTrapReceiver2x2PortSystemTimerName": wtTrapReceiver2x2PortSystemTimerName,
       "wtTrapReceiver2x2PortSystemTimerCron": wtTrapReceiver2x2PortSystemTimerCron,
       "wtTrapReceiver2x2InEvButtons": wtTrapReceiver2x2InEvButtons,
       "wtTrapReceiver2x2ButtonPortTable": wtTrapReceiver2x2ButtonPortTable,
       "wtTrapReceiver2x2ButtonPortEntry": wtTrapReceiver2x2ButtonPortEntry,
       "wtTrapReceiver2x2PortButtonEnable": wtTrapReceiver2x2PortButtonEnable,
       "wtTrapReceiver2x2PortButtonName": wtTrapReceiver2x2PortButtonName,
       "wtTrapReceiver2x2PortButtonText": wtTrapReceiver2x2PortButtonText,
       "wtTrapReceiver2x2PortButtonAccess": wtTrapReceiver2x2PortButtonAccess,
       "wtTrapReceiver2x2InEvInputs": wtTrapReceiver2x2InEvInputs,
       "wtTrapReceiver2x2InputPortTable": wtTrapReceiver2x2InputPortTable,
       "wtTrapReceiver2x2InputPortEntry": wtTrapReceiver2x2InputPortEntry,
       "wtTrapReceiver2x2PortInputName": wtTrapReceiver2x2PortInputName,
       "wtTrapReceiver2x2PortInputText": wtTrapReceiver2x2PortInputText,
       "wtTrapReceiver2x2PortInputFilter": wtTrapReceiver2x2PortInputFilter,
       "wtTrapReceiver2x2PrepareOutEvents": wtTrapReceiver2x2PrepareOutEvents,
       "wtTrapReceiver2x2OutEvOutputs": wtTrapReceiver2x2OutEvOutputs,
       "wtTrapReceiver2x2OutputPortTable": wtTrapReceiver2x2OutputPortTable,
       "wtTrapReceiver2x2OutputPortEntry": wtTrapReceiver2x2OutputPortEntry,
       "wtTrapReceiver2x2PortOutputName": wtTrapReceiver2x2PortOutputName,
       "wtTrapReceiver2x2PortOutputText": wtTrapReceiver2x2PortOutputText,
       "wtTrapReceiver2x2PortPulseDuration": wtTrapReceiver2x2PortPulseDuration,
       "wtTrapReceiver2x2PortPulsePolarity": wtTrapReceiver2x2PortPulsePolarity,
       "wtTrapReceiver2x2Ports": wtTrapReceiver2x2Ports,
       "wtTrapReceiver2x2Manufact": wtTrapReceiver2x2Manufact,
       "wtTrapReceiver2x2MfName": wtTrapReceiver2x2MfName,
       "wtTrapReceiver2x2MfAddr": wtTrapReceiver2x2MfAddr,
       "wtTrapReceiver2x2MfHotline": wtTrapReceiver2x2MfHotline,
       "wtTrapReceiver2x2MfInternet": wtTrapReceiver2x2MfInternet,
       "wtTrapReceiver2x2MfDeviceTyp": wtTrapReceiver2x2MfDeviceTyp,
       "wtTrapReceiver2x2Diag": wtTrapReceiver2x2Diag,
       "wtTrapReceiver2x2DiagErrorCount": wtTrapReceiver2x2DiagErrorCount,
       "wtTrapReceiver2x2DiagBinaryError": wtTrapReceiver2x2DiagBinaryError,
       "wtTrapReceiver2x2DiagErrorIndex": wtTrapReceiver2x2DiagErrorIndex,
       "wtTrapReceiver2x2DiagErrorMessage": wtTrapReceiver2x2DiagErrorMessage,
       "wtTrapReceiver2x2DiagErrorClear": wtTrapReceiver2x2DiagErrorClear}
)
