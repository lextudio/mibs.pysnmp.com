# SNMP MIB module (Nortel-MsCarrier-MscPassport-AtmCoreMIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/Nortel-MsCarrier-MscPassport-AtmCoreMIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:31:48 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(Counter32,
 DisplayString,
 Gauge32,
 Integer32,
 RowStatus,
 StorageType,
 Unsigned32) = mibBuilder.importSymbols(
    "Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB",
    "Counter32",
    "DisplayString",
    "Gauge32",
    "Integer32",
    "RowStatus",
    "StorageType",
    "Unsigned32")

(AsciiString,
 AsciiStringIndex,
 FixedPoint7,
 FixedPoint9,
 Hex,
 IntegerSequence,
 Link,
 NonReplicated,
 PassportCounter64) = mibBuilder.importSymbols(
    "Nortel-MsCarrier-MscPassport-TextualConventionsMIB",
    "AsciiString",
    "AsciiStringIndex",
    "FixedPoint7",
    "FixedPoint9",
    "Hex",
    "IntegerSequence",
    "Link",
    "NonReplicated",
    "PassportCounter64")

(mscComponents,
 mscPassportMIBs) = mibBuilder.importSymbols(
    "Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB",
    "mscComponents",
    "mscPassportMIBs")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_MscAtmIf_ObjectIdentity = ObjectIdentity
mscAtmIf = _MscAtmIf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114)
)
_MscAtmIfRowStatusTable_Object = MibTable
mscAtmIfRowStatusTable = _MscAtmIfRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfRowStatusTable.setStatus("mandatory")
_MscAtmIfRowStatusEntry_Object = MibTableRow
mscAtmIfRowStatusEntry = _MscAtmIfRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 1, 1)
)
mscAtmIfRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfRowStatusEntry.setStatus("mandatory")
_MscAtmIfRowStatus_Type = RowStatus
_MscAtmIfRowStatus_Object = MibTableColumn
mscAtmIfRowStatus = _MscAtmIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 1, 1, 1),
    _MscAtmIfRowStatus_Type()
)
mscAtmIfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfRowStatus.setStatus("mandatory")
_MscAtmIfComponentName_Type = DisplayString
_MscAtmIfComponentName_Object = MibTableColumn
mscAtmIfComponentName = _MscAtmIfComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 1, 1, 2),
    _MscAtmIfComponentName_Type()
)
mscAtmIfComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfComponentName.setStatus("mandatory")
_MscAtmIfStorageType_Type = StorageType
_MscAtmIfStorageType_Object = MibTableColumn
mscAtmIfStorageType = _MscAtmIfStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 1, 1, 4),
    _MscAtmIfStorageType_Type()
)
mscAtmIfStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfStorageType.setStatus("mandatory")


class _MscAtmIfIndex_Type(Integer32):
    """Custom type mscAtmIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_MscAtmIfIndex_Type.__name__ = "Integer32"
_MscAtmIfIndex_Object = MibTableColumn
mscAtmIfIndex = _MscAtmIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 1, 1, 10),
    _MscAtmIfIndex_Type()
)
mscAtmIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfIndex.setStatus("mandatory")
_MscAtmIfConnMap_ObjectIdentity = ObjectIdentity
mscAtmIfConnMap = _MscAtmIfConnMap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2)
)
_MscAtmIfConnMapRowStatusTable_Object = MibTable
mscAtmIfConnMapRowStatusTable = _MscAtmIfConnMapRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapRowStatusTable.setStatus("mandatory")
_MscAtmIfConnMapRowStatusEntry_Object = MibTableRow
mscAtmIfConnMapRowStatusEntry = _MscAtmIfConnMapRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 1, 1)
)
mscAtmIfConnMapRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapRowStatusEntry.setStatus("mandatory")
_MscAtmIfConnMapRowStatus_Type = RowStatus
_MscAtmIfConnMapRowStatus_Object = MibTableColumn
mscAtmIfConnMapRowStatus = _MscAtmIfConnMapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 1, 1, 1),
    _MscAtmIfConnMapRowStatus_Type()
)
mscAtmIfConnMapRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfConnMapRowStatus.setStatus("mandatory")
_MscAtmIfConnMapComponentName_Type = DisplayString
_MscAtmIfConnMapComponentName_Object = MibTableColumn
mscAtmIfConnMapComponentName = _MscAtmIfConnMapComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 1, 1, 2),
    _MscAtmIfConnMapComponentName_Type()
)
mscAtmIfConnMapComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapComponentName.setStatus("mandatory")
_MscAtmIfConnMapStorageType_Type = StorageType
_MscAtmIfConnMapStorageType_Object = MibTableColumn
mscAtmIfConnMapStorageType = _MscAtmIfConnMapStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 1, 1, 4),
    _MscAtmIfConnMapStorageType_Type()
)
mscAtmIfConnMapStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapStorageType.setStatus("mandatory")
_MscAtmIfConnMapIndex_Type = NonReplicated
_MscAtmIfConnMapIndex_Object = MibTableColumn
mscAtmIfConnMapIndex = _MscAtmIfConnMapIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 1, 1, 10),
    _MscAtmIfConnMapIndex_Type()
)
mscAtmIfConnMapIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfConnMapIndex.setStatus("mandatory")
_MscAtmIfConnMapVccProvTable_Object = MibTable
mscAtmIfConnMapVccProvTable = _MscAtmIfConnMapVccProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapVccProvTable.setStatus("obsolete")
_MscAtmIfConnMapVccProvEntry_Object = MibTableRow
mscAtmIfConnMapVccProvEntry = _MscAtmIfConnMapVccProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 100, 1)
)
mscAtmIfConnMapVccProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapVccProvEntry.setStatus("obsolete")


class _MscAtmIfConnMapNumVccsForVpiZero_Type(Unsigned32):
    """Custom type mscAtmIfConnMapNumVccsForVpiZero based on Unsigned32"""
    defaultValue = 768

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16128),
    )


_MscAtmIfConnMapNumVccsForVpiZero_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapNumVccsForVpiZero_Object = MibTableColumn
mscAtmIfConnMapNumVccsForVpiZero = _MscAtmIfConnMapNumVccsForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 100, 1, 10),
    _MscAtmIfConnMapNumVccsForVpiZero_Type()
)
mscAtmIfConnMapNumVccsForVpiZero.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapNumVccsForVpiZero.setStatus("obsolete")


class _MscAtmIfConnMapNumNonZeroVpisForVccs_Type(Unsigned32):
    """Custom type mscAtmIfConnMapNumNonZeroVpisForVccs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfConnMapNumNonZeroVpisForVccs_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapNumNonZeroVpisForVccs_Object = MibTableColumn
mscAtmIfConnMapNumNonZeroVpisForVccs = _MscAtmIfConnMapNumNonZeroVpisForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 100, 1, 20),
    _MscAtmIfConnMapNumNonZeroVpisForVccs_Type()
)
mscAtmIfConnMapNumNonZeroVpisForVccs.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapNumNonZeroVpisForVccs.setStatus("obsolete")


class _MscAtmIfConnMapFirstNonZeroVpiForVccs_Type(Unsigned32):
    """Custom type mscAtmIfConnMapFirstNonZeroVpiForVccs based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_MscAtmIfConnMapFirstNonZeroVpiForVccs_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapFirstNonZeroVpiForVccs_Object = MibTableColumn
mscAtmIfConnMapFirstNonZeroVpiForVccs = _MscAtmIfConnMapFirstNonZeroVpiForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 100, 1, 30),
    _MscAtmIfConnMapFirstNonZeroVpiForVccs_Type()
)
mscAtmIfConnMapFirstNonZeroVpiForVccs.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapFirstNonZeroVpiForVccs.setStatus("obsolete")


class _MscAtmIfConnMapNumVccsPerNonZeroVpi_Type(Unsigned32):
    """Custom type mscAtmIfConnMapNumVccsPerNonZeroVpi based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(512, 512),
        ValueRangeConstraint(1024, 1024),
        ValueRangeConstraint(2048, 2048),
    )


_MscAtmIfConnMapNumVccsPerNonZeroVpi_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapNumVccsPerNonZeroVpi_Object = MibTableColumn
mscAtmIfConnMapNumVccsPerNonZeroVpi = _MscAtmIfConnMapNumVccsPerNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 100, 1, 40),
    _MscAtmIfConnMapNumVccsPerNonZeroVpi_Type()
)
mscAtmIfConnMapNumVccsPerNonZeroVpi.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapNumVccsPerNonZeroVpi.setStatus("obsolete")
_MscAtmIfConnMapOperTable_Object = MibTable
mscAtmIfConnMapOperTable = _MscAtmIfConnMapOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapOperTable.setStatus("mandatory")
_MscAtmIfConnMapOperEntry_Object = MibTableRow
mscAtmIfConnMapOperEntry = _MscAtmIfConnMapOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 110, 1)
)
mscAtmIfConnMapOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapOperEntry.setStatus("mandatory")


class _MscAtmIfConnMapNumVccsForVpiZeroOper_Type(Unsigned32):
    """Custom type mscAtmIfConnMapNumVccsForVpiZeroOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfConnMapNumVccsForVpiZeroOper_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapNumVccsForVpiZeroOper_Object = MibTableColumn
mscAtmIfConnMapNumVccsForVpiZeroOper = _MscAtmIfConnMapNumVccsForVpiZeroOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 110, 1, 10),
    _MscAtmIfConnMapNumVccsForVpiZeroOper_Type()
)
mscAtmIfConnMapNumVccsForVpiZeroOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapNumVccsForVpiZeroOper.setStatus("mandatory")


class _MscAtmIfConnMapNumNonZeroVpisForVccsOper_Type(Unsigned32):
    """Custom type mscAtmIfConnMapNumNonZeroVpisForVccsOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfConnMapNumNonZeroVpisForVccsOper_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapNumNonZeroVpisForVccsOper_Object = MibTableColumn
mscAtmIfConnMapNumNonZeroVpisForVccsOper = _MscAtmIfConnMapNumNonZeroVpisForVccsOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 110, 1, 20),
    _MscAtmIfConnMapNumNonZeroVpisForVccsOper_Type()
)
mscAtmIfConnMapNumNonZeroVpisForVccsOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapNumNonZeroVpisForVccsOper.setStatus("mandatory")


class _MscAtmIfConnMapFirstNonZeroVpiForVccsOper_Type(Unsigned32):
    """Custom type mscAtmIfConnMapFirstNonZeroVpiForVccsOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_MscAtmIfConnMapFirstNonZeroVpiForVccsOper_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapFirstNonZeroVpiForVccsOper_Object = MibTableColumn
mscAtmIfConnMapFirstNonZeroVpiForVccsOper = _MscAtmIfConnMapFirstNonZeroVpiForVccsOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 110, 1, 30),
    _MscAtmIfConnMapFirstNonZeroVpiForVccsOper_Type()
)
mscAtmIfConnMapFirstNonZeroVpiForVccsOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapFirstNonZeroVpiForVccsOper.setStatus("mandatory")


class _MscAtmIfConnMapNumVccsPerNonZeroVpiOper_Type(Unsigned32):
    """Custom type mscAtmIfConnMapNumVccsPerNonZeroVpiOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(512, 512),
        ValueRangeConstraint(1024, 1024),
        ValueRangeConstraint(2048, 2048),
        ValueRangeConstraint(4096, 4096),
        ValueRangeConstraint(8192, 8192),
        ValueRangeConstraint(16384, 16384),
    )


_MscAtmIfConnMapNumVccsPerNonZeroVpiOper_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapNumVccsPerNonZeroVpiOper_Object = MibTableColumn
mscAtmIfConnMapNumVccsPerNonZeroVpiOper = _MscAtmIfConnMapNumVccsPerNonZeroVpiOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 110, 1, 40),
    _MscAtmIfConnMapNumVccsPerNonZeroVpiOper_Type()
)
mscAtmIfConnMapNumVccsPerNonZeroVpiOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapNumVccsPerNonZeroVpiOper.setStatus("mandatory")
_MscAtmIfConnMapOv_ObjectIdentity = ObjectIdentity
mscAtmIfConnMapOv = _MscAtmIfConnMapOv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120)
)
_MscAtmIfConnMapOvRowStatusTable_Object = MibTable
mscAtmIfConnMapOvRowStatusTable = _MscAtmIfConnMapOvRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvRowStatusTable.setStatus("mandatory")
_MscAtmIfConnMapOvRowStatusEntry_Object = MibTableRow
mscAtmIfConnMapOvRowStatusEntry = _MscAtmIfConnMapOvRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 1, 1)
)
mscAtmIfConnMapOvRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapOvIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvRowStatusEntry.setStatus("mandatory")
_MscAtmIfConnMapOvRowStatus_Type = RowStatus
_MscAtmIfConnMapOvRowStatus_Object = MibTableColumn
mscAtmIfConnMapOvRowStatus = _MscAtmIfConnMapOvRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 1, 1, 1),
    _MscAtmIfConnMapOvRowStatus_Type()
)
mscAtmIfConnMapOvRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvRowStatus.setStatus("mandatory")
_MscAtmIfConnMapOvComponentName_Type = DisplayString
_MscAtmIfConnMapOvComponentName_Object = MibTableColumn
mscAtmIfConnMapOvComponentName = _MscAtmIfConnMapOvComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 1, 1, 2),
    _MscAtmIfConnMapOvComponentName_Type()
)
mscAtmIfConnMapOvComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvComponentName.setStatus("mandatory")
_MscAtmIfConnMapOvStorageType_Type = StorageType
_MscAtmIfConnMapOvStorageType_Object = MibTableColumn
mscAtmIfConnMapOvStorageType = _MscAtmIfConnMapOvStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 1, 1, 4),
    _MscAtmIfConnMapOvStorageType_Type()
)
mscAtmIfConnMapOvStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvStorageType.setStatus("mandatory")
_MscAtmIfConnMapOvIndex_Type = NonReplicated
_MscAtmIfConnMapOvIndex_Object = MibTableColumn
mscAtmIfConnMapOvIndex = _MscAtmIfConnMapOvIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 1, 1, 10),
    _MscAtmIfConnMapOvIndex_Type()
)
mscAtmIfConnMapOvIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvIndex.setStatus("mandatory")
_MscAtmIfConnMapOvProvTable_Object = MibTable
mscAtmIfConnMapOvProvTable = _MscAtmIfConnMapOvProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvProvTable.setStatus("mandatory")
_MscAtmIfConnMapOvProvEntry_Object = MibTableRow
mscAtmIfConnMapOvProvEntry = _MscAtmIfConnMapOvProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 100, 1)
)
mscAtmIfConnMapOvProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfConnMapOvIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvProvEntry.setStatus("mandatory")


class _MscAtmIfConnMapOvNumVccsForVpiZero_Type(Unsigned32):
    """Custom type mscAtmIfConnMapOvNumVccsForVpiZero based on Unsigned32"""
    defaultValue = 768

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfConnMapOvNumVccsForVpiZero_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapOvNumVccsForVpiZero_Object = MibTableColumn
mscAtmIfConnMapOvNumVccsForVpiZero = _MscAtmIfConnMapOvNumVccsForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 100, 1, 10),
    _MscAtmIfConnMapOvNumVccsForVpiZero_Type()
)
mscAtmIfConnMapOvNumVccsForVpiZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvNumVccsForVpiZero.setStatus("mandatory")


class _MscAtmIfConnMapOvNumNonZeroVpisForVccs_Type(Unsigned32):
    """Custom type mscAtmIfConnMapOvNumNonZeroVpisForVccs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfConnMapOvNumNonZeroVpisForVccs_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapOvNumNonZeroVpisForVccs_Object = MibTableColumn
mscAtmIfConnMapOvNumNonZeroVpisForVccs = _MscAtmIfConnMapOvNumNonZeroVpisForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 100, 1, 20),
    _MscAtmIfConnMapOvNumNonZeroVpisForVccs_Type()
)
mscAtmIfConnMapOvNumNonZeroVpisForVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvNumNonZeroVpisForVccs.setStatus("mandatory")


class _MscAtmIfConnMapOvFirstNonZeroVpiForVccs_Type(Unsigned32):
    """Custom type mscAtmIfConnMapOvFirstNonZeroVpiForVccs based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_MscAtmIfConnMapOvFirstNonZeroVpiForVccs_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapOvFirstNonZeroVpiForVccs_Object = MibTableColumn
mscAtmIfConnMapOvFirstNonZeroVpiForVccs = _MscAtmIfConnMapOvFirstNonZeroVpiForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 100, 1, 30),
    _MscAtmIfConnMapOvFirstNonZeroVpiForVccs_Type()
)
mscAtmIfConnMapOvFirstNonZeroVpiForVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvFirstNonZeroVpiForVccs.setStatus("mandatory")


class _MscAtmIfConnMapOvNumVccsPerNonZeroVpi_Type(Unsigned32):
    """Custom type mscAtmIfConnMapOvNumVccsPerNonZeroVpi based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(512, 512),
        ValueRangeConstraint(1024, 1024),
        ValueRangeConstraint(2048, 2048),
        ValueRangeConstraint(4096, 4096),
        ValueRangeConstraint(8192, 8192),
        ValueRangeConstraint(16384, 16384),
    )


_MscAtmIfConnMapOvNumVccsPerNonZeroVpi_Type.__name__ = "Unsigned32"
_MscAtmIfConnMapOvNumVccsPerNonZeroVpi_Object = MibTableColumn
mscAtmIfConnMapOvNumVccsPerNonZeroVpi = _MscAtmIfConnMapOvNumVccsPerNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 2, 120, 100, 1, 40),
    _MscAtmIfConnMapOvNumVccsPerNonZeroVpi_Type()
)
mscAtmIfConnMapOvNumVccsPerNonZeroVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfConnMapOvNumVccsPerNonZeroVpi.setStatus("mandatory")
_MscAtmIfCA_ObjectIdentity = ObjectIdentity
mscAtmIfCA = _MscAtmIfCA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3)
)
_MscAtmIfCARowStatusTable_Object = MibTable
mscAtmIfCARowStatusTable = _MscAtmIfCARowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfCARowStatusTable.setStatus("mandatory")
_MscAtmIfCARowStatusEntry_Object = MibTableRow
mscAtmIfCARowStatusEntry = _MscAtmIfCARowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 1, 1)
)
mscAtmIfCARowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCARowStatusEntry.setStatus("mandatory")
_MscAtmIfCARowStatus_Type = RowStatus
_MscAtmIfCARowStatus_Object = MibTableColumn
mscAtmIfCARowStatus = _MscAtmIfCARowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 1, 1, 1),
    _MscAtmIfCARowStatus_Type()
)
mscAtmIfCARowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCARowStatus.setStatus("mandatory")
_MscAtmIfCAComponentName_Type = DisplayString
_MscAtmIfCAComponentName_Object = MibTableColumn
mscAtmIfCAComponentName = _MscAtmIfCAComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 1, 1, 2),
    _MscAtmIfCAComponentName_Type()
)
mscAtmIfCAComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAComponentName.setStatus("mandatory")
_MscAtmIfCAStorageType_Type = StorageType
_MscAtmIfCAStorageType_Object = MibTableColumn
mscAtmIfCAStorageType = _MscAtmIfCAStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 1, 1, 4),
    _MscAtmIfCAStorageType_Type()
)
mscAtmIfCAStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAStorageType.setStatus("mandatory")
_MscAtmIfCAIndex_Type = NonReplicated
_MscAtmIfCAIndex_Object = MibTableColumn
mscAtmIfCAIndex = _MscAtmIfCAIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 1, 1, 10),
    _MscAtmIfCAIndex_Type()
)
mscAtmIfCAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAIndex.setStatus("mandatory")
_MscAtmIfCACbr_ObjectIdentity = ObjectIdentity
mscAtmIfCACbr = _MscAtmIfCACbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2)
)
_MscAtmIfCACbrRowStatusTable_Object = MibTable
mscAtmIfCACbrRowStatusTable = _MscAtmIfCACbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfCACbrRowStatusTable.setStatus("mandatory")
_MscAtmIfCACbrRowStatusEntry_Object = MibTableRow
mscAtmIfCACbrRowStatusEntry = _MscAtmIfCACbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 1, 1)
)
mscAtmIfCACbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCACbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCACbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfCACbrRowStatus_Type = RowStatus
_MscAtmIfCACbrRowStatus_Object = MibTableColumn
mscAtmIfCACbrRowStatus = _MscAtmIfCACbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 1, 1, 1),
    _MscAtmIfCACbrRowStatus_Type()
)
mscAtmIfCACbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrRowStatus.setStatus("mandatory")
_MscAtmIfCACbrComponentName_Type = DisplayString
_MscAtmIfCACbrComponentName_Object = MibTableColumn
mscAtmIfCACbrComponentName = _MscAtmIfCACbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 1, 1, 2),
    _MscAtmIfCACbrComponentName_Type()
)
mscAtmIfCACbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCACbrComponentName.setStatus("mandatory")
_MscAtmIfCACbrStorageType_Type = StorageType
_MscAtmIfCACbrStorageType_Object = MibTableColumn
mscAtmIfCACbrStorageType = _MscAtmIfCACbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 1, 1, 4),
    _MscAtmIfCACbrStorageType_Type()
)
mscAtmIfCACbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCACbrStorageType.setStatus("mandatory")


class _MscAtmIfCACbrIndex_Type(Integer32):
    """Custom type mscAtmIfCACbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfCACbrIndex_Type.__name__ = "Integer32"
_MscAtmIfCACbrIndex_Object = MibTableColumn
mscAtmIfCACbrIndex = _MscAtmIfCACbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 1, 1, 10),
    _MscAtmIfCACbrIndex_Type()
)
mscAtmIfCACbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCACbrIndex.setStatus("mandatory")
_MscAtmIfCACbrProvTable_Object = MibTable
mscAtmIfCACbrProvTable = _MscAtmIfCACbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCACbrProvTable.setStatus("mandatory")
_MscAtmIfCACbrProvEntry_Object = MibTableRow
mscAtmIfCACbrProvEntry = _MscAtmIfCACbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1)
)
mscAtmIfCACbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCACbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCACbrProvEntry.setStatus("mandatory")


class _MscAtmIfCACbrProvPool_Type(Integer32):
    """Custom type mscAtmIfCACbrProvPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfCACbrProvPool_Type.__name__ = "Integer32"
_MscAtmIfCACbrProvPool_Object = MibTableColumn
mscAtmIfCACbrProvPool = _MscAtmIfCACbrProvPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 10),
    _MscAtmIfCACbrProvPool_Type()
)
mscAtmIfCACbrProvPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrProvPool.setStatus("mandatory")


class _MscAtmIfCACbrProvCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCACbrProvCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_MscAtmIfCACbrProvCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrProvCdvt_Object = MibTableColumn
mscAtmIfCACbrProvCdvt = _MscAtmIfCACbrProvCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 20),
    _MscAtmIfCACbrProvCdvt_Type()
)
mscAtmIfCACbrProvCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrProvCdvt.setStatus("mandatory")


class _MscAtmIfCACbrCdv_Type(Unsigned32):
    """Custom type mscAtmIfCACbrCdv based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCACbrCdv_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrCdv_Object = MibTableColumn
mscAtmIfCACbrCdv = _MscAtmIfCACbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 30),
    _MscAtmIfCACbrCdv_Type()
)
mscAtmIfCACbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrCdv.setStatus("mandatory")


class _MscAtmIfCACbrMaxCtd_Type(Unsigned32):
    """Custom type mscAtmIfCACbrMaxCtd based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCACbrMaxCtd_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrMaxCtd_Object = MibTableColumn
mscAtmIfCACbrMaxCtd = _MscAtmIfCACbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 40),
    _MscAtmIfCACbrMaxCtd_Type()
)
mscAtmIfCACbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrMaxCtd.setStatus("mandatory")


class _MscAtmIfCACbrProvClr_Type(Unsigned32):
    """Custom type mscAtmIfCACbrProvClr based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfCACbrProvClr_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrProvClr_Object = MibTableColumn
mscAtmIfCACbrProvClr = _MscAtmIfCACbrProvClr_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 50),
    _MscAtmIfCACbrProvClr_Type()
)
mscAtmIfCACbrProvClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrProvClr.setStatus("mandatory")


class _MscAtmIfCACbrTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCACbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfCACbrTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrTxQueueLimit_Object = MibTableColumn
mscAtmIfCACbrTxQueueLimit = _MscAtmIfCACbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 60),
    _MscAtmIfCACbrTxQueueLimit_Type()
)
mscAtmIfCACbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrTxQueueLimit.setStatus("mandatory")


class _MscAtmIfCACbrHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCACbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCACbrHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCACbrHoldingPriority_Object = MibTableColumn
mscAtmIfCACbrHoldingPriority = _MscAtmIfCACbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 61),
    _MscAtmIfCACbrHoldingPriority_Type()
)
mscAtmIfCACbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrHoldingPriority.setStatus("mandatory")


class _MscAtmIfCACbrSvcHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCACbrSvcHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCACbrSvcHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCACbrSvcHoldingPriority_Object = MibTableColumn
mscAtmIfCACbrSvcHoldingPriority = _MscAtmIfCACbrSvcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 70),
    _MscAtmIfCACbrSvcHoldingPriority_Type()
)
mscAtmIfCACbrSvcHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrSvcHoldingPriority.setStatus("obsolete")


class _MscAtmIfCACbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCACbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCACbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCACbrSvcMpHoldingPriority_Object = MibTableColumn
mscAtmIfCACbrSvcMpHoldingPriority = _MscAtmIfCACbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 71),
    _MscAtmIfCACbrSvcMpHoldingPriority_Type()
)
mscAtmIfCACbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrSvcMpHoldingPriority.setStatus("mandatory")


class _MscAtmIfCACbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCACbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12000),
    )


_MscAtmIfCACbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrMinPerVcQueueLimit_Object = MibTableColumn
mscAtmIfCACbrMinPerVcQueueLimit = _MscAtmIfCACbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 80),
    _MscAtmIfCACbrMinPerVcQueueLimit_Type()
)
mscAtmIfCACbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrMinPerVcQueueLimit.setStatus("mandatory")


class _MscAtmIfCACbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type mscAtmIfCACbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1416905),
    )


_MscAtmIfCACbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
mscAtmIfCACbrPerVcQueueLimitReferenceRate = _MscAtmIfCACbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 90),
    _MscAtmIfCACbrPerVcQueueLimitReferenceRate_Type()
)
mscAtmIfCACbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _MscAtmIfCACbrEmissionPriority_Type(Unsigned32):
    """Custom type mscAtmIfCACbrEmissionPriority based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MscAtmIfCACbrEmissionPriority_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrEmissionPriority_Object = MibTableColumn
mscAtmIfCACbrEmissionPriority = _MscAtmIfCACbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 100),
    _MscAtmIfCACbrEmissionPriority_Type()
)
mscAtmIfCACbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrEmissionPriority.setStatus("mandatory")


class _MscAtmIfCACbrTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfCACbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_MscAtmIfCACbrTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfCACbrTrafficShaping_Object = MibTableColumn
mscAtmIfCACbrTrafficShaping = _MscAtmIfCACbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 140),
    _MscAtmIfCACbrTrafficShaping_Type()
)
mscAtmIfCACbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrTrafficShaping.setStatus("mandatory")


class _MscAtmIfCACbrShapeRecoupPolicy_Type(Integer32):
    """Custom type mscAtmIfCACbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_MscAtmIfCACbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_MscAtmIfCACbrShapeRecoupPolicy_Object = MibTableColumn
mscAtmIfCACbrShapeRecoupPolicy = _MscAtmIfCACbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 150),
    _MscAtmIfCACbrShapeRecoupPolicy_Type()
)
mscAtmIfCACbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrShapeRecoupPolicy.setStatus("mandatory")


class _MscAtmIfCACbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCACbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCACbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCACbrUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCACbrUnshapedTransmitQueueing = _MscAtmIfCACbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 160),
    _MscAtmIfCACbrUnshapedTransmitQueueing_Type()
)
mscAtmIfCACbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCACbrWeightPolicy_Type(Integer32):
    """Custom type mscAtmIfCACbrWeightPolicy based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("pcr", 2),
          ("scr", 1))
    )


_MscAtmIfCACbrWeightPolicy_Type.__name__ = "Integer32"
_MscAtmIfCACbrWeightPolicy_Object = MibTableColumn
mscAtmIfCACbrWeightPolicy = _MscAtmIfCACbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 165),
    _MscAtmIfCACbrWeightPolicy_Type()
)
mscAtmIfCACbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrWeightPolicy.setStatus("mandatory")


class _MscAtmIfCACbrForceTagging_Type(Integer32):
    """Custom type mscAtmIfCACbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfCACbrForceTagging_Type.__name__ = "Integer32"
_MscAtmIfCACbrForceTagging_Object = MibTableColumn
mscAtmIfCACbrForceTagging = _MscAtmIfCACbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 169),
    _MscAtmIfCACbrForceTagging_Type()
)
mscAtmIfCACbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrForceTagging.setStatus("mandatory")


class _MscAtmIfCACbrUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfCACbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_MscAtmIfCACbrUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfCACbrUsageParameterControl_Object = MibTableColumn
mscAtmIfCACbrUsageParameterControl = _MscAtmIfCACbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 100, 1, 170),
    _MscAtmIfCACbrUsageParameterControl_Type()
)
mscAtmIfCACbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrUsageParameterControl.setStatus("mandatory")
_MscAtmIfCACbrOperTable_Object = MibTable
mscAtmIfCACbrOperTable = _MscAtmIfCACbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfCACbrOperTable.setStatus("mandatory")
_MscAtmIfCACbrOperEntry_Object = MibTableRow
mscAtmIfCACbrOperEntry = _MscAtmIfCACbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 110, 1)
)
mscAtmIfCACbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCACbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCACbrOperEntry.setStatus("mandatory")


class _MscAtmIfCACbrEpdOffset_Type(Unsigned32):
    """Custom type mscAtmIfCACbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_MscAtmIfCACbrEpdOffset_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrEpdOffset_Object = MibTableColumn
mscAtmIfCACbrEpdOffset = _MscAtmIfCACbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 2, 110, 1, 10),
    _MscAtmIfCACbrEpdOffset_Type()
)
mscAtmIfCACbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCACbrEpdOffset.setStatus("mandatory")
_MscAtmIfCARtVbr_ObjectIdentity = ObjectIdentity
mscAtmIfCARtVbr = _MscAtmIfCARtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3)
)
_MscAtmIfCARtVbrRowStatusTable_Object = MibTable
mscAtmIfCARtVbrRowStatusTable = _MscAtmIfCARtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrRowStatusTable.setStatus("mandatory")
_MscAtmIfCARtVbrRowStatusEntry_Object = MibTableRow
mscAtmIfCARtVbrRowStatusEntry = _MscAtmIfCARtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 1, 1)
)
mscAtmIfCARtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfCARtVbrRowStatus_Type = RowStatus
_MscAtmIfCARtVbrRowStatus_Object = MibTableColumn
mscAtmIfCARtVbrRowStatus = _MscAtmIfCARtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 1, 1, 1),
    _MscAtmIfCARtVbrRowStatus_Type()
)
mscAtmIfCARtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrRowStatus.setStatus("mandatory")
_MscAtmIfCARtVbrComponentName_Type = DisplayString
_MscAtmIfCARtVbrComponentName_Object = MibTableColumn
mscAtmIfCARtVbrComponentName = _MscAtmIfCARtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 1, 1, 2),
    _MscAtmIfCARtVbrComponentName_Type()
)
mscAtmIfCARtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrComponentName.setStatus("mandatory")
_MscAtmIfCARtVbrStorageType_Type = StorageType
_MscAtmIfCARtVbrStorageType_Object = MibTableColumn
mscAtmIfCARtVbrStorageType = _MscAtmIfCARtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 1, 1, 4),
    _MscAtmIfCARtVbrStorageType_Type()
)
mscAtmIfCARtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrStorageType.setStatus("mandatory")


class _MscAtmIfCARtVbrIndex_Type(Integer32):
    """Custom type mscAtmIfCARtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfCARtVbrIndex_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrIndex_Object = MibTableColumn
mscAtmIfCARtVbrIndex = _MscAtmIfCARtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 1, 1, 10),
    _MscAtmIfCARtVbrIndex_Type()
)
mscAtmIfCARtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrIndex.setStatus("mandatory")
_MscAtmIfCARtVbrProvTable_Object = MibTable
mscAtmIfCARtVbrProvTable = _MscAtmIfCARtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrProvTable.setStatus("mandatory")
_MscAtmIfCARtVbrProvEntry_Object = MibTableRow
mscAtmIfCARtVbrProvEntry = _MscAtmIfCARtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1)
)
mscAtmIfCARtVbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrProvEntry.setStatus("mandatory")


class _MscAtmIfCARtVbrPool_Type(Integer32):
    """Custom type mscAtmIfCARtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfCARtVbrPool_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrPool_Object = MibTableColumn
mscAtmIfCARtVbrPool = _MscAtmIfCARtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 10),
    _MscAtmIfCARtVbrPool_Type()
)
mscAtmIfCARtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrPool.setStatus("mandatory")


class _MscAtmIfCARtVbrCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_MscAtmIfCARtVbrCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrCdvt_Object = MibTableColumn
mscAtmIfCARtVbrCdvt = _MscAtmIfCARtVbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 20),
    _MscAtmIfCARtVbrCdvt_Type()
)
mscAtmIfCARtVbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrCdvt.setStatus("mandatory")


class _MscAtmIfCARtVbrCdv_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrCdv based on Unsigned32"""
    defaultValue = 1268

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCARtVbrCdv_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrCdv_Object = MibTableColumn
mscAtmIfCARtVbrCdv = _MscAtmIfCARtVbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 30),
    _MscAtmIfCARtVbrCdv_Type()
)
mscAtmIfCARtVbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrCdv.setStatus("mandatory")


class _MscAtmIfCARtVbrMaxCtd_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrMaxCtd based on Unsigned32"""
    defaultValue = 2000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCARtVbrMaxCtd_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrMaxCtd_Object = MibTableColumn
mscAtmIfCARtVbrMaxCtd = _MscAtmIfCARtVbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 40),
    _MscAtmIfCARtVbrMaxCtd_Type()
)
mscAtmIfCARtVbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrMaxCtd.setStatus("mandatory")


class _MscAtmIfCARtVbrCellLossRatio_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfCARtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrCellLossRatio_Object = MibTableColumn
mscAtmIfCARtVbrCellLossRatio = _MscAtmIfCARtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 50),
    _MscAtmIfCARtVbrCellLossRatio_Type()
)
mscAtmIfCARtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrCellLossRatio.setStatus("mandatory")


class _MscAtmIfCARtVbrTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfCARtVbrTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrTxQueueLimit_Object = MibTableColumn
mscAtmIfCARtVbrTxQueueLimit = _MscAtmIfCARtVbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 60),
    _MscAtmIfCARtVbrTxQueueLimit_Type()
)
mscAtmIfCARtVbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrTxQueueLimit.setStatus("mandatory")


class _MscAtmIfCARtVbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 160000),
    )


_MscAtmIfCARtVbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrMinPerVcQueueLimit_Object = MibTableColumn
mscAtmIfCARtVbrMinPerVcQueueLimit = _MscAtmIfCARtVbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 70),
    _MscAtmIfCARtVbrMinPerVcQueueLimit_Type()
)
mscAtmIfCARtVbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrMinPerVcQueueLimit.setStatus("mandatory")


class _MscAtmIfCARtVbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1416905),
    )


_MscAtmIfCARtVbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
mscAtmIfCARtVbrPerVcQueueLimitReferenceRate = _MscAtmIfCARtVbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 75),
    _MscAtmIfCARtVbrPerVcQueueLimitReferenceRate_Type()
)
mscAtmIfCARtVbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _MscAtmIfCARtVbrHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCARtVbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCARtVbrHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrHoldingPriority_Object = MibTableColumn
mscAtmIfCARtVbrHoldingPriority = _MscAtmIfCARtVbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 76),
    _MscAtmIfCARtVbrHoldingPriority_Type()
)
mscAtmIfCARtVbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrHoldingPriority.setStatus("mandatory")


class _MscAtmIfCARtVbrSvcHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCARtVbrSvcHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCARtVbrSvcHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrSvcHoldingPriority_Object = MibTableColumn
mscAtmIfCARtVbrSvcHoldingPriority = _MscAtmIfCARtVbrSvcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 80),
    _MscAtmIfCARtVbrSvcHoldingPriority_Type()
)
mscAtmIfCARtVbrSvcHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrSvcHoldingPriority.setStatus("obsolete")


class _MscAtmIfCARtVbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCARtVbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCARtVbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrSvcMpHoldingPriority_Object = MibTableColumn
mscAtmIfCARtVbrSvcMpHoldingPriority = _MscAtmIfCARtVbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 81),
    _MscAtmIfCARtVbrSvcMpHoldingPriority_Type()
)
mscAtmIfCARtVbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrSvcMpHoldingPriority.setStatus("mandatory")


class _MscAtmIfCARtVbrEmissionPriority_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrEmissionPriority based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MscAtmIfCARtVbrEmissionPriority_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrEmissionPriority_Object = MibTableColumn
mscAtmIfCARtVbrEmissionPriority = _MscAtmIfCARtVbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 82),
    _MscAtmIfCARtVbrEmissionPriority_Type()
)
mscAtmIfCARtVbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrEmissionPriority.setStatus("mandatory")


class _MscAtmIfCARtVbrTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfCARtVbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_MscAtmIfCARtVbrTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrTrafficShaping_Object = MibTableColumn
mscAtmIfCARtVbrTrafficShaping = _MscAtmIfCARtVbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 86),
    _MscAtmIfCARtVbrTrafficShaping_Type()
)
mscAtmIfCARtVbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrTrafficShaping.setStatus("mandatory")


class _MscAtmIfCARtVbrShapeRecoupPolicy_Type(Integer32):
    """Custom type mscAtmIfCARtVbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_MscAtmIfCARtVbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrShapeRecoupPolicy_Object = MibTableColumn
mscAtmIfCARtVbrShapeRecoupPolicy = _MscAtmIfCARtVbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 87),
    _MscAtmIfCARtVbrShapeRecoupPolicy_Type()
)
mscAtmIfCARtVbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrShapeRecoupPolicy.setStatus("mandatory")


class _MscAtmIfCARtVbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCARtVbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCARtVbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCARtVbrUnshapedTransmitQueueing = _MscAtmIfCARtVbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 88),
    _MscAtmIfCARtVbrUnshapedTransmitQueueing_Type()
)
mscAtmIfCARtVbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCARtVbrUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfCARtVbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_MscAtmIfCARtVbrUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrUsageParameterControl_Object = MibTableColumn
mscAtmIfCARtVbrUsageParameterControl = _MscAtmIfCARtVbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 89),
    _MscAtmIfCARtVbrUsageParameterControl_Type()
)
mscAtmIfCARtVbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrUsageParameterControl.setStatus("mandatory")


class _MscAtmIfCARtVbrWeightPolicy_Type(Integer32):
    """Custom type mscAtmIfCARtVbrWeightPolicy based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("pcr", 2),
          ("scr", 1))
    )


_MscAtmIfCARtVbrWeightPolicy_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrWeightPolicy_Object = MibTableColumn
mscAtmIfCARtVbrWeightPolicy = _MscAtmIfCARtVbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 90),
    _MscAtmIfCARtVbrWeightPolicy_Type()
)
mscAtmIfCARtVbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrWeightPolicy.setStatus("mandatory")


class _MscAtmIfCARtVbrForceTagging_Type(Integer32):
    """Custom type mscAtmIfCARtVbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfCARtVbrForceTagging_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrForceTagging_Object = MibTableColumn
mscAtmIfCARtVbrForceTagging = _MscAtmIfCARtVbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 100, 1, 91),
    _MscAtmIfCARtVbrForceTagging_Type()
)
mscAtmIfCARtVbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrForceTagging.setStatus("mandatory")
_MscAtmIfCARtVbrOperTable_Object = MibTable
mscAtmIfCARtVbrOperTable = _MscAtmIfCARtVbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrOperTable.setStatus("mandatory")
_MscAtmIfCARtVbrOperEntry_Object = MibTableRow
mscAtmIfCARtVbrOperEntry = _MscAtmIfCARtVbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 110, 1)
)
mscAtmIfCARtVbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrOperEntry.setStatus("mandatory")


class _MscAtmIfCARtVbrOpUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCARtVbrOpUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCARtVbrOpUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCARtVbrOpUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCARtVbrOpUnshapedTransmitQueueing = _MscAtmIfCARtVbrOpUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 110, 1, 10),
    _MscAtmIfCARtVbrOpUnshapedTransmitQueueing_Type()
)
mscAtmIfCARtVbrOpUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrOpUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCARtVbrEpdOffset_Type(Unsigned32):
    """Custom type mscAtmIfCARtVbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_MscAtmIfCARtVbrEpdOffset_Type.__name__ = "Unsigned32"
_MscAtmIfCARtVbrEpdOffset_Object = MibTableColumn
mscAtmIfCARtVbrEpdOffset = _MscAtmIfCARtVbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 3, 110, 1, 11),
    _MscAtmIfCARtVbrEpdOffset_Type()
)
mscAtmIfCARtVbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCARtVbrEpdOffset.setStatus("mandatory")
_MscAtmIfCANrtVbr_ObjectIdentity = ObjectIdentity
mscAtmIfCANrtVbr = _MscAtmIfCANrtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4)
)
_MscAtmIfCANrtVbrRowStatusTable_Object = MibTable
mscAtmIfCANrtVbrRowStatusTable = _MscAtmIfCANrtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrRowStatusTable.setStatus("mandatory")
_MscAtmIfCANrtVbrRowStatusEntry_Object = MibTableRow
mscAtmIfCANrtVbrRowStatusEntry = _MscAtmIfCANrtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 1, 1)
)
mscAtmIfCANrtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfCANrtVbrRowStatus_Type = RowStatus
_MscAtmIfCANrtVbrRowStatus_Object = MibTableColumn
mscAtmIfCANrtVbrRowStatus = _MscAtmIfCANrtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 1, 1, 1),
    _MscAtmIfCANrtVbrRowStatus_Type()
)
mscAtmIfCANrtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrRowStatus.setStatus("mandatory")
_MscAtmIfCANrtVbrComponentName_Type = DisplayString
_MscAtmIfCANrtVbrComponentName_Object = MibTableColumn
mscAtmIfCANrtVbrComponentName = _MscAtmIfCANrtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 1, 1, 2),
    _MscAtmIfCANrtVbrComponentName_Type()
)
mscAtmIfCANrtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrComponentName.setStatus("mandatory")
_MscAtmIfCANrtVbrStorageType_Type = StorageType
_MscAtmIfCANrtVbrStorageType_Object = MibTableColumn
mscAtmIfCANrtVbrStorageType = _MscAtmIfCANrtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 1, 1, 4),
    _MscAtmIfCANrtVbrStorageType_Type()
)
mscAtmIfCANrtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrStorageType.setStatus("mandatory")


class _MscAtmIfCANrtVbrIndex_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfCANrtVbrIndex_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrIndex_Object = MibTableColumn
mscAtmIfCANrtVbrIndex = _MscAtmIfCANrtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 1, 1, 10),
    _MscAtmIfCANrtVbrIndex_Type()
)
mscAtmIfCANrtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrIndex.setStatus("mandatory")
_MscAtmIfCANrtVbrProvTable_Object = MibTable
mscAtmIfCANrtVbrProvTable = _MscAtmIfCANrtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrProvTable.setStatus("mandatory")
_MscAtmIfCANrtVbrProvEntry_Object = MibTableRow
mscAtmIfCANrtVbrProvEntry = _MscAtmIfCANrtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1)
)
mscAtmIfCANrtVbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrProvEntry.setStatus("mandatory")


class _MscAtmIfCANrtVbrPool_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfCANrtVbrPool_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrPool_Object = MibTableColumn
mscAtmIfCANrtVbrPool = _MscAtmIfCANrtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 1),
    _MscAtmIfCANrtVbrPool_Type()
)
mscAtmIfCANrtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrPool.setStatus("mandatory")


class _MscAtmIfCANrtVbrCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_MscAtmIfCANrtVbrCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrCdvt_Object = MibTableColumn
mscAtmIfCANrtVbrCdvt = _MscAtmIfCANrtVbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 2),
    _MscAtmIfCANrtVbrCdvt_Type()
)
mscAtmIfCANrtVbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrCdvt.setStatus("mandatory")


class _MscAtmIfCANrtVbrCellLossRatio_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfCANrtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrCellLossRatio_Object = MibTableColumn
mscAtmIfCANrtVbrCellLossRatio = _MscAtmIfCANrtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 3),
    _MscAtmIfCANrtVbrCellLossRatio_Type()
)
mscAtmIfCANrtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrCellLossRatio.setStatus("mandatory")


class _MscAtmIfCANrtVbrTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfCANrtVbrTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrTxQueueLimit_Object = MibTableColumn
mscAtmIfCANrtVbrTxQueueLimit = _MscAtmIfCANrtVbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 4),
    _MscAtmIfCANrtVbrTxQueueLimit_Type()
)
mscAtmIfCANrtVbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrTxQueueLimit.setStatus("mandatory")


class _MscAtmIfCANrtVbrSvcHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrSvcHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCANrtVbrSvcHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrSvcHoldingPriority_Object = MibTableColumn
mscAtmIfCANrtVbrSvcHoldingPriority = _MscAtmIfCANrtVbrSvcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 5),
    _MscAtmIfCANrtVbrSvcHoldingPriority_Type()
)
mscAtmIfCANrtVbrSvcHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrSvcHoldingPriority.setStatus("obsolete")


class _MscAtmIfCANrtVbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 160000),
    )


_MscAtmIfCANrtVbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrMinPerVcQueueLimit_Object = MibTableColumn
mscAtmIfCANrtVbrMinPerVcQueueLimit = _MscAtmIfCANrtVbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 6),
    _MscAtmIfCANrtVbrMinPerVcQueueLimit_Type()
)
mscAtmIfCANrtVbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrMinPerVcQueueLimit.setStatus("mandatory")


class _MscAtmIfCANrtVbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1416905),
    )


_MscAtmIfCANrtVbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
mscAtmIfCANrtVbrPerVcQueueLimitReferenceRate = _MscAtmIfCANrtVbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 7),
    _MscAtmIfCANrtVbrPerVcQueueLimitReferenceRate_Type()
)
mscAtmIfCANrtVbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _MscAtmIfCANrtVbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCANrtVbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrSvcMpHoldingPriority_Object = MibTableColumn
mscAtmIfCANrtVbrSvcMpHoldingPriority = _MscAtmIfCANrtVbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 8),
    _MscAtmIfCANrtVbrSvcMpHoldingPriority_Type()
)
mscAtmIfCANrtVbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrSvcMpHoldingPriority.setStatus("mandatory")


class _MscAtmIfCANrtVbrHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCANrtVbrHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrHoldingPriority_Object = MibTableColumn
mscAtmIfCANrtVbrHoldingPriority = _MscAtmIfCANrtVbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 9),
    _MscAtmIfCANrtVbrHoldingPriority_Type()
)
mscAtmIfCANrtVbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrHoldingPriority.setStatus("mandatory")


class _MscAtmIfCANrtVbrEmissionPriority_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrEmissionPriority based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MscAtmIfCANrtVbrEmissionPriority_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrEmissionPriority_Object = MibTableColumn
mscAtmIfCANrtVbrEmissionPriority = _MscAtmIfCANrtVbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 10),
    _MscAtmIfCANrtVbrEmissionPriority_Type()
)
mscAtmIfCANrtVbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrEmissionPriority.setStatus("mandatory")


class _MscAtmIfCANrtVbrTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_MscAtmIfCANrtVbrTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrTrafficShaping_Object = MibTableColumn
mscAtmIfCANrtVbrTrafficShaping = _MscAtmIfCANrtVbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 14),
    _MscAtmIfCANrtVbrTrafficShaping_Type()
)
mscAtmIfCANrtVbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrTrafficShaping.setStatus("mandatory")


class _MscAtmIfCANrtVbrShapeRecoupPolicy_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_MscAtmIfCANrtVbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrShapeRecoupPolicy_Object = MibTableColumn
mscAtmIfCANrtVbrShapeRecoupPolicy = _MscAtmIfCANrtVbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 15),
    _MscAtmIfCANrtVbrShapeRecoupPolicy_Type()
)
mscAtmIfCANrtVbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrShapeRecoupPolicy.setStatus("mandatory")


class _MscAtmIfCANrtVbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCANrtVbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCANrtVbrUnshapedTransmitQueueing = _MscAtmIfCANrtVbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 16),
    _MscAtmIfCANrtVbrUnshapedTransmitQueueing_Type()
)
mscAtmIfCANrtVbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCANrtVbrUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_MscAtmIfCANrtVbrUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrUsageParameterControl_Object = MibTableColumn
mscAtmIfCANrtVbrUsageParameterControl = _MscAtmIfCANrtVbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 17),
    _MscAtmIfCANrtVbrUsageParameterControl_Type()
)
mscAtmIfCANrtVbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrUsageParameterControl.setStatus("mandatory")


class _MscAtmIfCANrtVbrWeightPolicy_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrWeightPolicy based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("pcr", 2),
          ("scr", 1))
    )


_MscAtmIfCANrtVbrWeightPolicy_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrWeightPolicy_Object = MibTableColumn
mscAtmIfCANrtVbrWeightPolicy = _MscAtmIfCANrtVbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 18),
    _MscAtmIfCANrtVbrWeightPolicy_Type()
)
mscAtmIfCANrtVbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrWeightPolicy.setStatus("mandatory")


class _MscAtmIfCANrtVbrForceTagging_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfCANrtVbrForceTagging_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrForceTagging_Object = MibTableColumn
mscAtmIfCANrtVbrForceTagging = _MscAtmIfCANrtVbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 100, 1, 19),
    _MscAtmIfCANrtVbrForceTagging_Type()
)
mscAtmIfCANrtVbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrForceTagging.setStatus("mandatory")
_MscAtmIfCANrtVbrOperTable_Object = MibTable
mscAtmIfCANrtVbrOperTable = _MscAtmIfCANrtVbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrOperTable.setStatus("mandatory")
_MscAtmIfCANrtVbrOperEntry_Object = MibTableRow
mscAtmIfCANrtVbrOperEntry = _MscAtmIfCANrtVbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 110, 1)
)
mscAtmIfCANrtVbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrOperEntry.setStatus("mandatory")


class _MscAtmIfCANrtVbrOpUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCANrtVbrOpUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCANrtVbrOpUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCANrtVbrOpUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCANrtVbrOpUnshapedTransmitQueueing = _MscAtmIfCANrtVbrOpUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 110, 1, 10),
    _MscAtmIfCANrtVbrOpUnshapedTransmitQueueing_Type()
)
mscAtmIfCANrtVbrOpUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrOpUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCANrtVbrEpdOffset_Type(Unsigned32):
    """Custom type mscAtmIfCANrtVbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_MscAtmIfCANrtVbrEpdOffset_Type.__name__ = "Unsigned32"
_MscAtmIfCANrtVbrEpdOffset_Object = MibTableColumn
mscAtmIfCANrtVbrEpdOffset = _MscAtmIfCANrtVbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 4, 110, 1, 11),
    _MscAtmIfCANrtVbrEpdOffset_Type()
)
mscAtmIfCANrtVbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCANrtVbrEpdOffset.setStatus("mandatory")
_MscAtmIfCAAbr_ObjectIdentity = ObjectIdentity
mscAtmIfCAAbr = _MscAtmIfCAAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5)
)
_MscAtmIfCAAbrRowStatusTable_Object = MibTable
mscAtmIfCAAbrRowStatusTable = _MscAtmIfCAAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfCAAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfCAAbrRowStatusEntry_Object = MibTableRow
mscAtmIfCAAbrRowStatusEntry = _MscAtmIfCAAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 1, 1)
)
mscAtmIfCAAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfCAAbrRowStatus_Type = RowStatus
_MscAtmIfCAAbrRowStatus_Object = MibTableColumn
mscAtmIfCAAbrRowStatus = _MscAtmIfCAAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 1, 1, 1),
    _MscAtmIfCAAbrRowStatus_Type()
)
mscAtmIfCAAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrRowStatus.setStatus("mandatory")
_MscAtmIfCAAbrComponentName_Type = DisplayString
_MscAtmIfCAAbrComponentName_Object = MibTableColumn
mscAtmIfCAAbrComponentName = _MscAtmIfCAAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 1, 1, 2),
    _MscAtmIfCAAbrComponentName_Type()
)
mscAtmIfCAAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrComponentName.setStatus("mandatory")
_MscAtmIfCAAbrStorageType_Type = StorageType
_MscAtmIfCAAbrStorageType_Object = MibTableColumn
mscAtmIfCAAbrStorageType = _MscAtmIfCAAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 1, 1, 4),
    _MscAtmIfCAAbrStorageType_Type()
)
mscAtmIfCAAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrStorageType.setStatus("mandatory")


class _MscAtmIfCAAbrIndex_Type(Integer32):
    """Custom type mscAtmIfCAAbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfCAAbrIndex_Type.__name__ = "Integer32"
_MscAtmIfCAAbrIndex_Object = MibTableColumn
mscAtmIfCAAbrIndex = _MscAtmIfCAAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 1, 1, 10),
    _MscAtmIfCAAbrIndex_Type()
)
mscAtmIfCAAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrIndex.setStatus("mandatory")
_MscAtmIfCAAbrProvTable_Object = MibTable
mscAtmIfCAAbrProvTable = _MscAtmIfCAAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCAAbrProvTable.setStatus("mandatory")
_MscAtmIfCAAbrProvEntry_Object = MibTableRow
mscAtmIfCAAbrProvEntry = _MscAtmIfCAAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1)
)
mscAtmIfCAAbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAAbrProvEntry.setStatus("mandatory")


class _MscAtmIfCAAbrPool_Type(Integer32):
    """Custom type mscAtmIfCAAbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfCAAbrPool_Type.__name__ = "Integer32"
_MscAtmIfCAAbrPool_Object = MibTableColumn
mscAtmIfCAAbrPool = _MscAtmIfCAAbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 10),
    _MscAtmIfCAAbrPool_Type()
)
mscAtmIfCAAbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrPool.setStatus("mandatory")


class _MscAtmIfCAAbrCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_MscAtmIfCAAbrCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrCdvt_Object = MibTableColumn
mscAtmIfCAAbrCdvt = _MscAtmIfCAAbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 11),
    _MscAtmIfCAAbrCdvt_Type()
)
mscAtmIfCAAbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrCdvt.setStatus("mandatory")


class _MscAtmIfCAAbrTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_MscAtmIfCAAbrTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrTxQueueLimit_Object = MibTableColumn
mscAtmIfCAAbrTxQueueLimit = _MscAtmIfCAAbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 12),
    _MscAtmIfCAAbrTxQueueLimit_Type()
)
mscAtmIfCAAbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrTxQueueLimit.setStatus("mandatory")


class _MscAtmIfCAAbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30000),
    )


_MscAtmIfCAAbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrMinPerVcQueueLimit_Object = MibTableColumn
mscAtmIfCAAbrMinPerVcQueueLimit = _MscAtmIfCAAbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 13),
    _MscAtmIfCAAbrMinPerVcQueueLimit_Type()
)
mscAtmIfCAAbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrMinPerVcQueueLimit.setStatus("mandatory")


class _MscAtmIfCAAbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 943396),
    )


_MscAtmIfCAAbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
mscAtmIfCAAbrPerVcQueueLimitReferenceRate = _MscAtmIfCAAbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 14),
    _MscAtmIfCAAbrPerVcQueueLimitReferenceRate_Type()
)
mscAtmIfCAAbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _MscAtmIfCAAbrEmissionPriority_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrEmissionPriority based on Unsigned32"""
    defaultValue = 6

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MscAtmIfCAAbrEmissionPriority_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrEmissionPriority_Object = MibTableColumn
mscAtmIfCAAbrEmissionPriority = _MscAtmIfCAAbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 15),
    _MscAtmIfCAAbrEmissionPriority_Type()
)
mscAtmIfCAAbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrEmissionPriority.setStatus("mandatory")


class _MscAtmIfCAAbrFairnessPolicy_Type(Integer32):
    """Custom type mscAtmIfCAAbrFairnessPolicy based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("mcr", 0),
          ("pcr", 2),
          ("pcrMinusMcr", 4))
    )


_MscAtmIfCAAbrFairnessPolicy_Type.__name__ = "Integer32"
_MscAtmIfCAAbrFairnessPolicy_Object = MibTableColumn
mscAtmIfCAAbrFairnessPolicy = _MscAtmIfCAAbrFairnessPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 19),
    _MscAtmIfCAAbrFairnessPolicy_Type()
)
mscAtmIfCAAbrFairnessPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrFairnessPolicy.setStatus("mandatory")


class _MscAtmIfCAAbrFrttPortion_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrFrttPortion based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_MscAtmIfCAAbrFrttPortion_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrFrttPortion_Object = MibTableColumn
mscAtmIfCAAbrFrttPortion = _MscAtmIfCAAbrFrttPortion_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 20),
    _MscAtmIfCAAbrFrttPortion_Type()
)
mscAtmIfCAAbrFrttPortion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrFrttPortion.setStatus("mandatory")


class _MscAtmIfCAAbrAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfCAAbrAbrConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              5)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("virtualSourceDest", 3))
    )


_MscAtmIfCAAbrAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfCAAbrAbrConnectionType_Object = MibTableColumn
mscAtmIfCAAbrAbrConnectionType = _MscAtmIfCAAbrAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 21),
    _MscAtmIfCAAbrAbrConnectionType_Type()
)
mscAtmIfCAAbrAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrAbrConnectionType.setStatus("mandatory")


class _MscAtmIfCAAbrUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfCAAbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_MscAtmIfCAAbrUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfCAAbrUsageParameterControl_Object = MibTableColumn
mscAtmIfCAAbrUsageParameterControl = _MscAtmIfCAAbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 22),
    _MscAtmIfCAAbrUsageParameterControl_Type()
)
mscAtmIfCAAbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrUsageParameterControl.setStatus("mandatory")


class _MscAtmIfCAAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777218

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_MscAtmIfCAAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrInitialCellRate_Object = MibTableColumn
mscAtmIfCAAbrInitialCellRate = _MscAtmIfCAAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 23),
    _MscAtmIfCAAbrInitialCellRate_Type()
)
mscAtmIfCAAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfCAAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 15

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfCAAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfCAAbrRateDecreaseFactor = _MscAtmIfCAAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 24),
    _MscAtmIfCAAbrRateDecreaseFactor_Type()
)
mscAtmIfCAAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfCAAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfCAAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfCAAbrRateIncreaseFactor = _MscAtmIfCAAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 25),
    _MscAtmIfCAAbrRateIncreaseFactor_Type()
)
mscAtmIfCAAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfCAAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 256

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_MscAtmIfCAAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfCAAbrMaxCellPerRmCell = _MscAtmIfCAAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 26),
    _MscAtmIfCAAbrMaxCellPerRmCell_Type()
)
mscAtmIfCAAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfCAAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrMaxTimeBetweenRmCell based on Unsigned32"""
    defaultValue = 100000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_MscAtmIfCAAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrMaxTimeBetweenRmCell_Object = MibTableColumn
mscAtmIfCAAbrMaxTimeBetweenRmCell = _MscAtmIfCAAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 27),
    _MscAtmIfCAAbrMaxTimeBetweenRmCell_Type()
)
mscAtmIfCAAbrMaxTimeBetweenRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _MscAtmIfCAAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_MscAtmIfCAAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfCAAbrCutoffDecreaseFactor = _MscAtmIfCAAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 28),
    _MscAtmIfCAAbrCutoffDecreaseFactor_Type()
)
mscAtmIfCAAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfCAAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfCAAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfCAAbrAcrDecreaseTimeFactor = _MscAtmIfCAAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 29),
    _MscAtmIfCAAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfCAAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfCAAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 10000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
    )


_MscAtmIfCAAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrDgcraMaximumDelay_Object = MibTableColumn
mscAtmIfCAAbrDgcraMaximumDelay = _MscAtmIfCAAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 30),
    _MscAtmIfCAAbrDgcraMaximumDelay_Type()
)
mscAtmIfCAAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrDgcraMaximumDelay.setStatus("mandatory")


class _MscAtmIfCAAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
    )


_MscAtmIfCAAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrDgcraMinimumDelay_Object = MibTableColumn
mscAtmIfCAAbrDgcraMinimumDelay = _MscAtmIfCAAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 31),
    _MscAtmIfCAAbrDgcraMinimumDelay_Type()
)
mscAtmIfCAAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrDgcraMinimumDelay.setStatus("mandatory")


class _MscAtmIfCAAbrHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCAAbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCAAbrHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCAAbrHoldingPriority_Object = MibTableColumn
mscAtmIfCAAbrHoldingPriority = _MscAtmIfCAAbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 100, 1, 32),
    _MscAtmIfCAAbrHoldingPriority_Type()
)
mscAtmIfCAAbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrHoldingPriority.setStatus("mandatory")
_MscAtmIfCAAbrOperTable_Object = MibTable
mscAtmIfCAAbrOperTable = _MscAtmIfCAAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfCAAbrOperTable.setStatus("mandatory")
_MscAtmIfCAAbrOperEntry_Object = MibTableRow
mscAtmIfCAAbrOperEntry = _MscAtmIfCAAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 110, 1)
)
mscAtmIfCAAbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAAbrOperEntry.setStatus("mandatory")


class _MscAtmIfCAAbrEpdOffset_Type(Unsigned32):
    """Custom type mscAtmIfCAAbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_MscAtmIfCAAbrEpdOffset_Type.__name__ = "Unsigned32"
_MscAtmIfCAAbrEpdOffset_Object = MibTableColumn
mscAtmIfCAAbrEpdOffset = _MscAtmIfCAAbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 5, 110, 1, 10),
    _MscAtmIfCAAbrEpdOffset_Type()
)
mscAtmIfCAAbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAAbrEpdOffset.setStatus("mandatory")
_MscAtmIfCAUbr_ObjectIdentity = ObjectIdentity
mscAtmIfCAUbr = _MscAtmIfCAUbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6)
)
_MscAtmIfCAUbrRowStatusTable_Object = MibTable
mscAtmIfCAUbrRowStatusTable = _MscAtmIfCAUbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfCAUbrRowStatusTable.setStatus("mandatory")
_MscAtmIfCAUbrRowStatusEntry_Object = MibTableRow
mscAtmIfCAUbrRowStatusEntry = _MscAtmIfCAUbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 1, 1)
)
mscAtmIfCAUbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAUbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAUbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfCAUbrRowStatus_Type = RowStatus
_MscAtmIfCAUbrRowStatus_Object = MibTableColumn
mscAtmIfCAUbrRowStatus = _MscAtmIfCAUbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 1, 1, 1),
    _MscAtmIfCAUbrRowStatus_Type()
)
mscAtmIfCAUbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrRowStatus.setStatus("mandatory")
_MscAtmIfCAUbrComponentName_Type = DisplayString
_MscAtmIfCAUbrComponentName_Object = MibTableColumn
mscAtmIfCAUbrComponentName = _MscAtmIfCAUbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 1, 1, 2),
    _MscAtmIfCAUbrComponentName_Type()
)
mscAtmIfCAUbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrComponentName.setStatus("mandatory")
_MscAtmIfCAUbrStorageType_Type = StorageType
_MscAtmIfCAUbrStorageType_Object = MibTableColumn
mscAtmIfCAUbrStorageType = _MscAtmIfCAUbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 1, 1, 4),
    _MscAtmIfCAUbrStorageType_Type()
)
mscAtmIfCAUbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrStorageType.setStatus("mandatory")


class _MscAtmIfCAUbrIndex_Type(Integer32):
    """Custom type mscAtmIfCAUbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfCAUbrIndex_Type.__name__ = "Integer32"
_MscAtmIfCAUbrIndex_Object = MibTableColumn
mscAtmIfCAUbrIndex = _MscAtmIfCAUbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 1, 1, 10),
    _MscAtmIfCAUbrIndex_Type()
)
mscAtmIfCAUbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrIndex.setStatus("mandatory")
_MscAtmIfCAUbrProvTable_Object = MibTable
mscAtmIfCAUbrProvTable = _MscAtmIfCAUbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCAUbrProvTable.setStatus("mandatory")
_MscAtmIfCAUbrProvEntry_Object = MibTableRow
mscAtmIfCAUbrProvEntry = _MscAtmIfCAUbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1)
)
mscAtmIfCAUbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAUbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAUbrProvEntry.setStatus("mandatory")


class _MscAtmIfCAUbrMaxVpcs_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrMaxVpcs based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
        ValueRangeConstraint(16385, 16385),
    )


_MscAtmIfCAUbrMaxVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrMaxVpcs_Object = MibTableColumn
mscAtmIfCAUbrMaxVpcs = _MscAtmIfCAUbrMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 5),
    _MscAtmIfCAUbrMaxVpcs_Type()
)
mscAtmIfCAUbrMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrMaxVpcs.setStatus("mandatory")


class _MscAtmIfCAUbrMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrMaxVccs based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
        ValueRangeConstraint(16385, 16385),
    )


_MscAtmIfCAUbrMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrMaxVccs_Object = MibTableColumn
mscAtmIfCAUbrMaxVccs = _MscAtmIfCAUbrMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 6),
    _MscAtmIfCAUbrMaxVccs_Type()
)
mscAtmIfCAUbrMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrMaxVccs.setStatus("mandatory")


class _MscAtmIfCAUbrMaxVpts_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrMaxVpts based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
        ValueRangeConstraint(16385, 16385),
    )


_MscAtmIfCAUbrMaxVpts_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrMaxVpts_Object = MibTableColumn
mscAtmIfCAUbrMaxVpts = _MscAtmIfCAUbrMaxVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 7),
    _MscAtmIfCAUbrMaxVpts_Type()
)
mscAtmIfCAUbrMaxVpts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrMaxVpts.setStatus("mandatory")


class _MscAtmIfCAUbrPool_Type(Integer32):
    """Custom type mscAtmIfCAUbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfCAUbrPool_Type.__name__ = "Integer32"
_MscAtmIfCAUbrPool_Object = MibTableColumn
mscAtmIfCAUbrPool = _MscAtmIfCAUbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 10),
    _MscAtmIfCAUbrPool_Type()
)
mscAtmIfCAUbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrPool.setStatus("mandatory")


class _MscAtmIfCAUbrMinimumCellRate_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrMinimumCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCAUbrMinimumCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrMinimumCellRate_Object = MibTableColumn
mscAtmIfCAUbrMinimumCellRate = _MscAtmIfCAUbrMinimumCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 11),
    _MscAtmIfCAUbrMinimumCellRate_Type()
)
mscAtmIfCAUbrMinimumCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrMinimumCellRate.setStatus("mandatory")


class _MscAtmIfCAUbrTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfCAUbrTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrTxQueueLimit_Object = MibTableColumn
mscAtmIfCAUbrTxQueueLimit = _MscAtmIfCAUbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 12),
    _MscAtmIfCAUbrTxQueueLimit_Type()
)
mscAtmIfCAUbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrTxQueueLimit.setStatus("mandatory")


class _MscAtmIfCAUbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30000),
    )


_MscAtmIfCAUbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrMinPerVcQueueLimit_Object = MibTableColumn
mscAtmIfCAUbrMinPerVcQueueLimit = _MscAtmIfCAUbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 13),
    _MscAtmIfCAUbrMinPerVcQueueLimit_Type()
)
mscAtmIfCAUbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrMinPerVcQueueLimit.setStatus("mandatory")


class _MscAtmIfCAUbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1416905),
    )


_MscAtmIfCAUbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
mscAtmIfCAUbrPerVcQueueLimitReferenceRate = _MscAtmIfCAUbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 14),
    _MscAtmIfCAUbrPerVcQueueLimitReferenceRate_Type()
)
mscAtmIfCAUbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _MscAtmIfCAUbrEmissionPriority_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrEmissionPriority based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_MscAtmIfCAUbrEmissionPriority_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrEmissionPriority_Object = MibTableColumn
mscAtmIfCAUbrEmissionPriority = _MscAtmIfCAUbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 15),
    _MscAtmIfCAUbrEmissionPriority_Type()
)
mscAtmIfCAUbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrEmissionPriority.setStatus("mandatory")


class _MscAtmIfCAUbrTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfCAUbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_MscAtmIfCAUbrTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfCAUbrTrafficShaping_Object = MibTableColumn
mscAtmIfCAUbrTrafficShaping = _MscAtmIfCAUbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 19),
    _MscAtmIfCAUbrTrafficShaping_Type()
)
mscAtmIfCAUbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrTrafficShaping.setStatus("mandatory")


class _MscAtmIfCAUbrShapeRecoupPolicy_Type(Integer32):
    """Custom type mscAtmIfCAUbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_MscAtmIfCAUbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_MscAtmIfCAUbrShapeRecoupPolicy_Object = MibTableColumn
mscAtmIfCAUbrShapeRecoupPolicy = _MscAtmIfCAUbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 20),
    _MscAtmIfCAUbrShapeRecoupPolicy_Type()
)
mscAtmIfCAUbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrShapeRecoupPolicy.setStatus("mandatory")


class _MscAtmIfCAUbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCAUbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCAUbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCAUbrUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCAUbrUnshapedTransmitQueueing = _MscAtmIfCAUbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 21),
    _MscAtmIfCAUbrUnshapedTransmitQueueing_Type()
)
mscAtmIfCAUbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCAUbrUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfCAUbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_MscAtmIfCAUbrUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfCAUbrUsageParameterControl_Object = MibTableColumn
mscAtmIfCAUbrUsageParameterControl = _MscAtmIfCAUbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 22),
    _MscAtmIfCAUbrUsageParameterControl_Type()
)
mscAtmIfCAUbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrUsageParameterControl.setStatus("mandatory")


class _MscAtmIfCAUbrWeightPolicy_Type(Integer32):
    """Custom type mscAtmIfCAUbrWeightPolicy based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("mcr", 0),
          ("pcr", 2))
    )


_MscAtmIfCAUbrWeightPolicy_Type.__name__ = "Integer32"
_MscAtmIfCAUbrWeightPolicy_Object = MibTableColumn
mscAtmIfCAUbrWeightPolicy = _MscAtmIfCAUbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 23),
    _MscAtmIfCAUbrWeightPolicy_Type()
)
mscAtmIfCAUbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrWeightPolicy.setStatus("mandatory")


class _MscAtmIfCAUbrForceTagging_Type(Integer32):
    """Custom type mscAtmIfCAUbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfCAUbrForceTagging_Type.__name__ = "Integer32"
_MscAtmIfCAUbrForceTagging_Object = MibTableColumn
mscAtmIfCAUbrForceTagging = _MscAtmIfCAUbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 24),
    _MscAtmIfCAUbrForceTagging_Type()
)
mscAtmIfCAUbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrForceTagging.setStatus("mandatory")


class _MscAtmIfCAUbrCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_MscAtmIfCAUbrCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrCdvt_Object = MibTableColumn
mscAtmIfCAUbrCdvt = _MscAtmIfCAUbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 30),
    _MscAtmIfCAUbrCdvt_Type()
)
mscAtmIfCAUbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrCdvt.setStatus("mandatory")


class _MscAtmIfCAUbrHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCAUbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCAUbrHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCAUbrHoldingPriority_Object = MibTableColumn
mscAtmIfCAUbrHoldingPriority = _MscAtmIfCAUbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 40),
    _MscAtmIfCAUbrHoldingPriority_Type()
)
mscAtmIfCAUbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrHoldingPriority.setStatus("mandatory")


class _MscAtmIfCAUbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCAUbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCAUbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCAUbrSvcMpHoldingPriority_Object = MibTableColumn
mscAtmIfCAUbrSvcMpHoldingPriority = _MscAtmIfCAUbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 100, 1, 50),
    _MscAtmIfCAUbrSvcMpHoldingPriority_Type()
)
mscAtmIfCAUbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrSvcMpHoldingPriority.setStatus("mandatory")
_MscAtmIfCAUbrOperTable_Object = MibTable
mscAtmIfCAUbrOperTable = _MscAtmIfCAUbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfCAUbrOperTable.setStatus("mandatory")
_MscAtmIfCAUbrOperEntry_Object = MibTableRow
mscAtmIfCAUbrOperEntry = _MscAtmIfCAUbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110, 1)
)
mscAtmIfCAUbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAUbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAUbrOperEntry.setStatus("mandatory")


class _MscAtmIfCAUbrOpUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfCAUbrOpUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_MscAtmIfCAUbrOpUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfCAUbrOpUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfCAUbrOpUnshapedTransmitQueueing = _MscAtmIfCAUbrOpUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110, 1, 10),
    _MscAtmIfCAUbrOpUnshapedTransmitQueueing_Type()
)
mscAtmIfCAUbrOpUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrOpUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfCAUbrVpcUsage_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrVpcUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAUbrVpcUsage_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrVpcUsage_Object = MibTableColumn
mscAtmIfCAUbrVpcUsage = _MscAtmIfCAUbrVpcUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110, 1, 11),
    _MscAtmIfCAUbrVpcUsage_Type()
)
mscAtmIfCAUbrVpcUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrVpcUsage.setStatus("mandatory")


class _MscAtmIfCAUbrVccUsage_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrVccUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAUbrVccUsage_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrVccUsage_Object = MibTableColumn
mscAtmIfCAUbrVccUsage = _MscAtmIfCAUbrVccUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110, 1, 12),
    _MscAtmIfCAUbrVccUsage_Type()
)
mscAtmIfCAUbrVccUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrVccUsage.setStatus("mandatory")


class _MscAtmIfCAUbrVptUsage_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrVptUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAUbrVptUsage_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrVptUsage_Object = MibTableColumn
mscAtmIfCAUbrVptUsage = _MscAtmIfCAUbrVptUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110, 1, 13),
    _MscAtmIfCAUbrVptUsage_Type()
)
mscAtmIfCAUbrVptUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrVptUsage.setStatus("mandatory")


class _MscAtmIfCAUbrEpdOffset_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_MscAtmIfCAUbrEpdOffset_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrEpdOffset_Object = MibTableColumn
mscAtmIfCAUbrEpdOffset = _MscAtmIfCAUbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 6, 110, 1, 14),
    _MscAtmIfCAUbrEpdOffset_Type()
)
mscAtmIfCAUbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrEpdOffset.setStatus("mandatory")
_MscAtmIfCAProvTable_Object = MibTable
mscAtmIfCAProvTable = _MscAtmIfCAProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCAProvTable.setStatus("mandatory")
_MscAtmIfCAProvEntry_Object = MibTableRow
mscAtmIfCAProvEntry = _MscAtmIfCAProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1)
)
mscAtmIfCAProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAProvEntry.setStatus("mandatory")


class _MscAtmIfCAMaxVpcs_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxVpcs based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAMaxVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxVpcs_Object = MibTableColumn
mscAtmIfCAMaxVpcs = _MscAtmIfCAMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 5),
    _MscAtmIfCAMaxVpcs_Type()
)
mscAtmIfCAMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxVpcs.setStatus("obsolete")


class _MscAtmIfCAMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxVccs based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfCAMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxVccs_Object = MibTableColumn
mscAtmIfCAMaxVccs = _MscAtmIfCAMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 6),
    _MscAtmIfCAMaxVccs_Type()
)
mscAtmIfCAMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxVccs.setStatus("mandatory")


class _MscAtmIfCAMinMulticastBranches_Type(Unsigned32):
    """Custom type mscAtmIfCAMinMulticastBranches based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAMinMulticastBranches_Type.__name__ = "Unsigned32"
_MscAtmIfCAMinMulticastBranches_Object = MibTableColumn
mscAtmIfCAMinMulticastBranches = _MscAtmIfCAMinMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 7),
    _MscAtmIfCAMinMulticastBranches_Type()
)
mscAtmIfCAMinMulticastBranches.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMinMulticastBranches.setStatus("mandatory")


class _MscAtmIfCAMaxMulticastBranches_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxMulticastBranches based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 16384),
    )


_MscAtmIfCAMaxMulticastBranches_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxMulticastBranches_Object = MibTableColumn
mscAtmIfCAMaxMulticastBranches = _MscAtmIfCAMaxMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 8),
    _MscAtmIfCAMaxMulticastBranches_Type()
)
mscAtmIfCAMaxMulticastBranches.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxMulticastBranches.setStatus("mandatory")


class _MscAtmIfCAMaxVpts_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxVpts based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAMaxVpts_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxVpts_Object = MibTableColumn
mscAtmIfCAMaxVpts = _MscAtmIfCAMaxVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 9),
    _MscAtmIfCAMaxVpts_Type()
)
mscAtmIfCAMaxVpts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxVpts.setStatus("obsolete")


class _MscAtmIfCAMinAutoSelectedVci_Type(Unsigned32):
    """Custom type mscAtmIfCAMinAutoSelectedVci based on Unsigned32"""
    defaultValue = 32

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 65535),
    )


_MscAtmIfCAMinAutoSelectedVci_Type.__name__ = "Unsigned32"
_MscAtmIfCAMinAutoSelectedVci_Object = MibTableColumn
mscAtmIfCAMinAutoSelectedVci = _MscAtmIfCAMinAutoSelectedVci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 10),
    _MscAtmIfCAMinAutoSelectedVci_Type()
)
mscAtmIfCAMinAutoSelectedVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMinAutoSelectedVci.setStatus("obsolete")


class _MscAtmIfCAMinAutoSelectedVciForVpiZero_Type(Unsigned32):
    """Custom type mscAtmIfCAMinAutoSelectedVciForVpiZero based on Unsigned32"""
    defaultValue = 32

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MscAtmIfCAMinAutoSelectedVciForVpiZero_Type.__name__ = "Unsigned32"
_MscAtmIfCAMinAutoSelectedVciForVpiZero_Object = MibTableColumn
mscAtmIfCAMinAutoSelectedVciForVpiZero = _MscAtmIfCAMinAutoSelectedVciForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 15),
    _MscAtmIfCAMinAutoSelectedVciForVpiZero_Type()
)
mscAtmIfCAMinAutoSelectedVciForVpiZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMinAutoSelectedVciForVpiZero.setStatus("mandatory")


class _MscAtmIfCAMinAutoSelectedVciForNonZeroVpi_Type(Unsigned32):
    """Custom type mscAtmIfCAMinAutoSelectedVciForNonZeroVpi based on Unsigned32"""
    defaultValue = 32

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 65535),
    )


_MscAtmIfCAMinAutoSelectedVciForNonZeroVpi_Type.__name__ = "Unsigned32"
_MscAtmIfCAMinAutoSelectedVciForNonZeroVpi_Object = MibTableColumn
mscAtmIfCAMinAutoSelectedVciForNonZeroVpi = _MscAtmIfCAMinAutoSelectedVciForNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 20),
    _MscAtmIfCAMinAutoSelectedVciForNonZeroVpi_Type()
)
mscAtmIfCAMinAutoSelectedVciForNonZeroVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMinAutoSelectedVciForNonZeroVpi.setStatus("mandatory")


class _MscAtmIfCAPermittedSvcAtmServiceCategories_Type(OctetString):
    """Custom type mscAtmIfCAPermittedSvcAtmServiceCategories based on OctetString"""
    defaultHexValue = "f0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfCAPermittedSvcAtmServiceCategories_Type.__name__ = "OctetString"
_MscAtmIfCAPermittedSvcAtmServiceCategories_Object = MibTableColumn
mscAtmIfCAPermittedSvcAtmServiceCategories = _MscAtmIfCAPermittedSvcAtmServiceCategories_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 25),
    _MscAtmIfCAPermittedSvcAtmServiceCategories_Type()
)
mscAtmIfCAPermittedSvcAtmServiceCategories.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAPermittedSvcAtmServiceCategories.setStatus("obsolete")


class _MscAtmIfCACbrPool_Type(Integer32):
    """Custom type mscAtmIfCACbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("pool1", 1),
          ("pool2", 2),
          ("pool3", 3))
    )


_MscAtmIfCACbrPool_Type.__name__ = "Integer32"
_MscAtmIfCACbrPool_Object = MibTableColumn
mscAtmIfCACbrPool = _MscAtmIfCACbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 30),
    _MscAtmIfCACbrPool_Type()
)
mscAtmIfCACbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrPool.setStatus("obsolete")


class _MscAtmIfCACbrCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCACbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_MscAtmIfCACbrCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCACbrCdvt_Object = MibTableColumn
mscAtmIfCACbrCdvt = _MscAtmIfCACbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 40),
    _MscAtmIfCACbrCdvt_Type()
)
mscAtmIfCACbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrCdvt.setStatus("obsolete")


class _MscAtmIfCACbrCellLossRatio_Type(Integer32):
    """Custom type mscAtmIfCACbrCellLossRatio based on Integer32"""
    defaultValue = -10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-10, 0),
    )


_MscAtmIfCACbrCellLossRatio_Type.__name__ = "Integer32"
_MscAtmIfCACbrCellLossRatio_Object = MibTableColumn
mscAtmIfCACbrCellLossRatio = _MscAtmIfCACbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 50),
    _MscAtmIfCACbrCellLossRatio_Type()
)
mscAtmIfCACbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCACbrCellLossRatio.setStatus("obsolete")


class _MscAtmIfCASvcCbrHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCASvcCbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCASvcCbrHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCASvcCbrHoldingPriority_Object = MibTableColumn
mscAtmIfCASvcCbrHoldingPriority = _MscAtmIfCASvcCbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 51),
    _MscAtmIfCASvcCbrHoldingPriority_Type()
)
mscAtmIfCASvcCbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCASvcCbrHoldingPriority.setStatus("obsolete")


class _MscAtmIfCASvcVbrRtHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCASvcVbrRtHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCASvcVbrRtHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCASvcVbrRtHoldingPriority_Object = MibTableColumn
mscAtmIfCASvcVbrRtHoldingPriority = _MscAtmIfCASvcVbrRtHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 52),
    _MscAtmIfCASvcVbrRtHoldingPriority_Type()
)
mscAtmIfCASvcVbrRtHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCASvcVbrRtHoldingPriority.setStatus("obsolete")


class _MscAtmIfCASvcVbrNrtHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfCASvcVbrNrtHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfCASvcVbrNrtHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfCASvcVbrNrtHoldingPriority_Object = MibTableColumn
mscAtmIfCASvcVbrNrtHoldingPriority = _MscAtmIfCASvcVbrNrtHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 53),
    _MscAtmIfCASvcVbrNrtHoldingPriority_Type()
)
mscAtmIfCASvcVbrNrtHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCASvcVbrNrtHoldingPriority.setStatus("obsolete")


class _MscAtmIfCAVbrRtPool_Type(Integer32):
    """Custom type mscAtmIfCAVbrRtPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("pool1", 1),
          ("pool2", 2),
          ("pool3", 3))
    )


_MscAtmIfCAVbrRtPool_Type.__name__ = "Integer32"
_MscAtmIfCAVbrRtPool_Object = MibTableColumn
mscAtmIfCAVbrRtPool = _MscAtmIfCAVbrRtPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 60),
    _MscAtmIfCAVbrRtPool_Type()
)
mscAtmIfCAVbrRtPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAVbrRtPool.setStatus("obsolete")


class _MscAtmIfCAVbrRtCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCAVbrRtCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_MscAtmIfCAVbrRtCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCAVbrRtCdvt_Object = MibTableColumn
mscAtmIfCAVbrRtCdvt = _MscAtmIfCAVbrRtCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 70),
    _MscAtmIfCAVbrRtCdvt_Type()
)
mscAtmIfCAVbrRtCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAVbrRtCdvt.setStatus("obsolete")


class _MscAtmIfCAVbrRtCellLossRatio_Type(Integer32):
    """Custom type mscAtmIfCAVbrRtCellLossRatio based on Integer32"""
    defaultValue = -10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-10, 0),
    )


_MscAtmIfCAVbrRtCellLossRatio_Type.__name__ = "Integer32"
_MscAtmIfCAVbrRtCellLossRatio_Object = MibTableColumn
mscAtmIfCAVbrRtCellLossRatio = _MscAtmIfCAVbrRtCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 80),
    _MscAtmIfCAVbrRtCellLossRatio_Type()
)
mscAtmIfCAVbrRtCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAVbrRtCellLossRatio.setStatus("obsolete")


class _MscAtmIfCAVbrNrtPool_Type(Integer32):
    """Custom type mscAtmIfCAVbrNrtPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("pool1", 1),
          ("pool2", 2),
          ("pool3", 3))
    )


_MscAtmIfCAVbrNrtPool_Type.__name__ = "Integer32"
_MscAtmIfCAVbrNrtPool_Object = MibTableColumn
mscAtmIfCAVbrNrtPool = _MscAtmIfCAVbrNrtPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 90),
    _MscAtmIfCAVbrNrtPool_Type()
)
mscAtmIfCAVbrNrtPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAVbrNrtPool.setStatus("obsolete")


class _MscAtmIfCAVbrNrtCdvt_Type(Unsigned32):
    """Custom type mscAtmIfCAVbrNrtCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_MscAtmIfCAVbrNrtCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfCAVbrNrtCdvt_Object = MibTableColumn
mscAtmIfCAVbrNrtCdvt = _MscAtmIfCAVbrNrtCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 100),
    _MscAtmIfCAVbrNrtCdvt_Type()
)
mscAtmIfCAVbrNrtCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAVbrNrtCdvt.setStatus("obsolete")


class _MscAtmIfCAMaxCaVpcs_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxCaVpcs based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfCAMaxCaVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxCaVpcs_Object = MibTableColumn
mscAtmIfCAMaxCaVpcs = _MscAtmIfCAMaxCaVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 105),
    _MscAtmIfCAMaxCaVpcs_Type()
)
mscAtmIfCAMaxCaVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxCaVpcs.setStatus("mandatory")


class _MscAtmIfCAMaxCaVpts_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxCaVpts based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfCAMaxCaVpts_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxCaVpts_Object = MibTableColumn
mscAtmIfCAMaxCaVpts = _MscAtmIfCAMaxCaVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 106),
    _MscAtmIfCAMaxCaVpts_Type()
)
mscAtmIfCAMaxCaVpts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxCaVpts.setStatus("mandatory")


class _MscAtmIfCAVbrNrtCellLossRatio_Type(Integer32):
    """Custom type mscAtmIfCAVbrNrtCellLossRatio based on Integer32"""
    defaultValue = -7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-10, 0),
    )


_MscAtmIfCAVbrNrtCellLossRatio_Type.__name__ = "Integer32"
_MscAtmIfCAVbrNrtCellLossRatio_Object = MibTableColumn
mscAtmIfCAVbrNrtCellLossRatio = _MscAtmIfCAVbrNrtCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 110),
    _MscAtmIfCAVbrNrtCellLossRatio_Type()
)
mscAtmIfCAVbrNrtCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAVbrNrtCellLossRatio.setStatus("obsolete")


class _MscAtmIfCAUbrMaxConnections_Type(Unsigned32):
    """Custom type mscAtmIfCAUbrMaxConnections based on Unsigned32"""
    defaultValue = 16384

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAUbrMaxConnections_Type.__name__ = "Unsigned32"
_MscAtmIfCAUbrMaxConnections_Object = MibTableColumn
mscAtmIfCAUbrMaxConnections = _MscAtmIfCAUbrMaxConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 120),
    _MscAtmIfCAUbrMaxConnections_Type()
)
mscAtmIfCAUbrMaxConnections.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrMaxConnections.setStatus("obsolete")


class _MscAtmIfCAMinAutoSelectedVpi_Type(Unsigned32):
    """Custom type mscAtmIfCAMinAutoSelectedVpi based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_MscAtmIfCAMinAutoSelectedVpi_Type.__name__ = "Unsigned32"
_MscAtmIfCAMinAutoSelectedVpi_Object = MibTableColumn
mscAtmIfCAMinAutoSelectedVpi = _MscAtmIfCAMinAutoSelectedVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 121),
    _MscAtmIfCAMinAutoSelectedVpi_Type()
)
mscAtmIfCAMinAutoSelectedVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMinAutoSelectedVpi.setStatus("mandatory")


class _MscAtmIfCAPermittedAtmServiceCategories_Type(OctetString):
    """Custom type mscAtmIfCAPermittedAtmServiceCategories based on OctetString"""
    defaultHexValue = "f0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfCAPermittedAtmServiceCategories_Type.__name__ = "OctetString"
_MscAtmIfCAPermittedAtmServiceCategories_Object = MibTableColumn
mscAtmIfCAPermittedAtmServiceCategories = _MscAtmIfCAPermittedAtmServiceCategories_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 122),
    _MscAtmIfCAPermittedAtmServiceCategories_Type()
)
mscAtmIfCAPermittedAtmServiceCategories.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAPermittedAtmServiceCategories.setStatus("mandatory")


class _MscAtmIfCAMaxAutoSelectedVpi_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxAutoSelectedVpi based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_MscAtmIfCAMaxAutoSelectedVpi_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxAutoSelectedVpi_Object = MibTableColumn
mscAtmIfCAMaxAutoSelectedVpi = _MscAtmIfCAMaxAutoSelectedVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 125),
    _MscAtmIfCAMaxAutoSelectedVpi_Type()
)
mscAtmIfCAMaxAutoSelectedVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxAutoSelectedVpi.setStatus("mandatory")


class _MscAtmIfCAMaxAutoSelectedVciForVpiZero_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxAutoSelectedVciForVpiZero based on Unsigned32"""
    defaultValue = 767

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MscAtmIfCAMaxAutoSelectedVciForVpiZero_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxAutoSelectedVciForVpiZero_Object = MibTableColumn
mscAtmIfCAMaxAutoSelectedVciForVpiZero = _MscAtmIfCAMaxAutoSelectedVciForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 126),
    _MscAtmIfCAMaxAutoSelectedVciForVpiZero_Type()
)
mscAtmIfCAMaxAutoSelectedVciForVpiZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxAutoSelectedVciForVpiZero.setStatus("mandatory")


class _MscAtmIfCAMaxAutoSelectedVciForNonZeroVpi_Type(Unsigned32):
    """Custom type mscAtmIfCAMaxAutoSelectedVciForNonZeroVpi based on Unsigned32"""
    defaultValue = 63

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 65535),
    )


_MscAtmIfCAMaxAutoSelectedVciForNonZeroVpi_Type.__name__ = "Unsigned32"
_MscAtmIfCAMaxAutoSelectedVciForNonZeroVpi_Object = MibTableColumn
mscAtmIfCAMaxAutoSelectedVciForNonZeroVpi = _MscAtmIfCAMaxAutoSelectedVciForNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 100, 1, 127),
    _MscAtmIfCAMaxAutoSelectedVciForNonZeroVpi_Type()
)
mscAtmIfCAMaxAutoSelectedVciForNonZeroVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCAMaxAutoSelectedVciForNonZeroVpi.setStatus("mandatory")
_MscAtmIfCAOperTable_Object = MibTable
mscAtmIfCAOperTable = _MscAtmIfCAOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfCAOperTable.setStatus("mandatory")
_MscAtmIfCAOperEntry_Object = MibTableRow
mscAtmIfCAOperEntry = _MscAtmIfCAOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1)
)
mscAtmIfCAOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAOperEntry.setStatus("mandatory")


class _MscAtmIfCAActualMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfCAActualMaxVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAActualMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfCAActualMaxVccs_Object = MibTableColumn
mscAtmIfCAActualMaxVccs = _MscAtmIfCAActualMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 6),
    _MscAtmIfCAActualMaxVccs_Type()
)
mscAtmIfCAActualMaxVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAActualMaxVccs.setStatus("mandatory")


class _MscAtmIfCAPermanentVpcs_Type(Unsigned32):
    """Custom type mscAtmIfCAPermanentVpcs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAPermanentVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfCAPermanentVpcs_Object = MibTableColumn
mscAtmIfCAPermanentVpcs = _MscAtmIfCAPermanentVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 10),
    _MscAtmIfCAPermanentVpcs_Type()
)
mscAtmIfCAPermanentVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPermanentVpcs.setStatus("mandatory")


class _MscAtmIfCAPermanentVpts_Type(Unsigned32):
    """Custom type mscAtmIfCAPermanentVpts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAPermanentVpts_Type.__name__ = "Unsigned32"
_MscAtmIfCAPermanentVpts_Object = MibTableColumn
mscAtmIfCAPermanentVpts = _MscAtmIfCAPermanentVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 15),
    _MscAtmIfCAPermanentVpts_Type()
)
mscAtmIfCAPermanentVpts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPermanentVpts.setStatus("mandatory")


class _MscAtmIfCAPermanentVccs_Type(Unsigned32):
    """Custom type mscAtmIfCAPermanentVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAPermanentVccs_Type.__name__ = "Unsigned32"
_MscAtmIfCAPermanentVccs_Object = MibTableColumn
mscAtmIfCAPermanentVccs = _MscAtmIfCAPermanentVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 20),
    _MscAtmIfCAPermanentVccs_Type()
)
mscAtmIfCAPermanentVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPermanentVccs.setStatus("mandatory")


class _MscAtmIfCASwitchedVccs_Type(Gauge32):
    """Custom type mscAtmIfCASwitchedVccs based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCASwitchedVccs_Type.__name__ = "Gauge32"
_MscAtmIfCASwitchedVccs_Object = MibTableColumn
mscAtmIfCASwitchedVccs = _MscAtmIfCASwitchedVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 30),
    _MscAtmIfCASwitchedVccs_Type()
)
mscAtmIfCASwitchedVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCASwitchedVccs.setStatus("mandatory")


class _MscAtmIfCASwitchedMulticastBranches_Type(Gauge32):
    """Custom type mscAtmIfCASwitchedMulticastBranches based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10752),
    )


_MscAtmIfCASwitchedMulticastBranches_Type.__name__ = "Gauge32"
_MscAtmIfCASwitchedMulticastBranches_Object = MibTableColumn
mscAtmIfCASwitchedMulticastBranches = _MscAtmIfCASwitchedMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 40),
    _MscAtmIfCASwitchedMulticastBranches_Type()
)
mscAtmIfCASwitchedMulticastBranches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCASwitchedMulticastBranches.setStatus("mandatory")


class _MscAtmIfCAPermanentMulticastBranches_Type(Gauge32):
    """Custom type mscAtmIfCAPermanentMulticastBranches based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10752),
    )


_MscAtmIfCAPermanentMulticastBranches_Type.__name__ = "Gauge32"
_MscAtmIfCAPermanentMulticastBranches_Object = MibTableColumn
mscAtmIfCAPermanentMulticastBranches = _MscAtmIfCAPermanentMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 55),
    _MscAtmIfCAPermanentMulticastBranches_Type()
)
mscAtmIfCAPermanentMulticastBranches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPermanentMulticastBranches.setStatus("mandatory")


class _MscAtmIfCATroubledVpcs_Type(Unsigned32):
    """Custom type mscAtmIfCATroubledVpcs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCATroubledVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfCATroubledVpcs_Object = MibTableColumn
mscAtmIfCATroubledVpcs = _MscAtmIfCATroubledVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 60),
    _MscAtmIfCATroubledVpcs_Type()
)
mscAtmIfCATroubledVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCATroubledVpcs.setStatus("mandatory")


class _MscAtmIfCATroubledVpts_Type(Unsigned32):
    """Custom type mscAtmIfCATroubledVpts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCATroubledVpts_Type.__name__ = "Unsigned32"
_MscAtmIfCATroubledVpts_Object = MibTableColumn
mscAtmIfCATroubledVpts = _MscAtmIfCATroubledVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 65),
    _MscAtmIfCATroubledVpts_Type()
)
mscAtmIfCATroubledVpts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCATroubledVpts.setStatus("mandatory")


class _MscAtmIfCATroubledVccs_Type(Unsigned32):
    """Custom type mscAtmIfCATroubledVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCATroubledVccs_Type.__name__ = "Unsigned32"
_MscAtmIfCATroubledVccs_Object = MibTableColumn
mscAtmIfCATroubledVccs = _MscAtmIfCATroubledVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 70),
    _MscAtmIfCATroubledVccs_Type()
)
mscAtmIfCATroubledVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCATroubledVccs.setStatus("mandatory")


class _MscAtmIfCAUbrAvailableConnections_Type(Gauge32):
    """Custom type mscAtmIfCAUbrAvailableConnections based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAUbrAvailableConnections_Type.__name__ = "Gauge32"
_MscAtmIfCAUbrAvailableConnections_Object = MibTableColumn
mscAtmIfCAUbrAvailableConnections = _MscAtmIfCAUbrAvailableConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 80),
    _MscAtmIfCAUbrAvailableConnections_Type()
)
mscAtmIfCAUbrAvailableConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAUbrAvailableConnections.setStatus("obsolete")


class _MscAtmIfCAConnectionPoolUsage_Type(Gauge32):
    """Custom type mscAtmIfCAConnectionPoolUsage based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAConnectionPoolUsage_Type.__name__ = "Gauge32"
_MscAtmIfCAConnectionPoolUsage_Object = MibTableColumn
mscAtmIfCAConnectionPoolUsage = _MscAtmIfCAConnectionPoolUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 81),
    _MscAtmIfCAConnectionPoolUsage_Type()
)
mscAtmIfCAConnectionPoolUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAConnectionPoolUsage.setStatus("mandatory")


class _MscAtmIfCASwitchedVpcs_Type(Gauge32):
    """Custom type mscAtmIfCASwitchedVpcs based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfCASwitchedVpcs_Type.__name__ = "Gauge32"
_MscAtmIfCASwitchedVpcs_Object = MibTableColumn
mscAtmIfCASwitchedVpcs = _MscAtmIfCASwitchedVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 82),
    _MscAtmIfCASwitchedVpcs_Type()
)
mscAtmIfCASwitchedVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCASwitchedVpcs.setStatus("mandatory")


class _MscAtmIfCAActualMaxVpcs_Type(Unsigned32):
    """Custom type mscAtmIfCAActualMaxVpcs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAActualMaxVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfCAActualMaxVpcs_Object = MibTableColumn
mscAtmIfCAActualMaxVpcs = _MscAtmIfCAActualMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 105),
    _MscAtmIfCAActualMaxVpcs_Type()
)
mscAtmIfCAActualMaxVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAActualMaxVpcs.setStatus("mandatory")


class _MscAtmIfCAActualMaxVpts_Type(Unsigned32):
    """Custom type mscAtmIfCAActualMaxVpts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_MscAtmIfCAActualMaxVpts_Type.__name__ = "Unsigned32"
_MscAtmIfCAActualMaxVpts_Object = MibTableColumn
mscAtmIfCAActualMaxVpts = _MscAtmIfCAActualMaxVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 110, 1, 106),
    _MscAtmIfCAActualMaxVpts_Type()
)
mscAtmIfCAActualMaxVpts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAActualMaxVpts.setStatus("mandatory")
_MscAtmIfCAPmTable_Object = MibTable
mscAtmIfCAPmTable = _MscAtmIfCAPmTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPmTable.setStatus("mandatory")
_MscAtmIfCAPmEntry_Object = MibTableRow
mscAtmIfCAPmEntry = _MscAtmIfCAPmEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 120, 1)
)
mscAtmIfCAPmEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPmEntry.setStatus("mandatory")


class _MscAtmIfCAOamFPmConnections_Type(Unsigned32):
    """Custom type mscAtmIfCAOamFPmConnections based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfCAOamFPmConnections_Type.__name__ = "Unsigned32"
_MscAtmIfCAOamFPmConnections_Object = MibTableColumn
mscAtmIfCAOamFPmConnections = _MscAtmIfCAOamFPmConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 120, 1, 1),
    _MscAtmIfCAOamFPmConnections_Type()
)
mscAtmIfCAOamFPmConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAOamFPmConnections.setStatus("mandatory")


class _MscAtmIfCAOamBrPmConnections_Type(Unsigned32):
    """Custom type mscAtmIfCAOamBrPmConnections based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfCAOamBrPmConnections_Type.__name__ = "Unsigned32"
_MscAtmIfCAOamBrPmConnections_Object = MibTableColumn
mscAtmIfCAOamBrPmConnections = _MscAtmIfCAOamBrPmConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 120, 1, 2),
    _MscAtmIfCAOamBrPmConnections_Type()
)
mscAtmIfCAOamBrPmConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAOamBrPmConnections.setStatus("mandatory")


class _MscAtmIfCAOamCcConnections_Type(Unsigned32):
    """Custom type mscAtmIfCAOamCcConnections based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfCAOamCcConnections_Type.__name__ = "Unsigned32"
_MscAtmIfCAOamCcConnections_Object = MibTableColumn
mscAtmIfCAOamCcConnections = _MscAtmIfCAOamCcConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 120, 1, 3),
    _MscAtmIfCAOamCcConnections_Type()
)
mscAtmIfCAOamCcConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAOamCcConnections.setStatus("mandatory")
_MscAtmIfCABwPoolTable_Object = MibTable
mscAtmIfCABwPoolTable = _MscAtmIfCABwPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 293)
)
if mibBuilder.loadTexts:
    mscAtmIfCABwPoolTable.setStatus("mandatory")
_MscAtmIfCABwPoolEntry_Object = MibTableRow
mscAtmIfCABwPoolEntry = _MscAtmIfCABwPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 293, 1)
)
mscAtmIfCABwPoolEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCABwPoolIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCABwPoolEntry.setStatus("mandatory")


class _MscAtmIfCABwPoolIndex_Type(Integer32):
    """Custom type mscAtmIfCABwPoolIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCABwPoolIndex_Type.__name__ = "Integer32"
_MscAtmIfCABwPoolIndex_Object = MibTableColumn
mscAtmIfCABwPoolIndex = _MscAtmIfCABwPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 293, 1, 1),
    _MscAtmIfCABwPoolIndex_Type()
)
mscAtmIfCABwPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCABwPoolIndex.setStatus("mandatory")


class _MscAtmIfCABwPoolValue_Type(Unsigned32):
    """Custom type mscAtmIfCABwPoolValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12800),
    )


_MscAtmIfCABwPoolValue_Type.__name__ = "Unsigned32"
_MscAtmIfCABwPoolValue_Object = MibTableColumn
mscAtmIfCABwPoolValue = _MscAtmIfCABwPoolValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 293, 1, 2),
    _MscAtmIfCABwPoolValue_Type()
)
mscAtmIfCABwPoolValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCABwPoolValue.setStatus("mandatory")
_MscAtmIfCAPoolRequBwTable_Object = MibTable
mscAtmIfCAPoolRequBwTable = _MscAtmIfCAPoolRequBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 296)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolRequBwTable.setStatus("mandatory")
_MscAtmIfCAPoolRequBwEntry_Object = MibTableRow
mscAtmIfCAPoolRequBwEntry = _MscAtmIfCAPoolRequBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 296, 1)
)
mscAtmIfCAPoolRequBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolRequBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolRequBwEntry.setStatus("mandatory")


class _MscAtmIfCAPoolRequBwIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolRequBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCAPoolRequBwIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolRequBwIndex_Object = MibTableColumn
mscAtmIfCAPoolRequBwIndex = _MscAtmIfCAPoolRequBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 296, 1, 1),
    _MscAtmIfCAPoolRequBwIndex_Type()
)
mscAtmIfCAPoolRequBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolRequBwIndex.setStatus("mandatory")


class _MscAtmIfCAPoolRequBwValue_Type(Gauge32):
    """Custom type mscAtmIfCAPoolRequBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCAPoolRequBwValue_Type.__name__ = "Gauge32"
_MscAtmIfCAPoolRequBwValue_Object = MibTableColumn
mscAtmIfCAPoolRequBwValue = _MscAtmIfCAPoolRequBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 296, 1, 2),
    _MscAtmIfCAPoolRequBwValue_Type()
)
mscAtmIfCAPoolRequBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolRequBwValue.setStatus("mandatory")
_MscAtmIfCAPoolAdmitBwTable_Object = MibTable
mscAtmIfCAPoolAdmitBwTable = _MscAtmIfCAPoolAdmitBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 299)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmitBwTable.setStatus("mandatory")
_MscAtmIfCAPoolAdmitBwEntry_Object = MibTableRow
mscAtmIfCAPoolAdmitBwEntry = _MscAtmIfCAPoolAdmitBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 299, 1)
)
mscAtmIfCAPoolAdmitBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolAdmitBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmitBwEntry.setStatus("mandatory")


class _MscAtmIfCAPoolAdmitBwIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolAdmitBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCAPoolAdmitBwIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolAdmitBwIndex_Object = MibTableColumn
mscAtmIfCAPoolAdmitBwIndex = _MscAtmIfCAPoolAdmitBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 299, 1, 1),
    _MscAtmIfCAPoolAdmitBwIndex_Type()
)
mscAtmIfCAPoolAdmitBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmitBwIndex.setStatus("mandatory")


class _MscAtmIfCAPoolAdmitBwValue_Type(Gauge32):
    """Custom type mscAtmIfCAPoolAdmitBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCAPoolAdmitBwValue_Type.__name__ = "Gauge32"
_MscAtmIfCAPoolAdmitBwValue_Object = MibTableColumn
mscAtmIfCAPoolAdmitBwValue = _MscAtmIfCAPoolAdmitBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 299, 1, 2),
    _MscAtmIfCAPoolAdmitBwValue_Type()
)
mscAtmIfCAPoolAdmitBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmitBwValue.setStatus("mandatory")
_MscAtmIfCAPoolAvailBwTable_Object = MibTable
mscAtmIfCAPoolAvailBwTable = _MscAtmIfCAPoolAvailBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 300)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailBwTable.setStatus("obsolete")
_MscAtmIfCAPoolAvailBwEntry_Object = MibTableRow
mscAtmIfCAPoolAvailBwEntry = _MscAtmIfCAPoolAvailBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 300, 1)
)
mscAtmIfCAPoolAvailBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolAvailBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailBwEntry.setStatus("obsolete")


class _MscAtmIfCAPoolAvailBwIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolAvailBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_MscAtmIfCAPoolAvailBwIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolAvailBwIndex_Object = MibTableColumn
mscAtmIfCAPoolAvailBwIndex = _MscAtmIfCAPoolAvailBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 300, 1, 1),
    _MscAtmIfCAPoolAvailBwIndex_Type()
)
mscAtmIfCAPoolAvailBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailBwIndex.setStatus("obsolete")


class _MscAtmIfCAPoolAvailBwValue_Type(Gauge32):
    """Custom type mscAtmIfCAPoolAvailBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCAPoolAvailBwValue_Type.__name__ = "Gauge32"
_MscAtmIfCAPoolAvailBwValue_Object = MibTableColumn
mscAtmIfCAPoolAvailBwValue = _MscAtmIfCAPoolAvailBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 300, 1, 2),
    _MscAtmIfCAPoolAvailBwValue_Type()
)
mscAtmIfCAPoolAvailBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailBwValue.setStatus("obsolete")
_MscAtmIfCAPoolProvBwTable_Object = MibTable
mscAtmIfCAPoolProvBwTable = _MscAtmIfCAPoolProvBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 319)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolProvBwTable.setStatus("mandatory")
_MscAtmIfCAPoolProvBwEntry_Object = MibTableRow
mscAtmIfCAPoolProvBwEntry = _MscAtmIfCAPoolProvBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 319, 1)
)
mscAtmIfCAPoolProvBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolProvBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolProvBwEntry.setStatus("mandatory")


class _MscAtmIfCAPoolProvBwIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolProvBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCAPoolProvBwIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolProvBwIndex_Object = MibTableColumn
mscAtmIfCAPoolProvBwIndex = _MscAtmIfCAPoolProvBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 319, 1, 1),
    _MscAtmIfCAPoolProvBwIndex_Type()
)
mscAtmIfCAPoolProvBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolProvBwIndex.setStatus("mandatory")


class _MscAtmIfCAPoolProvBwValue_Type(Gauge32):
    """Custom type mscAtmIfCAPoolProvBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfCAPoolProvBwValue_Type.__name__ = "Gauge32"
_MscAtmIfCAPoolProvBwValue_Object = MibTableColumn
mscAtmIfCAPoolProvBwValue = _MscAtmIfCAPoolProvBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 319, 1, 2),
    _MscAtmIfCAPoolProvBwValue_Type()
)
mscAtmIfCAPoolProvBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolProvBwValue.setStatus("mandatory")
_MscAtmIfCAPoolWaitAdmConnsTable_Object = MibTable
mscAtmIfCAPoolWaitAdmConnsTable = _MscAtmIfCAPoolWaitAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 320)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolWaitAdmConnsTable.setStatus("mandatory")
_MscAtmIfCAPoolWaitAdmConnsEntry_Object = MibTableRow
mscAtmIfCAPoolWaitAdmConnsEntry = _MscAtmIfCAPoolWaitAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 320, 1)
)
mscAtmIfCAPoolWaitAdmConnsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolWaitAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolWaitAdmConnsEntry.setStatus("mandatory")


class _MscAtmIfCAPoolWaitAdmConnsIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolWaitAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCAPoolWaitAdmConnsIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolWaitAdmConnsIndex_Object = MibTableColumn
mscAtmIfCAPoolWaitAdmConnsIndex = _MscAtmIfCAPoolWaitAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 320, 1, 1),
    _MscAtmIfCAPoolWaitAdmConnsIndex_Type()
)
mscAtmIfCAPoolWaitAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolWaitAdmConnsIndex.setStatus("mandatory")


class _MscAtmIfCAPoolWaitAdmConnsValue_Type(Gauge32):
    """Custom type mscAtmIfCAPoolWaitAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAPoolWaitAdmConnsValue_Type.__name__ = "Gauge32"
_MscAtmIfCAPoolWaitAdmConnsValue_Object = MibTableColumn
mscAtmIfCAPoolWaitAdmConnsValue = _MscAtmIfCAPoolWaitAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 320, 1, 2),
    _MscAtmIfCAPoolWaitAdmConnsValue_Type()
)
mscAtmIfCAPoolWaitAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolWaitAdmConnsValue.setStatus("mandatory")
_MscAtmIfCAPoolAdmConnsTable_Object = MibTable
mscAtmIfCAPoolAdmConnsTable = _MscAtmIfCAPoolAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 321)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmConnsTable.setStatus("mandatory")
_MscAtmIfCAPoolAdmConnsEntry_Object = MibTableRow
mscAtmIfCAPoolAdmConnsEntry = _MscAtmIfCAPoolAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 321, 1)
)
mscAtmIfCAPoolAdmConnsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmConnsEntry.setStatus("mandatory")


class _MscAtmIfCAPoolAdmConnsIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCAPoolAdmConnsIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolAdmConnsIndex_Object = MibTableColumn
mscAtmIfCAPoolAdmConnsIndex = _MscAtmIfCAPoolAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 321, 1, 1),
    _MscAtmIfCAPoolAdmConnsIndex_Type()
)
mscAtmIfCAPoolAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmConnsIndex.setStatus("mandatory")


class _MscAtmIfCAPoolAdmConnsValue_Type(Gauge32):
    """Custom type mscAtmIfCAPoolAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfCAPoolAdmConnsValue_Type.__name__ = "Gauge32"
_MscAtmIfCAPoolAdmConnsValue_Object = MibTableColumn
mscAtmIfCAPoolAdmConnsValue = _MscAtmIfCAPoolAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 321, 1, 2),
    _MscAtmIfCAPoolAdmConnsValue_Type()
)
mscAtmIfCAPoolAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAdmConnsValue.setStatus("mandatory")
_MscAtmIfCAPoolAvailableBwTable_Object = MibTable
mscAtmIfCAPoolAvailableBwTable = _MscAtmIfCAPoolAvailableBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 326)
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailableBwTable.setStatus("mandatory")
_MscAtmIfCAPoolAvailableBwEntry_Object = MibTableRow
mscAtmIfCAPoolAvailableBwEntry = _MscAtmIfCAPoolAvailableBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 326, 1)
)
mscAtmIfCAPoolAvailableBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfCAPoolAvailableBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailableBwEntry.setStatus("mandatory")


class _MscAtmIfCAPoolAvailableBwIndex_Type(Integer32):
    """Custom type mscAtmIfCAPoolAvailableBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfCAPoolAvailableBwIndex_Type.__name__ = "Integer32"
_MscAtmIfCAPoolAvailableBwIndex_Object = MibTableColumn
mscAtmIfCAPoolAvailableBwIndex = _MscAtmIfCAPoolAvailableBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 326, 1, 1),
    _MscAtmIfCAPoolAvailableBwIndex_Type()
)
mscAtmIfCAPoolAvailableBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailableBwIndex.setStatus("mandatory")


class _MscAtmIfCAPoolAvailableBwValue_Type(Integer32):
    """Custom type mscAtmIfCAPoolAvailableBwValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2147483648, 2147483647),
    )


_MscAtmIfCAPoolAvailableBwValue_Type.__name__ = "Integer32"
_MscAtmIfCAPoolAvailableBwValue_Object = MibTableColumn
mscAtmIfCAPoolAvailableBwValue = _MscAtmIfCAPoolAvailableBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 3, 326, 1, 2),
    _MscAtmIfCAPoolAvailableBwValue_Type()
)
mscAtmIfCAPoolAvailableBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfCAPoolAvailableBwValue.setStatus("mandatory")
_MscAtmIfVpc_ObjectIdentity = ObjectIdentity
mscAtmIfVpc = _MscAtmIfVpc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4)
)
_MscAtmIfVpcRowStatusTable_Object = MibTable
mscAtmIfVpcRowStatusTable = _MscAtmIfVpcRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcRowStatusEntry_Object = MibTableRow
mscAtmIfVpcRowStatusEntry = _MscAtmIfVpcRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 1, 1)
)
mscAtmIfVpcRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcRowStatus_Type = RowStatus
_MscAtmIfVpcRowStatus_Object = MibTableColumn
mscAtmIfVpcRowStatus = _MscAtmIfVpcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 1, 1, 1),
    _MscAtmIfVpcRowStatus_Type()
)
mscAtmIfVpcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcRowStatus.setStatus("mandatory")
_MscAtmIfVpcComponentName_Type = DisplayString
_MscAtmIfVpcComponentName_Object = MibTableColumn
mscAtmIfVpcComponentName = _MscAtmIfVpcComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 1, 1, 2),
    _MscAtmIfVpcComponentName_Type()
)
mscAtmIfVpcComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcComponentName.setStatus("mandatory")
_MscAtmIfVpcStorageType_Type = StorageType
_MscAtmIfVpcStorageType_Object = MibTableColumn
mscAtmIfVpcStorageType = _MscAtmIfVpcStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 1, 1, 4),
    _MscAtmIfVpcStorageType_Type()
)
mscAtmIfVpcStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStorageType.setStatus("mandatory")


class _MscAtmIfVpcIndex_Type(Integer32):
    """Custom type mscAtmIfVpcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfVpcIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcIndex_Object = MibTableColumn
mscAtmIfVpcIndex = _MscAtmIfVpcIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 1, 1, 10),
    _MscAtmIfVpcIndex_Type()
)
mscAtmIfVpcIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcIndex.setStatus("mandatory")
_MscAtmIfVpcVpd_ObjectIdentity = ObjectIdentity
mscAtmIfVpcVpd = _MscAtmIfVpcVpd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2)
)
_MscAtmIfVpcVpdRowStatusTable_Object = MibTable
mscAtmIfVpcVpdRowStatusTable = _MscAtmIfVpcVpdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcVpdRowStatusEntry_Object = MibTableRow
mscAtmIfVpcVpdRowStatusEntry = _MscAtmIfVpcVpdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 1, 1)
)
mscAtmIfVpcVpdRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcVpdRowStatus_Type = RowStatus
_MscAtmIfVpcVpdRowStatus_Object = MibTableColumn
mscAtmIfVpcVpdRowStatus = _MscAtmIfVpcVpdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 1, 1, 1),
    _MscAtmIfVpcVpdRowStatus_Type()
)
mscAtmIfVpcVpdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRowStatus.setStatus("mandatory")
_MscAtmIfVpcVpdComponentName_Type = DisplayString
_MscAtmIfVpcVpdComponentName_Object = MibTableColumn
mscAtmIfVpcVpdComponentName = _MscAtmIfVpcVpdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 1, 1, 2),
    _MscAtmIfVpcVpdComponentName_Type()
)
mscAtmIfVpcVpdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdComponentName.setStatus("mandatory")
_MscAtmIfVpcVpdStorageType_Type = StorageType
_MscAtmIfVpcVpdStorageType_Object = MibTableColumn
mscAtmIfVpcVpdStorageType = _MscAtmIfVpcVpdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 1, 1, 4),
    _MscAtmIfVpcVpdStorageType_Type()
)
mscAtmIfVpcVpdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdStorageType.setStatus("mandatory")
_MscAtmIfVpcVpdIndex_Type = NonReplicated
_MscAtmIfVpcVpdIndex_Object = MibTableColumn
mscAtmIfVpcVpdIndex = _MscAtmIfVpcVpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 1, 1, 10),
    _MscAtmIfVpcVpdIndex_Type()
)
mscAtmIfVpcVpdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdIndex.setStatus("mandatory")
_MscAtmIfVpcVpdTm_ObjectIdentity = ObjectIdentity
mscAtmIfVpcVpdTm = _MscAtmIfVpcVpdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2)
)
_MscAtmIfVpcVpdTmRowStatusTable_Object = MibTable
mscAtmIfVpcVpdTmRowStatusTable = _MscAtmIfVpcVpdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmRowStatusEntry_Object = MibTableRow
mscAtmIfVpcVpdTmRowStatusEntry = _MscAtmIfVpcVpdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 1, 1)
)
mscAtmIfVpcVpdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcVpdTmRowStatus_Type = RowStatus
_MscAtmIfVpcVpdTmRowStatus_Object = MibTableColumn
mscAtmIfVpcVpdTmRowStatus = _MscAtmIfVpcVpdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 1, 1, 1),
    _MscAtmIfVpcVpdTmRowStatus_Type()
)
mscAtmIfVpcVpdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRowStatus.setStatus("mandatory")
_MscAtmIfVpcVpdTmComponentName_Type = DisplayString
_MscAtmIfVpcVpdTmComponentName_Object = MibTableColumn
mscAtmIfVpcVpdTmComponentName = _MscAtmIfVpcVpdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 1, 1, 2),
    _MscAtmIfVpcVpdTmComponentName_Type()
)
mscAtmIfVpcVpdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmComponentName.setStatus("mandatory")
_MscAtmIfVpcVpdTmStorageType_Type = StorageType
_MscAtmIfVpcVpdTmStorageType_Object = MibTableColumn
mscAtmIfVpcVpdTmStorageType = _MscAtmIfVpcVpdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 1, 1, 4),
    _MscAtmIfVpcVpdTmStorageType_Type()
)
mscAtmIfVpcVpdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmStorageType.setStatus("mandatory")
_MscAtmIfVpcVpdTmIndex_Type = NonReplicated
_MscAtmIfVpcVpdTmIndex_Object = MibTableColumn
mscAtmIfVpcVpdTmIndex = _MscAtmIfVpcVpdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 1, 1, 10),
    _MscAtmIfVpcVpdTmIndex_Type()
)
mscAtmIfVpcVpdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmIndex.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVpcVpdTmAbr = _MscAtmIfVpcVpdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2)
)
_MscAtmIfVpcVpdTmAbrRowStatusTable_Object = MibTable
mscAtmIfVpcVpdTmAbrRowStatusTable = _MscAtmIfVpcVpdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVpcVpdTmAbrRowStatusEntry = _MscAtmIfVpcVpdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 1, 1)
)
mscAtmIfVpcVpdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrRowStatus_Type = RowStatus
_MscAtmIfVpcVpdTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrRowStatus = _MscAtmIfVpcVpdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 1, 1, 1),
    _MscAtmIfVpcVpdTmAbrRowStatus_Type()
)
mscAtmIfVpcVpdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrComponentName_Type = DisplayString
_MscAtmIfVpcVpdTmAbrComponentName_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrComponentName = _MscAtmIfVpcVpdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 1, 1, 2),
    _MscAtmIfVpcVpdTmAbrComponentName_Type()
)
mscAtmIfVpcVpdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrStorageType_Type = StorageType
_MscAtmIfVpcVpdTmAbrStorageType_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrStorageType = _MscAtmIfVpcVpdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 1, 1, 4),
    _MscAtmIfVpcVpdTmAbrStorageType_Type()
)
mscAtmIfVpcVpdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrIndex_Type = NonReplicated
_MscAtmIfVpcVpdTmAbrIndex_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrIndex = _MscAtmIfVpcVpdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 1, 1, 10),
    _MscAtmIfVpcVpdTmAbrIndex_Type()
)
mscAtmIfVpcVpdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrIndex.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrProvTable_Object = MibTable
mscAtmIfVpcVpdTmAbrProvTable = _MscAtmIfVpcVpdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrProvTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmAbrProvEntry_Object = MibTableRow
mscAtmIfVpcVpdTmAbrProvEntry = _MscAtmIfVpcVpdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1)
)
mscAtmIfVpcVpdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrProvEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_MscAtmIfVpcVpdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrInitialCellRate = _MscAtmIfVpcVpdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 10),
    _MscAtmIfVpcVpdTmAbrInitialCellRate_Type()
)
mscAtmIfVpcVpdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVpcVpdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrTransientBufferExposure = _MscAtmIfVpcVpdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 11),
    _MscAtmIfVpcVpdTmAbrTransientBufferExposure_Type()
)
mscAtmIfVpcVpdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVpcVpdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrFixedRoundTripTime = _MscAtmIfVpcVpdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 12),
    _MscAtmIfVpcVpdTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVpcVpdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrRateDecreaseFactor = _MscAtmIfVpcVpdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 13),
    _MscAtmIfVpcVpdTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVpcVpdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrRateIncreaseFactor = _MscAtmIfVpcVpdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 14),
    _MscAtmIfVpcVpdTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVpcVpdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrMaxCellPerRmCell = _MscAtmIfVpcVpdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 15),
    _MscAtmIfVpcVpdTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVpcVpdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells = _MscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 16),
    _MscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Type()
)
mscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrCutoffDecreaseFactor = _MscAtmIfVpcVpdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 17),
    _MscAtmIfVpcVpdTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVpcVpdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor = _MscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 18),
    _MscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrDgcraMaximumDelay_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrDgcraMaximumDelay = _MscAtmIfVpcVpdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 19),
    _MscAtmIfVpcVpdTmAbrDgcraMaximumDelay_Type()
)
mscAtmIfVpcVpdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVpcVpdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrDgcraMinimumDelay_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrDgcraMinimumDelay = _MscAtmIfVpcVpdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 20),
    _MscAtmIfVpcVpdTmAbrDgcraMinimumDelay_Type()
)
mscAtmIfVpcVpdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor = _MscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 21),
    _MscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
mscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVpcVpdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmAbrFarEndInitialCellRate_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrFarEndInitialCellRate = _MscAtmIfVpcVpdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 2, 110, 1, 22),
    _MscAtmIfVpcVpdTmAbrFarEndInitialCellRate_Type()
)
mscAtmIfVpcVpdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_MscAtmIfVpcVpdTmProvTable_Object = MibTable
mscAtmIfVpcVpdTmProvTable = _MscAtmIfVpcVpdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmProvTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmProvEntry_Object = MibTableRow
mscAtmIfVpcVpdTmProvEntry = _MscAtmIfVpcVpdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1)
)
mscAtmIfVpcVpdTmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmProvEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVpcVpdTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcVpdTmTxTrafficDescType = _MscAtmIfVpcVpdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 10),
    _MscAtmIfVpcVpdTmTxTrafficDescType_Type()
)
mscAtmIfVpcVpdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVpcVpdTmFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVpcVpdTmFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmFwdQosClass_Object = MibTableColumn
mscAtmIfVpcVpdTmFwdQosClass = _MscAtmIfVpcVpdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 21),
    _MscAtmIfVpcVpdTmFwdQosClass_Type()
)
mscAtmIfVpcVpdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmFwdQosClass.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfVpcVpdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmTxQueueLimit_Object = MibTableColumn
mscAtmIfVpcVpdTmTxQueueLimit = _MscAtmIfVpcVpdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 22),
    _MscAtmIfVpcVpdTmTxQueueLimit_Type()
)
mscAtmIfVpcVpdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxQueueLimit.setStatus("mandatory")


class _MscAtmIfVpcVpdTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVpcVpdTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmHoldingPriority_Object = MibTableColumn
mscAtmIfVpcVpdTmHoldingPriority = _MscAtmIfVpcVpdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 25),
    _MscAtmIfVpcVpdTmHoldingPriority_Type()
)
mscAtmIfVpcVpdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVpcVpdTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_MscAtmIfVpcVpdTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcVpdTmRxTrafficDescType = _MscAtmIfVpcVpdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 30),
    _MscAtmIfVpcVpdTmRxTrafficDescType_Type()
)
mscAtmIfVpcVpdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVpcVpdTmBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVpcVpdTmBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmBwdQosClass_Object = MibTableColumn
mscAtmIfVpcVpdTmBwdQosClass = _MscAtmIfVpcVpdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 41),
    _MscAtmIfVpcVpdTmBwdQosClass_Type()
)
mscAtmIfVpcVpdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBwdQosClass.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVpcVpdTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVpcVpdTmAtmServiceCategory = _MscAtmIfVpcVpdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 42),
    _MscAtmIfVpcVpdTmAtmServiceCategory_Type()
)
mscAtmIfVpcVpdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_MscAtmIfVpcVpdTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmTrafficShaping_Object = MibTableColumn
mscAtmIfVpcVpdTmTrafficShaping = _MscAtmIfVpcVpdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 50),
    _MscAtmIfVpcVpdTmTrafficShaping_Type()
)
mscAtmIfVpcVpdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVpcVpdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_MscAtmIfVpcVpdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVpcVpdTmUnshapedTransmitQueueing = _MscAtmIfVpcVpdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 60),
    _MscAtmIfVpcVpdTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVpcVpdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVpcVpdTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfVpcVpdTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmWeight_Object = MibTableColumn
mscAtmIfVpcVpdTmWeight = _MscAtmIfVpcVpdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 61),
    _MscAtmIfVpcVpdTmWeight_Type()
)
mscAtmIfVpcVpdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmWeight.setStatus("mandatory")


class _MscAtmIfVpcVpdTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_MscAtmIfVpcVpdTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmForceTagging_Object = MibTableColumn
mscAtmIfVpcVpdTmForceTagging = _MscAtmIfVpcVpdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 62),
    _MscAtmIfVpcVpdTmForceTagging_Type()
)
mscAtmIfVpcVpdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmForceTagging.setStatus("mandatory")


class _MscAtmIfVpcVpdTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_MscAtmIfVpcVpdTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVpcVpdTmUsageParameterControl = _MscAtmIfVpcVpdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 70),
    _MscAtmIfVpcVpdTmUsageParameterControl_Type()
)
mscAtmIfVpcVpdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVpcVpdTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVpcVpdTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVpcVpdTmBearerClassBbc = _MscAtmIfVpcVpdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 71),
    _MscAtmIfVpcVpdTmBearerClassBbc_Type()
)
mscAtmIfVpcVpdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVpcVpdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVpcVpdTmTransferCapabilityBbc = _MscAtmIfVpcVpdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 72),
    _MscAtmIfVpcVpdTmTransferCapabilityBbc_Type()
)
mscAtmIfVpcVpdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVpcVpdTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVpcVpdTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmClippingBbc_Object = MibTableColumn
mscAtmIfVpcVpdTmClippingBbc = _MscAtmIfVpcVpdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 74),
    _MscAtmIfVpcVpdTmClippingBbc_Type()
)
mscAtmIfVpcVpdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVpcVpdTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVpcVpdTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmBestEffort_Object = MibTableColumn
mscAtmIfVpcVpdTmBestEffort = _MscAtmIfVpcVpdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 75),
    _MscAtmIfVpcVpdTmBestEffort_Type()
)
mscAtmIfVpcVpdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBestEffort.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVpcVpdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVpcVpdTmTxPacketWiseDiscard = _MscAtmIfVpcVpdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 76),
    _MscAtmIfVpcVpdTmTxPacketWiseDiscard_Type()
)
mscAtmIfVpcVpdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVpcVpdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVpcVpdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVpcVpdTmRxPacketWiseDiscard = _MscAtmIfVpcVpdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 78),
    _MscAtmIfVpcVpdTmRxPacketWiseDiscard_Type()
)
mscAtmIfVpcVpdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVpcVpdTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVpcVpdTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVpcVpdTmAbrConnectionType = _MscAtmIfVpcVpdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 100, 1, 90),
    _MscAtmIfVpcVpdTmAbrConnectionType_Type()
)
mscAtmIfVpcVpdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVpcVpdTmTxTdpTable_Object = MibTable
mscAtmIfVpcVpdTmTxTdpTable = _MscAtmIfVpcVpdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 456)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmTxTdpEntry_Object = MibTableRow
mscAtmIfVpcVpdTmTxTdpEntry = _MscAtmIfVpcVpdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 456, 1)
)
mscAtmIfVpcVpdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVpcVpdTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVpcVpdTmTxTdpIndex = _MscAtmIfVpcVpdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 456, 1, 1),
    _MscAtmIfVpcVpdTmTxTdpIndex_Type()
)
mscAtmIfVpcVpdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVpcVpdTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmTxTdpValue_Object = MibTableColumn
mscAtmIfVpcVpdTmTxTdpValue = _MscAtmIfVpcVpdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 456, 1, 2),
    _MscAtmIfVpcVpdTmTxTdpValue_Type()
)
mscAtmIfVpcVpdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVpcVpdTmRxTdpTable_Object = MibTable
mscAtmIfVpcVpdTmRxTdpTable = _MscAtmIfVpcVpdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 457)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmRxTdpEntry_Object = MibTableRow
mscAtmIfVpcVpdTmRxTdpEntry = _MscAtmIfVpcVpdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 457, 1)
)
mscAtmIfVpcVpdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVpcVpdTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVpcVpdTmRxTdpIndex = _MscAtmIfVpcVpdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 457, 1, 1),
    _MscAtmIfVpcVpdTmRxTdpIndex_Type()
)
mscAtmIfVpcVpdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVpcVpdTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmRxTdpValue_Object = MibTableColumn
mscAtmIfVpcVpdTmRxTdpValue = _MscAtmIfVpcVpdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 457, 1, 2),
    _MscAtmIfVpcVpdTmRxTdpValue_Type()
)
mscAtmIfVpcVpdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVpcVpdTmFqpTable_Object = MibTable
mscAtmIfVpcVpdTmFqpTable = _MscAtmIfVpcVpdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 458)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmFqpTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmFqpEntry_Object = MibTableRow
mscAtmIfVpcVpdTmFqpEntry = _MscAtmIfVpcVpdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 458, 1)
)
mscAtmIfVpcVpdTmFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmFqpEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTmFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcVpdTmFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmFqpIndex_Object = MibTableColumn
mscAtmIfVpcVpdTmFqpIndex = _MscAtmIfVpcVpdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 458, 1, 1),
    _MscAtmIfVpcVpdTmFqpIndex_Type()
)
mscAtmIfVpcVpdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmFqpIndex.setStatus("mandatory")


class _MscAtmIfVpcVpdTmFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdTmFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmFqpValue_Object = MibTableColumn
mscAtmIfVpcVpdTmFqpValue = _MscAtmIfVpcVpdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 458, 1, 2),
    _MscAtmIfVpcVpdTmFqpValue_Type()
)
mscAtmIfVpcVpdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmFqpValue.setStatus("mandatory")
_MscAtmIfVpcVpdTmBqpTable_Object = MibTable
mscAtmIfVpcVpdTmBqpTable = _MscAtmIfVpcVpdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 459)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBqpTable.setStatus("mandatory")
_MscAtmIfVpcVpdTmBqpEntry_Object = MibTableRow
mscAtmIfVpcVpdTmBqpEntry = _MscAtmIfVpcVpdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 459, 1)
)
mscAtmIfVpcVpdTmBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBqpEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTmBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcVpdTmBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTmBqpIndex_Object = MibTableColumn
mscAtmIfVpcVpdTmBqpIndex = _MscAtmIfVpcVpdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 459, 1, 1),
    _MscAtmIfVpcVpdTmBqpIndex_Type()
)
mscAtmIfVpcVpdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBqpIndex.setStatus("mandatory")


class _MscAtmIfVpcVpdTmBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdTmBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTmBqpValue_Object = MibTableColumn
mscAtmIfVpcVpdTmBqpValue = _MscAtmIfVpcVpdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 2, 459, 1, 2),
    _MscAtmIfVpcVpdTmBqpValue_Type()
)
mscAtmIfVpcVpdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTmBqpValue.setStatus("mandatory")
_MscAtmIfVpcVpdPm_ObjectIdentity = ObjectIdentity
mscAtmIfVpcVpdPm = _MscAtmIfVpcVpdPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3)
)
_MscAtmIfVpcVpdPmRowStatusTable_Object = MibTable
mscAtmIfVpcVpdPmRowStatusTable = _MscAtmIfVpcVpdPmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcVpdPmRowStatusEntry_Object = MibTableRow
mscAtmIfVpcVpdPmRowStatusEntry = _MscAtmIfVpcVpdPmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 1, 1)
)
mscAtmIfVpcVpdPmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcVpdPmRowStatus_Type = RowStatus
_MscAtmIfVpcVpdPmRowStatus_Object = MibTableColumn
mscAtmIfVpcVpdPmRowStatus = _MscAtmIfVpcVpdPmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 1, 1, 1),
    _MscAtmIfVpcVpdPmRowStatus_Type()
)
mscAtmIfVpcVpdPmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmRowStatus.setStatus("mandatory")
_MscAtmIfVpcVpdPmComponentName_Type = DisplayString
_MscAtmIfVpcVpdPmComponentName_Object = MibTableColumn
mscAtmIfVpcVpdPmComponentName = _MscAtmIfVpcVpdPmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 1, 1, 2),
    _MscAtmIfVpcVpdPmComponentName_Type()
)
mscAtmIfVpcVpdPmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmComponentName.setStatus("mandatory")
_MscAtmIfVpcVpdPmStorageType_Type = StorageType
_MscAtmIfVpcVpdPmStorageType_Object = MibTableColumn
mscAtmIfVpcVpdPmStorageType = _MscAtmIfVpcVpdPmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 1, 1, 4),
    _MscAtmIfVpcVpdPmStorageType_Type()
)
mscAtmIfVpcVpdPmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmStorageType.setStatus("mandatory")
_MscAtmIfVpcVpdPmIndex_Type = NonReplicated
_MscAtmIfVpcVpdPmIndex_Object = MibTableColumn
mscAtmIfVpcVpdPmIndex = _MscAtmIfVpcVpdPmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 1, 1, 10),
    _MscAtmIfVpcVpdPmIndex_Type()
)
mscAtmIfVpcVpdPmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmIndex.setStatus("mandatory")
_MscAtmIfVpcVpdPmProvTable_Object = MibTable
mscAtmIfVpcVpdPmProvTable = _MscAtmIfVpcVpdPmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmProvTable.setStatus("mandatory")
_MscAtmIfVpcVpdPmProvEntry_Object = MibTableRow
mscAtmIfVpcVpdPmProvEntry = _MscAtmIfVpcVpdPmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 100, 1)
)
mscAtmIfVpcVpdPmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmProvEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdPmSegSwitchSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfVpcVpdPmSegSwitchSideMeasurement based on OctetString"""
    defaultHexValue = "20"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVpcVpdPmSegSwitchSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfVpcVpdPmSegSwitchSideMeasurement_Object = MibTableColumn
mscAtmIfVpcVpdPmSegSwitchSideMeasurement = _MscAtmIfVpcVpdPmSegSwitchSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 100, 1, 1),
    _MscAtmIfVpcVpdPmSegSwitchSideMeasurement_Type()
)
mscAtmIfVpcVpdPmSegSwitchSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmSegSwitchSideMeasurement.setStatus("mandatory")


class _MscAtmIfVpcVpdPmSegLinkSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfVpcVpdPmSegLinkSideMeasurement based on OctetString"""
    defaultHexValue = "20"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVpcVpdPmSegLinkSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfVpcVpdPmSegLinkSideMeasurement_Object = MibTableColumn
mscAtmIfVpcVpdPmSegLinkSideMeasurement = _MscAtmIfVpcVpdPmSegLinkSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 100, 1, 2),
    _MscAtmIfVpcVpdPmSegLinkSideMeasurement_Type()
)
mscAtmIfVpcVpdPmSegLinkSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmSegLinkSideMeasurement.setStatus("mandatory")


class _MscAtmIfVpcVpdPmControlMode_Type(Integer32):
    """Custom type mscAtmIfVpcVpdPmControlMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoStart", 0),
          ("onDemand", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVpcVpdPmControlMode_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdPmControlMode_Object = MibTableColumn
mscAtmIfVpcVpdPmControlMode = _MscAtmIfVpcVpdPmControlMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 3, 100, 1, 3),
    _MscAtmIfVpcVpdPmControlMode_Type()
)
mscAtmIfVpcVpdPmControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdPmControlMode.setStatus("mandatory")
_MscAtmIfVpcVpdLbkTable_Object = MibTable
mscAtmIfVpcVpdLbkTable = _MscAtmIfVpcVpdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdLbkTable.setStatus("mandatory")
_MscAtmIfVpcVpdLbkEntry_Object = MibTableRow
mscAtmIfVpcVpdLbkEntry = _MscAtmIfVpcVpdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 100, 1)
)
mscAtmIfVpcVpdLbkEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdLbkEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdSegLinkSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVpcVpdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVpcVpdSegLinkSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdSegLinkSideLoopback_Object = MibTableColumn
mscAtmIfVpcVpdSegLinkSideLoopback = _MscAtmIfVpcVpdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 100, 1, 10),
    _MscAtmIfVpcVpdSegLinkSideLoopback_Type()
)
mscAtmIfVpcVpdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdSegLinkSideLoopback.setStatus("mandatory")


class _MscAtmIfVpcVpdSegSwitchSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVpcVpdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVpcVpdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdSegSwitchSideLoopback_Object = MibTableColumn
mscAtmIfVpcVpdSegSwitchSideLoopback = _MscAtmIfVpcVpdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 100, 1, 20),
    _MscAtmIfVpcVpdSegSwitchSideLoopback_Type()
)
mscAtmIfVpcVpdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdSegSwitchSideLoopback.setStatus("mandatory")


class _MscAtmIfVpcVpdEndToEndLoopback_Type(Integer32):
    """Custom type mscAtmIfVpcVpdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVpcVpdEndToEndLoopback_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdEndToEndLoopback_Object = MibTableColumn
mscAtmIfVpcVpdEndToEndLoopback = _MscAtmIfVpcVpdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 100, 1, 30),
    _MscAtmIfVpcVpdEndToEndLoopback_Type()
)
mscAtmIfVpcVpdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdEndToEndLoopback.setStatus("mandatory")


class _MscAtmIfVpcVpdMCastConnectionType_Type(Integer32):
    """Custom type mscAtmIfVpcVpdMCastConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipointLeaf", 2),
          ("pointToMultipointRoot", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVpcVpdMCastConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdMCastConnectionType_Object = MibTableColumn
mscAtmIfVpcVpdMCastConnectionType = _MscAtmIfVpcVpdMCastConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 100, 1, 50),
    _MscAtmIfVpcVpdMCastConnectionType_Type()
)
mscAtmIfVpcVpdMCastConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdMCastConnectionType.setStatus("mandatory")
_MscAtmIfVpcVpdTrafficTable_Object = MibTable
mscAtmIfVpcVpdTrafficTable = _MscAtmIfVpcVpdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTrafficTable.setStatus("mandatory")
_MscAtmIfVpcVpdTrafficEntry_Object = MibTableRow
mscAtmIfVpcVpdTrafficEntry = _MscAtmIfVpcVpdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1)
)
mscAtmIfVpcVpdTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTrafficEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVpcVpdTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcVpdTxTrafficDescType = _MscAtmIfVpcVpdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 10),
    _MscAtmIfVpcVpdTxTrafficDescType_Type()
)
mscAtmIfVpcVpdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVpcVpdTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVpcVpdTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTxQosClass_Object = MibTableColumn
mscAtmIfVpcVpdTxQosClass = _MscAtmIfVpcVpdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 20),
    _MscAtmIfVpcVpdTxQosClass_Type()
)
mscAtmIfVpcVpdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTxQosClass.setStatus("obsolete")


class _MscAtmIfVpcVpdFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcVpdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVpcVpdFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdFwdQosClass_Object = MibTableColumn
mscAtmIfVpcVpdFwdQosClass = _MscAtmIfVpcVpdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 21),
    _MscAtmIfVpcVpdFwdQosClass_Type()
)
mscAtmIfVpcVpdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdFwdQosClass.setStatus("obsolete")


class _MscAtmIfVpcVpdHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVpcVpdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVpcVpdHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdHoldingPriority_Object = MibTableColumn
mscAtmIfVpcVpdHoldingPriority = _MscAtmIfVpcVpdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 25),
    _MscAtmIfVpcVpdHoldingPriority_Type()
)
mscAtmIfVpcVpdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdHoldingPriority.setStatus("obsolete")


class _MscAtmIfVpcVpdRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcVpdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_MscAtmIfVpcVpdRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdRxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcVpdRxTrafficDescType = _MscAtmIfVpcVpdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 30),
    _MscAtmIfVpcVpdRxTrafficDescType_Type()
)
mscAtmIfVpcVpdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVpcVpdRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcVpdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVpcVpdRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdRxQosClass_Object = MibTableColumn
mscAtmIfVpcVpdRxQosClass = _MscAtmIfVpcVpdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 40),
    _MscAtmIfVpcVpdRxQosClass_Type()
)
mscAtmIfVpcVpdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRxQosClass.setStatus("obsolete")


class _MscAtmIfVpcVpdBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcVpdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVpcVpdBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdBwdQosClass_Object = MibTableColumn
mscAtmIfVpcVpdBwdQosClass = _MscAtmIfVpcVpdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 41),
    _MscAtmIfVpcVpdBwdQosClass_Type()
)
mscAtmIfVpcVpdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBwdQosClass.setStatus("obsolete")


class _MscAtmIfVpcVpdAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVpcVpdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVpcVpdAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdAtmServiceCategory_Object = MibTableColumn
mscAtmIfVpcVpdAtmServiceCategory = _MscAtmIfVpcVpdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 42),
    _MscAtmIfVpcVpdAtmServiceCategory_Type()
)
mscAtmIfVpcVpdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVpcVpdTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVpcVpdTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTrafficShaping_Object = MibTableColumn
mscAtmIfVpcVpdTrafficShaping = _MscAtmIfVpcVpdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 50),
    _MscAtmIfVpcVpdTrafficShaping_Type()
)
mscAtmIfVpcVpdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTrafficShaping.setStatus("obsolete")


class _MscAtmIfVpcVpdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVpcVpdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_MscAtmIfVpcVpdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVpcVpdUnshapedTransmitQueueing = _MscAtmIfVpcVpdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 60),
    _MscAtmIfVpcVpdUnshapedTransmitQueueing_Type()
)
mscAtmIfVpcVpdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVpcVpdUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVpcVpdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVpcVpdUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdUsageParameterControl_Object = MibTableColumn
mscAtmIfVpcVpdUsageParameterControl = _MscAtmIfVpcVpdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 70),
    _MscAtmIfVpcVpdUsageParameterControl_Type()
)
mscAtmIfVpcVpdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVpcVpdBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVpcVpdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVpcVpdBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdBearerClassBbc_Object = MibTableColumn
mscAtmIfVpcVpdBearerClassBbc = _MscAtmIfVpcVpdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 71),
    _MscAtmIfVpcVpdBearerClassBbc_Type()
)
mscAtmIfVpcVpdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVpcVpdTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVpcVpdTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVpcVpdTransferCapabilityBbc = _MscAtmIfVpcVpdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 72),
    _MscAtmIfVpcVpdTransferCapabilityBbc_Type()
)
mscAtmIfVpcVpdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVpcVpdClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVpcVpdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVpcVpdClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdClippingBbc_Object = MibTableColumn
mscAtmIfVpcVpdClippingBbc = _MscAtmIfVpcVpdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 74),
    _MscAtmIfVpcVpdClippingBbc_Type()
)
mscAtmIfVpcVpdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdClippingBbc.setStatus("obsolete")


class _MscAtmIfVpcVpdBestEffort_Type(Integer32):
    """Custom type mscAtmIfVpcVpdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVpcVpdBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdBestEffort_Object = MibTableColumn
mscAtmIfVpcVpdBestEffort = _MscAtmIfVpcVpdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 75),
    _MscAtmIfVpcVpdBestEffort_Type()
)
mscAtmIfVpcVpdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBestEffort.setStatus("obsolete")


class _MscAtmIfVpcVpdFwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVpcVpdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVpcVpdFwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdFwdFrameDiscard_Object = MibTableColumn
mscAtmIfVpcVpdFwdFrameDiscard = _MscAtmIfVpcVpdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 76),
    _MscAtmIfVpcVpdFwdFrameDiscard_Type()
)
mscAtmIfVpcVpdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdFwdFrameDiscard.setStatus("obsolete")


class _MscAtmIfVpcVpdBwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVpcVpdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVpcVpdBwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdBwdFrameDiscard_Object = MibTableColumn
mscAtmIfVpcVpdBwdFrameDiscard = _MscAtmIfVpcVpdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 110, 1, 77),
    _MscAtmIfVpcVpdBwdFrameDiscard_Type()
)
mscAtmIfVpcVpdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBwdFrameDiscard.setStatus("obsolete")
_MscAtmIfVpcVpdAcctTable_Object = MibTable
mscAtmIfVpcVpdAcctTable = _MscAtmIfVpcVpdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 111)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdAcctTable.setStatus("mandatory")
_MscAtmIfVpcVpdAcctEntry_Object = MibTableRow
mscAtmIfVpcVpdAcctEntry = _MscAtmIfVpcVpdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 111, 1)
)
mscAtmIfVpcVpdAcctEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdAcctEntry.setStatus("mandatory")


class _MscAtmIfVpcVpdCorrelationTag_Type(AsciiString):
    """Custom type mscAtmIfVpcVpdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_MscAtmIfVpcVpdCorrelationTag_Type.__name__ = "AsciiString"
_MscAtmIfVpcVpdCorrelationTag_Object = MibTableColumn
mscAtmIfVpcVpdCorrelationTag = _MscAtmIfVpcVpdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 111, 1, 10),
    _MscAtmIfVpcVpdCorrelationTag_Type()
)
mscAtmIfVpcVpdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdCorrelationTag.setStatus("mandatory")
_MscAtmIfVpcVpdTxTdpTable_Object = MibTable
mscAtmIfVpcVpdTxTdpTable = _MscAtmIfVpcVpdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 297)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTxTdpTable.setStatus("obsolete")
_MscAtmIfVpcVpdTxTdpEntry_Object = MibTableRow
mscAtmIfVpcVpdTxTdpEntry = _MscAtmIfVpcVpdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 297, 1)
)
mscAtmIfVpcVpdTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVpcVpdTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVpcVpdTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdTxTdpIndex_Object = MibTableColumn
mscAtmIfVpcVpdTxTdpIndex = _MscAtmIfVpcVpdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 297, 1, 1),
    _MscAtmIfVpcVpdTxTdpIndex_Type()
)
mscAtmIfVpcVpdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVpcVpdTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdTxTdpValue_Object = MibTableColumn
mscAtmIfVpcVpdTxTdpValue = _MscAtmIfVpcVpdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 297, 1, 2),
    _MscAtmIfVpcVpdTxTdpValue_Type()
)
mscAtmIfVpcVpdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdTxTdpValue.setStatus("obsolete")
_MscAtmIfVpcVpdRxTdpTable_Object = MibTable
mscAtmIfVpcVpdRxTdpTable = _MscAtmIfVpcVpdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 298)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRxTdpTable.setStatus("obsolete")
_MscAtmIfVpcVpdRxTdpEntry_Object = MibTableRow
mscAtmIfVpcVpdRxTdpEntry = _MscAtmIfVpcVpdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 298, 1)
)
mscAtmIfVpcVpdRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVpcVpdRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVpcVpdRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdRxTdpIndex_Object = MibTableColumn
mscAtmIfVpcVpdRxTdpIndex = _MscAtmIfVpcVpdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 298, 1, 1),
    _MscAtmIfVpcVpdRxTdpIndex_Type()
)
mscAtmIfVpcVpdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVpcVpdRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdRxTdpValue_Object = MibTableColumn
mscAtmIfVpcVpdRxTdpValue = _MscAtmIfVpcVpdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 298, 1, 2),
    _MscAtmIfVpcVpdRxTdpValue_Type()
)
mscAtmIfVpcVpdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdRxTdpValue.setStatus("obsolete")
_MscAtmIfVpcVpdFqpTable_Object = MibTable
mscAtmIfVpcVpdFqpTable = _MscAtmIfVpcVpdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 359)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdFqpTable.setStatus("obsolete")
_MscAtmIfVpcVpdFqpEntry_Object = MibTableRow
mscAtmIfVpcVpdFqpEntry = _MscAtmIfVpcVpdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 359, 1)
)
mscAtmIfVpcVpdFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdFqpEntry.setStatus("obsolete")


class _MscAtmIfVpcVpdFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcVpdFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdFqpIndex_Object = MibTableColumn
mscAtmIfVpcVpdFqpIndex = _MscAtmIfVpcVpdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 359, 1, 1),
    _MscAtmIfVpcVpdFqpIndex_Type()
)
mscAtmIfVpcVpdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdFqpIndex.setStatus("obsolete")


class _MscAtmIfVpcVpdFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdFqpValue_Object = MibTableColumn
mscAtmIfVpcVpdFqpValue = _MscAtmIfVpcVpdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 359, 1, 2),
    _MscAtmIfVpcVpdFqpValue_Type()
)
mscAtmIfVpcVpdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdFqpValue.setStatus("obsolete")
_MscAtmIfVpcVpdBqpTable_Object = MibTable
mscAtmIfVpcVpdBqpTable = _MscAtmIfVpcVpdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 360)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBqpTable.setStatus("obsolete")
_MscAtmIfVpcVpdBqpEntry_Object = MibTableRow
mscAtmIfVpcVpdBqpEntry = _MscAtmIfVpcVpdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 360, 1)
)
mscAtmIfVpcVpdBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcVpdBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBqpEntry.setStatus("obsolete")


class _MscAtmIfVpcVpdBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcVpdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcVpdBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcVpdBqpIndex_Object = MibTableColumn
mscAtmIfVpcVpdBqpIndex = _MscAtmIfVpcVpdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 360, 1, 1),
    _MscAtmIfVpcVpdBqpIndex_Type()
)
mscAtmIfVpcVpdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBqpIndex.setStatus("obsolete")


class _MscAtmIfVpcVpdBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcVpdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcVpdBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcVpdBqpValue_Object = MibTableColumn
mscAtmIfVpcVpdBqpValue = _MscAtmIfVpcVpdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 2, 360, 1, 2),
    _MscAtmIfVpcVpdBqpValue_Type()
)
mscAtmIfVpcVpdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcVpdBqpValue.setStatus("obsolete")
_MscAtmIfVpcLoop_ObjectIdentity = ObjectIdentity
mscAtmIfVpcLoop = _MscAtmIfVpcLoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3)
)
_MscAtmIfVpcLoopRowStatusTable_Object = MibTable
mscAtmIfVpcLoopRowStatusTable = _MscAtmIfVpcLoopRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcLoopRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcLoopRowStatusEntry_Object = MibTableRow
mscAtmIfVpcLoopRowStatusEntry = _MscAtmIfVpcLoopRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3, 1, 1)
)
mscAtmIfVpcLoopRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcLoopIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcLoopRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcLoopRowStatus_Type = RowStatus
_MscAtmIfVpcLoopRowStatus_Object = MibTableColumn
mscAtmIfVpcLoopRowStatus = _MscAtmIfVpcLoopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3, 1, 1, 1),
    _MscAtmIfVpcLoopRowStatus_Type()
)
mscAtmIfVpcLoopRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVpcLoopRowStatus.setStatus("mandatory")
_MscAtmIfVpcLoopComponentName_Type = DisplayString
_MscAtmIfVpcLoopComponentName_Object = MibTableColumn
mscAtmIfVpcLoopComponentName = _MscAtmIfVpcLoopComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3, 1, 1, 2),
    _MscAtmIfVpcLoopComponentName_Type()
)
mscAtmIfVpcLoopComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLoopComponentName.setStatus("mandatory")
_MscAtmIfVpcLoopStorageType_Type = StorageType
_MscAtmIfVpcLoopStorageType_Object = MibTableColumn
mscAtmIfVpcLoopStorageType = _MscAtmIfVpcLoopStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3, 1, 1, 4),
    _MscAtmIfVpcLoopStorageType_Type()
)
mscAtmIfVpcLoopStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLoopStorageType.setStatus("mandatory")
_MscAtmIfVpcLoopIndex_Type = NonReplicated
_MscAtmIfVpcLoopIndex_Object = MibTableColumn
mscAtmIfVpcLoopIndex = _MscAtmIfVpcLoopIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 3, 1, 1, 10),
    _MscAtmIfVpcLoopIndex_Type()
)
mscAtmIfVpcLoopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcLoopIndex.setStatus("mandatory")
_MscAtmIfVpcTm_ObjectIdentity = ObjectIdentity
mscAtmIfVpcTm = _MscAtmIfVpcTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9)
)
_MscAtmIfVpcTmRowStatusTable_Object = MibTable
mscAtmIfVpcTmRowStatusTable = _MscAtmIfVpcTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcTmRowStatusEntry_Object = MibTableRow
mscAtmIfVpcTmRowStatusEntry = _MscAtmIfVpcTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 1, 1)
)
mscAtmIfVpcTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcTmRowStatus_Type = RowStatus
_MscAtmIfVpcTmRowStatus_Object = MibTableColumn
mscAtmIfVpcTmRowStatus = _MscAtmIfVpcTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 1, 1, 1),
    _MscAtmIfVpcTmRowStatus_Type()
)
mscAtmIfVpcTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRowStatus.setStatus("mandatory")
_MscAtmIfVpcTmComponentName_Type = DisplayString
_MscAtmIfVpcTmComponentName_Object = MibTableColumn
mscAtmIfVpcTmComponentName = _MscAtmIfVpcTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 1, 1, 2),
    _MscAtmIfVpcTmComponentName_Type()
)
mscAtmIfVpcTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmComponentName.setStatus("mandatory")
_MscAtmIfVpcTmStorageType_Type = StorageType
_MscAtmIfVpcTmStorageType_Object = MibTableColumn
mscAtmIfVpcTmStorageType = _MscAtmIfVpcTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 1, 1, 4),
    _MscAtmIfVpcTmStorageType_Type()
)
mscAtmIfVpcTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmStorageType.setStatus("mandatory")
_MscAtmIfVpcTmIndex_Type = NonReplicated
_MscAtmIfVpcTmIndex_Object = MibTableColumn
mscAtmIfVpcTmIndex = _MscAtmIfVpcTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 1, 1, 10),
    _MscAtmIfVpcTmIndex_Type()
)
mscAtmIfVpcTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmIndex.setStatus("mandatory")
_MscAtmIfVpcTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVpcTmAbr = _MscAtmIfVpcTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2)
)
_MscAtmIfVpcTmAbrRowStatusTable_Object = MibTable
mscAtmIfVpcTmAbrRowStatusTable = _MscAtmIfVpcTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVpcTmAbrRowStatusEntry = _MscAtmIfVpcTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 1, 1)
)
mscAtmIfVpcTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcTmAbrRowStatus_Type = RowStatus
_MscAtmIfVpcTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVpcTmAbrRowStatus = _MscAtmIfVpcTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 1, 1, 1),
    _MscAtmIfVpcTmAbrRowStatus_Type()
)
mscAtmIfVpcTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVpcTmAbrComponentName_Type = DisplayString
_MscAtmIfVpcTmAbrComponentName_Object = MibTableColumn
mscAtmIfVpcTmAbrComponentName = _MscAtmIfVpcTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 1, 1, 2),
    _MscAtmIfVpcTmAbrComponentName_Type()
)
mscAtmIfVpcTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVpcTmAbrStorageType_Type = StorageType
_MscAtmIfVpcTmAbrStorageType_Object = MibTableColumn
mscAtmIfVpcTmAbrStorageType = _MscAtmIfVpcTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 1, 1, 4),
    _MscAtmIfVpcTmAbrStorageType_Type()
)
mscAtmIfVpcTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVpcTmAbrIndex_Type = NonReplicated
_MscAtmIfVpcTmAbrIndex_Object = MibTableColumn
mscAtmIfVpcTmAbrIndex = _MscAtmIfVpcTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 1, 1, 10),
    _MscAtmIfVpcTmAbrIndex_Type()
)
mscAtmIfVpcTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrIndex.setStatus("mandatory")
_MscAtmIfVpcTmAbrOperTable_Object = MibTable
mscAtmIfVpcTmAbrOperTable = _MscAtmIfVpcTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrOperTable.setStatus("mandatory")
_MscAtmIfVpcTmAbrOperEntry_Object = MibTableRow
mscAtmIfVpcTmAbrOperEntry = _MscAtmIfVpcTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1)
)
mscAtmIfVpcTmAbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrOperEntry.setStatus("mandatory")


class _MscAtmIfVpcTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVpcTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVpcTmAbrInitialCellRate = _MscAtmIfVpcTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 10),
    _MscAtmIfVpcTmAbrInitialCellRate_Type()
)
mscAtmIfVpcTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVpcTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVpcTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVpcTmAbrTransientBufferExposure = _MscAtmIfVpcTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 11),
    _MscAtmIfVpcTmAbrTransientBufferExposure_Type()
)
mscAtmIfVpcTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVpcTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVpcTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVpcTmAbrFixedRoundTripTime = _MscAtmIfVpcTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 12),
    _MscAtmIfVpcTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVpcTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVpcTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVpcTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVpcTmAbrRateDecreaseFactor = _MscAtmIfVpcTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 13),
    _MscAtmIfVpcTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVpcTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVpcTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVpcTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVpcTmAbrRateIncreaseFactor = _MscAtmIfVpcTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 14),
    _MscAtmIfVpcTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVpcTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVpcTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_MscAtmIfVpcTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVpcTmAbrMaxCellPerRmCell = _MscAtmIfVpcTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 15),
    _MscAtmIfVpcTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVpcTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVpcTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_MscAtmIfVpcTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
mscAtmIfVpcTmAbrMaxTimeBetweenRmCell = _MscAtmIfVpcTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 16),
    _MscAtmIfVpcTmAbrMaxTimeBetweenRmCell_Type()
)
mscAtmIfVpcTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _MscAtmIfVpcTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_MscAtmIfVpcTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVpcTmAbrCutoffDecreaseFactor = _MscAtmIfVpcTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 17),
    _MscAtmIfVpcTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVpcTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVpcTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVpcTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVpcTmAbrAcrDecreaseTimeFactor = _MscAtmIfVpcTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 18),
    _MscAtmIfVpcTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVpcTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVpcTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_MscAtmIfVpcTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrForwardRmCellLimit_Object = MibTableColumn
mscAtmIfVpcTmAbrForwardRmCellLimit = _MscAtmIfVpcTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 19),
    _MscAtmIfVpcTmAbrForwardRmCellLimit_Type()
)
mscAtmIfVpcTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrForwardRmCellLimit.setStatus("mandatory")


class _MscAtmIfVpcTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVpcTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_MscAtmIfVpcTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVpcTmAbrTxRateChangeInfo_Object = MibTableColumn
mscAtmIfVpcTmAbrTxRateChangeInfo = _MscAtmIfVpcTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 20),
    _MscAtmIfVpcTmAbrTxRateChangeInfo_Type()
)
mscAtmIfVpcTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrTxRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVpcTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVpcTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_MscAtmIfVpcTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVpcTmAbrAcrRateChangeInfo_Object = MibTableColumn
mscAtmIfVpcTmAbrAcrRateChangeInfo = _MscAtmIfVpcTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 21),
    _MscAtmIfVpcTmAbrAcrRateChangeInfo_Type()
)
mscAtmIfVpcTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVpcTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfVpcTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmAbrTxFwdRmCells_Object = MibTableColumn
mscAtmIfVpcTmAbrTxFwdRmCells = _MscAtmIfVpcTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 22),
    _MscAtmIfVpcTmAbrTxFwdRmCells_Type()
)
mscAtmIfVpcTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrTxFwdRmCells.setStatus("mandatory")


class _MscAtmIfVpcTmAbrRxEfci_Type(Integer32):
    """Custom type mscAtmIfVpcTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVpcTmAbrRxEfci_Type.__name__ = "Integer32"
_MscAtmIfVpcTmAbrRxEfci_Object = MibTableColumn
mscAtmIfVpcTmAbrRxEfci = _MscAtmIfVpcTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 2, 110, 1, 23),
    _MscAtmIfVpcTmAbrRxEfci_Type()
)
mscAtmIfVpcTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrRxEfci.setStatus("mandatory")
_MscAtmIfVpcTmOperTable_Object = MibTable
mscAtmIfVpcTmOperTable = _MscAtmIfVpcTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmOperTable.setStatus("mandatory")
_MscAtmIfVpcTmOperEntry_Object = MibTableRow
mscAtmIfVpcTmOperEntry = _MscAtmIfVpcTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1)
)
mscAtmIfVpcTmOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmOperEntry.setStatus("mandatory")


class _MscAtmIfVpcTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVpcTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcTmTxTrafficDescType = _MscAtmIfVpcTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 10),
    _MscAtmIfVpcTmTxTrafficDescType_Type()
)
mscAtmIfVpcTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVpcTmTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVpcTmTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTxQosClass_Object = MibTableColumn
mscAtmIfVpcTmTxQosClass = _MscAtmIfVpcTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 31),
    _MscAtmIfVpcTmTxQosClass_Type()
)
mscAtmIfVpcTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQosClass.setStatus("mandatory")


class _MscAtmIfVpcTmTxQueueLength_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVpcTmTxQueueLength_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmTxQueueLength_Object = MibTableColumn
mscAtmIfVpcTmTxQueueLength = _MscAtmIfVpcTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 32),
    _MscAtmIfVpcTmTxQueueLength_Type()
)
mscAtmIfVpcTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQueueLength.setStatus("mandatory")


class _MscAtmIfVpcTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVpcTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVpcTmTxQueueCongestionState = _MscAtmIfVpcTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 33),
    _MscAtmIfVpcTmTxQueueCongestionState_Type()
)
mscAtmIfVpcTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQueueCongestionState.setStatus("mandatory")


class _MscAtmIfVpcTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVpcTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVpcTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVpcTmHoldingPriority_Object = MibTableColumn
mscAtmIfVpcTmHoldingPriority = _MscAtmIfVpcTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 35),
    _MscAtmIfVpcTmHoldingPriority_Type()
)
mscAtmIfVpcTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVpcTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVpcTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcTmRxTrafficDescType = _MscAtmIfVpcTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 40),
    _MscAtmIfVpcTmRxTrafficDescType_Type()
)
mscAtmIfVpcTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVpcTmRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14),
          ("sameAsFwd", 15))
    )


_MscAtmIfVpcTmRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcTmRxQosClass_Object = MibTableColumn
mscAtmIfVpcTmRxQosClass = _MscAtmIfVpcTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 61),
    _MscAtmIfVpcTmRxQosClass_Type()
)
mscAtmIfVpcTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxQosClass.setStatus("mandatory")


class _MscAtmIfVpcTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVpcTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVpcTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVpcTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVpcTmAtmServiceCategory = _MscAtmIfVpcTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 62),
    _MscAtmIfVpcTmAtmServiceCategory_Type()
)
mscAtmIfVpcTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVpcTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVpcTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_MscAtmIfVpcTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTrafficShaping_Object = MibTableColumn
mscAtmIfVpcTmTrafficShaping = _MscAtmIfVpcTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 70),
    _MscAtmIfVpcTmTrafficShaping_Type()
)
mscAtmIfVpcTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVpcTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVpcTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVpcTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVpcTmBearerClassBbc = _MscAtmIfVpcTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 71),
    _MscAtmIfVpcTmBearerClassBbc_Type()
)
mscAtmIfVpcTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVpcTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVpcTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVpcTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVpcTmTransferCapabilityBbc = _MscAtmIfVpcTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 72),
    _MscAtmIfVpcTmTransferCapabilityBbc_Type()
)
mscAtmIfVpcTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVpcTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVpcTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVpcTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcTmClippingBbc_Object = MibTableColumn
mscAtmIfVpcTmClippingBbc = _MscAtmIfVpcTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 74),
    _MscAtmIfVpcTmClippingBbc_Type()
)
mscAtmIfVpcTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVpcTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVpcTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVpcTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVpcTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVpcTmUnshapedTransmitQueueing = _MscAtmIfVpcTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 75),
    _MscAtmIfVpcTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVpcTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVpcTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVpcTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVpcTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVpcTmBestEffort_Object = MibTableColumn
mscAtmIfVpcTmBestEffort = _MscAtmIfVpcTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 76),
    _MscAtmIfVpcTmBestEffort_Type()
)
mscAtmIfVpcTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmBestEffort.setStatus("mandatory")


class _MscAtmIfVpcTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVpcTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfVpcTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVpcTmForceTagging_Object = MibTableColumn
mscAtmIfVpcTmForceTagging = _MscAtmIfVpcTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 78),
    _MscAtmIfVpcTmForceTagging_Type()
)
mscAtmIfVpcTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmForceTagging.setStatus("mandatory")


class _MscAtmIfVpcTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_MscAtmIfVpcTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmWeight_Object = MibTableColumn
mscAtmIfVpcTmWeight = _MscAtmIfVpcTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 79),
    _MscAtmIfVpcTmWeight_Type()
)
mscAtmIfVpcTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmWeight.setStatus("mandatory")


class _MscAtmIfVpcTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVpcTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_MscAtmIfVpcTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVpcTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVpcTmUsageParameterControl = _MscAtmIfVpcTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 80),
    _MscAtmIfVpcTmUsageParameterControl_Type()
)
mscAtmIfVpcTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVpcTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVpcTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVpcTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVpcTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVpcTmTxPacketWiseDiscard = _MscAtmIfVpcTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 85),
    _MscAtmIfVpcTmTxPacketWiseDiscard_Type()
)
mscAtmIfVpcTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVpcTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVpcTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVpcTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVpcTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVpcTmRxPacketWiseDiscard = _MscAtmIfVpcTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 86),
    _MscAtmIfVpcTmRxPacketWiseDiscard_Type()
)
mscAtmIfVpcTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVpcTmBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVpcTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVpcTmBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVpcTmBandwidthElastic_Object = MibTableColumn
mscAtmIfVpcTmBandwidthElastic = _MscAtmIfVpcTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 90),
    _MscAtmIfVpcTmBandwidthElastic_Type()
)
mscAtmIfVpcTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmBandwidthElastic.setStatus("mandatory")


class _MscAtmIfVpcTmBandwidthReduction_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcTmBandwidthReduction_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmBandwidthReduction_Object = MibTableColumn
mscAtmIfVpcTmBandwidthReduction = _MscAtmIfVpcTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 100),
    _MscAtmIfVpcTmBandwidthReduction_Type()
)
mscAtmIfVpcTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmBandwidthReduction.setStatus("mandatory")


class _MscAtmIfVpcTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVpcTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVpcTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVpcTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVpcTmAbrConnectionType = _MscAtmIfVpcTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 100, 1, 110),
    _MscAtmIfVpcTmAbrConnectionType_Type()
)
mscAtmIfVpcTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVpcTmTxTdpTable_Object = MibTable
mscAtmIfVpcTmTxTdpTable = _MscAtmIfVpcTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 451)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVpcTmTxTdpEntry_Object = MibTableRow
mscAtmIfVpcTmTxTdpEntry = _MscAtmIfVpcTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 451, 1)
)
mscAtmIfVpcTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVpcTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVpcTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVpcTmTxTdpIndex = _MscAtmIfVpcTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 451, 1, 1),
    _MscAtmIfVpcTmTxTdpIndex_Type()
)
mscAtmIfVpcTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVpcTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmTxTdpValue_Object = MibTableColumn
mscAtmIfVpcTmTxTdpValue = _MscAtmIfVpcTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 451, 1, 2),
    _MscAtmIfVpcTmTxTdpValue_Type()
)
mscAtmIfVpcTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVpcTmTxQThreshTable_Object = MibTable
mscAtmIfVpcTmTxQThreshTable = _MscAtmIfVpcTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 452)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQThreshTable.setStatus("mandatory")
_MscAtmIfVpcTmTxQThreshEntry_Object = MibTableRow
mscAtmIfVpcTmTxQThreshEntry = _MscAtmIfVpcTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 452, 1)
)
mscAtmIfVpcTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQThreshEntry.setStatus("mandatory")


class _MscAtmIfVpcTmTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVpcTmTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTxQThreshIndex_Object = MibTableColumn
mscAtmIfVpcTmTxQThreshIndex = _MscAtmIfVpcTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 452, 1, 1),
    _MscAtmIfVpcTmTxQThreshIndex_Type()
)
mscAtmIfVpcTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQThreshIndex.setStatus("mandatory")


class _MscAtmIfVpcTmTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512000),
    )


_MscAtmIfVpcTmTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmTxQThreshValue_Object = MibTableColumn
mscAtmIfVpcTmTxQThreshValue = _MscAtmIfVpcTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 452, 1, 2),
    _MscAtmIfVpcTmTxQThreshValue_Type()
)
mscAtmIfVpcTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTxQThreshValue.setStatus("mandatory")
_MscAtmIfVpcTmRxTdpTable_Object = MibTable
mscAtmIfVpcTmRxTdpTable = _MscAtmIfVpcTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 453)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVpcTmRxTdpEntry_Object = MibTableRow
mscAtmIfVpcTmRxTdpEntry = _MscAtmIfVpcTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 453, 1)
)
mscAtmIfVpcTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVpcTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVpcTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVpcTmRxTdpIndex = _MscAtmIfVpcTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 453, 1, 1),
    _MscAtmIfVpcTmRxTdpIndex_Type()
)
mscAtmIfVpcTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVpcTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmRxTdpValue_Object = MibTableColumn
mscAtmIfVpcTmRxTdpValue = _MscAtmIfVpcTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 453, 1, 2),
    _MscAtmIfVpcTmRxTdpValue_Type()
)
mscAtmIfVpcTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVpcTmTqpTable_Object = MibTable
mscAtmIfVpcTmTqpTable = _MscAtmIfVpcTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 454)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTqpTable.setStatus("mandatory")
_MscAtmIfVpcTmTqpEntry_Object = MibTableRow
mscAtmIfVpcTmTqpEntry = _MscAtmIfVpcTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 454, 1)
)
mscAtmIfVpcTmTqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmTqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTqpEntry.setStatus("mandatory")


class _MscAtmIfVpcTmTqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcTmTqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTmTqpIndex_Object = MibTableColumn
mscAtmIfVpcTmTqpIndex = _MscAtmIfVpcTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 454, 1, 1),
    _MscAtmIfVpcTmTqpIndex_Type()
)
mscAtmIfVpcTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTqpIndex.setStatus("mandatory")


class _MscAtmIfVpcTmTqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcTmTqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmTqpValue_Object = MibTableColumn
mscAtmIfVpcTmTqpValue = _MscAtmIfVpcTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 454, 1, 2),
    _MscAtmIfVpcTmTqpValue_Type()
)
mscAtmIfVpcTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmTqpValue.setStatus("mandatory")
_MscAtmIfVpcTmRqpTable_Object = MibTable
mscAtmIfVpcTmRqpTable = _MscAtmIfVpcTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 455)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRqpTable.setStatus("mandatory")
_MscAtmIfVpcTmRqpEntry_Object = MibTableRow
mscAtmIfVpcTmRqpEntry = _MscAtmIfVpcTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 455, 1)
)
mscAtmIfVpcTmRqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTmRqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRqpEntry.setStatus("mandatory")


class _MscAtmIfVpcTmRqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcTmRqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTmRqpIndex_Object = MibTableColumn
mscAtmIfVpcTmRqpIndex = _MscAtmIfVpcTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 455, 1, 1),
    _MscAtmIfVpcTmRqpIndex_Type()
)
mscAtmIfVpcTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRqpIndex.setStatus("mandatory")


class _MscAtmIfVpcTmRqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcTmRqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTmRqpValue_Object = MibTableColumn
mscAtmIfVpcTmRqpValue = _MscAtmIfVpcTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 9, 455, 1, 2),
    _MscAtmIfVpcTmRqpValue_Type()
)
mscAtmIfVpcTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTmRqpValue.setStatus("mandatory")
_MscAtmIfVpcPm_ObjectIdentity = ObjectIdentity
mscAtmIfVpcPm = _MscAtmIfVpcPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13)
)
_MscAtmIfVpcPmRowStatusTable_Object = MibTable
mscAtmIfVpcPmRowStatusTable = _MscAtmIfVpcPmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmRowStatusTable.setStatus("mandatory")
_MscAtmIfVpcPmRowStatusEntry_Object = MibTableRow
mscAtmIfVpcPmRowStatusEntry = _MscAtmIfVpcPmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 1, 1)
)
mscAtmIfVpcPmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVpcPmRowStatus_Type = RowStatus
_MscAtmIfVpcPmRowStatus_Object = MibTableColumn
mscAtmIfVpcPmRowStatus = _MscAtmIfVpcPmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 1, 1, 1),
    _MscAtmIfVpcPmRowStatus_Type()
)
mscAtmIfVpcPmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmRowStatus.setStatus("mandatory")
_MscAtmIfVpcPmComponentName_Type = DisplayString
_MscAtmIfVpcPmComponentName_Object = MibTableColumn
mscAtmIfVpcPmComponentName = _MscAtmIfVpcPmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 1, 1, 2),
    _MscAtmIfVpcPmComponentName_Type()
)
mscAtmIfVpcPmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmComponentName.setStatus("mandatory")
_MscAtmIfVpcPmStorageType_Type = StorageType
_MscAtmIfVpcPmStorageType_Object = MibTableColumn
mscAtmIfVpcPmStorageType = _MscAtmIfVpcPmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 1, 1, 4),
    _MscAtmIfVpcPmStorageType_Type()
)
mscAtmIfVpcPmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmStorageType.setStatus("mandatory")


class _MscAtmIfVpcPmIndex_Type(Integer32):
    """Custom type mscAtmIfVpcPmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("linkSide", 0),
          ("switchSide", 1))
    )


_MscAtmIfVpcPmIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcPmIndex_Object = MibTableColumn
mscAtmIfVpcPmIndex = _MscAtmIfVpcPmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 1, 1, 10),
    _MscAtmIfVpcPmIndex_Type()
)
mscAtmIfVpcPmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmIndex.setStatus("mandatory")
_MscAtmIfVpcPmStatusTable_Object = MibTable
mscAtmIfVpcPmStatusTable = _MscAtmIfVpcPmStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 10)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmStatusTable.setStatus("mandatory")
_MscAtmIfVpcPmStatusEntry_Object = MibTableRow
mscAtmIfVpcPmStatusEntry = _MscAtmIfVpcPmStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 10, 1)
)
mscAtmIfVpcPmStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmStatusEntry.setStatus("mandatory")


class _MscAtmIfVpcPmClrMeasurementStatus_Type(Integer32):
    """Custom type mscAtmIfVpcPmClrMeasurementStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("activating", 1),
          ("activationFailed", 3),
          ("active", 2),
          ("inactive", 0))
    )


_MscAtmIfVpcPmClrMeasurementStatus_Type.__name__ = "Integer32"
_MscAtmIfVpcPmClrMeasurementStatus_Object = MibTableColumn
mscAtmIfVpcPmClrMeasurementStatus = _MscAtmIfVpcPmClrMeasurementStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 10, 1, 1),
    _MscAtmIfVpcPmClrMeasurementStatus_Type()
)
mscAtmIfVpcPmClrMeasurementStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmClrMeasurementStatus.setStatus("mandatory")


class _MscAtmIfVpcPmArMeasurementStatus_Type(Integer32):
    """Custom type mscAtmIfVpcPmArMeasurementStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("activating", 1),
          ("activationFailed", 3),
          ("active", 2),
          ("inactive", 0))
    )


_MscAtmIfVpcPmArMeasurementStatus_Type.__name__ = "Integer32"
_MscAtmIfVpcPmArMeasurementStatus_Object = MibTableColumn
mscAtmIfVpcPmArMeasurementStatus = _MscAtmIfVpcPmArMeasurementStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 10, 1, 2),
    _MscAtmIfVpcPmArMeasurementStatus_Type()
)
mscAtmIfVpcPmArMeasurementStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmArMeasurementStatus.setStatus("mandatory")


class _MscAtmIfVpcPmFailureCause_Type(Integer32):
    """Custom type mscAtmIfVpcPmFailureCause based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("activationCollision", 5),
          ("hardwareResourcesUnavailable", 3),
          ("nextHopCardUnsupported", 8),
          ("noError", 0),
          ("pcrUnsupported", 7),
          ("remoteEndNoResponse", 4),
          ("remoteEndRejectedActivation", 6),
          ("softwareResourcesUnavailable", 2),
          ("unknownCause", 1))
    )


_MscAtmIfVpcPmFailureCause_Type.__name__ = "Integer32"
_MscAtmIfVpcPmFailureCause_Object = MibTableColumn
mscAtmIfVpcPmFailureCause = _MscAtmIfVpcPmFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 10, 1, 3),
    _MscAtmIfVpcPmFailureCause_Type()
)
mscAtmIfVpcPmFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFailureCause.setStatus("mandatory")
_MscAtmIfVpcPmFwdClrTable_Object = MibTable
mscAtmIfVpcPmFwdClrTable = _MscAtmIfVpcPmFwdClrTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdClrTable.setStatus("mandatory")
_MscAtmIfVpcPmFwdClrEntry_Object = MibTableRow
mscAtmIfVpcPmFwdClrEntry = _MscAtmIfVpcPmFwdClrEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1)
)
mscAtmIfVpcPmFwdClrEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdClrEntry.setStatus("mandatory")
_MscAtmIfVpcPmFwdLastSampleUserCellsRx0_Type = PassportCounter64
_MscAtmIfVpcPmFwdLastSampleUserCellsRx0_Object = MibTableColumn
mscAtmIfVpcPmFwdLastSampleUserCellsRx0 = _MscAtmIfVpcPmFwdLastSampleUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 1),
    _MscAtmIfVpcPmFwdLastSampleUserCellsRx0_Type()
)
mscAtmIfVpcPmFwdLastSampleUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdLastSampleUserCellsRx0.setStatus("mandatory")
_MscAtmIfVpcPmFwdLastSampleUserCellsTx0_Type = PassportCounter64
_MscAtmIfVpcPmFwdLastSampleUserCellsTx0_Object = MibTableColumn
mscAtmIfVpcPmFwdLastSampleUserCellsTx0 = _MscAtmIfVpcPmFwdLastSampleUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 2),
    _MscAtmIfVpcPmFwdLastSampleUserCellsTx0_Type()
)
mscAtmIfVpcPmFwdLastSampleUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdLastSampleUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVpcPmFwdLastSampleClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdLastSampleClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdLastSampleClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdLastSampleClr0_Object = MibTableColumn
mscAtmIfVpcPmFwdLastSampleClr0 = _MscAtmIfVpcPmFwdLastSampleClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 3),
    _MscAtmIfVpcPmFwdLastSampleClr0_Type()
)
mscAtmIfVpcPmFwdLastSampleClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdLastSampleClr0.setStatus("mandatory")
_MscAtmIfVpcPmFwdLastSampleUserCellsRx01_Type = PassportCounter64
_MscAtmIfVpcPmFwdLastSampleUserCellsRx01_Object = MibTableColumn
mscAtmIfVpcPmFwdLastSampleUserCellsRx01 = _MscAtmIfVpcPmFwdLastSampleUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 4),
    _MscAtmIfVpcPmFwdLastSampleUserCellsRx01_Type()
)
mscAtmIfVpcPmFwdLastSampleUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdLastSampleUserCellsRx01.setStatus("mandatory")
_MscAtmIfVpcPmFwdLastSampleUserCellsTx01_Type = PassportCounter64
_MscAtmIfVpcPmFwdLastSampleUserCellsTx01_Object = MibTableColumn
mscAtmIfVpcPmFwdLastSampleUserCellsTx01 = _MscAtmIfVpcPmFwdLastSampleUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 5),
    _MscAtmIfVpcPmFwdLastSampleUserCellsTx01_Type()
)
mscAtmIfVpcPmFwdLastSampleUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdLastSampleUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVpcPmFwdLastSampleClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdLastSampleClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdLastSampleClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdLastSampleClr01_Object = MibTableColumn
mscAtmIfVpcPmFwdLastSampleClr01 = _MscAtmIfVpcPmFwdLastSampleClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 6),
    _MscAtmIfVpcPmFwdLastSampleClr01_Type()
)
mscAtmIfVpcPmFwdLastSampleClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdLastSampleClr01.setStatus("mandatory")


class _MscAtmIfVpcPmFwdTotalClrInterval_Type(Unsigned32):
    """Custom type mscAtmIfVpcPmFwdTotalClrInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVpcPmFwdTotalClrInterval_Type.__name__ = "Unsigned32"
_MscAtmIfVpcPmFwdTotalClrInterval_Object = MibTableColumn
mscAtmIfVpcPmFwdTotalClrInterval = _MscAtmIfVpcPmFwdTotalClrInterval_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 7),
    _MscAtmIfVpcPmFwdTotalClrInterval_Type()
)
mscAtmIfVpcPmFwdTotalClrInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdTotalClrInterval.setStatus("mandatory")
_MscAtmIfVpcPmFwdTotalUserCellsRx0_Type = PassportCounter64
_MscAtmIfVpcPmFwdTotalUserCellsRx0_Object = MibTableColumn
mscAtmIfVpcPmFwdTotalUserCellsRx0 = _MscAtmIfVpcPmFwdTotalUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 8),
    _MscAtmIfVpcPmFwdTotalUserCellsRx0_Type()
)
mscAtmIfVpcPmFwdTotalUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdTotalUserCellsRx0.setStatus("mandatory")
_MscAtmIfVpcPmFwdTotalUserCellsTx0_Type = PassportCounter64
_MscAtmIfVpcPmFwdTotalUserCellsTx0_Object = MibTableColumn
mscAtmIfVpcPmFwdTotalUserCellsTx0 = _MscAtmIfVpcPmFwdTotalUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 9),
    _MscAtmIfVpcPmFwdTotalUserCellsTx0_Type()
)
mscAtmIfVpcPmFwdTotalUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdTotalUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVpcPmFwdAverageClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdAverageClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdAverageClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdAverageClr0_Object = MibTableColumn
mscAtmIfVpcPmFwdAverageClr0 = _MscAtmIfVpcPmFwdAverageClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 10),
    _MscAtmIfVpcPmFwdAverageClr0_Type()
)
mscAtmIfVpcPmFwdAverageClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdAverageClr0.setStatus("mandatory")


class _MscAtmIfVpcPmFwdMaximumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdMaximumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdMaximumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdMaximumClr0_Object = MibTableColumn
mscAtmIfVpcPmFwdMaximumClr0 = _MscAtmIfVpcPmFwdMaximumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 11),
    _MscAtmIfVpcPmFwdMaximumClr0_Type()
)
mscAtmIfVpcPmFwdMaximumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdMaximumClr0.setStatus("mandatory")


class _MscAtmIfVpcPmFwdMinimumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdMinimumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdMinimumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdMinimumClr0_Object = MibTableColumn
mscAtmIfVpcPmFwdMinimumClr0 = _MscAtmIfVpcPmFwdMinimumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 12),
    _MscAtmIfVpcPmFwdMinimumClr0_Type()
)
mscAtmIfVpcPmFwdMinimumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdMinimumClr0.setStatus("mandatory")
_MscAtmIfVpcPmFwdTotalUserCellsRx01_Type = PassportCounter64
_MscAtmIfVpcPmFwdTotalUserCellsRx01_Object = MibTableColumn
mscAtmIfVpcPmFwdTotalUserCellsRx01 = _MscAtmIfVpcPmFwdTotalUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 13),
    _MscAtmIfVpcPmFwdTotalUserCellsRx01_Type()
)
mscAtmIfVpcPmFwdTotalUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdTotalUserCellsRx01.setStatus("mandatory")
_MscAtmIfVpcPmFwdTotalUserCellsTx01_Type = PassportCounter64
_MscAtmIfVpcPmFwdTotalUserCellsTx01_Object = MibTableColumn
mscAtmIfVpcPmFwdTotalUserCellsTx01 = _MscAtmIfVpcPmFwdTotalUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 14),
    _MscAtmIfVpcPmFwdTotalUserCellsTx01_Type()
)
mscAtmIfVpcPmFwdTotalUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdTotalUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVpcPmFwdAverageClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdAverageClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdAverageClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdAverageClr01_Object = MibTableColumn
mscAtmIfVpcPmFwdAverageClr01 = _MscAtmIfVpcPmFwdAverageClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 15),
    _MscAtmIfVpcPmFwdAverageClr01_Type()
)
mscAtmIfVpcPmFwdAverageClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdAverageClr01.setStatus("mandatory")


class _MscAtmIfVpcPmFwdMaximumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdMaximumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdMaximumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdMaximumClr01_Object = MibTableColumn
mscAtmIfVpcPmFwdMaximumClr01 = _MscAtmIfVpcPmFwdMaximumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 16),
    _MscAtmIfVpcPmFwdMaximumClr01_Type()
)
mscAtmIfVpcPmFwdMaximumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdMaximumClr01.setStatus("mandatory")


class _MscAtmIfVpcPmFwdMinimumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmFwdMinimumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmFwdMinimumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmFwdMinimumClr01_Object = MibTableColumn
mscAtmIfVpcPmFwdMinimumClr01 = _MscAtmIfVpcPmFwdMinimumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 17),
    _MscAtmIfVpcPmFwdMinimumClr01_Type()
)
mscAtmIfVpcPmFwdMinimumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdMinimumClr01.setStatus("mandatory")


class _MscAtmIfVpcPmFwdPmCellDiscardCount_Type(Unsigned32):
    """Custom type mscAtmIfVpcPmFwdPmCellDiscardCount based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVpcPmFwdPmCellDiscardCount_Type.__name__ = "Unsigned32"
_MscAtmIfVpcPmFwdPmCellDiscardCount_Object = MibTableColumn
mscAtmIfVpcPmFwdPmCellDiscardCount = _MscAtmIfVpcPmFwdPmCellDiscardCount_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 11, 1, 18),
    _MscAtmIfVpcPmFwdPmCellDiscardCount_Type()
)
mscAtmIfVpcPmFwdPmCellDiscardCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmFwdPmCellDiscardCount.setStatus("mandatory")
_MscAtmIfVpcPmBwdClrTable_Object = MibTable
mscAtmIfVpcPmBwdClrTable = _MscAtmIfVpcPmBwdClrTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdClrTable.setStatus("mandatory")
_MscAtmIfVpcPmBwdClrEntry_Object = MibTableRow
mscAtmIfVpcPmBwdClrEntry = _MscAtmIfVpcPmBwdClrEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1)
)
mscAtmIfVpcPmBwdClrEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdClrEntry.setStatus("mandatory")
_MscAtmIfVpcPmBwdLastSampleUserCellsRx0_Type = PassportCounter64
_MscAtmIfVpcPmBwdLastSampleUserCellsRx0_Object = MibTableColumn
mscAtmIfVpcPmBwdLastSampleUserCellsRx0 = _MscAtmIfVpcPmBwdLastSampleUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 1),
    _MscAtmIfVpcPmBwdLastSampleUserCellsRx0_Type()
)
mscAtmIfVpcPmBwdLastSampleUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdLastSampleUserCellsRx0.setStatus("mandatory")
_MscAtmIfVpcPmBwdLastSampleUserCellsTx0_Type = PassportCounter64
_MscAtmIfVpcPmBwdLastSampleUserCellsTx0_Object = MibTableColumn
mscAtmIfVpcPmBwdLastSampleUserCellsTx0 = _MscAtmIfVpcPmBwdLastSampleUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 2),
    _MscAtmIfVpcPmBwdLastSampleUserCellsTx0_Type()
)
mscAtmIfVpcPmBwdLastSampleUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdLastSampleUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVpcPmBwdLastSampleClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdLastSampleClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdLastSampleClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdLastSampleClr0_Object = MibTableColumn
mscAtmIfVpcPmBwdLastSampleClr0 = _MscAtmIfVpcPmBwdLastSampleClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 3),
    _MscAtmIfVpcPmBwdLastSampleClr0_Type()
)
mscAtmIfVpcPmBwdLastSampleClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdLastSampleClr0.setStatus("mandatory")
_MscAtmIfVpcPmBwdLastSampleUserCellsRx01_Type = PassportCounter64
_MscAtmIfVpcPmBwdLastSampleUserCellsRx01_Object = MibTableColumn
mscAtmIfVpcPmBwdLastSampleUserCellsRx01 = _MscAtmIfVpcPmBwdLastSampleUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 4),
    _MscAtmIfVpcPmBwdLastSampleUserCellsRx01_Type()
)
mscAtmIfVpcPmBwdLastSampleUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdLastSampleUserCellsRx01.setStatus("mandatory")
_MscAtmIfVpcPmBwdLastSampleUserCellsTx01_Type = PassportCounter64
_MscAtmIfVpcPmBwdLastSampleUserCellsTx01_Object = MibTableColumn
mscAtmIfVpcPmBwdLastSampleUserCellsTx01 = _MscAtmIfVpcPmBwdLastSampleUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 5),
    _MscAtmIfVpcPmBwdLastSampleUserCellsTx01_Type()
)
mscAtmIfVpcPmBwdLastSampleUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdLastSampleUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVpcPmBwdLastSampleClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdLastSampleClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdLastSampleClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdLastSampleClr01_Object = MibTableColumn
mscAtmIfVpcPmBwdLastSampleClr01 = _MscAtmIfVpcPmBwdLastSampleClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 6),
    _MscAtmIfVpcPmBwdLastSampleClr01_Type()
)
mscAtmIfVpcPmBwdLastSampleClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdLastSampleClr01.setStatus("mandatory")


class _MscAtmIfVpcPmBwdTotalClrInterval_Type(Unsigned32):
    """Custom type mscAtmIfVpcPmBwdTotalClrInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVpcPmBwdTotalClrInterval_Type.__name__ = "Unsigned32"
_MscAtmIfVpcPmBwdTotalClrInterval_Object = MibTableColumn
mscAtmIfVpcPmBwdTotalClrInterval = _MscAtmIfVpcPmBwdTotalClrInterval_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 7),
    _MscAtmIfVpcPmBwdTotalClrInterval_Type()
)
mscAtmIfVpcPmBwdTotalClrInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdTotalClrInterval.setStatus("mandatory")
_MscAtmIfVpcPmBwdTotalUserCellsRx0_Type = PassportCounter64
_MscAtmIfVpcPmBwdTotalUserCellsRx0_Object = MibTableColumn
mscAtmIfVpcPmBwdTotalUserCellsRx0 = _MscAtmIfVpcPmBwdTotalUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 8),
    _MscAtmIfVpcPmBwdTotalUserCellsRx0_Type()
)
mscAtmIfVpcPmBwdTotalUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdTotalUserCellsRx0.setStatus("mandatory")
_MscAtmIfVpcPmBwdTotalUserCellsTx0_Type = PassportCounter64
_MscAtmIfVpcPmBwdTotalUserCellsTx0_Object = MibTableColumn
mscAtmIfVpcPmBwdTotalUserCellsTx0 = _MscAtmIfVpcPmBwdTotalUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 9),
    _MscAtmIfVpcPmBwdTotalUserCellsTx0_Type()
)
mscAtmIfVpcPmBwdTotalUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdTotalUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVpcPmBwdAverageClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdAverageClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdAverageClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdAverageClr0_Object = MibTableColumn
mscAtmIfVpcPmBwdAverageClr0 = _MscAtmIfVpcPmBwdAverageClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 10),
    _MscAtmIfVpcPmBwdAverageClr0_Type()
)
mscAtmIfVpcPmBwdAverageClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdAverageClr0.setStatus("mandatory")


class _MscAtmIfVpcPmBwdMaximumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdMaximumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdMaximumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdMaximumClr0_Object = MibTableColumn
mscAtmIfVpcPmBwdMaximumClr0 = _MscAtmIfVpcPmBwdMaximumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 11),
    _MscAtmIfVpcPmBwdMaximumClr0_Type()
)
mscAtmIfVpcPmBwdMaximumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdMaximumClr0.setStatus("mandatory")


class _MscAtmIfVpcPmBwdMinimumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdMinimumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdMinimumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdMinimumClr0_Object = MibTableColumn
mscAtmIfVpcPmBwdMinimumClr0 = _MscAtmIfVpcPmBwdMinimumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 12),
    _MscAtmIfVpcPmBwdMinimumClr0_Type()
)
mscAtmIfVpcPmBwdMinimumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdMinimumClr0.setStatus("mandatory")
_MscAtmIfVpcPmBwdTotalUserCellsRx01_Type = PassportCounter64
_MscAtmIfVpcPmBwdTotalUserCellsRx01_Object = MibTableColumn
mscAtmIfVpcPmBwdTotalUserCellsRx01 = _MscAtmIfVpcPmBwdTotalUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 13),
    _MscAtmIfVpcPmBwdTotalUserCellsRx01_Type()
)
mscAtmIfVpcPmBwdTotalUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdTotalUserCellsRx01.setStatus("mandatory")
_MscAtmIfVpcPmBwdTotalUserCellsTx01_Type = PassportCounter64
_MscAtmIfVpcPmBwdTotalUserCellsTx01_Object = MibTableColumn
mscAtmIfVpcPmBwdTotalUserCellsTx01 = _MscAtmIfVpcPmBwdTotalUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 14),
    _MscAtmIfVpcPmBwdTotalUserCellsTx01_Type()
)
mscAtmIfVpcPmBwdTotalUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdTotalUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVpcPmBwdAverageClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdAverageClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdAverageClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdAverageClr01_Object = MibTableColumn
mscAtmIfVpcPmBwdAverageClr01 = _MscAtmIfVpcPmBwdAverageClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 15),
    _MscAtmIfVpcPmBwdAverageClr01_Type()
)
mscAtmIfVpcPmBwdAverageClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdAverageClr01.setStatus("mandatory")


class _MscAtmIfVpcPmBwdMaximumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdMaximumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdMaximumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdMaximumClr01_Object = MibTableColumn
mscAtmIfVpcPmBwdMaximumClr01 = _MscAtmIfVpcPmBwdMaximumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 16),
    _MscAtmIfVpcPmBwdMaximumClr01_Type()
)
mscAtmIfVpcPmBwdMaximumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdMaximumClr01.setStatus("mandatory")


class _MscAtmIfVpcPmBwdMinimumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVpcPmBwdMinimumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVpcPmBwdMinimumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVpcPmBwdMinimumClr01_Object = MibTableColumn
mscAtmIfVpcPmBwdMinimumClr01 = _MscAtmIfVpcPmBwdMinimumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 17),
    _MscAtmIfVpcPmBwdMinimumClr01_Type()
)
mscAtmIfVpcPmBwdMinimumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdMinimumClr01.setStatus("mandatory")


class _MscAtmIfVpcPmBwdPmCellDiscardCount_Type(Unsigned32):
    """Custom type mscAtmIfVpcPmBwdPmCellDiscardCount based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVpcPmBwdPmCellDiscardCount_Type.__name__ = "Unsigned32"
_MscAtmIfVpcPmBwdPmCellDiscardCount_Object = MibTableColumn
mscAtmIfVpcPmBwdPmCellDiscardCount = _MscAtmIfVpcPmBwdPmCellDiscardCount_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 12, 1, 18),
    _MscAtmIfVpcPmBwdPmCellDiscardCount_Type()
)
mscAtmIfVpcPmBwdPmCellDiscardCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmBwdPmCellDiscardCount.setStatus("mandatory")
_MscAtmIfVpcPmArTable_Object = MibTable
mscAtmIfVpcPmArTable = _MscAtmIfVpcPmArTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 13)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmArTable.setStatus("mandatory")
_MscAtmIfVpcPmArEntry_Object = MibTableRow
mscAtmIfVpcPmArEntry = _MscAtmIfVpcPmArEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 13, 1)
)
mscAtmIfVpcPmArEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPmArEntry.setStatus("mandatory")


class _MscAtmIfVpcPmCurrentAvailabilityStatus_Type(Integer32):
    """Custom type mscAtmIfVpcPmCurrentAvailabilityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("available", 1),
          ("notApplicable", 0),
          ("unavailable", 2))
    )


_MscAtmIfVpcPmCurrentAvailabilityStatus_Type.__name__ = "Integer32"
_MscAtmIfVpcPmCurrentAvailabilityStatus_Object = MibTableColumn
mscAtmIfVpcPmCurrentAvailabilityStatus = _MscAtmIfVpcPmCurrentAvailabilityStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 13, 1, 1),
    _MscAtmIfVpcPmCurrentAvailabilityStatus_Type()
)
mscAtmIfVpcPmCurrentAvailabilityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmCurrentAvailabilityStatus.setStatus("mandatory")


class _MscAtmIfVpcPmArTotalTime_Type(Unsigned32):
    """Custom type mscAtmIfVpcPmArTotalTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVpcPmArTotalTime_Type.__name__ = "Unsigned32"
_MscAtmIfVpcPmArTotalTime_Object = MibTableColumn
mscAtmIfVpcPmArTotalTime = _MscAtmIfVpcPmArTotalTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 13, 1, 2),
    _MscAtmIfVpcPmArTotalTime_Type()
)
mscAtmIfVpcPmArTotalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmArTotalTime.setStatus("mandatory")


class _MscAtmIfVpcPmArAvailableTime_Type(Unsigned32):
    """Custom type mscAtmIfVpcPmArAvailableTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVpcPmArAvailableTime_Type.__name__ = "Unsigned32"
_MscAtmIfVpcPmArAvailableTime_Object = MibTableColumn
mscAtmIfVpcPmArAvailableTime = _MscAtmIfVpcPmArAvailableTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 13, 1, 3),
    _MscAtmIfVpcPmArAvailableTime_Type()
)
mscAtmIfVpcPmArAvailableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmArAvailableTime.setStatus("mandatory")


class _MscAtmIfVpcPmArAvailabilityRatio_Type(FixedPoint7):
    """Custom type mscAtmIfVpcPmArAvailabilityRatio based on FixedPoint7"""
    subtypeSpec = FixedPoint7.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_MscAtmIfVpcPmArAvailabilityRatio_Type.__name__ = "FixedPoint7"
_MscAtmIfVpcPmArAvailabilityRatio_Object = MibTableColumn
mscAtmIfVpcPmArAvailabilityRatio = _MscAtmIfVpcPmArAvailabilityRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 13, 13, 1, 4),
    _MscAtmIfVpcPmArAvailabilityRatio_Type()
)
mscAtmIfVpcPmArAvailabilityRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcPmArAvailabilityRatio.setStatus("mandatory")
_MscAtmIfVpcStateTable_Object = MibTable
mscAtmIfVpcStateTable = _MscAtmIfVpcStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcStateTable.setStatus("mandatory")
_MscAtmIfVpcStateEntry_Object = MibTableRow
mscAtmIfVpcStateEntry = _MscAtmIfVpcStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 100, 1)
)
mscAtmIfVpcStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcStateEntry.setStatus("mandatory")


class _MscAtmIfVpcAdminState_Type(Integer32):
    """Custom type mscAtmIfVpcAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfVpcAdminState_Type.__name__ = "Integer32"
_MscAtmIfVpcAdminState_Object = MibTableColumn
mscAtmIfVpcAdminState = _MscAtmIfVpcAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 100, 1, 1),
    _MscAtmIfVpcAdminState_Type()
)
mscAtmIfVpcAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcAdminState.setStatus("mandatory")


class _MscAtmIfVpcOperationalState_Type(Integer32):
    """Custom type mscAtmIfVpcOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVpcOperationalState_Type.__name__ = "Integer32"
_MscAtmIfVpcOperationalState_Object = MibTableColumn
mscAtmIfVpcOperationalState = _MscAtmIfVpcOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 100, 1, 2),
    _MscAtmIfVpcOperationalState_Type()
)
mscAtmIfVpcOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcOperationalState.setStatus("mandatory")


class _MscAtmIfVpcUsageState_Type(Integer32):
    """Custom type mscAtmIfVpcUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfVpcUsageState_Type.__name__ = "Integer32"
_MscAtmIfVpcUsageState_Object = MibTableColumn
mscAtmIfVpcUsageState = _MscAtmIfVpcUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 100, 1, 3),
    _MscAtmIfVpcUsageState_Type()
)
mscAtmIfVpcUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcUsageState.setStatus("mandatory")
_MscAtmIfVpcOperTable_Object = MibTable
mscAtmIfVpcOperTable = _MscAtmIfVpcOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcOperTable.setStatus("mandatory")
_MscAtmIfVpcOperEntry_Object = MibTableRow
mscAtmIfVpcOperEntry = _MscAtmIfVpcOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 110, 1)
)
mscAtmIfVpcOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcOperEntry.setStatus("mandatory")


class _MscAtmIfVpcConnectionPointType_Type(Integer32):
    """Custom type mscAtmIfVpcConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_MscAtmIfVpcConnectionPointType_Type.__name__ = "Integer32"
_MscAtmIfVpcConnectionPointType_Object = MibTableColumn
mscAtmIfVpcConnectionPointType = _MscAtmIfVpcConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 110, 1, 10),
    _MscAtmIfVpcConnectionPointType_Type()
)
mscAtmIfVpcConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcConnectionPointType.setStatus("mandatory")
_MscAtmIfVpcConnInfoTable_Object = MibTable
mscAtmIfVpcConnInfoTable = _MscAtmIfVpcConnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 115)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcConnInfoTable.setStatus("mandatory")
_MscAtmIfVpcConnInfoEntry_Object = MibTableRow
mscAtmIfVpcConnInfoEntry = _MscAtmIfVpcConnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 115, 1)
)
mscAtmIfVpcConnInfoEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcConnInfoEntry.setStatus("mandatory")


class _MscAtmIfVpcDistributionType_Type(Integer32):
    """Custom type mscAtmIfVpcDistributionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipoint", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVpcDistributionType_Type.__name__ = "Integer32"
_MscAtmIfVpcDistributionType_Object = MibTableColumn
mscAtmIfVpcDistributionType = _MscAtmIfVpcDistributionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 115, 1, 11),
    _MscAtmIfVpcDistributionType_Type()
)
mscAtmIfVpcDistributionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcDistributionType.setStatus("mandatory")


class _MscAtmIfVpcNumLeaves_Type(Gauge32):
    """Custom type mscAtmIfVpcNumLeaves based on Gauge32"""
    defaultValue = 0

    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcNumLeaves_Type.__name__ = "Gauge32"
_MscAtmIfVpcNumLeaves_Object = MibTableColumn
mscAtmIfVpcNumLeaves = _MscAtmIfVpcNumLeaves_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 115, 1, 12),
    _MscAtmIfVpcNumLeaves_Type()
)
mscAtmIfVpcNumLeaves.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcNumLeaves.setStatus("mandatory")


class _MscAtmIfVpcCallDirection_Type(Integer32):
    """Custom type mscAtmIfVpcCallDirection based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fromLink", 0),
          ("notApplicable", 2),
          ("toLink", 1))
    )


_MscAtmIfVpcCallDirection_Type.__name__ = "Integer32"
_MscAtmIfVpcCallDirection_Object = MibTableColumn
mscAtmIfVpcCallDirection = _MscAtmIfVpcCallDirection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 115, 1, 13),
    _MscAtmIfVpcCallDirection_Type()
)
mscAtmIfVpcCallDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcCallDirection.setStatus("mandatory")
_MscAtmIfVpcStatusTable_Object = MibTable
mscAtmIfVpcStatusTable = _MscAtmIfVpcStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcStatusTable.setStatus("mandatory")
_MscAtmIfVpcStatusEntry_Object = MibTableRow
mscAtmIfVpcStatusEntry = _MscAtmIfVpcStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1)
)
mscAtmIfVpcStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcStatusEntry.setStatus("mandatory")


class _MscAtmIfVpcOperStatus_Type(Integer32):
    """Custom type mscAtmIfVpcOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_MscAtmIfVpcOperStatus_Type.__name__ = "Integer32"
_MscAtmIfVpcOperStatus_Object = MibTableColumn
mscAtmIfVpcOperStatus = _MscAtmIfVpcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 20),
    _MscAtmIfVpcOperStatus_Type()
)
mscAtmIfVpcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcOperStatus.setStatus("mandatory")


class _MscAtmIfVpcLocalFailureCause_Type(Integer32):
    """Custom type mscAtmIfVpcLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_MscAtmIfVpcLocalFailureCause_Type.__name__ = "Integer32"
_MscAtmIfVpcLocalFailureCause_Object = MibTableColumn
mscAtmIfVpcLocalFailureCause = _MscAtmIfVpcLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 25),
    _MscAtmIfVpcLocalFailureCause_Type()
)
mscAtmIfVpcLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLocalFailureCause.setStatus("mandatory")


class _MscAtmIfVpcTroubled_Type(Integer32):
    """Custom type mscAtmIfVpcTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVpcTroubled_Type.__name__ = "Integer32"
_MscAtmIfVpcTroubled_Object = MibTableColumn
mscAtmIfVpcTroubled = _MscAtmIfVpcTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 28),
    _MscAtmIfVpcTroubled_Type()
)
mscAtmIfVpcTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTroubled.setStatus("mandatory")


class _MscAtmIfVpcSegLinkSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVpcSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVpcSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVpcSegLinkSideLoopbackState_Object = MibTableColumn
mscAtmIfVpcSegLinkSideLoopbackState = _MscAtmIfVpcSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 30),
    _MscAtmIfVpcSegLinkSideLoopbackState_Type()
)
mscAtmIfVpcSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcSegLinkSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVpcSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVpcSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVpcSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVpcSegSwitchSideLoopbackState_Object = MibTableColumn
mscAtmIfVpcSegSwitchSideLoopbackState = _MscAtmIfVpcSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 40),
    _MscAtmIfVpcSegSwitchSideLoopbackState_Type()
)
mscAtmIfVpcSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcSegSwitchSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVpcEndToEndLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVpcEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVpcEndToEndLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVpcEndToEndLoopbackState_Object = MibTableColumn
mscAtmIfVpcEndToEndLoopbackState = _MscAtmIfVpcEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 50),
    _MscAtmIfVpcEndToEndLoopbackState_Type()
)
mscAtmIfVpcEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcEndToEndLoopbackState.setStatus("mandatory")


class _MscAtmIfVpcRxOamCellCongestionState_Type(Integer32):
    """Custom type mscAtmIfVpcRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVpcRxOamCellCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVpcRxOamCellCongestionState_Object = MibTableColumn
mscAtmIfVpcRxOamCellCongestionState = _MscAtmIfVpcRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 55),
    _MscAtmIfVpcRxOamCellCongestionState_Type()
)
mscAtmIfVpcRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxOamCellCongestionState.setStatus("mandatory")


class _MscAtmIfVpcAisState_Type(Integer32):
    """Custom type mscAtmIfVpcAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVpcAisState_Type.__name__ = "Integer32"
_MscAtmIfVpcAisState_Object = MibTableColumn
mscAtmIfVpcAisState = _MscAtmIfVpcAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 60),
    _MscAtmIfVpcAisState_Type()
)
mscAtmIfVpcAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcAisState.setStatus("mandatory")


class _MscAtmIfVpcRdiState_Type(Integer32):
    """Custom type mscAtmIfVpcRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVpcRdiState_Type.__name__ = "Integer32"
_MscAtmIfVpcRdiState_Object = MibTableColumn
mscAtmIfVpcRdiState = _MscAtmIfVpcRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 120, 1, 70),
    _MscAtmIfVpcRdiState_Type()
)
mscAtmIfVpcRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRdiState.setStatus("mandatory")
_MscAtmIfVpcTrafficTable_Object = MibTable
mscAtmIfVpcTrafficTable = _MscAtmIfVpcTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTrafficTable.setStatus("mandatory")
_MscAtmIfVpcTrafficEntry_Object = MibTableRow
mscAtmIfVpcTrafficEntry = _MscAtmIfVpcTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1)
)
mscAtmIfVpcTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTrafficEntry.setStatus("mandatory")


class _MscAtmIfVpcTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVpcTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcTxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcTxTrafficDescType = _MscAtmIfVpcTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 10),
    _MscAtmIfVpcTxTrafficDescType_Type()
)
mscAtmIfVpcTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVpcTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVpcTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcTxQosClass_Object = MibTableColumn
mscAtmIfVpcTxQosClass = _MscAtmIfVpcTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 30),
    _MscAtmIfVpcTxQosClass_Type()
)
mscAtmIfVpcTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQosClass.setStatus("obsolete")


class _MscAtmIfVpcFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVpcFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcFwdQosClass_Object = MibTableColumn
mscAtmIfVpcFwdQosClass = _MscAtmIfVpcFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 31),
    _MscAtmIfVpcFwdQosClass_Type()
)
mscAtmIfVpcFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcFwdQosClass.setStatus("obsolete")


class _MscAtmIfVpcTxQueueLength_Type(Integer32):
    """Custom type mscAtmIfVpcTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVpcTxQueueLength_Type.__name__ = "Integer32"
_MscAtmIfVpcTxQueueLength_Object = MibTableColumn
mscAtmIfVpcTxQueueLength = _MscAtmIfVpcTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 32),
    _MscAtmIfVpcTxQueueLength_Type()
)
mscAtmIfVpcTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQueueLength.setStatus("obsolete")


class _MscAtmIfVpcTxQueueCongestionState_Type(Integer32):
    """Custom type mscAtmIfVpcTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVpcTxQueueCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVpcTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVpcTxQueueCongestionState = _MscAtmIfVpcTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 33),
    _MscAtmIfVpcTxQueueCongestionState_Type()
)
mscAtmIfVpcTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQueueCongestionState.setStatus("obsolete")


class _MscAtmIfVpcHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVpcHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVpcHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVpcHoldingPriority_Object = MibTableColumn
mscAtmIfVpcHoldingPriority = _MscAtmIfVpcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 35),
    _MscAtmIfVpcHoldingPriority_Type()
)
mscAtmIfVpcHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcHoldingPriority.setStatus("obsolete")


class _MscAtmIfVpcRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVpcRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVpcRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVpcRxTrafficDescType_Object = MibTableColumn
mscAtmIfVpcRxTrafficDescType = _MscAtmIfVpcRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 40),
    _MscAtmIfVpcRxTrafficDescType_Type()
)
mscAtmIfVpcRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVpcRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVpcRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcRxQosClass_Object = MibTableColumn
mscAtmIfVpcRxQosClass = _MscAtmIfVpcRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 60),
    _MscAtmIfVpcRxQosClass_Type()
)
mscAtmIfVpcRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxQosClass.setStatus("obsolete")


class _MscAtmIfVpcBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVpcBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVpcBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVpcBwdQosClass_Object = MibTableColumn
mscAtmIfVpcBwdQosClass = _MscAtmIfVpcBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 61),
    _MscAtmIfVpcBwdQosClass_Type()
)
mscAtmIfVpcBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcBwdQosClass.setStatus("obsolete")


class _MscAtmIfVpcAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVpcAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVpcAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVpcAtmServiceCategory_Object = MibTableColumn
mscAtmIfVpcAtmServiceCategory = _MscAtmIfVpcAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 62),
    _MscAtmIfVpcAtmServiceCategory_Type()
)
mscAtmIfVpcAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVpcTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVpcTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_MscAtmIfVpcTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVpcTrafficShaping_Object = MibTableColumn
mscAtmIfVpcTrafficShaping = _MscAtmIfVpcTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 70),
    _MscAtmIfVpcTrafficShaping_Type()
)
mscAtmIfVpcTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTrafficShaping.setStatus("obsolete")


class _MscAtmIfVpcBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVpcBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVpcBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcBearerClassBbc_Object = MibTableColumn
mscAtmIfVpcBearerClassBbc = _MscAtmIfVpcBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 71),
    _MscAtmIfVpcBearerClassBbc_Type()
)
mscAtmIfVpcBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVpcTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVpcTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVpcTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVpcTransferCapabilityBbc = _MscAtmIfVpcTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 72),
    _MscAtmIfVpcTransferCapabilityBbc_Type()
)
mscAtmIfVpcTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVpcClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVpcClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVpcClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVpcClippingBbc_Object = MibTableColumn
mscAtmIfVpcClippingBbc = _MscAtmIfVpcClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 74),
    _MscAtmIfVpcClippingBbc_Type()
)
mscAtmIfVpcClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcClippingBbc.setStatus("obsolete")


class _MscAtmIfVpcUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVpcUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVpcUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVpcUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVpcUnshapedTransmitQueueing = _MscAtmIfVpcUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 75),
    _MscAtmIfVpcUnshapedTransmitQueueing_Type()
)
mscAtmIfVpcUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVpcBestEffort_Type(Integer32):
    """Custom type mscAtmIfVpcBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVpcBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVpcBestEffort_Object = MibTableColumn
mscAtmIfVpcBestEffort = _MscAtmIfVpcBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 76),
    _MscAtmIfVpcBestEffort_Type()
)
mscAtmIfVpcBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcBestEffort.setStatus("obsolete")


class _MscAtmIfVpcUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVpcUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_MscAtmIfVpcUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVpcUsageParameterControl_Object = MibTableColumn
mscAtmIfVpcUsageParameterControl = _MscAtmIfVpcUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 80),
    _MscAtmIfVpcUsageParameterControl_Type()
)
mscAtmIfVpcUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVpcTxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVpcTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVpcTxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVpcTxFrameDiscard_Object = MibTableColumn
mscAtmIfVpcTxFrameDiscard = _MscAtmIfVpcTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 85),
    _MscAtmIfVpcTxFrameDiscard_Type()
)
mscAtmIfVpcTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVpcRxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVpcRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVpcRxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVpcRxFrameDiscard_Object = MibTableColumn
mscAtmIfVpcRxFrameDiscard = _MscAtmIfVpcRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 86),
    _MscAtmIfVpcRxFrameDiscard_Type()
)
mscAtmIfVpcRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVpcBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVpcBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVpcBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVpcBandwidthElastic_Object = MibTableColumn
mscAtmIfVpcBandwidthElastic = _MscAtmIfVpcBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 90),
    _MscAtmIfVpcBandwidthElastic_Type()
)
mscAtmIfVpcBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcBandwidthElastic.setStatus("obsolete")


class _MscAtmIfVpcBandwidthReduction_Type(Integer32):
    """Custom type mscAtmIfVpcBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcBandwidthReduction_Type.__name__ = "Integer32"
_MscAtmIfVpcBandwidthReduction_Object = MibTableColumn
mscAtmIfVpcBandwidthReduction = _MscAtmIfVpcBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 130, 1, 100),
    _MscAtmIfVpcBandwidthReduction_Type()
)
mscAtmIfVpcBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcBandwidthReduction.setStatus("obsolete")
_MscAtmIfVpcStatsTable_Object = MibTable
mscAtmIfVpcStatsTable = _MscAtmIfVpcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTable.setStatus("mandatory")
_MscAtmIfVpcStatsEntry_Object = MibTableRow
mscAtmIfVpcStatsEntry = _MscAtmIfVpcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1)
)
mscAtmIfVpcStatsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsEntry.setStatus("mandatory")
_MscAtmIfVpcStatsTxCell_Type = PassportCounter64
_MscAtmIfVpcStatsTxCell_Object = MibTableColumn
mscAtmIfVpcStatsTxCell = _MscAtmIfVpcStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 10),
    _MscAtmIfVpcStatsTxCell_Type()
)
mscAtmIfVpcStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTxCell.setStatus("mandatory")
_MscAtmIfVpcStatsTxCellClp_Type = PassportCounter64
_MscAtmIfVpcStatsTxCellClp_Object = MibTableColumn
mscAtmIfVpcStatsTxCellClp = _MscAtmIfVpcStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 20),
    _MscAtmIfVpcStatsTxCellClp_Type()
)
mscAtmIfVpcStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTxCellClp.setStatus("mandatory")
_MscAtmIfVpcTxDiscard_Type = PassportCounter64
_MscAtmIfVpcTxDiscard_Object = MibTableColumn
mscAtmIfVpcTxDiscard = _MscAtmIfVpcTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 30),
    _MscAtmIfVpcTxDiscard_Type()
)
mscAtmIfVpcTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxDiscard.setStatus("obsolete")
_MscAtmIfVpcTxDiscardClp_Type = PassportCounter64
_MscAtmIfVpcTxDiscardClp_Object = MibTableColumn
mscAtmIfVpcTxDiscardClp = _MscAtmIfVpcTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 40),
    _MscAtmIfVpcTxDiscardClp_Type()
)
mscAtmIfVpcTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxDiscardClp.setStatus("obsolete")
_MscAtmIfVpcStatsTxCellDiscard_Type = PassportCounter64
_MscAtmIfVpcStatsTxCellDiscard_Object = MibTableColumn
mscAtmIfVpcStatsTxCellDiscard = _MscAtmIfVpcStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 42),
    _MscAtmIfVpcStatsTxCellDiscard_Type()
)
mscAtmIfVpcStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTxCellDiscard.setStatus("mandatory")
_MscAtmIfVpcStatsTxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVpcStatsTxCellDiscardClp_Object = MibTableColumn
mscAtmIfVpcStatsTxCellDiscardClp = _MscAtmIfVpcStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 43),
    _MscAtmIfVpcStatsTxCellDiscardClp_Type()
)
mscAtmIfVpcStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVpcStatsTxFrameDiscard_Type = PassportCounter64
_MscAtmIfVpcStatsTxFrameDiscard_Object = MibTableColumn
mscAtmIfVpcStatsTxFrameDiscard = _MscAtmIfVpcStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 46),
    _MscAtmIfVpcStatsTxFrameDiscard_Type()
)
mscAtmIfVpcStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTxFrameDiscard.setStatus("mandatory")
_MscAtmIfVpcStatsTxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVpcStatsTxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVpcStatsTxFrameDiscardClp = _MscAtmIfVpcStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 47),
    _MscAtmIfVpcStatsTxFrameDiscardClp_Type()
)
mscAtmIfVpcStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsTxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVpcStatsRxCell_Type = PassportCounter64
_MscAtmIfVpcStatsRxCell_Object = MibTableColumn
mscAtmIfVpcStatsRxCell = _MscAtmIfVpcStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 50),
    _MscAtmIfVpcStatsRxCell_Type()
)
mscAtmIfVpcStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxCell.setStatus("mandatory")
_MscAtmIfVpcStatsRxCellClp_Type = PassportCounter64
_MscAtmIfVpcStatsRxCellClp_Object = MibTableColumn
mscAtmIfVpcStatsRxCellClp = _MscAtmIfVpcStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 60),
    _MscAtmIfVpcStatsRxCellClp_Type()
)
mscAtmIfVpcStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxCellClp.setStatus("mandatory")
_MscAtmIfVpcRxDiscard_Type = PassportCounter64
_MscAtmIfVpcRxDiscard_Object = MibTableColumn
mscAtmIfVpcRxDiscard = _MscAtmIfVpcRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 70),
    _MscAtmIfVpcRxDiscard_Type()
)
mscAtmIfVpcRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxDiscard.setStatus("obsolete")
_MscAtmIfVpcRxDiscardClp_Type = PassportCounter64
_MscAtmIfVpcRxDiscardClp_Object = MibTableColumn
mscAtmIfVpcRxDiscardClp = _MscAtmIfVpcRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 80),
    _MscAtmIfVpcRxDiscardClp_Type()
)
mscAtmIfVpcRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxDiscardClp.setStatus("obsolete")
_MscAtmIfVpcStatsRxCellDiscard_Type = PassportCounter64
_MscAtmIfVpcStatsRxCellDiscard_Object = MibTableColumn
mscAtmIfVpcStatsRxCellDiscard = _MscAtmIfVpcStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 82),
    _MscAtmIfVpcStatsRxCellDiscard_Type()
)
mscAtmIfVpcStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxCellDiscard.setStatus("mandatory")
_MscAtmIfVpcStatsRxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVpcStatsRxCellDiscardClp_Object = MibTableColumn
mscAtmIfVpcStatsRxCellDiscardClp = _MscAtmIfVpcStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 83),
    _MscAtmIfVpcStatsRxCellDiscardClp_Type()
)
mscAtmIfVpcStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVpcStatsRxFrameDiscard_Type = PassportCounter64
_MscAtmIfVpcStatsRxFrameDiscard_Object = MibTableColumn
mscAtmIfVpcStatsRxFrameDiscard = _MscAtmIfVpcStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 86),
    _MscAtmIfVpcStatsRxFrameDiscard_Type()
)
mscAtmIfVpcStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxFrameDiscard.setStatus("mandatory")
_MscAtmIfVpcStatsRxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVpcStatsRxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVpcStatsRxFrameDiscardClp = _MscAtmIfVpcStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 88),
    _MscAtmIfVpcStatsRxFrameDiscardClp_Type()
)
mscAtmIfVpcStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVpcStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_MscAtmIfVpcStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
mscAtmIfVpcStatsRxUpcViolationOnEnforcer1 = _MscAtmIfVpcStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 90),
    _MscAtmIfVpcStatsRxUpcViolationOnEnforcer1_Type()
)
mscAtmIfVpcStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_MscAtmIfVpcStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_MscAtmIfVpcStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
mscAtmIfVpcStatsRxUpcViolationOnEnforcer2 = _MscAtmIfVpcStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 92),
    _MscAtmIfVpcStatsRxUpcViolationOnEnforcer2_Type()
)
mscAtmIfVpcStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_MscAtmIfVpcStatsRxAal5FrameError_Type = PassportCounter64
_MscAtmIfVpcStatsRxAal5FrameError_Object = MibTableColumn
mscAtmIfVpcStatsRxAal5FrameError = _MscAtmIfVpcStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 100),
    _MscAtmIfVpcStatsRxAal5FrameError_Type()
)
mscAtmIfVpcStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxAal5FrameError.setStatus("mandatory")
_MscAtmIfVpcStatsRxAal5FrameAbort_Type = PassportCounter64
_MscAtmIfVpcStatsRxAal5FrameAbort_Object = MibTableColumn
mscAtmIfVpcStatsRxAal5FrameAbort = _MscAtmIfVpcStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 140, 1, 102),
    _MscAtmIfVpcStatsRxAal5FrameAbort_Type()
)
mscAtmIfVpcStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcStatsRxAal5FrameAbort.setStatus("mandatory")
_MscAtmIfVpcPerfTable_Object = MibTable
mscAtmIfVpcPerfTable = _MscAtmIfVpcPerfTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPerfTable.setStatus("mandatory")
_MscAtmIfVpcPerfEntry_Object = MibTableRow
mscAtmIfVpcPerfEntry = _MscAtmIfVpcPerfEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150, 1)
)
mscAtmIfVpcPerfEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcPerfEntry.setStatus("mandatory")


class _MscAtmIfVpcLastMinimumCtd_Type(Unsigned32):
    """Custom type mscAtmIfVpcLastMinimumCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVpcLastMinimumCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVpcLastMinimumCtd_Object = MibTableColumn
mscAtmIfVpcLastMinimumCtd = _MscAtmIfVpcLastMinimumCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150, 1, 10),
    _MscAtmIfVpcLastMinimumCtd_Type()
)
mscAtmIfVpcLastMinimumCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLastMinimumCtd.setStatus("mandatory")


class _MscAtmIfVpcLastMaximumCtd_Type(Unsigned32):
    """Custom type mscAtmIfVpcLastMaximumCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVpcLastMaximumCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVpcLastMaximumCtd_Object = MibTableColumn
mscAtmIfVpcLastMaximumCtd = _MscAtmIfVpcLastMaximumCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150, 1, 20),
    _MscAtmIfVpcLastMaximumCtd_Type()
)
mscAtmIfVpcLastMaximumCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLastMaximumCtd.setStatus("mandatory")


class _MscAtmIfVpcLastAverageCtd_Type(Unsigned32):
    """Custom type mscAtmIfVpcLastAverageCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVpcLastAverageCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVpcLastAverageCtd_Object = MibTableColumn
mscAtmIfVpcLastAverageCtd = _MscAtmIfVpcLastAverageCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150, 1, 30),
    _MscAtmIfVpcLastAverageCtd_Type()
)
mscAtmIfVpcLastAverageCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLastAverageCtd.setStatus("mandatory")


class _MscAtmIfVpcCurrentCtd_Type(Unsigned32):
    """Custom type mscAtmIfVpcCurrentCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVpcCurrentCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVpcCurrentCtd_Object = MibTableColumn
mscAtmIfVpcCurrentCtd = _MscAtmIfVpcCurrentCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150, 1, 40),
    _MscAtmIfVpcCurrentCtd_Type()
)
mscAtmIfVpcCurrentCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcCurrentCtd.setStatus("mandatory")


class _MscAtmIfVpcLastCtdSampleSize_Type(Unsigned32):
    """Custom type mscAtmIfVpcLastCtdSampleSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVpcLastCtdSampleSize_Type.__name__ = "Unsigned32"
_MscAtmIfVpcLastCtdSampleSize_Object = MibTableColumn
mscAtmIfVpcLastCtdSampleSize = _MscAtmIfVpcLastCtdSampleSize_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 150, 1, 50),
    _MscAtmIfVpcLastCtdSampleSize_Type()
)
mscAtmIfVpcLastCtdSampleSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcLastCtdSampleSize.setStatus("mandatory")
_MscAtmIfVpcTxTdpTable_Object = MibTable
mscAtmIfVpcTxTdpTable = _MscAtmIfVpcTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 294)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTxTdpTable.setStatus("obsolete")
_MscAtmIfVpcTxTdpEntry_Object = MibTableRow
mscAtmIfVpcTxTdpEntry = _MscAtmIfVpcTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 294, 1)
)
mscAtmIfVpcTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVpcTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVpcTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTxTdpIndex_Object = MibTableColumn
mscAtmIfVpcTxTdpIndex = _MscAtmIfVpcTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 294, 1, 1),
    _MscAtmIfVpcTxTdpIndex_Type()
)
mscAtmIfVpcTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVpcTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTxTdpValue_Object = MibTableColumn
mscAtmIfVpcTxTdpValue = _MscAtmIfVpcTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 294, 1, 2),
    _MscAtmIfVpcTxTdpValue_Type()
)
mscAtmIfVpcTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxTdpValue.setStatus("obsolete")
_MscAtmIfVpcRxTdpTable_Object = MibTable
mscAtmIfVpcRxTdpTable = _MscAtmIfVpcRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 295)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcRxTdpTable.setStatus("obsolete")
_MscAtmIfVpcRxTdpEntry_Object = MibTableRow
mscAtmIfVpcRxTdpEntry = _MscAtmIfVpcRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 295, 1)
)
mscAtmIfVpcRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVpcRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVpcRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcRxTdpIndex_Object = MibTableColumn
mscAtmIfVpcRxTdpIndex = _MscAtmIfVpcRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 295, 1, 1),
    _MscAtmIfVpcRxTdpIndex_Type()
)
mscAtmIfVpcRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVpcRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcRxTdpValue_Object = MibTableColumn
mscAtmIfVpcRxTdpValue = _MscAtmIfVpcRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 295, 1, 2),
    _MscAtmIfVpcRxTdpValue_Type()
)
mscAtmIfVpcRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcRxTdpValue.setStatus("obsolete")
_MscAtmIfVpcTxQThreshTable_Object = MibTable
mscAtmIfVpcTxQThreshTable = _MscAtmIfVpcTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 352)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQThreshTable.setStatus("obsolete")
_MscAtmIfVpcTxQThreshEntry_Object = MibTableRow
mscAtmIfVpcTxQThreshEntry = _MscAtmIfVpcTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 352, 1)
)
mscAtmIfVpcTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQThreshEntry.setStatus("obsolete")


class _MscAtmIfVpcTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVpcTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVpcTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcTxQThreshIndex_Object = MibTableColumn
mscAtmIfVpcTxQThreshIndex = _MscAtmIfVpcTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 352, 1, 1),
    _MscAtmIfVpcTxQThreshIndex_Type()
)
mscAtmIfVpcTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQThreshIndex.setStatus("obsolete")


class _MscAtmIfVpcTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVpcTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcTxQThreshValue_Object = MibTableColumn
mscAtmIfVpcTxQThreshValue = _MscAtmIfVpcTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 352, 1, 2),
    _MscAtmIfVpcTxQThreshValue_Type()
)
mscAtmIfVpcTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcTxQThreshValue.setStatus("obsolete")
_MscAtmIfVpcFqpTable_Object = MibTable
mscAtmIfVpcFqpTable = _MscAtmIfVpcFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 357)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcFqpTable.setStatus("obsolete")
_MscAtmIfVpcFqpEntry_Object = MibTableRow
mscAtmIfVpcFqpEntry = _MscAtmIfVpcFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 357, 1)
)
mscAtmIfVpcFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcFqpEntry.setStatus("obsolete")


class _MscAtmIfVpcFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcFqpIndex_Object = MibTableColumn
mscAtmIfVpcFqpIndex = _MscAtmIfVpcFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 357, 1, 1),
    _MscAtmIfVpcFqpIndex_Type()
)
mscAtmIfVpcFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcFqpIndex.setStatus("obsolete")


class _MscAtmIfVpcFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcFqpValue_Object = MibTableColumn
mscAtmIfVpcFqpValue = _MscAtmIfVpcFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 357, 1, 2),
    _MscAtmIfVpcFqpValue_Type()
)
mscAtmIfVpcFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcFqpValue.setStatus("obsolete")
_MscAtmIfVpcBqpTable_Object = MibTable
mscAtmIfVpcBqpTable = _MscAtmIfVpcBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 358)
)
if mibBuilder.loadTexts:
    mscAtmIfVpcBqpTable.setStatus("obsolete")
_MscAtmIfVpcBqpEntry_Object = MibTableRow
mscAtmIfVpcBqpEntry = _MscAtmIfVpcBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 358, 1)
)
mscAtmIfVpcBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVpcBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVpcBqpEntry.setStatus("obsolete")


class _MscAtmIfVpcBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVpcBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVpcBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVpcBqpIndex_Object = MibTableColumn
mscAtmIfVpcBqpIndex = _MscAtmIfVpcBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 358, 1, 1),
    _MscAtmIfVpcBqpIndex_Type()
)
mscAtmIfVpcBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVpcBqpIndex.setStatus("obsolete")


class _MscAtmIfVpcBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVpcBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVpcBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVpcBqpValue_Object = MibTableColumn
mscAtmIfVpcBqpValue = _MscAtmIfVpcBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 4, 358, 1, 2),
    _MscAtmIfVpcBqpValue_Type()
)
mscAtmIfVpcBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVpcBqpValue.setStatus("obsolete")
_MscAtmIfVcc_ObjectIdentity = ObjectIdentity
mscAtmIfVcc = _MscAtmIfVcc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5)
)
_MscAtmIfVccRowStatusTable_Object = MibTable
mscAtmIfVccRowStatusTable = _MscAtmIfVccRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccRowStatusTable.setStatus("mandatory")
_MscAtmIfVccRowStatusEntry_Object = MibTableRow
mscAtmIfVccRowStatusEntry = _MscAtmIfVccRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 1, 1)
)
mscAtmIfVccRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccRowStatus_Type = RowStatus
_MscAtmIfVccRowStatus_Object = MibTableColumn
mscAtmIfVccRowStatus = _MscAtmIfVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 1, 1, 1),
    _MscAtmIfVccRowStatus_Type()
)
mscAtmIfVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccRowStatus.setStatus("mandatory")
_MscAtmIfVccComponentName_Type = DisplayString
_MscAtmIfVccComponentName_Object = MibTableColumn
mscAtmIfVccComponentName = _MscAtmIfVccComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 1, 1, 2),
    _MscAtmIfVccComponentName_Type()
)
mscAtmIfVccComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccComponentName.setStatus("mandatory")
_MscAtmIfVccStorageType_Type = StorageType
_MscAtmIfVccStorageType_Object = MibTableColumn
mscAtmIfVccStorageType = _MscAtmIfVccStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 1, 1, 4),
    _MscAtmIfVccStorageType_Type()
)
mscAtmIfVccStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStorageType.setStatus("mandatory")


class _MscAtmIfVccIndex_Type(AsciiStringIndex):
    """Custom type mscAtmIfVccIndex based on AsciiStringIndex"""
    subtypeSpec = AsciiStringIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_MscAtmIfVccIndex_Type.__name__ = "AsciiStringIndex"
_MscAtmIfVccIndex_Object = MibTableColumn
mscAtmIfVccIndex = _MscAtmIfVccIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 1, 1, 10),
    _MscAtmIfVccIndex_Type()
)
mscAtmIfVccIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccIndex.setStatus("mandatory")
_MscAtmIfVccVcd_ObjectIdentity = ObjectIdentity
mscAtmIfVccVcd = _MscAtmIfVccVcd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2)
)
_MscAtmIfVccVcdRowStatusTable_Object = MibTable
mscAtmIfVccVcdRowStatusTable = _MscAtmIfVccVcdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRowStatusTable.setStatus("mandatory")
_MscAtmIfVccVcdRowStatusEntry_Object = MibTableRow
mscAtmIfVccVcdRowStatusEntry = _MscAtmIfVccVcdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 1, 1)
)
mscAtmIfVccVcdRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccVcdRowStatus_Type = RowStatus
_MscAtmIfVccVcdRowStatus_Object = MibTableColumn
mscAtmIfVccVcdRowStatus = _MscAtmIfVccVcdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 1, 1, 1),
    _MscAtmIfVccVcdRowStatus_Type()
)
mscAtmIfVccVcdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRowStatus.setStatus("mandatory")
_MscAtmIfVccVcdComponentName_Type = DisplayString
_MscAtmIfVccVcdComponentName_Object = MibTableColumn
mscAtmIfVccVcdComponentName = _MscAtmIfVccVcdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 1, 1, 2),
    _MscAtmIfVccVcdComponentName_Type()
)
mscAtmIfVccVcdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdComponentName.setStatus("mandatory")
_MscAtmIfVccVcdStorageType_Type = StorageType
_MscAtmIfVccVcdStorageType_Object = MibTableColumn
mscAtmIfVccVcdStorageType = _MscAtmIfVccVcdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 1, 1, 4),
    _MscAtmIfVccVcdStorageType_Type()
)
mscAtmIfVccVcdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdStorageType.setStatus("mandatory")
_MscAtmIfVccVcdIndex_Type = NonReplicated
_MscAtmIfVccVcdIndex_Object = MibTableColumn
mscAtmIfVccVcdIndex = _MscAtmIfVccVcdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 1, 1, 10),
    _MscAtmIfVccVcdIndex_Type()
)
mscAtmIfVccVcdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdIndex.setStatus("mandatory")
_MscAtmIfVccVcdTm_ObjectIdentity = ObjectIdentity
mscAtmIfVccVcdTm = _MscAtmIfVccVcdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2)
)
_MscAtmIfVccVcdTmRowStatusTable_Object = MibTable
mscAtmIfVccVcdTmRowStatusTable = _MscAtmIfVccVcdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVccVcdTmRowStatusEntry_Object = MibTableRow
mscAtmIfVccVcdTmRowStatusEntry = _MscAtmIfVccVcdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 1, 1)
)
mscAtmIfVccVcdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccVcdTmRowStatus_Type = RowStatus
_MscAtmIfVccVcdTmRowStatus_Object = MibTableColumn
mscAtmIfVccVcdTmRowStatus = _MscAtmIfVccVcdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 1, 1, 1),
    _MscAtmIfVccVcdTmRowStatus_Type()
)
mscAtmIfVccVcdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRowStatus.setStatus("mandatory")
_MscAtmIfVccVcdTmComponentName_Type = DisplayString
_MscAtmIfVccVcdTmComponentName_Object = MibTableColumn
mscAtmIfVccVcdTmComponentName = _MscAtmIfVccVcdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 1, 1, 2),
    _MscAtmIfVccVcdTmComponentName_Type()
)
mscAtmIfVccVcdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmComponentName.setStatus("mandatory")
_MscAtmIfVccVcdTmStorageType_Type = StorageType
_MscAtmIfVccVcdTmStorageType_Object = MibTableColumn
mscAtmIfVccVcdTmStorageType = _MscAtmIfVccVcdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 1, 1, 4),
    _MscAtmIfVccVcdTmStorageType_Type()
)
mscAtmIfVccVcdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmStorageType.setStatus("mandatory")
_MscAtmIfVccVcdTmIndex_Type = NonReplicated
_MscAtmIfVccVcdTmIndex_Object = MibTableColumn
mscAtmIfVccVcdTmIndex = _MscAtmIfVccVcdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 1, 1, 10),
    _MscAtmIfVccVcdTmIndex_Type()
)
mscAtmIfVccVcdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmIndex.setStatus("mandatory")
_MscAtmIfVccVcdTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVccVcdTmAbr = _MscAtmIfVccVcdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2)
)
_MscAtmIfVccVcdTmAbrRowStatusTable_Object = MibTable
mscAtmIfVccVcdTmAbrRowStatusTable = _MscAtmIfVccVcdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVccVcdTmAbrRowStatusEntry = _MscAtmIfVccVcdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 1, 1)
)
mscAtmIfVccVcdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrRowStatus_Type = RowStatus
_MscAtmIfVccVcdTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVccVcdTmAbrRowStatus = _MscAtmIfVccVcdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 1, 1, 1),
    _MscAtmIfVccVcdTmAbrRowStatus_Type()
)
mscAtmIfVccVcdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrComponentName_Type = DisplayString
_MscAtmIfVccVcdTmAbrComponentName_Object = MibTableColumn
mscAtmIfVccVcdTmAbrComponentName = _MscAtmIfVccVcdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 1, 1, 2),
    _MscAtmIfVccVcdTmAbrComponentName_Type()
)
mscAtmIfVccVcdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrStorageType_Type = StorageType
_MscAtmIfVccVcdTmAbrStorageType_Object = MibTableColumn
mscAtmIfVccVcdTmAbrStorageType = _MscAtmIfVccVcdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 1, 1, 4),
    _MscAtmIfVccVcdTmAbrStorageType_Type()
)
mscAtmIfVccVcdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrIndex_Type = NonReplicated
_MscAtmIfVccVcdTmAbrIndex_Object = MibTableColumn
mscAtmIfVccVcdTmAbrIndex = _MscAtmIfVccVcdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 1, 1, 10),
    _MscAtmIfVccVcdTmAbrIndex_Type()
)
mscAtmIfVccVcdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrIndex.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrProvTable_Object = MibTable
mscAtmIfVccVcdTmAbrProvTable = _MscAtmIfVccVcdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrProvTable.setStatus("mandatory")
_MscAtmIfVccVcdTmAbrProvEntry_Object = MibTableRow
mscAtmIfVccVcdTmAbrProvEntry = _MscAtmIfVccVcdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1)
)
mscAtmIfVccVcdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrProvEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_MscAtmIfVccVcdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVccVcdTmAbrInitialCellRate = _MscAtmIfVccVcdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 10),
    _MscAtmIfVccVcdTmAbrInitialCellRate_Type()
)
mscAtmIfVccVcdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVccVcdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVccVcdTmAbrTransientBufferExposure = _MscAtmIfVccVcdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 11),
    _MscAtmIfVccVcdTmAbrTransientBufferExposure_Type()
)
mscAtmIfVccVcdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVccVcdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVccVcdTmAbrFixedRoundTripTime = _MscAtmIfVccVcdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 12),
    _MscAtmIfVccVcdTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVccVcdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVccVcdTmAbrRateDecreaseFactor = _MscAtmIfVccVcdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 13),
    _MscAtmIfVccVcdTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVccVcdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVccVcdTmAbrRateIncreaseFactor = _MscAtmIfVccVcdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 14),
    _MscAtmIfVccVcdTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVccVcdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVccVcdTmAbrMaxCellPerRmCell = _MscAtmIfVccVcdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 15),
    _MscAtmIfVccVcdTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVccVcdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
mscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells = _MscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 16),
    _MscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Type()
)
mscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVccVcdTmAbrCutoffDecreaseFactor = _MscAtmIfVccVcdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 17),
    _MscAtmIfVccVcdTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVccVcdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor = _MscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 18),
    _MscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrDgcraMaximumDelay_Object = MibTableColumn
mscAtmIfVccVcdTmAbrDgcraMaximumDelay = _MscAtmIfVccVcdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 19),
    _MscAtmIfVccVcdTmAbrDgcraMaximumDelay_Type()
)
mscAtmIfVccVcdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVccVcdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrDgcraMinimumDelay_Object = MibTableColumn
mscAtmIfVccVcdTmAbrDgcraMinimumDelay = _MscAtmIfVccVcdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 20),
    _MscAtmIfVccVcdTmAbrDgcraMinimumDelay_Type()
)
mscAtmIfVccVcdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor = _MscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 21),
    _MscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
mscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVccVcdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmAbrFarEndInitialCellRate_Object = MibTableColumn
mscAtmIfVccVcdTmAbrFarEndInitialCellRate = _MscAtmIfVccVcdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 2, 110, 1, 22),
    _MscAtmIfVccVcdTmAbrFarEndInitialCellRate_Type()
)
mscAtmIfVccVcdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_MscAtmIfVccVcdTmProvTable_Object = MibTable
mscAtmIfVccVcdTmProvTable = _MscAtmIfVccVcdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmProvTable.setStatus("mandatory")
_MscAtmIfVccVcdTmProvEntry_Object = MibTableRow
mscAtmIfVccVcdTmProvEntry = _MscAtmIfVccVcdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1)
)
mscAtmIfVccVcdTmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmProvEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVccVcdTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVccVcdTmTxTrafficDescType = _MscAtmIfVccVcdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 10),
    _MscAtmIfVccVcdTmTxTrafficDescType_Type()
)
mscAtmIfVccVcdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVccVcdTmFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVccVcdTmFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmFwdQosClass_Object = MibTableColumn
mscAtmIfVccVcdTmFwdQosClass = _MscAtmIfVccVcdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 21),
    _MscAtmIfVccVcdTmFwdQosClass_Type()
)
mscAtmIfVccVcdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmFwdQosClass.setStatus("mandatory")


class _MscAtmIfVccVcdTmTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfVccVcdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmTxQueueLimit_Object = MibTableColumn
mscAtmIfVccVcdTmTxQueueLimit = _MscAtmIfVccVcdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 22),
    _MscAtmIfVccVcdTmTxQueueLimit_Type()
)
mscAtmIfVccVcdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxQueueLimit.setStatus("mandatory")


class _MscAtmIfVccVcdTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVccVcdTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmHoldingPriority_Object = MibTableColumn
mscAtmIfVccVcdTmHoldingPriority = _MscAtmIfVccVcdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 25),
    _MscAtmIfVccVcdTmHoldingPriority_Type()
)
mscAtmIfVccVcdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVccVcdTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_MscAtmIfVccVcdTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVccVcdTmRxTrafficDescType = _MscAtmIfVccVcdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 30),
    _MscAtmIfVccVcdTmRxTrafficDescType_Type()
)
mscAtmIfVccVcdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVccVcdTmBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVccVcdTmBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmBwdQosClass_Object = MibTableColumn
mscAtmIfVccVcdTmBwdQosClass = _MscAtmIfVccVcdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 41),
    _MscAtmIfVccVcdTmBwdQosClass_Type()
)
mscAtmIfVccVcdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBwdQosClass.setStatus("mandatory")


class _MscAtmIfVccVcdTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVccVcdTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVccVcdTmAtmServiceCategory = _MscAtmIfVccVcdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 42),
    _MscAtmIfVccVcdTmAtmServiceCategory_Type()
)
mscAtmIfVccVcdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVccVcdTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_MscAtmIfVccVcdTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmTrafficShaping_Object = MibTableColumn
mscAtmIfVccVcdTmTrafficShaping = _MscAtmIfVccVcdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 50),
    _MscAtmIfVccVcdTmTrafficShaping_Type()
)
mscAtmIfVccVcdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVccVcdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_MscAtmIfVccVcdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVccVcdTmUnshapedTransmitQueueing = _MscAtmIfVccVcdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 60),
    _MscAtmIfVccVcdTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVccVcdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVccVcdTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfVccVcdTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmWeight_Object = MibTableColumn
mscAtmIfVccVcdTmWeight = _MscAtmIfVccVcdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 61),
    _MscAtmIfVccVcdTmWeight_Type()
)
mscAtmIfVccVcdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmWeight.setStatus("mandatory")


class _MscAtmIfVccVcdTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_MscAtmIfVccVcdTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmForceTagging_Object = MibTableColumn
mscAtmIfVccVcdTmForceTagging = _MscAtmIfVccVcdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 62),
    _MscAtmIfVccVcdTmForceTagging_Type()
)
mscAtmIfVccVcdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmForceTagging.setStatus("mandatory")


class _MscAtmIfVccVcdTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_MscAtmIfVccVcdTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVccVcdTmUsageParameterControl = _MscAtmIfVccVcdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 70),
    _MscAtmIfVccVcdTmUsageParameterControl_Type()
)
mscAtmIfVccVcdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVccVcdTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVccVcdTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVccVcdTmBearerClassBbc = _MscAtmIfVccVcdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 71),
    _MscAtmIfVccVcdTmBearerClassBbc_Type()
)
mscAtmIfVccVcdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVccVcdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVccVcdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVccVcdTmTransferCapabilityBbc = _MscAtmIfVccVcdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 72),
    _MscAtmIfVccVcdTmTransferCapabilityBbc_Type()
)
mscAtmIfVccVcdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVccVcdTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVccVcdTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmClippingBbc_Object = MibTableColumn
mscAtmIfVccVcdTmClippingBbc = _MscAtmIfVccVcdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 74),
    _MscAtmIfVccVcdTmClippingBbc_Type()
)
mscAtmIfVccVcdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVccVcdTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVccVcdTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmBestEffort_Object = MibTableColumn
mscAtmIfVccVcdTmBestEffort = _MscAtmIfVccVcdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 75),
    _MscAtmIfVccVcdTmBestEffort_Type()
)
mscAtmIfVccVcdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBestEffort.setStatus("mandatory")


class _MscAtmIfVccVcdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVccVcdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVccVcdTmTxPacketWiseDiscard = _MscAtmIfVccVcdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 76),
    _MscAtmIfVccVcdTmTxPacketWiseDiscard_Type()
)
mscAtmIfVccVcdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVccVcdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVccVcdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVccVcdTmRxPacketWiseDiscard = _MscAtmIfVccVcdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 78),
    _MscAtmIfVccVcdTmRxPacketWiseDiscard_Type()
)
mscAtmIfVccVcdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVccVcdTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVccVcdTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVccVcdTmAbrConnectionType = _MscAtmIfVccVcdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 100, 1, 90),
    _MscAtmIfVccVcdTmAbrConnectionType_Type()
)
mscAtmIfVccVcdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVccVcdTmTxTdpTable_Object = MibTable
mscAtmIfVccVcdTmTxTdpTable = _MscAtmIfVccVcdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 456)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVccVcdTmTxTdpEntry_Object = MibTableRow
mscAtmIfVccVcdTmTxTdpEntry = _MscAtmIfVccVcdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 456, 1)
)
mscAtmIfVccVcdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVccVcdTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVccVcdTmTxTdpIndex = _MscAtmIfVccVcdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 456, 1, 1),
    _MscAtmIfVccVcdTmTxTdpIndex_Type()
)
mscAtmIfVccVcdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVccVcdTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmTxTdpValue_Object = MibTableColumn
mscAtmIfVccVcdTmTxTdpValue = _MscAtmIfVccVcdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 456, 1, 2),
    _MscAtmIfVccVcdTmTxTdpValue_Type()
)
mscAtmIfVccVcdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVccVcdTmRxTdpTable_Object = MibTable
mscAtmIfVccVcdTmRxTdpTable = _MscAtmIfVccVcdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 457)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVccVcdTmRxTdpEntry_Object = MibTableRow
mscAtmIfVccVcdTmRxTdpEntry = _MscAtmIfVccVcdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 457, 1)
)
mscAtmIfVccVcdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVccVcdTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVccVcdTmRxTdpIndex = _MscAtmIfVccVcdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 457, 1, 1),
    _MscAtmIfVccVcdTmRxTdpIndex_Type()
)
mscAtmIfVccVcdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVccVcdTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmRxTdpValue_Object = MibTableColumn
mscAtmIfVccVcdTmRxTdpValue = _MscAtmIfVccVcdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 457, 1, 2),
    _MscAtmIfVccVcdTmRxTdpValue_Type()
)
mscAtmIfVccVcdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVccVcdTmFqpTable_Object = MibTable
mscAtmIfVccVcdTmFqpTable = _MscAtmIfVccVcdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 458)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmFqpTable.setStatus("mandatory")
_MscAtmIfVccVcdTmFqpEntry_Object = MibTableRow
mscAtmIfVccVcdTmFqpEntry = _MscAtmIfVccVcdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 458, 1)
)
mscAtmIfVccVcdTmFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmFqpEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTmFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccVcdTmFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmFqpIndex_Object = MibTableColumn
mscAtmIfVccVcdTmFqpIndex = _MscAtmIfVccVcdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 458, 1, 1),
    _MscAtmIfVccVcdTmFqpIndex_Type()
)
mscAtmIfVccVcdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmFqpIndex.setStatus("mandatory")


class _MscAtmIfVccVcdTmFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdTmFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmFqpValue_Object = MibTableColumn
mscAtmIfVccVcdTmFqpValue = _MscAtmIfVccVcdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 458, 1, 2),
    _MscAtmIfVccVcdTmFqpValue_Type()
)
mscAtmIfVccVcdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmFqpValue.setStatus("mandatory")
_MscAtmIfVccVcdTmBqpTable_Object = MibTable
mscAtmIfVccVcdTmBqpTable = _MscAtmIfVccVcdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 459)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBqpTable.setStatus("mandatory")
_MscAtmIfVccVcdTmBqpEntry_Object = MibTableRow
mscAtmIfVccVcdTmBqpEntry = _MscAtmIfVccVcdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 459, 1)
)
mscAtmIfVccVcdTmBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBqpEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTmBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccVcdTmBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTmBqpIndex_Object = MibTableColumn
mscAtmIfVccVcdTmBqpIndex = _MscAtmIfVccVcdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 459, 1, 1),
    _MscAtmIfVccVcdTmBqpIndex_Type()
)
mscAtmIfVccVcdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBqpIndex.setStatus("mandatory")


class _MscAtmIfVccVcdTmBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdTmBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTmBqpValue_Object = MibTableColumn
mscAtmIfVccVcdTmBqpValue = _MscAtmIfVccVcdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 2, 459, 1, 2),
    _MscAtmIfVccVcdTmBqpValue_Type()
)
mscAtmIfVccVcdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTmBqpValue.setStatus("mandatory")
_MscAtmIfVccVcdPm_ObjectIdentity = ObjectIdentity
mscAtmIfVccVcdPm = _MscAtmIfVccVcdPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3)
)
_MscAtmIfVccVcdPmRowStatusTable_Object = MibTable
mscAtmIfVccVcdPmRowStatusTable = _MscAtmIfVccVcdPmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmRowStatusTable.setStatus("mandatory")
_MscAtmIfVccVcdPmRowStatusEntry_Object = MibTableRow
mscAtmIfVccVcdPmRowStatusEntry = _MscAtmIfVccVcdPmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 1, 1)
)
mscAtmIfVccVcdPmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccVcdPmRowStatus_Type = RowStatus
_MscAtmIfVccVcdPmRowStatus_Object = MibTableColumn
mscAtmIfVccVcdPmRowStatus = _MscAtmIfVccVcdPmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 1, 1, 1),
    _MscAtmIfVccVcdPmRowStatus_Type()
)
mscAtmIfVccVcdPmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmRowStatus.setStatus("mandatory")
_MscAtmIfVccVcdPmComponentName_Type = DisplayString
_MscAtmIfVccVcdPmComponentName_Object = MibTableColumn
mscAtmIfVccVcdPmComponentName = _MscAtmIfVccVcdPmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 1, 1, 2),
    _MscAtmIfVccVcdPmComponentName_Type()
)
mscAtmIfVccVcdPmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmComponentName.setStatus("mandatory")
_MscAtmIfVccVcdPmStorageType_Type = StorageType
_MscAtmIfVccVcdPmStorageType_Object = MibTableColumn
mscAtmIfVccVcdPmStorageType = _MscAtmIfVccVcdPmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 1, 1, 4),
    _MscAtmIfVccVcdPmStorageType_Type()
)
mscAtmIfVccVcdPmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmStorageType.setStatus("mandatory")
_MscAtmIfVccVcdPmIndex_Type = NonReplicated
_MscAtmIfVccVcdPmIndex_Object = MibTableColumn
mscAtmIfVccVcdPmIndex = _MscAtmIfVccVcdPmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 1, 1, 10),
    _MscAtmIfVccVcdPmIndex_Type()
)
mscAtmIfVccVcdPmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmIndex.setStatus("mandatory")
_MscAtmIfVccVcdPmProvTable_Object = MibTable
mscAtmIfVccVcdPmProvTable = _MscAtmIfVccVcdPmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmProvTable.setStatus("mandatory")
_MscAtmIfVccVcdPmProvEntry_Object = MibTableRow
mscAtmIfVccVcdPmProvEntry = _MscAtmIfVccVcdPmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 100, 1)
)
mscAtmIfVccVcdPmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmProvEntry.setStatus("mandatory")


class _MscAtmIfVccVcdPmSegSwitchSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfVccVcdPmSegSwitchSideMeasurement based on OctetString"""
    defaultHexValue = "20"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccVcdPmSegSwitchSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfVccVcdPmSegSwitchSideMeasurement_Object = MibTableColumn
mscAtmIfVccVcdPmSegSwitchSideMeasurement = _MscAtmIfVccVcdPmSegSwitchSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 100, 1, 1),
    _MscAtmIfVccVcdPmSegSwitchSideMeasurement_Type()
)
mscAtmIfVccVcdPmSegSwitchSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmSegSwitchSideMeasurement.setStatus("mandatory")


class _MscAtmIfVccVcdPmSegLinkSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfVccVcdPmSegLinkSideMeasurement based on OctetString"""
    defaultHexValue = "20"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccVcdPmSegLinkSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfVccVcdPmSegLinkSideMeasurement_Object = MibTableColumn
mscAtmIfVccVcdPmSegLinkSideMeasurement = _MscAtmIfVccVcdPmSegLinkSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 100, 1, 2),
    _MscAtmIfVccVcdPmSegLinkSideMeasurement_Type()
)
mscAtmIfVccVcdPmSegLinkSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmSegLinkSideMeasurement.setStatus("mandatory")


class _MscAtmIfVccVcdPmControlMode_Type(Integer32):
    """Custom type mscAtmIfVccVcdPmControlMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoStart", 0),
          ("onDemand", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVccVcdPmControlMode_Type.__name__ = "Integer32"
_MscAtmIfVccVcdPmControlMode_Object = MibTableColumn
mscAtmIfVccVcdPmControlMode = _MscAtmIfVccVcdPmControlMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 3, 100, 1, 3),
    _MscAtmIfVccVcdPmControlMode_Type()
)
mscAtmIfVccVcdPmControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdPmControlMode.setStatus("mandatory")
_MscAtmIfVccVcdLbkTable_Object = MibTable
mscAtmIfVccVcdLbkTable = _MscAtmIfVccVcdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdLbkTable.setStatus("mandatory")
_MscAtmIfVccVcdLbkEntry_Object = MibTableRow
mscAtmIfVccVcdLbkEntry = _MscAtmIfVccVcdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 100, 1)
)
mscAtmIfVccVcdLbkEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdLbkEntry.setStatus("mandatory")


class _MscAtmIfVccVcdSegLinkSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVccVcdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVccVcdSegLinkSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVccVcdSegLinkSideLoopback_Object = MibTableColumn
mscAtmIfVccVcdSegLinkSideLoopback = _MscAtmIfVccVcdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 100, 1, 10),
    _MscAtmIfVccVcdSegLinkSideLoopback_Type()
)
mscAtmIfVccVcdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdSegLinkSideLoopback.setStatus("mandatory")


class _MscAtmIfVccVcdSegSwitchSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVccVcdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVccVcdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVccVcdSegSwitchSideLoopback_Object = MibTableColumn
mscAtmIfVccVcdSegSwitchSideLoopback = _MscAtmIfVccVcdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 100, 1, 20),
    _MscAtmIfVccVcdSegSwitchSideLoopback_Type()
)
mscAtmIfVccVcdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdSegSwitchSideLoopback.setStatus("mandatory")


class _MscAtmIfVccVcdEndToEndLoopback_Type(Integer32):
    """Custom type mscAtmIfVccVcdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVccVcdEndToEndLoopback_Type.__name__ = "Integer32"
_MscAtmIfVccVcdEndToEndLoopback_Object = MibTableColumn
mscAtmIfVccVcdEndToEndLoopback = _MscAtmIfVccVcdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 100, 1, 30),
    _MscAtmIfVccVcdEndToEndLoopback_Type()
)
mscAtmIfVccVcdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdEndToEndLoopback.setStatus("mandatory")


class _MscAtmIfVccVcdMCastConnectionType_Type(Integer32):
    """Custom type mscAtmIfVccVcdMCastConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipointLeaf", 2),
          ("pointToMultipointRoot", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVccVcdMCastConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVccVcdMCastConnectionType_Object = MibTableColumn
mscAtmIfVccVcdMCastConnectionType = _MscAtmIfVccVcdMCastConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 100, 1, 50),
    _MscAtmIfVccVcdMCastConnectionType_Type()
)
mscAtmIfVccVcdMCastConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdMCastConnectionType.setStatus("mandatory")
_MscAtmIfVccVcdTrafficTable_Object = MibTable
mscAtmIfVccVcdTrafficTable = _MscAtmIfVccVcdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTrafficTable.setStatus("mandatory")
_MscAtmIfVccVcdTrafficEntry_Object = MibTableRow
mscAtmIfVccVcdTrafficEntry = _MscAtmIfVccVcdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1)
)
mscAtmIfVccVcdTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTrafficEntry.setStatus("mandatory")


class _MscAtmIfVccVcdTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccVcdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVccVcdTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTxTrafficDescType_Object = MibTableColumn
mscAtmIfVccVcdTxTrafficDescType = _MscAtmIfVccVcdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 10),
    _MscAtmIfVccVcdTxTrafficDescType_Type()
)
mscAtmIfVccVcdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVccVcdTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVccVcdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVccVcdTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTxQosClass_Object = MibTableColumn
mscAtmIfVccVcdTxQosClass = _MscAtmIfVccVcdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 20),
    _MscAtmIfVccVcdTxQosClass_Type()
)
mscAtmIfVccVcdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTxQosClass.setStatus("obsolete")


class _MscAtmIfVccVcdFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVccVcdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVccVcdFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccVcdFwdQosClass_Object = MibTableColumn
mscAtmIfVccVcdFwdQosClass = _MscAtmIfVccVcdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 21),
    _MscAtmIfVccVcdFwdQosClass_Type()
)
mscAtmIfVccVcdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdFwdQosClass.setStatus("obsolete")


class _MscAtmIfVccVcdHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVccVcdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVccVcdHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVccVcdHoldingPriority_Object = MibTableColumn
mscAtmIfVccVcdHoldingPriority = _MscAtmIfVccVcdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 25),
    _MscAtmIfVccVcdHoldingPriority_Type()
)
mscAtmIfVccVcdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdHoldingPriority.setStatus("obsolete")


class _MscAtmIfVccVcdRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccVcdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_MscAtmIfVccVcdRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccVcdRxTrafficDescType_Object = MibTableColumn
mscAtmIfVccVcdRxTrafficDescType = _MscAtmIfVccVcdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 30),
    _MscAtmIfVccVcdRxTrafficDescType_Type()
)
mscAtmIfVccVcdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVccVcdRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVccVcdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVccVcdRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccVcdRxQosClass_Object = MibTableColumn
mscAtmIfVccVcdRxQosClass = _MscAtmIfVccVcdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 40),
    _MscAtmIfVccVcdRxQosClass_Type()
)
mscAtmIfVccVcdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRxQosClass.setStatus("obsolete")


class _MscAtmIfVccVcdBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVccVcdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVccVcdBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccVcdBwdQosClass_Object = MibTableColumn
mscAtmIfVccVcdBwdQosClass = _MscAtmIfVccVcdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 41),
    _MscAtmIfVccVcdBwdQosClass_Type()
)
mscAtmIfVccVcdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBwdQosClass.setStatus("obsolete")


class _MscAtmIfVccVcdAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVccVcdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVccVcdAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVccVcdAtmServiceCategory_Object = MibTableColumn
mscAtmIfVccVcdAtmServiceCategory = _MscAtmIfVccVcdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 42),
    _MscAtmIfVccVcdAtmServiceCategory_Type()
)
mscAtmIfVccVcdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVccVcdTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVccVcdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVccVcdTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTrafficShaping_Object = MibTableColumn
mscAtmIfVccVcdTrafficShaping = _MscAtmIfVccVcdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 50),
    _MscAtmIfVccVcdTrafficShaping_Type()
)
mscAtmIfVccVcdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTrafficShaping.setStatus("obsolete")


class _MscAtmIfVccVcdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVccVcdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_MscAtmIfVccVcdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVccVcdUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVccVcdUnshapedTransmitQueueing = _MscAtmIfVccVcdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 60),
    _MscAtmIfVccVcdUnshapedTransmitQueueing_Type()
)
mscAtmIfVccVcdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVccVcdUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVccVcdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVccVcdUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVccVcdUsageParameterControl_Object = MibTableColumn
mscAtmIfVccVcdUsageParameterControl = _MscAtmIfVccVcdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 70),
    _MscAtmIfVccVcdUsageParameterControl_Type()
)
mscAtmIfVccVcdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVccVcdBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVccVcdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVccVcdBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVccVcdBearerClassBbc_Object = MibTableColumn
mscAtmIfVccVcdBearerClassBbc = _MscAtmIfVccVcdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 71),
    _MscAtmIfVccVcdBearerClassBbc_Type()
)
mscAtmIfVccVcdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVccVcdTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVccVcdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVccVcdTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVccVcdTransferCapabilityBbc = _MscAtmIfVccVcdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 72),
    _MscAtmIfVccVcdTransferCapabilityBbc_Type()
)
mscAtmIfVccVcdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVccVcdClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVccVcdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVccVcdClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVccVcdClippingBbc_Object = MibTableColumn
mscAtmIfVccVcdClippingBbc = _MscAtmIfVccVcdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 74),
    _MscAtmIfVccVcdClippingBbc_Type()
)
mscAtmIfVccVcdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdClippingBbc.setStatus("obsolete")


class _MscAtmIfVccVcdBestEffort_Type(Integer32):
    """Custom type mscAtmIfVccVcdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVccVcdBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVccVcdBestEffort_Object = MibTableColumn
mscAtmIfVccVcdBestEffort = _MscAtmIfVccVcdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 75),
    _MscAtmIfVccVcdBestEffort_Type()
)
mscAtmIfVccVcdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBestEffort.setStatus("obsolete")


class _MscAtmIfVccVcdFwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVccVcdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVccVcdFwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVccVcdFwdFrameDiscard_Object = MibTableColumn
mscAtmIfVccVcdFwdFrameDiscard = _MscAtmIfVccVcdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 76),
    _MscAtmIfVccVcdFwdFrameDiscard_Type()
)
mscAtmIfVccVcdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdFwdFrameDiscard.setStatus("obsolete")


class _MscAtmIfVccVcdBwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVccVcdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVccVcdBwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVccVcdBwdFrameDiscard_Object = MibTableColumn
mscAtmIfVccVcdBwdFrameDiscard = _MscAtmIfVccVcdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 110, 1, 77),
    _MscAtmIfVccVcdBwdFrameDiscard_Type()
)
mscAtmIfVccVcdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBwdFrameDiscard.setStatus("obsolete")
_MscAtmIfVccVcdAcctTable_Object = MibTable
mscAtmIfVccVcdAcctTable = _MscAtmIfVccVcdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 111)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdAcctTable.setStatus("mandatory")
_MscAtmIfVccVcdAcctEntry_Object = MibTableRow
mscAtmIfVccVcdAcctEntry = _MscAtmIfVccVcdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 111, 1)
)
mscAtmIfVccVcdAcctEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdAcctEntry.setStatus("mandatory")


class _MscAtmIfVccVcdCorrelationTag_Type(AsciiString):
    """Custom type mscAtmIfVccVcdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_MscAtmIfVccVcdCorrelationTag_Type.__name__ = "AsciiString"
_MscAtmIfVccVcdCorrelationTag_Object = MibTableColumn
mscAtmIfVccVcdCorrelationTag = _MscAtmIfVccVcdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 111, 1, 10),
    _MscAtmIfVccVcdCorrelationTag_Type()
)
mscAtmIfVccVcdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdCorrelationTag.setStatus("mandatory")
_MscAtmIfVccVcdTxTdpTable_Object = MibTable
mscAtmIfVccVcdTxTdpTable = _MscAtmIfVccVcdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 297)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTxTdpTable.setStatus("obsolete")
_MscAtmIfVccVcdTxTdpEntry_Object = MibTableRow
mscAtmIfVccVcdTxTdpEntry = _MscAtmIfVccVcdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 297, 1)
)
mscAtmIfVccVcdTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVccVcdTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVccVcdTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdTxTdpIndex_Object = MibTableColumn
mscAtmIfVccVcdTxTdpIndex = _MscAtmIfVccVcdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 297, 1, 1),
    _MscAtmIfVccVcdTxTdpIndex_Type()
)
mscAtmIfVccVcdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVccVcdTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdTxTdpValue_Object = MibTableColumn
mscAtmIfVccVcdTxTdpValue = _MscAtmIfVccVcdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 297, 1, 2),
    _MscAtmIfVccVcdTxTdpValue_Type()
)
mscAtmIfVccVcdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdTxTdpValue.setStatus("obsolete")
_MscAtmIfVccVcdRxTdpTable_Object = MibTable
mscAtmIfVccVcdRxTdpTable = _MscAtmIfVccVcdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 298)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRxTdpTable.setStatus("obsolete")
_MscAtmIfVccVcdRxTdpEntry_Object = MibTableRow
mscAtmIfVccVcdRxTdpEntry = _MscAtmIfVccVcdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 298, 1)
)
mscAtmIfVccVcdRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVccVcdRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVccVcdRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdRxTdpIndex_Object = MibTableColumn
mscAtmIfVccVcdRxTdpIndex = _MscAtmIfVccVcdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 298, 1, 1),
    _MscAtmIfVccVcdRxTdpIndex_Type()
)
mscAtmIfVccVcdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVccVcdRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdRxTdpValue_Object = MibTableColumn
mscAtmIfVccVcdRxTdpValue = _MscAtmIfVccVcdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 298, 1, 2),
    _MscAtmIfVccVcdRxTdpValue_Type()
)
mscAtmIfVccVcdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdRxTdpValue.setStatus("obsolete")
_MscAtmIfVccVcdFqpTable_Object = MibTable
mscAtmIfVccVcdFqpTable = _MscAtmIfVccVcdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 359)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdFqpTable.setStatus("obsolete")
_MscAtmIfVccVcdFqpEntry_Object = MibTableRow
mscAtmIfVccVcdFqpEntry = _MscAtmIfVccVcdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 359, 1)
)
mscAtmIfVccVcdFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdFqpEntry.setStatus("obsolete")


class _MscAtmIfVccVcdFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccVcdFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdFqpIndex_Object = MibTableColumn
mscAtmIfVccVcdFqpIndex = _MscAtmIfVccVcdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 359, 1, 1),
    _MscAtmIfVccVcdFqpIndex_Type()
)
mscAtmIfVccVcdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdFqpIndex.setStatus("obsolete")


class _MscAtmIfVccVcdFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdFqpValue_Object = MibTableColumn
mscAtmIfVccVcdFqpValue = _MscAtmIfVccVcdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 359, 1, 2),
    _MscAtmIfVccVcdFqpValue_Type()
)
mscAtmIfVccVcdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdFqpValue.setStatus("obsolete")
_MscAtmIfVccVcdBqpTable_Object = MibTable
mscAtmIfVccVcdBqpTable = _MscAtmIfVccVcdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 360)
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBqpTable.setStatus("obsolete")
_MscAtmIfVccVcdBqpEntry_Object = MibTableRow
mscAtmIfVccVcdBqpEntry = _MscAtmIfVccVcdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 360, 1)
)
mscAtmIfVccVcdBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccVcdBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBqpEntry.setStatus("obsolete")


class _MscAtmIfVccVcdBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccVcdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccVcdBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccVcdBqpIndex_Object = MibTableColumn
mscAtmIfVccVcdBqpIndex = _MscAtmIfVccVcdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 360, 1, 1),
    _MscAtmIfVccVcdBqpIndex_Type()
)
mscAtmIfVccVcdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBqpIndex.setStatus("obsolete")


class _MscAtmIfVccVcdBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccVcdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccVcdBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccVcdBqpValue_Object = MibTableColumn
mscAtmIfVccVcdBqpValue = _MscAtmIfVccVcdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 2, 360, 1, 2),
    _MscAtmIfVccVcdBqpValue_Type()
)
mscAtmIfVccVcdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccVcdBqpValue.setStatus("obsolete")
_MscAtmIfVccLoop_ObjectIdentity = ObjectIdentity
mscAtmIfVccLoop = _MscAtmIfVccLoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3)
)
_MscAtmIfVccLoopRowStatusTable_Object = MibTable
mscAtmIfVccLoopRowStatusTable = _MscAtmIfVccLoopRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccLoopRowStatusTable.setStatus("mandatory")
_MscAtmIfVccLoopRowStatusEntry_Object = MibTableRow
mscAtmIfVccLoopRowStatusEntry = _MscAtmIfVccLoopRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3, 1, 1)
)
mscAtmIfVccLoopRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccLoopIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccLoopRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccLoopRowStatus_Type = RowStatus
_MscAtmIfVccLoopRowStatus_Object = MibTableColumn
mscAtmIfVccLoopRowStatus = _MscAtmIfVccLoopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3, 1, 1, 1),
    _MscAtmIfVccLoopRowStatus_Type()
)
mscAtmIfVccLoopRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccLoopRowStatus.setStatus("mandatory")
_MscAtmIfVccLoopComponentName_Type = DisplayString
_MscAtmIfVccLoopComponentName_Object = MibTableColumn
mscAtmIfVccLoopComponentName = _MscAtmIfVccLoopComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3, 1, 1, 2),
    _MscAtmIfVccLoopComponentName_Type()
)
mscAtmIfVccLoopComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLoopComponentName.setStatus("mandatory")
_MscAtmIfVccLoopStorageType_Type = StorageType
_MscAtmIfVccLoopStorageType_Object = MibTableColumn
mscAtmIfVccLoopStorageType = _MscAtmIfVccLoopStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3, 1, 1, 4),
    _MscAtmIfVccLoopStorageType_Type()
)
mscAtmIfVccLoopStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLoopStorageType.setStatus("mandatory")
_MscAtmIfVccLoopIndex_Type = NonReplicated
_MscAtmIfVccLoopIndex_Object = MibTableColumn
mscAtmIfVccLoopIndex = _MscAtmIfVccLoopIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 3, 1, 1, 10),
    _MscAtmIfVccLoopIndex_Type()
)
mscAtmIfVccLoopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccLoopIndex.setStatus("mandatory")
_MscAtmIfVccNep_ObjectIdentity = ObjectIdentity
mscAtmIfVccNep = _MscAtmIfVccNep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5)
)
_MscAtmIfVccNepRowStatusTable_Object = MibTable
mscAtmIfVccNepRowStatusTable = _MscAtmIfVccNepRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccNepRowStatusTable.setStatus("mandatory")
_MscAtmIfVccNepRowStatusEntry_Object = MibTableRow
mscAtmIfVccNepRowStatusEntry = _MscAtmIfVccNepRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 1, 1)
)
mscAtmIfVccNepRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccNepIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccNepRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccNepRowStatus_Type = RowStatus
_MscAtmIfVccNepRowStatus_Object = MibTableColumn
mscAtmIfVccNepRowStatus = _MscAtmIfVccNepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 1, 1, 1),
    _MscAtmIfVccNepRowStatus_Type()
)
mscAtmIfVccNepRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccNepRowStatus.setStatus("mandatory")
_MscAtmIfVccNepComponentName_Type = DisplayString
_MscAtmIfVccNepComponentName_Object = MibTableColumn
mscAtmIfVccNepComponentName = _MscAtmIfVccNepComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 1, 1, 2),
    _MscAtmIfVccNepComponentName_Type()
)
mscAtmIfVccNepComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccNepComponentName.setStatus("mandatory")
_MscAtmIfVccNepStorageType_Type = StorageType
_MscAtmIfVccNepStorageType_Object = MibTableColumn
mscAtmIfVccNepStorageType = _MscAtmIfVccNepStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 1, 1, 4),
    _MscAtmIfVccNepStorageType_Type()
)
mscAtmIfVccNepStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccNepStorageType.setStatus("mandatory")
_MscAtmIfVccNepIndex_Type = NonReplicated
_MscAtmIfVccNepIndex_Object = MibTableColumn
mscAtmIfVccNepIndex = _MscAtmIfVccNepIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 1, 1, 10),
    _MscAtmIfVccNepIndex_Type()
)
mscAtmIfVccNepIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccNepIndex.setStatus("mandatory")
_MscAtmIfVccNepProvTable_Object = MibTable
mscAtmIfVccNepProvTable = _MscAtmIfVccNepProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccNepProvTable.setStatus("mandatory")
_MscAtmIfVccNepProvEntry_Object = MibTableRow
mscAtmIfVccNepProvEntry = _MscAtmIfVccNepProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 100, 1)
)
mscAtmIfVccNepProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccNepIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccNepProvEntry.setStatus("mandatory")
_MscAtmIfVccNepApplicationName_Type = Link
_MscAtmIfVccNepApplicationName_Object = MibTableColumn
mscAtmIfVccNepApplicationName = _MscAtmIfVccNepApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 5, 100, 1, 10),
    _MscAtmIfVccNepApplicationName_Type()
)
mscAtmIfVccNepApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccNepApplicationName.setStatus("mandatory")
_MscAtmIfVccTest_ObjectIdentity = ObjectIdentity
mscAtmIfVccTest = _MscAtmIfVccTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6)
)
_MscAtmIfVccTestRowStatusTable_Object = MibTable
mscAtmIfVccTestRowStatusTable = _MscAtmIfVccTestRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestRowStatusTable.setStatus("mandatory")
_MscAtmIfVccTestRowStatusEntry_Object = MibTableRow
mscAtmIfVccTestRowStatusEntry = _MscAtmIfVccTestRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 1, 1)
)
mscAtmIfVccTestRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccTestRowStatus_Type = RowStatus
_MscAtmIfVccTestRowStatus_Object = MibTableColumn
mscAtmIfVccTestRowStatus = _MscAtmIfVccTestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 1, 1, 1),
    _MscAtmIfVccTestRowStatus_Type()
)
mscAtmIfVccTestRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestRowStatus.setStatus("mandatory")
_MscAtmIfVccTestComponentName_Type = DisplayString
_MscAtmIfVccTestComponentName_Object = MibTableColumn
mscAtmIfVccTestComponentName = _MscAtmIfVccTestComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 1, 1, 2),
    _MscAtmIfVccTestComponentName_Type()
)
mscAtmIfVccTestComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestComponentName.setStatus("mandatory")
_MscAtmIfVccTestStorageType_Type = StorageType
_MscAtmIfVccTestStorageType_Object = MibTableColumn
mscAtmIfVccTestStorageType = _MscAtmIfVccTestStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 1, 1, 4),
    _MscAtmIfVccTestStorageType_Type()
)
mscAtmIfVccTestStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestStorageType.setStatus("mandatory")
_MscAtmIfVccTestIndex_Type = NonReplicated
_MscAtmIfVccTestIndex_Object = MibTableColumn
mscAtmIfVccTestIndex = _MscAtmIfVccTestIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 1, 1, 10),
    _MscAtmIfVccTestIndex_Type()
)
mscAtmIfVccTestIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTestIndex.setStatus("mandatory")
_MscAtmIfVccTestStateTable_Object = MibTable
mscAtmIfVccTestStateTable = _MscAtmIfVccTestStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestStateTable.setStatus("mandatory")
_MscAtmIfVccTestStateEntry_Object = MibTableRow
mscAtmIfVccTestStateEntry = _MscAtmIfVccTestStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 100, 1)
)
mscAtmIfVccTestStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestStateEntry.setStatus("mandatory")


class _MscAtmIfVccTestAdminState_Type(Integer32):
    """Custom type mscAtmIfVccTestAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfVccTestAdminState_Type.__name__ = "Integer32"
_MscAtmIfVccTestAdminState_Object = MibTableColumn
mscAtmIfVccTestAdminState = _MscAtmIfVccTestAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 100, 1, 1),
    _MscAtmIfVccTestAdminState_Type()
)
mscAtmIfVccTestAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestAdminState.setStatus("mandatory")


class _MscAtmIfVccTestOperationalState_Type(Integer32):
    """Custom type mscAtmIfVccTestOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVccTestOperationalState_Type.__name__ = "Integer32"
_MscAtmIfVccTestOperationalState_Object = MibTableColumn
mscAtmIfVccTestOperationalState = _MscAtmIfVccTestOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 100, 1, 2),
    _MscAtmIfVccTestOperationalState_Type()
)
mscAtmIfVccTestOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestOperationalState.setStatus("mandatory")


class _MscAtmIfVccTestUsageState_Type(Integer32):
    """Custom type mscAtmIfVccTestUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfVccTestUsageState_Type.__name__ = "Integer32"
_MscAtmIfVccTestUsageState_Object = MibTableColumn
mscAtmIfVccTestUsageState = _MscAtmIfVccTestUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 100, 1, 3),
    _MscAtmIfVccTestUsageState_Type()
)
mscAtmIfVccTestUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestUsageState.setStatus("mandatory")
_MscAtmIfVccTestSetupTable_Object = MibTable
mscAtmIfVccTestSetupTable = _MscAtmIfVccTestSetupTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestSetupTable.setStatus("mandatory")
_MscAtmIfVccTestSetupEntry_Object = MibTableRow
mscAtmIfVccTestSetupEntry = _MscAtmIfVccTestSetupEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1)
)
mscAtmIfVccTestSetupEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestSetupEntry.setStatus("mandatory")


class _MscAtmIfVccTestFrmTypes_Type(OctetString):
    """Custom type mscAtmIfVccTestFrmTypes based on OctetString"""
    defaultHexValue = "c0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccTestFrmTypes_Type.__name__ = "OctetString"
_MscAtmIfVccTestFrmTypes_Object = MibTableColumn
mscAtmIfVccTestFrmTypes = _MscAtmIfVccTestFrmTypes_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 10),
    _MscAtmIfVccTestFrmTypes_Type()
)
mscAtmIfVccTestFrmTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestFrmTypes.setStatus("mandatory")


class _MscAtmIfVccTestFrmSize_Type(Unsigned32):
    """Custom type mscAtmIfVccTestFrmSize based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 4096),
    )


_MscAtmIfVccTestFrmSize_Type.__name__ = "Unsigned32"
_MscAtmIfVccTestFrmSize_Object = MibTableColumn
mscAtmIfVccTestFrmSize = _MscAtmIfVccTestFrmSize_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 20),
    _MscAtmIfVccTestFrmSize_Type()
)
mscAtmIfVccTestFrmSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestFrmSize.setStatus("mandatory")


class _MscAtmIfVccTestFrmPatternType_Type(Integer32):
    """Custom type mscAtmIfVccTestFrmPatternType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ccitt32kBitPattern", 0),
          ("ccitt8MBitPattern", 1),
          ("customizedPattern", 2))
    )


_MscAtmIfVccTestFrmPatternType_Type.__name__ = "Integer32"
_MscAtmIfVccTestFrmPatternType_Object = MibTableColumn
mscAtmIfVccTestFrmPatternType = _MscAtmIfVccTestFrmPatternType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 30),
    _MscAtmIfVccTestFrmPatternType_Type()
)
mscAtmIfVccTestFrmPatternType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestFrmPatternType.setStatus("mandatory")


class _MscAtmIfVccTestCustomizedPattern_Type(Hex):
    """Custom type mscAtmIfVccTestCustomizedPattern based on Hex"""
    defaultValue = 1431655765

    subtypeSpec = Hex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccTestCustomizedPattern_Type.__name__ = "Hex"
_MscAtmIfVccTestCustomizedPattern_Object = MibTableColumn
mscAtmIfVccTestCustomizedPattern = _MscAtmIfVccTestCustomizedPattern_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 40),
    _MscAtmIfVccTestCustomizedPattern_Type()
)
mscAtmIfVccTestCustomizedPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestCustomizedPattern.setStatus("mandatory")


class _MscAtmIfVccTestDuration_Type(Unsigned32):
    """Custom type mscAtmIfVccTestDuration based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30240),
    )


_MscAtmIfVccTestDuration_Type.__name__ = "Unsigned32"
_MscAtmIfVccTestDuration_Object = MibTableColumn
mscAtmIfVccTestDuration = _MscAtmIfVccTestDuration_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 50),
    _MscAtmIfVccTestDuration_Type()
)
mscAtmIfVccTestDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestDuration.setStatus("mandatory")


class _MscAtmIfVccTestBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVccTestBandwidthElastic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVccTestBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVccTestBandwidthElastic_Object = MibTableColumn
mscAtmIfVccTestBandwidthElastic = _MscAtmIfVccTestBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 60),
    _MscAtmIfVccTestBandwidthElastic_Type()
)
mscAtmIfVccTestBandwidthElastic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestBandwidthElastic.setStatus("mandatory")


class _MscAtmIfVccTestOverrideHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVccTestOverrideHoldingPriority based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("noOverride", 6))
    )


_MscAtmIfVccTestOverrideHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVccTestOverrideHoldingPriority_Object = MibTableColumn
mscAtmIfVccTestOverrideHoldingPriority = _MscAtmIfVccTestOverrideHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 110, 1, 70),
    _MscAtmIfVccTestOverrideHoldingPriority_Type()
)
mscAtmIfVccTestOverrideHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVccTestOverrideHoldingPriority.setStatus("mandatory")
_MscAtmIfVccTestResultsTable_Object = MibTable
mscAtmIfVccTestResultsTable = _MscAtmIfVccTestResultsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestResultsTable.setStatus("mandatory")
_MscAtmIfVccTestResultsEntry_Object = MibTableRow
mscAtmIfVccTestResultsEntry = _MscAtmIfVccTestResultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1)
)
mscAtmIfVccTestResultsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTestResultsEntry.setStatus("mandatory")


class _MscAtmIfVccTestElapsedTime_Type(Unsigned32):
    """Custom type mscAtmIfVccTestElapsedTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_MscAtmIfVccTestElapsedTime_Type.__name__ = "Unsigned32"
_MscAtmIfVccTestElapsedTime_Object = MibTableColumn
mscAtmIfVccTestElapsedTime = _MscAtmIfVccTestElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 10),
    _MscAtmIfVccTestElapsedTime_Type()
)
mscAtmIfVccTestElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestElapsedTime.setStatus("mandatory")


class _MscAtmIfVccTestTimeRemaining_Type(Unsigned32):
    """Custom type mscAtmIfVccTestTimeRemaining based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_MscAtmIfVccTestTimeRemaining_Type.__name__ = "Unsigned32"
_MscAtmIfVccTestTimeRemaining_Object = MibTableColumn
mscAtmIfVccTestTimeRemaining = _MscAtmIfVccTestTimeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 20),
    _MscAtmIfVccTestTimeRemaining_Type()
)
mscAtmIfVccTestTimeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestTimeRemaining.setStatus("mandatory")


class _MscAtmIfVccTestCauseOfTermination_Type(Integer32):
    """Custom type mscAtmIfVccTestCauseOfTermination based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("neverStarted", 2),
          ("stoppedByOperator", 1),
          ("testRunning", 3),
          ("testTimeExpired", 0))
    )


_MscAtmIfVccTestCauseOfTermination_Type.__name__ = "Integer32"
_MscAtmIfVccTestCauseOfTermination_Object = MibTableColumn
mscAtmIfVccTestCauseOfTermination = _MscAtmIfVccTestCauseOfTermination_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 30),
    _MscAtmIfVccTestCauseOfTermination_Type()
)
mscAtmIfVccTestCauseOfTermination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestCauseOfTermination.setStatus("mandatory")
_MscAtmIfVccTestBytesTx_Type = PassportCounter64
_MscAtmIfVccTestBytesTx_Object = MibTableColumn
mscAtmIfVccTestBytesTx = _MscAtmIfVccTestBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 40),
    _MscAtmIfVccTestBytesTx_Type()
)
mscAtmIfVccTestBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestBytesTx.setStatus("mandatory")
_MscAtmIfVccTestBytesRx_Type = PassportCounter64
_MscAtmIfVccTestBytesRx_Object = MibTableColumn
mscAtmIfVccTestBytesRx = _MscAtmIfVccTestBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 50),
    _MscAtmIfVccTestBytesRx_Type()
)
mscAtmIfVccTestBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestBytesRx.setStatus("mandatory")
_MscAtmIfVccTestLoadingFrmTx_Type = PassportCounter64
_MscAtmIfVccTestLoadingFrmTx_Object = MibTableColumn
mscAtmIfVccTestLoadingFrmTx = _MscAtmIfVccTestLoadingFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 60),
    _MscAtmIfVccTestLoadingFrmTx_Type()
)
mscAtmIfVccTestLoadingFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestLoadingFrmTx.setStatus("mandatory")
_MscAtmIfVccTestLoadingFrmRx_Type = PassportCounter64
_MscAtmIfVccTestLoadingFrmRx_Object = MibTableColumn
mscAtmIfVccTestLoadingFrmRx = _MscAtmIfVccTestLoadingFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 70),
    _MscAtmIfVccTestLoadingFrmRx_Type()
)
mscAtmIfVccTestLoadingFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestLoadingFrmRx.setStatus("mandatory")
_MscAtmIfVccTestLoadingFrmLost_Type = PassportCounter64
_MscAtmIfVccTestLoadingFrmLost_Object = MibTableColumn
mscAtmIfVccTestLoadingFrmLost = _MscAtmIfVccTestLoadingFrmLost_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 80),
    _MscAtmIfVccTestLoadingFrmLost_Type()
)
mscAtmIfVccTestLoadingFrmLost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestLoadingFrmLost.setStatus("mandatory")
_MscAtmIfVccTestVerificationFrmTx_Type = PassportCounter64
_MscAtmIfVccTestVerificationFrmTx_Object = MibTableColumn
mscAtmIfVccTestVerificationFrmTx = _MscAtmIfVccTestVerificationFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 90),
    _MscAtmIfVccTestVerificationFrmTx_Type()
)
mscAtmIfVccTestVerificationFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestVerificationFrmTx.setStatus("mandatory")
_MscAtmIfVccTestVerificationFrmRx_Type = PassportCounter64
_MscAtmIfVccTestVerificationFrmRx_Object = MibTableColumn
mscAtmIfVccTestVerificationFrmRx = _MscAtmIfVccTestVerificationFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 100),
    _MscAtmIfVccTestVerificationFrmRx_Type()
)
mscAtmIfVccTestVerificationFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestVerificationFrmRx.setStatus("mandatory")
_MscAtmIfVccTestVerificationFrmBad_Type = PassportCounter64
_MscAtmIfVccTestVerificationFrmBad_Object = MibTableColumn
mscAtmIfVccTestVerificationFrmBad = _MscAtmIfVccTestVerificationFrmBad_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 110),
    _MscAtmIfVccTestVerificationFrmBad_Type()
)
mscAtmIfVccTestVerificationFrmBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestVerificationFrmBad.setStatus("mandatory")
_MscAtmIfVccTestUnrecognizableFrmRx_Type = PassportCounter64
_MscAtmIfVccTestUnrecognizableFrmRx_Object = MibTableColumn
mscAtmIfVccTestUnrecognizableFrmRx = _MscAtmIfVccTestUnrecognizableFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 6, 120, 1, 120),
    _MscAtmIfVccTestUnrecognizableFrmRx_Type()
)
mscAtmIfVccTestUnrecognizableFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTestUnrecognizableFrmRx.setStatus("mandatory")
_MscAtmIfVccTm_ObjectIdentity = ObjectIdentity
mscAtmIfVccTm = _MscAtmIfVccTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7)
)
_MscAtmIfVccTmRowStatusTable_Object = MibTable
mscAtmIfVccTmRowStatusTable = _MscAtmIfVccTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVccTmRowStatusEntry_Object = MibTableRow
mscAtmIfVccTmRowStatusEntry = _MscAtmIfVccTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 1, 1)
)
mscAtmIfVccTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccTmRowStatus_Type = RowStatus
_MscAtmIfVccTmRowStatus_Object = MibTableColumn
mscAtmIfVccTmRowStatus = _MscAtmIfVccTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 1, 1, 1),
    _MscAtmIfVccTmRowStatus_Type()
)
mscAtmIfVccTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRowStatus.setStatus("mandatory")
_MscAtmIfVccTmComponentName_Type = DisplayString
_MscAtmIfVccTmComponentName_Object = MibTableColumn
mscAtmIfVccTmComponentName = _MscAtmIfVccTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 1, 1, 2),
    _MscAtmIfVccTmComponentName_Type()
)
mscAtmIfVccTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmComponentName.setStatus("mandatory")
_MscAtmIfVccTmStorageType_Type = StorageType
_MscAtmIfVccTmStorageType_Object = MibTableColumn
mscAtmIfVccTmStorageType = _MscAtmIfVccTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 1, 1, 4),
    _MscAtmIfVccTmStorageType_Type()
)
mscAtmIfVccTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmStorageType.setStatus("mandatory")
_MscAtmIfVccTmIndex_Type = NonReplicated
_MscAtmIfVccTmIndex_Object = MibTableColumn
mscAtmIfVccTmIndex = _MscAtmIfVccTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 1, 1, 10),
    _MscAtmIfVccTmIndex_Type()
)
mscAtmIfVccTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmIndex.setStatus("mandatory")
_MscAtmIfVccTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVccTmAbr = _MscAtmIfVccTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2)
)
_MscAtmIfVccTmAbrRowStatusTable_Object = MibTable
mscAtmIfVccTmAbrRowStatusTable = _MscAtmIfVccTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVccTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVccTmAbrRowStatusEntry = _MscAtmIfVccTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 1, 1)
)
mscAtmIfVccTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccTmAbrRowStatus_Type = RowStatus
_MscAtmIfVccTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVccTmAbrRowStatus = _MscAtmIfVccTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 1, 1, 1),
    _MscAtmIfVccTmAbrRowStatus_Type()
)
mscAtmIfVccTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVccTmAbrComponentName_Type = DisplayString
_MscAtmIfVccTmAbrComponentName_Object = MibTableColumn
mscAtmIfVccTmAbrComponentName = _MscAtmIfVccTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 1, 1, 2),
    _MscAtmIfVccTmAbrComponentName_Type()
)
mscAtmIfVccTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVccTmAbrStorageType_Type = StorageType
_MscAtmIfVccTmAbrStorageType_Object = MibTableColumn
mscAtmIfVccTmAbrStorageType = _MscAtmIfVccTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 1, 1, 4),
    _MscAtmIfVccTmAbrStorageType_Type()
)
mscAtmIfVccTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVccTmAbrIndex_Type = NonReplicated
_MscAtmIfVccTmAbrIndex_Object = MibTableColumn
mscAtmIfVccTmAbrIndex = _MscAtmIfVccTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 1, 1, 10),
    _MscAtmIfVccTmAbrIndex_Type()
)
mscAtmIfVccTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrIndex.setStatus("mandatory")
_MscAtmIfVccTmAbrOperTable_Object = MibTable
mscAtmIfVccTmAbrOperTable = _MscAtmIfVccTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrOperTable.setStatus("mandatory")
_MscAtmIfVccTmAbrOperEntry_Object = MibTableRow
mscAtmIfVccTmAbrOperEntry = _MscAtmIfVccTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1)
)
mscAtmIfVccTmAbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrOperEntry.setStatus("mandatory")


class _MscAtmIfVccTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVccTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVccTmAbrInitialCellRate = _MscAtmIfVccTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 10),
    _MscAtmIfVccTmAbrInitialCellRate_Type()
)
mscAtmIfVccTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVccTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVccTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVccTmAbrTransientBufferExposure = _MscAtmIfVccTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 11),
    _MscAtmIfVccTmAbrTransientBufferExposure_Type()
)
mscAtmIfVccTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVccTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVccTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVccTmAbrFixedRoundTripTime = _MscAtmIfVccTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 12),
    _MscAtmIfVccTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVccTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVccTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVccTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVccTmAbrRateDecreaseFactor = _MscAtmIfVccTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 13),
    _MscAtmIfVccTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVccTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVccTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVccTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVccTmAbrRateIncreaseFactor = _MscAtmIfVccTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 14),
    _MscAtmIfVccTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVccTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVccTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_MscAtmIfVccTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVccTmAbrMaxCellPerRmCell = _MscAtmIfVccTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 15),
    _MscAtmIfVccTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVccTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVccTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_MscAtmIfVccTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
mscAtmIfVccTmAbrMaxTimeBetweenRmCell = _MscAtmIfVccTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 16),
    _MscAtmIfVccTmAbrMaxTimeBetweenRmCell_Type()
)
mscAtmIfVccTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _MscAtmIfVccTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_MscAtmIfVccTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVccTmAbrCutoffDecreaseFactor = _MscAtmIfVccTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 17),
    _MscAtmIfVccTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVccTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVccTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVccTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVccTmAbrAcrDecreaseTimeFactor = _MscAtmIfVccTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 18),
    _MscAtmIfVccTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVccTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVccTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_MscAtmIfVccTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrForwardRmCellLimit_Object = MibTableColumn
mscAtmIfVccTmAbrForwardRmCellLimit = _MscAtmIfVccTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 19),
    _MscAtmIfVccTmAbrForwardRmCellLimit_Type()
)
mscAtmIfVccTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrForwardRmCellLimit.setStatus("mandatory")


class _MscAtmIfVccTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVccTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_MscAtmIfVccTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVccTmAbrTxRateChangeInfo_Object = MibTableColumn
mscAtmIfVccTmAbrTxRateChangeInfo = _MscAtmIfVccTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 20),
    _MscAtmIfVccTmAbrTxRateChangeInfo_Type()
)
mscAtmIfVccTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrTxRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVccTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVccTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_MscAtmIfVccTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVccTmAbrAcrRateChangeInfo_Object = MibTableColumn
mscAtmIfVccTmAbrAcrRateChangeInfo = _MscAtmIfVccTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 21),
    _MscAtmIfVccTmAbrAcrRateChangeInfo_Type()
)
mscAtmIfVccTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVccTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVccTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfVccTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmAbrTxFwdRmCells_Object = MibTableColumn
mscAtmIfVccTmAbrTxFwdRmCells = _MscAtmIfVccTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 22),
    _MscAtmIfVccTmAbrTxFwdRmCells_Type()
)
mscAtmIfVccTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrTxFwdRmCells.setStatus("mandatory")


class _MscAtmIfVccTmAbrRxEfci_Type(Integer32):
    """Custom type mscAtmIfVccTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVccTmAbrRxEfci_Type.__name__ = "Integer32"
_MscAtmIfVccTmAbrRxEfci_Object = MibTableColumn
mscAtmIfVccTmAbrRxEfci = _MscAtmIfVccTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 2, 110, 1, 23),
    _MscAtmIfVccTmAbrRxEfci_Type()
)
mscAtmIfVccTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrRxEfci.setStatus("mandatory")
_MscAtmIfVccTmOperTable_Object = MibTable
mscAtmIfVccTmOperTable = _MscAtmIfVccTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmOperTable.setStatus("mandatory")
_MscAtmIfVccTmOperEntry_Object = MibTableRow
mscAtmIfVccTmOperEntry = _MscAtmIfVccTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1)
)
mscAtmIfVccTmOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmOperEntry.setStatus("mandatory")


class _MscAtmIfVccTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVccTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVccTmTxTrafficDescType = _MscAtmIfVccTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 10),
    _MscAtmIfVccTmTxTrafficDescType_Type()
)
mscAtmIfVccTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVccTmTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVccTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVccTmTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccTmTxQosClass_Object = MibTableColumn
mscAtmIfVccTmTxQosClass = _MscAtmIfVccTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 31),
    _MscAtmIfVccTmTxQosClass_Type()
)
mscAtmIfVccTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQosClass.setStatus("mandatory")


class _MscAtmIfVccTmTxQueueLength_Type(Unsigned32):
    """Custom type mscAtmIfVccTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVccTmTxQueueLength_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmTxQueueLength_Object = MibTableColumn
mscAtmIfVccTmTxQueueLength = _MscAtmIfVccTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 32),
    _MscAtmIfVccTmTxQueueLength_Type()
)
mscAtmIfVccTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQueueLength.setStatus("mandatory")


class _MscAtmIfVccTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type mscAtmIfVccTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVccTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVccTmTxQueueCongestionState = _MscAtmIfVccTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 33),
    _MscAtmIfVccTmTxQueueCongestionState_Type()
)
mscAtmIfVccTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQueueCongestionState.setStatus("mandatory")


class _MscAtmIfVccTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVccTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVccTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVccTmHoldingPriority_Object = MibTableColumn
mscAtmIfVccTmHoldingPriority = _MscAtmIfVccTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 35),
    _MscAtmIfVccTmHoldingPriority_Type()
)
mscAtmIfVccTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVccTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVccTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVccTmRxTrafficDescType = _MscAtmIfVccTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 40),
    _MscAtmIfVccTmRxTrafficDescType_Type()
)
mscAtmIfVccTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVccTmRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVccTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14),
          ("sameAsFwd", 15))
    )


_MscAtmIfVccTmRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccTmRxQosClass_Object = MibTableColumn
mscAtmIfVccTmRxQosClass = _MscAtmIfVccTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 61),
    _MscAtmIfVccTmRxQosClass_Type()
)
mscAtmIfVccTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxQosClass.setStatus("mandatory")


class _MscAtmIfVccTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVccTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVccTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVccTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVccTmAtmServiceCategory = _MscAtmIfVccTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 62),
    _MscAtmIfVccTmAtmServiceCategory_Type()
)
mscAtmIfVccTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVccTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVccTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_MscAtmIfVccTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVccTmTrafficShaping_Object = MibTableColumn
mscAtmIfVccTmTrafficShaping = _MscAtmIfVccTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 70),
    _MscAtmIfVccTmTrafficShaping_Type()
)
mscAtmIfVccTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVccTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVccTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVccTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVccTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVccTmBearerClassBbc = _MscAtmIfVccTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 71),
    _MscAtmIfVccTmBearerClassBbc_Type()
)
mscAtmIfVccTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVccTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVccTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVccTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVccTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVccTmTransferCapabilityBbc = _MscAtmIfVccTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 72),
    _MscAtmIfVccTmTransferCapabilityBbc_Type()
)
mscAtmIfVccTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVccTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVccTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVccTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVccTmClippingBbc_Object = MibTableColumn
mscAtmIfVccTmClippingBbc = _MscAtmIfVccTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 74),
    _MscAtmIfVccTmClippingBbc_Type()
)
mscAtmIfVccTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVccTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVccTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVccTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVccTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVccTmUnshapedTransmitQueueing = _MscAtmIfVccTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 75),
    _MscAtmIfVccTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVccTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVccTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVccTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVccTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVccTmBestEffort_Object = MibTableColumn
mscAtmIfVccTmBestEffort = _MscAtmIfVccTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 76),
    _MscAtmIfVccTmBestEffort_Type()
)
mscAtmIfVccTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmBestEffort.setStatus("mandatory")


class _MscAtmIfVccTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVccTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfVccTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVccTmForceTagging_Object = MibTableColumn
mscAtmIfVccTmForceTagging = _MscAtmIfVccTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 78),
    _MscAtmIfVccTmForceTagging_Type()
)
mscAtmIfVccTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmForceTagging.setStatus("mandatory")


class _MscAtmIfVccTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVccTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_MscAtmIfVccTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmWeight_Object = MibTableColumn
mscAtmIfVccTmWeight = _MscAtmIfVccTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 79),
    _MscAtmIfVccTmWeight_Type()
)
mscAtmIfVccTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmWeight.setStatus("mandatory")


class _MscAtmIfVccTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVccTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_MscAtmIfVccTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVccTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVccTmUsageParameterControl = _MscAtmIfVccTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 80),
    _MscAtmIfVccTmUsageParameterControl_Type()
)
mscAtmIfVccTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVccTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVccTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVccTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVccTmTxPacketWiseDiscard = _MscAtmIfVccTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 85),
    _MscAtmIfVccTmTxPacketWiseDiscard_Type()
)
mscAtmIfVccTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVccTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVccTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVccTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVccTmRxPacketWiseDiscard = _MscAtmIfVccTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 86),
    _MscAtmIfVccTmRxPacketWiseDiscard_Type()
)
mscAtmIfVccTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVccTmBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVccTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVccTmBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVccTmBandwidthElastic_Object = MibTableColumn
mscAtmIfVccTmBandwidthElastic = _MscAtmIfVccTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 90),
    _MscAtmIfVccTmBandwidthElastic_Type()
)
mscAtmIfVccTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmBandwidthElastic.setStatus("mandatory")


class _MscAtmIfVccTmBandwidthReduction_Type(Unsigned32):
    """Custom type mscAtmIfVccTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccTmBandwidthReduction_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmBandwidthReduction_Object = MibTableColumn
mscAtmIfVccTmBandwidthReduction = _MscAtmIfVccTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 100),
    _MscAtmIfVccTmBandwidthReduction_Type()
)
mscAtmIfVccTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmBandwidthReduction.setStatus("mandatory")


class _MscAtmIfVccTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVccTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVccTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVccTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVccTmAbrConnectionType = _MscAtmIfVccTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 100, 1, 110),
    _MscAtmIfVccTmAbrConnectionType_Type()
)
mscAtmIfVccTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVccTmTxTdpTable_Object = MibTable
mscAtmIfVccTmTxTdpTable = _MscAtmIfVccTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 451)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVccTmTxTdpEntry_Object = MibTableRow
mscAtmIfVccTmTxTdpEntry = _MscAtmIfVccTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 451, 1)
)
mscAtmIfVccTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVccTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVccTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVccTmTxTdpIndex = _MscAtmIfVccTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 451, 1, 1),
    _MscAtmIfVccTmTxTdpIndex_Type()
)
mscAtmIfVccTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVccTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmTxTdpValue_Object = MibTableColumn
mscAtmIfVccTmTxTdpValue = _MscAtmIfVccTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 451, 1, 2),
    _MscAtmIfVccTmTxTdpValue_Type()
)
mscAtmIfVccTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVccTmTxQThreshTable_Object = MibTable
mscAtmIfVccTmTxQThreshTable = _MscAtmIfVccTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 452)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQThreshTable.setStatus("mandatory")
_MscAtmIfVccTmTxQThreshEntry_Object = MibTableRow
mscAtmIfVccTmTxQThreshEntry = _MscAtmIfVccTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 452, 1)
)
mscAtmIfVccTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQThreshEntry.setStatus("mandatory")


class _MscAtmIfVccTmTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVccTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVccTmTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTmTxQThreshIndex_Object = MibTableColumn
mscAtmIfVccTmTxQThreshIndex = _MscAtmIfVccTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 452, 1, 1),
    _MscAtmIfVccTmTxQThreshIndex_Type()
)
mscAtmIfVccTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQThreshIndex.setStatus("mandatory")


class _MscAtmIfVccTmTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512000),
    )


_MscAtmIfVccTmTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmTxQThreshValue_Object = MibTableColumn
mscAtmIfVccTmTxQThreshValue = _MscAtmIfVccTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 452, 1, 2),
    _MscAtmIfVccTmTxQThreshValue_Type()
)
mscAtmIfVccTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTxQThreshValue.setStatus("mandatory")
_MscAtmIfVccTmRxTdpTable_Object = MibTable
mscAtmIfVccTmRxTdpTable = _MscAtmIfVccTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 453)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVccTmRxTdpEntry_Object = MibTableRow
mscAtmIfVccTmRxTdpEntry = _MscAtmIfVccTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 453, 1)
)
mscAtmIfVccTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVccTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVccTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVccTmRxTdpIndex = _MscAtmIfVccTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 453, 1, 1),
    _MscAtmIfVccTmRxTdpIndex_Type()
)
mscAtmIfVccTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVccTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmRxTdpValue_Object = MibTableColumn
mscAtmIfVccTmRxTdpValue = _MscAtmIfVccTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 453, 1, 2),
    _MscAtmIfVccTmRxTdpValue_Type()
)
mscAtmIfVccTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVccTmTqpTable_Object = MibTable
mscAtmIfVccTmTqpTable = _MscAtmIfVccTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 454)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmTqpTable.setStatus("mandatory")
_MscAtmIfVccTmTqpEntry_Object = MibTableRow
mscAtmIfVccTmTqpEntry = _MscAtmIfVccTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 454, 1)
)
mscAtmIfVccTmTqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmTqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmTqpEntry.setStatus("mandatory")


class _MscAtmIfVccTmTqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccTmTqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTmTqpIndex_Object = MibTableColumn
mscAtmIfVccTmTqpIndex = _MscAtmIfVccTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 454, 1, 1),
    _MscAtmIfVccTmTqpIndex_Type()
)
mscAtmIfVccTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTqpIndex.setStatus("mandatory")


class _MscAtmIfVccTmTqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccTmTqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmTqpValue_Object = MibTableColumn
mscAtmIfVccTmTqpValue = _MscAtmIfVccTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 454, 1, 2),
    _MscAtmIfVccTmTqpValue_Type()
)
mscAtmIfVccTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmTqpValue.setStatus("mandatory")
_MscAtmIfVccTmRqpTable_Object = MibTable
mscAtmIfVccTmRqpTable = _MscAtmIfVccTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 455)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmRqpTable.setStatus("mandatory")
_MscAtmIfVccTmRqpEntry_Object = MibTableRow
mscAtmIfVccTmRqpEntry = _MscAtmIfVccTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 455, 1)
)
mscAtmIfVccTmRqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTmRqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTmRqpEntry.setStatus("mandatory")


class _MscAtmIfVccTmRqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccTmRqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTmRqpIndex_Object = MibTableColumn
mscAtmIfVccTmRqpIndex = _MscAtmIfVccTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 455, 1, 1),
    _MscAtmIfVccTmRqpIndex_Type()
)
mscAtmIfVccTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRqpIndex.setStatus("mandatory")


class _MscAtmIfVccTmRqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccTmRqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTmRqpValue_Object = MibTableColumn
mscAtmIfVccTmRqpValue = _MscAtmIfVccTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 7, 455, 1, 2),
    _MscAtmIfVccTmRqpValue_Type()
)
mscAtmIfVccTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTmRqpValue.setStatus("mandatory")
_MscAtmIfVccPm_ObjectIdentity = ObjectIdentity
mscAtmIfVccPm = _MscAtmIfVccPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14)
)
_MscAtmIfVccPmRowStatusTable_Object = MibTable
mscAtmIfVccPmRowStatusTable = _MscAtmIfVccPmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmRowStatusTable.setStatus("mandatory")
_MscAtmIfVccPmRowStatusEntry_Object = MibTableRow
mscAtmIfVccPmRowStatusEntry = _MscAtmIfVccPmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 1, 1)
)
mscAtmIfVccPmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVccPmRowStatus_Type = RowStatus
_MscAtmIfVccPmRowStatus_Object = MibTableColumn
mscAtmIfVccPmRowStatus = _MscAtmIfVccPmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 1, 1, 1),
    _MscAtmIfVccPmRowStatus_Type()
)
mscAtmIfVccPmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmRowStatus.setStatus("mandatory")
_MscAtmIfVccPmComponentName_Type = DisplayString
_MscAtmIfVccPmComponentName_Object = MibTableColumn
mscAtmIfVccPmComponentName = _MscAtmIfVccPmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 1, 1, 2),
    _MscAtmIfVccPmComponentName_Type()
)
mscAtmIfVccPmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmComponentName.setStatus("mandatory")
_MscAtmIfVccPmStorageType_Type = StorageType
_MscAtmIfVccPmStorageType_Object = MibTableColumn
mscAtmIfVccPmStorageType = _MscAtmIfVccPmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 1, 1, 4),
    _MscAtmIfVccPmStorageType_Type()
)
mscAtmIfVccPmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmStorageType.setStatus("mandatory")


class _MscAtmIfVccPmIndex_Type(Integer32):
    """Custom type mscAtmIfVccPmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("linkSide", 0),
          ("switchSide", 1))
    )


_MscAtmIfVccPmIndex_Type.__name__ = "Integer32"
_MscAtmIfVccPmIndex_Object = MibTableColumn
mscAtmIfVccPmIndex = _MscAtmIfVccPmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 1, 1, 10),
    _MscAtmIfVccPmIndex_Type()
)
mscAtmIfVccPmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccPmIndex.setStatus("mandatory")
_MscAtmIfVccPmStatusTable_Object = MibTable
mscAtmIfVccPmStatusTable = _MscAtmIfVccPmStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 10)
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmStatusTable.setStatus("mandatory")
_MscAtmIfVccPmStatusEntry_Object = MibTableRow
mscAtmIfVccPmStatusEntry = _MscAtmIfVccPmStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 10, 1)
)
mscAtmIfVccPmStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmStatusEntry.setStatus("mandatory")


class _MscAtmIfVccPmClrMeasurementStatus_Type(Integer32):
    """Custom type mscAtmIfVccPmClrMeasurementStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("activating", 1),
          ("activationFailed", 3),
          ("active", 2),
          ("inactive", 0))
    )


_MscAtmIfVccPmClrMeasurementStatus_Type.__name__ = "Integer32"
_MscAtmIfVccPmClrMeasurementStatus_Object = MibTableColumn
mscAtmIfVccPmClrMeasurementStatus = _MscAtmIfVccPmClrMeasurementStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 10, 1, 1),
    _MscAtmIfVccPmClrMeasurementStatus_Type()
)
mscAtmIfVccPmClrMeasurementStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmClrMeasurementStatus.setStatus("mandatory")


class _MscAtmIfVccPmArMeasurementStatus_Type(Integer32):
    """Custom type mscAtmIfVccPmArMeasurementStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("activating", 1),
          ("activationFailed", 3),
          ("active", 2),
          ("inactive", 0))
    )


_MscAtmIfVccPmArMeasurementStatus_Type.__name__ = "Integer32"
_MscAtmIfVccPmArMeasurementStatus_Object = MibTableColumn
mscAtmIfVccPmArMeasurementStatus = _MscAtmIfVccPmArMeasurementStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 10, 1, 2),
    _MscAtmIfVccPmArMeasurementStatus_Type()
)
mscAtmIfVccPmArMeasurementStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmArMeasurementStatus.setStatus("mandatory")


class _MscAtmIfVccPmFailureCause_Type(Integer32):
    """Custom type mscAtmIfVccPmFailureCause based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("activationCollision", 5),
          ("hardwareResourcesUnavailable", 3),
          ("nextHopCardUnsupported", 8),
          ("noError", 0),
          ("pcrUnsupported", 7),
          ("remoteEndNoResponse", 4),
          ("remoteEndRejectedActivation", 6),
          ("softwareResourcesUnavailable", 2),
          ("unknownCause", 1))
    )


_MscAtmIfVccPmFailureCause_Type.__name__ = "Integer32"
_MscAtmIfVccPmFailureCause_Object = MibTableColumn
mscAtmIfVccPmFailureCause = _MscAtmIfVccPmFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 10, 1, 3),
    _MscAtmIfVccPmFailureCause_Type()
)
mscAtmIfVccPmFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFailureCause.setStatus("mandatory")
_MscAtmIfVccPmFwdClrTable_Object = MibTable
mscAtmIfVccPmFwdClrTable = _MscAtmIfVccPmFwdClrTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11)
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdClrTable.setStatus("mandatory")
_MscAtmIfVccPmFwdClrEntry_Object = MibTableRow
mscAtmIfVccPmFwdClrEntry = _MscAtmIfVccPmFwdClrEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1)
)
mscAtmIfVccPmFwdClrEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdClrEntry.setStatus("mandatory")
_MscAtmIfVccPmFwdLastSampleUserCellsRx0_Type = PassportCounter64
_MscAtmIfVccPmFwdLastSampleUserCellsRx0_Object = MibTableColumn
mscAtmIfVccPmFwdLastSampleUserCellsRx0 = _MscAtmIfVccPmFwdLastSampleUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 1),
    _MscAtmIfVccPmFwdLastSampleUserCellsRx0_Type()
)
mscAtmIfVccPmFwdLastSampleUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdLastSampleUserCellsRx0.setStatus("mandatory")
_MscAtmIfVccPmFwdLastSampleUserCellsTx0_Type = PassportCounter64
_MscAtmIfVccPmFwdLastSampleUserCellsTx0_Object = MibTableColumn
mscAtmIfVccPmFwdLastSampleUserCellsTx0 = _MscAtmIfVccPmFwdLastSampleUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 2),
    _MscAtmIfVccPmFwdLastSampleUserCellsTx0_Type()
)
mscAtmIfVccPmFwdLastSampleUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdLastSampleUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVccPmFwdLastSampleClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdLastSampleClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdLastSampleClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdLastSampleClr0_Object = MibTableColumn
mscAtmIfVccPmFwdLastSampleClr0 = _MscAtmIfVccPmFwdLastSampleClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 3),
    _MscAtmIfVccPmFwdLastSampleClr0_Type()
)
mscAtmIfVccPmFwdLastSampleClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdLastSampleClr0.setStatus("mandatory")
_MscAtmIfVccPmFwdLastSampleUserCellsRx01_Type = PassportCounter64
_MscAtmIfVccPmFwdLastSampleUserCellsRx01_Object = MibTableColumn
mscAtmIfVccPmFwdLastSampleUserCellsRx01 = _MscAtmIfVccPmFwdLastSampleUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 4),
    _MscAtmIfVccPmFwdLastSampleUserCellsRx01_Type()
)
mscAtmIfVccPmFwdLastSampleUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdLastSampleUserCellsRx01.setStatus("mandatory")
_MscAtmIfVccPmFwdLastSampleUserCellsTx01_Type = PassportCounter64
_MscAtmIfVccPmFwdLastSampleUserCellsTx01_Object = MibTableColumn
mscAtmIfVccPmFwdLastSampleUserCellsTx01 = _MscAtmIfVccPmFwdLastSampleUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 5),
    _MscAtmIfVccPmFwdLastSampleUserCellsTx01_Type()
)
mscAtmIfVccPmFwdLastSampleUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdLastSampleUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVccPmFwdLastSampleClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdLastSampleClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdLastSampleClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdLastSampleClr01_Object = MibTableColumn
mscAtmIfVccPmFwdLastSampleClr01 = _MscAtmIfVccPmFwdLastSampleClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 6),
    _MscAtmIfVccPmFwdLastSampleClr01_Type()
)
mscAtmIfVccPmFwdLastSampleClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdLastSampleClr01.setStatus("mandatory")


class _MscAtmIfVccPmFwdTotalClrInterval_Type(Unsigned32):
    """Custom type mscAtmIfVccPmFwdTotalClrInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccPmFwdTotalClrInterval_Type.__name__ = "Unsigned32"
_MscAtmIfVccPmFwdTotalClrInterval_Object = MibTableColumn
mscAtmIfVccPmFwdTotalClrInterval = _MscAtmIfVccPmFwdTotalClrInterval_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 7),
    _MscAtmIfVccPmFwdTotalClrInterval_Type()
)
mscAtmIfVccPmFwdTotalClrInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdTotalClrInterval.setStatus("mandatory")
_MscAtmIfVccPmFwdTotalUserCellsRx0_Type = PassportCounter64
_MscAtmIfVccPmFwdTotalUserCellsRx0_Object = MibTableColumn
mscAtmIfVccPmFwdTotalUserCellsRx0 = _MscAtmIfVccPmFwdTotalUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 8),
    _MscAtmIfVccPmFwdTotalUserCellsRx0_Type()
)
mscAtmIfVccPmFwdTotalUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdTotalUserCellsRx0.setStatus("mandatory")
_MscAtmIfVccPmFwdTotalUserCellsTx0_Type = PassportCounter64
_MscAtmIfVccPmFwdTotalUserCellsTx0_Object = MibTableColumn
mscAtmIfVccPmFwdTotalUserCellsTx0 = _MscAtmIfVccPmFwdTotalUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 9),
    _MscAtmIfVccPmFwdTotalUserCellsTx0_Type()
)
mscAtmIfVccPmFwdTotalUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdTotalUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVccPmFwdAverageClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdAverageClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdAverageClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdAverageClr0_Object = MibTableColumn
mscAtmIfVccPmFwdAverageClr0 = _MscAtmIfVccPmFwdAverageClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 10),
    _MscAtmIfVccPmFwdAverageClr0_Type()
)
mscAtmIfVccPmFwdAverageClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdAverageClr0.setStatus("mandatory")


class _MscAtmIfVccPmFwdMaximumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdMaximumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdMaximumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdMaximumClr0_Object = MibTableColumn
mscAtmIfVccPmFwdMaximumClr0 = _MscAtmIfVccPmFwdMaximumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 11),
    _MscAtmIfVccPmFwdMaximumClr0_Type()
)
mscAtmIfVccPmFwdMaximumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdMaximumClr0.setStatus("mandatory")


class _MscAtmIfVccPmFwdMinimumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdMinimumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdMinimumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdMinimumClr0_Object = MibTableColumn
mscAtmIfVccPmFwdMinimumClr0 = _MscAtmIfVccPmFwdMinimumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 12),
    _MscAtmIfVccPmFwdMinimumClr0_Type()
)
mscAtmIfVccPmFwdMinimumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdMinimumClr0.setStatus("mandatory")
_MscAtmIfVccPmFwdTotalUserCellsRx01_Type = PassportCounter64
_MscAtmIfVccPmFwdTotalUserCellsRx01_Object = MibTableColumn
mscAtmIfVccPmFwdTotalUserCellsRx01 = _MscAtmIfVccPmFwdTotalUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 13),
    _MscAtmIfVccPmFwdTotalUserCellsRx01_Type()
)
mscAtmIfVccPmFwdTotalUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdTotalUserCellsRx01.setStatus("mandatory")
_MscAtmIfVccPmFwdTotalUserCellsTx01_Type = PassportCounter64
_MscAtmIfVccPmFwdTotalUserCellsTx01_Object = MibTableColumn
mscAtmIfVccPmFwdTotalUserCellsTx01 = _MscAtmIfVccPmFwdTotalUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 14),
    _MscAtmIfVccPmFwdTotalUserCellsTx01_Type()
)
mscAtmIfVccPmFwdTotalUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdTotalUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVccPmFwdAverageClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdAverageClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdAverageClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdAverageClr01_Object = MibTableColumn
mscAtmIfVccPmFwdAverageClr01 = _MscAtmIfVccPmFwdAverageClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 15),
    _MscAtmIfVccPmFwdAverageClr01_Type()
)
mscAtmIfVccPmFwdAverageClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdAverageClr01.setStatus("mandatory")


class _MscAtmIfVccPmFwdMaximumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdMaximumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdMaximumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdMaximumClr01_Object = MibTableColumn
mscAtmIfVccPmFwdMaximumClr01 = _MscAtmIfVccPmFwdMaximumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 16),
    _MscAtmIfVccPmFwdMaximumClr01_Type()
)
mscAtmIfVccPmFwdMaximumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdMaximumClr01.setStatus("mandatory")


class _MscAtmIfVccPmFwdMinimumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmFwdMinimumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmFwdMinimumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmFwdMinimumClr01_Object = MibTableColumn
mscAtmIfVccPmFwdMinimumClr01 = _MscAtmIfVccPmFwdMinimumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 17),
    _MscAtmIfVccPmFwdMinimumClr01_Type()
)
mscAtmIfVccPmFwdMinimumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdMinimumClr01.setStatus("mandatory")


class _MscAtmIfVccPmFwdPmCellDiscardCount_Type(Unsigned32):
    """Custom type mscAtmIfVccPmFwdPmCellDiscardCount based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccPmFwdPmCellDiscardCount_Type.__name__ = "Unsigned32"
_MscAtmIfVccPmFwdPmCellDiscardCount_Object = MibTableColumn
mscAtmIfVccPmFwdPmCellDiscardCount = _MscAtmIfVccPmFwdPmCellDiscardCount_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 11, 1, 18),
    _MscAtmIfVccPmFwdPmCellDiscardCount_Type()
)
mscAtmIfVccPmFwdPmCellDiscardCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmFwdPmCellDiscardCount.setStatus("mandatory")
_MscAtmIfVccPmBwdClrTable_Object = MibTable
mscAtmIfVccPmBwdClrTable = _MscAtmIfVccPmBwdClrTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12)
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdClrTable.setStatus("mandatory")
_MscAtmIfVccPmBwdClrEntry_Object = MibTableRow
mscAtmIfVccPmBwdClrEntry = _MscAtmIfVccPmBwdClrEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1)
)
mscAtmIfVccPmBwdClrEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdClrEntry.setStatus("mandatory")
_MscAtmIfVccPmBwdLastSampleUserCellsRx0_Type = PassportCounter64
_MscAtmIfVccPmBwdLastSampleUserCellsRx0_Object = MibTableColumn
mscAtmIfVccPmBwdLastSampleUserCellsRx0 = _MscAtmIfVccPmBwdLastSampleUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 1),
    _MscAtmIfVccPmBwdLastSampleUserCellsRx0_Type()
)
mscAtmIfVccPmBwdLastSampleUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdLastSampleUserCellsRx0.setStatus("mandatory")
_MscAtmIfVccPmBwdLastSampleUserCellsTx0_Type = PassportCounter64
_MscAtmIfVccPmBwdLastSampleUserCellsTx0_Object = MibTableColumn
mscAtmIfVccPmBwdLastSampleUserCellsTx0 = _MscAtmIfVccPmBwdLastSampleUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 2),
    _MscAtmIfVccPmBwdLastSampleUserCellsTx0_Type()
)
mscAtmIfVccPmBwdLastSampleUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdLastSampleUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVccPmBwdLastSampleClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdLastSampleClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdLastSampleClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdLastSampleClr0_Object = MibTableColumn
mscAtmIfVccPmBwdLastSampleClr0 = _MscAtmIfVccPmBwdLastSampleClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 3),
    _MscAtmIfVccPmBwdLastSampleClr0_Type()
)
mscAtmIfVccPmBwdLastSampleClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdLastSampleClr0.setStatus("mandatory")
_MscAtmIfVccPmBwdLastSampleUserCellsRx01_Type = PassportCounter64
_MscAtmIfVccPmBwdLastSampleUserCellsRx01_Object = MibTableColumn
mscAtmIfVccPmBwdLastSampleUserCellsRx01 = _MscAtmIfVccPmBwdLastSampleUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 4),
    _MscAtmIfVccPmBwdLastSampleUserCellsRx01_Type()
)
mscAtmIfVccPmBwdLastSampleUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdLastSampleUserCellsRx01.setStatus("mandatory")
_MscAtmIfVccPmBwdLastSampleUserCellsTx01_Type = PassportCounter64
_MscAtmIfVccPmBwdLastSampleUserCellsTx01_Object = MibTableColumn
mscAtmIfVccPmBwdLastSampleUserCellsTx01 = _MscAtmIfVccPmBwdLastSampleUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 5),
    _MscAtmIfVccPmBwdLastSampleUserCellsTx01_Type()
)
mscAtmIfVccPmBwdLastSampleUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdLastSampleUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVccPmBwdLastSampleClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdLastSampleClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdLastSampleClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdLastSampleClr01_Object = MibTableColumn
mscAtmIfVccPmBwdLastSampleClr01 = _MscAtmIfVccPmBwdLastSampleClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 6),
    _MscAtmIfVccPmBwdLastSampleClr01_Type()
)
mscAtmIfVccPmBwdLastSampleClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdLastSampleClr01.setStatus("mandatory")


class _MscAtmIfVccPmBwdTotalClrInterval_Type(Unsigned32):
    """Custom type mscAtmIfVccPmBwdTotalClrInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccPmBwdTotalClrInterval_Type.__name__ = "Unsigned32"
_MscAtmIfVccPmBwdTotalClrInterval_Object = MibTableColumn
mscAtmIfVccPmBwdTotalClrInterval = _MscAtmIfVccPmBwdTotalClrInterval_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 7),
    _MscAtmIfVccPmBwdTotalClrInterval_Type()
)
mscAtmIfVccPmBwdTotalClrInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdTotalClrInterval.setStatus("mandatory")
_MscAtmIfVccPmBwdTotalUserCellsRx0_Type = PassportCounter64
_MscAtmIfVccPmBwdTotalUserCellsRx0_Object = MibTableColumn
mscAtmIfVccPmBwdTotalUserCellsRx0 = _MscAtmIfVccPmBwdTotalUserCellsRx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 8),
    _MscAtmIfVccPmBwdTotalUserCellsRx0_Type()
)
mscAtmIfVccPmBwdTotalUserCellsRx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdTotalUserCellsRx0.setStatus("mandatory")
_MscAtmIfVccPmBwdTotalUserCellsTx0_Type = PassportCounter64
_MscAtmIfVccPmBwdTotalUserCellsTx0_Object = MibTableColumn
mscAtmIfVccPmBwdTotalUserCellsTx0 = _MscAtmIfVccPmBwdTotalUserCellsTx0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 9),
    _MscAtmIfVccPmBwdTotalUserCellsTx0_Type()
)
mscAtmIfVccPmBwdTotalUserCellsTx0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdTotalUserCellsTx0.setStatus("mandatory")


class _MscAtmIfVccPmBwdAverageClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdAverageClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdAverageClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdAverageClr0_Object = MibTableColumn
mscAtmIfVccPmBwdAverageClr0 = _MscAtmIfVccPmBwdAverageClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 10),
    _MscAtmIfVccPmBwdAverageClr0_Type()
)
mscAtmIfVccPmBwdAverageClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdAverageClr0.setStatus("mandatory")


class _MscAtmIfVccPmBwdMaximumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdMaximumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdMaximumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdMaximumClr0_Object = MibTableColumn
mscAtmIfVccPmBwdMaximumClr0 = _MscAtmIfVccPmBwdMaximumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 11),
    _MscAtmIfVccPmBwdMaximumClr0_Type()
)
mscAtmIfVccPmBwdMaximumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdMaximumClr0.setStatus("mandatory")


class _MscAtmIfVccPmBwdMinimumClr0_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdMinimumClr0 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdMinimumClr0_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdMinimumClr0_Object = MibTableColumn
mscAtmIfVccPmBwdMinimumClr0 = _MscAtmIfVccPmBwdMinimumClr0_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 12),
    _MscAtmIfVccPmBwdMinimumClr0_Type()
)
mscAtmIfVccPmBwdMinimumClr0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdMinimumClr0.setStatus("mandatory")
_MscAtmIfVccPmBwdTotalUserCellsRx01_Type = PassportCounter64
_MscAtmIfVccPmBwdTotalUserCellsRx01_Object = MibTableColumn
mscAtmIfVccPmBwdTotalUserCellsRx01 = _MscAtmIfVccPmBwdTotalUserCellsRx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 13),
    _MscAtmIfVccPmBwdTotalUserCellsRx01_Type()
)
mscAtmIfVccPmBwdTotalUserCellsRx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdTotalUserCellsRx01.setStatus("mandatory")
_MscAtmIfVccPmBwdTotalUserCellsTx01_Type = PassportCounter64
_MscAtmIfVccPmBwdTotalUserCellsTx01_Object = MibTableColumn
mscAtmIfVccPmBwdTotalUserCellsTx01 = _MscAtmIfVccPmBwdTotalUserCellsTx01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 14),
    _MscAtmIfVccPmBwdTotalUserCellsTx01_Type()
)
mscAtmIfVccPmBwdTotalUserCellsTx01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdTotalUserCellsTx01.setStatus("mandatory")


class _MscAtmIfVccPmBwdAverageClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdAverageClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdAverageClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdAverageClr01_Object = MibTableColumn
mscAtmIfVccPmBwdAverageClr01 = _MscAtmIfVccPmBwdAverageClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 15),
    _MscAtmIfVccPmBwdAverageClr01_Type()
)
mscAtmIfVccPmBwdAverageClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdAverageClr01.setStatus("mandatory")


class _MscAtmIfVccPmBwdMaximumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdMaximumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdMaximumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdMaximumClr01_Object = MibTableColumn
mscAtmIfVccPmBwdMaximumClr01 = _MscAtmIfVccPmBwdMaximumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 16),
    _MscAtmIfVccPmBwdMaximumClr01_Type()
)
mscAtmIfVccPmBwdMaximumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdMaximumClr01.setStatus("mandatory")


class _MscAtmIfVccPmBwdMinimumClr01_Type(FixedPoint9):
    """Custom type mscAtmIfVccPmBwdMinimumClr01 based on FixedPoint9"""
    subtypeSpec = FixedPoint9.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000000000),
    )


_MscAtmIfVccPmBwdMinimumClr01_Type.__name__ = "FixedPoint9"
_MscAtmIfVccPmBwdMinimumClr01_Object = MibTableColumn
mscAtmIfVccPmBwdMinimumClr01 = _MscAtmIfVccPmBwdMinimumClr01_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 17),
    _MscAtmIfVccPmBwdMinimumClr01_Type()
)
mscAtmIfVccPmBwdMinimumClr01.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdMinimumClr01.setStatus("mandatory")


class _MscAtmIfVccPmBwdPmCellDiscardCount_Type(Unsigned32):
    """Custom type mscAtmIfVccPmBwdPmCellDiscardCount based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccPmBwdPmCellDiscardCount_Type.__name__ = "Unsigned32"
_MscAtmIfVccPmBwdPmCellDiscardCount_Object = MibTableColumn
mscAtmIfVccPmBwdPmCellDiscardCount = _MscAtmIfVccPmBwdPmCellDiscardCount_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 12, 1, 18),
    _MscAtmIfVccPmBwdPmCellDiscardCount_Type()
)
mscAtmIfVccPmBwdPmCellDiscardCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmBwdPmCellDiscardCount.setStatus("mandatory")
_MscAtmIfVccPmArTable_Object = MibTable
mscAtmIfVccPmArTable = _MscAtmIfVccPmArTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 13)
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmArTable.setStatus("mandatory")
_MscAtmIfVccPmArEntry_Object = MibTableRow
mscAtmIfVccPmArEntry = _MscAtmIfVccPmArEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 13, 1)
)
mscAtmIfVccPmArEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccPmArEntry.setStatus("mandatory")


class _MscAtmIfVccPmCurrentAvailabilityStatus_Type(Integer32):
    """Custom type mscAtmIfVccPmCurrentAvailabilityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("available", 1),
          ("notApplicable", 0),
          ("unavailable", 2))
    )


_MscAtmIfVccPmCurrentAvailabilityStatus_Type.__name__ = "Integer32"
_MscAtmIfVccPmCurrentAvailabilityStatus_Object = MibTableColumn
mscAtmIfVccPmCurrentAvailabilityStatus = _MscAtmIfVccPmCurrentAvailabilityStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 13, 1, 1),
    _MscAtmIfVccPmCurrentAvailabilityStatus_Type()
)
mscAtmIfVccPmCurrentAvailabilityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmCurrentAvailabilityStatus.setStatus("mandatory")


class _MscAtmIfVccPmArTotalTime_Type(Unsigned32):
    """Custom type mscAtmIfVccPmArTotalTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccPmArTotalTime_Type.__name__ = "Unsigned32"
_MscAtmIfVccPmArTotalTime_Object = MibTableColumn
mscAtmIfVccPmArTotalTime = _MscAtmIfVccPmArTotalTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 13, 1, 2),
    _MscAtmIfVccPmArTotalTime_Type()
)
mscAtmIfVccPmArTotalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmArTotalTime.setStatus("mandatory")


class _MscAtmIfVccPmArAvailableTime_Type(Unsigned32):
    """Custom type mscAtmIfVccPmArAvailableTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVccPmArAvailableTime_Type.__name__ = "Unsigned32"
_MscAtmIfVccPmArAvailableTime_Object = MibTableColumn
mscAtmIfVccPmArAvailableTime = _MscAtmIfVccPmArAvailableTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 13, 1, 3),
    _MscAtmIfVccPmArAvailableTime_Type()
)
mscAtmIfVccPmArAvailableTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmArAvailableTime.setStatus("mandatory")


class _MscAtmIfVccPmArAvailabilityRatio_Type(FixedPoint7):
    """Custom type mscAtmIfVccPmArAvailabilityRatio based on FixedPoint7"""
    subtypeSpec = FixedPoint7.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000000),
    )


_MscAtmIfVccPmArAvailabilityRatio_Type.__name__ = "FixedPoint7"
_MscAtmIfVccPmArAvailabilityRatio_Object = MibTableColumn
mscAtmIfVccPmArAvailabilityRatio = _MscAtmIfVccPmArAvailabilityRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 14, 13, 1, 4),
    _MscAtmIfVccPmArAvailabilityRatio_Type()
)
mscAtmIfVccPmArAvailabilityRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccPmArAvailabilityRatio.setStatus("mandatory")
_MscAtmIfVccStateTable_Object = MibTable
mscAtmIfVccStateTable = _MscAtmIfVccStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVccStateTable.setStatus("mandatory")
_MscAtmIfVccStateEntry_Object = MibTableRow
mscAtmIfVccStateEntry = _MscAtmIfVccStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 100, 1)
)
mscAtmIfVccStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccStateEntry.setStatus("mandatory")


class _MscAtmIfVccAdminState_Type(Integer32):
    """Custom type mscAtmIfVccAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfVccAdminState_Type.__name__ = "Integer32"
_MscAtmIfVccAdminState_Object = MibTableColumn
mscAtmIfVccAdminState = _MscAtmIfVccAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 100, 1, 1),
    _MscAtmIfVccAdminState_Type()
)
mscAtmIfVccAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccAdminState.setStatus("mandatory")


class _MscAtmIfVccOperationalState_Type(Integer32):
    """Custom type mscAtmIfVccOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVccOperationalState_Type.__name__ = "Integer32"
_MscAtmIfVccOperationalState_Object = MibTableColumn
mscAtmIfVccOperationalState = _MscAtmIfVccOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 100, 1, 2),
    _MscAtmIfVccOperationalState_Type()
)
mscAtmIfVccOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccOperationalState.setStatus("mandatory")


class _MscAtmIfVccUsageState_Type(Integer32):
    """Custom type mscAtmIfVccUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfVccUsageState_Type.__name__ = "Integer32"
_MscAtmIfVccUsageState_Object = MibTableColumn
mscAtmIfVccUsageState = _MscAtmIfVccUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 100, 1, 3),
    _MscAtmIfVccUsageState_Type()
)
mscAtmIfVccUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccUsageState.setStatus("mandatory")
_MscAtmIfVccOperTable_Object = MibTable
mscAtmIfVccOperTable = _MscAtmIfVccOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVccOperTable.setStatus("mandatory")
_MscAtmIfVccOperEntry_Object = MibTableRow
mscAtmIfVccOperEntry = _MscAtmIfVccOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 110, 1)
)
mscAtmIfVccOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccOperEntry.setStatus("mandatory")


class _MscAtmIfVccConnectionPointType_Type(Integer32):
    """Custom type mscAtmIfVccConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_MscAtmIfVccConnectionPointType_Type.__name__ = "Integer32"
_MscAtmIfVccConnectionPointType_Object = MibTableColumn
mscAtmIfVccConnectionPointType = _MscAtmIfVccConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 110, 1, 10),
    _MscAtmIfVccConnectionPointType_Type()
)
mscAtmIfVccConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccConnectionPointType.setStatus("mandatory")
_MscAtmIfVccConnInfoTable_Object = MibTable
mscAtmIfVccConnInfoTable = _MscAtmIfVccConnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 115)
)
if mibBuilder.loadTexts:
    mscAtmIfVccConnInfoTable.setStatus("mandatory")
_MscAtmIfVccConnInfoEntry_Object = MibTableRow
mscAtmIfVccConnInfoEntry = _MscAtmIfVccConnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 115, 1)
)
mscAtmIfVccConnInfoEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccConnInfoEntry.setStatus("mandatory")


class _MscAtmIfVccDistributionType_Type(Integer32):
    """Custom type mscAtmIfVccDistributionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipoint", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVccDistributionType_Type.__name__ = "Integer32"
_MscAtmIfVccDistributionType_Object = MibTableColumn
mscAtmIfVccDistributionType = _MscAtmIfVccDistributionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 115, 1, 11),
    _MscAtmIfVccDistributionType_Type()
)
mscAtmIfVccDistributionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccDistributionType.setStatus("mandatory")


class _MscAtmIfVccNumLeaves_Type(Gauge32):
    """Custom type mscAtmIfVccNumLeaves based on Gauge32"""
    defaultValue = 0

    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccNumLeaves_Type.__name__ = "Gauge32"
_MscAtmIfVccNumLeaves_Object = MibTableColumn
mscAtmIfVccNumLeaves = _MscAtmIfVccNumLeaves_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 115, 1, 12),
    _MscAtmIfVccNumLeaves_Type()
)
mscAtmIfVccNumLeaves.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccNumLeaves.setStatus("mandatory")


class _MscAtmIfVccCallDirection_Type(Integer32):
    """Custom type mscAtmIfVccCallDirection based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fromLink", 0),
          ("notApplicable", 2),
          ("toLink", 1))
    )


_MscAtmIfVccCallDirection_Type.__name__ = "Integer32"
_MscAtmIfVccCallDirection_Object = MibTableColumn
mscAtmIfVccCallDirection = _MscAtmIfVccCallDirection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 115, 1, 13),
    _MscAtmIfVccCallDirection_Type()
)
mscAtmIfVccCallDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccCallDirection.setStatus("mandatory")
_MscAtmIfVccStatusTable_Object = MibTable
mscAtmIfVccStatusTable = _MscAtmIfVccStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfVccStatusTable.setStatus("mandatory")
_MscAtmIfVccStatusEntry_Object = MibTableRow
mscAtmIfVccStatusEntry = _MscAtmIfVccStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1)
)
mscAtmIfVccStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccStatusEntry.setStatus("mandatory")


class _MscAtmIfVccOperStatus_Type(Integer32):
    """Custom type mscAtmIfVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_MscAtmIfVccOperStatus_Type.__name__ = "Integer32"
_MscAtmIfVccOperStatus_Object = MibTableColumn
mscAtmIfVccOperStatus = _MscAtmIfVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 20),
    _MscAtmIfVccOperStatus_Type()
)
mscAtmIfVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccOperStatus.setStatus("mandatory")


class _MscAtmIfVccLocalFailureCause_Type(Integer32):
    """Custom type mscAtmIfVccLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_MscAtmIfVccLocalFailureCause_Type.__name__ = "Integer32"
_MscAtmIfVccLocalFailureCause_Object = MibTableColumn
mscAtmIfVccLocalFailureCause = _MscAtmIfVccLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 25),
    _MscAtmIfVccLocalFailureCause_Type()
)
mscAtmIfVccLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLocalFailureCause.setStatus("mandatory")


class _MscAtmIfVccTroubled_Type(Integer32):
    """Custom type mscAtmIfVccTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVccTroubled_Type.__name__ = "Integer32"
_MscAtmIfVccTroubled_Object = MibTableColumn
mscAtmIfVccTroubled = _MscAtmIfVccTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 28),
    _MscAtmIfVccTroubled_Type()
)
mscAtmIfVccTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTroubled.setStatus("mandatory")


class _MscAtmIfVccSegLinkSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVccSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVccSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVccSegLinkSideLoopbackState_Object = MibTableColumn
mscAtmIfVccSegLinkSideLoopbackState = _MscAtmIfVccSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 30),
    _MscAtmIfVccSegLinkSideLoopbackState_Type()
)
mscAtmIfVccSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccSegLinkSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVccSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVccSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVccSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVccSegSwitchSideLoopbackState_Object = MibTableColumn
mscAtmIfVccSegSwitchSideLoopbackState = _MscAtmIfVccSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 40),
    _MscAtmIfVccSegSwitchSideLoopbackState_Type()
)
mscAtmIfVccSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccSegSwitchSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVccEndToEndLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVccEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVccEndToEndLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVccEndToEndLoopbackState_Object = MibTableColumn
mscAtmIfVccEndToEndLoopbackState = _MscAtmIfVccEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 50),
    _MscAtmIfVccEndToEndLoopbackState_Type()
)
mscAtmIfVccEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccEndToEndLoopbackState.setStatus("mandatory")


class _MscAtmIfVccRxOamCellCongestionState_Type(Integer32):
    """Custom type mscAtmIfVccRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVccRxOamCellCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVccRxOamCellCongestionState_Object = MibTableColumn
mscAtmIfVccRxOamCellCongestionState = _MscAtmIfVccRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 55),
    _MscAtmIfVccRxOamCellCongestionState_Type()
)
mscAtmIfVccRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxOamCellCongestionState.setStatus("mandatory")


class _MscAtmIfVccAisState_Type(Integer32):
    """Custom type mscAtmIfVccAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVccAisState_Type.__name__ = "Integer32"
_MscAtmIfVccAisState_Object = MibTableColumn
mscAtmIfVccAisState = _MscAtmIfVccAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 60),
    _MscAtmIfVccAisState_Type()
)
mscAtmIfVccAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccAisState.setStatus("mandatory")


class _MscAtmIfVccRdiState_Type(Integer32):
    """Custom type mscAtmIfVccRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVccRdiState_Type.__name__ = "Integer32"
_MscAtmIfVccRdiState_Object = MibTableColumn
mscAtmIfVccRdiState = _MscAtmIfVccRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 120, 1, 70),
    _MscAtmIfVccRdiState_Type()
)
mscAtmIfVccRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRdiState.setStatus("mandatory")
_MscAtmIfVccTrafficTable_Object = MibTable
mscAtmIfVccTrafficTable = _MscAtmIfVccTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTrafficTable.setStatus("mandatory")
_MscAtmIfVccTrafficEntry_Object = MibTableRow
mscAtmIfVccTrafficEntry = _MscAtmIfVccTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1)
)
mscAtmIfVccTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTrafficEntry.setStatus("mandatory")


class _MscAtmIfVccTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVccTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccTxTrafficDescType_Object = MibTableColumn
mscAtmIfVccTxTrafficDescType = _MscAtmIfVccTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 10),
    _MscAtmIfVccTxTrafficDescType_Type()
)
mscAtmIfVccTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVccTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVccTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVccTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccTxQosClass_Object = MibTableColumn
mscAtmIfVccTxQosClass = _MscAtmIfVccTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 30),
    _MscAtmIfVccTxQosClass_Type()
)
mscAtmIfVccTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxQosClass.setStatus("obsolete")


class _MscAtmIfVccFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVccFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVccFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccFwdQosClass_Object = MibTableColumn
mscAtmIfVccFwdQosClass = _MscAtmIfVccFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 31),
    _MscAtmIfVccFwdQosClass_Type()
)
mscAtmIfVccFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccFwdQosClass.setStatus("obsolete")


class _MscAtmIfVccTxQueueLength_Type(Integer32):
    """Custom type mscAtmIfVccTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVccTxQueueLength_Type.__name__ = "Integer32"
_MscAtmIfVccTxQueueLength_Object = MibTableColumn
mscAtmIfVccTxQueueLength = _MscAtmIfVccTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 32),
    _MscAtmIfVccTxQueueLength_Type()
)
mscAtmIfVccTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxQueueLength.setStatus("obsolete")


class _MscAtmIfVccTxQueueCongestionState_Type(Integer32):
    """Custom type mscAtmIfVccTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVccTxQueueCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVccTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVccTxQueueCongestionState = _MscAtmIfVccTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 33),
    _MscAtmIfVccTxQueueCongestionState_Type()
)
mscAtmIfVccTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxQueueCongestionState.setStatus("obsolete")


class _MscAtmIfVccHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVccHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVccHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVccHoldingPriority_Object = MibTableColumn
mscAtmIfVccHoldingPriority = _MscAtmIfVccHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 35),
    _MscAtmIfVccHoldingPriority_Type()
)
mscAtmIfVccHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccHoldingPriority.setStatus("obsolete")


class _MscAtmIfVccRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVccRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVccRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVccRxTrafficDescType_Object = MibTableColumn
mscAtmIfVccRxTrafficDescType = _MscAtmIfVccRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 40),
    _MscAtmIfVccRxTrafficDescType_Type()
)
mscAtmIfVccRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVccRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVccRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVccRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccRxQosClass_Object = MibTableColumn
mscAtmIfVccRxQosClass = _MscAtmIfVccRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 60),
    _MscAtmIfVccRxQosClass_Type()
)
mscAtmIfVccRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxQosClass.setStatus("obsolete")


class _MscAtmIfVccBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVccBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVccBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVccBwdQosClass_Object = MibTableColumn
mscAtmIfVccBwdQosClass = _MscAtmIfVccBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 61),
    _MscAtmIfVccBwdQosClass_Type()
)
mscAtmIfVccBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccBwdQosClass.setStatus("obsolete")


class _MscAtmIfVccAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVccAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVccAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVccAtmServiceCategory_Object = MibTableColumn
mscAtmIfVccAtmServiceCategory = _MscAtmIfVccAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 62),
    _MscAtmIfVccAtmServiceCategory_Type()
)
mscAtmIfVccAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVccTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVccTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_MscAtmIfVccTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVccTrafficShaping_Object = MibTableColumn
mscAtmIfVccTrafficShaping = _MscAtmIfVccTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 70),
    _MscAtmIfVccTrafficShaping_Type()
)
mscAtmIfVccTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTrafficShaping.setStatus("obsolete")


class _MscAtmIfVccBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVccBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVccBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVccBearerClassBbc_Object = MibTableColumn
mscAtmIfVccBearerClassBbc = _MscAtmIfVccBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 71),
    _MscAtmIfVccBearerClassBbc_Type()
)
mscAtmIfVccBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVccTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVccTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVccTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVccTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVccTransferCapabilityBbc = _MscAtmIfVccTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 72),
    _MscAtmIfVccTransferCapabilityBbc_Type()
)
mscAtmIfVccTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVccClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVccClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVccClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVccClippingBbc_Object = MibTableColumn
mscAtmIfVccClippingBbc = _MscAtmIfVccClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 74),
    _MscAtmIfVccClippingBbc_Type()
)
mscAtmIfVccClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccClippingBbc.setStatus("obsolete")


class _MscAtmIfVccUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVccUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVccUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVccUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVccUnshapedTransmitQueueing = _MscAtmIfVccUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 75),
    _MscAtmIfVccUnshapedTransmitQueueing_Type()
)
mscAtmIfVccUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVccBestEffort_Type(Integer32):
    """Custom type mscAtmIfVccBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVccBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVccBestEffort_Object = MibTableColumn
mscAtmIfVccBestEffort = _MscAtmIfVccBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 76),
    _MscAtmIfVccBestEffort_Type()
)
mscAtmIfVccBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccBestEffort.setStatus("obsolete")


class _MscAtmIfVccUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVccUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_MscAtmIfVccUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVccUsageParameterControl_Object = MibTableColumn
mscAtmIfVccUsageParameterControl = _MscAtmIfVccUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 80),
    _MscAtmIfVccUsageParameterControl_Type()
)
mscAtmIfVccUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVccTxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVccTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccTxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVccTxFrameDiscard_Object = MibTableColumn
mscAtmIfVccTxFrameDiscard = _MscAtmIfVccTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 85),
    _MscAtmIfVccTxFrameDiscard_Type()
)
mscAtmIfVccTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVccRxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVccRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVccRxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVccRxFrameDiscard_Object = MibTableColumn
mscAtmIfVccRxFrameDiscard = _MscAtmIfVccRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 86),
    _MscAtmIfVccRxFrameDiscard_Type()
)
mscAtmIfVccRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVccBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVccBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVccBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVccBandwidthElastic_Object = MibTableColumn
mscAtmIfVccBandwidthElastic = _MscAtmIfVccBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 90),
    _MscAtmIfVccBandwidthElastic_Type()
)
mscAtmIfVccBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccBandwidthElastic.setStatus("obsolete")


class _MscAtmIfVccBandwidthReduction_Type(Integer32):
    """Custom type mscAtmIfVccBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccBandwidthReduction_Type.__name__ = "Integer32"
_MscAtmIfVccBandwidthReduction_Object = MibTableColumn
mscAtmIfVccBandwidthReduction = _MscAtmIfVccBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 130, 1, 100),
    _MscAtmIfVccBandwidthReduction_Type()
)
mscAtmIfVccBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccBandwidthReduction.setStatus("obsolete")
_MscAtmIfVccStatsTable_Object = MibTable
mscAtmIfVccStatsTable = _MscAtmIfVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140)
)
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTable.setStatus("mandatory")
_MscAtmIfVccStatsEntry_Object = MibTableRow
mscAtmIfVccStatsEntry = _MscAtmIfVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1)
)
mscAtmIfVccStatsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccStatsEntry.setStatus("mandatory")
_MscAtmIfVccStatsTxCell_Type = PassportCounter64
_MscAtmIfVccStatsTxCell_Object = MibTableColumn
mscAtmIfVccStatsTxCell = _MscAtmIfVccStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 10),
    _MscAtmIfVccStatsTxCell_Type()
)
mscAtmIfVccStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTxCell.setStatus("mandatory")
_MscAtmIfVccStatsTxCellClp_Type = PassportCounter64
_MscAtmIfVccStatsTxCellClp_Object = MibTableColumn
mscAtmIfVccStatsTxCellClp = _MscAtmIfVccStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 20),
    _MscAtmIfVccStatsTxCellClp_Type()
)
mscAtmIfVccStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTxCellClp.setStatus("mandatory")
_MscAtmIfVccTxDiscard_Type = PassportCounter64
_MscAtmIfVccTxDiscard_Object = MibTableColumn
mscAtmIfVccTxDiscard = _MscAtmIfVccTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 30),
    _MscAtmIfVccTxDiscard_Type()
)
mscAtmIfVccTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxDiscard.setStatus("obsolete")
_MscAtmIfVccTxDiscardClp_Type = PassportCounter64
_MscAtmIfVccTxDiscardClp_Object = MibTableColumn
mscAtmIfVccTxDiscardClp = _MscAtmIfVccTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 40),
    _MscAtmIfVccTxDiscardClp_Type()
)
mscAtmIfVccTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxDiscardClp.setStatus("obsolete")
_MscAtmIfVccStatsTxCellDiscard_Type = PassportCounter64
_MscAtmIfVccStatsTxCellDiscard_Object = MibTableColumn
mscAtmIfVccStatsTxCellDiscard = _MscAtmIfVccStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 42),
    _MscAtmIfVccStatsTxCellDiscard_Type()
)
mscAtmIfVccStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTxCellDiscard.setStatus("mandatory")
_MscAtmIfVccStatsTxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVccStatsTxCellDiscardClp_Object = MibTableColumn
mscAtmIfVccStatsTxCellDiscardClp = _MscAtmIfVccStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 43),
    _MscAtmIfVccStatsTxCellDiscardClp_Type()
)
mscAtmIfVccStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVccStatsTxFrameDiscard_Type = PassportCounter64
_MscAtmIfVccStatsTxFrameDiscard_Object = MibTableColumn
mscAtmIfVccStatsTxFrameDiscard = _MscAtmIfVccStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 46),
    _MscAtmIfVccStatsTxFrameDiscard_Type()
)
mscAtmIfVccStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTxFrameDiscard.setStatus("mandatory")
_MscAtmIfVccStatsTxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVccStatsTxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVccStatsTxFrameDiscardClp = _MscAtmIfVccStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 47),
    _MscAtmIfVccStatsTxFrameDiscardClp_Type()
)
mscAtmIfVccStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsTxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVccStatsRxCell_Type = PassportCounter64
_MscAtmIfVccStatsRxCell_Object = MibTableColumn
mscAtmIfVccStatsRxCell = _MscAtmIfVccStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 50),
    _MscAtmIfVccStatsRxCell_Type()
)
mscAtmIfVccStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxCell.setStatus("mandatory")
_MscAtmIfVccStatsRxCellClp_Type = PassportCounter64
_MscAtmIfVccStatsRxCellClp_Object = MibTableColumn
mscAtmIfVccStatsRxCellClp = _MscAtmIfVccStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 60),
    _MscAtmIfVccStatsRxCellClp_Type()
)
mscAtmIfVccStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxCellClp.setStatus("mandatory")
_MscAtmIfVccRxDiscard_Type = PassportCounter64
_MscAtmIfVccRxDiscard_Object = MibTableColumn
mscAtmIfVccRxDiscard = _MscAtmIfVccRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 70),
    _MscAtmIfVccRxDiscard_Type()
)
mscAtmIfVccRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxDiscard.setStatus("obsolete")
_MscAtmIfVccRxDiscardClp_Type = PassportCounter64
_MscAtmIfVccRxDiscardClp_Object = MibTableColumn
mscAtmIfVccRxDiscardClp = _MscAtmIfVccRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 80),
    _MscAtmIfVccRxDiscardClp_Type()
)
mscAtmIfVccRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxDiscardClp.setStatus("obsolete")
_MscAtmIfVccStatsRxCellDiscard_Type = PassportCounter64
_MscAtmIfVccStatsRxCellDiscard_Object = MibTableColumn
mscAtmIfVccStatsRxCellDiscard = _MscAtmIfVccStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 82),
    _MscAtmIfVccStatsRxCellDiscard_Type()
)
mscAtmIfVccStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxCellDiscard.setStatus("mandatory")
_MscAtmIfVccStatsRxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVccStatsRxCellDiscardClp_Object = MibTableColumn
mscAtmIfVccStatsRxCellDiscardClp = _MscAtmIfVccStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 83),
    _MscAtmIfVccStatsRxCellDiscardClp_Type()
)
mscAtmIfVccStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVccStatsRxFrameDiscard_Type = PassportCounter64
_MscAtmIfVccStatsRxFrameDiscard_Object = MibTableColumn
mscAtmIfVccStatsRxFrameDiscard = _MscAtmIfVccStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 86),
    _MscAtmIfVccStatsRxFrameDiscard_Type()
)
mscAtmIfVccStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxFrameDiscard.setStatus("mandatory")
_MscAtmIfVccStatsRxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVccStatsRxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVccStatsRxFrameDiscardClp = _MscAtmIfVccStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 88),
    _MscAtmIfVccStatsRxFrameDiscardClp_Type()
)
mscAtmIfVccStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVccStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_MscAtmIfVccStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
mscAtmIfVccStatsRxUpcViolationOnEnforcer1 = _MscAtmIfVccStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 90),
    _MscAtmIfVccStatsRxUpcViolationOnEnforcer1_Type()
)
mscAtmIfVccStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_MscAtmIfVccStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_MscAtmIfVccStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
mscAtmIfVccStatsRxUpcViolationOnEnforcer2 = _MscAtmIfVccStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 92),
    _MscAtmIfVccStatsRxUpcViolationOnEnforcer2_Type()
)
mscAtmIfVccStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_MscAtmIfVccStatsRxAal5FrameError_Type = PassportCounter64
_MscAtmIfVccStatsRxAal5FrameError_Object = MibTableColumn
mscAtmIfVccStatsRxAal5FrameError = _MscAtmIfVccStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 100),
    _MscAtmIfVccStatsRxAal5FrameError_Type()
)
mscAtmIfVccStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxAal5FrameError.setStatus("mandatory")
_MscAtmIfVccStatsRxAal5FrameAbort_Type = PassportCounter64
_MscAtmIfVccStatsRxAal5FrameAbort_Object = MibTableColumn
mscAtmIfVccStatsRxAal5FrameAbort = _MscAtmIfVccStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 140, 1, 102),
    _MscAtmIfVccStatsRxAal5FrameAbort_Type()
)
mscAtmIfVccStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccStatsRxAal5FrameAbort.setStatus("mandatory")
_MscAtmIfVccPerfTable_Object = MibTable
mscAtmIfVccPerfTable = _MscAtmIfVccPerfTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150)
)
if mibBuilder.loadTexts:
    mscAtmIfVccPerfTable.setStatus("mandatory")
_MscAtmIfVccPerfEntry_Object = MibTableRow
mscAtmIfVccPerfEntry = _MscAtmIfVccPerfEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150, 1)
)
mscAtmIfVccPerfEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccPerfEntry.setStatus("mandatory")


class _MscAtmIfVccLastMinimumCtd_Type(Unsigned32):
    """Custom type mscAtmIfVccLastMinimumCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVccLastMinimumCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVccLastMinimumCtd_Object = MibTableColumn
mscAtmIfVccLastMinimumCtd = _MscAtmIfVccLastMinimumCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150, 1, 10),
    _MscAtmIfVccLastMinimumCtd_Type()
)
mscAtmIfVccLastMinimumCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLastMinimumCtd.setStatus("mandatory")


class _MscAtmIfVccLastMaximumCtd_Type(Unsigned32):
    """Custom type mscAtmIfVccLastMaximumCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVccLastMaximumCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVccLastMaximumCtd_Object = MibTableColumn
mscAtmIfVccLastMaximumCtd = _MscAtmIfVccLastMaximumCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150, 1, 20),
    _MscAtmIfVccLastMaximumCtd_Type()
)
mscAtmIfVccLastMaximumCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLastMaximumCtd.setStatus("mandatory")


class _MscAtmIfVccLastAverageCtd_Type(Unsigned32):
    """Custom type mscAtmIfVccLastAverageCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVccLastAverageCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVccLastAverageCtd_Object = MibTableColumn
mscAtmIfVccLastAverageCtd = _MscAtmIfVccLastAverageCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150, 1, 30),
    _MscAtmIfVccLastAverageCtd_Type()
)
mscAtmIfVccLastAverageCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLastAverageCtd.setStatus("mandatory")


class _MscAtmIfVccCurrentCtd_Type(Unsigned32):
    """Custom type mscAtmIfVccCurrentCtd based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 2147483647),
    )


_MscAtmIfVccCurrentCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVccCurrentCtd_Object = MibTableColumn
mscAtmIfVccCurrentCtd = _MscAtmIfVccCurrentCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150, 1, 40),
    _MscAtmIfVccCurrentCtd_Type()
)
mscAtmIfVccCurrentCtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccCurrentCtd.setStatus("mandatory")


class _MscAtmIfVccLastCtdSampleSize_Type(Unsigned32):
    """Custom type mscAtmIfVccLastCtdSampleSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVccLastCtdSampleSize_Type.__name__ = "Unsigned32"
_MscAtmIfVccLastCtdSampleSize_Object = MibTableColumn
mscAtmIfVccLastCtdSampleSize = _MscAtmIfVccLastCtdSampleSize_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 150, 1, 50),
    _MscAtmIfVccLastCtdSampleSize_Type()
)
mscAtmIfVccLastCtdSampleSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccLastCtdSampleSize.setStatus("mandatory")
_MscAtmIfVccTxTdpTable_Object = MibTable
mscAtmIfVccTxTdpTable = _MscAtmIfVccTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 294)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTxTdpTable.setStatus("obsolete")
_MscAtmIfVccTxTdpEntry_Object = MibTableRow
mscAtmIfVccTxTdpEntry = _MscAtmIfVccTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 294, 1)
)
mscAtmIfVccTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVccTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVccTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTxTdpIndex_Object = MibTableColumn
mscAtmIfVccTxTdpIndex = _MscAtmIfVccTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 294, 1, 1),
    _MscAtmIfVccTxTdpIndex_Type()
)
mscAtmIfVccTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVccTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTxTdpValue_Object = MibTableColumn
mscAtmIfVccTxTdpValue = _MscAtmIfVccTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 294, 1, 2),
    _MscAtmIfVccTxTdpValue_Type()
)
mscAtmIfVccTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxTdpValue.setStatus("obsolete")
_MscAtmIfVccRxTdpTable_Object = MibTable
mscAtmIfVccRxTdpTable = _MscAtmIfVccRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 295)
)
if mibBuilder.loadTexts:
    mscAtmIfVccRxTdpTable.setStatus("obsolete")
_MscAtmIfVccRxTdpEntry_Object = MibTableRow
mscAtmIfVccRxTdpEntry = _MscAtmIfVccRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 295, 1)
)
mscAtmIfVccRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVccRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVccRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVccRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccRxTdpIndex_Object = MibTableColumn
mscAtmIfVccRxTdpIndex = _MscAtmIfVccRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 295, 1, 1),
    _MscAtmIfVccRxTdpIndex_Type()
)
mscAtmIfVccRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVccRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccRxTdpValue_Object = MibTableColumn
mscAtmIfVccRxTdpValue = _MscAtmIfVccRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 295, 1, 2),
    _MscAtmIfVccRxTdpValue_Type()
)
mscAtmIfVccRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccRxTdpValue.setStatus("obsolete")
_MscAtmIfVccTxQThreshTable_Object = MibTable
mscAtmIfVccTxQThreshTable = _MscAtmIfVccTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 352)
)
if mibBuilder.loadTexts:
    mscAtmIfVccTxQThreshTable.setStatus("obsolete")
_MscAtmIfVccTxQThreshEntry_Object = MibTableRow
mscAtmIfVccTxQThreshEntry = _MscAtmIfVccTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 352, 1)
)
mscAtmIfVccTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccTxQThreshEntry.setStatus("obsolete")


class _MscAtmIfVccTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVccTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVccTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVccTxQThreshIndex_Object = MibTableColumn
mscAtmIfVccTxQThreshIndex = _MscAtmIfVccTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 352, 1, 1),
    _MscAtmIfVccTxQThreshIndex_Type()
)
mscAtmIfVccTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccTxQThreshIndex.setStatus("obsolete")


class _MscAtmIfVccTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVccTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVccTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccTxQThreshValue_Object = MibTableColumn
mscAtmIfVccTxQThreshValue = _MscAtmIfVccTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 352, 1, 2),
    _MscAtmIfVccTxQThreshValue_Type()
)
mscAtmIfVccTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccTxQThreshValue.setStatus("obsolete")
_MscAtmIfVccFqpTable_Object = MibTable
mscAtmIfVccFqpTable = _MscAtmIfVccFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 357)
)
if mibBuilder.loadTexts:
    mscAtmIfVccFqpTable.setStatus("obsolete")
_MscAtmIfVccFqpEntry_Object = MibTableRow
mscAtmIfVccFqpEntry = _MscAtmIfVccFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 357, 1)
)
mscAtmIfVccFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccFqpEntry.setStatus("obsolete")


class _MscAtmIfVccFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccFqpIndex_Object = MibTableColumn
mscAtmIfVccFqpIndex = _MscAtmIfVccFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 357, 1, 1),
    _MscAtmIfVccFqpIndex_Type()
)
mscAtmIfVccFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccFqpIndex.setStatus("obsolete")


class _MscAtmIfVccFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccFqpValue_Object = MibTableColumn
mscAtmIfVccFqpValue = _MscAtmIfVccFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 357, 1, 2),
    _MscAtmIfVccFqpValue_Type()
)
mscAtmIfVccFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccFqpValue.setStatus("obsolete")
_MscAtmIfVccBqpTable_Object = MibTable
mscAtmIfVccBqpTable = _MscAtmIfVccBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 358)
)
if mibBuilder.loadTexts:
    mscAtmIfVccBqpTable.setStatus("obsolete")
_MscAtmIfVccBqpEntry_Object = MibTableRow
mscAtmIfVccBqpEntry = _MscAtmIfVccBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 358, 1)
)
mscAtmIfVccBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVccBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVccBqpEntry.setStatus("obsolete")


class _MscAtmIfVccBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVccBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVccBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVccBqpIndex_Object = MibTableColumn
mscAtmIfVccBqpIndex = _MscAtmIfVccBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 358, 1, 1),
    _MscAtmIfVccBqpIndex_Type()
)
mscAtmIfVccBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVccBqpIndex.setStatus("obsolete")


class _MscAtmIfVccBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVccBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVccBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVccBqpValue_Object = MibTableColumn
mscAtmIfVccBqpValue = _MscAtmIfVccBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 5, 358, 1, 2),
    _MscAtmIfVccBqpValue_Type()
)
mscAtmIfVccBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVccBqpValue.setStatus("obsolete")
_MscAtmIfNAcct_ObjectIdentity = ObjectIdentity
mscAtmIfNAcct = _MscAtmIfNAcct_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8)
)
_MscAtmIfNAcctRowStatusTable_Object = MibTable
mscAtmIfNAcctRowStatusTable = _MscAtmIfNAcctRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfNAcctRowStatusTable.setStatus("mandatory")
_MscAtmIfNAcctRowStatusEntry_Object = MibTableRow
mscAtmIfNAcctRowStatusEntry = _MscAtmIfNAcctRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 1, 1)
)
mscAtmIfNAcctRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfNAcctIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfNAcctRowStatusEntry.setStatus("mandatory")
_MscAtmIfNAcctRowStatus_Type = RowStatus
_MscAtmIfNAcctRowStatus_Object = MibTableColumn
mscAtmIfNAcctRowStatus = _MscAtmIfNAcctRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 1, 1, 1),
    _MscAtmIfNAcctRowStatus_Type()
)
mscAtmIfNAcctRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfNAcctRowStatus.setStatus("mandatory")
_MscAtmIfNAcctComponentName_Type = DisplayString
_MscAtmIfNAcctComponentName_Object = MibTableColumn
mscAtmIfNAcctComponentName = _MscAtmIfNAcctComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 1, 1, 2),
    _MscAtmIfNAcctComponentName_Type()
)
mscAtmIfNAcctComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfNAcctComponentName.setStatus("mandatory")
_MscAtmIfNAcctStorageType_Type = StorageType
_MscAtmIfNAcctStorageType_Object = MibTableColumn
mscAtmIfNAcctStorageType = _MscAtmIfNAcctStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 1, 1, 4),
    _MscAtmIfNAcctStorageType_Type()
)
mscAtmIfNAcctStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfNAcctStorageType.setStatus("mandatory")
_MscAtmIfNAcctIndex_Type = NonReplicated
_MscAtmIfNAcctIndex_Object = MibTableColumn
mscAtmIfNAcctIndex = _MscAtmIfNAcctIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 1, 1, 10),
    _MscAtmIfNAcctIndex_Type()
)
mscAtmIfNAcctIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfNAcctIndex.setStatus("mandatory")
_MscAtmIfNAcctProvTable_Object = MibTable
mscAtmIfNAcctProvTable = _MscAtmIfNAcctProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 10)
)
if mibBuilder.loadTexts:
    mscAtmIfNAcctProvTable.setStatus("mandatory")
_MscAtmIfNAcctProvEntry_Object = MibTableRow
mscAtmIfNAcctProvEntry = _MscAtmIfNAcctProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 10, 1)
)
mscAtmIfNAcctProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfNAcctIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfNAcctProvEntry.setStatus("mandatory")


class _MscAtmIfNAcctAccountCollection_Type(OctetString):
    """Custom type mscAtmIfNAcctAccountCollection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfNAcctAccountCollection_Type.__name__ = "OctetString"
_MscAtmIfNAcctAccountCollection_Object = MibTableColumn
mscAtmIfNAcctAccountCollection = _MscAtmIfNAcctAccountCollection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 10, 1, 1),
    _MscAtmIfNAcctAccountCollection_Type()
)
mscAtmIfNAcctAccountCollection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfNAcctAccountCollection.setStatus("mandatory")


class _MscAtmIfNAcctAccountConnectionType_Type(Integer32):
    """Custom type mscAtmIfNAcctAccountConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("intermediate", 1),
          ("origTerm", 0))
    )


_MscAtmIfNAcctAccountConnectionType_Type.__name__ = "Integer32"
_MscAtmIfNAcctAccountConnectionType_Object = MibTableColumn
mscAtmIfNAcctAccountConnectionType = _MscAtmIfNAcctAccountConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 10, 1, 2),
    _MscAtmIfNAcctAccountConnectionType_Type()
)
mscAtmIfNAcctAccountConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfNAcctAccountConnectionType.setStatus("mandatory")


class _MscAtmIfNAcctAccountClass_Type(Unsigned32):
    """Custom type mscAtmIfNAcctAccountClass based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfNAcctAccountClass_Type.__name__ = "Unsigned32"
_MscAtmIfNAcctAccountClass_Object = MibTableColumn
mscAtmIfNAcctAccountClass = _MscAtmIfNAcctAccountClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 10, 1, 3),
    _MscAtmIfNAcctAccountClass_Type()
)
mscAtmIfNAcctAccountClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfNAcctAccountClass.setStatus("mandatory")


class _MscAtmIfNAcctServiceExchange_Type(Unsigned32):
    """Custom type mscAtmIfNAcctServiceExchange based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfNAcctServiceExchange_Type.__name__ = "Unsigned32"
_MscAtmIfNAcctServiceExchange_Object = MibTableColumn
mscAtmIfNAcctServiceExchange = _MscAtmIfNAcctServiceExchange_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 8, 10, 1, 4),
    _MscAtmIfNAcctServiceExchange_Type()
)
mscAtmIfNAcctServiceExchange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfNAcctServiceExchange.setStatus("mandatory")
_MscAtmIfVpt_ObjectIdentity = ObjectIdentity
mscAtmIfVpt = _MscAtmIfVpt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9)
)
_MscAtmIfVptRowStatusTable_Object = MibTable
mscAtmIfVptRowStatusTable = _MscAtmIfVptRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptRowStatusTable.setStatus("mandatory")
_MscAtmIfVptRowStatusEntry_Object = MibTableRow
mscAtmIfVptRowStatusEntry = _MscAtmIfVptRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 1, 1)
)
mscAtmIfVptRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptRowStatus_Type = RowStatus
_MscAtmIfVptRowStatus_Object = MibTableColumn
mscAtmIfVptRowStatus = _MscAtmIfVptRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 1, 1, 1),
    _MscAtmIfVptRowStatus_Type()
)
mscAtmIfVptRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptRowStatus.setStatus("mandatory")
_MscAtmIfVptComponentName_Type = DisplayString
_MscAtmIfVptComponentName_Object = MibTableColumn
mscAtmIfVptComponentName = _MscAtmIfVptComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 1, 1, 2),
    _MscAtmIfVptComponentName_Type()
)
mscAtmIfVptComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptComponentName.setStatus("mandatory")
_MscAtmIfVptStorageType_Type = StorageType
_MscAtmIfVptStorageType_Object = MibTableColumn
mscAtmIfVptStorageType = _MscAtmIfVptStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 1, 1, 4),
    _MscAtmIfVptStorageType_Type()
)
mscAtmIfVptStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStorageType.setStatus("mandatory")


class _MscAtmIfVptIndex_Type(Integer32):
    """Custom type mscAtmIfVptIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfVptIndex_Type.__name__ = "Integer32"
_MscAtmIfVptIndex_Object = MibTableColumn
mscAtmIfVptIndex = _MscAtmIfVptIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 1, 1, 10),
    _MscAtmIfVptIndex_Type()
)
mscAtmIfVptIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptIndex.setStatus("mandatory")
_MscAtmIfVptVpd_ObjectIdentity = ObjectIdentity
mscAtmIfVptVpd = _MscAtmIfVptVpd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2)
)
_MscAtmIfVptVpdRowStatusTable_Object = MibTable
mscAtmIfVptVpdRowStatusTable = _MscAtmIfVptVpdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVpdRowStatusEntry_Object = MibTableRow
mscAtmIfVptVpdRowStatusEntry = _MscAtmIfVptVpdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 1, 1)
)
mscAtmIfVptVpdRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVpdRowStatus_Type = RowStatus
_MscAtmIfVptVpdRowStatus_Object = MibTableColumn
mscAtmIfVptVpdRowStatus = _MscAtmIfVptVpdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 1, 1, 1),
    _MscAtmIfVptVpdRowStatus_Type()
)
mscAtmIfVptVpdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRowStatus.setStatus("mandatory")
_MscAtmIfVptVpdComponentName_Type = DisplayString
_MscAtmIfVptVpdComponentName_Object = MibTableColumn
mscAtmIfVptVpdComponentName = _MscAtmIfVptVpdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 1, 1, 2),
    _MscAtmIfVptVpdComponentName_Type()
)
mscAtmIfVptVpdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdComponentName.setStatus("mandatory")
_MscAtmIfVptVpdStorageType_Type = StorageType
_MscAtmIfVptVpdStorageType_Object = MibTableColumn
mscAtmIfVptVpdStorageType = _MscAtmIfVptVpdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 1, 1, 4),
    _MscAtmIfVptVpdStorageType_Type()
)
mscAtmIfVptVpdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdStorageType.setStatus("mandatory")
_MscAtmIfVptVpdIndex_Type = NonReplicated
_MscAtmIfVptVpdIndex_Object = MibTableColumn
mscAtmIfVptVpdIndex = _MscAtmIfVptVpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 1, 1, 10),
    _MscAtmIfVptVpdIndex_Type()
)
mscAtmIfVptVpdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdIndex.setStatus("mandatory")
_MscAtmIfVptVpdTm_ObjectIdentity = ObjectIdentity
mscAtmIfVptVpdTm = _MscAtmIfVptVpdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2)
)
_MscAtmIfVptVpdTmRowStatusTable_Object = MibTable
mscAtmIfVptVpdTmRowStatusTable = _MscAtmIfVptVpdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVpdTmRowStatusEntry_Object = MibTableRow
mscAtmIfVptVpdTmRowStatusEntry = _MscAtmIfVptVpdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 1, 1)
)
mscAtmIfVptVpdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVpdTmRowStatus_Type = RowStatus
_MscAtmIfVptVpdTmRowStatus_Object = MibTableColumn
mscAtmIfVptVpdTmRowStatus = _MscAtmIfVptVpdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 1, 1, 1),
    _MscAtmIfVptVpdTmRowStatus_Type()
)
mscAtmIfVptVpdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRowStatus.setStatus("mandatory")
_MscAtmIfVptVpdTmComponentName_Type = DisplayString
_MscAtmIfVptVpdTmComponentName_Object = MibTableColumn
mscAtmIfVptVpdTmComponentName = _MscAtmIfVptVpdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 1, 1, 2),
    _MscAtmIfVptVpdTmComponentName_Type()
)
mscAtmIfVptVpdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmComponentName.setStatus("mandatory")
_MscAtmIfVptVpdTmStorageType_Type = StorageType
_MscAtmIfVptVpdTmStorageType_Object = MibTableColumn
mscAtmIfVptVpdTmStorageType = _MscAtmIfVptVpdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 1, 1, 4),
    _MscAtmIfVptVpdTmStorageType_Type()
)
mscAtmIfVptVpdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmStorageType.setStatus("mandatory")
_MscAtmIfVptVpdTmIndex_Type = NonReplicated
_MscAtmIfVptVpdTmIndex_Object = MibTableColumn
mscAtmIfVptVpdTmIndex = _MscAtmIfVptVpdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 1, 1, 10),
    _MscAtmIfVptVpdTmIndex_Type()
)
mscAtmIfVptVpdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmIndex.setStatus("mandatory")
_MscAtmIfVptVpdTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptVpdTmAbr = _MscAtmIfVptVpdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2)
)
_MscAtmIfVptVpdTmAbrRowStatusTable_Object = MibTable
mscAtmIfVptVpdTmAbrRowStatusTable = _MscAtmIfVptVpdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptVpdTmAbrRowStatusEntry = _MscAtmIfVptVpdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 1, 1)
)
mscAtmIfVptVpdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrRowStatus_Type = RowStatus
_MscAtmIfVptVpdTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVptVpdTmAbrRowStatus = _MscAtmIfVptVpdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 1, 1, 1),
    _MscAtmIfVptVpdTmAbrRowStatus_Type()
)
mscAtmIfVptVpdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrComponentName_Type = DisplayString
_MscAtmIfVptVpdTmAbrComponentName_Object = MibTableColumn
mscAtmIfVptVpdTmAbrComponentName = _MscAtmIfVptVpdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 1, 1, 2),
    _MscAtmIfVptVpdTmAbrComponentName_Type()
)
mscAtmIfVptVpdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrStorageType_Type = StorageType
_MscAtmIfVptVpdTmAbrStorageType_Object = MibTableColumn
mscAtmIfVptVpdTmAbrStorageType = _MscAtmIfVptVpdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 1, 1, 4),
    _MscAtmIfVptVpdTmAbrStorageType_Type()
)
mscAtmIfVptVpdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrIndex_Type = NonReplicated
_MscAtmIfVptVpdTmAbrIndex_Object = MibTableColumn
mscAtmIfVptVpdTmAbrIndex = _MscAtmIfVptVpdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 1, 1, 10),
    _MscAtmIfVptVpdTmAbrIndex_Type()
)
mscAtmIfVptVpdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrIndex.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrProvTable_Object = MibTable
mscAtmIfVptVpdTmAbrProvTable = _MscAtmIfVptVpdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrProvTable.setStatus("mandatory")
_MscAtmIfVptVpdTmAbrProvEntry_Object = MibTableRow
mscAtmIfVptVpdTmAbrProvEntry = _MscAtmIfVptVpdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1)
)
mscAtmIfVptVpdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_MscAtmIfVptVpdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVptVpdTmAbrInitialCellRate = _MscAtmIfVptVpdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 10),
    _MscAtmIfVptVpdTmAbrInitialCellRate_Type()
)
mscAtmIfVptVpdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptVpdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVptVpdTmAbrTransientBufferExposure = _MscAtmIfVptVpdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 11),
    _MscAtmIfVptVpdTmAbrTransientBufferExposure_Type()
)
mscAtmIfVptVpdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVptVpdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVptVpdTmAbrFixedRoundTripTime = _MscAtmIfVptVpdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 12),
    _MscAtmIfVptVpdTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVptVpdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVptVpdTmAbrRateDecreaseFactor = _MscAtmIfVptVpdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 13),
    _MscAtmIfVptVpdTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVptVpdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVptVpdTmAbrRateIncreaseFactor = _MscAtmIfVptVpdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 14),
    _MscAtmIfVptVpdTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVptVpdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVptVpdTmAbrMaxCellPerRmCell = _MscAtmIfVptVpdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 15),
    _MscAtmIfVptVpdTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVptVpdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
mscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells = _MscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 16),
    _MscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Type()
)
mscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVptVpdTmAbrCutoffDecreaseFactor = _MscAtmIfVptVpdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 17),
    _MscAtmIfVptVpdTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVptVpdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor = _MscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 18),
    _MscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrDgcraMaximumDelay_Object = MibTableColumn
mscAtmIfVptVpdTmAbrDgcraMaximumDelay = _MscAtmIfVptVpdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 19),
    _MscAtmIfVptVpdTmAbrDgcraMaximumDelay_Type()
)
mscAtmIfVptVpdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVpdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrDgcraMinimumDelay_Object = MibTableColumn
mscAtmIfVptVpdTmAbrDgcraMinimumDelay = _MscAtmIfVptVpdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 20),
    _MscAtmIfVptVpdTmAbrDgcraMinimumDelay_Type()
)
mscAtmIfVptVpdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor = _MscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 21),
    _MscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
mscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptVpdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmAbrFarEndInitialCellRate_Object = MibTableColumn
mscAtmIfVptVpdTmAbrFarEndInitialCellRate = _MscAtmIfVptVpdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 2, 110, 1, 22),
    _MscAtmIfVptVpdTmAbrFarEndInitialCellRate_Type()
)
mscAtmIfVptVpdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_MscAtmIfVptVpdTmProvTable_Object = MibTable
mscAtmIfVptVpdTmProvTable = _MscAtmIfVptVpdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmProvTable.setStatus("mandatory")
_MscAtmIfVptVpdTmProvEntry_Object = MibTableRow
mscAtmIfVptVpdTmProvEntry = _MscAtmIfVptVpdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1)
)
mscAtmIfVptVpdTmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmProvEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptVpdTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVpdTmTxTrafficDescType = _MscAtmIfVptVpdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 10),
    _MscAtmIfVptVpdTmTxTrafficDescType_Type()
)
mscAtmIfVptVpdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptVpdTmFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVpdTmFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmFwdQosClass_Object = MibTableColumn
mscAtmIfVptVpdTmFwdQosClass = _MscAtmIfVptVpdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 21),
    _MscAtmIfVptVpdTmFwdQosClass_Type()
)
mscAtmIfVptVpdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmFwdQosClass.setStatus("mandatory")


class _MscAtmIfVptVpdTmTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfVptVpdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmTxQueueLimit_Object = MibTableColumn
mscAtmIfVptVpdTmTxQueueLimit = _MscAtmIfVptVpdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 22),
    _MscAtmIfVptVpdTmTxQueueLimit_Type()
)
mscAtmIfVptVpdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxQueueLimit.setStatus("mandatory")


class _MscAtmIfVptVpdTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVpdTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmHoldingPriority_Object = MibTableColumn
mscAtmIfVptVpdTmHoldingPriority = _MscAtmIfVptVpdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 25),
    _MscAtmIfVptVpdTmHoldingPriority_Type()
)
mscAtmIfVptVpdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVptVpdTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_MscAtmIfVptVpdTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVpdTmRxTrafficDescType = _MscAtmIfVptVpdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 30),
    _MscAtmIfVptVpdTmRxTrafficDescType_Type()
)
mscAtmIfVptVpdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptVpdTmBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVptVpdTmBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmBwdQosClass_Object = MibTableColumn
mscAtmIfVptVpdTmBwdQosClass = _MscAtmIfVptVpdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 41),
    _MscAtmIfVptVpdTmBwdQosClass_Type()
)
mscAtmIfVptVpdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBwdQosClass.setStatus("mandatory")


class _MscAtmIfVptVpdTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptVpdTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptVpdTmAtmServiceCategory = _MscAtmIfVptVpdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 42),
    _MscAtmIfVptVpdTmAtmServiceCategory_Type()
)
mscAtmIfVptVpdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVptVpdTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_MscAtmIfVptVpdTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmTrafficShaping_Object = MibTableColumn
mscAtmIfVptVpdTmTrafficShaping = _MscAtmIfVptVpdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 50),
    _MscAtmIfVptVpdTmTrafficShaping_Type()
)
mscAtmIfVptVpdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVptVpdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_MscAtmIfVptVpdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptVpdTmUnshapedTransmitQueueing = _MscAtmIfVptVpdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 60),
    _MscAtmIfVptVpdTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVptVpdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVptVpdTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfVptVpdTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmWeight_Object = MibTableColumn
mscAtmIfVptVpdTmWeight = _MscAtmIfVptVpdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 61),
    _MscAtmIfVptVpdTmWeight_Type()
)
mscAtmIfVptVpdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmWeight.setStatus("mandatory")


class _MscAtmIfVptVpdTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_MscAtmIfVptVpdTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmForceTagging_Object = MibTableColumn
mscAtmIfVptVpdTmForceTagging = _MscAtmIfVptVpdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 62),
    _MscAtmIfVptVpdTmForceTagging_Type()
)
mscAtmIfVptVpdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmForceTagging.setStatus("mandatory")


class _MscAtmIfVptVpdTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_MscAtmIfVptVpdTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVptVpdTmUsageParameterControl = _MscAtmIfVptVpdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 70),
    _MscAtmIfVptVpdTmUsageParameterControl_Type()
)
mscAtmIfVptVpdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVptVpdTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptVpdTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVptVpdTmBearerClassBbc = _MscAtmIfVptVpdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 71),
    _MscAtmIfVptVpdTmBearerClassBbc_Type()
)
mscAtmIfVptVpdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVptVpdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptVpdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptVpdTmTransferCapabilityBbc = _MscAtmIfVptVpdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 72),
    _MscAtmIfVptVpdTmTransferCapabilityBbc_Type()
)
mscAtmIfVptVpdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVptVpdTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVpdTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmClippingBbc_Object = MibTableColumn
mscAtmIfVptVpdTmClippingBbc = _MscAtmIfVptVpdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 74),
    _MscAtmIfVptVpdTmClippingBbc_Type()
)
mscAtmIfVptVpdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVptVpdTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVptVpdTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmBestEffort_Object = MibTableColumn
mscAtmIfVptVpdTmBestEffort = _MscAtmIfVptVpdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 75),
    _MscAtmIfVptVpdTmBestEffort_Type()
)
mscAtmIfVptVpdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBestEffort.setStatus("mandatory")


class _MscAtmIfVptVpdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptVpdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptVpdTmTxPacketWiseDiscard = _MscAtmIfVptVpdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 76),
    _MscAtmIfVptVpdTmTxPacketWiseDiscard_Type()
)
mscAtmIfVptVpdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptVpdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptVpdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptVpdTmRxPacketWiseDiscard = _MscAtmIfVptVpdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 78),
    _MscAtmIfVptVpdTmRxPacketWiseDiscard_Type()
)
mscAtmIfVptVpdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptVpdTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVptVpdTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVptVpdTmAbrConnectionType = _MscAtmIfVptVpdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 100, 1, 90),
    _MscAtmIfVptVpdTmAbrConnectionType_Type()
)
mscAtmIfVptVpdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVptVpdTmTxTdpTable_Object = MibTable
mscAtmIfVptVpdTmTxTdpTable = _MscAtmIfVptVpdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 456)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVptVpdTmTxTdpEntry_Object = MibTableRow
mscAtmIfVptVpdTmTxTdpEntry = _MscAtmIfVptVpdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 456, 1)
)
mscAtmIfVptVpdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVpdTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVptVpdTmTxTdpIndex = _MscAtmIfVptVpdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 456, 1, 1),
    _MscAtmIfVptVpdTmTxTdpIndex_Type()
)
mscAtmIfVptVpdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptVpdTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmTxTdpValue_Object = MibTableColumn
mscAtmIfVptVpdTmTxTdpValue = _MscAtmIfVptVpdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 456, 1, 2),
    _MscAtmIfVptVpdTmTxTdpValue_Type()
)
mscAtmIfVptVpdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVptVpdTmRxTdpTable_Object = MibTable
mscAtmIfVptVpdTmRxTdpTable = _MscAtmIfVptVpdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 457)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVptVpdTmRxTdpEntry_Object = MibTableRow
mscAtmIfVptVpdTmRxTdpEntry = _MscAtmIfVptVpdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 457, 1)
)
mscAtmIfVptVpdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVpdTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVptVpdTmRxTdpIndex = _MscAtmIfVptVpdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 457, 1, 1),
    _MscAtmIfVptVpdTmRxTdpIndex_Type()
)
mscAtmIfVptVpdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptVpdTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmRxTdpValue_Object = MibTableColumn
mscAtmIfVptVpdTmRxTdpValue = _MscAtmIfVptVpdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 457, 1, 2),
    _MscAtmIfVptVpdTmRxTdpValue_Type()
)
mscAtmIfVptVpdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVptVpdTmFqpTable_Object = MibTable
mscAtmIfVptVpdTmFqpTable = _MscAtmIfVptVpdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 458)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmFqpTable.setStatus("mandatory")
_MscAtmIfVptVpdTmFqpEntry_Object = MibTableRow
mscAtmIfVptVpdTmFqpEntry = _MscAtmIfVptVpdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 458, 1)
)
mscAtmIfVptVpdTmFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmFqpEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTmFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVpdTmFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmFqpIndex_Object = MibTableColumn
mscAtmIfVptVpdTmFqpIndex = _MscAtmIfVptVpdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 458, 1, 1),
    _MscAtmIfVptVpdTmFqpIndex_Type()
)
mscAtmIfVptVpdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmFqpIndex.setStatus("mandatory")


class _MscAtmIfVptVpdTmFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdTmFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmFqpValue_Object = MibTableColumn
mscAtmIfVptVpdTmFqpValue = _MscAtmIfVptVpdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 458, 1, 2),
    _MscAtmIfVptVpdTmFqpValue_Type()
)
mscAtmIfVptVpdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmFqpValue.setStatus("mandatory")
_MscAtmIfVptVpdTmBqpTable_Object = MibTable
mscAtmIfVptVpdTmBqpTable = _MscAtmIfVptVpdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 459)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBqpTable.setStatus("mandatory")
_MscAtmIfVptVpdTmBqpEntry_Object = MibTableRow
mscAtmIfVptVpdTmBqpEntry = _MscAtmIfVptVpdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 459, 1)
)
mscAtmIfVptVpdTmBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBqpEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTmBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVpdTmBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTmBqpIndex_Object = MibTableColumn
mscAtmIfVptVpdTmBqpIndex = _MscAtmIfVptVpdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 459, 1, 1),
    _MscAtmIfVptVpdTmBqpIndex_Type()
)
mscAtmIfVptVpdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBqpIndex.setStatus("mandatory")


class _MscAtmIfVptVpdTmBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdTmBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTmBqpValue_Object = MibTableColumn
mscAtmIfVptVpdTmBqpValue = _MscAtmIfVptVpdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 2, 459, 1, 2),
    _MscAtmIfVptVpdTmBqpValue_Type()
)
mscAtmIfVptVpdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTmBqpValue.setStatus("mandatory")
_MscAtmIfVptVpdLbkTable_Object = MibTable
mscAtmIfVptVpdLbkTable = _MscAtmIfVptVpdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdLbkTable.setStatus("mandatory")
_MscAtmIfVptVpdLbkEntry_Object = MibTableRow
mscAtmIfVptVpdLbkEntry = _MscAtmIfVptVpdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 100, 1)
)
mscAtmIfVptVpdLbkEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdLbkEntry.setStatus("mandatory")


class _MscAtmIfVptVpdSegLinkSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVptVpdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVpdSegLinkSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVptVpdSegLinkSideLoopback_Object = MibTableColumn
mscAtmIfVptVpdSegLinkSideLoopback = _MscAtmIfVptVpdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 100, 1, 10),
    _MscAtmIfVptVpdSegLinkSideLoopback_Type()
)
mscAtmIfVptVpdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdSegLinkSideLoopback.setStatus("mandatory")


class _MscAtmIfVptVpdSegSwitchSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVptVpdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVpdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVptVpdSegSwitchSideLoopback_Object = MibTableColumn
mscAtmIfVptVpdSegSwitchSideLoopback = _MscAtmIfVptVpdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 100, 1, 20),
    _MscAtmIfVptVpdSegSwitchSideLoopback_Type()
)
mscAtmIfVptVpdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdSegSwitchSideLoopback.setStatus("mandatory")


class _MscAtmIfVptVpdEndToEndLoopback_Type(Integer32):
    """Custom type mscAtmIfVptVpdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVpdEndToEndLoopback_Type.__name__ = "Integer32"
_MscAtmIfVptVpdEndToEndLoopback_Object = MibTableColumn
mscAtmIfVptVpdEndToEndLoopback = _MscAtmIfVptVpdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 100, 1, 30),
    _MscAtmIfVptVpdEndToEndLoopback_Type()
)
mscAtmIfVptVpdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdEndToEndLoopback.setStatus("mandatory")


class _MscAtmIfVptVpdMCastConnectionType_Type(Integer32):
    """Custom type mscAtmIfVptVpdMCastConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipointLeaf", 2),
          ("pointToMultipointRoot", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVptVpdMCastConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdMCastConnectionType_Object = MibTableColumn
mscAtmIfVptVpdMCastConnectionType = _MscAtmIfVptVpdMCastConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 100, 1, 50),
    _MscAtmIfVptVpdMCastConnectionType_Type()
)
mscAtmIfVptVpdMCastConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdMCastConnectionType.setStatus("mandatory")
_MscAtmIfVptVpdTrafficTable_Object = MibTable
mscAtmIfVptVpdTrafficTable = _MscAtmIfVptVpdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTrafficTable.setStatus("mandatory")
_MscAtmIfVptVpdTrafficEntry_Object = MibTableRow
mscAtmIfVptVpdTrafficEntry = _MscAtmIfVptVpdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1)
)
mscAtmIfVptVpdTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTrafficEntry.setStatus("mandatory")


class _MscAtmIfVptVpdTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVpdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptVpdTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVpdTxTrafficDescType = _MscAtmIfVptVpdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 10),
    _MscAtmIfVptVpdTxTrafficDescType_Type()
)
mscAtmIfVptVpdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptVpdTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVpdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptVpdTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTxQosClass_Object = MibTableColumn
mscAtmIfVptVpdTxQosClass = _MscAtmIfVptVpdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 20),
    _MscAtmIfVptVpdTxQosClass_Type()
)
mscAtmIfVptVpdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTxQosClass.setStatus("obsolete")


class _MscAtmIfVptVpdFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVpdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVpdFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVpdFwdQosClass_Object = MibTableColumn
mscAtmIfVptVpdFwdQosClass = _MscAtmIfVptVpdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 21),
    _MscAtmIfVptVpdFwdQosClass_Type()
)
mscAtmIfVptVpdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdFwdQosClass.setStatus("obsolete")


class _MscAtmIfVptVpdHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVpdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVpdHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVpdHoldingPriority_Object = MibTableColumn
mscAtmIfVptVpdHoldingPriority = _MscAtmIfVptVpdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 25),
    _MscAtmIfVptVpdHoldingPriority_Type()
)
mscAtmIfVptVpdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdHoldingPriority.setStatus("obsolete")


class _MscAtmIfVptVpdRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVpdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_MscAtmIfVptVpdRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVpdRxTrafficDescType = _MscAtmIfVptVpdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 30),
    _MscAtmIfVptVpdRxTrafficDescType_Type()
)
mscAtmIfVptVpdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptVpdRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVpdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptVpdRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVpdRxQosClass_Object = MibTableColumn
mscAtmIfVptVpdRxQosClass = _MscAtmIfVptVpdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 40),
    _MscAtmIfVptVpdRxQosClass_Type()
)
mscAtmIfVptVpdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRxQosClass.setStatus("obsolete")


class _MscAtmIfVptVpdBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVpdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVptVpdBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVpdBwdQosClass_Object = MibTableColumn
mscAtmIfVptVpdBwdQosClass = _MscAtmIfVptVpdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 41),
    _MscAtmIfVptVpdBwdQosClass_Type()
)
mscAtmIfVptVpdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBwdQosClass.setStatus("obsolete")


class _MscAtmIfVptVpdAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptVpdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptVpdAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptVpdAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptVpdAtmServiceCategory = _MscAtmIfVptVpdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 42),
    _MscAtmIfVptVpdAtmServiceCategory_Type()
)
mscAtmIfVptVpdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVptVpdTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptVpdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVpdTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTrafficShaping_Object = MibTableColumn
mscAtmIfVptVpdTrafficShaping = _MscAtmIfVptVpdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 50),
    _MscAtmIfVptVpdTrafficShaping_Type()
)
mscAtmIfVptVpdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTrafficShaping.setStatus("obsolete")


class _MscAtmIfVptVpdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptVpdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_MscAtmIfVptVpdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptVpdUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptVpdUnshapedTransmitQueueing = _MscAtmIfVptVpdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 60),
    _MscAtmIfVptVpdUnshapedTransmitQueueing_Type()
)
mscAtmIfVptVpdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVptVpdUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptVpdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVpdUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptVpdUsageParameterControl_Object = MibTableColumn
mscAtmIfVptVpdUsageParameterControl = _MscAtmIfVptVpdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 70),
    _MscAtmIfVptVpdUsageParameterControl_Type()
)
mscAtmIfVptVpdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVptVpdBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptVpdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptVpdBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVpdBearerClassBbc_Object = MibTableColumn
mscAtmIfVptVpdBearerClassBbc = _MscAtmIfVptVpdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 71),
    _MscAtmIfVptVpdBearerClassBbc_Type()
)
mscAtmIfVptVpdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVptVpdTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptVpdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptVpdTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptVpdTransferCapabilityBbc = _MscAtmIfVptVpdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 72),
    _MscAtmIfVptVpdTransferCapabilityBbc_Type()
)
mscAtmIfVptVpdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVptVpdClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptVpdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVpdClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVpdClippingBbc_Object = MibTableColumn
mscAtmIfVptVpdClippingBbc = _MscAtmIfVptVpdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 74),
    _MscAtmIfVptVpdClippingBbc_Type()
)
mscAtmIfVptVpdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdClippingBbc.setStatus("obsolete")


class _MscAtmIfVptVpdBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptVpdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVptVpdBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptVpdBestEffort_Object = MibTableColumn
mscAtmIfVptVpdBestEffort = _MscAtmIfVptVpdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 75),
    _MscAtmIfVptVpdBestEffort_Type()
)
mscAtmIfVptVpdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBestEffort.setStatus("obsolete")


class _MscAtmIfVptVpdFwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVpdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVptVpdFwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVpdFwdFrameDiscard_Object = MibTableColumn
mscAtmIfVptVpdFwdFrameDiscard = _MscAtmIfVptVpdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 76),
    _MscAtmIfVptVpdFwdFrameDiscard_Type()
)
mscAtmIfVptVpdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdFwdFrameDiscard.setStatus("obsolete")


class _MscAtmIfVptVpdBwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVpdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVptVpdBwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVpdBwdFrameDiscard_Object = MibTableColumn
mscAtmIfVptVpdBwdFrameDiscard = _MscAtmIfVptVpdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 110, 1, 77),
    _MscAtmIfVptVpdBwdFrameDiscard_Type()
)
mscAtmIfVptVpdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBwdFrameDiscard.setStatus("obsolete")
_MscAtmIfVptVpdAcctTable_Object = MibTable
mscAtmIfVptVpdAcctTable = _MscAtmIfVptVpdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 111)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdAcctTable.setStatus("mandatory")
_MscAtmIfVptVpdAcctEntry_Object = MibTableRow
mscAtmIfVptVpdAcctEntry = _MscAtmIfVptVpdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 111, 1)
)
mscAtmIfVptVpdAcctEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdAcctEntry.setStatus("mandatory")


class _MscAtmIfVptVpdCorrelationTag_Type(AsciiString):
    """Custom type mscAtmIfVptVpdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_MscAtmIfVptVpdCorrelationTag_Type.__name__ = "AsciiString"
_MscAtmIfVptVpdCorrelationTag_Object = MibTableColumn
mscAtmIfVptVpdCorrelationTag = _MscAtmIfVptVpdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 111, 1, 10),
    _MscAtmIfVptVpdCorrelationTag_Type()
)
mscAtmIfVptVpdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdCorrelationTag.setStatus("mandatory")
_MscAtmIfVptVpdProvTable_Object = MibTable
mscAtmIfVptVpdProvTable = _MscAtmIfVptVpdProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 112)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdProvTable.setStatus("mandatory")
_MscAtmIfVptVpdProvEntry_Object = MibTableRow
mscAtmIfVptVpdProvEntry = _MscAtmIfVptVpdProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 112, 1)
)
mscAtmIfVptVpdProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdProvEntry.setStatus("mandatory")


class _MscAtmIfVptVpdVptType_Type(Integer32):
    """Custom type mscAtmIfVptVpdVptType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("standard", 1))
    )


_MscAtmIfVptVpdVptType_Type.__name__ = "Integer32"
_MscAtmIfVptVpdVptType_Object = MibTableColumn
mscAtmIfVptVpdVptType = _MscAtmIfVptVpdVptType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 112, 1, 10),
    _MscAtmIfVptVpdVptType_Type()
)
mscAtmIfVptVpdVptType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdVptType.setStatus("mandatory")
_MscAtmIfVptVpdTxTdpTable_Object = MibTable
mscAtmIfVptVpdTxTdpTable = _MscAtmIfVptVpdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 297)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTxTdpTable.setStatus("obsolete")
_MscAtmIfVptVpdTxTdpEntry_Object = MibTableRow
mscAtmIfVptVpdTxTdpEntry = _MscAtmIfVptVpdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 297, 1)
)
mscAtmIfVptVpdTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptVpdTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVpdTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdTxTdpIndex_Object = MibTableColumn
mscAtmIfVptVpdTxTdpIndex = _MscAtmIfVptVpdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 297, 1, 1),
    _MscAtmIfVptVpdTxTdpIndex_Type()
)
mscAtmIfVptVpdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptVpdTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdTxTdpValue_Object = MibTableColumn
mscAtmIfVptVpdTxTdpValue = _MscAtmIfVptVpdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 297, 1, 2),
    _MscAtmIfVptVpdTxTdpValue_Type()
)
mscAtmIfVptVpdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdTxTdpValue.setStatus("obsolete")
_MscAtmIfVptVpdRxTdpTable_Object = MibTable
mscAtmIfVptVpdRxTdpTable = _MscAtmIfVptVpdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 298)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRxTdpTable.setStatus("obsolete")
_MscAtmIfVptVpdRxTdpEntry_Object = MibTableRow
mscAtmIfVptVpdRxTdpEntry = _MscAtmIfVptVpdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 298, 1)
)
mscAtmIfVptVpdRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptVpdRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVpdRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdRxTdpIndex_Object = MibTableColumn
mscAtmIfVptVpdRxTdpIndex = _MscAtmIfVptVpdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 298, 1, 1),
    _MscAtmIfVptVpdRxTdpIndex_Type()
)
mscAtmIfVptVpdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptVpdRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdRxTdpValue_Object = MibTableColumn
mscAtmIfVptVpdRxTdpValue = _MscAtmIfVptVpdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 298, 1, 2),
    _MscAtmIfVptVpdRxTdpValue_Type()
)
mscAtmIfVptVpdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdRxTdpValue.setStatus("obsolete")
_MscAtmIfVptVpdFqpTable_Object = MibTable
mscAtmIfVptVpdFqpTable = _MscAtmIfVptVpdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 359)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdFqpTable.setStatus("obsolete")
_MscAtmIfVptVpdFqpEntry_Object = MibTableRow
mscAtmIfVptVpdFqpEntry = _MscAtmIfVptVpdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 359, 1)
)
mscAtmIfVptVpdFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdFqpEntry.setStatus("obsolete")


class _MscAtmIfVptVpdFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVpdFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdFqpIndex_Object = MibTableColumn
mscAtmIfVptVpdFqpIndex = _MscAtmIfVptVpdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 359, 1, 1),
    _MscAtmIfVptVpdFqpIndex_Type()
)
mscAtmIfVptVpdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdFqpIndex.setStatus("obsolete")


class _MscAtmIfVptVpdFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdFqpValue_Object = MibTableColumn
mscAtmIfVptVpdFqpValue = _MscAtmIfVptVpdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 359, 1, 2),
    _MscAtmIfVptVpdFqpValue_Type()
)
mscAtmIfVptVpdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdFqpValue.setStatus("obsolete")
_MscAtmIfVptVpdBqpTable_Object = MibTable
mscAtmIfVptVpdBqpTable = _MscAtmIfVptVpdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 360)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBqpTable.setStatus("obsolete")
_MscAtmIfVptVpdBqpEntry_Object = MibTableRow
mscAtmIfVptVpdBqpEntry = _MscAtmIfVptVpdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 360, 1)
)
mscAtmIfVptVpdBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVpdBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBqpEntry.setStatus("obsolete")


class _MscAtmIfVptVpdBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVpdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVpdBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVpdBqpIndex_Object = MibTableColumn
mscAtmIfVptVpdBqpIndex = _MscAtmIfVptVpdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 360, 1, 1),
    _MscAtmIfVptVpdBqpIndex_Type()
)
mscAtmIfVptVpdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBqpIndex.setStatus("obsolete")


class _MscAtmIfVptVpdBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVpdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVpdBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVpdBqpValue_Object = MibTableColumn
mscAtmIfVptVpdBqpValue = _MscAtmIfVptVpdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 2, 360, 1, 2),
    _MscAtmIfVptVpdBqpValue_Type()
)
mscAtmIfVptVpdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVpdBqpValue.setStatus("obsolete")
_MscAtmIfVptCA_ObjectIdentity = ObjectIdentity
mscAtmIfVptCA = _MscAtmIfVptCA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5)
)
_MscAtmIfVptCARowStatusTable_Object = MibTable
mscAtmIfVptCARowStatusTable = _MscAtmIfVptCARowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCARowStatusTable.setStatus("mandatory")
_MscAtmIfVptCARowStatusEntry_Object = MibTableRow
mscAtmIfVptCARowStatusEntry = _MscAtmIfVptCARowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 1, 1)
)
mscAtmIfVptCARowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCARowStatusEntry.setStatus("mandatory")
_MscAtmIfVptCARowStatus_Type = RowStatus
_MscAtmIfVptCARowStatus_Object = MibTableColumn
mscAtmIfVptCARowStatus = _MscAtmIfVptCARowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 1, 1, 1),
    _MscAtmIfVptCARowStatus_Type()
)
mscAtmIfVptCARowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCARowStatus.setStatus("mandatory")
_MscAtmIfVptCAComponentName_Type = DisplayString
_MscAtmIfVptCAComponentName_Object = MibTableColumn
mscAtmIfVptCAComponentName = _MscAtmIfVptCAComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 1, 1, 2),
    _MscAtmIfVptCAComponentName_Type()
)
mscAtmIfVptCAComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAComponentName.setStatus("mandatory")
_MscAtmIfVptCAStorageType_Type = StorageType
_MscAtmIfVptCAStorageType_Object = MibTableColumn
mscAtmIfVptCAStorageType = _MscAtmIfVptCAStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 1, 1, 4),
    _MscAtmIfVptCAStorageType_Type()
)
mscAtmIfVptCAStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAStorageType.setStatus("mandatory")
_MscAtmIfVptCAIndex_Type = NonReplicated
_MscAtmIfVptCAIndex_Object = MibTableColumn
mscAtmIfVptCAIndex = _MscAtmIfVptCAIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 1, 1, 10),
    _MscAtmIfVptCAIndex_Type()
)
mscAtmIfVptCAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAIndex.setStatus("mandatory")
_MscAtmIfVptCACbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptCACbr = _MscAtmIfVptCACbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2)
)
_MscAtmIfVptCACbrRowStatusTable_Object = MibTable
mscAtmIfVptCACbrRowStatusTable = _MscAtmIfVptCACbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptCACbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptCACbrRowStatusEntry = _MscAtmIfVptCACbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 1, 1)
)
mscAtmIfVptCACbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCACbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptCACbrRowStatus_Type = RowStatus
_MscAtmIfVptCACbrRowStatus_Object = MibTableColumn
mscAtmIfVptCACbrRowStatus = _MscAtmIfVptCACbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 1, 1, 1),
    _MscAtmIfVptCACbrRowStatus_Type()
)
mscAtmIfVptCACbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrRowStatus.setStatus("mandatory")
_MscAtmIfVptCACbrComponentName_Type = DisplayString
_MscAtmIfVptCACbrComponentName_Object = MibTableColumn
mscAtmIfVptCACbrComponentName = _MscAtmIfVptCACbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 1, 1, 2),
    _MscAtmIfVptCACbrComponentName_Type()
)
mscAtmIfVptCACbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrComponentName.setStatus("mandatory")
_MscAtmIfVptCACbrStorageType_Type = StorageType
_MscAtmIfVptCACbrStorageType_Object = MibTableColumn
mscAtmIfVptCACbrStorageType = _MscAtmIfVptCACbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 1, 1, 4),
    _MscAtmIfVptCACbrStorageType_Type()
)
mscAtmIfVptCACbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrStorageType.setStatus("mandatory")


class _MscAtmIfVptCACbrIndex_Type(Integer32):
    """Custom type mscAtmIfVptCACbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfVptCACbrIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCACbrIndex_Object = MibTableColumn
mscAtmIfVptCACbrIndex = _MscAtmIfVptCACbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 1, 1, 10),
    _MscAtmIfVptCACbrIndex_Type()
)
mscAtmIfVptCACbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrIndex.setStatus("mandatory")
_MscAtmIfVptCACbrProvTable_Object = MibTable
mscAtmIfVptCACbrProvTable = _MscAtmIfVptCACbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrProvTable.setStatus("mandatory")
_MscAtmIfVptCACbrProvEntry_Object = MibTableRow
mscAtmIfVptCACbrProvEntry = _MscAtmIfVptCACbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100, 1)
)
mscAtmIfVptCACbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCACbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptCACbrPool_Type(Integer32):
    """Custom type mscAtmIfVptCACbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfVptCACbrPool_Type.__name__ = "Integer32"
_MscAtmIfVptCACbrPool_Object = MibTableColumn
mscAtmIfVptCACbrPool = _MscAtmIfVptCACbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100, 1, 10),
    _MscAtmIfVptCACbrPool_Type()
)
mscAtmIfVptCACbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrPool.setStatus("mandatory")


class _MscAtmIfVptCACbrCdvt_Type(Unsigned32):
    """Custom type mscAtmIfVptCACbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_MscAtmIfVptCACbrCdvt_Type.__name__ = "Unsigned32"
_MscAtmIfVptCACbrCdvt_Object = MibTableColumn
mscAtmIfVptCACbrCdvt = _MscAtmIfVptCACbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100, 1, 20),
    _MscAtmIfVptCACbrCdvt_Type()
)
mscAtmIfVptCACbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrCdvt.setStatus("mandatory")


class _MscAtmIfVptCACbrCdv_Type(Unsigned32):
    """Custom type mscAtmIfVptCACbrCdv based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCACbrCdv_Type.__name__ = "Unsigned32"
_MscAtmIfVptCACbrCdv_Object = MibTableColumn
mscAtmIfVptCACbrCdv = _MscAtmIfVptCACbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100, 1, 30),
    _MscAtmIfVptCACbrCdv_Type()
)
mscAtmIfVptCACbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrCdv.setStatus("mandatory")


class _MscAtmIfVptCACbrMaxCtd_Type(Unsigned32):
    """Custom type mscAtmIfVptCACbrMaxCtd based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCACbrMaxCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVptCACbrMaxCtd_Object = MibTableColumn
mscAtmIfVptCACbrMaxCtd = _MscAtmIfVptCACbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100, 1, 40),
    _MscAtmIfVptCACbrMaxCtd_Type()
)
mscAtmIfVptCACbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrMaxCtd.setStatus("mandatory")


class _MscAtmIfVptCACbrCellLossRatio_Type(Unsigned32):
    """Custom type mscAtmIfVptCACbrCellLossRatio based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptCACbrCellLossRatio_Type.__name__ = "Unsigned32"
_MscAtmIfVptCACbrCellLossRatio_Object = MibTableColumn
mscAtmIfVptCACbrCellLossRatio = _MscAtmIfVptCACbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 2, 100, 1, 50),
    _MscAtmIfVptCACbrCellLossRatio_Type()
)
mscAtmIfVptCACbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCACbrCellLossRatio.setStatus("mandatory")
_MscAtmIfVptCARtVbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptCARtVbr = _MscAtmIfVptCARtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3)
)
_MscAtmIfVptCARtVbrRowStatusTable_Object = MibTable
mscAtmIfVptCARtVbrRowStatusTable = _MscAtmIfVptCARtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptCARtVbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptCARtVbrRowStatusEntry = _MscAtmIfVptCARtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 1, 1)
)
mscAtmIfVptCARtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptCARtVbrRowStatus_Type = RowStatus
_MscAtmIfVptCARtVbrRowStatus_Object = MibTableColumn
mscAtmIfVptCARtVbrRowStatus = _MscAtmIfVptCARtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 1, 1, 1),
    _MscAtmIfVptCARtVbrRowStatus_Type()
)
mscAtmIfVptCARtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrRowStatus.setStatus("mandatory")
_MscAtmIfVptCARtVbrComponentName_Type = DisplayString
_MscAtmIfVptCARtVbrComponentName_Object = MibTableColumn
mscAtmIfVptCARtVbrComponentName = _MscAtmIfVptCARtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 1, 1, 2),
    _MscAtmIfVptCARtVbrComponentName_Type()
)
mscAtmIfVptCARtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrComponentName.setStatus("mandatory")
_MscAtmIfVptCARtVbrStorageType_Type = StorageType
_MscAtmIfVptCARtVbrStorageType_Object = MibTableColumn
mscAtmIfVptCARtVbrStorageType = _MscAtmIfVptCARtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 1, 1, 4),
    _MscAtmIfVptCARtVbrStorageType_Type()
)
mscAtmIfVptCARtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrStorageType.setStatus("mandatory")


class _MscAtmIfVptCARtVbrIndex_Type(Integer32):
    """Custom type mscAtmIfVptCARtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfVptCARtVbrIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCARtVbrIndex_Object = MibTableColumn
mscAtmIfVptCARtVbrIndex = _MscAtmIfVptCARtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 1, 1, 10),
    _MscAtmIfVptCARtVbrIndex_Type()
)
mscAtmIfVptCARtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrIndex.setStatus("mandatory")
_MscAtmIfVptCARtVbrProvTable_Object = MibTable
mscAtmIfVptCARtVbrProvTable = _MscAtmIfVptCARtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrProvTable.setStatus("mandatory")
_MscAtmIfVptCARtVbrProvEntry_Object = MibTableRow
mscAtmIfVptCARtVbrProvEntry = _MscAtmIfVptCARtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 100, 1)
)
mscAtmIfVptCARtVbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptCARtVbrPool_Type(Integer32):
    """Custom type mscAtmIfVptCARtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfVptCARtVbrPool_Type.__name__ = "Integer32"
_MscAtmIfVptCARtVbrPool_Object = MibTableColumn
mscAtmIfVptCARtVbrPool = _MscAtmIfVptCARtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 100, 1, 10),
    _MscAtmIfVptCARtVbrPool_Type()
)
mscAtmIfVptCARtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrPool.setStatus("mandatory")


class _MscAtmIfVptCARtVbrCdv_Type(Unsigned32):
    """Custom type mscAtmIfVptCARtVbrCdv based on Unsigned32"""
    defaultValue = 1268

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCARtVbrCdv_Type.__name__ = "Unsigned32"
_MscAtmIfVptCARtVbrCdv_Object = MibTableColumn
mscAtmIfVptCARtVbrCdv = _MscAtmIfVptCARtVbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 100, 1, 30),
    _MscAtmIfVptCARtVbrCdv_Type()
)
mscAtmIfVptCARtVbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrCdv.setStatus("mandatory")


class _MscAtmIfVptCARtVbrMaxCtd_Type(Unsigned32):
    """Custom type mscAtmIfVptCARtVbrMaxCtd based on Unsigned32"""
    defaultValue = 2000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCARtVbrMaxCtd_Type.__name__ = "Unsigned32"
_MscAtmIfVptCARtVbrMaxCtd_Object = MibTableColumn
mscAtmIfVptCARtVbrMaxCtd = _MscAtmIfVptCARtVbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 100, 1, 40),
    _MscAtmIfVptCARtVbrMaxCtd_Type()
)
mscAtmIfVptCARtVbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrMaxCtd.setStatus("mandatory")


class _MscAtmIfVptCARtVbrCellLossRatio_Type(Unsigned32):
    """Custom type mscAtmIfVptCARtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptCARtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_MscAtmIfVptCARtVbrCellLossRatio_Object = MibTableColumn
mscAtmIfVptCARtVbrCellLossRatio = _MscAtmIfVptCARtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 3, 100, 1, 50),
    _MscAtmIfVptCARtVbrCellLossRatio_Type()
)
mscAtmIfVptCARtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCARtVbrCellLossRatio.setStatus("mandatory")
_MscAtmIfVptCANrtVbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptCANrtVbr = _MscAtmIfVptCANrtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4)
)
_MscAtmIfVptCANrtVbrRowStatusTable_Object = MibTable
mscAtmIfVptCANrtVbrRowStatusTable = _MscAtmIfVptCANrtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptCANrtVbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptCANrtVbrRowStatusEntry = _MscAtmIfVptCANrtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 1, 1)
)
mscAtmIfVptCANrtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptCANrtVbrRowStatus_Type = RowStatus
_MscAtmIfVptCANrtVbrRowStatus_Object = MibTableColumn
mscAtmIfVptCANrtVbrRowStatus = _MscAtmIfVptCANrtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 1, 1, 1),
    _MscAtmIfVptCANrtVbrRowStatus_Type()
)
mscAtmIfVptCANrtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrRowStatus.setStatus("mandatory")
_MscAtmIfVptCANrtVbrComponentName_Type = DisplayString
_MscAtmIfVptCANrtVbrComponentName_Object = MibTableColumn
mscAtmIfVptCANrtVbrComponentName = _MscAtmIfVptCANrtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 1, 1, 2),
    _MscAtmIfVptCANrtVbrComponentName_Type()
)
mscAtmIfVptCANrtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrComponentName.setStatus("mandatory")
_MscAtmIfVptCANrtVbrStorageType_Type = StorageType
_MscAtmIfVptCANrtVbrStorageType_Object = MibTableColumn
mscAtmIfVptCANrtVbrStorageType = _MscAtmIfVptCANrtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 1, 1, 4),
    _MscAtmIfVptCANrtVbrStorageType_Type()
)
mscAtmIfVptCANrtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrStorageType.setStatus("mandatory")


class _MscAtmIfVptCANrtVbrIndex_Type(Integer32):
    """Custom type mscAtmIfVptCANrtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfVptCANrtVbrIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCANrtVbrIndex_Object = MibTableColumn
mscAtmIfVptCANrtVbrIndex = _MscAtmIfVptCANrtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 1, 1, 10),
    _MscAtmIfVptCANrtVbrIndex_Type()
)
mscAtmIfVptCANrtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrIndex.setStatus("mandatory")
_MscAtmIfVptCANrtVbrProvTable_Object = MibTable
mscAtmIfVptCANrtVbrProvTable = _MscAtmIfVptCANrtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrProvTable.setStatus("mandatory")
_MscAtmIfVptCANrtVbrProvEntry_Object = MibTableRow
mscAtmIfVptCANrtVbrProvEntry = _MscAtmIfVptCANrtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 100, 1)
)
mscAtmIfVptCANrtVbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptCANrtVbrPool_Type(Integer32):
    """Custom type mscAtmIfVptCANrtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfVptCANrtVbrPool_Type.__name__ = "Integer32"
_MscAtmIfVptCANrtVbrPool_Object = MibTableColumn
mscAtmIfVptCANrtVbrPool = _MscAtmIfVptCANrtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 100, 1, 1),
    _MscAtmIfVptCANrtVbrPool_Type()
)
mscAtmIfVptCANrtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrPool.setStatus("mandatory")


class _MscAtmIfVptCANrtVbrCellLossRatio_Type(Unsigned32):
    """Custom type mscAtmIfVptCANrtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptCANrtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_MscAtmIfVptCANrtVbrCellLossRatio_Object = MibTableColumn
mscAtmIfVptCANrtVbrCellLossRatio = _MscAtmIfVptCANrtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 4, 100, 1, 3),
    _MscAtmIfVptCANrtVbrCellLossRatio_Type()
)
mscAtmIfVptCANrtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCANrtVbrCellLossRatio.setStatus("mandatory")
_MscAtmIfVptCAAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptCAAbr = _MscAtmIfVptCAAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5)
)
_MscAtmIfVptCAAbrRowStatusTable_Object = MibTable
mscAtmIfVptCAAbrRowStatusTable = _MscAtmIfVptCAAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptCAAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptCAAbrRowStatusEntry = _MscAtmIfVptCAAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 1, 1)
)
mscAtmIfVptCAAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptCAAbrRowStatus_Type = RowStatus
_MscAtmIfVptCAAbrRowStatus_Object = MibTableColumn
mscAtmIfVptCAAbrRowStatus = _MscAtmIfVptCAAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 1, 1, 1),
    _MscAtmIfVptCAAbrRowStatus_Type()
)
mscAtmIfVptCAAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrRowStatus.setStatus("mandatory")
_MscAtmIfVptCAAbrComponentName_Type = DisplayString
_MscAtmIfVptCAAbrComponentName_Object = MibTableColumn
mscAtmIfVptCAAbrComponentName = _MscAtmIfVptCAAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 1, 1, 2),
    _MscAtmIfVptCAAbrComponentName_Type()
)
mscAtmIfVptCAAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrComponentName.setStatus("mandatory")
_MscAtmIfVptCAAbrStorageType_Type = StorageType
_MscAtmIfVptCAAbrStorageType_Object = MibTableColumn
mscAtmIfVptCAAbrStorageType = _MscAtmIfVptCAAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 1, 1, 4),
    _MscAtmIfVptCAAbrStorageType_Type()
)
mscAtmIfVptCAAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrStorageType.setStatus("mandatory")


class _MscAtmIfVptCAAbrIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAAbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfVptCAAbrIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAAbrIndex_Object = MibTableColumn
mscAtmIfVptCAAbrIndex = _MscAtmIfVptCAAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 1, 1, 10),
    _MscAtmIfVptCAAbrIndex_Type()
)
mscAtmIfVptCAAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrIndex.setStatus("mandatory")
_MscAtmIfVptCAAbrProvTable_Object = MibTable
mscAtmIfVptCAAbrProvTable = _MscAtmIfVptCAAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrProvTable.setStatus("mandatory")
_MscAtmIfVptCAAbrProvEntry_Object = MibTableRow
mscAtmIfVptCAAbrProvEntry = _MscAtmIfVptCAAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 100, 1)
)
mscAtmIfVptCAAbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptCAAbrPool_Type(Integer32):
    """Custom type mscAtmIfVptCAAbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfVptCAAbrPool_Type.__name__ = "Integer32"
_MscAtmIfVptCAAbrPool_Object = MibTableColumn
mscAtmIfVptCAAbrPool = _MscAtmIfVptCAAbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 5, 100, 1, 10),
    _MscAtmIfVptCAAbrPool_Type()
)
mscAtmIfVptCAAbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAAbrPool.setStatus("mandatory")
_MscAtmIfVptCAUbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptCAUbr = _MscAtmIfVptCAUbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6)
)
_MscAtmIfVptCAUbrRowStatusTable_Object = MibTable
mscAtmIfVptCAUbrRowStatusTable = _MscAtmIfVptCAUbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptCAUbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptCAUbrRowStatusEntry = _MscAtmIfVptCAUbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 1, 1)
)
mscAtmIfVptCAUbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAUbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptCAUbrRowStatus_Type = RowStatus
_MscAtmIfVptCAUbrRowStatus_Object = MibTableColumn
mscAtmIfVptCAUbrRowStatus = _MscAtmIfVptCAUbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 1, 1, 1),
    _MscAtmIfVptCAUbrRowStatus_Type()
)
mscAtmIfVptCAUbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrRowStatus.setStatus("mandatory")
_MscAtmIfVptCAUbrComponentName_Type = DisplayString
_MscAtmIfVptCAUbrComponentName_Object = MibTableColumn
mscAtmIfVptCAUbrComponentName = _MscAtmIfVptCAUbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 1, 1, 2),
    _MscAtmIfVptCAUbrComponentName_Type()
)
mscAtmIfVptCAUbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrComponentName.setStatus("mandatory")
_MscAtmIfVptCAUbrStorageType_Type = StorageType
_MscAtmIfVptCAUbrStorageType_Object = MibTableColumn
mscAtmIfVptCAUbrStorageType = _MscAtmIfVptCAUbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 1, 1, 4),
    _MscAtmIfVptCAUbrStorageType_Type()
)
mscAtmIfVptCAUbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrStorageType.setStatus("mandatory")


class _MscAtmIfVptCAUbrIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAUbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_MscAtmIfVptCAUbrIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAUbrIndex_Object = MibTableColumn
mscAtmIfVptCAUbrIndex = _MscAtmIfVptCAUbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 1, 1, 10),
    _MscAtmIfVptCAUbrIndex_Type()
)
mscAtmIfVptCAUbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrIndex.setStatus("mandatory")
_MscAtmIfVptCAUbrProvTable_Object = MibTable
mscAtmIfVptCAUbrProvTable = _MscAtmIfVptCAUbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrProvTable.setStatus("mandatory")
_MscAtmIfVptCAUbrProvEntry_Object = MibTableRow
mscAtmIfVptCAUbrProvEntry = _MscAtmIfVptCAUbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 100, 1)
)
mscAtmIfVptCAUbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAUbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptCAUbrMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfVptCAUbrMaxVccs based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
        ValueRangeConstraint(16385, 16385),
    )


_MscAtmIfVptCAUbrMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfVptCAUbrMaxVccs_Object = MibTableColumn
mscAtmIfVptCAUbrMaxVccs = _MscAtmIfVptCAUbrMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 100, 1, 6),
    _MscAtmIfVptCAUbrMaxVccs_Type()
)
mscAtmIfVptCAUbrMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrMaxVccs.setStatus("mandatory")


class _MscAtmIfVptCAUbrPool_Type(Integer32):
    """Custom type mscAtmIfVptCAUbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_MscAtmIfVptCAUbrPool_Type.__name__ = "Integer32"
_MscAtmIfVptCAUbrPool_Object = MibTableColumn
mscAtmIfVptCAUbrPool = _MscAtmIfVptCAUbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 100, 1, 10),
    _MscAtmIfVptCAUbrPool_Type()
)
mscAtmIfVptCAUbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrPool.setStatus("mandatory")


class _MscAtmIfVptCAUbrMinimumCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptCAUbrMinimumCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCAUbrMinimumCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptCAUbrMinimumCellRate_Object = MibTableColumn
mscAtmIfVptCAUbrMinimumCellRate = _MscAtmIfVptCAUbrMinimumCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 100, 1, 11),
    _MscAtmIfVptCAUbrMinimumCellRate_Type()
)
mscAtmIfVptCAUbrMinimumCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrMinimumCellRate.setStatus("mandatory")
_MscAtmIfVptCAUbrOperTable_Object = MibTable
mscAtmIfVptCAUbrOperTable = _MscAtmIfVptCAUbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrOperTable.setStatus("mandatory")
_MscAtmIfVptCAUbrOperEntry_Object = MibTableRow
mscAtmIfVptCAUbrOperEntry = _MscAtmIfVptCAUbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 110, 1)
)
mscAtmIfVptCAUbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAUbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrOperEntry.setStatus("mandatory")


class _MscAtmIfVptCAUbrVccUsage_Type(Unsigned32):
    """Custom type mscAtmIfVptCAUbrVccUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCAUbrVccUsage_Type.__name__ = "Unsigned32"
_MscAtmIfVptCAUbrVccUsage_Object = MibTableColumn
mscAtmIfVptCAUbrVccUsage = _MscAtmIfVptCAUbrVccUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 6, 110, 1, 12),
    _MscAtmIfVptCAUbrVccUsage_Type()
)
mscAtmIfVptCAUbrVccUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAUbrVccUsage.setStatus("mandatory")
_MscAtmIfVptCAProvTable_Object = MibTable
mscAtmIfVptCAProvTable = _MscAtmIfVptCAProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAProvTable.setStatus("mandatory")
_MscAtmIfVptCAProvEntry_Object = MibTableRow
mscAtmIfVptCAProvEntry = _MscAtmIfVptCAProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 100, 1)
)
mscAtmIfVptCAProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAProvEntry.setStatus("mandatory")


class _MscAtmIfVptCAMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfVptCAMaxVccs based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfVptCAMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfVptCAMaxVccs_Object = MibTableColumn
mscAtmIfVptCAMaxVccs = _MscAtmIfVptCAMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 100, 1, 6),
    _MscAtmIfVptCAMaxVccs_Type()
)
mscAtmIfVptCAMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAMaxVccs.setStatus("mandatory")


class _MscAtmIfVptCAPermittedAtmServiceCategories_Type(OctetString):
    """Custom type mscAtmIfVptCAPermittedAtmServiceCategories based on OctetString"""
    defaultHexValue = "f0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptCAPermittedAtmServiceCategories_Type.__name__ = "OctetString"
_MscAtmIfVptCAPermittedAtmServiceCategories_Object = MibTableColumn
mscAtmIfVptCAPermittedAtmServiceCategories = _MscAtmIfVptCAPermittedAtmServiceCategories_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 100, 1, 25),
    _MscAtmIfVptCAPermittedAtmServiceCategories_Type()
)
mscAtmIfVptCAPermittedAtmServiceCategories.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPermittedAtmServiceCategories.setStatus("mandatory")
_MscAtmIfVptCAOperTable_Object = MibTable
mscAtmIfVptCAOperTable = _MscAtmIfVptCAOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAOperTable.setStatus("mandatory")
_MscAtmIfVptCAOperEntry_Object = MibTableRow
mscAtmIfVptCAOperEntry = _MscAtmIfVptCAOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110, 1)
)
mscAtmIfVptCAOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAOperEntry.setStatus("mandatory")


class _MscAtmIfVptCAActualMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfVptCAActualMaxVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCAActualMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfVptCAActualMaxVccs_Object = MibTableColumn
mscAtmIfVptCAActualMaxVccs = _MscAtmIfVptCAActualMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110, 1, 6),
    _MscAtmIfVptCAActualMaxVccs_Type()
)
mscAtmIfVptCAActualMaxVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAActualMaxVccs.setStatus("mandatory")


class _MscAtmIfVptCAPermanentVccs_Type(Unsigned32):
    """Custom type mscAtmIfVptCAPermanentVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCAPermanentVccs_Type.__name__ = "Unsigned32"
_MscAtmIfVptCAPermanentVccs_Object = MibTableColumn
mscAtmIfVptCAPermanentVccs = _MscAtmIfVptCAPermanentVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110, 1, 20),
    _MscAtmIfVptCAPermanentVccs_Type()
)
mscAtmIfVptCAPermanentVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPermanentVccs.setStatus("mandatory")


class _MscAtmIfVptCASwitchedVccs_Type(Gauge32):
    """Custom type mscAtmIfVptCASwitchedVccs based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCASwitchedVccs_Type.__name__ = "Gauge32"
_MscAtmIfVptCASwitchedVccs_Object = MibTableColumn
mscAtmIfVptCASwitchedVccs = _MscAtmIfVptCASwitchedVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110, 1, 30),
    _MscAtmIfVptCASwitchedVccs_Type()
)
mscAtmIfVptCASwitchedVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCASwitchedVccs.setStatus("mandatory")


class _MscAtmIfVptCATroubledVccs_Type(Unsigned32):
    """Custom type mscAtmIfVptCATroubledVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCATroubledVccs_Type.__name__ = "Unsigned32"
_MscAtmIfVptCATroubledVccs_Object = MibTableColumn
mscAtmIfVptCATroubledVccs = _MscAtmIfVptCATroubledVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110, 1, 70),
    _MscAtmIfVptCATroubledVccs_Type()
)
mscAtmIfVptCATroubledVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCATroubledVccs.setStatus("mandatory")


class _MscAtmIfVptCAConnectionPoolUsage_Type(Gauge32):
    """Custom type mscAtmIfVptCAConnectionPoolUsage based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10752),
    )


_MscAtmIfVptCAConnectionPoolUsage_Type.__name__ = "Gauge32"
_MscAtmIfVptCAConnectionPoolUsage_Object = MibTableColumn
mscAtmIfVptCAConnectionPoolUsage = _MscAtmIfVptCAConnectionPoolUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 110, 1, 81),
    _MscAtmIfVptCAConnectionPoolUsage_Type()
)
mscAtmIfVptCAConnectionPoolUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAConnectionPoolUsage.setStatus("mandatory")
_MscAtmIfVptCAPoolAvailBwTable_Object = MibTable
mscAtmIfVptCAPoolAvailBwTable = _MscAtmIfVptCAPoolAvailBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 460)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAvailBwTable.setStatus("mandatory")
_MscAtmIfVptCAPoolAvailBwEntry_Object = MibTableRow
mscAtmIfVptCAPoolAvailBwEntry = _MscAtmIfVptCAPoolAvailBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 460, 1)
)
mscAtmIfVptCAPoolAvailBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAPoolAvailBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAvailBwEntry.setStatus("mandatory")


class _MscAtmIfVptCAPoolAvailBwIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolAvailBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCAPoolAvailBwIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolAvailBwIndex_Object = MibTableColumn
mscAtmIfVptCAPoolAvailBwIndex = _MscAtmIfVptCAPoolAvailBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 460, 1, 1),
    _MscAtmIfVptCAPoolAvailBwIndex_Type()
)
mscAtmIfVptCAPoolAvailBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAvailBwIndex.setStatus("mandatory")


class _MscAtmIfVptCAPoolAvailBwValue_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolAvailBwValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCAPoolAvailBwValue_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolAvailBwValue_Object = MibTableColumn
mscAtmIfVptCAPoolAvailBwValue = _MscAtmIfVptCAPoolAvailBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 460, 1, 2),
    _MscAtmIfVptCAPoolAvailBwValue_Type()
)
mscAtmIfVptCAPoolAvailBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAvailBwValue.setStatus("mandatory")
_MscAtmIfVptCABwPoolTable_Object = MibTable
mscAtmIfVptCABwPoolTable = _MscAtmIfVptCABwPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 461)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCABwPoolTable.setStatus("mandatory")
_MscAtmIfVptCABwPoolEntry_Object = MibTableRow
mscAtmIfVptCABwPoolEntry = _MscAtmIfVptCABwPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 461, 1)
)
mscAtmIfVptCABwPoolEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCABwPoolIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCABwPoolEntry.setStatus("mandatory")


class _MscAtmIfVptCABwPoolIndex_Type(Integer32):
    """Custom type mscAtmIfVptCABwPoolIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCABwPoolIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCABwPoolIndex_Object = MibTableColumn
mscAtmIfVptCABwPoolIndex = _MscAtmIfVptCABwPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 461, 1, 1),
    _MscAtmIfVptCABwPoolIndex_Type()
)
mscAtmIfVptCABwPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCABwPoolIndex.setStatus("mandatory")


class _MscAtmIfVptCABwPoolValue_Type(Unsigned32):
    """Custom type mscAtmIfVptCABwPoolValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12800),
    )


_MscAtmIfVptCABwPoolValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptCABwPoolValue_Object = MibTableColumn
mscAtmIfVptCABwPoolValue = _MscAtmIfVptCABwPoolValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 461, 1, 2),
    _MscAtmIfVptCABwPoolValue_Type()
)
mscAtmIfVptCABwPoolValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptCABwPoolValue.setStatus("mandatory")
_MscAtmIfVptCAPoolProvBwTable_Object = MibTable
mscAtmIfVptCAPoolProvBwTable = _MscAtmIfVptCAPoolProvBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 462)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolProvBwTable.setStatus("mandatory")
_MscAtmIfVptCAPoolProvBwEntry_Object = MibTableRow
mscAtmIfVptCAPoolProvBwEntry = _MscAtmIfVptCAPoolProvBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 462, 1)
)
mscAtmIfVptCAPoolProvBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAPoolProvBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolProvBwEntry.setStatus("mandatory")


class _MscAtmIfVptCAPoolProvBwIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolProvBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCAPoolProvBwIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolProvBwIndex_Object = MibTableColumn
mscAtmIfVptCAPoolProvBwIndex = _MscAtmIfVptCAPoolProvBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 462, 1, 1),
    _MscAtmIfVptCAPoolProvBwIndex_Type()
)
mscAtmIfVptCAPoolProvBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolProvBwIndex.setStatus("mandatory")


class _MscAtmIfVptCAPoolProvBwValue_Type(Gauge32):
    """Custom type mscAtmIfVptCAPoolProvBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCAPoolProvBwValue_Type.__name__ = "Gauge32"
_MscAtmIfVptCAPoolProvBwValue_Object = MibTableColumn
mscAtmIfVptCAPoolProvBwValue = _MscAtmIfVptCAPoolProvBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 462, 1, 2),
    _MscAtmIfVptCAPoolProvBwValue_Type()
)
mscAtmIfVptCAPoolProvBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolProvBwValue.setStatus("mandatory")
_MscAtmIfVptCAPoolRequBwTable_Object = MibTable
mscAtmIfVptCAPoolRequBwTable = _MscAtmIfVptCAPoolRequBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 463)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolRequBwTable.setStatus("mandatory")
_MscAtmIfVptCAPoolRequBwEntry_Object = MibTableRow
mscAtmIfVptCAPoolRequBwEntry = _MscAtmIfVptCAPoolRequBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 463, 1)
)
mscAtmIfVptCAPoolRequBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAPoolRequBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolRequBwEntry.setStatus("mandatory")


class _MscAtmIfVptCAPoolRequBwIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolRequBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCAPoolRequBwIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolRequBwIndex_Object = MibTableColumn
mscAtmIfVptCAPoolRequBwIndex = _MscAtmIfVptCAPoolRequBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 463, 1, 1),
    _MscAtmIfVptCAPoolRequBwIndex_Type()
)
mscAtmIfVptCAPoolRequBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolRequBwIndex.setStatus("mandatory")


class _MscAtmIfVptCAPoolRequBwValue_Type(Gauge32):
    """Custom type mscAtmIfVptCAPoolRequBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCAPoolRequBwValue_Type.__name__ = "Gauge32"
_MscAtmIfVptCAPoolRequBwValue_Object = MibTableColumn
mscAtmIfVptCAPoolRequBwValue = _MscAtmIfVptCAPoolRequBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 463, 1, 2),
    _MscAtmIfVptCAPoolRequBwValue_Type()
)
mscAtmIfVptCAPoolRequBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolRequBwValue.setStatus("mandatory")
_MscAtmIfVptCAPoolAdmitBwTable_Object = MibTable
mscAtmIfVptCAPoolAdmitBwTable = _MscAtmIfVptCAPoolAdmitBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 464)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmitBwTable.setStatus("mandatory")
_MscAtmIfVptCAPoolAdmitBwEntry_Object = MibTableRow
mscAtmIfVptCAPoolAdmitBwEntry = _MscAtmIfVptCAPoolAdmitBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 464, 1)
)
mscAtmIfVptCAPoolAdmitBwEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAPoolAdmitBwIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmitBwEntry.setStatus("mandatory")


class _MscAtmIfVptCAPoolAdmitBwIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolAdmitBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCAPoolAdmitBwIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolAdmitBwIndex_Object = MibTableColumn
mscAtmIfVptCAPoolAdmitBwIndex = _MscAtmIfVptCAPoolAdmitBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 464, 1, 1),
    _MscAtmIfVptCAPoolAdmitBwIndex_Type()
)
mscAtmIfVptCAPoolAdmitBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmitBwIndex.setStatus("mandatory")


class _MscAtmIfVptCAPoolAdmitBwValue_Type(Gauge32):
    """Custom type mscAtmIfVptCAPoolAdmitBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptCAPoolAdmitBwValue_Type.__name__ = "Gauge32"
_MscAtmIfVptCAPoolAdmitBwValue_Object = MibTableColumn
mscAtmIfVptCAPoolAdmitBwValue = _MscAtmIfVptCAPoolAdmitBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 464, 1, 2),
    _MscAtmIfVptCAPoolAdmitBwValue_Type()
)
mscAtmIfVptCAPoolAdmitBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmitBwValue.setStatus("mandatory")
_MscAtmIfVptCAPoolAdmConnsTable_Object = MibTable
mscAtmIfVptCAPoolAdmConnsTable = _MscAtmIfVptCAPoolAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 465)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmConnsTable.setStatus("mandatory")
_MscAtmIfVptCAPoolAdmConnsEntry_Object = MibTableRow
mscAtmIfVptCAPoolAdmConnsEntry = _MscAtmIfVptCAPoolAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 465, 1)
)
mscAtmIfVptCAPoolAdmConnsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAPoolAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmConnsEntry.setStatus("mandatory")


class _MscAtmIfVptCAPoolAdmConnsIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCAPoolAdmConnsIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolAdmConnsIndex_Object = MibTableColumn
mscAtmIfVptCAPoolAdmConnsIndex = _MscAtmIfVptCAPoolAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 465, 1, 1),
    _MscAtmIfVptCAPoolAdmConnsIndex_Type()
)
mscAtmIfVptCAPoolAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmConnsIndex.setStatus("mandatory")


class _MscAtmIfVptCAPoolAdmConnsValue_Type(Gauge32):
    """Custom type mscAtmIfVptCAPoolAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCAPoolAdmConnsValue_Type.__name__ = "Gauge32"
_MscAtmIfVptCAPoolAdmConnsValue_Object = MibTableColumn
mscAtmIfVptCAPoolAdmConnsValue = _MscAtmIfVptCAPoolAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 465, 1, 2),
    _MscAtmIfVptCAPoolAdmConnsValue_Type()
)
mscAtmIfVptCAPoolAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolAdmConnsValue.setStatus("mandatory")
_MscAtmIfVptCAPoolWaitAdmConnsTable_Object = MibTable
mscAtmIfVptCAPoolWaitAdmConnsTable = _MscAtmIfVptCAPoolWaitAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 466)
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolWaitAdmConnsTable.setStatus("mandatory")
_MscAtmIfVptCAPoolWaitAdmConnsEntry_Object = MibTableRow
mscAtmIfVptCAPoolWaitAdmConnsEntry = _MscAtmIfVptCAPoolWaitAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 466, 1)
)
mscAtmIfVptCAPoolWaitAdmConnsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptCAPoolWaitAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolWaitAdmConnsEntry.setStatus("mandatory")


class _MscAtmIfVptCAPoolWaitAdmConnsIndex_Type(Integer32):
    """Custom type mscAtmIfVptCAPoolWaitAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptCAPoolWaitAdmConnsIndex_Type.__name__ = "Integer32"
_MscAtmIfVptCAPoolWaitAdmConnsIndex_Object = MibTableColumn
mscAtmIfVptCAPoolWaitAdmConnsIndex = _MscAtmIfVptCAPoolWaitAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 466, 1, 1),
    _MscAtmIfVptCAPoolWaitAdmConnsIndex_Type()
)
mscAtmIfVptCAPoolWaitAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolWaitAdmConnsIndex.setStatus("mandatory")


class _MscAtmIfVptCAPoolWaitAdmConnsValue_Type(Gauge32):
    """Custom type mscAtmIfVptCAPoolWaitAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfVptCAPoolWaitAdmConnsValue_Type.__name__ = "Gauge32"
_MscAtmIfVptCAPoolWaitAdmConnsValue_Object = MibTableColumn
mscAtmIfVptCAPoolWaitAdmConnsValue = _MscAtmIfVptCAPoolWaitAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 5, 466, 1, 2),
    _MscAtmIfVptCAPoolWaitAdmConnsValue_Type()
)
mscAtmIfVptCAPoolWaitAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptCAPoolWaitAdmConnsValue.setStatus("mandatory")
_MscAtmIfVptTm_ObjectIdentity = ObjectIdentity
mscAtmIfVptTm = _MscAtmIfVptTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9)
)
_MscAtmIfVptTmRowStatusTable_Object = MibTable
mscAtmIfVptTmRowStatusTable = _MscAtmIfVptTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVptTmRowStatusEntry_Object = MibTableRow
mscAtmIfVptTmRowStatusEntry = _MscAtmIfVptTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 1, 1)
)
mscAtmIfVptTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptTmRowStatus_Type = RowStatus
_MscAtmIfVptTmRowStatus_Object = MibTableColumn
mscAtmIfVptTmRowStatus = _MscAtmIfVptTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 1, 1, 1),
    _MscAtmIfVptTmRowStatus_Type()
)
mscAtmIfVptTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRowStatus.setStatus("mandatory")
_MscAtmIfVptTmComponentName_Type = DisplayString
_MscAtmIfVptTmComponentName_Object = MibTableColumn
mscAtmIfVptTmComponentName = _MscAtmIfVptTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 1, 1, 2),
    _MscAtmIfVptTmComponentName_Type()
)
mscAtmIfVptTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmComponentName.setStatus("mandatory")
_MscAtmIfVptTmStorageType_Type = StorageType
_MscAtmIfVptTmStorageType_Object = MibTableColumn
mscAtmIfVptTmStorageType = _MscAtmIfVptTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 1, 1, 4),
    _MscAtmIfVptTmStorageType_Type()
)
mscAtmIfVptTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmStorageType.setStatus("mandatory")
_MscAtmIfVptTmIndex_Type = NonReplicated
_MscAtmIfVptTmIndex_Object = MibTableColumn
mscAtmIfVptTmIndex = _MscAtmIfVptTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 1, 1, 10),
    _MscAtmIfVptTmIndex_Type()
)
mscAtmIfVptTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmIndex.setStatus("mandatory")
_MscAtmIfVptTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptTmAbr = _MscAtmIfVptTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2)
)
_MscAtmIfVptTmAbrRowStatusTable_Object = MibTable
mscAtmIfVptTmAbrRowStatusTable = _MscAtmIfVptTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptTmAbrRowStatusEntry = _MscAtmIfVptTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 1, 1)
)
mscAtmIfVptTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptTmAbrRowStatus_Type = RowStatus
_MscAtmIfVptTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVptTmAbrRowStatus = _MscAtmIfVptTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 1, 1, 1),
    _MscAtmIfVptTmAbrRowStatus_Type()
)
mscAtmIfVptTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVptTmAbrComponentName_Type = DisplayString
_MscAtmIfVptTmAbrComponentName_Object = MibTableColumn
mscAtmIfVptTmAbrComponentName = _MscAtmIfVptTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 1, 1, 2),
    _MscAtmIfVptTmAbrComponentName_Type()
)
mscAtmIfVptTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVptTmAbrStorageType_Type = StorageType
_MscAtmIfVptTmAbrStorageType_Object = MibTableColumn
mscAtmIfVptTmAbrStorageType = _MscAtmIfVptTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 1, 1, 4),
    _MscAtmIfVptTmAbrStorageType_Type()
)
mscAtmIfVptTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVptTmAbrIndex_Type = NonReplicated
_MscAtmIfVptTmAbrIndex_Object = MibTableColumn
mscAtmIfVptTmAbrIndex = _MscAtmIfVptTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 1, 1, 10),
    _MscAtmIfVptTmAbrIndex_Type()
)
mscAtmIfVptTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrIndex.setStatus("mandatory")
_MscAtmIfVptTmAbrOperTable_Object = MibTable
mscAtmIfVptTmAbrOperTable = _MscAtmIfVptTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrOperTable.setStatus("mandatory")
_MscAtmIfVptTmAbrOperEntry_Object = MibTableRow
mscAtmIfVptTmAbrOperEntry = _MscAtmIfVptTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1)
)
mscAtmIfVptTmAbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrOperEntry.setStatus("mandatory")


class _MscAtmIfVptTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVptTmAbrInitialCellRate = _MscAtmIfVptTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 10),
    _MscAtmIfVptTmAbrInitialCellRate_Type()
)
mscAtmIfVptTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVptTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVptTmAbrTransientBufferExposure = _MscAtmIfVptTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 11),
    _MscAtmIfVptTmAbrTransientBufferExposure_Type()
)
mscAtmIfVptTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVptTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVptTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVptTmAbrFixedRoundTripTime = _MscAtmIfVptTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 12),
    _MscAtmIfVptTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVptTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVptTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVptTmAbrRateDecreaseFactor = _MscAtmIfVptTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 13),
    _MscAtmIfVptTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVptTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVptTmAbrRateIncreaseFactor = _MscAtmIfVptTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 14),
    _MscAtmIfVptTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVptTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVptTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_MscAtmIfVptTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVptTmAbrMaxCellPerRmCell = _MscAtmIfVptTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 15),
    _MscAtmIfVptTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVptTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVptTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_MscAtmIfVptTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
mscAtmIfVptTmAbrMaxTimeBetweenRmCell = _MscAtmIfVptTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 16),
    _MscAtmIfVptTmAbrMaxTimeBetweenRmCell_Type()
)
mscAtmIfVptTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _MscAtmIfVptTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_MscAtmIfVptTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVptTmAbrCutoffDecreaseFactor = _MscAtmIfVptTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 17),
    _MscAtmIfVptTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVptTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVptTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVptTmAbrAcrDecreaseTimeFactor = _MscAtmIfVptTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 18),
    _MscAtmIfVptTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVptTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVptTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_MscAtmIfVptTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrForwardRmCellLimit_Object = MibTableColumn
mscAtmIfVptTmAbrForwardRmCellLimit = _MscAtmIfVptTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 19),
    _MscAtmIfVptTmAbrForwardRmCellLimit_Type()
)
mscAtmIfVptTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrForwardRmCellLimit.setStatus("mandatory")


class _MscAtmIfVptTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVptTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_MscAtmIfVptTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVptTmAbrTxRateChangeInfo_Object = MibTableColumn
mscAtmIfVptTmAbrTxRateChangeInfo = _MscAtmIfVptTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 20),
    _MscAtmIfVptTmAbrTxRateChangeInfo_Type()
)
mscAtmIfVptTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrTxRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVptTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVptTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_MscAtmIfVptTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVptTmAbrAcrRateChangeInfo_Object = MibTableColumn
mscAtmIfVptTmAbrAcrRateChangeInfo = _MscAtmIfVptTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 21),
    _MscAtmIfVptTmAbrAcrRateChangeInfo_Type()
)
mscAtmIfVptTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVptTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVptTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfVptTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmAbrTxFwdRmCells_Object = MibTableColumn
mscAtmIfVptTmAbrTxFwdRmCells = _MscAtmIfVptTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 22),
    _MscAtmIfVptTmAbrTxFwdRmCells_Type()
)
mscAtmIfVptTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrTxFwdRmCells.setStatus("mandatory")


class _MscAtmIfVptTmAbrRxEfci_Type(Integer32):
    """Custom type mscAtmIfVptTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVptTmAbrRxEfci_Type.__name__ = "Integer32"
_MscAtmIfVptTmAbrRxEfci_Object = MibTableColumn
mscAtmIfVptTmAbrRxEfci = _MscAtmIfVptTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 2, 110, 1, 23),
    _MscAtmIfVptTmAbrRxEfci_Type()
)
mscAtmIfVptTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrRxEfci.setStatus("mandatory")
_MscAtmIfVptTmOperTable_Object = MibTable
mscAtmIfVptTmOperTable = _MscAtmIfVptTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmOperTable.setStatus("mandatory")
_MscAtmIfVptTmOperEntry_Object = MibTableRow
mscAtmIfVptTmOperEntry = _MscAtmIfVptTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1)
)
mscAtmIfVptTmOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmOperEntry.setStatus("mandatory")


class _MscAtmIfVptTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptTmTxTrafficDescType = _MscAtmIfVptTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 10),
    _MscAtmIfVptTmTxTrafficDescType_Type()
)
mscAtmIfVptTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptTmTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVptTmTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptTmTxQosClass_Object = MibTableColumn
mscAtmIfVptTmTxQosClass = _MscAtmIfVptTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 31),
    _MscAtmIfVptTmTxQosClass_Type()
)
mscAtmIfVptTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQosClass.setStatus("mandatory")


class _MscAtmIfVptTmTxQueueLength_Type(Unsigned32):
    """Custom type mscAtmIfVptTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVptTmTxQueueLength_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmTxQueueLength_Object = MibTableColumn
mscAtmIfVptTmTxQueueLength = _MscAtmIfVptTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 32),
    _MscAtmIfVptTmTxQueueLength_Type()
)
mscAtmIfVptTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQueueLength.setStatus("mandatory")


class _MscAtmIfVptTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type mscAtmIfVptTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVptTmTxQueueCongestionState = _MscAtmIfVptTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 33),
    _MscAtmIfVptTmTxQueueCongestionState_Type()
)
mscAtmIfVptTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQueueCongestionState.setStatus("mandatory")


class _MscAtmIfVptTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVptTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptTmHoldingPriority_Object = MibTableColumn
mscAtmIfVptTmHoldingPriority = _MscAtmIfVptTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 35),
    _MscAtmIfVptTmHoldingPriority_Type()
)
mscAtmIfVptTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVptTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptTmRxTrafficDescType = _MscAtmIfVptTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 40),
    _MscAtmIfVptTmRxTrafficDescType_Type()
)
mscAtmIfVptTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptTmRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14),
          ("sameAsFwd", 15))
    )


_MscAtmIfVptTmRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptTmRxQosClass_Object = MibTableColumn
mscAtmIfVptTmRxQosClass = _MscAtmIfVptTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 61),
    _MscAtmIfVptTmRxQosClass_Type()
)
mscAtmIfVptTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxQosClass.setStatus("mandatory")


class _MscAtmIfVptTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptTmAtmServiceCategory = _MscAtmIfVptTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 62),
    _MscAtmIfVptTmAtmServiceCategory_Type()
)
mscAtmIfVptTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVptTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_MscAtmIfVptTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptTmTrafficShaping_Object = MibTableColumn
mscAtmIfVptTmTrafficShaping = _MscAtmIfVptTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 70),
    _MscAtmIfVptTmTrafficShaping_Type()
)
mscAtmIfVptTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVptTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVptTmBearerClassBbc = _MscAtmIfVptTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 71),
    _MscAtmIfVptTmBearerClassBbc_Type()
)
mscAtmIfVptTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVptTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptTmTransferCapabilityBbc = _MscAtmIfVptTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 72),
    _MscAtmIfVptTmTransferCapabilityBbc_Type()
)
mscAtmIfVptTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVptTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVptTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptTmClippingBbc_Object = MibTableColumn
mscAtmIfVptTmClippingBbc = _MscAtmIfVptTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 74),
    _MscAtmIfVptTmClippingBbc_Type()
)
mscAtmIfVptTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVptTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVptTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptTmUnshapedTransmitQueueing = _MscAtmIfVptTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 75),
    _MscAtmIfVptTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVptTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVptTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVptTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptTmBestEffort_Object = MibTableColumn
mscAtmIfVptTmBestEffort = _MscAtmIfVptTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 76),
    _MscAtmIfVptTmBestEffort_Type()
)
mscAtmIfVptTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmBestEffort.setStatus("mandatory")


class _MscAtmIfVptTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVptTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfVptTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVptTmForceTagging_Object = MibTableColumn
mscAtmIfVptTmForceTagging = _MscAtmIfVptTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 78),
    _MscAtmIfVptTmForceTagging_Type()
)
mscAtmIfVptTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmForceTagging.setStatus("mandatory")


class _MscAtmIfVptTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVptTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_MscAtmIfVptTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmWeight_Object = MibTableColumn
mscAtmIfVptTmWeight = _MscAtmIfVptTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 79),
    _MscAtmIfVptTmWeight_Type()
)
mscAtmIfVptTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmWeight.setStatus("mandatory")


class _MscAtmIfVptTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_MscAtmIfVptTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVptTmUsageParameterControl = _MscAtmIfVptTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 80),
    _MscAtmIfVptTmUsageParameterControl_Type()
)
mscAtmIfVptTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVptTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVptTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptTmTxPacketWiseDiscard = _MscAtmIfVptTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 85),
    _MscAtmIfVptTmTxPacketWiseDiscard_Type()
)
mscAtmIfVptTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVptTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptTmRxPacketWiseDiscard = _MscAtmIfVptTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 86),
    _MscAtmIfVptTmRxPacketWiseDiscard_Type()
)
mscAtmIfVptTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptTmBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVptTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptTmBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVptTmBandwidthElastic_Object = MibTableColumn
mscAtmIfVptTmBandwidthElastic = _MscAtmIfVptTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 90),
    _MscAtmIfVptTmBandwidthElastic_Type()
)
mscAtmIfVptTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmBandwidthElastic.setStatus("mandatory")


class _MscAtmIfVptTmBandwidthReduction_Type(Unsigned32):
    """Custom type mscAtmIfVptTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptTmBandwidthReduction_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmBandwidthReduction_Object = MibTableColumn
mscAtmIfVptTmBandwidthReduction = _MscAtmIfVptTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 100),
    _MscAtmIfVptTmBandwidthReduction_Type()
)
mscAtmIfVptTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmBandwidthReduction.setStatus("mandatory")


class _MscAtmIfVptTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVptTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVptTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVptTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVptTmAbrConnectionType = _MscAtmIfVptTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 100, 1, 110),
    _MscAtmIfVptTmAbrConnectionType_Type()
)
mscAtmIfVptTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVptTmTxTdpTable_Object = MibTable
mscAtmIfVptTmTxTdpTable = _MscAtmIfVptTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 451)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVptTmTxTdpEntry_Object = MibTableRow
mscAtmIfVptTmTxTdpEntry = _MscAtmIfVptTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 451, 1)
)
mscAtmIfVptTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVptTmTxTdpIndex = _MscAtmIfVptTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 451, 1, 1),
    _MscAtmIfVptTmTxTdpIndex_Type()
)
mscAtmIfVptTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmTxTdpValue_Object = MibTableColumn
mscAtmIfVptTmTxTdpValue = _MscAtmIfVptTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 451, 1, 2),
    _MscAtmIfVptTmTxTdpValue_Type()
)
mscAtmIfVptTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVptTmTxQThreshTable_Object = MibTable
mscAtmIfVptTmTxQThreshTable = _MscAtmIfVptTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 452)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQThreshTable.setStatus("mandatory")
_MscAtmIfVptTmTxQThreshEntry_Object = MibTableRow
mscAtmIfVptTmTxQThreshEntry = _MscAtmIfVptTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 452, 1)
)
mscAtmIfVptTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQThreshEntry.setStatus("mandatory")


class _MscAtmIfVptTmTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVptTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptTmTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTmTxQThreshIndex_Object = MibTableColumn
mscAtmIfVptTmTxQThreshIndex = _MscAtmIfVptTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 452, 1, 1),
    _MscAtmIfVptTmTxQThreshIndex_Type()
)
mscAtmIfVptTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQThreshIndex.setStatus("mandatory")


class _MscAtmIfVptTmTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512000),
    )


_MscAtmIfVptTmTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmTxQThreshValue_Object = MibTableColumn
mscAtmIfVptTmTxQThreshValue = _MscAtmIfVptTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 452, 1, 2),
    _MscAtmIfVptTmTxQThreshValue_Type()
)
mscAtmIfVptTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTxQThreshValue.setStatus("mandatory")
_MscAtmIfVptTmRxTdpTable_Object = MibTable
mscAtmIfVptTmRxTdpTable = _MscAtmIfVptTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 453)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVptTmRxTdpEntry_Object = MibTableRow
mscAtmIfVptTmRxTdpEntry = _MscAtmIfVptTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 453, 1)
)
mscAtmIfVptTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVptTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVptTmRxTdpIndex = _MscAtmIfVptTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 453, 1, 1),
    _MscAtmIfVptTmRxTdpIndex_Type()
)
mscAtmIfVptTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmRxTdpValue_Object = MibTableColumn
mscAtmIfVptTmRxTdpValue = _MscAtmIfVptTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 453, 1, 2),
    _MscAtmIfVptTmRxTdpValue_Type()
)
mscAtmIfVptTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVptTmTqpTable_Object = MibTable
mscAtmIfVptTmTqpTable = _MscAtmIfVptTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 454)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmTqpTable.setStatus("mandatory")
_MscAtmIfVptTmTqpEntry_Object = MibTableRow
mscAtmIfVptTmTqpEntry = _MscAtmIfVptTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 454, 1)
)
mscAtmIfVptTmTqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmTqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmTqpEntry.setStatus("mandatory")


class _MscAtmIfVptTmTqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptTmTqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTmTqpIndex_Object = MibTableColumn
mscAtmIfVptTmTqpIndex = _MscAtmIfVptTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 454, 1, 1),
    _MscAtmIfVptTmTqpIndex_Type()
)
mscAtmIfVptTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTqpIndex.setStatus("mandatory")


class _MscAtmIfVptTmTqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptTmTqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmTqpValue_Object = MibTableColumn
mscAtmIfVptTmTqpValue = _MscAtmIfVptTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 454, 1, 2),
    _MscAtmIfVptTmTqpValue_Type()
)
mscAtmIfVptTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmTqpValue.setStatus("mandatory")
_MscAtmIfVptTmRqpTable_Object = MibTable
mscAtmIfVptTmRqpTable = _MscAtmIfVptTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 455)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmRqpTable.setStatus("mandatory")
_MscAtmIfVptTmRqpEntry_Object = MibTableRow
mscAtmIfVptTmRqpEntry = _MscAtmIfVptTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 455, 1)
)
mscAtmIfVptTmRqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTmRqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTmRqpEntry.setStatus("mandatory")


class _MscAtmIfVptTmRqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptTmRqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTmRqpIndex_Object = MibTableColumn
mscAtmIfVptTmRqpIndex = _MscAtmIfVptTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 455, 1, 1),
    _MscAtmIfVptTmRqpIndex_Type()
)
mscAtmIfVptTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRqpIndex.setStatus("mandatory")


class _MscAtmIfVptTmRqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptTmRqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTmRqpValue_Object = MibTableColumn
mscAtmIfVptTmRqpValue = _MscAtmIfVptTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 9, 455, 1, 2),
    _MscAtmIfVptTmRqpValue_Type()
)
mscAtmIfVptTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTmRqpValue.setStatus("mandatory")
_MscAtmIfVptVcc_ObjectIdentity = ObjectIdentity
mscAtmIfVptVcc = _MscAtmIfVptVcc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20)
)
_MscAtmIfVptVccRowStatusTable_Object = MibTable
mscAtmIfVptVccRowStatusTable = _MscAtmIfVptVccRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccRowStatusEntry = _MscAtmIfVptVccRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 1, 1)
)
mscAtmIfVptVccRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccRowStatus_Type = RowStatus
_MscAtmIfVptVccRowStatus_Object = MibTableColumn
mscAtmIfVptVccRowStatus = _MscAtmIfVptVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 1, 1, 1),
    _MscAtmIfVptVccRowStatus_Type()
)
mscAtmIfVptVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRowStatus.setStatus("mandatory")
_MscAtmIfVptVccComponentName_Type = DisplayString
_MscAtmIfVptVccComponentName_Object = MibTableColumn
mscAtmIfVptVccComponentName = _MscAtmIfVptVccComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 1, 1, 2),
    _MscAtmIfVptVccComponentName_Type()
)
mscAtmIfVptVccComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccComponentName.setStatus("mandatory")
_MscAtmIfVptVccStorageType_Type = StorageType
_MscAtmIfVptVccStorageType_Object = MibTableColumn
mscAtmIfVptVccStorageType = _MscAtmIfVptVccStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 1, 1, 4),
    _MscAtmIfVptVccStorageType_Type()
)
mscAtmIfVptVccStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStorageType.setStatus("mandatory")


class _MscAtmIfVptVccIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_MscAtmIfVptVccIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccIndex_Object = MibTableColumn
mscAtmIfVptVccIndex = _MscAtmIfVptVccIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 1, 1, 10),
    _MscAtmIfVptVccIndex_Type()
)
mscAtmIfVptVccIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccIndex.setStatus("mandatory")
_MscAtmIfVptVccVcd_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccVcd = _MscAtmIfVptVccVcd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2)
)
_MscAtmIfVptVccVcdRowStatusTable_Object = MibTable
mscAtmIfVptVccVcdRowStatusTable = _MscAtmIfVptVccVcdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccVcdRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccVcdRowStatusEntry = _MscAtmIfVptVccVcdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 1, 1)
)
mscAtmIfVptVccVcdRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccVcdRowStatus_Type = RowStatus
_MscAtmIfVptVccVcdRowStatus_Object = MibTableColumn
mscAtmIfVptVccVcdRowStatus = _MscAtmIfVptVccVcdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 1, 1, 1),
    _MscAtmIfVptVccVcdRowStatus_Type()
)
mscAtmIfVptVccVcdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRowStatus.setStatus("mandatory")
_MscAtmIfVptVccVcdComponentName_Type = DisplayString
_MscAtmIfVptVccVcdComponentName_Object = MibTableColumn
mscAtmIfVptVccVcdComponentName = _MscAtmIfVptVccVcdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 1, 1, 2),
    _MscAtmIfVptVccVcdComponentName_Type()
)
mscAtmIfVptVccVcdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdComponentName.setStatus("mandatory")
_MscAtmIfVptVccVcdStorageType_Type = StorageType
_MscAtmIfVptVccVcdStorageType_Object = MibTableColumn
mscAtmIfVptVccVcdStorageType = _MscAtmIfVptVccVcdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 1, 1, 4),
    _MscAtmIfVptVccVcdStorageType_Type()
)
mscAtmIfVptVccVcdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdStorageType.setStatus("mandatory")
_MscAtmIfVptVccVcdIndex_Type = NonReplicated
_MscAtmIfVptVccVcdIndex_Object = MibTableColumn
mscAtmIfVptVccVcdIndex = _MscAtmIfVptVccVcdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 1, 1, 10),
    _MscAtmIfVptVccVcdIndex_Type()
)
mscAtmIfVptVccVcdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdIndex.setStatus("mandatory")
_MscAtmIfVptVccVcdTm_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccVcdTm = _MscAtmIfVptVccVcdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2)
)
_MscAtmIfVptVccVcdTmRowStatusTable_Object = MibTable
mscAtmIfVptVccVcdTmRowStatusTable = _MscAtmIfVptVccVcdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmRowStatusEntry = _MscAtmIfVptVccVcdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 1, 1)
)
mscAtmIfVptVccVcdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccVcdTmRowStatus_Type = RowStatus
_MscAtmIfVptVccVcdTmRowStatus_Object = MibTableColumn
mscAtmIfVptVccVcdTmRowStatus = _MscAtmIfVptVccVcdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 1, 1, 1),
    _MscAtmIfVptVccVcdTmRowStatus_Type()
)
mscAtmIfVptVccVcdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRowStatus.setStatus("mandatory")
_MscAtmIfVptVccVcdTmComponentName_Type = DisplayString
_MscAtmIfVptVccVcdTmComponentName_Object = MibTableColumn
mscAtmIfVptVccVcdTmComponentName = _MscAtmIfVptVccVcdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 1, 1, 2),
    _MscAtmIfVptVccVcdTmComponentName_Type()
)
mscAtmIfVptVccVcdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmComponentName.setStatus("mandatory")
_MscAtmIfVptVccVcdTmStorageType_Type = StorageType
_MscAtmIfVptVccVcdTmStorageType_Object = MibTableColumn
mscAtmIfVptVccVcdTmStorageType = _MscAtmIfVptVccVcdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 1, 1, 4),
    _MscAtmIfVptVccVcdTmStorageType_Type()
)
mscAtmIfVptVccVcdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmStorageType.setStatus("mandatory")
_MscAtmIfVptVccVcdTmIndex_Type = NonReplicated
_MscAtmIfVptVccVcdTmIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTmIndex = _MscAtmIfVptVccVcdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 1, 1, 10),
    _MscAtmIfVptVccVcdTmIndex_Type()
)
mscAtmIfVptVccVcdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmIndex.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccVcdTmAbr = _MscAtmIfVptVccVcdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2)
)
_MscAtmIfVptVccVcdTmAbrRowStatusTable_Object = MibTable
mscAtmIfVptVccVcdTmAbrRowStatusTable = _MscAtmIfVptVccVcdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmAbrRowStatusEntry = _MscAtmIfVptVccVcdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 1, 1)
)
mscAtmIfVptVccVcdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrRowStatus_Type = RowStatus
_MscAtmIfVptVccVcdTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrRowStatus = _MscAtmIfVptVccVcdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 1, 1, 1),
    _MscAtmIfVptVccVcdTmAbrRowStatus_Type()
)
mscAtmIfVptVccVcdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrComponentName_Type = DisplayString
_MscAtmIfVptVccVcdTmAbrComponentName_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrComponentName = _MscAtmIfVptVccVcdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 1, 1, 2),
    _MscAtmIfVptVccVcdTmAbrComponentName_Type()
)
mscAtmIfVptVccVcdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrStorageType_Type = StorageType
_MscAtmIfVptVccVcdTmAbrStorageType_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrStorageType = _MscAtmIfVptVccVcdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 1, 1, 4),
    _MscAtmIfVptVccVcdTmAbrStorageType_Type()
)
mscAtmIfVptVccVcdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrIndex_Type = NonReplicated
_MscAtmIfVptVccVcdTmAbrIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrIndex = _MscAtmIfVptVccVcdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 1, 1, 10),
    _MscAtmIfVptVccVcdTmAbrIndex_Type()
)
mscAtmIfVptVccVcdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrIndex.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrProvTable_Object = MibTable
mscAtmIfVptVccVcdTmAbrProvTable = _MscAtmIfVptVccVcdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrProvTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmAbrProvEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmAbrProvEntry = _MscAtmIfVptVccVcdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1)
)
mscAtmIfVptVccVcdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrProvEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_MscAtmIfVptVccVcdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrInitialCellRate = _MscAtmIfVptVccVcdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 10),
    _MscAtmIfVptVccVcdTmAbrInitialCellRate_Type()
)
mscAtmIfVptVccVcdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptVccVcdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrTransientBufferExposure = _MscAtmIfVptVccVcdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 11),
    _MscAtmIfVptVccVcdTmAbrTransientBufferExposure_Type()
)
mscAtmIfVptVccVcdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVptVccVcdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrFixedRoundTripTime = _MscAtmIfVptVccVcdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 12),
    _MscAtmIfVptVccVcdTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVptVccVcdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrRateDecreaseFactor = _MscAtmIfVptVccVcdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 13),
    _MscAtmIfVptVccVcdTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVptVccVcdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrRateIncreaseFactor = _MscAtmIfVptVccVcdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 14),
    _MscAtmIfVptVccVcdTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVptVccVcdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrMaxCellPerRmCell = _MscAtmIfVptVccVcdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 15),
    _MscAtmIfVptVccVcdTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVptVccVcdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells = _MscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 16),
    _MscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Type()
)
mscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor = _MscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 17),
    _MscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor = _MscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 18),
    _MscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrDgcraMaximumDelay_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrDgcraMaximumDelay = _MscAtmIfVptVccVcdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 19),
    _MscAtmIfVptVccVcdTmAbrDgcraMaximumDelay_Type()
)
mscAtmIfVptVccVcdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_MscAtmIfVptVccVcdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrDgcraMinimumDelay_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrDgcraMinimumDelay = _MscAtmIfVptVccVcdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 20),
    _MscAtmIfVptVccVcdTmAbrDgcraMinimumDelay_Type()
)
mscAtmIfVptVccVcdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor = _MscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 21),
    _MscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
mscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptVccVcdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmAbrFarEndInitialCellRate_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrFarEndInitialCellRate = _MscAtmIfVptVccVcdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 2, 110, 1, 22),
    _MscAtmIfVptVccVcdTmAbrFarEndInitialCellRate_Type()
)
mscAtmIfVptVccVcdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_MscAtmIfVptVccVcdTmProvTable_Object = MibTable
mscAtmIfVptVccVcdTmProvTable = _MscAtmIfVptVccVcdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmProvTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmProvEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmProvEntry = _MscAtmIfVptVccVcdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1)
)
mscAtmIfVptVccVcdTmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmProvEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptVccVcdTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccVcdTmTxTrafficDescType = _MscAtmIfVptVccVcdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 10),
    _MscAtmIfVptVccVcdTmTxTrafficDescType_Type()
)
mscAtmIfVptVccVcdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVccVcdTmFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmFwdQosClass_Object = MibTableColumn
mscAtmIfVptVccVcdTmFwdQosClass = _MscAtmIfVptVccVcdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 21),
    _MscAtmIfVptVccVcdTmFwdQosClass_Type()
)
mscAtmIfVptVccVcdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmFwdQosClass.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTxQueueLimit_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 512000),
    )


_MscAtmIfVptVccVcdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmTxQueueLimit_Object = MibTableColumn
mscAtmIfVptVccVcdTmTxQueueLimit = _MscAtmIfVptVccVcdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 22),
    _MscAtmIfVptVccVcdTmTxQueueLimit_Type()
)
mscAtmIfVptVccVcdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxQueueLimit.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVccVcdTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmHoldingPriority_Object = MibTableColumn
mscAtmIfVptVccVcdTmHoldingPriority = _MscAtmIfVptVccVcdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 25),
    _MscAtmIfVptVccVcdTmHoldingPriority_Type()
)
mscAtmIfVptVccVcdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_MscAtmIfVptVccVcdTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccVcdTmRxTrafficDescType = _MscAtmIfVptVccVcdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 30),
    _MscAtmIfVptVccVcdTmRxTrafficDescType_Type()
)
mscAtmIfVptVccVcdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVptVccVcdTmBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmBwdQosClass_Object = MibTableColumn
mscAtmIfVptVccVcdTmBwdQosClass = _MscAtmIfVptVccVcdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 41),
    _MscAtmIfVptVccVcdTmBwdQosClass_Type()
)
mscAtmIfVptVccVcdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBwdQosClass.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptVccVcdTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptVccVcdTmAtmServiceCategory = _MscAtmIfVptVccVcdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 42),
    _MscAtmIfVptVccVcdTmAtmServiceCategory_Type()
)
mscAtmIfVptVccVcdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_MscAtmIfVptVccVcdTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmTrafficShaping_Object = MibTableColumn
mscAtmIfVptVccVcdTmTrafficShaping = _MscAtmIfVptVccVcdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 50),
    _MscAtmIfVptVccVcdTmTrafficShaping_Type()
)
mscAtmIfVptVccVcdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_MscAtmIfVptVccVcdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptVccVcdTmUnshapedTransmitQueueing = _MscAtmIfVptVccVcdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 60),
    _MscAtmIfVptVccVcdTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVptVccVcdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_MscAtmIfVptVccVcdTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmWeight_Object = MibTableColumn
mscAtmIfVptVccVcdTmWeight = _MscAtmIfVptVccVcdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 61),
    _MscAtmIfVptVccVcdTmWeight_Type()
)
mscAtmIfVptVccVcdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmWeight.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_MscAtmIfVptVccVcdTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmForceTagging_Object = MibTableColumn
mscAtmIfVptVccVcdTmForceTagging = _MscAtmIfVptVccVcdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 62),
    _MscAtmIfVptVccVcdTmForceTagging_Type()
)
mscAtmIfVptVccVcdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmForceTagging.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_MscAtmIfVptVccVcdTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVptVccVcdTmUsageParameterControl = _MscAtmIfVptVccVcdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 70),
    _MscAtmIfVptVccVcdTmUsageParameterControl_Type()
)
mscAtmIfVptVccVcdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptVccVcdTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVptVccVcdTmBearerClassBbc = _MscAtmIfVptVccVcdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 71),
    _MscAtmIfVptVccVcdTmBearerClassBbc_Type()
)
mscAtmIfVptVccVcdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptVccVcdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptVccVcdTmTransferCapabilityBbc = _MscAtmIfVptVccVcdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 72),
    _MscAtmIfVptVccVcdTmTransferCapabilityBbc_Type()
)
mscAtmIfVptVccVcdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVccVcdTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmClippingBbc_Object = MibTableColumn
mscAtmIfVptVccVcdTmClippingBbc = _MscAtmIfVptVccVcdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 74),
    _MscAtmIfVptVccVcdTmClippingBbc_Type()
)
mscAtmIfVptVccVcdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVptVccVcdTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmBestEffort_Object = MibTableColumn
mscAtmIfVptVccVcdTmBestEffort = _MscAtmIfVptVccVcdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 75),
    _MscAtmIfVptVccVcdTmBestEffort_Type()
)
mscAtmIfVptVccVcdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBestEffort.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptVccVcdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptVccVcdTmTxPacketWiseDiscard = _MscAtmIfVptVccVcdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 76),
    _MscAtmIfVptVccVcdTmTxPacketWiseDiscard_Type()
)
mscAtmIfVptVccVcdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptVccVcdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptVccVcdTmRxPacketWiseDiscard = _MscAtmIfVptVccVcdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 78),
    _MscAtmIfVptVccVcdTmRxPacketWiseDiscard_Type()
)
mscAtmIfVptVccVcdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVptVccVcdTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVptVccVcdTmAbrConnectionType = _MscAtmIfVptVccVcdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 100, 1, 90),
    _MscAtmIfVptVccVcdTmAbrConnectionType_Type()
)
mscAtmIfVptVccVcdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVptVccVcdTmTxTdpTable_Object = MibTable
mscAtmIfVptVccVcdTmTxTdpTable = _MscAtmIfVptVccVcdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 456)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmTxTdpEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmTxTdpEntry = _MscAtmIfVptVccVcdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 456, 1)
)
mscAtmIfVptVccVcdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVccVcdTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTmTxTdpIndex = _MscAtmIfVptVccVcdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 456, 1, 1),
    _MscAtmIfVptVccVcdTmTxTdpIndex_Type()
)
mscAtmIfVptVccVcdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmTxTdpValue_Object = MibTableColumn
mscAtmIfVptVccVcdTmTxTdpValue = _MscAtmIfVptVccVcdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 456, 1, 2),
    _MscAtmIfVptVccVcdTmTxTdpValue_Type()
)
mscAtmIfVptVccVcdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVptVccVcdTmRxTdpTable_Object = MibTable
mscAtmIfVptVccVcdTmRxTdpTable = _MscAtmIfVptVccVcdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 457)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmRxTdpEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmRxTdpEntry = _MscAtmIfVptVccVcdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 457, 1)
)
mscAtmIfVptVccVcdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVccVcdTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTmRxTdpIndex = _MscAtmIfVptVccVcdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 457, 1, 1),
    _MscAtmIfVptVccVcdTmRxTdpIndex_Type()
)
mscAtmIfVptVccVcdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmRxTdpValue_Object = MibTableColumn
mscAtmIfVptVccVcdTmRxTdpValue = _MscAtmIfVptVccVcdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 457, 1, 2),
    _MscAtmIfVptVccVcdTmRxTdpValue_Type()
)
mscAtmIfVptVccVcdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVptVccVcdTmFqpTable_Object = MibTable
mscAtmIfVptVccVcdTmFqpTable = _MscAtmIfVptVccVcdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 458)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmFqpTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmFqpEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmFqpEntry = _MscAtmIfVptVccVcdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 458, 1)
)
mscAtmIfVptVccVcdTmFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmFqpEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccVcdTmFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmFqpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTmFqpIndex = _MscAtmIfVptVccVcdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 458, 1, 1),
    _MscAtmIfVptVccVcdTmFqpIndex_Type()
)
mscAtmIfVptVccVcdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmFqpIndex.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdTmFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmFqpValue_Object = MibTableColumn
mscAtmIfVptVccVcdTmFqpValue = _MscAtmIfVptVccVcdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 458, 1, 2),
    _MscAtmIfVptVccVcdTmFqpValue_Type()
)
mscAtmIfVptVccVcdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmFqpValue.setStatus("mandatory")
_MscAtmIfVptVccVcdTmBqpTable_Object = MibTable
mscAtmIfVptVccVcdTmBqpTable = _MscAtmIfVptVccVcdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 459)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBqpTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTmBqpEntry_Object = MibTableRow
mscAtmIfVptVccVcdTmBqpEntry = _MscAtmIfVptVccVcdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 459, 1)
)
mscAtmIfVptVccVcdTmBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBqpEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccVcdTmBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTmBqpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTmBqpIndex = _MscAtmIfVptVccVcdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 459, 1, 1),
    _MscAtmIfVptVccVcdTmBqpIndex_Type()
)
mscAtmIfVptVccVcdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBqpIndex.setStatus("mandatory")


class _MscAtmIfVptVccVcdTmBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdTmBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTmBqpValue_Object = MibTableColumn
mscAtmIfVptVccVcdTmBqpValue = _MscAtmIfVptVccVcdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 2, 459, 1, 2),
    _MscAtmIfVptVccVcdTmBqpValue_Type()
)
mscAtmIfVptVccVcdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTmBqpValue.setStatus("mandatory")
_MscAtmIfVptVccVcdPm_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccVcdPm = _MscAtmIfVptVccVcdPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3)
)
_MscAtmIfVptVccVcdPmRowStatusTable_Object = MibTable
mscAtmIfVptVccVcdPmRowStatusTable = _MscAtmIfVptVccVcdPmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccVcdPmRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccVcdPmRowStatusEntry = _MscAtmIfVptVccVcdPmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 1, 1)
)
mscAtmIfVptVccVcdPmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccVcdPmRowStatus_Type = RowStatus
_MscAtmIfVptVccVcdPmRowStatus_Object = MibTableColumn
mscAtmIfVptVccVcdPmRowStatus = _MscAtmIfVptVccVcdPmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 1, 1, 1),
    _MscAtmIfVptVccVcdPmRowStatus_Type()
)
mscAtmIfVptVccVcdPmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmRowStatus.setStatus("mandatory")
_MscAtmIfVptVccVcdPmComponentName_Type = DisplayString
_MscAtmIfVptVccVcdPmComponentName_Object = MibTableColumn
mscAtmIfVptVccVcdPmComponentName = _MscAtmIfVptVccVcdPmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 1, 1, 2),
    _MscAtmIfVptVccVcdPmComponentName_Type()
)
mscAtmIfVptVccVcdPmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmComponentName.setStatus("mandatory")
_MscAtmIfVptVccVcdPmStorageType_Type = StorageType
_MscAtmIfVptVccVcdPmStorageType_Object = MibTableColumn
mscAtmIfVptVccVcdPmStorageType = _MscAtmIfVptVccVcdPmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 1, 1, 4),
    _MscAtmIfVptVccVcdPmStorageType_Type()
)
mscAtmIfVptVccVcdPmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmStorageType.setStatus("mandatory")
_MscAtmIfVptVccVcdPmIndex_Type = NonReplicated
_MscAtmIfVptVccVcdPmIndex_Object = MibTableColumn
mscAtmIfVptVccVcdPmIndex = _MscAtmIfVptVccVcdPmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 1, 1, 10),
    _MscAtmIfVptVccVcdPmIndex_Type()
)
mscAtmIfVptVccVcdPmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmIndex.setStatus("mandatory")
_MscAtmIfVptVccVcdPmProvTable_Object = MibTable
mscAtmIfVptVccVcdPmProvTable = _MscAtmIfVptVccVcdPmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmProvTable.setStatus("mandatory")
_MscAtmIfVptVccVcdPmProvEntry_Object = MibTableRow
mscAtmIfVptVccVcdPmProvEntry = _MscAtmIfVptVccVcdPmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 100, 1)
)
mscAtmIfVptVccVcdPmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmProvEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdPmSegSwitchSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfVptVccVcdPmSegSwitchSideMeasurement based on OctetString"""
    defaultHexValue = "20"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccVcdPmSegSwitchSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfVptVccVcdPmSegSwitchSideMeasurement_Object = MibTableColumn
mscAtmIfVptVccVcdPmSegSwitchSideMeasurement = _MscAtmIfVptVccVcdPmSegSwitchSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 100, 1, 1),
    _MscAtmIfVptVccVcdPmSegSwitchSideMeasurement_Type()
)
mscAtmIfVptVccVcdPmSegSwitchSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmSegSwitchSideMeasurement.setStatus("mandatory")


class _MscAtmIfVptVccVcdPmSegLinkSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfVptVccVcdPmSegLinkSideMeasurement based on OctetString"""
    defaultHexValue = "20"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccVcdPmSegLinkSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfVptVccVcdPmSegLinkSideMeasurement_Object = MibTableColumn
mscAtmIfVptVccVcdPmSegLinkSideMeasurement = _MscAtmIfVptVccVcdPmSegLinkSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 100, 1, 2),
    _MscAtmIfVptVccVcdPmSegLinkSideMeasurement_Type()
)
mscAtmIfVptVccVcdPmSegLinkSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmSegLinkSideMeasurement.setStatus("mandatory")


class _MscAtmIfVptVccVcdPmControlMode_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdPmControlMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoStart", 0),
          ("onDemand", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVccVcdPmControlMode_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdPmControlMode_Object = MibTableColumn
mscAtmIfVptVccVcdPmControlMode = _MscAtmIfVptVccVcdPmControlMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 3, 100, 1, 3),
    _MscAtmIfVptVccVcdPmControlMode_Type()
)
mscAtmIfVptVccVcdPmControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdPmControlMode.setStatus("mandatory")
_MscAtmIfVptVccVcdLbkTable_Object = MibTable
mscAtmIfVptVccVcdLbkTable = _MscAtmIfVptVccVcdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdLbkTable.setStatus("mandatory")
_MscAtmIfVptVccVcdLbkEntry_Object = MibTableRow
mscAtmIfVptVccVcdLbkEntry = _MscAtmIfVptVccVcdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 100, 1)
)
mscAtmIfVptVccVcdLbkEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdLbkEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdSegLinkSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVccVcdSegLinkSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdSegLinkSideLoopback_Object = MibTableColumn
mscAtmIfVptVccVcdSegLinkSideLoopback = _MscAtmIfVptVccVcdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 100, 1, 10),
    _MscAtmIfVptVccVcdSegLinkSideLoopback_Type()
)
mscAtmIfVptVccVcdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdSegLinkSideLoopback.setStatus("mandatory")


class _MscAtmIfVptVccVcdSegSwitchSideLoopback_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVccVcdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdSegSwitchSideLoopback_Object = MibTableColumn
mscAtmIfVptVccVcdSegSwitchSideLoopback = _MscAtmIfVptVccVcdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 100, 1, 20),
    _MscAtmIfVptVccVcdSegSwitchSideLoopback_Type()
)
mscAtmIfVptVccVcdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdSegSwitchSideLoopback.setStatus("mandatory")


class _MscAtmIfVptVccVcdEndToEndLoopback_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVccVcdEndToEndLoopback_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdEndToEndLoopback_Object = MibTableColumn
mscAtmIfVptVccVcdEndToEndLoopback = _MscAtmIfVptVccVcdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 100, 1, 30),
    _MscAtmIfVptVccVcdEndToEndLoopback_Type()
)
mscAtmIfVptVccVcdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdEndToEndLoopback.setStatus("mandatory")


class _MscAtmIfVptVccVcdMCastConnectionType_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdMCastConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipointLeaf", 2),
          ("pointToMultipointRoot", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVptVccVcdMCastConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdMCastConnectionType_Object = MibTableColumn
mscAtmIfVptVccVcdMCastConnectionType = _MscAtmIfVptVccVcdMCastConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 100, 1, 50),
    _MscAtmIfVptVccVcdMCastConnectionType_Type()
)
mscAtmIfVptVccVcdMCastConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdMCastConnectionType.setStatus("mandatory")
_MscAtmIfVptVccVcdTrafficTable_Object = MibTable
mscAtmIfVptVccVcdTrafficTable = _MscAtmIfVptVccVcdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTrafficTable.setStatus("mandatory")
_MscAtmIfVptVccVcdTrafficEntry_Object = MibTableRow
mscAtmIfVptVccVcdTrafficEntry = _MscAtmIfVptVccVcdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1)
)
mscAtmIfVptVccVcdTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTrafficEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptVccVcdTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccVcdTxTrafficDescType = _MscAtmIfVptVccVcdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 10),
    _MscAtmIfVptVccVcdTxTrafficDescType_Type()
)
mscAtmIfVptVccVcdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptVccVcdTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptVccVcdTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTxQosClass_Object = MibTableColumn
mscAtmIfVptVccVcdTxQosClass = _MscAtmIfVptVccVcdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 20),
    _MscAtmIfVptVccVcdTxQosClass_Type()
)
mscAtmIfVptVccVcdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTxQosClass.setStatus("obsolete")


class _MscAtmIfVptVccVcdFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVccVcdFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdFwdQosClass_Object = MibTableColumn
mscAtmIfVptVccVcdFwdQosClass = _MscAtmIfVptVccVcdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 21),
    _MscAtmIfVptVccVcdFwdQosClass_Type()
)
mscAtmIfVptVccVcdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdFwdQosClass.setStatus("obsolete")


class _MscAtmIfVptVccVcdHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_MscAtmIfVptVccVcdHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdHoldingPriority_Object = MibTableColumn
mscAtmIfVptVccVcdHoldingPriority = _MscAtmIfVptVccVcdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 25),
    _MscAtmIfVptVccVcdHoldingPriority_Type()
)
mscAtmIfVptVccVcdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdHoldingPriority.setStatus("obsolete")


class _MscAtmIfVptVccVcdRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_MscAtmIfVptVccVcdRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccVcdRxTrafficDescType = _MscAtmIfVptVccVcdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 30),
    _MscAtmIfVptVccVcdRxTrafficDescType_Type()
)
mscAtmIfVptVccVcdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptVccVcdRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptVccVcdRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdRxQosClass_Object = MibTableColumn
mscAtmIfVptVccVcdRxQosClass = _MscAtmIfVptVccVcdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 40),
    _MscAtmIfVptVccVcdRxQosClass_Type()
)
mscAtmIfVptVccVcdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRxQosClass.setStatus("obsolete")


class _MscAtmIfVptVccVcdBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_MscAtmIfVptVccVcdBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdBwdQosClass_Object = MibTableColumn
mscAtmIfVptVccVcdBwdQosClass = _MscAtmIfVptVccVcdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 41),
    _MscAtmIfVptVccVcdBwdQosClass_Type()
)
mscAtmIfVptVccVcdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBwdQosClass.setStatus("obsolete")


class _MscAtmIfVptVccVcdAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptVccVcdAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptVccVcdAtmServiceCategory = _MscAtmIfVptVccVcdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 42),
    _MscAtmIfVptVccVcdAtmServiceCategory_Type()
)
mscAtmIfVptVccVcdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVptVccVcdTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVccVcdTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTrafficShaping_Object = MibTableColumn
mscAtmIfVptVccVcdTrafficShaping = _MscAtmIfVptVccVcdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 50),
    _MscAtmIfVptVccVcdTrafficShaping_Type()
)
mscAtmIfVptVccVcdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTrafficShaping.setStatus("obsolete")


class _MscAtmIfVptVccVcdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_MscAtmIfVptVccVcdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptVccVcdUnshapedTransmitQueueing = _MscAtmIfVptVccVcdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 60),
    _MscAtmIfVptVccVcdUnshapedTransmitQueueing_Type()
)
mscAtmIfVptVccVcdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVptVccVcdUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_MscAtmIfVptVccVcdUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdUsageParameterControl_Object = MibTableColumn
mscAtmIfVptVccVcdUsageParameterControl = _MscAtmIfVptVccVcdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 70),
    _MscAtmIfVptVccVcdUsageParameterControl_Type()
)
mscAtmIfVptVccVcdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVptVccVcdBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptVccVcdBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdBearerClassBbc_Object = MibTableColumn
mscAtmIfVptVccVcdBearerClassBbc = _MscAtmIfVptVccVcdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 71),
    _MscAtmIfVptVccVcdBearerClassBbc_Type()
)
mscAtmIfVptVccVcdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVptVccVcdTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptVccVcdTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptVccVcdTransferCapabilityBbc = _MscAtmIfVptVccVcdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 72),
    _MscAtmIfVptVccVcdTransferCapabilityBbc_Type()
)
mscAtmIfVptVccVcdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVptVccVcdClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVccVcdClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdClippingBbc_Object = MibTableColumn
mscAtmIfVptVccVcdClippingBbc = _MscAtmIfVptVccVcdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 74),
    _MscAtmIfVptVccVcdClippingBbc_Type()
)
mscAtmIfVptVccVcdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdClippingBbc.setStatus("obsolete")


class _MscAtmIfVptVccVcdBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_MscAtmIfVptVccVcdBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdBestEffort_Object = MibTableColumn
mscAtmIfVptVccVcdBestEffort = _MscAtmIfVptVccVcdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 75),
    _MscAtmIfVptVccVcdBestEffort_Type()
)
mscAtmIfVptVccVcdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBestEffort.setStatus("obsolete")


class _MscAtmIfVptVccVcdFwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVptVccVcdFwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdFwdFrameDiscard_Object = MibTableColumn
mscAtmIfVptVccVcdFwdFrameDiscard = _MscAtmIfVptVccVcdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 76),
    _MscAtmIfVptVccVcdFwdFrameDiscard_Type()
)
mscAtmIfVptVccVcdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdFwdFrameDiscard.setStatus("obsolete")


class _MscAtmIfVptVccVcdBwdFrameDiscard_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVptVccVcdBwdFrameDiscard_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdBwdFrameDiscard_Object = MibTableColumn
mscAtmIfVptVccVcdBwdFrameDiscard = _MscAtmIfVptVccVcdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 110, 1, 77),
    _MscAtmIfVptVccVcdBwdFrameDiscard_Type()
)
mscAtmIfVptVccVcdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBwdFrameDiscard.setStatus("obsolete")
_MscAtmIfVptVccVcdAcctTable_Object = MibTable
mscAtmIfVptVccVcdAcctTable = _MscAtmIfVptVccVcdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 111)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdAcctTable.setStatus("mandatory")
_MscAtmIfVptVccVcdAcctEntry_Object = MibTableRow
mscAtmIfVptVccVcdAcctEntry = _MscAtmIfVptVccVcdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 111, 1)
)
mscAtmIfVptVccVcdAcctEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdAcctEntry.setStatus("mandatory")


class _MscAtmIfVptVccVcdCorrelationTag_Type(AsciiString):
    """Custom type mscAtmIfVptVccVcdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_MscAtmIfVptVccVcdCorrelationTag_Type.__name__ = "AsciiString"
_MscAtmIfVptVccVcdCorrelationTag_Object = MibTableColumn
mscAtmIfVptVccVcdCorrelationTag = _MscAtmIfVptVccVcdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 111, 1, 10),
    _MscAtmIfVptVccVcdCorrelationTag_Type()
)
mscAtmIfVptVccVcdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdCorrelationTag.setStatus("mandatory")
_MscAtmIfVptVccVcdTxTdpTable_Object = MibTable
mscAtmIfVptVccVcdTxTdpTable = _MscAtmIfVptVccVcdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 297)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTxTdpTable.setStatus("obsolete")
_MscAtmIfVptVccVcdTxTdpEntry_Object = MibTableRow
mscAtmIfVptVccVcdTxTdpEntry = _MscAtmIfVptVccVcdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 297, 1)
)
mscAtmIfVptVccVcdTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptVccVcdTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVccVcdTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdTxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdTxTdpIndex = _MscAtmIfVptVccVcdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 297, 1, 1),
    _MscAtmIfVptVccVcdTxTdpIndex_Type()
)
mscAtmIfVptVccVcdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptVccVcdTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdTxTdpValue_Object = MibTableColumn
mscAtmIfVptVccVcdTxTdpValue = _MscAtmIfVptVccVcdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 297, 1, 2),
    _MscAtmIfVptVccVcdTxTdpValue_Type()
)
mscAtmIfVptVccVcdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdTxTdpValue.setStatus("obsolete")
_MscAtmIfVptVccVcdRxTdpTable_Object = MibTable
mscAtmIfVptVccVcdRxTdpTable = _MscAtmIfVptVccVcdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 298)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRxTdpTable.setStatus("obsolete")
_MscAtmIfVptVccVcdRxTdpEntry_Object = MibTableRow
mscAtmIfVptVccVcdRxTdpEntry = _MscAtmIfVptVccVcdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 298, 1)
)
mscAtmIfVptVccVcdRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptVccVcdRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVccVcdRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdRxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdRxTdpIndex = _MscAtmIfVptVccVcdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 298, 1, 1),
    _MscAtmIfVptVccVcdRxTdpIndex_Type()
)
mscAtmIfVptVccVcdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptVccVcdRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdRxTdpValue_Object = MibTableColumn
mscAtmIfVptVccVcdRxTdpValue = _MscAtmIfVptVccVcdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 298, 1, 2),
    _MscAtmIfVptVccVcdRxTdpValue_Type()
)
mscAtmIfVptVccVcdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdRxTdpValue.setStatus("obsolete")
_MscAtmIfVptVccVcdFqpTable_Object = MibTable
mscAtmIfVptVccVcdFqpTable = _MscAtmIfVptVccVcdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 359)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdFqpTable.setStatus("obsolete")
_MscAtmIfVptVccVcdFqpEntry_Object = MibTableRow
mscAtmIfVptVccVcdFqpEntry = _MscAtmIfVptVccVcdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 359, 1)
)
mscAtmIfVptVccVcdFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdFqpEntry.setStatus("obsolete")


class _MscAtmIfVptVccVcdFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccVcdFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdFqpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdFqpIndex = _MscAtmIfVptVccVcdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 359, 1, 1),
    _MscAtmIfVptVccVcdFqpIndex_Type()
)
mscAtmIfVptVccVcdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdFqpIndex.setStatus("obsolete")


class _MscAtmIfVptVccVcdFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdFqpValue_Object = MibTableColumn
mscAtmIfVptVccVcdFqpValue = _MscAtmIfVptVccVcdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 359, 1, 2),
    _MscAtmIfVptVccVcdFqpValue_Type()
)
mscAtmIfVptVccVcdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdFqpValue.setStatus("obsolete")
_MscAtmIfVptVccVcdBqpTable_Object = MibTable
mscAtmIfVptVccVcdBqpTable = _MscAtmIfVptVccVcdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 360)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBqpTable.setStatus("obsolete")
_MscAtmIfVptVccVcdBqpEntry_Object = MibTableRow
mscAtmIfVptVccVcdBqpEntry = _MscAtmIfVptVccVcdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 360, 1)
)
mscAtmIfVptVccVcdBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccVcdBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBqpEntry.setStatus("obsolete")


class _MscAtmIfVptVccVcdBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccVcdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccVcdBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccVcdBqpIndex_Object = MibTableColumn
mscAtmIfVptVccVcdBqpIndex = _MscAtmIfVptVccVcdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 360, 1, 1),
    _MscAtmIfVptVccVcdBqpIndex_Type()
)
mscAtmIfVptVccVcdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBqpIndex.setStatus("obsolete")


class _MscAtmIfVptVccVcdBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccVcdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccVcdBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccVcdBqpValue_Object = MibTableColumn
mscAtmIfVptVccVcdBqpValue = _MscAtmIfVptVccVcdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 2, 360, 1, 2),
    _MscAtmIfVptVccVcdBqpValue_Type()
)
mscAtmIfVptVccVcdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccVcdBqpValue.setStatus("obsolete")
_MscAtmIfVptVccLoop_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccLoop = _MscAtmIfVptVccLoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3)
)
_MscAtmIfVptVccLoopRowStatusTable_Object = MibTable
mscAtmIfVptVccLoopRowStatusTable = _MscAtmIfVptVccLoopRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccLoopRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccLoopRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccLoopRowStatusEntry = _MscAtmIfVptVccLoopRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3, 1, 1)
)
mscAtmIfVptVccLoopRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccLoopIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccLoopRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccLoopRowStatus_Type = RowStatus
_MscAtmIfVptVccLoopRowStatus_Object = MibTableColumn
mscAtmIfVptVccLoopRowStatus = _MscAtmIfVptVccLoopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3, 1, 1, 1),
    _MscAtmIfVptVccLoopRowStatus_Type()
)
mscAtmIfVptVccLoopRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccLoopRowStatus.setStatus("mandatory")
_MscAtmIfVptVccLoopComponentName_Type = DisplayString
_MscAtmIfVptVccLoopComponentName_Object = MibTableColumn
mscAtmIfVptVccLoopComponentName = _MscAtmIfVptVccLoopComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3, 1, 1, 2),
    _MscAtmIfVptVccLoopComponentName_Type()
)
mscAtmIfVptVccLoopComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccLoopComponentName.setStatus("mandatory")
_MscAtmIfVptVccLoopStorageType_Type = StorageType
_MscAtmIfVptVccLoopStorageType_Object = MibTableColumn
mscAtmIfVptVccLoopStorageType = _MscAtmIfVptVccLoopStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3, 1, 1, 4),
    _MscAtmIfVptVccLoopStorageType_Type()
)
mscAtmIfVptVccLoopStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccLoopStorageType.setStatus("mandatory")
_MscAtmIfVptVccLoopIndex_Type = NonReplicated
_MscAtmIfVptVccLoopIndex_Object = MibTableColumn
mscAtmIfVptVccLoopIndex = _MscAtmIfVptVccLoopIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 3, 1, 1, 10),
    _MscAtmIfVptVccLoopIndex_Type()
)
mscAtmIfVptVccLoopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccLoopIndex.setStatus("mandatory")
_MscAtmIfVptVccNep_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccNep = _MscAtmIfVptVccNep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5)
)
_MscAtmIfVptVccNepRowStatusTable_Object = MibTable
mscAtmIfVptVccNepRowStatusTable = _MscAtmIfVptVccNepRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccNepRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccNepRowStatusEntry = _MscAtmIfVptVccNepRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 1, 1)
)
mscAtmIfVptVccNepRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccNepIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccNepRowStatus_Type = RowStatus
_MscAtmIfVptVccNepRowStatus_Object = MibTableColumn
mscAtmIfVptVccNepRowStatus = _MscAtmIfVptVccNepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 1, 1, 1),
    _MscAtmIfVptVccNepRowStatus_Type()
)
mscAtmIfVptVccNepRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepRowStatus.setStatus("mandatory")
_MscAtmIfVptVccNepComponentName_Type = DisplayString
_MscAtmIfVptVccNepComponentName_Object = MibTableColumn
mscAtmIfVptVccNepComponentName = _MscAtmIfVptVccNepComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 1, 1, 2),
    _MscAtmIfVptVccNepComponentName_Type()
)
mscAtmIfVptVccNepComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepComponentName.setStatus("mandatory")
_MscAtmIfVptVccNepStorageType_Type = StorageType
_MscAtmIfVptVccNepStorageType_Object = MibTableColumn
mscAtmIfVptVccNepStorageType = _MscAtmIfVptVccNepStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 1, 1, 4),
    _MscAtmIfVptVccNepStorageType_Type()
)
mscAtmIfVptVccNepStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepStorageType.setStatus("mandatory")
_MscAtmIfVptVccNepIndex_Type = NonReplicated
_MscAtmIfVptVccNepIndex_Object = MibTableColumn
mscAtmIfVptVccNepIndex = _MscAtmIfVptVccNepIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 1, 1, 10),
    _MscAtmIfVptVccNepIndex_Type()
)
mscAtmIfVptVccNepIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepIndex.setStatus("mandatory")
_MscAtmIfVptVccNepProvTable_Object = MibTable
mscAtmIfVptVccNepProvTable = _MscAtmIfVptVccNepProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepProvTable.setStatus("mandatory")
_MscAtmIfVptVccNepProvEntry_Object = MibTableRow
mscAtmIfVptVccNepProvEntry = _MscAtmIfVptVccNepProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 100, 1)
)
mscAtmIfVptVccNepProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccNepIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepProvEntry.setStatus("mandatory")
_MscAtmIfVptVccNepApplicationName_Type = Link
_MscAtmIfVptVccNepApplicationName_Object = MibTableColumn
mscAtmIfVptVccNepApplicationName = _MscAtmIfVptVccNepApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 5, 100, 1, 10),
    _MscAtmIfVptVccNepApplicationName_Type()
)
mscAtmIfVptVccNepApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccNepApplicationName.setStatus("mandatory")
_MscAtmIfVptVccTest_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccTest = _MscAtmIfVptVccTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6)
)
_MscAtmIfVptVccTestRowStatusTable_Object = MibTable
mscAtmIfVptVccTestRowStatusTable = _MscAtmIfVptVccTestRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccTestRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccTestRowStatusEntry = _MscAtmIfVptVccTestRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 1, 1)
)
mscAtmIfVptVccTestRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccTestRowStatus_Type = RowStatus
_MscAtmIfVptVccTestRowStatus_Object = MibTableColumn
mscAtmIfVptVccTestRowStatus = _MscAtmIfVptVccTestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 1, 1, 1),
    _MscAtmIfVptVccTestRowStatus_Type()
)
mscAtmIfVptVccTestRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestRowStatus.setStatus("mandatory")
_MscAtmIfVptVccTestComponentName_Type = DisplayString
_MscAtmIfVptVccTestComponentName_Object = MibTableColumn
mscAtmIfVptVccTestComponentName = _MscAtmIfVptVccTestComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 1, 1, 2),
    _MscAtmIfVptVccTestComponentName_Type()
)
mscAtmIfVptVccTestComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestComponentName.setStatus("mandatory")
_MscAtmIfVptVccTestStorageType_Type = StorageType
_MscAtmIfVptVccTestStorageType_Object = MibTableColumn
mscAtmIfVptVccTestStorageType = _MscAtmIfVptVccTestStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 1, 1, 4),
    _MscAtmIfVptVccTestStorageType_Type()
)
mscAtmIfVptVccTestStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestStorageType.setStatus("mandatory")
_MscAtmIfVptVccTestIndex_Type = NonReplicated
_MscAtmIfVptVccTestIndex_Object = MibTableColumn
mscAtmIfVptVccTestIndex = _MscAtmIfVptVccTestIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 1, 1, 10),
    _MscAtmIfVptVccTestIndex_Type()
)
mscAtmIfVptVccTestIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestIndex.setStatus("mandatory")
_MscAtmIfVptVccTestStateTable_Object = MibTable
mscAtmIfVptVccTestStateTable = _MscAtmIfVptVccTestStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestStateTable.setStatus("mandatory")
_MscAtmIfVptVccTestStateEntry_Object = MibTableRow
mscAtmIfVptVccTestStateEntry = _MscAtmIfVptVccTestStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 100, 1)
)
mscAtmIfVptVccTestStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestStateEntry.setStatus("mandatory")


class _MscAtmIfVptVccTestAdminState_Type(Integer32):
    """Custom type mscAtmIfVptVccTestAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfVptVccTestAdminState_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestAdminState_Object = MibTableColumn
mscAtmIfVptVccTestAdminState = _MscAtmIfVptVccTestAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 100, 1, 1),
    _MscAtmIfVptVccTestAdminState_Type()
)
mscAtmIfVptVccTestAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestAdminState.setStatus("mandatory")


class _MscAtmIfVptVccTestOperationalState_Type(Integer32):
    """Custom type mscAtmIfVptVccTestOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptVccTestOperationalState_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestOperationalState_Object = MibTableColumn
mscAtmIfVptVccTestOperationalState = _MscAtmIfVptVccTestOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 100, 1, 2),
    _MscAtmIfVptVccTestOperationalState_Type()
)
mscAtmIfVptVccTestOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestOperationalState.setStatus("mandatory")


class _MscAtmIfVptVccTestUsageState_Type(Integer32):
    """Custom type mscAtmIfVptVccTestUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfVptVccTestUsageState_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestUsageState_Object = MibTableColumn
mscAtmIfVptVccTestUsageState = _MscAtmIfVptVccTestUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 100, 1, 3),
    _MscAtmIfVptVccTestUsageState_Type()
)
mscAtmIfVptVccTestUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestUsageState.setStatus("mandatory")
_MscAtmIfVptVccTestSetupTable_Object = MibTable
mscAtmIfVptVccTestSetupTable = _MscAtmIfVptVccTestSetupTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestSetupTable.setStatus("mandatory")
_MscAtmIfVptVccTestSetupEntry_Object = MibTableRow
mscAtmIfVptVccTestSetupEntry = _MscAtmIfVptVccTestSetupEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1)
)
mscAtmIfVptVccTestSetupEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestSetupEntry.setStatus("mandatory")


class _MscAtmIfVptVccTestFrmTypes_Type(OctetString):
    """Custom type mscAtmIfVptVccTestFrmTypes based on OctetString"""
    defaultHexValue = "c0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccTestFrmTypes_Type.__name__ = "OctetString"
_MscAtmIfVptVccTestFrmTypes_Object = MibTableColumn
mscAtmIfVptVccTestFrmTypes = _MscAtmIfVptVccTestFrmTypes_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 10),
    _MscAtmIfVptVccTestFrmTypes_Type()
)
mscAtmIfVptVccTestFrmTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestFrmTypes.setStatus("mandatory")


class _MscAtmIfVptVccTestFrmSize_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTestFrmSize based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 4096),
    )


_MscAtmIfVptVccTestFrmSize_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTestFrmSize_Object = MibTableColumn
mscAtmIfVptVccTestFrmSize = _MscAtmIfVptVccTestFrmSize_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 20),
    _MscAtmIfVptVccTestFrmSize_Type()
)
mscAtmIfVptVccTestFrmSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestFrmSize.setStatus("mandatory")


class _MscAtmIfVptVccTestFrmPatternType_Type(Integer32):
    """Custom type mscAtmIfVptVccTestFrmPatternType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ccitt32kBitPattern", 0),
          ("ccitt8MBitPattern", 1),
          ("customizedPattern", 2))
    )


_MscAtmIfVptVccTestFrmPatternType_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestFrmPatternType_Object = MibTableColumn
mscAtmIfVptVccTestFrmPatternType = _MscAtmIfVptVccTestFrmPatternType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 30),
    _MscAtmIfVptVccTestFrmPatternType_Type()
)
mscAtmIfVptVccTestFrmPatternType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestFrmPatternType.setStatus("mandatory")


class _MscAtmIfVptVccTestCustomizedPattern_Type(Hex):
    """Custom type mscAtmIfVptVccTestCustomizedPattern based on Hex"""
    defaultValue = 1431655765

    subtypeSpec = Hex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_MscAtmIfVptVccTestCustomizedPattern_Type.__name__ = "Hex"
_MscAtmIfVptVccTestCustomizedPattern_Object = MibTableColumn
mscAtmIfVptVccTestCustomizedPattern = _MscAtmIfVptVccTestCustomizedPattern_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 40),
    _MscAtmIfVptVccTestCustomizedPattern_Type()
)
mscAtmIfVptVccTestCustomizedPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestCustomizedPattern.setStatus("mandatory")


class _MscAtmIfVptVccTestDuration_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTestDuration based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30240),
    )


_MscAtmIfVptVccTestDuration_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTestDuration_Object = MibTableColumn
mscAtmIfVptVccTestDuration = _MscAtmIfVptVccTestDuration_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 50),
    _MscAtmIfVptVccTestDuration_Type()
)
mscAtmIfVptVccTestDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestDuration.setStatus("mandatory")


class _MscAtmIfVptVccTestBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVptVccTestBandwidthElastic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVccTestBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestBandwidthElastic_Object = MibTableColumn
mscAtmIfVptVccTestBandwidthElastic = _MscAtmIfVptVccTestBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 60),
    _MscAtmIfVptVccTestBandwidthElastic_Type()
)
mscAtmIfVptVccTestBandwidthElastic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestBandwidthElastic.setStatus("mandatory")


class _MscAtmIfVptVccTestOverrideHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVccTestOverrideHoldingPriority based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("noOverride", 6))
    )


_MscAtmIfVptVccTestOverrideHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestOverrideHoldingPriority_Object = MibTableColumn
mscAtmIfVptVccTestOverrideHoldingPriority = _MscAtmIfVptVccTestOverrideHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 110, 1, 70),
    _MscAtmIfVptVccTestOverrideHoldingPriority_Type()
)
mscAtmIfVptVccTestOverrideHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestOverrideHoldingPriority.setStatus("mandatory")
_MscAtmIfVptVccTestResultsTable_Object = MibTable
mscAtmIfVptVccTestResultsTable = _MscAtmIfVptVccTestResultsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestResultsTable.setStatus("mandatory")
_MscAtmIfVptVccTestResultsEntry_Object = MibTableRow
mscAtmIfVptVccTestResultsEntry = _MscAtmIfVptVccTestResultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1)
)
mscAtmIfVptVccTestResultsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestResultsEntry.setStatus("mandatory")


class _MscAtmIfVptVccTestElapsedTime_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTestElapsedTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_MscAtmIfVptVccTestElapsedTime_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTestElapsedTime_Object = MibTableColumn
mscAtmIfVptVccTestElapsedTime = _MscAtmIfVptVccTestElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 10),
    _MscAtmIfVptVccTestElapsedTime_Type()
)
mscAtmIfVptVccTestElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestElapsedTime.setStatus("mandatory")


class _MscAtmIfVptVccTestTimeRemaining_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTestTimeRemaining based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_MscAtmIfVptVccTestTimeRemaining_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTestTimeRemaining_Object = MibTableColumn
mscAtmIfVptVccTestTimeRemaining = _MscAtmIfVptVccTestTimeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 20),
    _MscAtmIfVptVccTestTimeRemaining_Type()
)
mscAtmIfVptVccTestTimeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestTimeRemaining.setStatus("mandatory")


class _MscAtmIfVptVccTestCauseOfTermination_Type(Integer32):
    """Custom type mscAtmIfVptVccTestCauseOfTermination based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("neverStarted", 2),
          ("stoppedByOperator", 1),
          ("testRunning", 3),
          ("testTimeExpired", 0))
    )


_MscAtmIfVptVccTestCauseOfTermination_Type.__name__ = "Integer32"
_MscAtmIfVptVccTestCauseOfTermination_Object = MibTableColumn
mscAtmIfVptVccTestCauseOfTermination = _MscAtmIfVptVccTestCauseOfTermination_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 30),
    _MscAtmIfVptVccTestCauseOfTermination_Type()
)
mscAtmIfVptVccTestCauseOfTermination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestCauseOfTermination.setStatus("mandatory")
_MscAtmIfVptVccTestBytesTx_Type = PassportCounter64
_MscAtmIfVptVccTestBytesTx_Object = MibTableColumn
mscAtmIfVptVccTestBytesTx = _MscAtmIfVptVccTestBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 40),
    _MscAtmIfVptVccTestBytesTx_Type()
)
mscAtmIfVptVccTestBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestBytesTx.setStatus("mandatory")
_MscAtmIfVptVccTestBytesRx_Type = PassportCounter64
_MscAtmIfVptVccTestBytesRx_Object = MibTableColumn
mscAtmIfVptVccTestBytesRx = _MscAtmIfVptVccTestBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 50),
    _MscAtmIfVptVccTestBytesRx_Type()
)
mscAtmIfVptVccTestBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestBytesRx.setStatus("mandatory")
_MscAtmIfVptVccTestLoadingFrmTx_Type = PassportCounter64
_MscAtmIfVptVccTestLoadingFrmTx_Object = MibTableColumn
mscAtmIfVptVccTestLoadingFrmTx = _MscAtmIfVptVccTestLoadingFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 60),
    _MscAtmIfVptVccTestLoadingFrmTx_Type()
)
mscAtmIfVptVccTestLoadingFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestLoadingFrmTx.setStatus("mandatory")
_MscAtmIfVptVccTestLoadingFrmRx_Type = PassportCounter64
_MscAtmIfVptVccTestLoadingFrmRx_Object = MibTableColumn
mscAtmIfVptVccTestLoadingFrmRx = _MscAtmIfVptVccTestLoadingFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 70),
    _MscAtmIfVptVccTestLoadingFrmRx_Type()
)
mscAtmIfVptVccTestLoadingFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestLoadingFrmRx.setStatus("mandatory")
_MscAtmIfVptVccTestLoadingFrmLost_Type = PassportCounter64
_MscAtmIfVptVccTestLoadingFrmLost_Object = MibTableColumn
mscAtmIfVptVccTestLoadingFrmLost = _MscAtmIfVptVccTestLoadingFrmLost_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 80),
    _MscAtmIfVptVccTestLoadingFrmLost_Type()
)
mscAtmIfVptVccTestLoadingFrmLost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestLoadingFrmLost.setStatus("mandatory")
_MscAtmIfVptVccTestVerificationFrmTx_Type = PassportCounter64
_MscAtmIfVptVccTestVerificationFrmTx_Object = MibTableColumn
mscAtmIfVptVccTestVerificationFrmTx = _MscAtmIfVptVccTestVerificationFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 90),
    _MscAtmIfVptVccTestVerificationFrmTx_Type()
)
mscAtmIfVptVccTestVerificationFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestVerificationFrmTx.setStatus("mandatory")
_MscAtmIfVptVccTestVerificationFrmRx_Type = PassportCounter64
_MscAtmIfVptVccTestVerificationFrmRx_Object = MibTableColumn
mscAtmIfVptVccTestVerificationFrmRx = _MscAtmIfVptVccTestVerificationFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 100),
    _MscAtmIfVptVccTestVerificationFrmRx_Type()
)
mscAtmIfVptVccTestVerificationFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestVerificationFrmRx.setStatus("mandatory")
_MscAtmIfVptVccTestVerificationFrmBad_Type = PassportCounter64
_MscAtmIfVptVccTestVerificationFrmBad_Object = MibTableColumn
mscAtmIfVptVccTestVerificationFrmBad = _MscAtmIfVptVccTestVerificationFrmBad_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 110),
    _MscAtmIfVptVccTestVerificationFrmBad_Type()
)
mscAtmIfVptVccTestVerificationFrmBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestVerificationFrmBad.setStatus("mandatory")
_MscAtmIfVptVccTestUnrecognizableFrmRx_Type = PassportCounter64
_MscAtmIfVptVccTestUnrecognizableFrmRx_Object = MibTableColumn
mscAtmIfVptVccTestUnrecognizableFrmRx = _MscAtmIfVptVccTestUnrecognizableFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 6, 120, 1, 120),
    _MscAtmIfVptVccTestUnrecognizableFrmRx_Type()
)
mscAtmIfVptVccTestUnrecognizableFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTestUnrecognizableFrmRx.setStatus("mandatory")
_MscAtmIfVptVccTm_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccTm = _MscAtmIfVptVccTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7)
)
_MscAtmIfVptVccTmRowStatusTable_Object = MibTable
mscAtmIfVptVccTmRowStatusTable = _MscAtmIfVptVccTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccTmRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccTmRowStatusEntry = _MscAtmIfVptVccTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 1, 1)
)
mscAtmIfVptVccTmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccTmRowStatus_Type = RowStatus
_MscAtmIfVptVccTmRowStatus_Object = MibTableColumn
mscAtmIfVptVccTmRowStatus = _MscAtmIfVptVccTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 1, 1, 1),
    _MscAtmIfVptVccTmRowStatus_Type()
)
mscAtmIfVptVccTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRowStatus.setStatus("mandatory")
_MscAtmIfVptVccTmComponentName_Type = DisplayString
_MscAtmIfVptVccTmComponentName_Object = MibTableColumn
mscAtmIfVptVccTmComponentName = _MscAtmIfVptVccTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 1, 1, 2),
    _MscAtmIfVptVccTmComponentName_Type()
)
mscAtmIfVptVccTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmComponentName.setStatus("mandatory")
_MscAtmIfVptVccTmStorageType_Type = StorageType
_MscAtmIfVptVccTmStorageType_Object = MibTableColumn
mscAtmIfVptVccTmStorageType = _MscAtmIfVptVccTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 1, 1, 4),
    _MscAtmIfVptVccTmStorageType_Type()
)
mscAtmIfVptVccTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmStorageType.setStatus("mandatory")
_MscAtmIfVptVccTmIndex_Type = NonReplicated
_MscAtmIfVptVccTmIndex_Object = MibTableColumn
mscAtmIfVptVccTmIndex = _MscAtmIfVptVccTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 1, 1, 10),
    _MscAtmIfVptVccTmIndex_Type()
)
mscAtmIfVptVccTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmIndex.setStatus("mandatory")
_MscAtmIfVptVccTmAbr_ObjectIdentity = ObjectIdentity
mscAtmIfVptVccTmAbr = _MscAtmIfVptVccTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2)
)
_MscAtmIfVptVccTmAbrRowStatusTable_Object = MibTable
mscAtmIfVptVccTmAbrRowStatusTable = _MscAtmIfVptVccTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrRowStatusTable.setStatus("mandatory")
_MscAtmIfVptVccTmAbrRowStatusEntry_Object = MibTableRow
mscAtmIfVptVccTmAbrRowStatusEntry = _MscAtmIfVptVccTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 1, 1)
)
mscAtmIfVptVccTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrRowStatusEntry.setStatus("mandatory")
_MscAtmIfVptVccTmAbrRowStatus_Type = RowStatus
_MscAtmIfVptVccTmAbrRowStatus_Object = MibTableColumn
mscAtmIfVptVccTmAbrRowStatus = _MscAtmIfVptVccTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 1, 1, 1),
    _MscAtmIfVptVccTmAbrRowStatus_Type()
)
mscAtmIfVptVccTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrRowStatus.setStatus("mandatory")
_MscAtmIfVptVccTmAbrComponentName_Type = DisplayString
_MscAtmIfVptVccTmAbrComponentName_Object = MibTableColumn
mscAtmIfVptVccTmAbrComponentName = _MscAtmIfVptVccTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 1, 1, 2),
    _MscAtmIfVptVccTmAbrComponentName_Type()
)
mscAtmIfVptVccTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrComponentName.setStatus("mandatory")
_MscAtmIfVptVccTmAbrStorageType_Type = StorageType
_MscAtmIfVptVccTmAbrStorageType_Object = MibTableColumn
mscAtmIfVptVccTmAbrStorageType = _MscAtmIfVptVccTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 1, 1, 4),
    _MscAtmIfVptVccTmAbrStorageType_Type()
)
mscAtmIfVptVccTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrStorageType.setStatus("mandatory")
_MscAtmIfVptVccTmAbrIndex_Type = NonReplicated
_MscAtmIfVptVccTmAbrIndex_Object = MibTableColumn
mscAtmIfVptVccTmAbrIndex = _MscAtmIfVptVccTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 1, 1, 10),
    _MscAtmIfVptVccTmAbrIndex_Type()
)
mscAtmIfVptVccTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrIndex.setStatus("mandatory")
_MscAtmIfVptVccTmAbrOperTable_Object = MibTable
mscAtmIfVptVccTmAbrOperTable = _MscAtmIfVptVccTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrOperTable.setStatus("mandatory")
_MscAtmIfVptVccTmAbrOperEntry_Object = MibTableRow
mscAtmIfVptVccTmAbrOperEntry = _MscAtmIfVptVccTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1)
)
mscAtmIfVptVccTmAbrOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrOperEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptVccTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrInitialCellRate_Object = MibTableColumn
mscAtmIfVptVccTmAbrInitialCellRate = _MscAtmIfVptVccTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 10),
    _MscAtmIfVptVccTmAbrInitialCellRate_Type()
)
mscAtmIfVptVccTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrInitialCellRate.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_MscAtmIfVptVccTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrTransientBufferExposure_Object = MibTableColumn
mscAtmIfVptVccTmAbrTransientBufferExposure = _MscAtmIfVptVccTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 11),
    _MscAtmIfVptVccTmAbrTransientBufferExposure_Type()
)
mscAtmIfVptVccTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrTransientBufferExposure.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_MscAtmIfVptVccTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrFixedRoundTripTime_Object = MibTableColumn
mscAtmIfVptVccTmAbrFixedRoundTripTime = _MscAtmIfVptVccTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 12),
    _MscAtmIfVptVccTmAbrFixedRoundTripTime_Type()
)
mscAtmIfVptVccTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrFixedRoundTripTime.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptVccTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrRateDecreaseFactor_Object = MibTableColumn
mscAtmIfVptVccTmAbrRateDecreaseFactor = _MscAtmIfVptVccTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 13),
    _MscAtmIfVptVccTmAbrRateDecreaseFactor_Type()
)
mscAtmIfVptVccTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrRateDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_MscAtmIfVptVccTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrRateIncreaseFactor_Object = MibTableColumn
mscAtmIfVptVccTmAbrRateIncreaseFactor = _MscAtmIfVptVccTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 14),
    _MscAtmIfVptVccTmAbrRateIncreaseFactor_Type()
)
mscAtmIfVptVccTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrRateIncreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_MscAtmIfVptVccTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrMaxCellPerRmCell_Object = MibTableColumn
mscAtmIfVptVccTmAbrMaxCellPerRmCell = _MscAtmIfVptVccTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 15),
    _MscAtmIfVptVccTmAbrMaxCellPerRmCell_Type()
)
mscAtmIfVptVccTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_MscAtmIfVptVccTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
mscAtmIfVptVccTmAbrMaxTimeBetweenRmCell = _MscAtmIfVptVccTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 16),
    _MscAtmIfVptVccTmAbrMaxTimeBetweenRmCell_Type()
)
mscAtmIfVptVccTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_MscAtmIfVptVccTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrCutoffDecreaseFactor_Object = MibTableColumn
mscAtmIfVptVccTmAbrCutoffDecreaseFactor = _MscAtmIfVptVccTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 17),
    _MscAtmIfVptVccTmAbrCutoffDecreaseFactor_Type()
)
mscAtmIfVptVccTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_MscAtmIfVptVccTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
mscAtmIfVptVccTmAbrAcrDecreaseTimeFactor = _MscAtmIfVptVccTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 18),
    _MscAtmIfVptVccTmAbrAcrDecreaseTimeFactor_Type()
)
mscAtmIfVptVccTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_MscAtmIfVptVccTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrForwardRmCellLimit_Object = MibTableColumn
mscAtmIfVptVccTmAbrForwardRmCellLimit = _MscAtmIfVptVccTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 19),
    _MscAtmIfVptVccTmAbrForwardRmCellLimit_Type()
)
mscAtmIfVptVccTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrForwardRmCellLimit.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVptVccTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_MscAtmIfVptVccTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmAbrTxRateChangeInfo_Object = MibTableColumn
mscAtmIfVptVccTmAbrTxRateChangeInfo = _MscAtmIfVptVccTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 20),
    _MscAtmIfVptVccTmAbrTxRateChangeInfo_Type()
)
mscAtmIfVptVccTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrTxRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type mscAtmIfVptVccTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_MscAtmIfVptVccTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmAbrAcrRateChangeInfo_Object = MibTableColumn
mscAtmIfVptVccTmAbrAcrRateChangeInfo = _MscAtmIfVptVccTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 21),
    _MscAtmIfVptVccTmAbrAcrRateChangeInfo_Type()
)
mscAtmIfVptVccTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_MscAtmIfVptVccTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmAbrTxFwdRmCells_Object = MibTableColumn
mscAtmIfVptVccTmAbrTxFwdRmCells = _MscAtmIfVptVccTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 22),
    _MscAtmIfVptVccTmAbrTxFwdRmCells_Type()
)
mscAtmIfVptVccTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrTxFwdRmCells.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrRxEfci_Type(Integer32):
    """Custom type mscAtmIfVptVccTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_MscAtmIfVptVccTmAbrRxEfci_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmAbrRxEfci_Object = MibTableColumn
mscAtmIfVptVccTmAbrRxEfci = _MscAtmIfVptVccTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 2, 110, 1, 23),
    _MscAtmIfVptVccTmAbrRxEfci_Type()
)
mscAtmIfVptVccTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrRxEfci.setStatus("mandatory")
_MscAtmIfVptVccTmOperTable_Object = MibTable
mscAtmIfVptVccTmOperTable = _MscAtmIfVptVccTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmOperTable.setStatus("mandatory")
_MscAtmIfVptVccTmOperEntry_Object = MibTableRow
mscAtmIfVptVccTmOperEntry = _MscAtmIfVptVccTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1)
)
mscAtmIfVptVccTmOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmOperEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptVccTmTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccTmTxTrafficDescType = _MscAtmIfVptVccTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 10),
    _MscAtmIfVptVccTmTxTrafficDescType_Type()
)
mscAtmIfVptVccTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptVccTmTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVptVccTmTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTxQosClass_Object = MibTableColumn
mscAtmIfVptVccTmTxQosClass = _MscAtmIfVptVccTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 31),
    _MscAtmIfVptVccTmTxQosClass_Type()
)
mscAtmIfVptVccTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQosClass.setStatus("mandatory")


class _MscAtmIfVptVccTmTxQueueLength_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVptVccTmTxQueueLength_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmTxQueueLength_Object = MibTableColumn
mscAtmIfVptVccTmTxQueueLength = _MscAtmIfVptVccTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 32),
    _MscAtmIfVptVccTmTxQueueLength_Type()
)
mscAtmIfVptVccTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQueueLength.setStatus("mandatory")


class _MscAtmIfVptVccTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptVccTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVptVccTmTxQueueCongestionState = _MscAtmIfVptVccTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 33),
    _MscAtmIfVptVccTmTxQueueCongestionState_Type()
)
mscAtmIfVptVccTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQueueCongestionState.setStatus("mandatory")


class _MscAtmIfVptVccTmHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVccTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVptVccTmHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmHoldingPriority_Object = MibTableColumn
mscAtmIfVptVccTmHoldingPriority = _MscAtmIfVptVccTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 35),
    _MscAtmIfVptVccTmHoldingPriority_Type()
)
mscAtmIfVptVccTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmHoldingPriority.setStatus("mandatory")


class _MscAtmIfVptVccTmRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_MscAtmIfVptVccTmRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccTmRxTrafficDescType = _MscAtmIfVptVccTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 40),
    _MscAtmIfVptVccTmRxTrafficDescType_Type()
)
mscAtmIfVptVccTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxTrafficDescType.setStatus("mandatory")


class _MscAtmIfVptVccTmRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14),
          ("sameAsFwd", 15))
    )


_MscAtmIfVptVccTmRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmRxQosClass_Object = MibTableColumn
mscAtmIfVptVccTmRxQosClass = _MscAtmIfVptVccTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 61),
    _MscAtmIfVptVccTmRxQosClass_Type()
)
mscAtmIfVptVccTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxQosClass.setStatus("mandatory")


class _MscAtmIfVptVccTmAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptVccTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptVccTmAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptVccTmAtmServiceCategory = _MscAtmIfVptVccTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 62),
    _MscAtmIfVptVccTmAtmServiceCategory_Type()
)
mscAtmIfVptVccTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAtmServiceCategory.setStatus("mandatory")


class _MscAtmIfVptVccTmTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_MscAtmIfVptVccTmTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTrafficShaping_Object = MibTableColumn
mscAtmIfVptVccTmTrafficShaping = _MscAtmIfVptVccTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 70),
    _MscAtmIfVptVccTmTrafficShaping_Type()
)
mscAtmIfVptVccTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTrafficShaping.setStatus("mandatory")


class _MscAtmIfVptVccTmBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptVccTmBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmBearerClassBbc_Object = MibTableColumn
mscAtmIfVptVccTmBearerClassBbc = _MscAtmIfVptVccTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 71),
    _MscAtmIfVptVccTmBearerClassBbc_Type()
)
mscAtmIfVptVccTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmBearerClassBbc.setStatus("mandatory")


class _MscAtmIfVptVccTmTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptVccTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptVccTmTransferCapabilityBbc = _MscAtmIfVptVccTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 72),
    _MscAtmIfVptVccTmTransferCapabilityBbc_Type()
)
mscAtmIfVptVccTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTransferCapabilityBbc.setStatus("mandatory")


class _MscAtmIfVptVccTmClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVptVccTmClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmClippingBbc_Object = MibTableColumn
mscAtmIfVptVccTmClippingBbc = _MscAtmIfVptVccTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 74),
    _MscAtmIfVptVccTmClippingBbc_Type()
)
mscAtmIfVptVccTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmClippingBbc.setStatus("mandatory")


class _MscAtmIfVptVccTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptVccTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVptVccTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptVccTmUnshapedTransmitQueueing = _MscAtmIfVptVccTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 75),
    _MscAtmIfVptVccTmUnshapedTransmitQueueing_Type()
)
mscAtmIfVptVccTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmUnshapedTransmitQueueing.setStatus("mandatory")


class _MscAtmIfVptVccTmBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptVccTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVptVccTmBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmBestEffort_Object = MibTableColumn
mscAtmIfVptVccTmBestEffort = _MscAtmIfVptVccTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 76),
    _MscAtmIfVptVccTmBestEffort_Type()
)
mscAtmIfVptVccTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmBestEffort.setStatus("mandatory")


class _MscAtmIfVptVccTmForceTagging_Type(Integer32):
    """Custom type mscAtmIfVptVccTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfVptVccTmForceTagging_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmForceTagging_Object = MibTableColumn
mscAtmIfVptVccTmForceTagging = _MscAtmIfVptVccTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 78),
    _MscAtmIfVptVccTmForceTagging_Type()
)
mscAtmIfVptVccTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmForceTagging.setStatus("mandatory")


class _MscAtmIfVptVccTmWeight_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_MscAtmIfVptVccTmWeight_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmWeight_Object = MibTableColumn
mscAtmIfVptVccTmWeight = _MscAtmIfVptVccTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 79),
    _MscAtmIfVptVccTmWeight_Type()
)
mscAtmIfVptVccTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmWeight.setStatus("mandatory")


class _MscAtmIfVptVccTmUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptVccTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_MscAtmIfVptVccTmUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmUsageParameterControl_Object = MibTableColumn
mscAtmIfVptVccTmUsageParameterControl = _MscAtmIfVptVccTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 80),
    _MscAtmIfVptVccTmUsageParameterControl_Type()
)
mscAtmIfVptVccTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmUsageParameterControl.setStatus("mandatory")


class _MscAtmIfVptVccTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVptVccTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptVccTmTxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptVccTmTxPacketWiseDiscard = _MscAtmIfVptVccTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 85),
    _MscAtmIfVptVccTmTxPacketWiseDiscard_Type()
)
mscAtmIfVptVccTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptVccTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type mscAtmIfVptVccTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptVccTmRxPacketWiseDiscard_Object = MibTableColumn
mscAtmIfVptVccTmRxPacketWiseDiscard = _MscAtmIfVptVccTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 86),
    _MscAtmIfVptVccTmRxPacketWiseDiscard_Type()
)
mscAtmIfVptVccTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxPacketWiseDiscard.setStatus("mandatory")


class _MscAtmIfVptVccTmBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVptVccTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVccTmBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmBandwidthElastic_Object = MibTableColumn
mscAtmIfVptVccTmBandwidthElastic = _MscAtmIfVptVccTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 90),
    _MscAtmIfVptVccTmBandwidthElastic_Type()
)
mscAtmIfVptVccTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmBandwidthElastic.setStatus("mandatory")


class _MscAtmIfVptVccTmBandwidthReduction_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccTmBandwidthReduction_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmBandwidthReduction_Object = MibTableColumn
mscAtmIfVptVccTmBandwidthReduction = _MscAtmIfVptVccTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 100),
    _MscAtmIfVptVccTmBandwidthReduction_Type()
)
mscAtmIfVptVccTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmBandwidthReduction.setStatus("mandatory")


class _MscAtmIfVptVccTmAbrConnectionType_Type(Integer32):
    """Custom type mscAtmIfVptVccTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_MscAtmIfVptVccTmAbrConnectionType_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmAbrConnectionType_Object = MibTableColumn
mscAtmIfVptVccTmAbrConnectionType = _MscAtmIfVptVccTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 100, 1, 110),
    _MscAtmIfVptVccTmAbrConnectionType_Type()
)
mscAtmIfVptVccTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmAbrConnectionType.setStatus("mandatory")
_MscAtmIfVptVccTmTxTdpTable_Object = MibTable
mscAtmIfVptVccTmTxTdpTable = _MscAtmIfVptVccTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 451)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxTdpTable.setStatus("mandatory")
_MscAtmIfVptVccTmTxTdpEntry_Object = MibTableRow
mscAtmIfVptVccTmTxTdpEntry = _MscAtmIfVptVccTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 451, 1)
)
mscAtmIfVptVccTmTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVccTmTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccTmTxTdpIndex = _MscAtmIfVptVccTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 451, 1, 1),
    _MscAtmIfVptVccTmTxTdpIndex_Type()
)
mscAtmIfVptVccTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptVccTmTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccTmTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmTxTdpValue_Object = MibTableColumn
mscAtmIfVptVccTmTxTdpValue = _MscAtmIfVptVccTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 451, 1, 2),
    _MscAtmIfVptVccTmTxTdpValue_Type()
)
mscAtmIfVptVccTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxTdpValue.setStatus("mandatory")
_MscAtmIfVptVccTmTxQThreshTable_Object = MibTable
mscAtmIfVptVccTmTxQThreshTable = _MscAtmIfVptVccTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 452)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQThreshTable.setStatus("mandatory")
_MscAtmIfVptVccTmTxQThreshEntry_Object = MibTableRow
mscAtmIfVptVccTmTxQThreshEntry = _MscAtmIfVptVccTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 452, 1)
)
mscAtmIfVptVccTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQThreshEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptVccTmTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTxQThreshIndex_Object = MibTableColumn
mscAtmIfVptVccTmTxQThreshIndex = _MscAtmIfVptVccTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 452, 1, 1),
    _MscAtmIfVptVccTmTxQThreshIndex_Type()
)
mscAtmIfVptVccTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQThreshIndex.setStatus("mandatory")


class _MscAtmIfVptVccTmTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512000),
    )


_MscAtmIfVptVccTmTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmTxQThreshValue_Object = MibTableColumn
mscAtmIfVptVccTmTxQThreshValue = _MscAtmIfVptVccTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 452, 1, 2),
    _MscAtmIfVptVccTmTxQThreshValue_Type()
)
mscAtmIfVptVccTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTxQThreshValue.setStatus("mandatory")
_MscAtmIfVptVccTmRxTdpTable_Object = MibTable
mscAtmIfVptVccTmRxTdpTable = _MscAtmIfVptVccTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 453)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxTdpTable.setStatus("mandatory")
_MscAtmIfVptVccTmRxTdpEntry_Object = MibTableRow
mscAtmIfVptVccTmRxTdpEntry = _MscAtmIfVptVccTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 453, 1)
)
mscAtmIfVptVccTmRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxTdpEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVptVccTmRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmRxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccTmRxTdpIndex = _MscAtmIfVptVccTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 453, 1, 1),
    _MscAtmIfVptVccTmRxTdpIndex_Type()
)
mscAtmIfVptVccTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxTdpIndex.setStatus("mandatory")


class _MscAtmIfVptVccTmRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccTmRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmRxTdpValue_Object = MibTableColumn
mscAtmIfVptVccTmRxTdpValue = _MscAtmIfVptVccTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 453, 1, 2),
    _MscAtmIfVptVccTmRxTdpValue_Type()
)
mscAtmIfVptVccTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRxTdpValue.setStatus("mandatory")
_MscAtmIfVptVccTmTqpTable_Object = MibTable
mscAtmIfVptVccTmTqpTable = _MscAtmIfVptVccTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 454)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTqpTable.setStatus("mandatory")
_MscAtmIfVptVccTmTqpEntry_Object = MibTableRow
mscAtmIfVptVccTmTqpEntry = _MscAtmIfVptVccTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 454, 1)
)
mscAtmIfVptVccTmTqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmTqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTqpEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmTqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccTmTqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmTqpIndex_Object = MibTableColumn
mscAtmIfVptVccTmTqpIndex = _MscAtmIfVptVccTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 454, 1, 1),
    _MscAtmIfVptVccTmTqpIndex_Type()
)
mscAtmIfVptVccTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTqpIndex.setStatus("mandatory")


class _MscAtmIfVptVccTmTqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccTmTqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmTqpValue_Object = MibTableColumn
mscAtmIfVptVccTmTqpValue = _MscAtmIfVptVccTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 454, 1, 2),
    _MscAtmIfVptVccTmTqpValue_Type()
)
mscAtmIfVptVccTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmTqpValue.setStatus("mandatory")
_MscAtmIfVptVccTmRqpTable_Object = MibTable
mscAtmIfVptVccTmRqpTable = _MscAtmIfVptVccTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 455)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRqpTable.setStatus("mandatory")
_MscAtmIfVptVccTmRqpEntry_Object = MibTableRow
mscAtmIfVptVccTmRqpEntry = _MscAtmIfVptVccTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 455, 1)
)
mscAtmIfVptVccTmRqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTmRqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRqpEntry.setStatus("mandatory")


class _MscAtmIfVptVccTmRqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccTmRqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTmRqpIndex_Object = MibTableColumn
mscAtmIfVptVccTmRqpIndex = _MscAtmIfVptVccTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 455, 1, 1),
    _MscAtmIfVptVccTmRqpIndex_Type()
)
mscAtmIfVptVccTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRqpIndex.setStatus("mandatory")


class _MscAtmIfVptVccTmRqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccTmRqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTmRqpValue_Object = MibTableColumn
mscAtmIfVptVccTmRqpValue = _MscAtmIfVptVccTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 7, 455, 1, 2),
    _MscAtmIfVptVccTmRqpValue_Type()
)
mscAtmIfVptVccTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTmRqpValue.setStatus("mandatory")
_MscAtmIfVptVccStateTable_Object = MibTable
mscAtmIfVptVccStateTable = _MscAtmIfVptVccStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccStateTable.setStatus("mandatory")
_MscAtmIfVptVccStateEntry_Object = MibTableRow
mscAtmIfVptVccStateEntry = _MscAtmIfVptVccStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 100, 1)
)
mscAtmIfVptVccStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccStateEntry.setStatus("mandatory")


class _MscAtmIfVptVccAdminState_Type(Integer32):
    """Custom type mscAtmIfVptVccAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfVptVccAdminState_Type.__name__ = "Integer32"
_MscAtmIfVptVccAdminState_Object = MibTableColumn
mscAtmIfVptVccAdminState = _MscAtmIfVptVccAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 100, 1, 1),
    _MscAtmIfVptVccAdminState_Type()
)
mscAtmIfVptVccAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccAdminState.setStatus("mandatory")


class _MscAtmIfVptVccOperationalState_Type(Integer32):
    """Custom type mscAtmIfVptVccOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptVccOperationalState_Type.__name__ = "Integer32"
_MscAtmIfVptVccOperationalState_Object = MibTableColumn
mscAtmIfVptVccOperationalState = _MscAtmIfVptVccOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 100, 1, 2),
    _MscAtmIfVptVccOperationalState_Type()
)
mscAtmIfVptVccOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccOperationalState.setStatus("mandatory")


class _MscAtmIfVptVccUsageState_Type(Integer32):
    """Custom type mscAtmIfVptVccUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfVptVccUsageState_Type.__name__ = "Integer32"
_MscAtmIfVptVccUsageState_Object = MibTableColumn
mscAtmIfVptVccUsageState = _MscAtmIfVptVccUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 100, 1, 3),
    _MscAtmIfVptVccUsageState_Type()
)
mscAtmIfVptVccUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccUsageState.setStatus("mandatory")
_MscAtmIfVptVccOperTable_Object = MibTable
mscAtmIfVptVccOperTable = _MscAtmIfVptVccOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccOperTable.setStatus("mandatory")
_MscAtmIfVptVccOperEntry_Object = MibTableRow
mscAtmIfVptVccOperEntry = _MscAtmIfVptVccOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 110, 1)
)
mscAtmIfVptVccOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccOperEntry.setStatus("mandatory")


class _MscAtmIfVptVccConnectionPointType_Type(Integer32):
    """Custom type mscAtmIfVptVccConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_MscAtmIfVptVccConnectionPointType_Type.__name__ = "Integer32"
_MscAtmIfVptVccConnectionPointType_Object = MibTableColumn
mscAtmIfVptVccConnectionPointType = _MscAtmIfVptVccConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 110, 1, 10),
    _MscAtmIfVptVccConnectionPointType_Type()
)
mscAtmIfVptVccConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccConnectionPointType.setStatus("mandatory")
_MscAtmIfVptVccConnInfoTable_Object = MibTable
mscAtmIfVptVccConnInfoTable = _MscAtmIfVptVccConnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 115)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccConnInfoTable.setStatus("mandatory")
_MscAtmIfVptVccConnInfoEntry_Object = MibTableRow
mscAtmIfVptVccConnInfoEntry = _MscAtmIfVptVccConnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 115, 1)
)
mscAtmIfVptVccConnInfoEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccConnInfoEntry.setStatus("mandatory")


class _MscAtmIfVptVccDistributionType_Type(Integer32):
    """Custom type mscAtmIfVptVccDistributionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipoint", 1),
          ("pointToPoint", 0))
    )


_MscAtmIfVptVccDistributionType_Type.__name__ = "Integer32"
_MscAtmIfVptVccDistributionType_Object = MibTableColumn
mscAtmIfVptVccDistributionType = _MscAtmIfVptVccDistributionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 115, 1, 11),
    _MscAtmIfVptVccDistributionType_Type()
)
mscAtmIfVptVccDistributionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccDistributionType.setStatus("mandatory")


class _MscAtmIfVptVccNumLeaves_Type(Gauge32):
    """Custom type mscAtmIfVptVccNumLeaves based on Gauge32"""
    defaultValue = 0

    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccNumLeaves_Type.__name__ = "Gauge32"
_MscAtmIfVptVccNumLeaves_Object = MibTableColumn
mscAtmIfVptVccNumLeaves = _MscAtmIfVptVccNumLeaves_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 115, 1, 12),
    _MscAtmIfVptVccNumLeaves_Type()
)
mscAtmIfVptVccNumLeaves.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccNumLeaves.setStatus("mandatory")


class _MscAtmIfVptVccCallDirection_Type(Integer32):
    """Custom type mscAtmIfVptVccCallDirection based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fromLink", 0),
          ("notApplicable", 2),
          ("toLink", 1))
    )


_MscAtmIfVptVccCallDirection_Type.__name__ = "Integer32"
_MscAtmIfVptVccCallDirection_Object = MibTableColumn
mscAtmIfVptVccCallDirection = _MscAtmIfVptVccCallDirection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 115, 1, 13),
    _MscAtmIfVptVccCallDirection_Type()
)
mscAtmIfVptVccCallDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccCallDirection.setStatus("mandatory")
_MscAtmIfVptVccStatusTable_Object = MibTable
mscAtmIfVptVccStatusTable = _MscAtmIfVptVccStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatusTable.setStatus("mandatory")
_MscAtmIfVptVccStatusEntry_Object = MibTableRow
mscAtmIfVptVccStatusEntry = _MscAtmIfVptVccStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1)
)
mscAtmIfVptVccStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatusEntry.setStatus("mandatory")


class _MscAtmIfVptVccOperStatus_Type(Integer32):
    """Custom type mscAtmIfVptVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_MscAtmIfVptVccOperStatus_Type.__name__ = "Integer32"
_MscAtmIfVptVccOperStatus_Object = MibTableColumn
mscAtmIfVptVccOperStatus = _MscAtmIfVptVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 20),
    _MscAtmIfVptVccOperStatus_Type()
)
mscAtmIfVptVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccOperStatus.setStatus("mandatory")


class _MscAtmIfVptVccLocalFailureCause_Type(Integer32):
    """Custom type mscAtmIfVptVccLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_MscAtmIfVptVccLocalFailureCause_Type.__name__ = "Integer32"
_MscAtmIfVptVccLocalFailureCause_Object = MibTableColumn
mscAtmIfVptVccLocalFailureCause = _MscAtmIfVptVccLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 25),
    _MscAtmIfVptVccLocalFailureCause_Type()
)
mscAtmIfVptVccLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccLocalFailureCause.setStatus("mandatory")


class _MscAtmIfVptVccTroubled_Type(Integer32):
    """Custom type mscAtmIfVptVccTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVccTroubled_Type.__name__ = "Integer32"
_MscAtmIfVptVccTroubled_Object = MibTableColumn
mscAtmIfVptVccTroubled = _MscAtmIfVptVccTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 28),
    _MscAtmIfVptVccTroubled_Type()
)
mscAtmIfVptVccTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTroubled.setStatus("mandatory")


class _MscAtmIfVptVccSegLinkSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVptVccSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptVccSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVptVccSegLinkSideLoopbackState_Object = MibTableColumn
mscAtmIfVptVccSegLinkSideLoopbackState = _MscAtmIfVptVccSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 30),
    _MscAtmIfVptVccSegLinkSideLoopbackState_Type()
)
mscAtmIfVptVccSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccSegLinkSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVptVccSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVptVccSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptVccSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVptVccSegSwitchSideLoopbackState_Object = MibTableColumn
mscAtmIfVptVccSegSwitchSideLoopbackState = _MscAtmIfVptVccSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 40),
    _MscAtmIfVptVccSegSwitchSideLoopbackState_Type()
)
mscAtmIfVptVccSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccSegSwitchSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVptVccEndToEndLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVptVccEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptVccEndToEndLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVptVccEndToEndLoopbackState_Object = MibTableColumn
mscAtmIfVptVccEndToEndLoopbackState = _MscAtmIfVptVccEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 50),
    _MscAtmIfVptVccEndToEndLoopbackState_Type()
)
mscAtmIfVptVccEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccEndToEndLoopbackState.setStatus("mandatory")


class _MscAtmIfVptVccRxOamCellCongestionState_Type(Integer32):
    """Custom type mscAtmIfVptVccRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptVccRxOamCellCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVptVccRxOamCellCongestionState_Object = MibTableColumn
mscAtmIfVptVccRxOamCellCongestionState = _MscAtmIfVptVccRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 55),
    _MscAtmIfVptVccRxOamCellCongestionState_Type()
)
mscAtmIfVptVccRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxOamCellCongestionState.setStatus("mandatory")


class _MscAtmIfVptVccAisState_Type(Integer32):
    """Custom type mscAtmIfVptVccAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptVccAisState_Type.__name__ = "Integer32"
_MscAtmIfVptVccAisState_Object = MibTableColumn
mscAtmIfVptVccAisState = _MscAtmIfVptVccAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 60),
    _MscAtmIfVptVccAisState_Type()
)
mscAtmIfVptVccAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccAisState.setStatus("mandatory")


class _MscAtmIfVptVccRdiState_Type(Integer32):
    """Custom type mscAtmIfVptVccRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptVccRdiState_Type.__name__ = "Integer32"
_MscAtmIfVptVccRdiState_Object = MibTableColumn
mscAtmIfVptVccRdiState = _MscAtmIfVptVccRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 120, 1, 70),
    _MscAtmIfVptVccRdiState_Type()
)
mscAtmIfVptVccRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRdiState.setStatus("mandatory")
_MscAtmIfVptVccTrafficTable_Object = MibTable
mscAtmIfVptVccTrafficTable = _MscAtmIfVptVccTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTrafficTable.setStatus("mandatory")
_MscAtmIfVptVccTrafficEntry_Object = MibTableRow
mscAtmIfVptVccTrafficEntry = _MscAtmIfVptVccTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1)
)
mscAtmIfVptVccTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTrafficEntry.setStatus("mandatory")


class _MscAtmIfVptVccTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVptVccTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccTxTrafficDescType = _MscAtmIfVptVccTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 10),
    _MscAtmIfVptVccTxTrafficDescType_Type()
)
mscAtmIfVptVccTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptVccTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptVccTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccTxQosClass_Object = MibTableColumn
mscAtmIfVptVccTxQosClass = _MscAtmIfVptVccTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 30),
    _MscAtmIfVptVccTxQosClass_Type()
)
mscAtmIfVptVccTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQosClass.setStatus("obsolete")


class _MscAtmIfVptVccFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVptVccFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccFwdQosClass_Object = MibTableColumn
mscAtmIfVptVccFwdQosClass = _MscAtmIfVptVccFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 31),
    _MscAtmIfVptVccFwdQosClass_Type()
)
mscAtmIfVptVccFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccFwdQosClass.setStatus("obsolete")


class _MscAtmIfVptVccTxQueueLength_Type(Integer32):
    """Custom type mscAtmIfVptVccTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVptVccTxQueueLength_Type.__name__ = "Integer32"
_MscAtmIfVptVccTxQueueLength_Object = MibTableColumn
mscAtmIfVptVccTxQueueLength = _MscAtmIfVptVccTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 32),
    _MscAtmIfVptVccTxQueueLength_Type()
)
mscAtmIfVptVccTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQueueLength.setStatus("obsolete")


class _MscAtmIfVptVccTxQueueCongestionState_Type(Integer32):
    """Custom type mscAtmIfVptVccTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptVccTxQueueCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVptVccTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVptVccTxQueueCongestionState = _MscAtmIfVptVccTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 33),
    _MscAtmIfVptVccTxQueueCongestionState_Type()
)
mscAtmIfVptVccTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQueueCongestionState.setStatus("obsolete")


class _MscAtmIfVptVccHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptVccHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVptVccHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptVccHoldingPriority_Object = MibTableColumn
mscAtmIfVptVccHoldingPriority = _MscAtmIfVptVccHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 35),
    _MscAtmIfVptVccHoldingPriority_Type()
)
mscAtmIfVptVccHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccHoldingPriority.setStatus("obsolete")


class _MscAtmIfVptVccRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptVccRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVptVccRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptVccRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptVccRxTrafficDescType = _MscAtmIfVptVccRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 40),
    _MscAtmIfVptVccRxTrafficDescType_Type()
)
mscAtmIfVptVccRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptVccRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptVccRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccRxQosClass_Object = MibTableColumn
mscAtmIfVptVccRxQosClass = _MscAtmIfVptVccRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 60),
    _MscAtmIfVptVccRxQosClass_Type()
)
mscAtmIfVptVccRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxQosClass.setStatus("obsolete")


class _MscAtmIfVptVccBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptVccBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVptVccBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptVccBwdQosClass_Object = MibTableColumn
mscAtmIfVptVccBwdQosClass = _MscAtmIfVptVccBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 61),
    _MscAtmIfVptVccBwdQosClass_Type()
)
mscAtmIfVptVccBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBwdQosClass.setStatus("obsolete")


class _MscAtmIfVptVccAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptVccAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptVccAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptVccAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptVccAtmServiceCategory = _MscAtmIfVptVccAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 62),
    _MscAtmIfVptVccAtmServiceCategory_Type()
)
mscAtmIfVptVccAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVptVccTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptVccTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_MscAtmIfVptVccTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptVccTrafficShaping_Object = MibTableColumn
mscAtmIfVptVccTrafficShaping = _MscAtmIfVptVccTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 70),
    _MscAtmIfVptVccTrafficShaping_Type()
)
mscAtmIfVptVccTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTrafficShaping.setStatus("obsolete")


class _MscAtmIfVptVccBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptVccBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccBearerClassBbc_Object = MibTableColumn
mscAtmIfVptVccBearerClassBbc = _MscAtmIfVptVccBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 71),
    _MscAtmIfVptVccBearerClassBbc_Type()
)
mscAtmIfVptVccBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVptVccTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptVccTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptVccTransferCapabilityBbc = _MscAtmIfVptVccTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 72),
    _MscAtmIfVptVccTransferCapabilityBbc_Type()
)
mscAtmIfVptVccTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVptVccClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptVccClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVptVccClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptVccClippingBbc_Object = MibTableColumn
mscAtmIfVptVccClippingBbc = _MscAtmIfVptVccClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 74),
    _MscAtmIfVptVccClippingBbc_Type()
)
mscAtmIfVptVccClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccClippingBbc.setStatus("obsolete")


class _MscAtmIfVptVccUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptVccUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVptVccUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptVccUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptVccUnshapedTransmitQueueing = _MscAtmIfVptVccUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 75),
    _MscAtmIfVptVccUnshapedTransmitQueueing_Type()
)
mscAtmIfVptVccUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVptVccBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptVccBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVptVccBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptVccBestEffort_Object = MibTableColumn
mscAtmIfVptVccBestEffort = _MscAtmIfVptVccBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 76),
    _MscAtmIfVptVccBestEffort_Type()
)
mscAtmIfVptVccBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBestEffort.setStatus("obsolete")


class _MscAtmIfVptVccUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptVccUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_MscAtmIfVptVccUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptVccUsageParameterControl_Object = MibTableColumn
mscAtmIfVptVccUsageParameterControl = _MscAtmIfVptVccUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 80),
    _MscAtmIfVptVccUsageParameterControl_Type()
)
mscAtmIfVptVccUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVptVccTxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVptVccTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccTxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptVccTxFrameDiscard_Object = MibTableColumn
mscAtmIfVptVccTxFrameDiscard = _MscAtmIfVptVccTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 85),
    _MscAtmIfVptVccTxFrameDiscard_Type()
)
mscAtmIfVptVccTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVptVccRxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVptVccRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptVccRxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptVccRxFrameDiscard_Object = MibTableColumn
mscAtmIfVptVccRxFrameDiscard = _MscAtmIfVptVccRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 86),
    _MscAtmIfVptVccRxFrameDiscard_Type()
)
mscAtmIfVptVccRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVptVccBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVptVccBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptVccBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVptVccBandwidthElastic_Object = MibTableColumn
mscAtmIfVptVccBandwidthElastic = _MscAtmIfVptVccBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 90),
    _MscAtmIfVptVccBandwidthElastic_Type()
)
mscAtmIfVptVccBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBandwidthElastic.setStatus("obsolete")


class _MscAtmIfVptVccBandwidthReduction_Type(Integer32):
    """Custom type mscAtmIfVptVccBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccBandwidthReduction_Type.__name__ = "Integer32"
_MscAtmIfVptVccBandwidthReduction_Object = MibTableColumn
mscAtmIfVptVccBandwidthReduction = _MscAtmIfVptVccBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 130, 1, 100),
    _MscAtmIfVptVccBandwidthReduction_Type()
)
mscAtmIfVptVccBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBandwidthReduction.setStatus("obsolete")
_MscAtmIfVptVccStatsTable_Object = MibTable
mscAtmIfVptVccStatsTable = _MscAtmIfVptVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTable.setStatus("mandatory")
_MscAtmIfVptVccStatsEntry_Object = MibTableRow
mscAtmIfVptVccStatsEntry = _MscAtmIfVptVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1)
)
mscAtmIfVptVccStatsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsEntry.setStatus("mandatory")
_MscAtmIfVptVccStatsTxCell_Type = PassportCounter64
_MscAtmIfVptVccStatsTxCell_Object = MibTableColumn
mscAtmIfVptVccStatsTxCell = _MscAtmIfVptVccStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 10),
    _MscAtmIfVptVccStatsTxCell_Type()
)
mscAtmIfVptVccStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTxCell.setStatus("mandatory")
_MscAtmIfVptVccStatsTxCellClp_Type = PassportCounter64
_MscAtmIfVptVccStatsTxCellClp_Object = MibTableColumn
mscAtmIfVptVccStatsTxCellClp = _MscAtmIfVptVccStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 20),
    _MscAtmIfVptVccStatsTxCellClp_Type()
)
mscAtmIfVptVccStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTxCellClp.setStatus("mandatory")
_MscAtmIfVptVccTxDiscard_Type = PassportCounter64
_MscAtmIfVptVccTxDiscard_Object = MibTableColumn
mscAtmIfVptVccTxDiscard = _MscAtmIfVptVccTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 30),
    _MscAtmIfVptVccTxDiscard_Type()
)
mscAtmIfVptVccTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxDiscard.setStatus("obsolete")
_MscAtmIfVptVccTxDiscardClp_Type = PassportCounter64
_MscAtmIfVptVccTxDiscardClp_Object = MibTableColumn
mscAtmIfVptVccTxDiscardClp = _MscAtmIfVptVccTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 40),
    _MscAtmIfVptVccTxDiscardClp_Type()
)
mscAtmIfVptVccTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxDiscardClp.setStatus("obsolete")
_MscAtmIfVptVccStatsTxCellDiscard_Type = PassportCounter64
_MscAtmIfVptVccStatsTxCellDiscard_Object = MibTableColumn
mscAtmIfVptVccStatsTxCellDiscard = _MscAtmIfVptVccStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 42),
    _MscAtmIfVptVccStatsTxCellDiscard_Type()
)
mscAtmIfVptVccStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTxCellDiscard.setStatus("mandatory")
_MscAtmIfVptVccStatsTxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVptVccStatsTxCellDiscardClp_Object = MibTableColumn
mscAtmIfVptVccStatsTxCellDiscardClp = _MscAtmIfVptVccStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 43),
    _MscAtmIfVptVccStatsTxCellDiscardClp_Type()
)
mscAtmIfVptVccStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVptVccStatsTxFrameDiscard_Type = PassportCounter64
_MscAtmIfVptVccStatsTxFrameDiscard_Object = MibTableColumn
mscAtmIfVptVccStatsTxFrameDiscard = _MscAtmIfVptVccStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 46),
    _MscAtmIfVptVccStatsTxFrameDiscard_Type()
)
mscAtmIfVptVccStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTxFrameDiscard.setStatus("mandatory")
_MscAtmIfVptVccStatsTxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVptVccStatsTxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVptVccStatsTxFrameDiscardClp = _MscAtmIfVptVccStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 47),
    _MscAtmIfVptVccStatsTxFrameDiscardClp_Type()
)
mscAtmIfVptVccStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsTxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVptVccStatsRxCell_Type = PassportCounter64
_MscAtmIfVptVccStatsRxCell_Object = MibTableColumn
mscAtmIfVptVccStatsRxCell = _MscAtmIfVptVccStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 50),
    _MscAtmIfVptVccStatsRxCell_Type()
)
mscAtmIfVptVccStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxCell.setStatus("mandatory")
_MscAtmIfVptVccStatsRxCellClp_Type = PassportCounter64
_MscAtmIfVptVccStatsRxCellClp_Object = MibTableColumn
mscAtmIfVptVccStatsRxCellClp = _MscAtmIfVptVccStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 60),
    _MscAtmIfVptVccStatsRxCellClp_Type()
)
mscAtmIfVptVccStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxCellClp.setStatus("mandatory")
_MscAtmIfVptVccRxDiscard_Type = PassportCounter64
_MscAtmIfVptVccRxDiscard_Object = MibTableColumn
mscAtmIfVptVccRxDiscard = _MscAtmIfVptVccRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 70),
    _MscAtmIfVptVccRxDiscard_Type()
)
mscAtmIfVptVccRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxDiscard.setStatus("obsolete")
_MscAtmIfVptVccRxDiscardClp_Type = PassportCounter64
_MscAtmIfVptVccRxDiscardClp_Object = MibTableColumn
mscAtmIfVptVccRxDiscardClp = _MscAtmIfVptVccRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 80),
    _MscAtmIfVptVccRxDiscardClp_Type()
)
mscAtmIfVptVccRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxDiscardClp.setStatus("obsolete")
_MscAtmIfVptVccStatsRxCellDiscard_Type = PassportCounter64
_MscAtmIfVptVccStatsRxCellDiscard_Object = MibTableColumn
mscAtmIfVptVccStatsRxCellDiscard = _MscAtmIfVptVccStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 82),
    _MscAtmIfVptVccStatsRxCellDiscard_Type()
)
mscAtmIfVptVccStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxCellDiscard.setStatus("mandatory")
_MscAtmIfVptVccStatsRxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVptVccStatsRxCellDiscardClp_Object = MibTableColumn
mscAtmIfVptVccStatsRxCellDiscardClp = _MscAtmIfVptVccStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 83),
    _MscAtmIfVptVccStatsRxCellDiscardClp_Type()
)
mscAtmIfVptVccStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVptVccStatsRxFrameDiscard_Type = PassportCounter64
_MscAtmIfVptVccStatsRxFrameDiscard_Object = MibTableColumn
mscAtmIfVptVccStatsRxFrameDiscard = _MscAtmIfVptVccStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 86),
    _MscAtmIfVptVccStatsRxFrameDiscard_Type()
)
mscAtmIfVptVccStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxFrameDiscard.setStatus("mandatory")
_MscAtmIfVptVccStatsRxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVptVccStatsRxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVptVccStatsRxFrameDiscardClp = _MscAtmIfVptVccStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 88),
    _MscAtmIfVptVccStatsRxFrameDiscardClp_Type()
)
mscAtmIfVptVccStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVptVccStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_MscAtmIfVptVccStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
mscAtmIfVptVccStatsRxUpcViolationOnEnforcer1 = _MscAtmIfVptVccStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 90),
    _MscAtmIfVptVccStatsRxUpcViolationOnEnforcer1_Type()
)
mscAtmIfVptVccStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_MscAtmIfVptVccStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_MscAtmIfVptVccStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
mscAtmIfVptVccStatsRxUpcViolationOnEnforcer2 = _MscAtmIfVptVccStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 92),
    _MscAtmIfVptVccStatsRxUpcViolationOnEnforcer2_Type()
)
mscAtmIfVptVccStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_MscAtmIfVptVccStatsRxAal5FrameError_Type = PassportCounter64
_MscAtmIfVptVccStatsRxAal5FrameError_Object = MibTableColumn
mscAtmIfVptVccStatsRxAal5FrameError = _MscAtmIfVptVccStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 100),
    _MscAtmIfVptVccStatsRxAal5FrameError_Type()
)
mscAtmIfVptVccStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxAal5FrameError.setStatus("mandatory")
_MscAtmIfVptVccStatsRxAal5FrameAbort_Type = PassportCounter64
_MscAtmIfVptVccStatsRxAal5FrameAbort_Object = MibTableColumn
mscAtmIfVptVccStatsRxAal5FrameAbort = _MscAtmIfVptVccStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 140, 1, 102),
    _MscAtmIfVptVccStatsRxAal5FrameAbort_Type()
)
mscAtmIfVptVccStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccStatsRxAal5FrameAbort.setStatus("mandatory")
_MscAtmIfVptVccTxTdpTable_Object = MibTable
mscAtmIfVptVccTxTdpTable = _MscAtmIfVptVccTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 294)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxTdpTable.setStatus("obsolete")
_MscAtmIfVptVccTxTdpEntry_Object = MibTableRow
mscAtmIfVptVccTxTdpEntry = _MscAtmIfVptVccTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 294, 1)
)
mscAtmIfVptVccTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptVccTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptVccTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccTxTdpIndex = _MscAtmIfVptVccTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 294, 1, 1),
    _MscAtmIfVptVccTxTdpIndex_Type()
)
mscAtmIfVptVccTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptVccTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTxTdpValue_Object = MibTableColumn
mscAtmIfVptVccTxTdpValue = _MscAtmIfVptVccTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 294, 1, 2),
    _MscAtmIfVptVccTxTdpValue_Type()
)
mscAtmIfVptVccTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxTdpValue.setStatus("obsolete")
_MscAtmIfVptVccRxTdpTable_Object = MibTable
mscAtmIfVptVccRxTdpTable = _MscAtmIfVptVccRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 295)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxTdpTable.setStatus("obsolete")
_MscAtmIfVptVccRxTdpEntry_Object = MibTableRow
mscAtmIfVptVccRxTdpEntry = _MscAtmIfVptVccRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 295, 1)
)
mscAtmIfVptVccRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptVccRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVptVccRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccRxTdpIndex_Object = MibTableColumn
mscAtmIfVptVccRxTdpIndex = _MscAtmIfVptVccRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 295, 1, 1),
    _MscAtmIfVptVccRxTdpIndex_Type()
)
mscAtmIfVptVccRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptVccRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccRxTdpValue_Object = MibTableColumn
mscAtmIfVptVccRxTdpValue = _MscAtmIfVptVccRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 295, 1, 2),
    _MscAtmIfVptVccRxTdpValue_Type()
)
mscAtmIfVptVccRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccRxTdpValue.setStatus("obsolete")
_MscAtmIfVptVccTxQThreshTable_Object = MibTable
mscAtmIfVptVccTxQThreshTable = _MscAtmIfVptVccTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 352)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQThreshTable.setStatus("obsolete")
_MscAtmIfVptVccTxQThreshEntry_Object = MibTableRow
mscAtmIfVptVccTxQThreshEntry = _MscAtmIfVptVccTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 352, 1)
)
mscAtmIfVptVccTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQThreshEntry.setStatus("obsolete")


class _MscAtmIfVptVccTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptVccTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccTxQThreshIndex_Object = MibTableColumn
mscAtmIfVptVccTxQThreshIndex = _MscAtmIfVptVccTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 352, 1, 1),
    _MscAtmIfVptVccTxQThreshIndex_Type()
)
mscAtmIfVptVccTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQThreshIndex.setStatus("obsolete")


class _MscAtmIfVptVccTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVptVccTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccTxQThreshValue_Object = MibTableColumn
mscAtmIfVptVccTxQThreshValue = _MscAtmIfVptVccTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 352, 1, 2),
    _MscAtmIfVptVccTxQThreshValue_Type()
)
mscAtmIfVptVccTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccTxQThreshValue.setStatus("obsolete")
_MscAtmIfVptVccFqpTable_Object = MibTable
mscAtmIfVptVccFqpTable = _MscAtmIfVptVccFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 357)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccFqpTable.setStatus("obsolete")
_MscAtmIfVptVccFqpEntry_Object = MibTableRow
mscAtmIfVptVccFqpEntry = _MscAtmIfVptVccFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 357, 1)
)
mscAtmIfVptVccFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccFqpEntry.setStatus("obsolete")


class _MscAtmIfVptVccFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccFqpIndex_Object = MibTableColumn
mscAtmIfVptVccFqpIndex = _MscAtmIfVptVccFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 357, 1, 1),
    _MscAtmIfVptVccFqpIndex_Type()
)
mscAtmIfVptVccFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccFqpIndex.setStatus("obsolete")


class _MscAtmIfVptVccFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccFqpValue_Object = MibTableColumn
mscAtmIfVptVccFqpValue = _MscAtmIfVptVccFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 357, 1, 2),
    _MscAtmIfVptVccFqpValue_Type()
)
mscAtmIfVptVccFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccFqpValue.setStatus("obsolete")
_MscAtmIfVptVccBqpTable_Object = MibTable
mscAtmIfVptVccBqpTable = _MscAtmIfVptVccBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 358)
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccBqpTable.setStatus("obsolete")
_MscAtmIfVptVccBqpEntry_Object = MibTableRow
mscAtmIfVptVccBqpEntry = _MscAtmIfVptVccBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 358, 1)
)
mscAtmIfVptVccBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptVccBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptVccBqpEntry.setStatus("obsolete")


class _MscAtmIfVptVccBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptVccBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptVccBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptVccBqpIndex_Object = MibTableColumn
mscAtmIfVptVccBqpIndex = _MscAtmIfVptVccBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 358, 1, 1),
    _MscAtmIfVptVccBqpIndex_Type()
)
mscAtmIfVptVccBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBqpIndex.setStatus("obsolete")


class _MscAtmIfVptVccBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptVccBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptVccBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptVccBqpValue_Object = MibTableColumn
mscAtmIfVptVccBqpValue = _MscAtmIfVptVccBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 20, 358, 1, 2),
    _MscAtmIfVptVccBqpValue_Type()
)
mscAtmIfVptVccBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptVccBqpValue.setStatus("obsolete")
_MscAtmIfVptStateTable_Object = MibTable
mscAtmIfVptStateTable = _MscAtmIfVptStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfVptStateTable.setStatus("mandatory")
_MscAtmIfVptStateEntry_Object = MibTableRow
mscAtmIfVptStateEntry = _MscAtmIfVptStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 100, 1)
)
mscAtmIfVptStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptStateEntry.setStatus("mandatory")


class _MscAtmIfVptAdminState_Type(Integer32):
    """Custom type mscAtmIfVptAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfVptAdminState_Type.__name__ = "Integer32"
_MscAtmIfVptAdminState_Object = MibTableColumn
mscAtmIfVptAdminState = _MscAtmIfVptAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 100, 1, 1),
    _MscAtmIfVptAdminState_Type()
)
mscAtmIfVptAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptAdminState.setStatus("mandatory")


class _MscAtmIfVptOperationalState_Type(Integer32):
    """Custom type mscAtmIfVptOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfVptOperationalState_Type.__name__ = "Integer32"
_MscAtmIfVptOperationalState_Object = MibTableColumn
mscAtmIfVptOperationalState = _MscAtmIfVptOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 100, 1, 2),
    _MscAtmIfVptOperationalState_Type()
)
mscAtmIfVptOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptOperationalState.setStatus("mandatory")


class _MscAtmIfVptUsageState_Type(Integer32):
    """Custom type mscAtmIfVptUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfVptUsageState_Type.__name__ = "Integer32"
_MscAtmIfVptUsageState_Object = MibTableColumn
mscAtmIfVptUsageState = _MscAtmIfVptUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 100, 1, 3),
    _MscAtmIfVptUsageState_Type()
)
mscAtmIfVptUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptUsageState.setStatus("mandatory")
_MscAtmIfVptOperTable_Object = MibTable
mscAtmIfVptOperTable = _MscAtmIfVptOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfVptOperTable.setStatus("mandatory")
_MscAtmIfVptOperEntry_Object = MibTableRow
mscAtmIfVptOperEntry = _MscAtmIfVptOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 110, 1)
)
mscAtmIfVptOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptOperEntry.setStatus("mandatory")


class _MscAtmIfVptConnectionPointType_Type(Integer32):
    """Custom type mscAtmIfVptConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_MscAtmIfVptConnectionPointType_Type.__name__ = "Integer32"
_MscAtmIfVptConnectionPointType_Object = MibTableColumn
mscAtmIfVptConnectionPointType = _MscAtmIfVptConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 110, 1, 10),
    _MscAtmIfVptConnectionPointType_Type()
)
mscAtmIfVptConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptConnectionPointType.setStatus("mandatory")
_MscAtmIfVptStatusTable_Object = MibTable
mscAtmIfVptStatusTable = _MscAtmIfVptStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfVptStatusTable.setStatus("mandatory")
_MscAtmIfVptStatusEntry_Object = MibTableRow
mscAtmIfVptStatusEntry = _MscAtmIfVptStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1)
)
mscAtmIfVptStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptStatusEntry.setStatus("mandatory")


class _MscAtmIfVptOperStatus_Type(Integer32):
    """Custom type mscAtmIfVptOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_MscAtmIfVptOperStatus_Type.__name__ = "Integer32"
_MscAtmIfVptOperStatus_Object = MibTableColumn
mscAtmIfVptOperStatus = _MscAtmIfVptOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 20),
    _MscAtmIfVptOperStatus_Type()
)
mscAtmIfVptOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptOperStatus.setStatus("mandatory")


class _MscAtmIfVptLocalFailureCause_Type(Integer32):
    """Custom type mscAtmIfVptLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_MscAtmIfVptLocalFailureCause_Type.__name__ = "Integer32"
_MscAtmIfVptLocalFailureCause_Object = MibTableColumn
mscAtmIfVptLocalFailureCause = _MscAtmIfVptLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 25),
    _MscAtmIfVptLocalFailureCause_Type()
)
mscAtmIfVptLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptLocalFailureCause.setStatus("mandatory")


class _MscAtmIfVptTroubled_Type(Integer32):
    """Custom type mscAtmIfVptTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptTroubled_Type.__name__ = "Integer32"
_MscAtmIfVptTroubled_Object = MibTableColumn
mscAtmIfVptTroubled = _MscAtmIfVptTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 28),
    _MscAtmIfVptTroubled_Type()
)
mscAtmIfVptTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTroubled.setStatus("mandatory")


class _MscAtmIfVptSegLinkSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVptSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVptSegLinkSideLoopbackState_Object = MibTableColumn
mscAtmIfVptSegLinkSideLoopbackState = _MscAtmIfVptSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 30),
    _MscAtmIfVptSegLinkSideLoopbackState_Type()
)
mscAtmIfVptSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptSegLinkSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVptSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVptSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVptSegSwitchSideLoopbackState_Object = MibTableColumn
mscAtmIfVptSegSwitchSideLoopbackState = _MscAtmIfVptSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 40),
    _MscAtmIfVptSegSwitchSideLoopbackState_Type()
)
mscAtmIfVptSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptSegSwitchSideLoopbackState.setStatus("mandatory")


class _MscAtmIfVptEndToEndLoopbackState_Type(Integer32):
    """Custom type mscAtmIfVptEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptEndToEndLoopbackState_Type.__name__ = "Integer32"
_MscAtmIfVptEndToEndLoopbackState_Object = MibTableColumn
mscAtmIfVptEndToEndLoopbackState = _MscAtmIfVptEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 50),
    _MscAtmIfVptEndToEndLoopbackState_Type()
)
mscAtmIfVptEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptEndToEndLoopbackState.setStatus("mandatory")


class _MscAtmIfVptRxOamCellCongestionState_Type(Integer32):
    """Custom type mscAtmIfVptRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptRxOamCellCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVptRxOamCellCongestionState_Object = MibTableColumn
mscAtmIfVptRxOamCellCongestionState = _MscAtmIfVptRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 55),
    _MscAtmIfVptRxOamCellCongestionState_Type()
)
mscAtmIfVptRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxOamCellCongestionState.setStatus("mandatory")


class _MscAtmIfVptAisState_Type(Integer32):
    """Custom type mscAtmIfVptAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptAisState_Type.__name__ = "Integer32"
_MscAtmIfVptAisState_Object = MibTableColumn
mscAtmIfVptAisState = _MscAtmIfVptAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 60),
    _MscAtmIfVptAisState_Type()
)
mscAtmIfVptAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptAisState.setStatus("mandatory")


class _MscAtmIfVptRdiState_Type(Integer32):
    """Custom type mscAtmIfVptRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_MscAtmIfVptRdiState_Type.__name__ = "Integer32"
_MscAtmIfVptRdiState_Object = MibTableColumn
mscAtmIfVptRdiState = _MscAtmIfVptRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 120, 1, 70),
    _MscAtmIfVptRdiState_Type()
)
mscAtmIfVptRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRdiState.setStatus("mandatory")
_MscAtmIfVptTrafficTable_Object = MibTable
mscAtmIfVptTrafficTable = _MscAtmIfVptTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTrafficTable.setStatus("mandatory")
_MscAtmIfVptTrafficEntry_Object = MibTableRow
mscAtmIfVptTrafficEntry = _MscAtmIfVptTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1)
)
mscAtmIfVptTrafficEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTrafficEntry.setStatus("mandatory")


class _MscAtmIfVptTxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVptTxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptTxTrafficDescType_Object = MibTableColumn
mscAtmIfVptTxTrafficDescType = _MscAtmIfVptTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 10),
    _MscAtmIfVptTxTrafficDescType_Type()
)
mscAtmIfVptTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptTxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptTxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptTxQosClass_Object = MibTableColumn
mscAtmIfVptTxQosClass = _MscAtmIfVptTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 30),
    _MscAtmIfVptTxQosClass_Type()
)
mscAtmIfVptTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxQosClass.setStatus("obsolete")


class _MscAtmIfVptFwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVptFwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptFwdQosClass_Object = MibTableColumn
mscAtmIfVptFwdQosClass = _MscAtmIfVptFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 31),
    _MscAtmIfVptFwdQosClass_Type()
)
mscAtmIfVptFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptFwdQosClass.setStatus("obsolete")


class _MscAtmIfVptTxQueueLength_Type(Integer32):
    """Custom type mscAtmIfVptTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVptTxQueueLength_Type.__name__ = "Integer32"
_MscAtmIfVptTxQueueLength_Object = MibTableColumn
mscAtmIfVptTxQueueLength = _MscAtmIfVptTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 32),
    _MscAtmIfVptTxQueueLength_Type()
)
mscAtmIfVptTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxQueueLength.setStatus("obsolete")


class _MscAtmIfVptTxQueueCongestionState_Type(Integer32):
    """Custom type mscAtmIfVptTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptTxQueueCongestionState_Type.__name__ = "Integer32"
_MscAtmIfVptTxQueueCongestionState_Object = MibTableColumn
mscAtmIfVptTxQueueCongestionState = _MscAtmIfVptTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 33),
    _MscAtmIfVptTxQueueCongestionState_Type()
)
mscAtmIfVptTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxQueueCongestionState.setStatus("obsolete")


class _MscAtmIfVptHoldingPriority_Type(Integer32):
    """Custom type mscAtmIfVptHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_MscAtmIfVptHoldingPriority_Type.__name__ = "Integer32"
_MscAtmIfVptHoldingPriority_Object = MibTableColumn
mscAtmIfVptHoldingPriority = _MscAtmIfVptHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 35),
    _MscAtmIfVptHoldingPriority_Type()
)
mscAtmIfVptHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptHoldingPriority.setStatus("obsolete")


class _MscAtmIfVptRxTrafficDescType_Type(Integer32):
    """Custom type mscAtmIfVptRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_MscAtmIfVptRxTrafficDescType_Type.__name__ = "Integer32"
_MscAtmIfVptRxTrafficDescType_Object = MibTableColumn
mscAtmIfVptRxTrafficDescType = _MscAtmIfVptRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 40),
    _MscAtmIfVptRxTrafficDescType_Type()
)
mscAtmIfVptRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxTrafficDescType.setStatus("obsolete")


class _MscAtmIfVptRxQosClass_Type(Integer32):
    """Custom type mscAtmIfVptRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_MscAtmIfVptRxQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptRxQosClass_Object = MibTableColumn
mscAtmIfVptRxQosClass = _MscAtmIfVptRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 60),
    _MscAtmIfVptRxQosClass_Type()
)
mscAtmIfVptRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxQosClass.setStatus("obsolete")


class _MscAtmIfVptBwdQosClass_Type(Integer32):
    """Custom type mscAtmIfVptBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_MscAtmIfVptBwdQosClass_Type.__name__ = "Integer32"
_MscAtmIfVptBwdQosClass_Object = MibTableColumn
mscAtmIfVptBwdQosClass = _MscAtmIfVptBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 61),
    _MscAtmIfVptBwdQosClass_Type()
)
mscAtmIfVptBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptBwdQosClass.setStatus("obsolete")


class _MscAtmIfVptAtmServiceCategory_Type(Integer32):
    """Custom type mscAtmIfVptAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_MscAtmIfVptAtmServiceCategory_Type.__name__ = "Integer32"
_MscAtmIfVptAtmServiceCategory_Object = MibTableColumn
mscAtmIfVptAtmServiceCategory = _MscAtmIfVptAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 62),
    _MscAtmIfVptAtmServiceCategory_Type()
)
mscAtmIfVptAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptAtmServiceCategory.setStatus("obsolete")


class _MscAtmIfVptTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfVptTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_MscAtmIfVptTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfVptTrafficShaping_Object = MibTableColumn
mscAtmIfVptTrafficShaping = _MscAtmIfVptTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 70),
    _MscAtmIfVptTrafficShaping_Type()
)
mscAtmIfVptTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTrafficShaping.setStatus("obsolete")


class _MscAtmIfVptBearerClassBbc_Type(Integer32):
    """Custom type mscAtmIfVptBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_MscAtmIfVptBearerClassBbc_Type.__name__ = "Integer32"
_MscAtmIfVptBearerClassBbc_Object = MibTableColumn
mscAtmIfVptBearerClassBbc = _MscAtmIfVptBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 71),
    _MscAtmIfVptBearerClassBbc_Type()
)
mscAtmIfVptBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptBearerClassBbc.setStatus("obsolete")


class _MscAtmIfVptTransferCapabilityBbc_Type(Integer32):
    """Custom type mscAtmIfVptTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_MscAtmIfVptTransferCapabilityBbc_Type.__name__ = "Integer32"
_MscAtmIfVptTransferCapabilityBbc_Object = MibTableColumn
mscAtmIfVptTransferCapabilityBbc = _MscAtmIfVptTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 72),
    _MscAtmIfVptTransferCapabilityBbc_Type()
)
mscAtmIfVptTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTransferCapabilityBbc.setStatus("obsolete")


class _MscAtmIfVptClippingBbc_Type(Integer32):
    """Custom type mscAtmIfVptClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_MscAtmIfVptClippingBbc_Type.__name__ = "Integer32"
_MscAtmIfVptClippingBbc_Object = MibTableColumn
mscAtmIfVptClippingBbc = _MscAtmIfVptClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 74),
    _MscAtmIfVptClippingBbc_Type()
)
mscAtmIfVptClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptClippingBbc.setStatus("obsolete")


class _MscAtmIfVptUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfVptUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_MscAtmIfVptUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfVptUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfVptUnshapedTransmitQueueing = _MscAtmIfVptUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 75),
    _MscAtmIfVptUnshapedTransmitQueueing_Type()
)
mscAtmIfVptUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfVptBestEffort_Type(Integer32):
    """Custom type mscAtmIfVptBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_MscAtmIfVptBestEffort_Type.__name__ = "Integer32"
_MscAtmIfVptBestEffort_Object = MibTableColumn
mscAtmIfVptBestEffort = _MscAtmIfVptBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 76),
    _MscAtmIfVptBestEffort_Type()
)
mscAtmIfVptBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptBestEffort.setStatus("obsolete")


class _MscAtmIfVptUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfVptUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_MscAtmIfVptUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfVptUsageParameterControl_Object = MibTableColumn
mscAtmIfVptUsageParameterControl = _MscAtmIfVptUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 80),
    _MscAtmIfVptUsageParameterControl_Type()
)
mscAtmIfVptUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptUsageParameterControl.setStatus("obsolete")


class _MscAtmIfVptTxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVptTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptTxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptTxFrameDiscard_Object = MibTableColumn
mscAtmIfVptTxFrameDiscard = _MscAtmIfVptTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 85),
    _MscAtmIfVptTxFrameDiscard_Type()
)
mscAtmIfVptTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVptRxFrameDiscard_Type(OctetString):
    """Custom type mscAtmIfVptRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfVptRxFrameDiscard_Type.__name__ = "OctetString"
_MscAtmIfVptRxFrameDiscard_Object = MibTableColumn
mscAtmIfVptRxFrameDiscard = _MscAtmIfVptRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 86),
    _MscAtmIfVptRxFrameDiscard_Type()
)
mscAtmIfVptRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxFrameDiscard.setStatus("obsolete")


class _MscAtmIfVptBandwidthElastic_Type(Integer32):
    """Custom type mscAtmIfVptBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfVptBandwidthElastic_Type.__name__ = "Integer32"
_MscAtmIfVptBandwidthElastic_Object = MibTableColumn
mscAtmIfVptBandwidthElastic = _MscAtmIfVptBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 90),
    _MscAtmIfVptBandwidthElastic_Type()
)
mscAtmIfVptBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptBandwidthElastic.setStatus("obsolete")


class _MscAtmIfVptBandwidthReduction_Type(Integer32):
    """Custom type mscAtmIfVptBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptBandwidthReduction_Type.__name__ = "Integer32"
_MscAtmIfVptBandwidthReduction_Object = MibTableColumn
mscAtmIfVptBandwidthReduction = _MscAtmIfVptBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 130, 1, 100),
    _MscAtmIfVptBandwidthReduction_Type()
)
mscAtmIfVptBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptBandwidthReduction.setStatus("obsolete")
_MscAtmIfVptStatsTable_Object = MibTable
mscAtmIfVptStatsTable = _MscAtmIfVptStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140)
)
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTable.setStatus("mandatory")
_MscAtmIfVptStatsEntry_Object = MibTableRow
mscAtmIfVptStatsEntry = _MscAtmIfVptStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1)
)
mscAtmIfVptStatsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptStatsEntry.setStatus("mandatory")
_MscAtmIfVptStatsTxCell_Type = PassportCounter64
_MscAtmIfVptStatsTxCell_Object = MibTableColumn
mscAtmIfVptStatsTxCell = _MscAtmIfVptStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 10),
    _MscAtmIfVptStatsTxCell_Type()
)
mscAtmIfVptStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTxCell.setStatus("mandatory")
_MscAtmIfVptStatsTxCellClp_Type = PassportCounter64
_MscAtmIfVptStatsTxCellClp_Object = MibTableColumn
mscAtmIfVptStatsTxCellClp = _MscAtmIfVptStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 20),
    _MscAtmIfVptStatsTxCellClp_Type()
)
mscAtmIfVptStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTxCellClp.setStatus("mandatory")
_MscAtmIfVptTxDiscard_Type = PassportCounter64
_MscAtmIfVptTxDiscard_Object = MibTableColumn
mscAtmIfVptTxDiscard = _MscAtmIfVptTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 30),
    _MscAtmIfVptTxDiscard_Type()
)
mscAtmIfVptTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxDiscard.setStatus("obsolete")
_MscAtmIfVptTxDiscardClp_Type = PassportCounter64
_MscAtmIfVptTxDiscardClp_Object = MibTableColumn
mscAtmIfVptTxDiscardClp = _MscAtmIfVptTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 40),
    _MscAtmIfVptTxDiscardClp_Type()
)
mscAtmIfVptTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxDiscardClp.setStatus("obsolete")
_MscAtmIfVptStatsTxCellDiscard_Type = PassportCounter64
_MscAtmIfVptStatsTxCellDiscard_Object = MibTableColumn
mscAtmIfVptStatsTxCellDiscard = _MscAtmIfVptStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 42),
    _MscAtmIfVptStatsTxCellDiscard_Type()
)
mscAtmIfVptStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTxCellDiscard.setStatus("mandatory")
_MscAtmIfVptStatsTxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVptStatsTxCellDiscardClp_Object = MibTableColumn
mscAtmIfVptStatsTxCellDiscardClp = _MscAtmIfVptStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 43),
    _MscAtmIfVptStatsTxCellDiscardClp_Type()
)
mscAtmIfVptStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVptStatsTxFrameDiscard_Type = PassportCounter64
_MscAtmIfVptStatsTxFrameDiscard_Object = MibTableColumn
mscAtmIfVptStatsTxFrameDiscard = _MscAtmIfVptStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 46),
    _MscAtmIfVptStatsTxFrameDiscard_Type()
)
mscAtmIfVptStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTxFrameDiscard.setStatus("mandatory")
_MscAtmIfVptStatsTxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVptStatsTxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVptStatsTxFrameDiscardClp = _MscAtmIfVptStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 47),
    _MscAtmIfVptStatsTxFrameDiscardClp_Type()
)
mscAtmIfVptStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsTxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVptStatsRxCell_Type = PassportCounter64
_MscAtmIfVptStatsRxCell_Object = MibTableColumn
mscAtmIfVptStatsRxCell = _MscAtmIfVptStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 50),
    _MscAtmIfVptStatsRxCell_Type()
)
mscAtmIfVptStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxCell.setStatus("mandatory")
_MscAtmIfVptStatsRxCellClp_Type = PassportCounter64
_MscAtmIfVptStatsRxCellClp_Object = MibTableColumn
mscAtmIfVptStatsRxCellClp = _MscAtmIfVptStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 60),
    _MscAtmIfVptStatsRxCellClp_Type()
)
mscAtmIfVptStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxCellClp.setStatus("mandatory")
_MscAtmIfVptRxDiscard_Type = PassportCounter64
_MscAtmIfVptRxDiscard_Object = MibTableColumn
mscAtmIfVptRxDiscard = _MscAtmIfVptRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 70),
    _MscAtmIfVptRxDiscard_Type()
)
mscAtmIfVptRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxDiscard.setStatus("obsolete")
_MscAtmIfVptRxDiscardClp_Type = PassportCounter64
_MscAtmIfVptRxDiscardClp_Object = MibTableColumn
mscAtmIfVptRxDiscardClp = _MscAtmIfVptRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 80),
    _MscAtmIfVptRxDiscardClp_Type()
)
mscAtmIfVptRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxDiscardClp.setStatus("obsolete")
_MscAtmIfVptStatsRxCellDiscard_Type = PassportCounter64
_MscAtmIfVptStatsRxCellDiscard_Object = MibTableColumn
mscAtmIfVptStatsRxCellDiscard = _MscAtmIfVptStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 82),
    _MscAtmIfVptStatsRxCellDiscard_Type()
)
mscAtmIfVptStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxCellDiscard.setStatus("mandatory")
_MscAtmIfVptStatsRxCellDiscardClp_Type = PassportCounter64
_MscAtmIfVptStatsRxCellDiscardClp_Object = MibTableColumn
mscAtmIfVptStatsRxCellDiscardClp = _MscAtmIfVptStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 83),
    _MscAtmIfVptStatsRxCellDiscardClp_Type()
)
mscAtmIfVptStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxCellDiscardClp.setStatus("mandatory")
_MscAtmIfVptStatsRxFrameDiscard_Type = PassportCounter64
_MscAtmIfVptStatsRxFrameDiscard_Object = MibTableColumn
mscAtmIfVptStatsRxFrameDiscard = _MscAtmIfVptStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 86),
    _MscAtmIfVptStatsRxFrameDiscard_Type()
)
mscAtmIfVptStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxFrameDiscard.setStatus("mandatory")
_MscAtmIfVptStatsRxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfVptStatsRxFrameDiscardClp_Object = MibTableColumn
mscAtmIfVptStatsRxFrameDiscardClp = _MscAtmIfVptStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 88),
    _MscAtmIfVptStatsRxFrameDiscardClp_Type()
)
mscAtmIfVptStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfVptStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_MscAtmIfVptStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
mscAtmIfVptStatsRxUpcViolationOnEnforcer1 = _MscAtmIfVptStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 90),
    _MscAtmIfVptStatsRxUpcViolationOnEnforcer1_Type()
)
mscAtmIfVptStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_MscAtmIfVptStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_MscAtmIfVptStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
mscAtmIfVptStatsRxUpcViolationOnEnforcer2 = _MscAtmIfVptStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 92),
    _MscAtmIfVptStatsRxUpcViolationOnEnforcer2_Type()
)
mscAtmIfVptStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_MscAtmIfVptStatsRxAal5FrameError_Type = PassportCounter64
_MscAtmIfVptStatsRxAal5FrameError_Object = MibTableColumn
mscAtmIfVptStatsRxAal5FrameError = _MscAtmIfVptStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 100),
    _MscAtmIfVptStatsRxAal5FrameError_Type()
)
mscAtmIfVptStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxAal5FrameError.setStatus("mandatory")
_MscAtmIfVptStatsRxAal5FrameAbort_Type = PassportCounter64
_MscAtmIfVptStatsRxAal5FrameAbort_Object = MibTableColumn
mscAtmIfVptStatsRxAal5FrameAbort = _MscAtmIfVptStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 140, 1, 102),
    _MscAtmIfVptStatsRxAal5FrameAbort_Type()
)
mscAtmIfVptStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptStatsRxAal5FrameAbort.setStatus("mandatory")
_MscAtmIfVptTxTdpTable_Object = MibTable
mscAtmIfVptTxTdpTable = _MscAtmIfVptTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 294)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTxTdpTable.setStatus("obsolete")
_MscAtmIfVptTxTdpEntry_Object = MibTableRow
mscAtmIfVptTxTdpEntry = _MscAtmIfVptTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 294, 1)
)
mscAtmIfVptTxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptTxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_MscAtmIfVptTxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTxTdpIndex_Object = MibTableColumn
mscAtmIfVptTxTdpIndex = _MscAtmIfVptTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 294, 1, 1),
    _MscAtmIfVptTxTdpIndex_Type()
)
mscAtmIfVptTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptTxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptTxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTxTdpValue_Object = MibTableColumn
mscAtmIfVptTxTdpValue = _MscAtmIfVptTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 294, 1, 2),
    _MscAtmIfVptTxTdpValue_Type()
)
mscAtmIfVptTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxTdpValue.setStatus("obsolete")
_MscAtmIfVptRxTdpTable_Object = MibTable
mscAtmIfVptRxTdpTable = _MscAtmIfVptRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 295)
)
if mibBuilder.loadTexts:
    mscAtmIfVptRxTdpTable.setStatus("obsolete")
_MscAtmIfVptRxTdpEntry_Object = MibTableRow
mscAtmIfVptRxTdpEntry = _MscAtmIfVptRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 295, 1)
)
mscAtmIfVptRxTdpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptRxTdpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptRxTdpEntry.setStatus("obsolete")


class _MscAtmIfVptRxTdpIndex_Type(Integer32):
    """Custom type mscAtmIfVptRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_MscAtmIfVptRxTdpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptRxTdpIndex_Object = MibTableColumn
mscAtmIfVptRxTdpIndex = _MscAtmIfVptRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 295, 1, 1),
    _MscAtmIfVptRxTdpIndex_Type()
)
mscAtmIfVptRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptRxTdpIndex.setStatus("obsolete")


class _MscAtmIfVptRxTdpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptRxTdpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptRxTdpValue_Object = MibTableColumn
mscAtmIfVptRxTdpValue = _MscAtmIfVptRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 295, 1, 2),
    _MscAtmIfVptRxTdpValue_Type()
)
mscAtmIfVptRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptRxTdpValue.setStatus("obsolete")
_MscAtmIfVptTxQThreshTable_Object = MibTable
mscAtmIfVptTxQThreshTable = _MscAtmIfVptTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 352)
)
if mibBuilder.loadTexts:
    mscAtmIfVptTxQThreshTable.setStatus("obsolete")
_MscAtmIfVptTxQThreshEntry_Object = MibTableRow
mscAtmIfVptTxQThreshEntry = _MscAtmIfVptTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 352, 1)
)
mscAtmIfVptTxQThreshEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptTxQThreshEntry.setStatus("obsolete")


class _MscAtmIfVptTxQThreshIndex_Type(Integer32):
    """Custom type mscAtmIfVptTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfVptTxQThreshIndex_Type.__name__ = "Integer32"
_MscAtmIfVptTxQThreshIndex_Object = MibTableColumn
mscAtmIfVptTxQThreshIndex = _MscAtmIfVptTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 352, 1, 1),
    _MscAtmIfVptTxQThreshIndex_Type()
)
mscAtmIfVptTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptTxQThreshIndex.setStatus("obsolete")


class _MscAtmIfVptTxQThreshValue_Type(Unsigned32):
    """Custom type mscAtmIfVptTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_MscAtmIfVptTxQThreshValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptTxQThreshValue_Object = MibTableColumn
mscAtmIfVptTxQThreshValue = _MscAtmIfVptTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 352, 1, 2),
    _MscAtmIfVptTxQThreshValue_Type()
)
mscAtmIfVptTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptTxQThreshValue.setStatus("obsolete")
_MscAtmIfVptFqpTable_Object = MibTable
mscAtmIfVptFqpTable = _MscAtmIfVptFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 357)
)
if mibBuilder.loadTexts:
    mscAtmIfVptFqpTable.setStatus("obsolete")
_MscAtmIfVptFqpEntry_Object = MibTableRow
mscAtmIfVptFqpEntry = _MscAtmIfVptFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 357, 1)
)
mscAtmIfVptFqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptFqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptFqpEntry.setStatus("obsolete")


class _MscAtmIfVptFqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptFqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptFqpIndex_Object = MibTableColumn
mscAtmIfVptFqpIndex = _MscAtmIfVptFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 357, 1, 1),
    _MscAtmIfVptFqpIndex_Type()
)
mscAtmIfVptFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptFqpIndex.setStatus("obsolete")


class _MscAtmIfVptFqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptFqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptFqpValue_Object = MibTableColumn
mscAtmIfVptFqpValue = _MscAtmIfVptFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 357, 1, 2),
    _MscAtmIfVptFqpValue_Type()
)
mscAtmIfVptFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptFqpValue.setStatus("obsolete")
_MscAtmIfVptBqpTable_Object = MibTable
mscAtmIfVptBqpTable = _MscAtmIfVptBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 358)
)
if mibBuilder.loadTexts:
    mscAtmIfVptBqpTable.setStatus("obsolete")
_MscAtmIfVptBqpEntry_Object = MibTableRow
mscAtmIfVptBqpEntry = _MscAtmIfVptBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 358, 1)
)
mscAtmIfVptBqpEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptBqpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfVptBqpEntry.setStatus("obsolete")


class _MscAtmIfVptBqpIndex_Type(Integer32):
    """Custom type mscAtmIfVptBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_MscAtmIfVptBqpIndex_Type.__name__ = "Integer32"
_MscAtmIfVptBqpIndex_Object = MibTableColumn
mscAtmIfVptBqpIndex = _MscAtmIfVptBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 358, 1, 1),
    _MscAtmIfVptBqpIndex_Type()
)
mscAtmIfVptBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfVptBqpIndex.setStatus("obsolete")


class _MscAtmIfVptBqpValue_Type(Unsigned32):
    """Custom type mscAtmIfVptBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_MscAtmIfVptBqpValue_Type.__name__ = "Unsigned32"
_MscAtmIfVptBqpValue_Object = MibTableColumn
mscAtmIfVptBqpValue = _MscAtmIfVptBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 358, 1, 2),
    _MscAtmIfVptBqpValue_Type()
)
mscAtmIfVptBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfVptBqpValue.setStatus("obsolete")
_MscAtmIfEp_ObjectIdentity = ObjectIdentity
mscAtmIfEp = _MscAtmIfEp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10)
)
_MscAtmIfEpRowStatusTable_Object = MibTable
mscAtmIfEpRowStatusTable = _MscAtmIfEpRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfEpRowStatusTable.setStatus("mandatory")
_MscAtmIfEpRowStatusEntry_Object = MibTableRow
mscAtmIfEpRowStatusEntry = _MscAtmIfEpRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 1, 1)
)
mscAtmIfEpRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfEpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfEpRowStatusEntry.setStatus("mandatory")
_MscAtmIfEpRowStatus_Type = RowStatus
_MscAtmIfEpRowStatus_Object = MibTableColumn
mscAtmIfEpRowStatus = _MscAtmIfEpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 1, 1, 1),
    _MscAtmIfEpRowStatus_Type()
)
mscAtmIfEpRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfEpRowStatus.setStatus("mandatory")
_MscAtmIfEpComponentName_Type = DisplayString
_MscAtmIfEpComponentName_Object = MibTableColumn
mscAtmIfEpComponentName = _MscAtmIfEpComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 1, 1, 2),
    _MscAtmIfEpComponentName_Type()
)
mscAtmIfEpComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfEpComponentName.setStatus("mandatory")
_MscAtmIfEpStorageType_Type = StorageType
_MscAtmIfEpStorageType_Object = MibTableColumn
mscAtmIfEpStorageType = _MscAtmIfEpStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 1, 1, 4),
    _MscAtmIfEpStorageType_Type()
)
mscAtmIfEpStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfEpStorageType.setStatus("mandatory")


class _MscAtmIfEpIndex_Type(Integer32):
    """Custom type mscAtmIfEpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_MscAtmIfEpIndex_Type.__name__ = "Integer32"
_MscAtmIfEpIndex_Object = MibTableColumn
mscAtmIfEpIndex = _MscAtmIfEpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 1, 1, 10),
    _MscAtmIfEpIndex_Type()
)
mscAtmIfEpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfEpIndex.setStatus("mandatory")
_MscAtmIfEpProvTable_Object = MibTable
mscAtmIfEpProvTable = _MscAtmIfEpProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfEpProvTable.setStatus("mandatory")
_MscAtmIfEpProvEntry_Object = MibTableRow
mscAtmIfEpProvEntry = _MscAtmIfEpProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 100, 1)
)
mscAtmIfEpProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfEpIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfEpProvEntry.setStatus("mandatory")


class _MscAtmIfEpMinimumBandwidthGuarantee_Type(Unsigned32):
    """Custom type mscAtmIfEpMinimumBandwidthGuarantee based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 100),
    )


_MscAtmIfEpMinimumBandwidthGuarantee_Type.__name__ = "Unsigned32"
_MscAtmIfEpMinimumBandwidthGuarantee_Object = MibTableColumn
mscAtmIfEpMinimumBandwidthGuarantee = _MscAtmIfEpMinimumBandwidthGuarantee_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 10, 100, 1, 1),
    _MscAtmIfEpMinimumBandwidthGuarantee_Type()
)
mscAtmIfEpMinimumBandwidthGuarantee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfEpMinimumBandwidthGuarantee.setStatus("mandatory")
_MscAtmIfPm_ObjectIdentity = ObjectIdentity
mscAtmIfPm = _MscAtmIfPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11)
)
_MscAtmIfPmRowStatusTable_Object = MibTable
mscAtmIfPmRowStatusTable = _MscAtmIfPmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 1)
)
if mibBuilder.loadTexts:
    mscAtmIfPmRowStatusTable.setStatus("mandatory")
_MscAtmIfPmRowStatusEntry_Object = MibTableRow
mscAtmIfPmRowStatusEntry = _MscAtmIfPmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 1, 1)
)
mscAtmIfPmRowStatusEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfPmRowStatusEntry.setStatus("mandatory")
_MscAtmIfPmRowStatus_Type = RowStatus
_MscAtmIfPmRowStatus_Object = MibTableColumn
mscAtmIfPmRowStatus = _MscAtmIfPmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 1, 1, 1),
    _MscAtmIfPmRowStatus_Type()
)
mscAtmIfPmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfPmRowStatus.setStatus("mandatory")
_MscAtmIfPmComponentName_Type = DisplayString
_MscAtmIfPmComponentName_Object = MibTableColumn
mscAtmIfPmComponentName = _MscAtmIfPmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 1, 1, 2),
    _MscAtmIfPmComponentName_Type()
)
mscAtmIfPmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfPmComponentName.setStatus("mandatory")
_MscAtmIfPmStorageType_Type = StorageType
_MscAtmIfPmStorageType_Object = MibTableColumn
mscAtmIfPmStorageType = _MscAtmIfPmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 1, 1, 4),
    _MscAtmIfPmStorageType_Type()
)
mscAtmIfPmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfPmStorageType.setStatus("mandatory")
_MscAtmIfPmIndex_Type = NonReplicated
_MscAtmIfPmIndex_Object = MibTableColumn
mscAtmIfPmIndex = _MscAtmIfPmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 1, 1, 10),
    _MscAtmIfPmIndex_Type()
)
mscAtmIfPmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfPmIndex.setStatus("mandatory")
_MscAtmIfPmProvTable_Object = MibTable
mscAtmIfPmProvTable = _MscAtmIfPmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfPmProvTable.setStatus("mandatory")
_MscAtmIfPmProvEntry_Object = MibTableRow
mscAtmIfPmProvEntry = _MscAtmIfPmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 100, 1)
)
mscAtmIfPmProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfPmIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfPmProvEntry.setStatus("mandatory")


class _MscAtmIfPmSegSwitchSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfPmSegSwitchSideMeasurement based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfPmSegSwitchSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfPmSegSwitchSideMeasurement_Object = MibTableColumn
mscAtmIfPmSegSwitchSideMeasurement = _MscAtmIfPmSegSwitchSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 100, 1, 1),
    _MscAtmIfPmSegSwitchSideMeasurement_Type()
)
mscAtmIfPmSegSwitchSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfPmSegSwitchSideMeasurement.setStatus("mandatory")


class _MscAtmIfPmSegLinkSideMeasurement_Type(OctetString):
    """Custom type mscAtmIfPmSegLinkSideMeasurement based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfPmSegLinkSideMeasurement_Type.__name__ = "OctetString"
_MscAtmIfPmSegLinkSideMeasurement_Object = MibTableColumn
mscAtmIfPmSegLinkSideMeasurement = _MscAtmIfPmSegLinkSideMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 100, 1, 2),
    _MscAtmIfPmSegLinkSideMeasurement_Type()
)
mscAtmIfPmSegLinkSideMeasurement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfPmSegLinkSideMeasurement.setStatus("mandatory")


class _MscAtmIfPmControlMode_Type(Integer32):
    """Custom type mscAtmIfPmControlMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("autoStart", 0),
          ("onDemand", 1))
    )


_MscAtmIfPmControlMode_Type.__name__ = "Integer32"
_MscAtmIfPmControlMode_Object = MibTableColumn
mscAtmIfPmControlMode = _MscAtmIfPmControlMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 11, 100, 1, 3),
    _MscAtmIfPmControlMode_Type()
)
mscAtmIfPmControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfPmControlMode.setStatus("mandatory")
_MscAtmIfCidDataTable_Object = MibTable
mscAtmIfCidDataTable = _MscAtmIfCidDataTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 100)
)
if mibBuilder.loadTexts:
    mscAtmIfCidDataTable.setStatus("mandatory")
_MscAtmIfCidDataEntry_Object = MibTableRow
mscAtmIfCidDataEntry = _MscAtmIfCidDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 100, 1)
)
mscAtmIfCidDataEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfCidDataEntry.setStatus("mandatory")


class _MscAtmIfCustomerIdentifier_Type(Unsigned32):
    """Custom type mscAtmIfCustomerIdentifier based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 8191),
    )


_MscAtmIfCustomerIdentifier_Type.__name__ = "Unsigned32"
_MscAtmIfCustomerIdentifier_Object = MibTableColumn
mscAtmIfCustomerIdentifier = _MscAtmIfCustomerIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 100, 1, 1),
    _MscAtmIfCustomerIdentifier_Type()
)
mscAtmIfCustomerIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCustomerIdentifier.setStatus("mandatory")
_MscAtmIfProvTable_Object = MibTable
mscAtmIfProvTable = _MscAtmIfProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110)
)
if mibBuilder.loadTexts:
    mscAtmIfProvTable.setStatus("mandatory")
_MscAtmIfProvEntry_Object = MibTableRow
mscAtmIfProvEntry = _MscAtmIfProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1)
)
mscAtmIfProvEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfProvEntry.setStatus("mandatory")
_MscAtmIfInterfaceName_Type = Link
_MscAtmIfInterfaceName_Object = MibTableColumn
mscAtmIfInterfaceName = _MscAtmIfInterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 10),
    _MscAtmIfInterfaceName_Type()
)
mscAtmIfInterfaceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfInterfaceName.setStatus("mandatory")


class _MscAtmIfType_Type(Integer32):
    """Custom type mscAtmIfType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ppi", 1),
          ("uni", 0))
    )


_MscAtmIfType_Type.__name__ = "Integer32"
_MscAtmIfType_Object = MibTableColumn
mscAtmIfType = _MscAtmIfType_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 20),
    _MscAtmIfType_Type()
)
mscAtmIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfType.setStatus("obsolete")


class _MscAtmIfOamSegmentBoundary_Type(Integer32):
    """Custom type mscAtmIfOamSegmentBoundary based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_MscAtmIfOamSegmentBoundary_Type.__name__ = "Integer32"
_MscAtmIfOamSegmentBoundary_Object = MibTableColumn
mscAtmIfOamSegmentBoundary = _MscAtmIfOamSegmentBoundary_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 30),
    _MscAtmIfOamSegmentBoundary_Type()
)
mscAtmIfOamSegmentBoundary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfOamSegmentBoundary.setStatus("mandatory")


class _MscAtmIfMaxVpcs_Type(Unsigned32):
    """Custom type mscAtmIfMaxVpcs based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MscAtmIfMaxVpcs_Type.__name__ = "Unsigned32"
_MscAtmIfMaxVpcs_Object = MibTableColumn
mscAtmIfMaxVpcs = _MscAtmIfMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 40),
    _MscAtmIfMaxVpcs_Type()
)
mscAtmIfMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfMaxVpcs.setStatus("obsolete")


class _MscAtmIfMaxVccs_Type(Unsigned32):
    """Custom type mscAtmIfMaxVccs based on Unsigned32"""
    defaultValue = 255

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_MscAtmIfMaxVccs_Type.__name__ = "Unsigned32"
_MscAtmIfMaxVccs_Object = MibTableColumn
mscAtmIfMaxVccs = _MscAtmIfMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 50),
    _MscAtmIfMaxVccs_Type()
)
mscAtmIfMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfMaxVccs.setStatus("obsolete")


class _MscAtmIfTrafficShaping_Type(Integer32):
    """Custom type mscAtmIfTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfTrafficShaping_Type.__name__ = "Integer32"
_MscAtmIfTrafficShaping_Object = MibTableColumn
mscAtmIfTrafficShaping = _MscAtmIfTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 60),
    _MscAtmIfTrafficShaping_Type()
)
mscAtmIfTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfTrafficShaping.setStatus("obsolete")


class _MscAtmIfUnshapedTransmitQueueing_Type(Integer32):
    """Custom type mscAtmIfUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_MscAtmIfUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_MscAtmIfUnshapedTransmitQueueing_Object = MibTableColumn
mscAtmIfUnshapedTransmitQueueing = _MscAtmIfUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 70),
    _MscAtmIfUnshapedTransmitQueueing_Type()
)
mscAtmIfUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfUnshapedTransmitQueueing.setStatus("obsolete")


class _MscAtmIfUsageParameterControl_Type(Integer32):
    """Custom type mscAtmIfUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_MscAtmIfUsageParameterControl_Type.__name__ = "Integer32"
_MscAtmIfUsageParameterControl_Object = MibTableColumn
mscAtmIfUsageParameterControl = _MscAtmIfUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 80),
    _MscAtmIfUsageParameterControl_Type()
)
mscAtmIfUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfUsageParameterControl.setStatus("obsolete")


class _MscAtmIfMaxVpiBits_Type(Unsigned32):
    """Custom type mscAtmIfMaxVpiBits based on Unsigned32"""
    defaultValue = 8

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(12, 12),
    )


_MscAtmIfMaxVpiBits_Type.__name__ = "Unsigned32"
_MscAtmIfMaxVpiBits_Object = MibTableColumn
mscAtmIfMaxVpiBits = _MscAtmIfMaxVpiBits_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 85),
    _MscAtmIfMaxVpiBits_Type()
)
mscAtmIfMaxVpiBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfMaxVpiBits.setStatus("mandatory")


class _MscAtmIfRemoteAtmInterfaceLabel_Type(AsciiString):
    """Custom type mscAtmIfRemoteAtmInterfaceLabel based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 60),
    )


_MscAtmIfRemoteAtmInterfaceLabel_Type.__name__ = "AsciiString"
_MscAtmIfRemoteAtmInterfaceLabel_Object = MibTableColumn
mscAtmIfRemoteAtmInterfaceLabel = _MscAtmIfRemoteAtmInterfaceLabel_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 90),
    _MscAtmIfRemoteAtmInterfaceLabel_Type()
)
mscAtmIfRemoteAtmInterfaceLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfRemoteAtmInterfaceLabel.setStatus("mandatory")


class _MscAtmIfTxCellMemory_Type(Unsigned32):
    """Custom type mscAtmIfTxCellMemory based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_MscAtmIfTxCellMemory_Type.__name__ = "Unsigned32"
_MscAtmIfTxCellMemory_Object = MibTableColumn
mscAtmIfTxCellMemory = _MscAtmIfTxCellMemory_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 91),
    _MscAtmIfTxCellMemory_Type()
)
mscAtmIfTxCellMemory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemory.setStatus("mandatory")


class _MscAtmIfFaultHoldOffTime_Type(Integer32):
    """Custom type mscAtmIfFaultHoldOffTime based on Integer32"""
    defaultValue = 65535

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("infinity", 65535),
          ("n0", 0))
    )


_MscAtmIfFaultHoldOffTime_Type.__name__ = "Integer32"
_MscAtmIfFaultHoldOffTime_Object = MibTableColumn
mscAtmIfFaultHoldOffTime = _MscAtmIfFaultHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 100),
    _MscAtmIfFaultHoldOffTime_Type()
)
mscAtmIfFaultHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfFaultHoldOffTime.setStatus("mandatory")


class _MscAtmIfCtdCalculation_Type(Integer32):
    """Custom type mscAtmIfCtdCalculation based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_MscAtmIfCtdCalculation_Type.__name__ = "Integer32"
_MscAtmIfCtdCalculation_Object = MibTableColumn
mscAtmIfCtdCalculation = _MscAtmIfCtdCalculation_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 110, 1, 110),
    _MscAtmIfCtdCalculation_Type()
)
mscAtmIfCtdCalculation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfCtdCalculation.setStatus("mandatory")
_MscAtmIfLbkTable_Object = MibTable
mscAtmIfLbkTable = _MscAtmIfLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 120)
)
if mibBuilder.loadTexts:
    mscAtmIfLbkTable.setStatus("mandatory")
_MscAtmIfLbkEntry_Object = MibTableRow
mscAtmIfLbkEntry = _MscAtmIfLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 120, 1)
)
mscAtmIfLbkEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfLbkEntry.setStatus("mandatory")


class _MscAtmIfSegLinkSideLoopback_Type(Integer32):
    """Custom type mscAtmIfSegLinkSideLoopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_MscAtmIfSegLinkSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfSegLinkSideLoopback_Object = MibTableColumn
mscAtmIfSegLinkSideLoopback = _MscAtmIfSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 120, 1, 10),
    _MscAtmIfSegLinkSideLoopback_Type()
)
mscAtmIfSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfSegLinkSideLoopback.setStatus("mandatory")


class _MscAtmIfSegSwitchSideLoopback_Type(Integer32):
    """Custom type mscAtmIfSegSwitchSideLoopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_MscAtmIfSegSwitchSideLoopback_Type.__name__ = "Integer32"
_MscAtmIfSegSwitchSideLoopback_Object = MibTableColumn
mscAtmIfSegSwitchSideLoopback = _MscAtmIfSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 120, 1, 20),
    _MscAtmIfSegSwitchSideLoopback_Type()
)
mscAtmIfSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfSegSwitchSideLoopback.setStatus("mandatory")


class _MscAtmIfEndToEndLoopback_Type(Integer32):
    """Custom type mscAtmIfEndToEndLoopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_MscAtmIfEndToEndLoopback_Type.__name__ = "Integer32"
_MscAtmIfEndToEndLoopback_Object = MibTableColumn
mscAtmIfEndToEndLoopback = _MscAtmIfEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 120, 1, 30),
    _MscAtmIfEndToEndLoopback_Type()
)
mscAtmIfEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mscAtmIfEndToEndLoopback.setStatus("mandatory")
_MscAtmIfStateTable_Object = MibTable
mscAtmIfStateTable = _MscAtmIfStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130)
)
if mibBuilder.loadTexts:
    mscAtmIfStateTable.setStatus("mandatory")
_MscAtmIfStateEntry_Object = MibTableRow
mscAtmIfStateEntry = _MscAtmIfStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1)
)
mscAtmIfStateEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfStateEntry.setStatus("mandatory")


class _MscAtmIfAdminState_Type(Integer32):
    """Custom type mscAtmIfAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_MscAtmIfAdminState_Type.__name__ = "Integer32"
_MscAtmIfAdminState_Object = MibTableColumn
mscAtmIfAdminState = _MscAtmIfAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 1),
    _MscAtmIfAdminState_Type()
)
mscAtmIfAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfAdminState.setStatus("mandatory")


class _MscAtmIfOperationalState_Type(Integer32):
    """Custom type mscAtmIfOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_MscAtmIfOperationalState_Type.__name__ = "Integer32"
_MscAtmIfOperationalState_Object = MibTableColumn
mscAtmIfOperationalState = _MscAtmIfOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 2),
    _MscAtmIfOperationalState_Type()
)
mscAtmIfOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfOperationalState.setStatus("mandatory")


class _MscAtmIfUsageState_Type(Integer32):
    """Custom type mscAtmIfUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_MscAtmIfUsageState_Type.__name__ = "Integer32"
_MscAtmIfUsageState_Object = MibTableColumn
mscAtmIfUsageState = _MscAtmIfUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 3),
    _MscAtmIfUsageState_Type()
)
mscAtmIfUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfUsageState.setStatus("mandatory")


class _MscAtmIfAvailabilityStatus_Type(OctetString):
    """Custom type mscAtmIfAvailabilityStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_MscAtmIfAvailabilityStatus_Type.__name__ = "OctetString"
_MscAtmIfAvailabilityStatus_Object = MibTableColumn
mscAtmIfAvailabilityStatus = _MscAtmIfAvailabilityStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 4),
    _MscAtmIfAvailabilityStatus_Type()
)
mscAtmIfAvailabilityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfAvailabilityStatus.setStatus("mandatory")


class _MscAtmIfProceduralStatus_Type(OctetString):
    """Custom type mscAtmIfProceduralStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfProceduralStatus_Type.__name__ = "OctetString"
_MscAtmIfProceduralStatus_Object = MibTableColumn
mscAtmIfProceduralStatus = _MscAtmIfProceduralStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 5),
    _MscAtmIfProceduralStatus_Type()
)
mscAtmIfProceduralStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfProceduralStatus.setStatus("mandatory")


class _MscAtmIfControlStatus_Type(OctetString):
    """Custom type mscAtmIfControlStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfControlStatus_Type.__name__ = "OctetString"
_MscAtmIfControlStatus_Object = MibTableColumn
mscAtmIfControlStatus = _MscAtmIfControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 6),
    _MscAtmIfControlStatus_Type()
)
mscAtmIfControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfControlStatus.setStatus("mandatory")


class _MscAtmIfAlarmStatus_Type(OctetString):
    """Custom type mscAtmIfAlarmStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_MscAtmIfAlarmStatus_Type.__name__ = "OctetString"
_MscAtmIfAlarmStatus_Object = MibTableColumn
mscAtmIfAlarmStatus = _MscAtmIfAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 7),
    _MscAtmIfAlarmStatus_Type()
)
mscAtmIfAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfAlarmStatus.setStatus("mandatory")


class _MscAtmIfStandbyStatus_Type(Integer32):
    """Custom type mscAtmIfStandbyStatus based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              15)
        )
    )
    namedValues = NamedValues(
        *(("coldStandby", 1),
          ("hotStandby", 0),
          ("notSet", 15),
          ("providingService", 2))
    )


_MscAtmIfStandbyStatus_Type.__name__ = "Integer32"
_MscAtmIfStandbyStatus_Object = MibTableColumn
mscAtmIfStandbyStatus = _MscAtmIfStandbyStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 8),
    _MscAtmIfStandbyStatus_Type()
)
mscAtmIfStandbyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfStandbyStatus.setStatus("mandatory")


class _MscAtmIfUnknownStatus_Type(Integer32):
    """Custom type mscAtmIfUnknownStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_MscAtmIfUnknownStatus_Type.__name__ = "Integer32"
_MscAtmIfUnknownStatus_Object = MibTableColumn
mscAtmIfUnknownStatus = _MscAtmIfUnknownStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 130, 1, 9),
    _MscAtmIfUnknownStatus_Type()
)
mscAtmIfUnknownStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfUnknownStatus.setStatus("mandatory")
_MscAtmIfOperTable_Object = MibTable
mscAtmIfOperTable = _MscAtmIfOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 140)
)
if mibBuilder.loadTexts:
    mscAtmIfOperTable.setStatus("mandatory")
_MscAtmIfOperEntry_Object = MibTableRow
mscAtmIfOperEntry = _MscAtmIfOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 140, 1)
)
mscAtmIfOperEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfOperEntry.setStatus("mandatory")


class _MscAtmIfTxCellMemoryAvailable_Type(Gauge32):
    """Custom type mscAtmIfTxCellMemoryAvailable based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_MscAtmIfTxCellMemoryAvailable_Type.__name__ = "Gauge32"
_MscAtmIfTxCellMemoryAvailable_Object = MibTableColumn
mscAtmIfTxCellMemoryAvailable = _MscAtmIfTxCellMemoryAvailable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 140, 1, 1),
    _MscAtmIfTxCellMemoryAvailable_Type()
)
mscAtmIfTxCellMemoryAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemoryAvailable.setStatus("mandatory")


class _MscAtmIfTxCellMemoryCongestionState_Type(Gauge32):
    """Custom type mscAtmIfTxCellMemoryCongestionState based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfTxCellMemoryCongestionState_Type.__name__ = "Gauge32"
_MscAtmIfTxCellMemoryCongestionState_Object = MibTableColumn
mscAtmIfTxCellMemoryCongestionState = _MscAtmIfTxCellMemoryCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 140, 1, 2),
    _MscAtmIfTxCellMemoryCongestionState_Type()
)
mscAtmIfTxCellMemoryCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemoryCongestionState.setStatus("mandatory")


class _MscAtmIfUnshapedTransmitQueueingOper_Type(Integer32):
    """Custom type mscAtmIfUnshapedTransmitQueueingOper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_MscAtmIfUnshapedTransmitQueueingOper_Type.__name__ = "Integer32"
_MscAtmIfUnshapedTransmitQueueingOper_Object = MibTableColumn
mscAtmIfUnshapedTransmitQueueingOper = _MscAtmIfUnshapedTransmitQueueingOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 140, 1, 10),
    _MscAtmIfUnshapedTransmitQueueingOper_Type()
)
mscAtmIfUnshapedTransmitQueueingOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfUnshapedTransmitQueueingOper.setStatus("obsolete")
_MscAtmIfStatsTable_Object = MibTable
mscAtmIfStatsTable = _MscAtmIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150)
)
if mibBuilder.loadTexts:
    mscAtmIfStatsTable.setStatus("mandatory")
_MscAtmIfStatsEntry_Object = MibTableRow
mscAtmIfStatsEntry = _MscAtmIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1)
)
mscAtmIfStatsEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfStatsEntry.setStatus("mandatory")
_MscAtmIfTransmittedCells_Type = PassportCounter64
_MscAtmIfTransmittedCells_Object = MibTableColumn
mscAtmIfTransmittedCells = _MscAtmIfTransmittedCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 10),
    _MscAtmIfTransmittedCells_Type()
)
mscAtmIfTransmittedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTransmittedCells.setStatus("obsolete")
_MscAtmIfTxCell_Type = PassportCounter64
_MscAtmIfTxCell_Object = MibTableColumn
mscAtmIfTxCell = _MscAtmIfTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 13),
    _MscAtmIfTxCell_Type()
)
mscAtmIfTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCell.setStatus("mandatory")
_MscAtmIfTxCellClp_Type = PassportCounter64
_MscAtmIfTxCellClp_Object = MibTableColumn
mscAtmIfTxCellClp = _MscAtmIfTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 14),
    _MscAtmIfTxCellClp_Type()
)
mscAtmIfTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellClp.setStatus("mandatory")
_MscAtmIfTxCellEfci_Type = PassportCounter64
_MscAtmIfTxCellEfci_Object = MibTableColumn
mscAtmIfTxCellEfci = _MscAtmIfTxCellEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 15),
    _MscAtmIfTxCellEfci_Type()
)
mscAtmIfTxCellEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellEfci.setStatus("mandatory")
_MscAtmIfTxCellDiscard_Type = PassportCounter64
_MscAtmIfTxCellDiscard_Object = MibTableColumn
mscAtmIfTxCellDiscard = _MscAtmIfTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 16),
    _MscAtmIfTxCellDiscard_Type()
)
mscAtmIfTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellDiscard.setStatus("mandatory")
_MscAtmIfTxCellDiscardClp_Type = PassportCounter64
_MscAtmIfTxCellDiscardClp_Object = MibTableColumn
mscAtmIfTxCellDiscardClp = _MscAtmIfTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 17),
    _MscAtmIfTxCellDiscardClp_Type()
)
mscAtmIfTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellDiscardClp.setStatus("mandatory")
_MscAtmIfTxFrameDiscard_Type = PassportCounter64
_MscAtmIfTxFrameDiscard_Object = MibTableColumn
mscAtmIfTxFrameDiscard = _MscAtmIfTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 18),
    _MscAtmIfTxFrameDiscard_Type()
)
mscAtmIfTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxFrameDiscard.setStatus("mandatory")
_MscAtmIfTxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfTxFrameDiscardClp_Object = MibTableColumn
mscAtmIfTxFrameDiscardClp = _MscAtmIfTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 19),
    _MscAtmIfTxFrameDiscardClp_Type()
)
mscAtmIfTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfReceivedCells_Type = PassportCounter64
_MscAtmIfReceivedCells_Object = MibTableColumn
mscAtmIfReceivedCells = _MscAtmIfReceivedCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 20),
    _MscAtmIfReceivedCells_Type()
)
mscAtmIfReceivedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfReceivedCells.setStatus("obsolete")
_MscAtmIfRxCell_Type = PassportCounter64
_MscAtmIfRxCell_Object = MibTableColumn
mscAtmIfRxCell = _MscAtmIfRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 23),
    _MscAtmIfRxCell_Type()
)
mscAtmIfRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxCell.setStatus("mandatory")
_MscAtmIfRxCellClp_Type = PassportCounter64
_MscAtmIfRxCellClp_Object = MibTableColumn
mscAtmIfRxCellClp = _MscAtmIfRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 24),
    _MscAtmIfRxCellClp_Type()
)
mscAtmIfRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxCellClp.setStatus("mandatory")
_MscAtmIfRxCellEfci_Type = PassportCounter64
_MscAtmIfRxCellEfci_Object = MibTableColumn
mscAtmIfRxCellEfci = _MscAtmIfRxCellEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 25),
    _MscAtmIfRxCellEfci_Type()
)
mscAtmIfRxCellEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxCellEfci.setStatus("mandatory")
_MscAtmIfRxCellDiscard_Type = PassportCounter64
_MscAtmIfRxCellDiscard_Object = MibTableColumn
mscAtmIfRxCellDiscard = _MscAtmIfRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 26),
    _MscAtmIfRxCellDiscard_Type()
)
mscAtmIfRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxCellDiscard.setStatus("mandatory")
_MscAtmIfRxCellDiscardClp_Type = PassportCounter64
_MscAtmIfRxCellDiscardClp_Object = MibTableColumn
mscAtmIfRxCellDiscardClp = _MscAtmIfRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 27),
    _MscAtmIfRxCellDiscardClp_Type()
)
mscAtmIfRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxCellDiscardClp.setStatus("mandatory")
_MscAtmIfRxFrameDiscard_Type = PassportCounter64
_MscAtmIfRxFrameDiscard_Object = MibTableColumn
mscAtmIfRxFrameDiscard = _MscAtmIfRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 28),
    _MscAtmIfRxFrameDiscard_Type()
)
mscAtmIfRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxFrameDiscard.setStatus("mandatory")
_MscAtmIfRxFrameDiscardClp_Type = PassportCounter64
_MscAtmIfRxFrameDiscardClp_Object = MibTableColumn
mscAtmIfRxFrameDiscardClp = _MscAtmIfRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 29),
    _MscAtmIfRxFrameDiscardClp_Type()
)
mscAtmIfRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxFrameDiscardClp.setStatus("mandatory")
_MscAtmIfDroppedRxCells_Type = PassportCounter64
_MscAtmIfDroppedRxCells_Object = MibTableColumn
mscAtmIfDroppedRxCells = _MscAtmIfDroppedRxCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 30),
    _MscAtmIfDroppedRxCells_Type()
)
mscAtmIfDroppedRxCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfDroppedRxCells.setStatus("mandatory")


class _MscAtmIfLastDroppedRxCellConnection_Type(IntegerSequence):
    """Custom type mscAtmIfLastDroppedRxCellConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_MscAtmIfLastDroppedRxCellConnection_Type.__name__ = "IntegerSequence"
_MscAtmIfLastDroppedRxCellConnection_Object = MibTableColumn
mscAtmIfLastDroppedRxCellConnection = _MscAtmIfLastDroppedRxCellConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 31),
    _MscAtmIfLastDroppedRxCellConnection_Type()
)
mscAtmIfLastDroppedRxCellConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfLastDroppedRxCellConnection.setStatus("mandatory")
_MscAtmIfAal5RxErrors_Type = Counter32
_MscAtmIfAal5RxErrors_Object = MibTableColumn
mscAtmIfAal5RxErrors = _MscAtmIfAal5RxErrors_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 32),
    _MscAtmIfAal5RxErrors_Type()
)
mscAtmIfAal5RxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfAal5RxErrors.setStatus("mandatory")


class _MscAtmIfLastAal5RxErrorConnection_Type(IntegerSequence):
    """Custom type mscAtmIfLastAal5RxErrorConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_MscAtmIfLastAal5RxErrorConnection_Type.__name__ = "IntegerSequence"
_MscAtmIfLastAal5RxErrorConnection_Object = MibTableColumn
mscAtmIfLastAal5RxErrorConnection = _MscAtmIfLastAal5RxErrorConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 33),
    _MscAtmIfLastAal5RxErrorConnection_Type()
)
mscAtmIfLastAal5RxErrorConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfLastAal5RxErrorConnection.setStatus("mandatory")
_MscAtmIfLrcFrameErrors_Type = Counter32
_MscAtmIfLrcFrameErrors_Object = MibTableColumn
mscAtmIfLrcFrameErrors = _MscAtmIfLrcFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 34),
    _MscAtmIfLrcFrameErrors_Type()
)
mscAtmIfLrcFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfLrcFrameErrors.setStatus("mandatory")


class _MscAtmIfLastLrcFrameErrorConnection_Type(IntegerSequence):
    """Custom type mscAtmIfLastLrcFrameErrorConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_MscAtmIfLastLrcFrameErrorConnection_Type.__name__ = "IntegerSequence"
_MscAtmIfLastLrcFrameErrorConnection_Object = MibTableColumn
mscAtmIfLastLrcFrameErrorConnection = _MscAtmIfLastLrcFrameErrorConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 35),
    _MscAtmIfLastLrcFrameErrorConnection_Type()
)
mscAtmIfLastLrcFrameErrorConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfLastLrcFrameErrorConnection.setStatus("mandatory")
_MscAtmIfAal5RxAborts_Type = Counter32
_MscAtmIfAal5RxAborts_Object = MibTableColumn
mscAtmIfAal5RxAborts = _MscAtmIfAal5RxAborts_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 40),
    _MscAtmIfAal5RxAborts_Type()
)
mscAtmIfAal5RxAborts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfAal5RxAborts.setStatus("mandatory")


class _MscAtmIfLastAal5RxAbortConnection_Type(IntegerSequence):
    """Custom type mscAtmIfLastAal5RxAbortConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_MscAtmIfLastAal5RxAbortConnection_Type.__name__ = "IntegerSequence"
_MscAtmIfLastAal5RxAbortConnection_Object = MibTableColumn
mscAtmIfLastAal5RxAbortConnection = _MscAtmIfLastAal5RxAbortConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 50),
    _MscAtmIfLastAal5RxAbortConnection_Type()
)
mscAtmIfLastAal5RxAbortConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfLastAal5RxAbortConnection.setStatus("mandatory")


class _MscAtmIfTxLinkUtilization_Type(Gauge32):
    """Custom type mscAtmIfTxLinkUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MscAtmIfTxLinkUtilization_Type.__name__ = "Gauge32"
_MscAtmIfTxLinkUtilization_Object = MibTableColumn
mscAtmIfTxLinkUtilization = _MscAtmIfTxLinkUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 59),
    _MscAtmIfTxLinkUtilization_Type()
)
mscAtmIfTxLinkUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxLinkUtilization.setStatus("mandatory")


class _MscAtmIfRxLinkUtilization_Type(Gauge32):
    """Custom type mscAtmIfRxLinkUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_MscAtmIfRxLinkUtilization_Type.__name__ = "Gauge32"
_MscAtmIfRxLinkUtilization_Object = MibTableColumn
mscAtmIfRxLinkUtilization = _MscAtmIfRxLinkUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 150, 1, 60),
    _MscAtmIfRxLinkUtilization_Type()
)
mscAtmIfRxLinkUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfRxLinkUtilization.setStatus("mandatory")
_MscAtmIfTxCellMemoryThresholdTable_Object = MibTable
mscAtmIfTxCellMemoryThresholdTable = _MscAtmIfTxCellMemoryThresholdTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 441)
)
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemoryThresholdTable.setStatus("mandatory")
_MscAtmIfTxCellMemoryThresholdEntry_Object = MibTableRow
mscAtmIfTxCellMemoryThresholdEntry = _MscAtmIfTxCellMemoryThresholdEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 441, 1)
)
mscAtmIfTxCellMemoryThresholdEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfTxCellMemoryThresholdIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemoryThresholdEntry.setStatus("mandatory")


class _MscAtmIfTxCellMemoryThresholdIndex_Type(Integer32):
    """Custom type mscAtmIfTxCellMemoryThresholdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_MscAtmIfTxCellMemoryThresholdIndex_Type.__name__ = "Integer32"
_MscAtmIfTxCellMemoryThresholdIndex_Object = MibTableColumn
mscAtmIfTxCellMemoryThresholdIndex = _MscAtmIfTxCellMemoryThresholdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 441, 1, 1),
    _MscAtmIfTxCellMemoryThresholdIndex_Type()
)
mscAtmIfTxCellMemoryThresholdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemoryThresholdIndex.setStatus("mandatory")


class _MscAtmIfTxCellMemoryThresholdValue_Type(Unsigned32):
    """Custom type mscAtmIfTxCellMemoryThresholdValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_MscAtmIfTxCellMemoryThresholdValue_Type.__name__ = "Unsigned32"
_MscAtmIfTxCellMemoryThresholdValue_Object = MibTableColumn
mscAtmIfTxCellMemoryThresholdValue = _MscAtmIfTxCellMemoryThresholdValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 441, 1, 2),
    _MscAtmIfTxCellMemoryThresholdValue_Type()
)
mscAtmIfTxCellMemoryThresholdValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfTxCellMemoryThresholdValue.setStatus("mandatory")
_MscAtmIfOpShapingRatesTable_Object = MibTable
mscAtmIfOpShapingRatesTable = _MscAtmIfOpShapingRatesTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 839)
)
if mibBuilder.loadTexts:
    mscAtmIfOpShapingRatesTable.setStatus("mandatory")
_MscAtmIfOpShapingRatesEntry_Object = MibTableRow
mscAtmIfOpShapingRatesEntry = _MscAtmIfOpShapingRatesEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 839, 1)
)
mscAtmIfOpShapingRatesEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfOpShapingRatesIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfOpShapingRatesEntry.setStatus("mandatory")


class _MscAtmIfOpShapingRatesIndex_Type(Integer32):
    """Custom type mscAtmIfOpShapingRatesIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_MscAtmIfOpShapingRatesIndex_Type.__name__ = "Integer32"
_MscAtmIfOpShapingRatesIndex_Object = MibTableColumn
mscAtmIfOpShapingRatesIndex = _MscAtmIfOpShapingRatesIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 839, 1, 1),
    _MscAtmIfOpShapingRatesIndex_Type()
)
mscAtmIfOpShapingRatesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfOpShapingRatesIndex.setStatus("mandatory")


class _MscAtmIfOpShapingRatesValue_Type(Unsigned32):
    """Custom type mscAtmIfOpShapingRatesValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_MscAtmIfOpShapingRatesValue_Type.__name__ = "Unsigned32"
_MscAtmIfOpShapingRatesValue_Object = MibTableColumn
mscAtmIfOpShapingRatesValue = _MscAtmIfOpShapingRatesValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 839, 1, 2),
    _MscAtmIfOpShapingRatesValue_Type()
)
mscAtmIfOpShapingRatesValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfOpShapingRatesValue.setStatus("mandatory")
_MscAtmIfShapeUsageTable_Object = MibTable
mscAtmIfShapeUsageTable = _MscAtmIfShapeUsageTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 840)
)
if mibBuilder.loadTexts:
    mscAtmIfShapeUsageTable.setStatus("mandatory")
_MscAtmIfShapeUsageEntry_Object = MibTableRow
mscAtmIfShapeUsageEntry = _MscAtmIfShapeUsageEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 840, 1)
)
mscAtmIfShapeUsageEntry.setIndexNames(
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"),
    (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfShapeUsageIndex"),
)
if mibBuilder.loadTexts:
    mscAtmIfShapeUsageEntry.setStatus("mandatory")


class _MscAtmIfShapeUsageIndex_Type(Integer32):
    """Custom type mscAtmIfShapeUsageIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_MscAtmIfShapeUsageIndex_Type.__name__ = "Integer32"
_MscAtmIfShapeUsageIndex_Object = MibTableColumn
mscAtmIfShapeUsageIndex = _MscAtmIfShapeUsageIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 840, 1, 1),
    _MscAtmIfShapeUsageIndex_Type()
)
mscAtmIfShapeUsageIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mscAtmIfShapeUsageIndex.setStatus("mandatory")


class _MscAtmIfShapeUsageValue_Type(Unsigned32):
    """Custom type mscAtmIfShapeUsageValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_MscAtmIfShapeUsageValue_Type.__name__ = "Unsigned32"
_MscAtmIfShapeUsageValue_Object = MibTableColumn
mscAtmIfShapeUsageValue = _MscAtmIfShapeUsageValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 840, 1, 2),
    _MscAtmIfShapeUsageValue_Type()
)
mscAtmIfShapeUsageValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mscAtmIfShapeUsageValue.setStatus("mandatory")
_AtmCoreMIB_ObjectIdentity = ObjectIdentity
atmCoreMIB = _AtmCoreMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123)
)
_AtmCoreGroup_ObjectIdentity = ObjectIdentity
atmCoreGroup = _AtmCoreGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 1)
)
_AtmCoreGroupCB_ObjectIdentity = ObjectIdentity
atmCoreGroupCB = _AtmCoreGroupCB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 1, 2)
)
_AtmCoreGroupCB02_ObjectIdentity = ObjectIdentity
atmCoreGroupCB02 = _AtmCoreGroupCB02_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 1, 2, 3)
)
_AtmCoreGroupCB02A_ObjectIdentity = ObjectIdentity
atmCoreGroupCB02A = _AtmCoreGroupCB02A_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 1, 2, 3, 2)
)
_AtmCoreCapabilities_ObjectIdentity = ObjectIdentity
atmCoreCapabilities = _AtmCoreCapabilities_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 3)
)
_AtmCoreCapabilitiesCB_ObjectIdentity = ObjectIdentity
atmCoreCapabilitiesCB = _AtmCoreCapabilitiesCB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 3, 2)
)
_AtmCoreCapabilitiesCB02_ObjectIdentity = ObjectIdentity
atmCoreCapabilitiesCB02 = _AtmCoreCapabilitiesCB02_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 3, 2, 3)
)
_AtmCoreCapabilitiesCB02A_ObjectIdentity = ObjectIdentity
atmCoreCapabilitiesCB02A = _AtmCoreCapabilitiesCB02A_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 123, 3, 2, 3, 2)
)

# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "Nortel-MsCarrier-MscPassport-AtmCoreMIB",
    **{"mscAtmIf": mscAtmIf,
       "mscAtmIfRowStatusTable": mscAtmIfRowStatusTable,
       "mscAtmIfRowStatusEntry": mscAtmIfRowStatusEntry,
       "mscAtmIfRowStatus": mscAtmIfRowStatus,
       "mscAtmIfComponentName": mscAtmIfComponentName,
       "mscAtmIfStorageType": mscAtmIfStorageType,
       "mscAtmIfIndex": mscAtmIfIndex,
       "mscAtmIfConnMap": mscAtmIfConnMap,
       "mscAtmIfConnMapRowStatusTable": mscAtmIfConnMapRowStatusTable,
       "mscAtmIfConnMapRowStatusEntry": mscAtmIfConnMapRowStatusEntry,
       "mscAtmIfConnMapRowStatus": mscAtmIfConnMapRowStatus,
       "mscAtmIfConnMapComponentName": mscAtmIfConnMapComponentName,
       "mscAtmIfConnMapStorageType": mscAtmIfConnMapStorageType,
       "mscAtmIfConnMapIndex": mscAtmIfConnMapIndex,
       "mscAtmIfConnMapVccProvTable": mscAtmIfConnMapVccProvTable,
       "mscAtmIfConnMapVccProvEntry": mscAtmIfConnMapVccProvEntry,
       "mscAtmIfConnMapNumVccsForVpiZero": mscAtmIfConnMapNumVccsForVpiZero,
       "mscAtmIfConnMapNumNonZeroVpisForVccs": mscAtmIfConnMapNumNonZeroVpisForVccs,
       "mscAtmIfConnMapFirstNonZeroVpiForVccs": mscAtmIfConnMapFirstNonZeroVpiForVccs,
       "mscAtmIfConnMapNumVccsPerNonZeroVpi": mscAtmIfConnMapNumVccsPerNonZeroVpi,
       "mscAtmIfConnMapOperTable": mscAtmIfConnMapOperTable,
       "mscAtmIfConnMapOperEntry": mscAtmIfConnMapOperEntry,
       "mscAtmIfConnMapNumVccsForVpiZeroOper": mscAtmIfConnMapNumVccsForVpiZeroOper,
       "mscAtmIfConnMapNumNonZeroVpisForVccsOper": mscAtmIfConnMapNumNonZeroVpisForVccsOper,
       "mscAtmIfConnMapFirstNonZeroVpiForVccsOper": mscAtmIfConnMapFirstNonZeroVpiForVccsOper,
       "mscAtmIfConnMapNumVccsPerNonZeroVpiOper": mscAtmIfConnMapNumVccsPerNonZeroVpiOper,
       "mscAtmIfConnMapOv": mscAtmIfConnMapOv,
       "mscAtmIfConnMapOvRowStatusTable": mscAtmIfConnMapOvRowStatusTable,
       "mscAtmIfConnMapOvRowStatusEntry": mscAtmIfConnMapOvRowStatusEntry,
       "mscAtmIfConnMapOvRowStatus": mscAtmIfConnMapOvRowStatus,
       "mscAtmIfConnMapOvComponentName": mscAtmIfConnMapOvComponentName,
       "mscAtmIfConnMapOvStorageType": mscAtmIfConnMapOvStorageType,
       "mscAtmIfConnMapOvIndex": mscAtmIfConnMapOvIndex,
       "mscAtmIfConnMapOvProvTable": mscAtmIfConnMapOvProvTable,
       "mscAtmIfConnMapOvProvEntry": mscAtmIfConnMapOvProvEntry,
       "mscAtmIfConnMapOvNumVccsForVpiZero": mscAtmIfConnMapOvNumVccsForVpiZero,
       "mscAtmIfConnMapOvNumNonZeroVpisForVccs": mscAtmIfConnMapOvNumNonZeroVpisForVccs,
       "mscAtmIfConnMapOvFirstNonZeroVpiForVccs": mscAtmIfConnMapOvFirstNonZeroVpiForVccs,
       "mscAtmIfConnMapOvNumVccsPerNonZeroVpi": mscAtmIfConnMapOvNumVccsPerNonZeroVpi,
       "mscAtmIfCA": mscAtmIfCA,
       "mscAtmIfCARowStatusTable": mscAtmIfCARowStatusTable,
       "mscAtmIfCARowStatusEntry": mscAtmIfCARowStatusEntry,
       "mscAtmIfCARowStatus": mscAtmIfCARowStatus,
       "mscAtmIfCAComponentName": mscAtmIfCAComponentName,
       "mscAtmIfCAStorageType": mscAtmIfCAStorageType,
       "mscAtmIfCAIndex": mscAtmIfCAIndex,
       "mscAtmIfCACbr": mscAtmIfCACbr,
       "mscAtmIfCACbrRowStatusTable": mscAtmIfCACbrRowStatusTable,
       "mscAtmIfCACbrRowStatusEntry": mscAtmIfCACbrRowStatusEntry,
       "mscAtmIfCACbrRowStatus": mscAtmIfCACbrRowStatus,
       "mscAtmIfCACbrComponentName": mscAtmIfCACbrComponentName,
       "mscAtmIfCACbrStorageType": mscAtmIfCACbrStorageType,
       "mscAtmIfCACbrIndex": mscAtmIfCACbrIndex,
       "mscAtmIfCACbrProvTable": mscAtmIfCACbrProvTable,
       "mscAtmIfCACbrProvEntry": mscAtmIfCACbrProvEntry,
       "mscAtmIfCACbrProvPool": mscAtmIfCACbrProvPool,
       "mscAtmIfCACbrProvCdvt": mscAtmIfCACbrProvCdvt,
       "mscAtmIfCACbrCdv": mscAtmIfCACbrCdv,
       "mscAtmIfCACbrMaxCtd": mscAtmIfCACbrMaxCtd,
       "mscAtmIfCACbrProvClr": mscAtmIfCACbrProvClr,
       "mscAtmIfCACbrTxQueueLimit": mscAtmIfCACbrTxQueueLimit,
       "mscAtmIfCACbrHoldingPriority": mscAtmIfCACbrHoldingPriority,
       "mscAtmIfCACbrSvcHoldingPriority": mscAtmIfCACbrSvcHoldingPriority,
       "mscAtmIfCACbrSvcMpHoldingPriority": mscAtmIfCACbrSvcMpHoldingPriority,
       "mscAtmIfCACbrMinPerVcQueueLimit": mscAtmIfCACbrMinPerVcQueueLimit,
       "mscAtmIfCACbrPerVcQueueLimitReferenceRate": mscAtmIfCACbrPerVcQueueLimitReferenceRate,
       "mscAtmIfCACbrEmissionPriority": mscAtmIfCACbrEmissionPriority,
       "mscAtmIfCACbrTrafficShaping": mscAtmIfCACbrTrafficShaping,
       "mscAtmIfCACbrShapeRecoupPolicy": mscAtmIfCACbrShapeRecoupPolicy,
       "mscAtmIfCACbrUnshapedTransmitQueueing": mscAtmIfCACbrUnshapedTransmitQueueing,
       "mscAtmIfCACbrWeightPolicy": mscAtmIfCACbrWeightPolicy,
       "mscAtmIfCACbrForceTagging": mscAtmIfCACbrForceTagging,
       "mscAtmIfCACbrUsageParameterControl": mscAtmIfCACbrUsageParameterControl,
       "mscAtmIfCACbrOperTable": mscAtmIfCACbrOperTable,
       "mscAtmIfCACbrOperEntry": mscAtmIfCACbrOperEntry,
       "mscAtmIfCACbrEpdOffset": mscAtmIfCACbrEpdOffset,
       "mscAtmIfCARtVbr": mscAtmIfCARtVbr,
       "mscAtmIfCARtVbrRowStatusTable": mscAtmIfCARtVbrRowStatusTable,
       "mscAtmIfCARtVbrRowStatusEntry": mscAtmIfCARtVbrRowStatusEntry,
       "mscAtmIfCARtVbrRowStatus": mscAtmIfCARtVbrRowStatus,
       "mscAtmIfCARtVbrComponentName": mscAtmIfCARtVbrComponentName,
       "mscAtmIfCARtVbrStorageType": mscAtmIfCARtVbrStorageType,
       "mscAtmIfCARtVbrIndex": mscAtmIfCARtVbrIndex,
       "mscAtmIfCARtVbrProvTable": mscAtmIfCARtVbrProvTable,
       "mscAtmIfCARtVbrProvEntry": mscAtmIfCARtVbrProvEntry,
       "mscAtmIfCARtVbrPool": mscAtmIfCARtVbrPool,
       "mscAtmIfCARtVbrCdvt": mscAtmIfCARtVbrCdvt,
       "mscAtmIfCARtVbrCdv": mscAtmIfCARtVbrCdv,
       "mscAtmIfCARtVbrMaxCtd": mscAtmIfCARtVbrMaxCtd,
       "mscAtmIfCARtVbrCellLossRatio": mscAtmIfCARtVbrCellLossRatio,
       "mscAtmIfCARtVbrTxQueueLimit": mscAtmIfCARtVbrTxQueueLimit,
       "mscAtmIfCARtVbrMinPerVcQueueLimit": mscAtmIfCARtVbrMinPerVcQueueLimit,
       "mscAtmIfCARtVbrPerVcQueueLimitReferenceRate": mscAtmIfCARtVbrPerVcQueueLimitReferenceRate,
       "mscAtmIfCARtVbrHoldingPriority": mscAtmIfCARtVbrHoldingPriority,
       "mscAtmIfCARtVbrSvcHoldingPriority": mscAtmIfCARtVbrSvcHoldingPriority,
       "mscAtmIfCARtVbrSvcMpHoldingPriority": mscAtmIfCARtVbrSvcMpHoldingPriority,
       "mscAtmIfCARtVbrEmissionPriority": mscAtmIfCARtVbrEmissionPriority,
       "mscAtmIfCARtVbrTrafficShaping": mscAtmIfCARtVbrTrafficShaping,
       "mscAtmIfCARtVbrShapeRecoupPolicy": mscAtmIfCARtVbrShapeRecoupPolicy,
       "mscAtmIfCARtVbrUnshapedTransmitQueueing": mscAtmIfCARtVbrUnshapedTransmitQueueing,
       "mscAtmIfCARtVbrUsageParameterControl": mscAtmIfCARtVbrUsageParameterControl,
       "mscAtmIfCARtVbrWeightPolicy": mscAtmIfCARtVbrWeightPolicy,
       "mscAtmIfCARtVbrForceTagging": mscAtmIfCARtVbrForceTagging,
       "mscAtmIfCARtVbrOperTable": mscAtmIfCARtVbrOperTable,
       "mscAtmIfCARtVbrOperEntry": mscAtmIfCARtVbrOperEntry,
       "mscAtmIfCARtVbrOpUnshapedTransmitQueueing": mscAtmIfCARtVbrOpUnshapedTransmitQueueing,
       "mscAtmIfCARtVbrEpdOffset": mscAtmIfCARtVbrEpdOffset,
       "mscAtmIfCANrtVbr": mscAtmIfCANrtVbr,
       "mscAtmIfCANrtVbrRowStatusTable": mscAtmIfCANrtVbrRowStatusTable,
       "mscAtmIfCANrtVbrRowStatusEntry": mscAtmIfCANrtVbrRowStatusEntry,
       "mscAtmIfCANrtVbrRowStatus": mscAtmIfCANrtVbrRowStatus,
       "mscAtmIfCANrtVbrComponentName": mscAtmIfCANrtVbrComponentName,
       "mscAtmIfCANrtVbrStorageType": mscAtmIfCANrtVbrStorageType,
       "mscAtmIfCANrtVbrIndex": mscAtmIfCANrtVbrIndex,
       "mscAtmIfCANrtVbrProvTable": mscAtmIfCANrtVbrProvTable,
       "mscAtmIfCANrtVbrProvEntry": mscAtmIfCANrtVbrProvEntry,
       "mscAtmIfCANrtVbrPool": mscAtmIfCANrtVbrPool,
       "mscAtmIfCANrtVbrCdvt": mscAtmIfCANrtVbrCdvt,
       "mscAtmIfCANrtVbrCellLossRatio": mscAtmIfCANrtVbrCellLossRatio,
       "mscAtmIfCANrtVbrTxQueueLimit": mscAtmIfCANrtVbrTxQueueLimit,
       "mscAtmIfCANrtVbrSvcHoldingPriority": mscAtmIfCANrtVbrSvcHoldingPriority,
       "mscAtmIfCANrtVbrMinPerVcQueueLimit": mscAtmIfCANrtVbrMinPerVcQueueLimit,
       "mscAtmIfCANrtVbrPerVcQueueLimitReferenceRate": mscAtmIfCANrtVbrPerVcQueueLimitReferenceRate,
       "mscAtmIfCANrtVbrSvcMpHoldingPriority": mscAtmIfCANrtVbrSvcMpHoldingPriority,
       "mscAtmIfCANrtVbrHoldingPriority": mscAtmIfCANrtVbrHoldingPriority,
       "mscAtmIfCANrtVbrEmissionPriority": mscAtmIfCANrtVbrEmissionPriority,
       "mscAtmIfCANrtVbrTrafficShaping": mscAtmIfCANrtVbrTrafficShaping,
       "mscAtmIfCANrtVbrShapeRecoupPolicy": mscAtmIfCANrtVbrShapeRecoupPolicy,
       "mscAtmIfCANrtVbrUnshapedTransmitQueueing": mscAtmIfCANrtVbrUnshapedTransmitQueueing,
       "mscAtmIfCANrtVbrUsageParameterControl": mscAtmIfCANrtVbrUsageParameterControl,
       "mscAtmIfCANrtVbrWeightPolicy": mscAtmIfCANrtVbrWeightPolicy,
       "mscAtmIfCANrtVbrForceTagging": mscAtmIfCANrtVbrForceTagging,
       "mscAtmIfCANrtVbrOperTable": mscAtmIfCANrtVbrOperTable,
       "mscAtmIfCANrtVbrOperEntry": mscAtmIfCANrtVbrOperEntry,
       "mscAtmIfCANrtVbrOpUnshapedTransmitQueueing": mscAtmIfCANrtVbrOpUnshapedTransmitQueueing,
       "mscAtmIfCANrtVbrEpdOffset": mscAtmIfCANrtVbrEpdOffset,
       "mscAtmIfCAAbr": mscAtmIfCAAbr,
       "mscAtmIfCAAbrRowStatusTable": mscAtmIfCAAbrRowStatusTable,
       "mscAtmIfCAAbrRowStatusEntry": mscAtmIfCAAbrRowStatusEntry,
       "mscAtmIfCAAbrRowStatus": mscAtmIfCAAbrRowStatus,
       "mscAtmIfCAAbrComponentName": mscAtmIfCAAbrComponentName,
       "mscAtmIfCAAbrStorageType": mscAtmIfCAAbrStorageType,
       "mscAtmIfCAAbrIndex": mscAtmIfCAAbrIndex,
       "mscAtmIfCAAbrProvTable": mscAtmIfCAAbrProvTable,
       "mscAtmIfCAAbrProvEntry": mscAtmIfCAAbrProvEntry,
       "mscAtmIfCAAbrPool": mscAtmIfCAAbrPool,
       "mscAtmIfCAAbrCdvt": mscAtmIfCAAbrCdvt,
       "mscAtmIfCAAbrTxQueueLimit": mscAtmIfCAAbrTxQueueLimit,
       "mscAtmIfCAAbrMinPerVcQueueLimit": mscAtmIfCAAbrMinPerVcQueueLimit,
       "mscAtmIfCAAbrPerVcQueueLimitReferenceRate": mscAtmIfCAAbrPerVcQueueLimitReferenceRate,
       "mscAtmIfCAAbrEmissionPriority": mscAtmIfCAAbrEmissionPriority,
       "mscAtmIfCAAbrFairnessPolicy": mscAtmIfCAAbrFairnessPolicy,
       "mscAtmIfCAAbrFrttPortion": mscAtmIfCAAbrFrttPortion,
       "mscAtmIfCAAbrAbrConnectionType": mscAtmIfCAAbrAbrConnectionType,
       "mscAtmIfCAAbrUsageParameterControl": mscAtmIfCAAbrUsageParameterControl,
       "mscAtmIfCAAbrInitialCellRate": mscAtmIfCAAbrInitialCellRate,
       "mscAtmIfCAAbrRateDecreaseFactor": mscAtmIfCAAbrRateDecreaseFactor,
       "mscAtmIfCAAbrRateIncreaseFactor": mscAtmIfCAAbrRateIncreaseFactor,
       "mscAtmIfCAAbrMaxCellPerRmCell": mscAtmIfCAAbrMaxCellPerRmCell,
       "mscAtmIfCAAbrMaxTimeBetweenRmCell": mscAtmIfCAAbrMaxTimeBetweenRmCell,
       "mscAtmIfCAAbrCutoffDecreaseFactor": mscAtmIfCAAbrCutoffDecreaseFactor,
       "mscAtmIfCAAbrAcrDecreaseTimeFactor": mscAtmIfCAAbrAcrDecreaseTimeFactor,
       "mscAtmIfCAAbrDgcraMaximumDelay": mscAtmIfCAAbrDgcraMaximumDelay,
       "mscAtmIfCAAbrDgcraMinimumDelay": mscAtmIfCAAbrDgcraMinimumDelay,
       "mscAtmIfCAAbrHoldingPriority": mscAtmIfCAAbrHoldingPriority,
       "mscAtmIfCAAbrOperTable": mscAtmIfCAAbrOperTable,
       "mscAtmIfCAAbrOperEntry": mscAtmIfCAAbrOperEntry,
       "mscAtmIfCAAbrEpdOffset": mscAtmIfCAAbrEpdOffset,
       "mscAtmIfCAUbr": mscAtmIfCAUbr,
       "mscAtmIfCAUbrRowStatusTable": mscAtmIfCAUbrRowStatusTable,
       "mscAtmIfCAUbrRowStatusEntry": mscAtmIfCAUbrRowStatusEntry,
       "mscAtmIfCAUbrRowStatus": mscAtmIfCAUbrRowStatus,
       "mscAtmIfCAUbrComponentName": mscAtmIfCAUbrComponentName,
       "mscAtmIfCAUbrStorageType": mscAtmIfCAUbrStorageType,
       "mscAtmIfCAUbrIndex": mscAtmIfCAUbrIndex,
       "mscAtmIfCAUbrProvTable": mscAtmIfCAUbrProvTable,
       "mscAtmIfCAUbrProvEntry": mscAtmIfCAUbrProvEntry,
       "mscAtmIfCAUbrMaxVpcs": mscAtmIfCAUbrMaxVpcs,
       "mscAtmIfCAUbrMaxVccs": mscAtmIfCAUbrMaxVccs,
       "mscAtmIfCAUbrMaxVpts": mscAtmIfCAUbrMaxVpts,
       "mscAtmIfCAUbrPool": mscAtmIfCAUbrPool,
       "mscAtmIfCAUbrMinimumCellRate": mscAtmIfCAUbrMinimumCellRate,
       "mscAtmIfCAUbrTxQueueLimit": mscAtmIfCAUbrTxQueueLimit,
       "mscAtmIfCAUbrMinPerVcQueueLimit": mscAtmIfCAUbrMinPerVcQueueLimit,
       "mscAtmIfCAUbrPerVcQueueLimitReferenceRate": mscAtmIfCAUbrPerVcQueueLimitReferenceRate,
       "mscAtmIfCAUbrEmissionPriority": mscAtmIfCAUbrEmissionPriority,
       "mscAtmIfCAUbrTrafficShaping": mscAtmIfCAUbrTrafficShaping,
       "mscAtmIfCAUbrShapeRecoupPolicy": mscAtmIfCAUbrShapeRecoupPolicy,
       "mscAtmIfCAUbrUnshapedTransmitQueueing": mscAtmIfCAUbrUnshapedTransmitQueueing,
       "mscAtmIfCAUbrUsageParameterControl": mscAtmIfCAUbrUsageParameterControl,
       "mscAtmIfCAUbrWeightPolicy": mscAtmIfCAUbrWeightPolicy,
       "mscAtmIfCAUbrForceTagging": mscAtmIfCAUbrForceTagging,
       "mscAtmIfCAUbrCdvt": mscAtmIfCAUbrCdvt,
       "mscAtmIfCAUbrHoldingPriority": mscAtmIfCAUbrHoldingPriority,
       "mscAtmIfCAUbrSvcMpHoldingPriority": mscAtmIfCAUbrSvcMpHoldingPriority,
       "mscAtmIfCAUbrOperTable": mscAtmIfCAUbrOperTable,
       "mscAtmIfCAUbrOperEntry": mscAtmIfCAUbrOperEntry,
       "mscAtmIfCAUbrOpUnshapedTransmitQueueing": mscAtmIfCAUbrOpUnshapedTransmitQueueing,
       "mscAtmIfCAUbrVpcUsage": mscAtmIfCAUbrVpcUsage,
       "mscAtmIfCAUbrVccUsage": mscAtmIfCAUbrVccUsage,
       "mscAtmIfCAUbrVptUsage": mscAtmIfCAUbrVptUsage,
       "mscAtmIfCAUbrEpdOffset": mscAtmIfCAUbrEpdOffset,
       "mscAtmIfCAProvTable": mscAtmIfCAProvTable,
       "mscAtmIfCAProvEntry": mscAtmIfCAProvEntry,
       "mscAtmIfCAMaxVpcs": mscAtmIfCAMaxVpcs,
       "mscAtmIfCAMaxVccs": mscAtmIfCAMaxVccs,
       "mscAtmIfCAMinMulticastBranches": mscAtmIfCAMinMulticastBranches,
       "mscAtmIfCAMaxMulticastBranches": mscAtmIfCAMaxMulticastBranches,
       "mscAtmIfCAMaxVpts": mscAtmIfCAMaxVpts,
       "mscAtmIfCAMinAutoSelectedVci": mscAtmIfCAMinAutoSelectedVci,
       "mscAtmIfCAMinAutoSelectedVciForVpiZero": mscAtmIfCAMinAutoSelectedVciForVpiZero,
       "mscAtmIfCAMinAutoSelectedVciForNonZeroVpi": mscAtmIfCAMinAutoSelectedVciForNonZeroVpi,
       "mscAtmIfCAPermittedSvcAtmServiceCategories": mscAtmIfCAPermittedSvcAtmServiceCategories,
       "mscAtmIfCACbrPool": mscAtmIfCACbrPool,
       "mscAtmIfCACbrCdvt": mscAtmIfCACbrCdvt,
       "mscAtmIfCACbrCellLossRatio": mscAtmIfCACbrCellLossRatio,
       "mscAtmIfCASvcCbrHoldingPriority": mscAtmIfCASvcCbrHoldingPriority,
       "mscAtmIfCASvcVbrRtHoldingPriority": mscAtmIfCASvcVbrRtHoldingPriority,
       "mscAtmIfCASvcVbrNrtHoldingPriority": mscAtmIfCASvcVbrNrtHoldingPriority,
       "mscAtmIfCAVbrRtPool": mscAtmIfCAVbrRtPool,
       "mscAtmIfCAVbrRtCdvt": mscAtmIfCAVbrRtCdvt,
       "mscAtmIfCAVbrRtCellLossRatio": mscAtmIfCAVbrRtCellLossRatio,
       "mscAtmIfCAVbrNrtPool": mscAtmIfCAVbrNrtPool,
       "mscAtmIfCAVbrNrtCdvt": mscAtmIfCAVbrNrtCdvt,
       "mscAtmIfCAMaxCaVpcs": mscAtmIfCAMaxCaVpcs,
       "mscAtmIfCAMaxCaVpts": mscAtmIfCAMaxCaVpts,
       "mscAtmIfCAVbrNrtCellLossRatio": mscAtmIfCAVbrNrtCellLossRatio,
       "mscAtmIfCAUbrMaxConnections": mscAtmIfCAUbrMaxConnections,
       "mscAtmIfCAMinAutoSelectedVpi": mscAtmIfCAMinAutoSelectedVpi,
       "mscAtmIfCAPermittedAtmServiceCategories": mscAtmIfCAPermittedAtmServiceCategories,
       "mscAtmIfCAMaxAutoSelectedVpi": mscAtmIfCAMaxAutoSelectedVpi,
       "mscAtmIfCAMaxAutoSelectedVciForVpiZero": mscAtmIfCAMaxAutoSelectedVciForVpiZero,
       "mscAtmIfCAMaxAutoSelectedVciForNonZeroVpi": mscAtmIfCAMaxAutoSelectedVciForNonZeroVpi,
       "mscAtmIfCAOperTable": mscAtmIfCAOperTable,
       "mscAtmIfCAOperEntry": mscAtmIfCAOperEntry,
       "mscAtmIfCAActualMaxVccs": mscAtmIfCAActualMaxVccs,
       "mscAtmIfCAPermanentVpcs": mscAtmIfCAPermanentVpcs,
       "mscAtmIfCAPermanentVpts": mscAtmIfCAPermanentVpts,
       "mscAtmIfCAPermanentVccs": mscAtmIfCAPermanentVccs,
       "mscAtmIfCASwitchedVccs": mscAtmIfCASwitchedVccs,
       "mscAtmIfCASwitchedMulticastBranches": mscAtmIfCASwitchedMulticastBranches,
       "mscAtmIfCAPermanentMulticastBranches": mscAtmIfCAPermanentMulticastBranches,
       "mscAtmIfCATroubledVpcs": mscAtmIfCATroubledVpcs,
       "mscAtmIfCATroubledVpts": mscAtmIfCATroubledVpts,
       "mscAtmIfCATroubledVccs": mscAtmIfCATroubledVccs,
       "mscAtmIfCAUbrAvailableConnections": mscAtmIfCAUbrAvailableConnections,
       "mscAtmIfCAConnectionPoolUsage": mscAtmIfCAConnectionPoolUsage,
       "mscAtmIfCASwitchedVpcs": mscAtmIfCASwitchedVpcs,
       "mscAtmIfCAActualMaxVpcs": mscAtmIfCAActualMaxVpcs,
       "mscAtmIfCAActualMaxVpts": mscAtmIfCAActualMaxVpts,
       "mscAtmIfCAPmTable": mscAtmIfCAPmTable,
       "mscAtmIfCAPmEntry": mscAtmIfCAPmEntry,
       "mscAtmIfCAOamFPmConnections": mscAtmIfCAOamFPmConnections,
       "mscAtmIfCAOamBrPmConnections": mscAtmIfCAOamBrPmConnections,
       "mscAtmIfCAOamCcConnections": mscAtmIfCAOamCcConnections,
       "mscAtmIfCABwPoolTable": mscAtmIfCABwPoolTable,
       "mscAtmIfCABwPoolEntry": mscAtmIfCABwPoolEntry,
       "mscAtmIfCABwPoolIndex": mscAtmIfCABwPoolIndex,
       "mscAtmIfCABwPoolValue": mscAtmIfCABwPoolValue,
       "mscAtmIfCAPoolRequBwTable": mscAtmIfCAPoolRequBwTable,
       "mscAtmIfCAPoolRequBwEntry": mscAtmIfCAPoolRequBwEntry,
       "mscAtmIfCAPoolRequBwIndex": mscAtmIfCAPoolRequBwIndex,
       "mscAtmIfCAPoolRequBwValue": mscAtmIfCAPoolRequBwValue,
       "mscAtmIfCAPoolAdmitBwTable": mscAtmIfCAPoolAdmitBwTable,
       "mscAtmIfCAPoolAdmitBwEntry": mscAtmIfCAPoolAdmitBwEntry,
       "mscAtmIfCAPoolAdmitBwIndex": mscAtmIfCAPoolAdmitBwIndex,
       "mscAtmIfCAPoolAdmitBwValue": mscAtmIfCAPoolAdmitBwValue,
       "mscAtmIfCAPoolAvailBwTable": mscAtmIfCAPoolAvailBwTable,
       "mscAtmIfCAPoolAvailBwEntry": mscAtmIfCAPoolAvailBwEntry,
       "mscAtmIfCAPoolAvailBwIndex": mscAtmIfCAPoolAvailBwIndex,
       "mscAtmIfCAPoolAvailBwValue": mscAtmIfCAPoolAvailBwValue,
       "mscAtmIfCAPoolProvBwTable": mscAtmIfCAPoolProvBwTable,
       "mscAtmIfCAPoolProvBwEntry": mscAtmIfCAPoolProvBwEntry,
       "mscAtmIfCAPoolProvBwIndex": mscAtmIfCAPoolProvBwIndex,
       "mscAtmIfCAPoolProvBwValue": mscAtmIfCAPoolProvBwValue,
       "mscAtmIfCAPoolWaitAdmConnsTable": mscAtmIfCAPoolWaitAdmConnsTable,
       "mscAtmIfCAPoolWaitAdmConnsEntry": mscAtmIfCAPoolWaitAdmConnsEntry,
       "mscAtmIfCAPoolWaitAdmConnsIndex": mscAtmIfCAPoolWaitAdmConnsIndex,
       "mscAtmIfCAPoolWaitAdmConnsValue": mscAtmIfCAPoolWaitAdmConnsValue,
       "mscAtmIfCAPoolAdmConnsTable": mscAtmIfCAPoolAdmConnsTable,
       "mscAtmIfCAPoolAdmConnsEntry": mscAtmIfCAPoolAdmConnsEntry,
       "mscAtmIfCAPoolAdmConnsIndex": mscAtmIfCAPoolAdmConnsIndex,
       "mscAtmIfCAPoolAdmConnsValue": mscAtmIfCAPoolAdmConnsValue,
       "mscAtmIfCAPoolAvailableBwTable": mscAtmIfCAPoolAvailableBwTable,
       "mscAtmIfCAPoolAvailableBwEntry": mscAtmIfCAPoolAvailableBwEntry,
       "mscAtmIfCAPoolAvailableBwIndex": mscAtmIfCAPoolAvailableBwIndex,
       "mscAtmIfCAPoolAvailableBwValue": mscAtmIfCAPoolAvailableBwValue,
       "mscAtmIfVpc": mscAtmIfVpc,
       "mscAtmIfVpcRowStatusTable": mscAtmIfVpcRowStatusTable,
       "mscAtmIfVpcRowStatusEntry": mscAtmIfVpcRowStatusEntry,
       "mscAtmIfVpcRowStatus": mscAtmIfVpcRowStatus,
       "mscAtmIfVpcComponentName": mscAtmIfVpcComponentName,
       "mscAtmIfVpcStorageType": mscAtmIfVpcStorageType,
       "mscAtmIfVpcIndex": mscAtmIfVpcIndex,
       "mscAtmIfVpcVpd": mscAtmIfVpcVpd,
       "mscAtmIfVpcVpdRowStatusTable": mscAtmIfVpcVpdRowStatusTable,
       "mscAtmIfVpcVpdRowStatusEntry": mscAtmIfVpcVpdRowStatusEntry,
       "mscAtmIfVpcVpdRowStatus": mscAtmIfVpcVpdRowStatus,
       "mscAtmIfVpcVpdComponentName": mscAtmIfVpcVpdComponentName,
       "mscAtmIfVpcVpdStorageType": mscAtmIfVpcVpdStorageType,
       "mscAtmIfVpcVpdIndex": mscAtmIfVpcVpdIndex,
       "mscAtmIfVpcVpdTm": mscAtmIfVpcVpdTm,
       "mscAtmIfVpcVpdTmRowStatusTable": mscAtmIfVpcVpdTmRowStatusTable,
       "mscAtmIfVpcVpdTmRowStatusEntry": mscAtmIfVpcVpdTmRowStatusEntry,
       "mscAtmIfVpcVpdTmRowStatus": mscAtmIfVpcVpdTmRowStatus,
       "mscAtmIfVpcVpdTmComponentName": mscAtmIfVpcVpdTmComponentName,
       "mscAtmIfVpcVpdTmStorageType": mscAtmIfVpcVpdTmStorageType,
       "mscAtmIfVpcVpdTmIndex": mscAtmIfVpcVpdTmIndex,
       "mscAtmIfVpcVpdTmAbr": mscAtmIfVpcVpdTmAbr,
       "mscAtmIfVpcVpdTmAbrRowStatusTable": mscAtmIfVpcVpdTmAbrRowStatusTable,
       "mscAtmIfVpcVpdTmAbrRowStatusEntry": mscAtmIfVpcVpdTmAbrRowStatusEntry,
       "mscAtmIfVpcVpdTmAbrRowStatus": mscAtmIfVpcVpdTmAbrRowStatus,
       "mscAtmIfVpcVpdTmAbrComponentName": mscAtmIfVpcVpdTmAbrComponentName,
       "mscAtmIfVpcVpdTmAbrStorageType": mscAtmIfVpcVpdTmAbrStorageType,
       "mscAtmIfVpcVpdTmAbrIndex": mscAtmIfVpcVpdTmAbrIndex,
       "mscAtmIfVpcVpdTmAbrProvTable": mscAtmIfVpcVpdTmAbrProvTable,
       "mscAtmIfVpcVpdTmAbrProvEntry": mscAtmIfVpcVpdTmAbrProvEntry,
       "mscAtmIfVpcVpdTmAbrInitialCellRate": mscAtmIfVpcVpdTmAbrInitialCellRate,
       "mscAtmIfVpcVpdTmAbrTransientBufferExposure": mscAtmIfVpcVpdTmAbrTransientBufferExposure,
       "mscAtmIfVpcVpdTmAbrFixedRoundTripTime": mscAtmIfVpcVpdTmAbrFixedRoundTripTime,
       "mscAtmIfVpcVpdTmAbrRateDecreaseFactor": mscAtmIfVpcVpdTmAbrRateDecreaseFactor,
       "mscAtmIfVpcVpdTmAbrRateIncreaseFactor": mscAtmIfVpcVpdTmAbrRateIncreaseFactor,
       "mscAtmIfVpcVpdTmAbrMaxCellPerRmCell": mscAtmIfVpcVpdTmAbrMaxCellPerRmCell,
       "mscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells": mscAtmIfVpcVpdTmAbrMaxTimeBetweenRmCells,
       "mscAtmIfVpcVpdTmAbrCutoffDecreaseFactor": mscAtmIfVpcVpdTmAbrCutoffDecreaseFactor,
       "mscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor": mscAtmIfVpcVpdTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVpcVpdTmAbrDgcraMaximumDelay": mscAtmIfVpcVpdTmAbrDgcraMaximumDelay,
       "mscAtmIfVpcVpdTmAbrDgcraMinimumDelay": mscAtmIfVpcVpdTmAbrDgcraMinimumDelay,
       "mscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor": mscAtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor,
       "mscAtmIfVpcVpdTmAbrFarEndInitialCellRate": mscAtmIfVpcVpdTmAbrFarEndInitialCellRate,
       "mscAtmIfVpcVpdTmProvTable": mscAtmIfVpcVpdTmProvTable,
       "mscAtmIfVpcVpdTmProvEntry": mscAtmIfVpcVpdTmProvEntry,
       "mscAtmIfVpcVpdTmTxTrafficDescType": mscAtmIfVpcVpdTmTxTrafficDescType,
       "mscAtmIfVpcVpdTmFwdQosClass": mscAtmIfVpcVpdTmFwdQosClass,
       "mscAtmIfVpcVpdTmTxQueueLimit": mscAtmIfVpcVpdTmTxQueueLimit,
       "mscAtmIfVpcVpdTmHoldingPriority": mscAtmIfVpcVpdTmHoldingPriority,
       "mscAtmIfVpcVpdTmRxTrafficDescType": mscAtmIfVpcVpdTmRxTrafficDescType,
       "mscAtmIfVpcVpdTmBwdQosClass": mscAtmIfVpcVpdTmBwdQosClass,
       "mscAtmIfVpcVpdTmAtmServiceCategory": mscAtmIfVpcVpdTmAtmServiceCategory,
       "mscAtmIfVpcVpdTmTrafficShaping": mscAtmIfVpcVpdTmTrafficShaping,
       "mscAtmIfVpcVpdTmUnshapedTransmitQueueing": mscAtmIfVpcVpdTmUnshapedTransmitQueueing,
       "mscAtmIfVpcVpdTmWeight": mscAtmIfVpcVpdTmWeight,
       "mscAtmIfVpcVpdTmForceTagging": mscAtmIfVpcVpdTmForceTagging,
       "mscAtmIfVpcVpdTmUsageParameterControl": mscAtmIfVpcVpdTmUsageParameterControl,
       "mscAtmIfVpcVpdTmBearerClassBbc": mscAtmIfVpcVpdTmBearerClassBbc,
       "mscAtmIfVpcVpdTmTransferCapabilityBbc": mscAtmIfVpcVpdTmTransferCapabilityBbc,
       "mscAtmIfVpcVpdTmClippingBbc": mscAtmIfVpcVpdTmClippingBbc,
       "mscAtmIfVpcVpdTmBestEffort": mscAtmIfVpcVpdTmBestEffort,
       "mscAtmIfVpcVpdTmTxPacketWiseDiscard": mscAtmIfVpcVpdTmTxPacketWiseDiscard,
       "mscAtmIfVpcVpdTmRxPacketWiseDiscard": mscAtmIfVpcVpdTmRxPacketWiseDiscard,
       "mscAtmIfVpcVpdTmAbrConnectionType": mscAtmIfVpcVpdTmAbrConnectionType,
       "mscAtmIfVpcVpdTmTxTdpTable": mscAtmIfVpcVpdTmTxTdpTable,
       "mscAtmIfVpcVpdTmTxTdpEntry": mscAtmIfVpcVpdTmTxTdpEntry,
       "mscAtmIfVpcVpdTmTxTdpIndex": mscAtmIfVpcVpdTmTxTdpIndex,
       "mscAtmIfVpcVpdTmTxTdpValue": mscAtmIfVpcVpdTmTxTdpValue,
       "mscAtmIfVpcVpdTmRxTdpTable": mscAtmIfVpcVpdTmRxTdpTable,
       "mscAtmIfVpcVpdTmRxTdpEntry": mscAtmIfVpcVpdTmRxTdpEntry,
       "mscAtmIfVpcVpdTmRxTdpIndex": mscAtmIfVpcVpdTmRxTdpIndex,
       "mscAtmIfVpcVpdTmRxTdpValue": mscAtmIfVpcVpdTmRxTdpValue,
       "mscAtmIfVpcVpdTmFqpTable": mscAtmIfVpcVpdTmFqpTable,
       "mscAtmIfVpcVpdTmFqpEntry": mscAtmIfVpcVpdTmFqpEntry,
       "mscAtmIfVpcVpdTmFqpIndex": mscAtmIfVpcVpdTmFqpIndex,
       "mscAtmIfVpcVpdTmFqpValue": mscAtmIfVpcVpdTmFqpValue,
       "mscAtmIfVpcVpdTmBqpTable": mscAtmIfVpcVpdTmBqpTable,
       "mscAtmIfVpcVpdTmBqpEntry": mscAtmIfVpcVpdTmBqpEntry,
       "mscAtmIfVpcVpdTmBqpIndex": mscAtmIfVpcVpdTmBqpIndex,
       "mscAtmIfVpcVpdTmBqpValue": mscAtmIfVpcVpdTmBqpValue,
       "mscAtmIfVpcVpdPm": mscAtmIfVpcVpdPm,
       "mscAtmIfVpcVpdPmRowStatusTable": mscAtmIfVpcVpdPmRowStatusTable,
       "mscAtmIfVpcVpdPmRowStatusEntry": mscAtmIfVpcVpdPmRowStatusEntry,
       "mscAtmIfVpcVpdPmRowStatus": mscAtmIfVpcVpdPmRowStatus,
       "mscAtmIfVpcVpdPmComponentName": mscAtmIfVpcVpdPmComponentName,
       "mscAtmIfVpcVpdPmStorageType": mscAtmIfVpcVpdPmStorageType,
       "mscAtmIfVpcVpdPmIndex": mscAtmIfVpcVpdPmIndex,
       "mscAtmIfVpcVpdPmProvTable": mscAtmIfVpcVpdPmProvTable,
       "mscAtmIfVpcVpdPmProvEntry": mscAtmIfVpcVpdPmProvEntry,
       "mscAtmIfVpcVpdPmSegSwitchSideMeasurement": mscAtmIfVpcVpdPmSegSwitchSideMeasurement,
       "mscAtmIfVpcVpdPmSegLinkSideMeasurement": mscAtmIfVpcVpdPmSegLinkSideMeasurement,
       "mscAtmIfVpcVpdPmControlMode": mscAtmIfVpcVpdPmControlMode,
       "mscAtmIfVpcVpdLbkTable": mscAtmIfVpcVpdLbkTable,
       "mscAtmIfVpcVpdLbkEntry": mscAtmIfVpcVpdLbkEntry,
       "mscAtmIfVpcVpdSegLinkSideLoopback": mscAtmIfVpcVpdSegLinkSideLoopback,
       "mscAtmIfVpcVpdSegSwitchSideLoopback": mscAtmIfVpcVpdSegSwitchSideLoopback,
       "mscAtmIfVpcVpdEndToEndLoopback": mscAtmIfVpcVpdEndToEndLoopback,
       "mscAtmIfVpcVpdMCastConnectionType": mscAtmIfVpcVpdMCastConnectionType,
       "mscAtmIfVpcVpdTrafficTable": mscAtmIfVpcVpdTrafficTable,
       "mscAtmIfVpcVpdTrafficEntry": mscAtmIfVpcVpdTrafficEntry,
       "mscAtmIfVpcVpdTxTrafficDescType": mscAtmIfVpcVpdTxTrafficDescType,
       "mscAtmIfVpcVpdTxQosClass": mscAtmIfVpcVpdTxQosClass,
       "mscAtmIfVpcVpdFwdQosClass": mscAtmIfVpcVpdFwdQosClass,
       "mscAtmIfVpcVpdHoldingPriority": mscAtmIfVpcVpdHoldingPriority,
       "mscAtmIfVpcVpdRxTrafficDescType": mscAtmIfVpcVpdRxTrafficDescType,
       "mscAtmIfVpcVpdRxQosClass": mscAtmIfVpcVpdRxQosClass,
       "mscAtmIfVpcVpdBwdQosClass": mscAtmIfVpcVpdBwdQosClass,
       "mscAtmIfVpcVpdAtmServiceCategory": mscAtmIfVpcVpdAtmServiceCategory,
       "mscAtmIfVpcVpdTrafficShaping": mscAtmIfVpcVpdTrafficShaping,
       "mscAtmIfVpcVpdUnshapedTransmitQueueing": mscAtmIfVpcVpdUnshapedTransmitQueueing,
       "mscAtmIfVpcVpdUsageParameterControl": mscAtmIfVpcVpdUsageParameterControl,
       "mscAtmIfVpcVpdBearerClassBbc": mscAtmIfVpcVpdBearerClassBbc,
       "mscAtmIfVpcVpdTransferCapabilityBbc": mscAtmIfVpcVpdTransferCapabilityBbc,
       "mscAtmIfVpcVpdClippingBbc": mscAtmIfVpcVpdClippingBbc,
       "mscAtmIfVpcVpdBestEffort": mscAtmIfVpcVpdBestEffort,
       "mscAtmIfVpcVpdFwdFrameDiscard": mscAtmIfVpcVpdFwdFrameDiscard,
       "mscAtmIfVpcVpdBwdFrameDiscard": mscAtmIfVpcVpdBwdFrameDiscard,
       "mscAtmIfVpcVpdAcctTable": mscAtmIfVpcVpdAcctTable,
       "mscAtmIfVpcVpdAcctEntry": mscAtmIfVpcVpdAcctEntry,
       "mscAtmIfVpcVpdCorrelationTag": mscAtmIfVpcVpdCorrelationTag,
       "mscAtmIfVpcVpdTxTdpTable": mscAtmIfVpcVpdTxTdpTable,
       "mscAtmIfVpcVpdTxTdpEntry": mscAtmIfVpcVpdTxTdpEntry,
       "mscAtmIfVpcVpdTxTdpIndex": mscAtmIfVpcVpdTxTdpIndex,
       "mscAtmIfVpcVpdTxTdpValue": mscAtmIfVpcVpdTxTdpValue,
       "mscAtmIfVpcVpdRxTdpTable": mscAtmIfVpcVpdRxTdpTable,
       "mscAtmIfVpcVpdRxTdpEntry": mscAtmIfVpcVpdRxTdpEntry,
       "mscAtmIfVpcVpdRxTdpIndex": mscAtmIfVpcVpdRxTdpIndex,
       "mscAtmIfVpcVpdRxTdpValue": mscAtmIfVpcVpdRxTdpValue,
       "mscAtmIfVpcVpdFqpTable": mscAtmIfVpcVpdFqpTable,
       "mscAtmIfVpcVpdFqpEntry": mscAtmIfVpcVpdFqpEntry,
       "mscAtmIfVpcVpdFqpIndex": mscAtmIfVpcVpdFqpIndex,
       "mscAtmIfVpcVpdFqpValue": mscAtmIfVpcVpdFqpValue,
       "mscAtmIfVpcVpdBqpTable": mscAtmIfVpcVpdBqpTable,
       "mscAtmIfVpcVpdBqpEntry": mscAtmIfVpcVpdBqpEntry,
       "mscAtmIfVpcVpdBqpIndex": mscAtmIfVpcVpdBqpIndex,
       "mscAtmIfVpcVpdBqpValue": mscAtmIfVpcVpdBqpValue,
       "mscAtmIfVpcLoop": mscAtmIfVpcLoop,
       "mscAtmIfVpcLoopRowStatusTable": mscAtmIfVpcLoopRowStatusTable,
       "mscAtmIfVpcLoopRowStatusEntry": mscAtmIfVpcLoopRowStatusEntry,
       "mscAtmIfVpcLoopRowStatus": mscAtmIfVpcLoopRowStatus,
       "mscAtmIfVpcLoopComponentName": mscAtmIfVpcLoopComponentName,
       "mscAtmIfVpcLoopStorageType": mscAtmIfVpcLoopStorageType,
       "mscAtmIfVpcLoopIndex": mscAtmIfVpcLoopIndex,
       "mscAtmIfVpcTm": mscAtmIfVpcTm,
       "mscAtmIfVpcTmRowStatusTable": mscAtmIfVpcTmRowStatusTable,
       "mscAtmIfVpcTmRowStatusEntry": mscAtmIfVpcTmRowStatusEntry,
       "mscAtmIfVpcTmRowStatus": mscAtmIfVpcTmRowStatus,
       "mscAtmIfVpcTmComponentName": mscAtmIfVpcTmComponentName,
       "mscAtmIfVpcTmStorageType": mscAtmIfVpcTmStorageType,
       "mscAtmIfVpcTmIndex": mscAtmIfVpcTmIndex,
       "mscAtmIfVpcTmAbr": mscAtmIfVpcTmAbr,
       "mscAtmIfVpcTmAbrRowStatusTable": mscAtmIfVpcTmAbrRowStatusTable,
       "mscAtmIfVpcTmAbrRowStatusEntry": mscAtmIfVpcTmAbrRowStatusEntry,
       "mscAtmIfVpcTmAbrRowStatus": mscAtmIfVpcTmAbrRowStatus,
       "mscAtmIfVpcTmAbrComponentName": mscAtmIfVpcTmAbrComponentName,
       "mscAtmIfVpcTmAbrStorageType": mscAtmIfVpcTmAbrStorageType,
       "mscAtmIfVpcTmAbrIndex": mscAtmIfVpcTmAbrIndex,
       "mscAtmIfVpcTmAbrOperTable": mscAtmIfVpcTmAbrOperTable,
       "mscAtmIfVpcTmAbrOperEntry": mscAtmIfVpcTmAbrOperEntry,
       "mscAtmIfVpcTmAbrInitialCellRate": mscAtmIfVpcTmAbrInitialCellRate,
       "mscAtmIfVpcTmAbrTransientBufferExposure": mscAtmIfVpcTmAbrTransientBufferExposure,
       "mscAtmIfVpcTmAbrFixedRoundTripTime": mscAtmIfVpcTmAbrFixedRoundTripTime,
       "mscAtmIfVpcTmAbrRateDecreaseFactor": mscAtmIfVpcTmAbrRateDecreaseFactor,
       "mscAtmIfVpcTmAbrRateIncreaseFactor": mscAtmIfVpcTmAbrRateIncreaseFactor,
       "mscAtmIfVpcTmAbrMaxCellPerRmCell": mscAtmIfVpcTmAbrMaxCellPerRmCell,
       "mscAtmIfVpcTmAbrMaxTimeBetweenRmCell": mscAtmIfVpcTmAbrMaxTimeBetweenRmCell,
       "mscAtmIfVpcTmAbrCutoffDecreaseFactor": mscAtmIfVpcTmAbrCutoffDecreaseFactor,
       "mscAtmIfVpcTmAbrAcrDecreaseTimeFactor": mscAtmIfVpcTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVpcTmAbrForwardRmCellLimit": mscAtmIfVpcTmAbrForwardRmCellLimit,
       "mscAtmIfVpcTmAbrTxRateChangeInfo": mscAtmIfVpcTmAbrTxRateChangeInfo,
       "mscAtmIfVpcTmAbrAcrRateChangeInfo": mscAtmIfVpcTmAbrAcrRateChangeInfo,
       "mscAtmIfVpcTmAbrTxFwdRmCells": mscAtmIfVpcTmAbrTxFwdRmCells,
       "mscAtmIfVpcTmAbrRxEfci": mscAtmIfVpcTmAbrRxEfci,
       "mscAtmIfVpcTmOperTable": mscAtmIfVpcTmOperTable,
       "mscAtmIfVpcTmOperEntry": mscAtmIfVpcTmOperEntry,
       "mscAtmIfVpcTmTxTrafficDescType": mscAtmIfVpcTmTxTrafficDescType,
       "mscAtmIfVpcTmTxQosClass": mscAtmIfVpcTmTxQosClass,
       "mscAtmIfVpcTmTxQueueLength": mscAtmIfVpcTmTxQueueLength,
       "mscAtmIfVpcTmTxQueueCongestionState": mscAtmIfVpcTmTxQueueCongestionState,
       "mscAtmIfVpcTmHoldingPriority": mscAtmIfVpcTmHoldingPriority,
       "mscAtmIfVpcTmRxTrafficDescType": mscAtmIfVpcTmRxTrafficDescType,
       "mscAtmIfVpcTmRxQosClass": mscAtmIfVpcTmRxQosClass,
       "mscAtmIfVpcTmAtmServiceCategory": mscAtmIfVpcTmAtmServiceCategory,
       "mscAtmIfVpcTmTrafficShaping": mscAtmIfVpcTmTrafficShaping,
       "mscAtmIfVpcTmBearerClassBbc": mscAtmIfVpcTmBearerClassBbc,
       "mscAtmIfVpcTmTransferCapabilityBbc": mscAtmIfVpcTmTransferCapabilityBbc,
       "mscAtmIfVpcTmClippingBbc": mscAtmIfVpcTmClippingBbc,
       "mscAtmIfVpcTmUnshapedTransmitQueueing": mscAtmIfVpcTmUnshapedTransmitQueueing,
       "mscAtmIfVpcTmBestEffort": mscAtmIfVpcTmBestEffort,
       "mscAtmIfVpcTmForceTagging": mscAtmIfVpcTmForceTagging,
       "mscAtmIfVpcTmWeight": mscAtmIfVpcTmWeight,
       "mscAtmIfVpcTmUsageParameterControl": mscAtmIfVpcTmUsageParameterControl,
       "mscAtmIfVpcTmTxPacketWiseDiscard": mscAtmIfVpcTmTxPacketWiseDiscard,
       "mscAtmIfVpcTmRxPacketWiseDiscard": mscAtmIfVpcTmRxPacketWiseDiscard,
       "mscAtmIfVpcTmBandwidthElastic": mscAtmIfVpcTmBandwidthElastic,
       "mscAtmIfVpcTmBandwidthReduction": mscAtmIfVpcTmBandwidthReduction,
       "mscAtmIfVpcTmAbrConnectionType": mscAtmIfVpcTmAbrConnectionType,
       "mscAtmIfVpcTmTxTdpTable": mscAtmIfVpcTmTxTdpTable,
       "mscAtmIfVpcTmTxTdpEntry": mscAtmIfVpcTmTxTdpEntry,
       "mscAtmIfVpcTmTxTdpIndex": mscAtmIfVpcTmTxTdpIndex,
       "mscAtmIfVpcTmTxTdpValue": mscAtmIfVpcTmTxTdpValue,
       "mscAtmIfVpcTmTxQThreshTable": mscAtmIfVpcTmTxQThreshTable,
       "mscAtmIfVpcTmTxQThreshEntry": mscAtmIfVpcTmTxQThreshEntry,
       "mscAtmIfVpcTmTxQThreshIndex": mscAtmIfVpcTmTxQThreshIndex,
       "mscAtmIfVpcTmTxQThreshValue": mscAtmIfVpcTmTxQThreshValue,
       "mscAtmIfVpcTmRxTdpTable": mscAtmIfVpcTmRxTdpTable,
       "mscAtmIfVpcTmRxTdpEntry": mscAtmIfVpcTmRxTdpEntry,
       "mscAtmIfVpcTmRxTdpIndex": mscAtmIfVpcTmRxTdpIndex,
       "mscAtmIfVpcTmRxTdpValue": mscAtmIfVpcTmRxTdpValue,
       "mscAtmIfVpcTmTqpTable": mscAtmIfVpcTmTqpTable,
       "mscAtmIfVpcTmTqpEntry": mscAtmIfVpcTmTqpEntry,
       "mscAtmIfVpcTmTqpIndex": mscAtmIfVpcTmTqpIndex,
       "mscAtmIfVpcTmTqpValue": mscAtmIfVpcTmTqpValue,
       "mscAtmIfVpcTmRqpTable": mscAtmIfVpcTmRqpTable,
       "mscAtmIfVpcTmRqpEntry": mscAtmIfVpcTmRqpEntry,
       "mscAtmIfVpcTmRqpIndex": mscAtmIfVpcTmRqpIndex,
       "mscAtmIfVpcTmRqpValue": mscAtmIfVpcTmRqpValue,
       "mscAtmIfVpcPm": mscAtmIfVpcPm,
       "mscAtmIfVpcPmRowStatusTable": mscAtmIfVpcPmRowStatusTable,
       "mscAtmIfVpcPmRowStatusEntry": mscAtmIfVpcPmRowStatusEntry,
       "mscAtmIfVpcPmRowStatus": mscAtmIfVpcPmRowStatus,
       "mscAtmIfVpcPmComponentName": mscAtmIfVpcPmComponentName,
       "mscAtmIfVpcPmStorageType": mscAtmIfVpcPmStorageType,
       "mscAtmIfVpcPmIndex": mscAtmIfVpcPmIndex,
       "mscAtmIfVpcPmStatusTable": mscAtmIfVpcPmStatusTable,
       "mscAtmIfVpcPmStatusEntry": mscAtmIfVpcPmStatusEntry,
       "mscAtmIfVpcPmClrMeasurementStatus": mscAtmIfVpcPmClrMeasurementStatus,
       "mscAtmIfVpcPmArMeasurementStatus": mscAtmIfVpcPmArMeasurementStatus,
       "mscAtmIfVpcPmFailureCause": mscAtmIfVpcPmFailureCause,
       "mscAtmIfVpcPmFwdClrTable": mscAtmIfVpcPmFwdClrTable,
       "mscAtmIfVpcPmFwdClrEntry": mscAtmIfVpcPmFwdClrEntry,
       "mscAtmIfVpcPmFwdLastSampleUserCellsRx0": mscAtmIfVpcPmFwdLastSampleUserCellsRx0,
       "mscAtmIfVpcPmFwdLastSampleUserCellsTx0": mscAtmIfVpcPmFwdLastSampleUserCellsTx0,
       "mscAtmIfVpcPmFwdLastSampleClr0": mscAtmIfVpcPmFwdLastSampleClr0,
       "mscAtmIfVpcPmFwdLastSampleUserCellsRx01": mscAtmIfVpcPmFwdLastSampleUserCellsRx01,
       "mscAtmIfVpcPmFwdLastSampleUserCellsTx01": mscAtmIfVpcPmFwdLastSampleUserCellsTx01,
       "mscAtmIfVpcPmFwdLastSampleClr01": mscAtmIfVpcPmFwdLastSampleClr01,
       "mscAtmIfVpcPmFwdTotalClrInterval": mscAtmIfVpcPmFwdTotalClrInterval,
       "mscAtmIfVpcPmFwdTotalUserCellsRx0": mscAtmIfVpcPmFwdTotalUserCellsRx0,
       "mscAtmIfVpcPmFwdTotalUserCellsTx0": mscAtmIfVpcPmFwdTotalUserCellsTx0,
       "mscAtmIfVpcPmFwdAverageClr0": mscAtmIfVpcPmFwdAverageClr0,
       "mscAtmIfVpcPmFwdMaximumClr0": mscAtmIfVpcPmFwdMaximumClr0,
       "mscAtmIfVpcPmFwdMinimumClr0": mscAtmIfVpcPmFwdMinimumClr0,
       "mscAtmIfVpcPmFwdTotalUserCellsRx01": mscAtmIfVpcPmFwdTotalUserCellsRx01,
       "mscAtmIfVpcPmFwdTotalUserCellsTx01": mscAtmIfVpcPmFwdTotalUserCellsTx01,
       "mscAtmIfVpcPmFwdAverageClr01": mscAtmIfVpcPmFwdAverageClr01,
       "mscAtmIfVpcPmFwdMaximumClr01": mscAtmIfVpcPmFwdMaximumClr01,
       "mscAtmIfVpcPmFwdMinimumClr01": mscAtmIfVpcPmFwdMinimumClr01,
       "mscAtmIfVpcPmFwdPmCellDiscardCount": mscAtmIfVpcPmFwdPmCellDiscardCount,
       "mscAtmIfVpcPmBwdClrTable": mscAtmIfVpcPmBwdClrTable,
       "mscAtmIfVpcPmBwdClrEntry": mscAtmIfVpcPmBwdClrEntry,
       "mscAtmIfVpcPmBwdLastSampleUserCellsRx0": mscAtmIfVpcPmBwdLastSampleUserCellsRx0,
       "mscAtmIfVpcPmBwdLastSampleUserCellsTx0": mscAtmIfVpcPmBwdLastSampleUserCellsTx0,
       "mscAtmIfVpcPmBwdLastSampleClr0": mscAtmIfVpcPmBwdLastSampleClr0,
       "mscAtmIfVpcPmBwdLastSampleUserCellsRx01": mscAtmIfVpcPmBwdLastSampleUserCellsRx01,
       "mscAtmIfVpcPmBwdLastSampleUserCellsTx01": mscAtmIfVpcPmBwdLastSampleUserCellsTx01,
       "mscAtmIfVpcPmBwdLastSampleClr01": mscAtmIfVpcPmBwdLastSampleClr01,
       "mscAtmIfVpcPmBwdTotalClrInterval": mscAtmIfVpcPmBwdTotalClrInterval,
       "mscAtmIfVpcPmBwdTotalUserCellsRx0": mscAtmIfVpcPmBwdTotalUserCellsRx0,
       "mscAtmIfVpcPmBwdTotalUserCellsTx0": mscAtmIfVpcPmBwdTotalUserCellsTx0,
       "mscAtmIfVpcPmBwdAverageClr0": mscAtmIfVpcPmBwdAverageClr0,
       "mscAtmIfVpcPmBwdMaximumClr0": mscAtmIfVpcPmBwdMaximumClr0,
       "mscAtmIfVpcPmBwdMinimumClr0": mscAtmIfVpcPmBwdMinimumClr0,
       "mscAtmIfVpcPmBwdTotalUserCellsRx01": mscAtmIfVpcPmBwdTotalUserCellsRx01,
       "mscAtmIfVpcPmBwdTotalUserCellsTx01": mscAtmIfVpcPmBwdTotalUserCellsTx01,
       "mscAtmIfVpcPmBwdAverageClr01": mscAtmIfVpcPmBwdAverageClr01,
       "mscAtmIfVpcPmBwdMaximumClr01": mscAtmIfVpcPmBwdMaximumClr01,
       "mscAtmIfVpcPmBwdMinimumClr01": mscAtmIfVpcPmBwdMinimumClr01,
       "mscAtmIfVpcPmBwdPmCellDiscardCount": mscAtmIfVpcPmBwdPmCellDiscardCount,
       "mscAtmIfVpcPmArTable": mscAtmIfVpcPmArTable,
       "mscAtmIfVpcPmArEntry": mscAtmIfVpcPmArEntry,
       "mscAtmIfVpcPmCurrentAvailabilityStatus": mscAtmIfVpcPmCurrentAvailabilityStatus,
       "mscAtmIfVpcPmArTotalTime": mscAtmIfVpcPmArTotalTime,
       "mscAtmIfVpcPmArAvailableTime": mscAtmIfVpcPmArAvailableTime,
       "mscAtmIfVpcPmArAvailabilityRatio": mscAtmIfVpcPmArAvailabilityRatio,
       "mscAtmIfVpcStateTable": mscAtmIfVpcStateTable,
       "mscAtmIfVpcStateEntry": mscAtmIfVpcStateEntry,
       "mscAtmIfVpcAdminState": mscAtmIfVpcAdminState,
       "mscAtmIfVpcOperationalState": mscAtmIfVpcOperationalState,
       "mscAtmIfVpcUsageState": mscAtmIfVpcUsageState,
       "mscAtmIfVpcOperTable": mscAtmIfVpcOperTable,
       "mscAtmIfVpcOperEntry": mscAtmIfVpcOperEntry,
       "mscAtmIfVpcConnectionPointType": mscAtmIfVpcConnectionPointType,
       "mscAtmIfVpcConnInfoTable": mscAtmIfVpcConnInfoTable,
       "mscAtmIfVpcConnInfoEntry": mscAtmIfVpcConnInfoEntry,
       "mscAtmIfVpcDistributionType": mscAtmIfVpcDistributionType,
       "mscAtmIfVpcNumLeaves": mscAtmIfVpcNumLeaves,
       "mscAtmIfVpcCallDirection": mscAtmIfVpcCallDirection,
       "mscAtmIfVpcStatusTable": mscAtmIfVpcStatusTable,
       "mscAtmIfVpcStatusEntry": mscAtmIfVpcStatusEntry,
       "mscAtmIfVpcOperStatus": mscAtmIfVpcOperStatus,
       "mscAtmIfVpcLocalFailureCause": mscAtmIfVpcLocalFailureCause,
       "mscAtmIfVpcTroubled": mscAtmIfVpcTroubled,
       "mscAtmIfVpcSegLinkSideLoopbackState": mscAtmIfVpcSegLinkSideLoopbackState,
       "mscAtmIfVpcSegSwitchSideLoopbackState": mscAtmIfVpcSegSwitchSideLoopbackState,
       "mscAtmIfVpcEndToEndLoopbackState": mscAtmIfVpcEndToEndLoopbackState,
       "mscAtmIfVpcRxOamCellCongestionState": mscAtmIfVpcRxOamCellCongestionState,
       "mscAtmIfVpcAisState": mscAtmIfVpcAisState,
       "mscAtmIfVpcRdiState": mscAtmIfVpcRdiState,
       "mscAtmIfVpcTrafficTable": mscAtmIfVpcTrafficTable,
       "mscAtmIfVpcTrafficEntry": mscAtmIfVpcTrafficEntry,
       "mscAtmIfVpcTxTrafficDescType": mscAtmIfVpcTxTrafficDescType,
       "mscAtmIfVpcTxQosClass": mscAtmIfVpcTxQosClass,
       "mscAtmIfVpcFwdQosClass": mscAtmIfVpcFwdQosClass,
       "mscAtmIfVpcTxQueueLength": mscAtmIfVpcTxQueueLength,
       "mscAtmIfVpcTxQueueCongestionState": mscAtmIfVpcTxQueueCongestionState,
       "mscAtmIfVpcHoldingPriority": mscAtmIfVpcHoldingPriority,
       "mscAtmIfVpcRxTrafficDescType": mscAtmIfVpcRxTrafficDescType,
       "mscAtmIfVpcRxQosClass": mscAtmIfVpcRxQosClass,
       "mscAtmIfVpcBwdQosClass": mscAtmIfVpcBwdQosClass,
       "mscAtmIfVpcAtmServiceCategory": mscAtmIfVpcAtmServiceCategory,
       "mscAtmIfVpcTrafficShaping": mscAtmIfVpcTrafficShaping,
       "mscAtmIfVpcBearerClassBbc": mscAtmIfVpcBearerClassBbc,
       "mscAtmIfVpcTransferCapabilityBbc": mscAtmIfVpcTransferCapabilityBbc,
       "mscAtmIfVpcClippingBbc": mscAtmIfVpcClippingBbc,
       "mscAtmIfVpcUnshapedTransmitQueueing": mscAtmIfVpcUnshapedTransmitQueueing,
       "mscAtmIfVpcBestEffort": mscAtmIfVpcBestEffort,
       "mscAtmIfVpcUsageParameterControl": mscAtmIfVpcUsageParameterControl,
       "mscAtmIfVpcTxFrameDiscard": mscAtmIfVpcTxFrameDiscard,
       "mscAtmIfVpcRxFrameDiscard": mscAtmIfVpcRxFrameDiscard,
       "mscAtmIfVpcBandwidthElastic": mscAtmIfVpcBandwidthElastic,
       "mscAtmIfVpcBandwidthReduction": mscAtmIfVpcBandwidthReduction,
       "mscAtmIfVpcStatsTable": mscAtmIfVpcStatsTable,
       "mscAtmIfVpcStatsEntry": mscAtmIfVpcStatsEntry,
       "mscAtmIfVpcStatsTxCell": mscAtmIfVpcStatsTxCell,
       "mscAtmIfVpcStatsTxCellClp": mscAtmIfVpcStatsTxCellClp,
       "mscAtmIfVpcTxDiscard": mscAtmIfVpcTxDiscard,
       "mscAtmIfVpcTxDiscardClp": mscAtmIfVpcTxDiscardClp,
       "mscAtmIfVpcStatsTxCellDiscard": mscAtmIfVpcStatsTxCellDiscard,
       "mscAtmIfVpcStatsTxCellDiscardClp": mscAtmIfVpcStatsTxCellDiscardClp,
       "mscAtmIfVpcStatsTxFrameDiscard": mscAtmIfVpcStatsTxFrameDiscard,
       "mscAtmIfVpcStatsTxFrameDiscardClp": mscAtmIfVpcStatsTxFrameDiscardClp,
       "mscAtmIfVpcStatsRxCell": mscAtmIfVpcStatsRxCell,
       "mscAtmIfVpcStatsRxCellClp": mscAtmIfVpcStatsRxCellClp,
       "mscAtmIfVpcRxDiscard": mscAtmIfVpcRxDiscard,
       "mscAtmIfVpcRxDiscardClp": mscAtmIfVpcRxDiscardClp,
       "mscAtmIfVpcStatsRxCellDiscard": mscAtmIfVpcStatsRxCellDiscard,
       "mscAtmIfVpcStatsRxCellDiscardClp": mscAtmIfVpcStatsRxCellDiscardClp,
       "mscAtmIfVpcStatsRxFrameDiscard": mscAtmIfVpcStatsRxFrameDiscard,
       "mscAtmIfVpcStatsRxFrameDiscardClp": mscAtmIfVpcStatsRxFrameDiscardClp,
       "mscAtmIfVpcStatsRxUpcViolationOnEnforcer1": mscAtmIfVpcStatsRxUpcViolationOnEnforcer1,
       "mscAtmIfVpcStatsRxUpcViolationOnEnforcer2": mscAtmIfVpcStatsRxUpcViolationOnEnforcer2,
       "mscAtmIfVpcStatsRxAal5FrameError": mscAtmIfVpcStatsRxAal5FrameError,
       "mscAtmIfVpcStatsRxAal5FrameAbort": mscAtmIfVpcStatsRxAal5FrameAbort,
       "mscAtmIfVpcPerfTable": mscAtmIfVpcPerfTable,
       "mscAtmIfVpcPerfEntry": mscAtmIfVpcPerfEntry,
       "mscAtmIfVpcLastMinimumCtd": mscAtmIfVpcLastMinimumCtd,
       "mscAtmIfVpcLastMaximumCtd": mscAtmIfVpcLastMaximumCtd,
       "mscAtmIfVpcLastAverageCtd": mscAtmIfVpcLastAverageCtd,
       "mscAtmIfVpcCurrentCtd": mscAtmIfVpcCurrentCtd,
       "mscAtmIfVpcLastCtdSampleSize": mscAtmIfVpcLastCtdSampleSize,
       "mscAtmIfVpcTxTdpTable": mscAtmIfVpcTxTdpTable,
       "mscAtmIfVpcTxTdpEntry": mscAtmIfVpcTxTdpEntry,
       "mscAtmIfVpcTxTdpIndex": mscAtmIfVpcTxTdpIndex,
       "mscAtmIfVpcTxTdpValue": mscAtmIfVpcTxTdpValue,
       "mscAtmIfVpcRxTdpTable": mscAtmIfVpcRxTdpTable,
       "mscAtmIfVpcRxTdpEntry": mscAtmIfVpcRxTdpEntry,
       "mscAtmIfVpcRxTdpIndex": mscAtmIfVpcRxTdpIndex,
       "mscAtmIfVpcRxTdpValue": mscAtmIfVpcRxTdpValue,
       "mscAtmIfVpcTxQThreshTable": mscAtmIfVpcTxQThreshTable,
       "mscAtmIfVpcTxQThreshEntry": mscAtmIfVpcTxQThreshEntry,
       "mscAtmIfVpcTxQThreshIndex": mscAtmIfVpcTxQThreshIndex,
       "mscAtmIfVpcTxQThreshValue": mscAtmIfVpcTxQThreshValue,
       "mscAtmIfVpcFqpTable": mscAtmIfVpcFqpTable,
       "mscAtmIfVpcFqpEntry": mscAtmIfVpcFqpEntry,
       "mscAtmIfVpcFqpIndex": mscAtmIfVpcFqpIndex,
       "mscAtmIfVpcFqpValue": mscAtmIfVpcFqpValue,
       "mscAtmIfVpcBqpTable": mscAtmIfVpcBqpTable,
       "mscAtmIfVpcBqpEntry": mscAtmIfVpcBqpEntry,
       "mscAtmIfVpcBqpIndex": mscAtmIfVpcBqpIndex,
       "mscAtmIfVpcBqpValue": mscAtmIfVpcBqpValue,
       "mscAtmIfVcc": mscAtmIfVcc,
       "mscAtmIfVccRowStatusTable": mscAtmIfVccRowStatusTable,
       "mscAtmIfVccRowStatusEntry": mscAtmIfVccRowStatusEntry,
       "mscAtmIfVccRowStatus": mscAtmIfVccRowStatus,
       "mscAtmIfVccComponentName": mscAtmIfVccComponentName,
       "mscAtmIfVccStorageType": mscAtmIfVccStorageType,
       "mscAtmIfVccIndex": mscAtmIfVccIndex,
       "mscAtmIfVccVcd": mscAtmIfVccVcd,
       "mscAtmIfVccVcdRowStatusTable": mscAtmIfVccVcdRowStatusTable,
       "mscAtmIfVccVcdRowStatusEntry": mscAtmIfVccVcdRowStatusEntry,
       "mscAtmIfVccVcdRowStatus": mscAtmIfVccVcdRowStatus,
       "mscAtmIfVccVcdComponentName": mscAtmIfVccVcdComponentName,
       "mscAtmIfVccVcdStorageType": mscAtmIfVccVcdStorageType,
       "mscAtmIfVccVcdIndex": mscAtmIfVccVcdIndex,
       "mscAtmIfVccVcdTm": mscAtmIfVccVcdTm,
       "mscAtmIfVccVcdTmRowStatusTable": mscAtmIfVccVcdTmRowStatusTable,
       "mscAtmIfVccVcdTmRowStatusEntry": mscAtmIfVccVcdTmRowStatusEntry,
       "mscAtmIfVccVcdTmRowStatus": mscAtmIfVccVcdTmRowStatus,
       "mscAtmIfVccVcdTmComponentName": mscAtmIfVccVcdTmComponentName,
       "mscAtmIfVccVcdTmStorageType": mscAtmIfVccVcdTmStorageType,
       "mscAtmIfVccVcdTmIndex": mscAtmIfVccVcdTmIndex,
       "mscAtmIfVccVcdTmAbr": mscAtmIfVccVcdTmAbr,
       "mscAtmIfVccVcdTmAbrRowStatusTable": mscAtmIfVccVcdTmAbrRowStatusTable,
       "mscAtmIfVccVcdTmAbrRowStatusEntry": mscAtmIfVccVcdTmAbrRowStatusEntry,
       "mscAtmIfVccVcdTmAbrRowStatus": mscAtmIfVccVcdTmAbrRowStatus,
       "mscAtmIfVccVcdTmAbrComponentName": mscAtmIfVccVcdTmAbrComponentName,
       "mscAtmIfVccVcdTmAbrStorageType": mscAtmIfVccVcdTmAbrStorageType,
       "mscAtmIfVccVcdTmAbrIndex": mscAtmIfVccVcdTmAbrIndex,
       "mscAtmIfVccVcdTmAbrProvTable": mscAtmIfVccVcdTmAbrProvTable,
       "mscAtmIfVccVcdTmAbrProvEntry": mscAtmIfVccVcdTmAbrProvEntry,
       "mscAtmIfVccVcdTmAbrInitialCellRate": mscAtmIfVccVcdTmAbrInitialCellRate,
       "mscAtmIfVccVcdTmAbrTransientBufferExposure": mscAtmIfVccVcdTmAbrTransientBufferExposure,
       "mscAtmIfVccVcdTmAbrFixedRoundTripTime": mscAtmIfVccVcdTmAbrFixedRoundTripTime,
       "mscAtmIfVccVcdTmAbrRateDecreaseFactor": mscAtmIfVccVcdTmAbrRateDecreaseFactor,
       "mscAtmIfVccVcdTmAbrRateIncreaseFactor": mscAtmIfVccVcdTmAbrRateIncreaseFactor,
       "mscAtmIfVccVcdTmAbrMaxCellPerRmCell": mscAtmIfVccVcdTmAbrMaxCellPerRmCell,
       "mscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells": mscAtmIfVccVcdTmAbrMaxTimeBetweenRmCells,
       "mscAtmIfVccVcdTmAbrCutoffDecreaseFactor": mscAtmIfVccVcdTmAbrCutoffDecreaseFactor,
       "mscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor": mscAtmIfVccVcdTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVccVcdTmAbrDgcraMaximumDelay": mscAtmIfVccVcdTmAbrDgcraMaximumDelay,
       "mscAtmIfVccVcdTmAbrDgcraMinimumDelay": mscAtmIfVccVcdTmAbrDgcraMinimumDelay,
       "mscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor": mscAtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor,
       "mscAtmIfVccVcdTmAbrFarEndInitialCellRate": mscAtmIfVccVcdTmAbrFarEndInitialCellRate,
       "mscAtmIfVccVcdTmProvTable": mscAtmIfVccVcdTmProvTable,
       "mscAtmIfVccVcdTmProvEntry": mscAtmIfVccVcdTmProvEntry,
       "mscAtmIfVccVcdTmTxTrafficDescType": mscAtmIfVccVcdTmTxTrafficDescType,
       "mscAtmIfVccVcdTmFwdQosClass": mscAtmIfVccVcdTmFwdQosClass,
       "mscAtmIfVccVcdTmTxQueueLimit": mscAtmIfVccVcdTmTxQueueLimit,
       "mscAtmIfVccVcdTmHoldingPriority": mscAtmIfVccVcdTmHoldingPriority,
       "mscAtmIfVccVcdTmRxTrafficDescType": mscAtmIfVccVcdTmRxTrafficDescType,
       "mscAtmIfVccVcdTmBwdQosClass": mscAtmIfVccVcdTmBwdQosClass,
       "mscAtmIfVccVcdTmAtmServiceCategory": mscAtmIfVccVcdTmAtmServiceCategory,
       "mscAtmIfVccVcdTmTrafficShaping": mscAtmIfVccVcdTmTrafficShaping,
       "mscAtmIfVccVcdTmUnshapedTransmitQueueing": mscAtmIfVccVcdTmUnshapedTransmitQueueing,
       "mscAtmIfVccVcdTmWeight": mscAtmIfVccVcdTmWeight,
       "mscAtmIfVccVcdTmForceTagging": mscAtmIfVccVcdTmForceTagging,
       "mscAtmIfVccVcdTmUsageParameterControl": mscAtmIfVccVcdTmUsageParameterControl,
       "mscAtmIfVccVcdTmBearerClassBbc": mscAtmIfVccVcdTmBearerClassBbc,
       "mscAtmIfVccVcdTmTransferCapabilityBbc": mscAtmIfVccVcdTmTransferCapabilityBbc,
       "mscAtmIfVccVcdTmClippingBbc": mscAtmIfVccVcdTmClippingBbc,
       "mscAtmIfVccVcdTmBestEffort": mscAtmIfVccVcdTmBestEffort,
       "mscAtmIfVccVcdTmTxPacketWiseDiscard": mscAtmIfVccVcdTmTxPacketWiseDiscard,
       "mscAtmIfVccVcdTmRxPacketWiseDiscard": mscAtmIfVccVcdTmRxPacketWiseDiscard,
       "mscAtmIfVccVcdTmAbrConnectionType": mscAtmIfVccVcdTmAbrConnectionType,
       "mscAtmIfVccVcdTmTxTdpTable": mscAtmIfVccVcdTmTxTdpTable,
       "mscAtmIfVccVcdTmTxTdpEntry": mscAtmIfVccVcdTmTxTdpEntry,
       "mscAtmIfVccVcdTmTxTdpIndex": mscAtmIfVccVcdTmTxTdpIndex,
       "mscAtmIfVccVcdTmTxTdpValue": mscAtmIfVccVcdTmTxTdpValue,
       "mscAtmIfVccVcdTmRxTdpTable": mscAtmIfVccVcdTmRxTdpTable,
       "mscAtmIfVccVcdTmRxTdpEntry": mscAtmIfVccVcdTmRxTdpEntry,
       "mscAtmIfVccVcdTmRxTdpIndex": mscAtmIfVccVcdTmRxTdpIndex,
       "mscAtmIfVccVcdTmRxTdpValue": mscAtmIfVccVcdTmRxTdpValue,
       "mscAtmIfVccVcdTmFqpTable": mscAtmIfVccVcdTmFqpTable,
       "mscAtmIfVccVcdTmFqpEntry": mscAtmIfVccVcdTmFqpEntry,
       "mscAtmIfVccVcdTmFqpIndex": mscAtmIfVccVcdTmFqpIndex,
       "mscAtmIfVccVcdTmFqpValue": mscAtmIfVccVcdTmFqpValue,
       "mscAtmIfVccVcdTmBqpTable": mscAtmIfVccVcdTmBqpTable,
       "mscAtmIfVccVcdTmBqpEntry": mscAtmIfVccVcdTmBqpEntry,
       "mscAtmIfVccVcdTmBqpIndex": mscAtmIfVccVcdTmBqpIndex,
       "mscAtmIfVccVcdTmBqpValue": mscAtmIfVccVcdTmBqpValue,
       "mscAtmIfVccVcdPm": mscAtmIfVccVcdPm,
       "mscAtmIfVccVcdPmRowStatusTable": mscAtmIfVccVcdPmRowStatusTable,
       "mscAtmIfVccVcdPmRowStatusEntry": mscAtmIfVccVcdPmRowStatusEntry,
       "mscAtmIfVccVcdPmRowStatus": mscAtmIfVccVcdPmRowStatus,
       "mscAtmIfVccVcdPmComponentName": mscAtmIfVccVcdPmComponentName,
       "mscAtmIfVccVcdPmStorageType": mscAtmIfVccVcdPmStorageType,
       "mscAtmIfVccVcdPmIndex": mscAtmIfVccVcdPmIndex,
       "mscAtmIfVccVcdPmProvTable": mscAtmIfVccVcdPmProvTable,
       "mscAtmIfVccVcdPmProvEntry": mscAtmIfVccVcdPmProvEntry,
       "mscAtmIfVccVcdPmSegSwitchSideMeasurement": mscAtmIfVccVcdPmSegSwitchSideMeasurement,
       "mscAtmIfVccVcdPmSegLinkSideMeasurement": mscAtmIfVccVcdPmSegLinkSideMeasurement,
       "mscAtmIfVccVcdPmControlMode": mscAtmIfVccVcdPmControlMode,
       "mscAtmIfVccVcdLbkTable": mscAtmIfVccVcdLbkTable,
       "mscAtmIfVccVcdLbkEntry": mscAtmIfVccVcdLbkEntry,
       "mscAtmIfVccVcdSegLinkSideLoopback": mscAtmIfVccVcdSegLinkSideLoopback,
       "mscAtmIfVccVcdSegSwitchSideLoopback": mscAtmIfVccVcdSegSwitchSideLoopback,
       "mscAtmIfVccVcdEndToEndLoopback": mscAtmIfVccVcdEndToEndLoopback,
       "mscAtmIfVccVcdMCastConnectionType": mscAtmIfVccVcdMCastConnectionType,
       "mscAtmIfVccVcdTrafficTable": mscAtmIfVccVcdTrafficTable,
       "mscAtmIfVccVcdTrafficEntry": mscAtmIfVccVcdTrafficEntry,
       "mscAtmIfVccVcdTxTrafficDescType": mscAtmIfVccVcdTxTrafficDescType,
       "mscAtmIfVccVcdTxQosClass": mscAtmIfVccVcdTxQosClass,
       "mscAtmIfVccVcdFwdQosClass": mscAtmIfVccVcdFwdQosClass,
       "mscAtmIfVccVcdHoldingPriority": mscAtmIfVccVcdHoldingPriority,
       "mscAtmIfVccVcdRxTrafficDescType": mscAtmIfVccVcdRxTrafficDescType,
       "mscAtmIfVccVcdRxQosClass": mscAtmIfVccVcdRxQosClass,
       "mscAtmIfVccVcdBwdQosClass": mscAtmIfVccVcdBwdQosClass,
       "mscAtmIfVccVcdAtmServiceCategory": mscAtmIfVccVcdAtmServiceCategory,
       "mscAtmIfVccVcdTrafficShaping": mscAtmIfVccVcdTrafficShaping,
       "mscAtmIfVccVcdUnshapedTransmitQueueing": mscAtmIfVccVcdUnshapedTransmitQueueing,
       "mscAtmIfVccVcdUsageParameterControl": mscAtmIfVccVcdUsageParameterControl,
       "mscAtmIfVccVcdBearerClassBbc": mscAtmIfVccVcdBearerClassBbc,
       "mscAtmIfVccVcdTransferCapabilityBbc": mscAtmIfVccVcdTransferCapabilityBbc,
       "mscAtmIfVccVcdClippingBbc": mscAtmIfVccVcdClippingBbc,
       "mscAtmIfVccVcdBestEffort": mscAtmIfVccVcdBestEffort,
       "mscAtmIfVccVcdFwdFrameDiscard": mscAtmIfVccVcdFwdFrameDiscard,
       "mscAtmIfVccVcdBwdFrameDiscard": mscAtmIfVccVcdBwdFrameDiscard,
       "mscAtmIfVccVcdAcctTable": mscAtmIfVccVcdAcctTable,
       "mscAtmIfVccVcdAcctEntry": mscAtmIfVccVcdAcctEntry,
       "mscAtmIfVccVcdCorrelationTag": mscAtmIfVccVcdCorrelationTag,
       "mscAtmIfVccVcdTxTdpTable": mscAtmIfVccVcdTxTdpTable,
       "mscAtmIfVccVcdTxTdpEntry": mscAtmIfVccVcdTxTdpEntry,
       "mscAtmIfVccVcdTxTdpIndex": mscAtmIfVccVcdTxTdpIndex,
       "mscAtmIfVccVcdTxTdpValue": mscAtmIfVccVcdTxTdpValue,
       "mscAtmIfVccVcdRxTdpTable": mscAtmIfVccVcdRxTdpTable,
       "mscAtmIfVccVcdRxTdpEntry": mscAtmIfVccVcdRxTdpEntry,
       "mscAtmIfVccVcdRxTdpIndex": mscAtmIfVccVcdRxTdpIndex,
       "mscAtmIfVccVcdRxTdpValue": mscAtmIfVccVcdRxTdpValue,
       "mscAtmIfVccVcdFqpTable": mscAtmIfVccVcdFqpTable,
       "mscAtmIfVccVcdFqpEntry": mscAtmIfVccVcdFqpEntry,
       "mscAtmIfVccVcdFqpIndex": mscAtmIfVccVcdFqpIndex,
       "mscAtmIfVccVcdFqpValue": mscAtmIfVccVcdFqpValue,
       "mscAtmIfVccVcdBqpTable": mscAtmIfVccVcdBqpTable,
       "mscAtmIfVccVcdBqpEntry": mscAtmIfVccVcdBqpEntry,
       "mscAtmIfVccVcdBqpIndex": mscAtmIfVccVcdBqpIndex,
       "mscAtmIfVccVcdBqpValue": mscAtmIfVccVcdBqpValue,
       "mscAtmIfVccLoop": mscAtmIfVccLoop,
       "mscAtmIfVccLoopRowStatusTable": mscAtmIfVccLoopRowStatusTable,
       "mscAtmIfVccLoopRowStatusEntry": mscAtmIfVccLoopRowStatusEntry,
       "mscAtmIfVccLoopRowStatus": mscAtmIfVccLoopRowStatus,
       "mscAtmIfVccLoopComponentName": mscAtmIfVccLoopComponentName,
       "mscAtmIfVccLoopStorageType": mscAtmIfVccLoopStorageType,
       "mscAtmIfVccLoopIndex": mscAtmIfVccLoopIndex,
       "mscAtmIfVccNep": mscAtmIfVccNep,
       "mscAtmIfVccNepRowStatusTable": mscAtmIfVccNepRowStatusTable,
       "mscAtmIfVccNepRowStatusEntry": mscAtmIfVccNepRowStatusEntry,
       "mscAtmIfVccNepRowStatus": mscAtmIfVccNepRowStatus,
       "mscAtmIfVccNepComponentName": mscAtmIfVccNepComponentName,
       "mscAtmIfVccNepStorageType": mscAtmIfVccNepStorageType,
       "mscAtmIfVccNepIndex": mscAtmIfVccNepIndex,
       "mscAtmIfVccNepProvTable": mscAtmIfVccNepProvTable,
       "mscAtmIfVccNepProvEntry": mscAtmIfVccNepProvEntry,
       "mscAtmIfVccNepApplicationName": mscAtmIfVccNepApplicationName,
       "mscAtmIfVccTest": mscAtmIfVccTest,
       "mscAtmIfVccTestRowStatusTable": mscAtmIfVccTestRowStatusTable,
       "mscAtmIfVccTestRowStatusEntry": mscAtmIfVccTestRowStatusEntry,
       "mscAtmIfVccTestRowStatus": mscAtmIfVccTestRowStatus,
       "mscAtmIfVccTestComponentName": mscAtmIfVccTestComponentName,
       "mscAtmIfVccTestStorageType": mscAtmIfVccTestStorageType,
       "mscAtmIfVccTestIndex": mscAtmIfVccTestIndex,
       "mscAtmIfVccTestStateTable": mscAtmIfVccTestStateTable,
       "mscAtmIfVccTestStateEntry": mscAtmIfVccTestStateEntry,
       "mscAtmIfVccTestAdminState": mscAtmIfVccTestAdminState,
       "mscAtmIfVccTestOperationalState": mscAtmIfVccTestOperationalState,
       "mscAtmIfVccTestUsageState": mscAtmIfVccTestUsageState,
       "mscAtmIfVccTestSetupTable": mscAtmIfVccTestSetupTable,
       "mscAtmIfVccTestSetupEntry": mscAtmIfVccTestSetupEntry,
       "mscAtmIfVccTestFrmTypes": mscAtmIfVccTestFrmTypes,
       "mscAtmIfVccTestFrmSize": mscAtmIfVccTestFrmSize,
       "mscAtmIfVccTestFrmPatternType": mscAtmIfVccTestFrmPatternType,
       "mscAtmIfVccTestCustomizedPattern": mscAtmIfVccTestCustomizedPattern,
       "mscAtmIfVccTestDuration": mscAtmIfVccTestDuration,
       "mscAtmIfVccTestBandwidthElastic": mscAtmIfVccTestBandwidthElastic,
       "mscAtmIfVccTestOverrideHoldingPriority": mscAtmIfVccTestOverrideHoldingPriority,
       "mscAtmIfVccTestResultsTable": mscAtmIfVccTestResultsTable,
       "mscAtmIfVccTestResultsEntry": mscAtmIfVccTestResultsEntry,
       "mscAtmIfVccTestElapsedTime": mscAtmIfVccTestElapsedTime,
       "mscAtmIfVccTestTimeRemaining": mscAtmIfVccTestTimeRemaining,
       "mscAtmIfVccTestCauseOfTermination": mscAtmIfVccTestCauseOfTermination,
       "mscAtmIfVccTestBytesTx": mscAtmIfVccTestBytesTx,
       "mscAtmIfVccTestBytesRx": mscAtmIfVccTestBytesRx,
       "mscAtmIfVccTestLoadingFrmTx": mscAtmIfVccTestLoadingFrmTx,
       "mscAtmIfVccTestLoadingFrmRx": mscAtmIfVccTestLoadingFrmRx,
       "mscAtmIfVccTestLoadingFrmLost": mscAtmIfVccTestLoadingFrmLost,
       "mscAtmIfVccTestVerificationFrmTx": mscAtmIfVccTestVerificationFrmTx,
       "mscAtmIfVccTestVerificationFrmRx": mscAtmIfVccTestVerificationFrmRx,
       "mscAtmIfVccTestVerificationFrmBad": mscAtmIfVccTestVerificationFrmBad,
       "mscAtmIfVccTestUnrecognizableFrmRx": mscAtmIfVccTestUnrecognizableFrmRx,
       "mscAtmIfVccTm": mscAtmIfVccTm,
       "mscAtmIfVccTmRowStatusTable": mscAtmIfVccTmRowStatusTable,
       "mscAtmIfVccTmRowStatusEntry": mscAtmIfVccTmRowStatusEntry,
       "mscAtmIfVccTmRowStatus": mscAtmIfVccTmRowStatus,
       "mscAtmIfVccTmComponentName": mscAtmIfVccTmComponentName,
       "mscAtmIfVccTmStorageType": mscAtmIfVccTmStorageType,
       "mscAtmIfVccTmIndex": mscAtmIfVccTmIndex,
       "mscAtmIfVccTmAbr": mscAtmIfVccTmAbr,
       "mscAtmIfVccTmAbrRowStatusTable": mscAtmIfVccTmAbrRowStatusTable,
       "mscAtmIfVccTmAbrRowStatusEntry": mscAtmIfVccTmAbrRowStatusEntry,
       "mscAtmIfVccTmAbrRowStatus": mscAtmIfVccTmAbrRowStatus,
       "mscAtmIfVccTmAbrComponentName": mscAtmIfVccTmAbrComponentName,
       "mscAtmIfVccTmAbrStorageType": mscAtmIfVccTmAbrStorageType,
       "mscAtmIfVccTmAbrIndex": mscAtmIfVccTmAbrIndex,
       "mscAtmIfVccTmAbrOperTable": mscAtmIfVccTmAbrOperTable,
       "mscAtmIfVccTmAbrOperEntry": mscAtmIfVccTmAbrOperEntry,
       "mscAtmIfVccTmAbrInitialCellRate": mscAtmIfVccTmAbrInitialCellRate,
       "mscAtmIfVccTmAbrTransientBufferExposure": mscAtmIfVccTmAbrTransientBufferExposure,
       "mscAtmIfVccTmAbrFixedRoundTripTime": mscAtmIfVccTmAbrFixedRoundTripTime,
       "mscAtmIfVccTmAbrRateDecreaseFactor": mscAtmIfVccTmAbrRateDecreaseFactor,
       "mscAtmIfVccTmAbrRateIncreaseFactor": mscAtmIfVccTmAbrRateIncreaseFactor,
       "mscAtmIfVccTmAbrMaxCellPerRmCell": mscAtmIfVccTmAbrMaxCellPerRmCell,
       "mscAtmIfVccTmAbrMaxTimeBetweenRmCell": mscAtmIfVccTmAbrMaxTimeBetweenRmCell,
       "mscAtmIfVccTmAbrCutoffDecreaseFactor": mscAtmIfVccTmAbrCutoffDecreaseFactor,
       "mscAtmIfVccTmAbrAcrDecreaseTimeFactor": mscAtmIfVccTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVccTmAbrForwardRmCellLimit": mscAtmIfVccTmAbrForwardRmCellLimit,
       "mscAtmIfVccTmAbrTxRateChangeInfo": mscAtmIfVccTmAbrTxRateChangeInfo,
       "mscAtmIfVccTmAbrAcrRateChangeInfo": mscAtmIfVccTmAbrAcrRateChangeInfo,
       "mscAtmIfVccTmAbrTxFwdRmCells": mscAtmIfVccTmAbrTxFwdRmCells,
       "mscAtmIfVccTmAbrRxEfci": mscAtmIfVccTmAbrRxEfci,
       "mscAtmIfVccTmOperTable": mscAtmIfVccTmOperTable,
       "mscAtmIfVccTmOperEntry": mscAtmIfVccTmOperEntry,
       "mscAtmIfVccTmTxTrafficDescType": mscAtmIfVccTmTxTrafficDescType,
       "mscAtmIfVccTmTxQosClass": mscAtmIfVccTmTxQosClass,
       "mscAtmIfVccTmTxQueueLength": mscAtmIfVccTmTxQueueLength,
       "mscAtmIfVccTmTxQueueCongestionState": mscAtmIfVccTmTxQueueCongestionState,
       "mscAtmIfVccTmHoldingPriority": mscAtmIfVccTmHoldingPriority,
       "mscAtmIfVccTmRxTrafficDescType": mscAtmIfVccTmRxTrafficDescType,
       "mscAtmIfVccTmRxQosClass": mscAtmIfVccTmRxQosClass,
       "mscAtmIfVccTmAtmServiceCategory": mscAtmIfVccTmAtmServiceCategory,
       "mscAtmIfVccTmTrafficShaping": mscAtmIfVccTmTrafficShaping,
       "mscAtmIfVccTmBearerClassBbc": mscAtmIfVccTmBearerClassBbc,
       "mscAtmIfVccTmTransferCapabilityBbc": mscAtmIfVccTmTransferCapabilityBbc,
       "mscAtmIfVccTmClippingBbc": mscAtmIfVccTmClippingBbc,
       "mscAtmIfVccTmUnshapedTransmitQueueing": mscAtmIfVccTmUnshapedTransmitQueueing,
       "mscAtmIfVccTmBestEffort": mscAtmIfVccTmBestEffort,
       "mscAtmIfVccTmForceTagging": mscAtmIfVccTmForceTagging,
       "mscAtmIfVccTmWeight": mscAtmIfVccTmWeight,
       "mscAtmIfVccTmUsageParameterControl": mscAtmIfVccTmUsageParameterControl,
       "mscAtmIfVccTmTxPacketWiseDiscard": mscAtmIfVccTmTxPacketWiseDiscard,
       "mscAtmIfVccTmRxPacketWiseDiscard": mscAtmIfVccTmRxPacketWiseDiscard,
       "mscAtmIfVccTmBandwidthElastic": mscAtmIfVccTmBandwidthElastic,
       "mscAtmIfVccTmBandwidthReduction": mscAtmIfVccTmBandwidthReduction,
       "mscAtmIfVccTmAbrConnectionType": mscAtmIfVccTmAbrConnectionType,
       "mscAtmIfVccTmTxTdpTable": mscAtmIfVccTmTxTdpTable,
       "mscAtmIfVccTmTxTdpEntry": mscAtmIfVccTmTxTdpEntry,
       "mscAtmIfVccTmTxTdpIndex": mscAtmIfVccTmTxTdpIndex,
       "mscAtmIfVccTmTxTdpValue": mscAtmIfVccTmTxTdpValue,
       "mscAtmIfVccTmTxQThreshTable": mscAtmIfVccTmTxQThreshTable,
       "mscAtmIfVccTmTxQThreshEntry": mscAtmIfVccTmTxQThreshEntry,
       "mscAtmIfVccTmTxQThreshIndex": mscAtmIfVccTmTxQThreshIndex,
       "mscAtmIfVccTmTxQThreshValue": mscAtmIfVccTmTxQThreshValue,
       "mscAtmIfVccTmRxTdpTable": mscAtmIfVccTmRxTdpTable,
       "mscAtmIfVccTmRxTdpEntry": mscAtmIfVccTmRxTdpEntry,
       "mscAtmIfVccTmRxTdpIndex": mscAtmIfVccTmRxTdpIndex,
       "mscAtmIfVccTmRxTdpValue": mscAtmIfVccTmRxTdpValue,
       "mscAtmIfVccTmTqpTable": mscAtmIfVccTmTqpTable,
       "mscAtmIfVccTmTqpEntry": mscAtmIfVccTmTqpEntry,
       "mscAtmIfVccTmTqpIndex": mscAtmIfVccTmTqpIndex,
       "mscAtmIfVccTmTqpValue": mscAtmIfVccTmTqpValue,
       "mscAtmIfVccTmRqpTable": mscAtmIfVccTmRqpTable,
       "mscAtmIfVccTmRqpEntry": mscAtmIfVccTmRqpEntry,
       "mscAtmIfVccTmRqpIndex": mscAtmIfVccTmRqpIndex,
       "mscAtmIfVccTmRqpValue": mscAtmIfVccTmRqpValue,
       "mscAtmIfVccPm": mscAtmIfVccPm,
       "mscAtmIfVccPmRowStatusTable": mscAtmIfVccPmRowStatusTable,
       "mscAtmIfVccPmRowStatusEntry": mscAtmIfVccPmRowStatusEntry,
       "mscAtmIfVccPmRowStatus": mscAtmIfVccPmRowStatus,
       "mscAtmIfVccPmComponentName": mscAtmIfVccPmComponentName,
       "mscAtmIfVccPmStorageType": mscAtmIfVccPmStorageType,
       "mscAtmIfVccPmIndex": mscAtmIfVccPmIndex,
       "mscAtmIfVccPmStatusTable": mscAtmIfVccPmStatusTable,
       "mscAtmIfVccPmStatusEntry": mscAtmIfVccPmStatusEntry,
       "mscAtmIfVccPmClrMeasurementStatus": mscAtmIfVccPmClrMeasurementStatus,
       "mscAtmIfVccPmArMeasurementStatus": mscAtmIfVccPmArMeasurementStatus,
       "mscAtmIfVccPmFailureCause": mscAtmIfVccPmFailureCause,
       "mscAtmIfVccPmFwdClrTable": mscAtmIfVccPmFwdClrTable,
       "mscAtmIfVccPmFwdClrEntry": mscAtmIfVccPmFwdClrEntry,
       "mscAtmIfVccPmFwdLastSampleUserCellsRx0": mscAtmIfVccPmFwdLastSampleUserCellsRx0,
       "mscAtmIfVccPmFwdLastSampleUserCellsTx0": mscAtmIfVccPmFwdLastSampleUserCellsTx0,
       "mscAtmIfVccPmFwdLastSampleClr0": mscAtmIfVccPmFwdLastSampleClr0,
       "mscAtmIfVccPmFwdLastSampleUserCellsRx01": mscAtmIfVccPmFwdLastSampleUserCellsRx01,
       "mscAtmIfVccPmFwdLastSampleUserCellsTx01": mscAtmIfVccPmFwdLastSampleUserCellsTx01,
       "mscAtmIfVccPmFwdLastSampleClr01": mscAtmIfVccPmFwdLastSampleClr01,
       "mscAtmIfVccPmFwdTotalClrInterval": mscAtmIfVccPmFwdTotalClrInterval,
       "mscAtmIfVccPmFwdTotalUserCellsRx0": mscAtmIfVccPmFwdTotalUserCellsRx0,
       "mscAtmIfVccPmFwdTotalUserCellsTx0": mscAtmIfVccPmFwdTotalUserCellsTx0,
       "mscAtmIfVccPmFwdAverageClr0": mscAtmIfVccPmFwdAverageClr0,
       "mscAtmIfVccPmFwdMaximumClr0": mscAtmIfVccPmFwdMaximumClr0,
       "mscAtmIfVccPmFwdMinimumClr0": mscAtmIfVccPmFwdMinimumClr0,
       "mscAtmIfVccPmFwdTotalUserCellsRx01": mscAtmIfVccPmFwdTotalUserCellsRx01,
       "mscAtmIfVccPmFwdTotalUserCellsTx01": mscAtmIfVccPmFwdTotalUserCellsTx01,
       "mscAtmIfVccPmFwdAverageClr01": mscAtmIfVccPmFwdAverageClr01,
       "mscAtmIfVccPmFwdMaximumClr01": mscAtmIfVccPmFwdMaximumClr01,
       "mscAtmIfVccPmFwdMinimumClr01": mscAtmIfVccPmFwdMinimumClr01,
       "mscAtmIfVccPmFwdPmCellDiscardCount": mscAtmIfVccPmFwdPmCellDiscardCount,
       "mscAtmIfVccPmBwdClrTable": mscAtmIfVccPmBwdClrTable,
       "mscAtmIfVccPmBwdClrEntry": mscAtmIfVccPmBwdClrEntry,
       "mscAtmIfVccPmBwdLastSampleUserCellsRx0": mscAtmIfVccPmBwdLastSampleUserCellsRx0,
       "mscAtmIfVccPmBwdLastSampleUserCellsTx0": mscAtmIfVccPmBwdLastSampleUserCellsTx0,
       "mscAtmIfVccPmBwdLastSampleClr0": mscAtmIfVccPmBwdLastSampleClr0,
       "mscAtmIfVccPmBwdLastSampleUserCellsRx01": mscAtmIfVccPmBwdLastSampleUserCellsRx01,
       "mscAtmIfVccPmBwdLastSampleUserCellsTx01": mscAtmIfVccPmBwdLastSampleUserCellsTx01,
       "mscAtmIfVccPmBwdLastSampleClr01": mscAtmIfVccPmBwdLastSampleClr01,
       "mscAtmIfVccPmBwdTotalClrInterval": mscAtmIfVccPmBwdTotalClrInterval,
       "mscAtmIfVccPmBwdTotalUserCellsRx0": mscAtmIfVccPmBwdTotalUserCellsRx0,
       "mscAtmIfVccPmBwdTotalUserCellsTx0": mscAtmIfVccPmBwdTotalUserCellsTx0,
       "mscAtmIfVccPmBwdAverageClr0": mscAtmIfVccPmBwdAverageClr0,
       "mscAtmIfVccPmBwdMaximumClr0": mscAtmIfVccPmBwdMaximumClr0,
       "mscAtmIfVccPmBwdMinimumClr0": mscAtmIfVccPmBwdMinimumClr0,
       "mscAtmIfVccPmBwdTotalUserCellsRx01": mscAtmIfVccPmBwdTotalUserCellsRx01,
       "mscAtmIfVccPmBwdTotalUserCellsTx01": mscAtmIfVccPmBwdTotalUserCellsTx01,
       "mscAtmIfVccPmBwdAverageClr01": mscAtmIfVccPmBwdAverageClr01,
       "mscAtmIfVccPmBwdMaximumClr01": mscAtmIfVccPmBwdMaximumClr01,
       "mscAtmIfVccPmBwdMinimumClr01": mscAtmIfVccPmBwdMinimumClr01,
       "mscAtmIfVccPmBwdPmCellDiscardCount": mscAtmIfVccPmBwdPmCellDiscardCount,
       "mscAtmIfVccPmArTable": mscAtmIfVccPmArTable,
       "mscAtmIfVccPmArEntry": mscAtmIfVccPmArEntry,
       "mscAtmIfVccPmCurrentAvailabilityStatus": mscAtmIfVccPmCurrentAvailabilityStatus,
       "mscAtmIfVccPmArTotalTime": mscAtmIfVccPmArTotalTime,
       "mscAtmIfVccPmArAvailableTime": mscAtmIfVccPmArAvailableTime,
       "mscAtmIfVccPmArAvailabilityRatio": mscAtmIfVccPmArAvailabilityRatio,
       "mscAtmIfVccStateTable": mscAtmIfVccStateTable,
       "mscAtmIfVccStateEntry": mscAtmIfVccStateEntry,
       "mscAtmIfVccAdminState": mscAtmIfVccAdminState,
       "mscAtmIfVccOperationalState": mscAtmIfVccOperationalState,
       "mscAtmIfVccUsageState": mscAtmIfVccUsageState,
       "mscAtmIfVccOperTable": mscAtmIfVccOperTable,
       "mscAtmIfVccOperEntry": mscAtmIfVccOperEntry,
       "mscAtmIfVccConnectionPointType": mscAtmIfVccConnectionPointType,
       "mscAtmIfVccConnInfoTable": mscAtmIfVccConnInfoTable,
       "mscAtmIfVccConnInfoEntry": mscAtmIfVccConnInfoEntry,
       "mscAtmIfVccDistributionType": mscAtmIfVccDistributionType,
       "mscAtmIfVccNumLeaves": mscAtmIfVccNumLeaves,
       "mscAtmIfVccCallDirection": mscAtmIfVccCallDirection,
       "mscAtmIfVccStatusTable": mscAtmIfVccStatusTable,
       "mscAtmIfVccStatusEntry": mscAtmIfVccStatusEntry,
       "mscAtmIfVccOperStatus": mscAtmIfVccOperStatus,
       "mscAtmIfVccLocalFailureCause": mscAtmIfVccLocalFailureCause,
       "mscAtmIfVccTroubled": mscAtmIfVccTroubled,
       "mscAtmIfVccSegLinkSideLoopbackState": mscAtmIfVccSegLinkSideLoopbackState,
       "mscAtmIfVccSegSwitchSideLoopbackState": mscAtmIfVccSegSwitchSideLoopbackState,
       "mscAtmIfVccEndToEndLoopbackState": mscAtmIfVccEndToEndLoopbackState,
       "mscAtmIfVccRxOamCellCongestionState": mscAtmIfVccRxOamCellCongestionState,
       "mscAtmIfVccAisState": mscAtmIfVccAisState,
       "mscAtmIfVccRdiState": mscAtmIfVccRdiState,
       "mscAtmIfVccTrafficTable": mscAtmIfVccTrafficTable,
       "mscAtmIfVccTrafficEntry": mscAtmIfVccTrafficEntry,
       "mscAtmIfVccTxTrafficDescType": mscAtmIfVccTxTrafficDescType,
       "mscAtmIfVccTxQosClass": mscAtmIfVccTxQosClass,
       "mscAtmIfVccFwdQosClass": mscAtmIfVccFwdQosClass,
       "mscAtmIfVccTxQueueLength": mscAtmIfVccTxQueueLength,
       "mscAtmIfVccTxQueueCongestionState": mscAtmIfVccTxQueueCongestionState,
       "mscAtmIfVccHoldingPriority": mscAtmIfVccHoldingPriority,
       "mscAtmIfVccRxTrafficDescType": mscAtmIfVccRxTrafficDescType,
       "mscAtmIfVccRxQosClass": mscAtmIfVccRxQosClass,
       "mscAtmIfVccBwdQosClass": mscAtmIfVccBwdQosClass,
       "mscAtmIfVccAtmServiceCategory": mscAtmIfVccAtmServiceCategory,
       "mscAtmIfVccTrafficShaping": mscAtmIfVccTrafficShaping,
       "mscAtmIfVccBearerClassBbc": mscAtmIfVccBearerClassBbc,
       "mscAtmIfVccTransferCapabilityBbc": mscAtmIfVccTransferCapabilityBbc,
       "mscAtmIfVccClippingBbc": mscAtmIfVccClippingBbc,
       "mscAtmIfVccUnshapedTransmitQueueing": mscAtmIfVccUnshapedTransmitQueueing,
       "mscAtmIfVccBestEffort": mscAtmIfVccBestEffort,
       "mscAtmIfVccUsageParameterControl": mscAtmIfVccUsageParameterControl,
       "mscAtmIfVccTxFrameDiscard": mscAtmIfVccTxFrameDiscard,
       "mscAtmIfVccRxFrameDiscard": mscAtmIfVccRxFrameDiscard,
       "mscAtmIfVccBandwidthElastic": mscAtmIfVccBandwidthElastic,
       "mscAtmIfVccBandwidthReduction": mscAtmIfVccBandwidthReduction,
       "mscAtmIfVccStatsTable": mscAtmIfVccStatsTable,
       "mscAtmIfVccStatsEntry": mscAtmIfVccStatsEntry,
       "mscAtmIfVccStatsTxCell": mscAtmIfVccStatsTxCell,
       "mscAtmIfVccStatsTxCellClp": mscAtmIfVccStatsTxCellClp,
       "mscAtmIfVccTxDiscard": mscAtmIfVccTxDiscard,
       "mscAtmIfVccTxDiscardClp": mscAtmIfVccTxDiscardClp,
       "mscAtmIfVccStatsTxCellDiscard": mscAtmIfVccStatsTxCellDiscard,
       "mscAtmIfVccStatsTxCellDiscardClp": mscAtmIfVccStatsTxCellDiscardClp,
       "mscAtmIfVccStatsTxFrameDiscard": mscAtmIfVccStatsTxFrameDiscard,
       "mscAtmIfVccStatsTxFrameDiscardClp": mscAtmIfVccStatsTxFrameDiscardClp,
       "mscAtmIfVccStatsRxCell": mscAtmIfVccStatsRxCell,
       "mscAtmIfVccStatsRxCellClp": mscAtmIfVccStatsRxCellClp,
       "mscAtmIfVccRxDiscard": mscAtmIfVccRxDiscard,
       "mscAtmIfVccRxDiscardClp": mscAtmIfVccRxDiscardClp,
       "mscAtmIfVccStatsRxCellDiscard": mscAtmIfVccStatsRxCellDiscard,
       "mscAtmIfVccStatsRxCellDiscardClp": mscAtmIfVccStatsRxCellDiscardClp,
       "mscAtmIfVccStatsRxFrameDiscard": mscAtmIfVccStatsRxFrameDiscard,
       "mscAtmIfVccStatsRxFrameDiscardClp": mscAtmIfVccStatsRxFrameDiscardClp,
       "mscAtmIfVccStatsRxUpcViolationOnEnforcer1": mscAtmIfVccStatsRxUpcViolationOnEnforcer1,
       "mscAtmIfVccStatsRxUpcViolationOnEnforcer2": mscAtmIfVccStatsRxUpcViolationOnEnforcer2,
       "mscAtmIfVccStatsRxAal5FrameError": mscAtmIfVccStatsRxAal5FrameError,
       "mscAtmIfVccStatsRxAal5FrameAbort": mscAtmIfVccStatsRxAal5FrameAbort,
       "mscAtmIfVccPerfTable": mscAtmIfVccPerfTable,
       "mscAtmIfVccPerfEntry": mscAtmIfVccPerfEntry,
       "mscAtmIfVccLastMinimumCtd": mscAtmIfVccLastMinimumCtd,
       "mscAtmIfVccLastMaximumCtd": mscAtmIfVccLastMaximumCtd,
       "mscAtmIfVccLastAverageCtd": mscAtmIfVccLastAverageCtd,
       "mscAtmIfVccCurrentCtd": mscAtmIfVccCurrentCtd,
       "mscAtmIfVccLastCtdSampleSize": mscAtmIfVccLastCtdSampleSize,
       "mscAtmIfVccTxTdpTable": mscAtmIfVccTxTdpTable,
       "mscAtmIfVccTxTdpEntry": mscAtmIfVccTxTdpEntry,
       "mscAtmIfVccTxTdpIndex": mscAtmIfVccTxTdpIndex,
       "mscAtmIfVccTxTdpValue": mscAtmIfVccTxTdpValue,
       "mscAtmIfVccRxTdpTable": mscAtmIfVccRxTdpTable,
       "mscAtmIfVccRxTdpEntry": mscAtmIfVccRxTdpEntry,
       "mscAtmIfVccRxTdpIndex": mscAtmIfVccRxTdpIndex,
       "mscAtmIfVccRxTdpValue": mscAtmIfVccRxTdpValue,
       "mscAtmIfVccTxQThreshTable": mscAtmIfVccTxQThreshTable,
       "mscAtmIfVccTxQThreshEntry": mscAtmIfVccTxQThreshEntry,
       "mscAtmIfVccTxQThreshIndex": mscAtmIfVccTxQThreshIndex,
       "mscAtmIfVccTxQThreshValue": mscAtmIfVccTxQThreshValue,
       "mscAtmIfVccFqpTable": mscAtmIfVccFqpTable,
       "mscAtmIfVccFqpEntry": mscAtmIfVccFqpEntry,
       "mscAtmIfVccFqpIndex": mscAtmIfVccFqpIndex,
       "mscAtmIfVccFqpValue": mscAtmIfVccFqpValue,
       "mscAtmIfVccBqpTable": mscAtmIfVccBqpTable,
       "mscAtmIfVccBqpEntry": mscAtmIfVccBqpEntry,
       "mscAtmIfVccBqpIndex": mscAtmIfVccBqpIndex,
       "mscAtmIfVccBqpValue": mscAtmIfVccBqpValue,
       "mscAtmIfNAcct": mscAtmIfNAcct,
       "mscAtmIfNAcctRowStatusTable": mscAtmIfNAcctRowStatusTable,
       "mscAtmIfNAcctRowStatusEntry": mscAtmIfNAcctRowStatusEntry,
       "mscAtmIfNAcctRowStatus": mscAtmIfNAcctRowStatus,
       "mscAtmIfNAcctComponentName": mscAtmIfNAcctComponentName,
       "mscAtmIfNAcctStorageType": mscAtmIfNAcctStorageType,
       "mscAtmIfNAcctIndex": mscAtmIfNAcctIndex,
       "mscAtmIfNAcctProvTable": mscAtmIfNAcctProvTable,
       "mscAtmIfNAcctProvEntry": mscAtmIfNAcctProvEntry,
       "mscAtmIfNAcctAccountCollection": mscAtmIfNAcctAccountCollection,
       "mscAtmIfNAcctAccountConnectionType": mscAtmIfNAcctAccountConnectionType,
       "mscAtmIfNAcctAccountClass": mscAtmIfNAcctAccountClass,
       "mscAtmIfNAcctServiceExchange": mscAtmIfNAcctServiceExchange,
       "mscAtmIfVpt": mscAtmIfVpt,
       "mscAtmIfVptRowStatusTable": mscAtmIfVptRowStatusTable,
       "mscAtmIfVptRowStatusEntry": mscAtmIfVptRowStatusEntry,
       "mscAtmIfVptRowStatus": mscAtmIfVptRowStatus,
       "mscAtmIfVptComponentName": mscAtmIfVptComponentName,
       "mscAtmIfVptStorageType": mscAtmIfVptStorageType,
       "mscAtmIfVptIndex": mscAtmIfVptIndex,
       "mscAtmIfVptVpd": mscAtmIfVptVpd,
       "mscAtmIfVptVpdRowStatusTable": mscAtmIfVptVpdRowStatusTable,
       "mscAtmIfVptVpdRowStatusEntry": mscAtmIfVptVpdRowStatusEntry,
       "mscAtmIfVptVpdRowStatus": mscAtmIfVptVpdRowStatus,
       "mscAtmIfVptVpdComponentName": mscAtmIfVptVpdComponentName,
       "mscAtmIfVptVpdStorageType": mscAtmIfVptVpdStorageType,
       "mscAtmIfVptVpdIndex": mscAtmIfVptVpdIndex,
       "mscAtmIfVptVpdTm": mscAtmIfVptVpdTm,
       "mscAtmIfVptVpdTmRowStatusTable": mscAtmIfVptVpdTmRowStatusTable,
       "mscAtmIfVptVpdTmRowStatusEntry": mscAtmIfVptVpdTmRowStatusEntry,
       "mscAtmIfVptVpdTmRowStatus": mscAtmIfVptVpdTmRowStatus,
       "mscAtmIfVptVpdTmComponentName": mscAtmIfVptVpdTmComponentName,
       "mscAtmIfVptVpdTmStorageType": mscAtmIfVptVpdTmStorageType,
       "mscAtmIfVptVpdTmIndex": mscAtmIfVptVpdTmIndex,
       "mscAtmIfVptVpdTmAbr": mscAtmIfVptVpdTmAbr,
       "mscAtmIfVptVpdTmAbrRowStatusTable": mscAtmIfVptVpdTmAbrRowStatusTable,
       "mscAtmIfVptVpdTmAbrRowStatusEntry": mscAtmIfVptVpdTmAbrRowStatusEntry,
       "mscAtmIfVptVpdTmAbrRowStatus": mscAtmIfVptVpdTmAbrRowStatus,
       "mscAtmIfVptVpdTmAbrComponentName": mscAtmIfVptVpdTmAbrComponentName,
       "mscAtmIfVptVpdTmAbrStorageType": mscAtmIfVptVpdTmAbrStorageType,
       "mscAtmIfVptVpdTmAbrIndex": mscAtmIfVptVpdTmAbrIndex,
       "mscAtmIfVptVpdTmAbrProvTable": mscAtmIfVptVpdTmAbrProvTable,
       "mscAtmIfVptVpdTmAbrProvEntry": mscAtmIfVptVpdTmAbrProvEntry,
       "mscAtmIfVptVpdTmAbrInitialCellRate": mscAtmIfVptVpdTmAbrInitialCellRate,
       "mscAtmIfVptVpdTmAbrTransientBufferExposure": mscAtmIfVptVpdTmAbrTransientBufferExposure,
       "mscAtmIfVptVpdTmAbrFixedRoundTripTime": mscAtmIfVptVpdTmAbrFixedRoundTripTime,
       "mscAtmIfVptVpdTmAbrRateDecreaseFactor": mscAtmIfVptVpdTmAbrRateDecreaseFactor,
       "mscAtmIfVptVpdTmAbrRateIncreaseFactor": mscAtmIfVptVpdTmAbrRateIncreaseFactor,
       "mscAtmIfVptVpdTmAbrMaxCellPerRmCell": mscAtmIfVptVpdTmAbrMaxCellPerRmCell,
       "mscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells": mscAtmIfVptVpdTmAbrMaxTimeBetweenRmCells,
       "mscAtmIfVptVpdTmAbrCutoffDecreaseFactor": mscAtmIfVptVpdTmAbrCutoffDecreaseFactor,
       "mscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor": mscAtmIfVptVpdTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVptVpdTmAbrDgcraMaximumDelay": mscAtmIfVptVpdTmAbrDgcraMaximumDelay,
       "mscAtmIfVptVpdTmAbrDgcraMinimumDelay": mscAtmIfVptVpdTmAbrDgcraMinimumDelay,
       "mscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor": mscAtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor,
       "mscAtmIfVptVpdTmAbrFarEndInitialCellRate": mscAtmIfVptVpdTmAbrFarEndInitialCellRate,
       "mscAtmIfVptVpdTmProvTable": mscAtmIfVptVpdTmProvTable,
       "mscAtmIfVptVpdTmProvEntry": mscAtmIfVptVpdTmProvEntry,
       "mscAtmIfVptVpdTmTxTrafficDescType": mscAtmIfVptVpdTmTxTrafficDescType,
       "mscAtmIfVptVpdTmFwdQosClass": mscAtmIfVptVpdTmFwdQosClass,
       "mscAtmIfVptVpdTmTxQueueLimit": mscAtmIfVptVpdTmTxQueueLimit,
       "mscAtmIfVptVpdTmHoldingPriority": mscAtmIfVptVpdTmHoldingPriority,
       "mscAtmIfVptVpdTmRxTrafficDescType": mscAtmIfVptVpdTmRxTrafficDescType,
       "mscAtmIfVptVpdTmBwdQosClass": mscAtmIfVptVpdTmBwdQosClass,
       "mscAtmIfVptVpdTmAtmServiceCategory": mscAtmIfVptVpdTmAtmServiceCategory,
       "mscAtmIfVptVpdTmTrafficShaping": mscAtmIfVptVpdTmTrafficShaping,
       "mscAtmIfVptVpdTmUnshapedTransmitQueueing": mscAtmIfVptVpdTmUnshapedTransmitQueueing,
       "mscAtmIfVptVpdTmWeight": mscAtmIfVptVpdTmWeight,
       "mscAtmIfVptVpdTmForceTagging": mscAtmIfVptVpdTmForceTagging,
       "mscAtmIfVptVpdTmUsageParameterControl": mscAtmIfVptVpdTmUsageParameterControl,
       "mscAtmIfVptVpdTmBearerClassBbc": mscAtmIfVptVpdTmBearerClassBbc,
       "mscAtmIfVptVpdTmTransferCapabilityBbc": mscAtmIfVptVpdTmTransferCapabilityBbc,
       "mscAtmIfVptVpdTmClippingBbc": mscAtmIfVptVpdTmClippingBbc,
       "mscAtmIfVptVpdTmBestEffort": mscAtmIfVptVpdTmBestEffort,
       "mscAtmIfVptVpdTmTxPacketWiseDiscard": mscAtmIfVptVpdTmTxPacketWiseDiscard,
       "mscAtmIfVptVpdTmRxPacketWiseDiscard": mscAtmIfVptVpdTmRxPacketWiseDiscard,
       "mscAtmIfVptVpdTmAbrConnectionType": mscAtmIfVptVpdTmAbrConnectionType,
       "mscAtmIfVptVpdTmTxTdpTable": mscAtmIfVptVpdTmTxTdpTable,
       "mscAtmIfVptVpdTmTxTdpEntry": mscAtmIfVptVpdTmTxTdpEntry,
       "mscAtmIfVptVpdTmTxTdpIndex": mscAtmIfVptVpdTmTxTdpIndex,
       "mscAtmIfVptVpdTmTxTdpValue": mscAtmIfVptVpdTmTxTdpValue,
       "mscAtmIfVptVpdTmRxTdpTable": mscAtmIfVptVpdTmRxTdpTable,
       "mscAtmIfVptVpdTmRxTdpEntry": mscAtmIfVptVpdTmRxTdpEntry,
       "mscAtmIfVptVpdTmRxTdpIndex": mscAtmIfVptVpdTmRxTdpIndex,
       "mscAtmIfVptVpdTmRxTdpValue": mscAtmIfVptVpdTmRxTdpValue,
       "mscAtmIfVptVpdTmFqpTable": mscAtmIfVptVpdTmFqpTable,
       "mscAtmIfVptVpdTmFqpEntry": mscAtmIfVptVpdTmFqpEntry,
       "mscAtmIfVptVpdTmFqpIndex": mscAtmIfVptVpdTmFqpIndex,
       "mscAtmIfVptVpdTmFqpValue": mscAtmIfVptVpdTmFqpValue,
       "mscAtmIfVptVpdTmBqpTable": mscAtmIfVptVpdTmBqpTable,
       "mscAtmIfVptVpdTmBqpEntry": mscAtmIfVptVpdTmBqpEntry,
       "mscAtmIfVptVpdTmBqpIndex": mscAtmIfVptVpdTmBqpIndex,
       "mscAtmIfVptVpdTmBqpValue": mscAtmIfVptVpdTmBqpValue,
       "mscAtmIfVptVpdLbkTable": mscAtmIfVptVpdLbkTable,
       "mscAtmIfVptVpdLbkEntry": mscAtmIfVptVpdLbkEntry,
       "mscAtmIfVptVpdSegLinkSideLoopback": mscAtmIfVptVpdSegLinkSideLoopback,
       "mscAtmIfVptVpdSegSwitchSideLoopback": mscAtmIfVptVpdSegSwitchSideLoopback,
       "mscAtmIfVptVpdEndToEndLoopback": mscAtmIfVptVpdEndToEndLoopback,
       "mscAtmIfVptVpdMCastConnectionType": mscAtmIfVptVpdMCastConnectionType,
       "mscAtmIfVptVpdTrafficTable": mscAtmIfVptVpdTrafficTable,
       "mscAtmIfVptVpdTrafficEntry": mscAtmIfVptVpdTrafficEntry,
       "mscAtmIfVptVpdTxTrafficDescType": mscAtmIfVptVpdTxTrafficDescType,
       "mscAtmIfVptVpdTxQosClass": mscAtmIfVptVpdTxQosClass,
       "mscAtmIfVptVpdFwdQosClass": mscAtmIfVptVpdFwdQosClass,
       "mscAtmIfVptVpdHoldingPriority": mscAtmIfVptVpdHoldingPriority,
       "mscAtmIfVptVpdRxTrafficDescType": mscAtmIfVptVpdRxTrafficDescType,
       "mscAtmIfVptVpdRxQosClass": mscAtmIfVptVpdRxQosClass,
       "mscAtmIfVptVpdBwdQosClass": mscAtmIfVptVpdBwdQosClass,
       "mscAtmIfVptVpdAtmServiceCategory": mscAtmIfVptVpdAtmServiceCategory,
       "mscAtmIfVptVpdTrafficShaping": mscAtmIfVptVpdTrafficShaping,
       "mscAtmIfVptVpdUnshapedTransmitQueueing": mscAtmIfVptVpdUnshapedTransmitQueueing,
       "mscAtmIfVptVpdUsageParameterControl": mscAtmIfVptVpdUsageParameterControl,
       "mscAtmIfVptVpdBearerClassBbc": mscAtmIfVptVpdBearerClassBbc,
       "mscAtmIfVptVpdTransferCapabilityBbc": mscAtmIfVptVpdTransferCapabilityBbc,
       "mscAtmIfVptVpdClippingBbc": mscAtmIfVptVpdClippingBbc,
       "mscAtmIfVptVpdBestEffort": mscAtmIfVptVpdBestEffort,
       "mscAtmIfVptVpdFwdFrameDiscard": mscAtmIfVptVpdFwdFrameDiscard,
       "mscAtmIfVptVpdBwdFrameDiscard": mscAtmIfVptVpdBwdFrameDiscard,
       "mscAtmIfVptVpdAcctTable": mscAtmIfVptVpdAcctTable,
       "mscAtmIfVptVpdAcctEntry": mscAtmIfVptVpdAcctEntry,
       "mscAtmIfVptVpdCorrelationTag": mscAtmIfVptVpdCorrelationTag,
       "mscAtmIfVptVpdProvTable": mscAtmIfVptVpdProvTable,
       "mscAtmIfVptVpdProvEntry": mscAtmIfVptVpdProvEntry,
       "mscAtmIfVptVpdVptType": mscAtmIfVptVpdVptType,
       "mscAtmIfVptVpdTxTdpTable": mscAtmIfVptVpdTxTdpTable,
       "mscAtmIfVptVpdTxTdpEntry": mscAtmIfVptVpdTxTdpEntry,
       "mscAtmIfVptVpdTxTdpIndex": mscAtmIfVptVpdTxTdpIndex,
       "mscAtmIfVptVpdTxTdpValue": mscAtmIfVptVpdTxTdpValue,
       "mscAtmIfVptVpdRxTdpTable": mscAtmIfVptVpdRxTdpTable,
       "mscAtmIfVptVpdRxTdpEntry": mscAtmIfVptVpdRxTdpEntry,
       "mscAtmIfVptVpdRxTdpIndex": mscAtmIfVptVpdRxTdpIndex,
       "mscAtmIfVptVpdRxTdpValue": mscAtmIfVptVpdRxTdpValue,
       "mscAtmIfVptVpdFqpTable": mscAtmIfVptVpdFqpTable,
       "mscAtmIfVptVpdFqpEntry": mscAtmIfVptVpdFqpEntry,
       "mscAtmIfVptVpdFqpIndex": mscAtmIfVptVpdFqpIndex,
       "mscAtmIfVptVpdFqpValue": mscAtmIfVptVpdFqpValue,
       "mscAtmIfVptVpdBqpTable": mscAtmIfVptVpdBqpTable,
       "mscAtmIfVptVpdBqpEntry": mscAtmIfVptVpdBqpEntry,
       "mscAtmIfVptVpdBqpIndex": mscAtmIfVptVpdBqpIndex,
       "mscAtmIfVptVpdBqpValue": mscAtmIfVptVpdBqpValue,
       "mscAtmIfVptCA": mscAtmIfVptCA,
       "mscAtmIfVptCARowStatusTable": mscAtmIfVptCARowStatusTable,
       "mscAtmIfVptCARowStatusEntry": mscAtmIfVptCARowStatusEntry,
       "mscAtmIfVptCARowStatus": mscAtmIfVptCARowStatus,
       "mscAtmIfVptCAComponentName": mscAtmIfVptCAComponentName,
       "mscAtmIfVptCAStorageType": mscAtmIfVptCAStorageType,
       "mscAtmIfVptCAIndex": mscAtmIfVptCAIndex,
       "mscAtmIfVptCACbr": mscAtmIfVptCACbr,
       "mscAtmIfVptCACbrRowStatusTable": mscAtmIfVptCACbrRowStatusTable,
       "mscAtmIfVptCACbrRowStatusEntry": mscAtmIfVptCACbrRowStatusEntry,
       "mscAtmIfVptCACbrRowStatus": mscAtmIfVptCACbrRowStatus,
       "mscAtmIfVptCACbrComponentName": mscAtmIfVptCACbrComponentName,
       "mscAtmIfVptCACbrStorageType": mscAtmIfVptCACbrStorageType,
       "mscAtmIfVptCACbrIndex": mscAtmIfVptCACbrIndex,
       "mscAtmIfVptCACbrProvTable": mscAtmIfVptCACbrProvTable,
       "mscAtmIfVptCACbrProvEntry": mscAtmIfVptCACbrProvEntry,
       "mscAtmIfVptCACbrPool": mscAtmIfVptCACbrPool,
       "mscAtmIfVptCACbrCdvt": mscAtmIfVptCACbrCdvt,
       "mscAtmIfVptCACbrCdv": mscAtmIfVptCACbrCdv,
       "mscAtmIfVptCACbrMaxCtd": mscAtmIfVptCACbrMaxCtd,
       "mscAtmIfVptCACbrCellLossRatio": mscAtmIfVptCACbrCellLossRatio,
       "mscAtmIfVptCARtVbr": mscAtmIfVptCARtVbr,
       "mscAtmIfVptCARtVbrRowStatusTable": mscAtmIfVptCARtVbrRowStatusTable,
       "mscAtmIfVptCARtVbrRowStatusEntry": mscAtmIfVptCARtVbrRowStatusEntry,
       "mscAtmIfVptCARtVbrRowStatus": mscAtmIfVptCARtVbrRowStatus,
       "mscAtmIfVptCARtVbrComponentName": mscAtmIfVptCARtVbrComponentName,
       "mscAtmIfVptCARtVbrStorageType": mscAtmIfVptCARtVbrStorageType,
       "mscAtmIfVptCARtVbrIndex": mscAtmIfVptCARtVbrIndex,
       "mscAtmIfVptCARtVbrProvTable": mscAtmIfVptCARtVbrProvTable,
       "mscAtmIfVptCARtVbrProvEntry": mscAtmIfVptCARtVbrProvEntry,
       "mscAtmIfVptCARtVbrPool": mscAtmIfVptCARtVbrPool,
       "mscAtmIfVptCARtVbrCdv": mscAtmIfVptCARtVbrCdv,
       "mscAtmIfVptCARtVbrMaxCtd": mscAtmIfVptCARtVbrMaxCtd,
       "mscAtmIfVptCARtVbrCellLossRatio": mscAtmIfVptCARtVbrCellLossRatio,
       "mscAtmIfVptCANrtVbr": mscAtmIfVptCANrtVbr,
       "mscAtmIfVptCANrtVbrRowStatusTable": mscAtmIfVptCANrtVbrRowStatusTable,
       "mscAtmIfVptCANrtVbrRowStatusEntry": mscAtmIfVptCANrtVbrRowStatusEntry,
       "mscAtmIfVptCANrtVbrRowStatus": mscAtmIfVptCANrtVbrRowStatus,
       "mscAtmIfVptCANrtVbrComponentName": mscAtmIfVptCANrtVbrComponentName,
       "mscAtmIfVptCANrtVbrStorageType": mscAtmIfVptCANrtVbrStorageType,
       "mscAtmIfVptCANrtVbrIndex": mscAtmIfVptCANrtVbrIndex,
       "mscAtmIfVptCANrtVbrProvTable": mscAtmIfVptCANrtVbrProvTable,
       "mscAtmIfVptCANrtVbrProvEntry": mscAtmIfVptCANrtVbrProvEntry,
       "mscAtmIfVptCANrtVbrPool": mscAtmIfVptCANrtVbrPool,
       "mscAtmIfVptCANrtVbrCellLossRatio": mscAtmIfVptCANrtVbrCellLossRatio,
       "mscAtmIfVptCAAbr": mscAtmIfVptCAAbr,
       "mscAtmIfVptCAAbrRowStatusTable": mscAtmIfVptCAAbrRowStatusTable,
       "mscAtmIfVptCAAbrRowStatusEntry": mscAtmIfVptCAAbrRowStatusEntry,
       "mscAtmIfVptCAAbrRowStatus": mscAtmIfVptCAAbrRowStatus,
       "mscAtmIfVptCAAbrComponentName": mscAtmIfVptCAAbrComponentName,
       "mscAtmIfVptCAAbrStorageType": mscAtmIfVptCAAbrStorageType,
       "mscAtmIfVptCAAbrIndex": mscAtmIfVptCAAbrIndex,
       "mscAtmIfVptCAAbrProvTable": mscAtmIfVptCAAbrProvTable,
       "mscAtmIfVptCAAbrProvEntry": mscAtmIfVptCAAbrProvEntry,
       "mscAtmIfVptCAAbrPool": mscAtmIfVptCAAbrPool,
       "mscAtmIfVptCAUbr": mscAtmIfVptCAUbr,
       "mscAtmIfVptCAUbrRowStatusTable": mscAtmIfVptCAUbrRowStatusTable,
       "mscAtmIfVptCAUbrRowStatusEntry": mscAtmIfVptCAUbrRowStatusEntry,
       "mscAtmIfVptCAUbrRowStatus": mscAtmIfVptCAUbrRowStatus,
       "mscAtmIfVptCAUbrComponentName": mscAtmIfVptCAUbrComponentName,
       "mscAtmIfVptCAUbrStorageType": mscAtmIfVptCAUbrStorageType,
       "mscAtmIfVptCAUbrIndex": mscAtmIfVptCAUbrIndex,
       "mscAtmIfVptCAUbrProvTable": mscAtmIfVptCAUbrProvTable,
       "mscAtmIfVptCAUbrProvEntry": mscAtmIfVptCAUbrProvEntry,
       "mscAtmIfVptCAUbrMaxVccs": mscAtmIfVptCAUbrMaxVccs,
       "mscAtmIfVptCAUbrPool": mscAtmIfVptCAUbrPool,
       "mscAtmIfVptCAUbrMinimumCellRate": mscAtmIfVptCAUbrMinimumCellRate,
       "mscAtmIfVptCAUbrOperTable": mscAtmIfVptCAUbrOperTable,
       "mscAtmIfVptCAUbrOperEntry": mscAtmIfVptCAUbrOperEntry,
       "mscAtmIfVptCAUbrVccUsage": mscAtmIfVptCAUbrVccUsage,
       "mscAtmIfVptCAProvTable": mscAtmIfVptCAProvTable,
       "mscAtmIfVptCAProvEntry": mscAtmIfVptCAProvEntry,
       "mscAtmIfVptCAMaxVccs": mscAtmIfVptCAMaxVccs,
       "mscAtmIfVptCAPermittedAtmServiceCategories": mscAtmIfVptCAPermittedAtmServiceCategories,
       "mscAtmIfVptCAOperTable": mscAtmIfVptCAOperTable,
       "mscAtmIfVptCAOperEntry": mscAtmIfVptCAOperEntry,
       "mscAtmIfVptCAActualMaxVccs": mscAtmIfVptCAActualMaxVccs,
       "mscAtmIfVptCAPermanentVccs": mscAtmIfVptCAPermanentVccs,
       "mscAtmIfVptCASwitchedVccs": mscAtmIfVptCASwitchedVccs,
       "mscAtmIfVptCATroubledVccs": mscAtmIfVptCATroubledVccs,
       "mscAtmIfVptCAConnectionPoolUsage": mscAtmIfVptCAConnectionPoolUsage,
       "mscAtmIfVptCAPoolAvailBwTable": mscAtmIfVptCAPoolAvailBwTable,
       "mscAtmIfVptCAPoolAvailBwEntry": mscAtmIfVptCAPoolAvailBwEntry,
       "mscAtmIfVptCAPoolAvailBwIndex": mscAtmIfVptCAPoolAvailBwIndex,
       "mscAtmIfVptCAPoolAvailBwValue": mscAtmIfVptCAPoolAvailBwValue,
       "mscAtmIfVptCABwPoolTable": mscAtmIfVptCABwPoolTable,
       "mscAtmIfVptCABwPoolEntry": mscAtmIfVptCABwPoolEntry,
       "mscAtmIfVptCABwPoolIndex": mscAtmIfVptCABwPoolIndex,
       "mscAtmIfVptCABwPoolValue": mscAtmIfVptCABwPoolValue,
       "mscAtmIfVptCAPoolProvBwTable": mscAtmIfVptCAPoolProvBwTable,
       "mscAtmIfVptCAPoolProvBwEntry": mscAtmIfVptCAPoolProvBwEntry,
       "mscAtmIfVptCAPoolProvBwIndex": mscAtmIfVptCAPoolProvBwIndex,
       "mscAtmIfVptCAPoolProvBwValue": mscAtmIfVptCAPoolProvBwValue,
       "mscAtmIfVptCAPoolRequBwTable": mscAtmIfVptCAPoolRequBwTable,
       "mscAtmIfVptCAPoolRequBwEntry": mscAtmIfVptCAPoolRequBwEntry,
       "mscAtmIfVptCAPoolRequBwIndex": mscAtmIfVptCAPoolRequBwIndex,
       "mscAtmIfVptCAPoolRequBwValue": mscAtmIfVptCAPoolRequBwValue,
       "mscAtmIfVptCAPoolAdmitBwTable": mscAtmIfVptCAPoolAdmitBwTable,
       "mscAtmIfVptCAPoolAdmitBwEntry": mscAtmIfVptCAPoolAdmitBwEntry,
       "mscAtmIfVptCAPoolAdmitBwIndex": mscAtmIfVptCAPoolAdmitBwIndex,
       "mscAtmIfVptCAPoolAdmitBwValue": mscAtmIfVptCAPoolAdmitBwValue,
       "mscAtmIfVptCAPoolAdmConnsTable": mscAtmIfVptCAPoolAdmConnsTable,
       "mscAtmIfVptCAPoolAdmConnsEntry": mscAtmIfVptCAPoolAdmConnsEntry,
       "mscAtmIfVptCAPoolAdmConnsIndex": mscAtmIfVptCAPoolAdmConnsIndex,
       "mscAtmIfVptCAPoolAdmConnsValue": mscAtmIfVptCAPoolAdmConnsValue,
       "mscAtmIfVptCAPoolWaitAdmConnsTable": mscAtmIfVptCAPoolWaitAdmConnsTable,
       "mscAtmIfVptCAPoolWaitAdmConnsEntry": mscAtmIfVptCAPoolWaitAdmConnsEntry,
       "mscAtmIfVptCAPoolWaitAdmConnsIndex": mscAtmIfVptCAPoolWaitAdmConnsIndex,
       "mscAtmIfVptCAPoolWaitAdmConnsValue": mscAtmIfVptCAPoolWaitAdmConnsValue,
       "mscAtmIfVptTm": mscAtmIfVptTm,
       "mscAtmIfVptTmRowStatusTable": mscAtmIfVptTmRowStatusTable,
       "mscAtmIfVptTmRowStatusEntry": mscAtmIfVptTmRowStatusEntry,
       "mscAtmIfVptTmRowStatus": mscAtmIfVptTmRowStatus,
       "mscAtmIfVptTmComponentName": mscAtmIfVptTmComponentName,
       "mscAtmIfVptTmStorageType": mscAtmIfVptTmStorageType,
       "mscAtmIfVptTmIndex": mscAtmIfVptTmIndex,
       "mscAtmIfVptTmAbr": mscAtmIfVptTmAbr,
       "mscAtmIfVptTmAbrRowStatusTable": mscAtmIfVptTmAbrRowStatusTable,
       "mscAtmIfVptTmAbrRowStatusEntry": mscAtmIfVptTmAbrRowStatusEntry,
       "mscAtmIfVptTmAbrRowStatus": mscAtmIfVptTmAbrRowStatus,
       "mscAtmIfVptTmAbrComponentName": mscAtmIfVptTmAbrComponentName,
       "mscAtmIfVptTmAbrStorageType": mscAtmIfVptTmAbrStorageType,
       "mscAtmIfVptTmAbrIndex": mscAtmIfVptTmAbrIndex,
       "mscAtmIfVptTmAbrOperTable": mscAtmIfVptTmAbrOperTable,
       "mscAtmIfVptTmAbrOperEntry": mscAtmIfVptTmAbrOperEntry,
       "mscAtmIfVptTmAbrInitialCellRate": mscAtmIfVptTmAbrInitialCellRate,
       "mscAtmIfVptTmAbrTransientBufferExposure": mscAtmIfVptTmAbrTransientBufferExposure,
       "mscAtmIfVptTmAbrFixedRoundTripTime": mscAtmIfVptTmAbrFixedRoundTripTime,
       "mscAtmIfVptTmAbrRateDecreaseFactor": mscAtmIfVptTmAbrRateDecreaseFactor,
       "mscAtmIfVptTmAbrRateIncreaseFactor": mscAtmIfVptTmAbrRateIncreaseFactor,
       "mscAtmIfVptTmAbrMaxCellPerRmCell": mscAtmIfVptTmAbrMaxCellPerRmCell,
       "mscAtmIfVptTmAbrMaxTimeBetweenRmCell": mscAtmIfVptTmAbrMaxTimeBetweenRmCell,
       "mscAtmIfVptTmAbrCutoffDecreaseFactor": mscAtmIfVptTmAbrCutoffDecreaseFactor,
       "mscAtmIfVptTmAbrAcrDecreaseTimeFactor": mscAtmIfVptTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVptTmAbrForwardRmCellLimit": mscAtmIfVptTmAbrForwardRmCellLimit,
       "mscAtmIfVptTmAbrTxRateChangeInfo": mscAtmIfVptTmAbrTxRateChangeInfo,
       "mscAtmIfVptTmAbrAcrRateChangeInfo": mscAtmIfVptTmAbrAcrRateChangeInfo,
       "mscAtmIfVptTmAbrTxFwdRmCells": mscAtmIfVptTmAbrTxFwdRmCells,
       "mscAtmIfVptTmAbrRxEfci": mscAtmIfVptTmAbrRxEfci,
       "mscAtmIfVptTmOperTable": mscAtmIfVptTmOperTable,
       "mscAtmIfVptTmOperEntry": mscAtmIfVptTmOperEntry,
       "mscAtmIfVptTmTxTrafficDescType": mscAtmIfVptTmTxTrafficDescType,
       "mscAtmIfVptTmTxQosClass": mscAtmIfVptTmTxQosClass,
       "mscAtmIfVptTmTxQueueLength": mscAtmIfVptTmTxQueueLength,
       "mscAtmIfVptTmTxQueueCongestionState": mscAtmIfVptTmTxQueueCongestionState,
       "mscAtmIfVptTmHoldingPriority": mscAtmIfVptTmHoldingPriority,
       "mscAtmIfVptTmRxTrafficDescType": mscAtmIfVptTmRxTrafficDescType,
       "mscAtmIfVptTmRxQosClass": mscAtmIfVptTmRxQosClass,
       "mscAtmIfVptTmAtmServiceCategory": mscAtmIfVptTmAtmServiceCategory,
       "mscAtmIfVptTmTrafficShaping": mscAtmIfVptTmTrafficShaping,
       "mscAtmIfVptTmBearerClassBbc": mscAtmIfVptTmBearerClassBbc,
       "mscAtmIfVptTmTransferCapabilityBbc": mscAtmIfVptTmTransferCapabilityBbc,
       "mscAtmIfVptTmClippingBbc": mscAtmIfVptTmClippingBbc,
       "mscAtmIfVptTmUnshapedTransmitQueueing": mscAtmIfVptTmUnshapedTransmitQueueing,
       "mscAtmIfVptTmBestEffort": mscAtmIfVptTmBestEffort,
       "mscAtmIfVptTmForceTagging": mscAtmIfVptTmForceTagging,
       "mscAtmIfVptTmWeight": mscAtmIfVptTmWeight,
       "mscAtmIfVptTmUsageParameterControl": mscAtmIfVptTmUsageParameterControl,
       "mscAtmIfVptTmTxPacketWiseDiscard": mscAtmIfVptTmTxPacketWiseDiscard,
       "mscAtmIfVptTmRxPacketWiseDiscard": mscAtmIfVptTmRxPacketWiseDiscard,
       "mscAtmIfVptTmBandwidthElastic": mscAtmIfVptTmBandwidthElastic,
       "mscAtmIfVptTmBandwidthReduction": mscAtmIfVptTmBandwidthReduction,
       "mscAtmIfVptTmAbrConnectionType": mscAtmIfVptTmAbrConnectionType,
       "mscAtmIfVptTmTxTdpTable": mscAtmIfVptTmTxTdpTable,
       "mscAtmIfVptTmTxTdpEntry": mscAtmIfVptTmTxTdpEntry,
       "mscAtmIfVptTmTxTdpIndex": mscAtmIfVptTmTxTdpIndex,
       "mscAtmIfVptTmTxTdpValue": mscAtmIfVptTmTxTdpValue,
       "mscAtmIfVptTmTxQThreshTable": mscAtmIfVptTmTxQThreshTable,
       "mscAtmIfVptTmTxQThreshEntry": mscAtmIfVptTmTxQThreshEntry,
       "mscAtmIfVptTmTxQThreshIndex": mscAtmIfVptTmTxQThreshIndex,
       "mscAtmIfVptTmTxQThreshValue": mscAtmIfVptTmTxQThreshValue,
       "mscAtmIfVptTmRxTdpTable": mscAtmIfVptTmRxTdpTable,
       "mscAtmIfVptTmRxTdpEntry": mscAtmIfVptTmRxTdpEntry,
       "mscAtmIfVptTmRxTdpIndex": mscAtmIfVptTmRxTdpIndex,
       "mscAtmIfVptTmRxTdpValue": mscAtmIfVptTmRxTdpValue,
       "mscAtmIfVptTmTqpTable": mscAtmIfVptTmTqpTable,
       "mscAtmIfVptTmTqpEntry": mscAtmIfVptTmTqpEntry,
       "mscAtmIfVptTmTqpIndex": mscAtmIfVptTmTqpIndex,
       "mscAtmIfVptTmTqpValue": mscAtmIfVptTmTqpValue,
       "mscAtmIfVptTmRqpTable": mscAtmIfVptTmRqpTable,
       "mscAtmIfVptTmRqpEntry": mscAtmIfVptTmRqpEntry,
       "mscAtmIfVptTmRqpIndex": mscAtmIfVptTmRqpIndex,
       "mscAtmIfVptTmRqpValue": mscAtmIfVptTmRqpValue,
       "mscAtmIfVptVcc": mscAtmIfVptVcc,
       "mscAtmIfVptVccRowStatusTable": mscAtmIfVptVccRowStatusTable,
       "mscAtmIfVptVccRowStatusEntry": mscAtmIfVptVccRowStatusEntry,
       "mscAtmIfVptVccRowStatus": mscAtmIfVptVccRowStatus,
       "mscAtmIfVptVccComponentName": mscAtmIfVptVccComponentName,
       "mscAtmIfVptVccStorageType": mscAtmIfVptVccStorageType,
       "mscAtmIfVptVccIndex": mscAtmIfVptVccIndex,
       "mscAtmIfVptVccVcd": mscAtmIfVptVccVcd,
       "mscAtmIfVptVccVcdRowStatusTable": mscAtmIfVptVccVcdRowStatusTable,
       "mscAtmIfVptVccVcdRowStatusEntry": mscAtmIfVptVccVcdRowStatusEntry,
       "mscAtmIfVptVccVcdRowStatus": mscAtmIfVptVccVcdRowStatus,
       "mscAtmIfVptVccVcdComponentName": mscAtmIfVptVccVcdComponentName,
       "mscAtmIfVptVccVcdStorageType": mscAtmIfVptVccVcdStorageType,
       "mscAtmIfVptVccVcdIndex": mscAtmIfVptVccVcdIndex,
       "mscAtmIfVptVccVcdTm": mscAtmIfVptVccVcdTm,
       "mscAtmIfVptVccVcdTmRowStatusTable": mscAtmIfVptVccVcdTmRowStatusTable,
       "mscAtmIfVptVccVcdTmRowStatusEntry": mscAtmIfVptVccVcdTmRowStatusEntry,
       "mscAtmIfVptVccVcdTmRowStatus": mscAtmIfVptVccVcdTmRowStatus,
       "mscAtmIfVptVccVcdTmComponentName": mscAtmIfVptVccVcdTmComponentName,
       "mscAtmIfVptVccVcdTmStorageType": mscAtmIfVptVccVcdTmStorageType,
       "mscAtmIfVptVccVcdTmIndex": mscAtmIfVptVccVcdTmIndex,
       "mscAtmIfVptVccVcdTmAbr": mscAtmIfVptVccVcdTmAbr,
       "mscAtmIfVptVccVcdTmAbrRowStatusTable": mscAtmIfVptVccVcdTmAbrRowStatusTable,
       "mscAtmIfVptVccVcdTmAbrRowStatusEntry": mscAtmIfVptVccVcdTmAbrRowStatusEntry,
       "mscAtmIfVptVccVcdTmAbrRowStatus": mscAtmIfVptVccVcdTmAbrRowStatus,
       "mscAtmIfVptVccVcdTmAbrComponentName": mscAtmIfVptVccVcdTmAbrComponentName,
       "mscAtmIfVptVccVcdTmAbrStorageType": mscAtmIfVptVccVcdTmAbrStorageType,
       "mscAtmIfVptVccVcdTmAbrIndex": mscAtmIfVptVccVcdTmAbrIndex,
       "mscAtmIfVptVccVcdTmAbrProvTable": mscAtmIfVptVccVcdTmAbrProvTable,
       "mscAtmIfVptVccVcdTmAbrProvEntry": mscAtmIfVptVccVcdTmAbrProvEntry,
       "mscAtmIfVptVccVcdTmAbrInitialCellRate": mscAtmIfVptVccVcdTmAbrInitialCellRate,
       "mscAtmIfVptVccVcdTmAbrTransientBufferExposure": mscAtmIfVptVccVcdTmAbrTransientBufferExposure,
       "mscAtmIfVptVccVcdTmAbrFixedRoundTripTime": mscAtmIfVptVccVcdTmAbrFixedRoundTripTime,
       "mscAtmIfVptVccVcdTmAbrRateDecreaseFactor": mscAtmIfVptVccVcdTmAbrRateDecreaseFactor,
       "mscAtmIfVptVccVcdTmAbrRateIncreaseFactor": mscAtmIfVptVccVcdTmAbrRateIncreaseFactor,
       "mscAtmIfVptVccVcdTmAbrMaxCellPerRmCell": mscAtmIfVptVccVcdTmAbrMaxCellPerRmCell,
       "mscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells": mscAtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells,
       "mscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor": mscAtmIfVptVccVcdTmAbrCutoffDecreaseFactor,
       "mscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor": mscAtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVptVccVcdTmAbrDgcraMaximumDelay": mscAtmIfVptVccVcdTmAbrDgcraMaximumDelay,
       "mscAtmIfVptVccVcdTmAbrDgcraMinimumDelay": mscAtmIfVptVccVcdTmAbrDgcraMinimumDelay,
       "mscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor": mscAtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor,
       "mscAtmIfVptVccVcdTmAbrFarEndInitialCellRate": mscAtmIfVptVccVcdTmAbrFarEndInitialCellRate,
       "mscAtmIfVptVccVcdTmProvTable": mscAtmIfVptVccVcdTmProvTable,
       "mscAtmIfVptVccVcdTmProvEntry": mscAtmIfVptVccVcdTmProvEntry,
       "mscAtmIfVptVccVcdTmTxTrafficDescType": mscAtmIfVptVccVcdTmTxTrafficDescType,
       "mscAtmIfVptVccVcdTmFwdQosClass": mscAtmIfVptVccVcdTmFwdQosClass,
       "mscAtmIfVptVccVcdTmTxQueueLimit": mscAtmIfVptVccVcdTmTxQueueLimit,
       "mscAtmIfVptVccVcdTmHoldingPriority": mscAtmIfVptVccVcdTmHoldingPriority,
       "mscAtmIfVptVccVcdTmRxTrafficDescType": mscAtmIfVptVccVcdTmRxTrafficDescType,
       "mscAtmIfVptVccVcdTmBwdQosClass": mscAtmIfVptVccVcdTmBwdQosClass,
       "mscAtmIfVptVccVcdTmAtmServiceCategory": mscAtmIfVptVccVcdTmAtmServiceCategory,
       "mscAtmIfVptVccVcdTmTrafficShaping": mscAtmIfVptVccVcdTmTrafficShaping,
       "mscAtmIfVptVccVcdTmUnshapedTransmitQueueing": mscAtmIfVptVccVcdTmUnshapedTransmitQueueing,
       "mscAtmIfVptVccVcdTmWeight": mscAtmIfVptVccVcdTmWeight,
       "mscAtmIfVptVccVcdTmForceTagging": mscAtmIfVptVccVcdTmForceTagging,
       "mscAtmIfVptVccVcdTmUsageParameterControl": mscAtmIfVptVccVcdTmUsageParameterControl,
       "mscAtmIfVptVccVcdTmBearerClassBbc": mscAtmIfVptVccVcdTmBearerClassBbc,
       "mscAtmIfVptVccVcdTmTransferCapabilityBbc": mscAtmIfVptVccVcdTmTransferCapabilityBbc,
       "mscAtmIfVptVccVcdTmClippingBbc": mscAtmIfVptVccVcdTmClippingBbc,
       "mscAtmIfVptVccVcdTmBestEffort": mscAtmIfVptVccVcdTmBestEffort,
       "mscAtmIfVptVccVcdTmTxPacketWiseDiscard": mscAtmIfVptVccVcdTmTxPacketWiseDiscard,
       "mscAtmIfVptVccVcdTmRxPacketWiseDiscard": mscAtmIfVptVccVcdTmRxPacketWiseDiscard,
       "mscAtmIfVptVccVcdTmAbrConnectionType": mscAtmIfVptVccVcdTmAbrConnectionType,
       "mscAtmIfVptVccVcdTmTxTdpTable": mscAtmIfVptVccVcdTmTxTdpTable,
       "mscAtmIfVptVccVcdTmTxTdpEntry": mscAtmIfVptVccVcdTmTxTdpEntry,
       "mscAtmIfVptVccVcdTmTxTdpIndex": mscAtmIfVptVccVcdTmTxTdpIndex,
       "mscAtmIfVptVccVcdTmTxTdpValue": mscAtmIfVptVccVcdTmTxTdpValue,
       "mscAtmIfVptVccVcdTmRxTdpTable": mscAtmIfVptVccVcdTmRxTdpTable,
       "mscAtmIfVptVccVcdTmRxTdpEntry": mscAtmIfVptVccVcdTmRxTdpEntry,
       "mscAtmIfVptVccVcdTmRxTdpIndex": mscAtmIfVptVccVcdTmRxTdpIndex,
       "mscAtmIfVptVccVcdTmRxTdpValue": mscAtmIfVptVccVcdTmRxTdpValue,
       "mscAtmIfVptVccVcdTmFqpTable": mscAtmIfVptVccVcdTmFqpTable,
       "mscAtmIfVptVccVcdTmFqpEntry": mscAtmIfVptVccVcdTmFqpEntry,
       "mscAtmIfVptVccVcdTmFqpIndex": mscAtmIfVptVccVcdTmFqpIndex,
       "mscAtmIfVptVccVcdTmFqpValue": mscAtmIfVptVccVcdTmFqpValue,
       "mscAtmIfVptVccVcdTmBqpTable": mscAtmIfVptVccVcdTmBqpTable,
       "mscAtmIfVptVccVcdTmBqpEntry": mscAtmIfVptVccVcdTmBqpEntry,
       "mscAtmIfVptVccVcdTmBqpIndex": mscAtmIfVptVccVcdTmBqpIndex,
       "mscAtmIfVptVccVcdTmBqpValue": mscAtmIfVptVccVcdTmBqpValue,
       "mscAtmIfVptVccVcdPm": mscAtmIfVptVccVcdPm,
       "mscAtmIfVptVccVcdPmRowStatusTable": mscAtmIfVptVccVcdPmRowStatusTable,
       "mscAtmIfVptVccVcdPmRowStatusEntry": mscAtmIfVptVccVcdPmRowStatusEntry,
       "mscAtmIfVptVccVcdPmRowStatus": mscAtmIfVptVccVcdPmRowStatus,
       "mscAtmIfVptVccVcdPmComponentName": mscAtmIfVptVccVcdPmComponentName,
       "mscAtmIfVptVccVcdPmStorageType": mscAtmIfVptVccVcdPmStorageType,
       "mscAtmIfVptVccVcdPmIndex": mscAtmIfVptVccVcdPmIndex,
       "mscAtmIfVptVccVcdPmProvTable": mscAtmIfVptVccVcdPmProvTable,
       "mscAtmIfVptVccVcdPmProvEntry": mscAtmIfVptVccVcdPmProvEntry,
       "mscAtmIfVptVccVcdPmSegSwitchSideMeasurement": mscAtmIfVptVccVcdPmSegSwitchSideMeasurement,
       "mscAtmIfVptVccVcdPmSegLinkSideMeasurement": mscAtmIfVptVccVcdPmSegLinkSideMeasurement,
       "mscAtmIfVptVccVcdPmControlMode": mscAtmIfVptVccVcdPmControlMode,
       "mscAtmIfVptVccVcdLbkTable": mscAtmIfVptVccVcdLbkTable,
       "mscAtmIfVptVccVcdLbkEntry": mscAtmIfVptVccVcdLbkEntry,
       "mscAtmIfVptVccVcdSegLinkSideLoopback": mscAtmIfVptVccVcdSegLinkSideLoopback,
       "mscAtmIfVptVccVcdSegSwitchSideLoopback": mscAtmIfVptVccVcdSegSwitchSideLoopback,
       "mscAtmIfVptVccVcdEndToEndLoopback": mscAtmIfVptVccVcdEndToEndLoopback,
       "mscAtmIfVptVccVcdMCastConnectionType": mscAtmIfVptVccVcdMCastConnectionType,
       "mscAtmIfVptVccVcdTrafficTable": mscAtmIfVptVccVcdTrafficTable,
       "mscAtmIfVptVccVcdTrafficEntry": mscAtmIfVptVccVcdTrafficEntry,
       "mscAtmIfVptVccVcdTxTrafficDescType": mscAtmIfVptVccVcdTxTrafficDescType,
       "mscAtmIfVptVccVcdTxQosClass": mscAtmIfVptVccVcdTxQosClass,
       "mscAtmIfVptVccVcdFwdQosClass": mscAtmIfVptVccVcdFwdQosClass,
       "mscAtmIfVptVccVcdHoldingPriority": mscAtmIfVptVccVcdHoldingPriority,
       "mscAtmIfVptVccVcdRxTrafficDescType": mscAtmIfVptVccVcdRxTrafficDescType,
       "mscAtmIfVptVccVcdRxQosClass": mscAtmIfVptVccVcdRxQosClass,
       "mscAtmIfVptVccVcdBwdQosClass": mscAtmIfVptVccVcdBwdQosClass,
       "mscAtmIfVptVccVcdAtmServiceCategory": mscAtmIfVptVccVcdAtmServiceCategory,
       "mscAtmIfVptVccVcdTrafficShaping": mscAtmIfVptVccVcdTrafficShaping,
       "mscAtmIfVptVccVcdUnshapedTransmitQueueing": mscAtmIfVptVccVcdUnshapedTransmitQueueing,
       "mscAtmIfVptVccVcdUsageParameterControl": mscAtmIfVptVccVcdUsageParameterControl,
       "mscAtmIfVptVccVcdBearerClassBbc": mscAtmIfVptVccVcdBearerClassBbc,
       "mscAtmIfVptVccVcdTransferCapabilityBbc": mscAtmIfVptVccVcdTransferCapabilityBbc,
       "mscAtmIfVptVccVcdClippingBbc": mscAtmIfVptVccVcdClippingBbc,
       "mscAtmIfVptVccVcdBestEffort": mscAtmIfVptVccVcdBestEffort,
       "mscAtmIfVptVccVcdFwdFrameDiscard": mscAtmIfVptVccVcdFwdFrameDiscard,
       "mscAtmIfVptVccVcdBwdFrameDiscard": mscAtmIfVptVccVcdBwdFrameDiscard,
       "mscAtmIfVptVccVcdAcctTable": mscAtmIfVptVccVcdAcctTable,
       "mscAtmIfVptVccVcdAcctEntry": mscAtmIfVptVccVcdAcctEntry,
       "mscAtmIfVptVccVcdCorrelationTag": mscAtmIfVptVccVcdCorrelationTag,
       "mscAtmIfVptVccVcdTxTdpTable": mscAtmIfVptVccVcdTxTdpTable,
       "mscAtmIfVptVccVcdTxTdpEntry": mscAtmIfVptVccVcdTxTdpEntry,
       "mscAtmIfVptVccVcdTxTdpIndex": mscAtmIfVptVccVcdTxTdpIndex,
       "mscAtmIfVptVccVcdTxTdpValue": mscAtmIfVptVccVcdTxTdpValue,
       "mscAtmIfVptVccVcdRxTdpTable": mscAtmIfVptVccVcdRxTdpTable,
       "mscAtmIfVptVccVcdRxTdpEntry": mscAtmIfVptVccVcdRxTdpEntry,
       "mscAtmIfVptVccVcdRxTdpIndex": mscAtmIfVptVccVcdRxTdpIndex,
       "mscAtmIfVptVccVcdRxTdpValue": mscAtmIfVptVccVcdRxTdpValue,
       "mscAtmIfVptVccVcdFqpTable": mscAtmIfVptVccVcdFqpTable,
       "mscAtmIfVptVccVcdFqpEntry": mscAtmIfVptVccVcdFqpEntry,
       "mscAtmIfVptVccVcdFqpIndex": mscAtmIfVptVccVcdFqpIndex,
       "mscAtmIfVptVccVcdFqpValue": mscAtmIfVptVccVcdFqpValue,
       "mscAtmIfVptVccVcdBqpTable": mscAtmIfVptVccVcdBqpTable,
       "mscAtmIfVptVccVcdBqpEntry": mscAtmIfVptVccVcdBqpEntry,
       "mscAtmIfVptVccVcdBqpIndex": mscAtmIfVptVccVcdBqpIndex,
       "mscAtmIfVptVccVcdBqpValue": mscAtmIfVptVccVcdBqpValue,
       "mscAtmIfVptVccLoop": mscAtmIfVptVccLoop,
       "mscAtmIfVptVccLoopRowStatusTable": mscAtmIfVptVccLoopRowStatusTable,
       "mscAtmIfVptVccLoopRowStatusEntry": mscAtmIfVptVccLoopRowStatusEntry,
       "mscAtmIfVptVccLoopRowStatus": mscAtmIfVptVccLoopRowStatus,
       "mscAtmIfVptVccLoopComponentName": mscAtmIfVptVccLoopComponentName,
       "mscAtmIfVptVccLoopStorageType": mscAtmIfVptVccLoopStorageType,
       "mscAtmIfVptVccLoopIndex": mscAtmIfVptVccLoopIndex,
       "mscAtmIfVptVccNep": mscAtmIfVptVccNep,
       "mscAtmIfVptVccNepRowStatusTable": mscAtmIfVptVccNepRowStatusTable,
       "mscAtmIfVptVccNepRowStatusEntry": mscAtmIfVptVccNepRowStatusEntry,
       "mscAtmIfVptVccNepRowStatus": mscAtmIfVptVccNepRowStatus,
       "mscAtmIfVptVccNepComponentName": mscAtmIfVptVccNepComponentName,
       "mscAtmIfVptVccNepStorageType": mscAtmIfVptVccNepStorageType,
       "mscAtmIfVptVccNepIndex": mscAtmIfVptVccNepIndex,
       "mscAtmIfVptVccNepProvTable": mscAtmIfVptVccNepProvTable,
       "mscAtmIfVptVccNepProvEntry": mscAtmIfVptVccNepProvEntry,
       "mscAtmIfVptVccNepApplicationName": mscAtmIfVptVccNepApplicationName,
       "mscAtmIfVptVccTest": mscAtmIfVptVccTest,
       "mscAtmIfVptVccTestRowStatusTable": mscAtmIfVptVccTestRowStatusTable,
       "mscAtmIfVptVccTestRowStatusEntry": mscAtmIfVptVccTestRowStatusEntry,
       "mscAtmIfVptVccTestRowStatus": mscAtmIfVptVccTestRowStatus,
       "mscAtmIfVptVccTestComponentName": mscAtmIfVptVccTestComponentName,
       "mscAtmIfVptVccTestStorageType": mscAtmIfVptVccTestStorageType,
       "mscAtmIfVptVccTestIndex": mscAtmIfVptVccTestIndex,
       "mscAtmIfVptVccTestStateTable": mscAtmIfVptVccTestStateTable,
       "mscAtmIfVptVccTestStateEntry": mscAtmIfVptVccTestStateEntry,
       "mscAtmIfVptVccTestAdminState": mscAtmIfVptVccTestAdminState,
       "mscAtmIfVptVccTestOperationalState": mscAtmIfVptVccTestOperationalState,
       "mscAtmIfVptVccTestUsageState": mscAtmIfVptVccTestUsageState,
       "mscAtmIfVptVccTestSetupTable": mscAtmIfVptVccTestSetupTable,
       "mscAtmIfVptVccTestSetupEntry": mscAtmIfVptVccTestSetupEntry,
       "mscAtmIfVptVccTestFrmTypes": mscAtmIfVptVccTestFrmTypes,
       "mscAtmIfVptVccTestFrmSize": mscAtmIfVptVccTestFrmSize,
       "mscAtmIfVptVccTestFrmPatternType": mscAtmIfVptVccTestFrmPatternType,
       "mscAtmIfVptVccTestCustomizedPattern": mscAtmIfVptVccTestCustomizedPattern,
       "mscAtmIfVptVccTestDuration": mscAtmIfVptVccTestDuration,
       "mscAtmIfVptVccTestBandwidthElastic": mscAtmIfVptVccTestBandwidthElastic,
       "mscAtmIfVptVccTestOverrideHoldingPriority": mscAtmIfVptVccTestOverrideHoldingPriority,
       "mscAtmIfVptVccTestResultsTable": mscAtmIfVptVccTestResultsTable,
       "mscAtmIfVptVccTestResultsEntry": mscAtmIfVptVccTestResultsEntry,
       "mscAtmIfVptVccTestElapsedTime": mscAtmIfVptVccTestElapsedTime,
       "mscAtmIfVptVccTestTimeRemaining": mscAtmIfVptVccTestTimeRemaining,
       "mscAtmIfVptVccTestCauseOfTermination": mscAtmIfVptVccTestCauseOfTermination,
       "mscAtmIfVptVccTestBytesTx": mscAtmIfVptVccTestBytesTx,
       "mscAtmIfVptVccTestBytesRx": mscAtmIfVptVccTestBytesRx,
       "mscAtmIfVptVccTestLoadingFrmTx": mscAtmIfVptVccTestLoadingFrmTx,
       "mscAtmIfVptVccTestLoadingFrmRx": mscAtmIfVptVccTestLoadingFrmRx,
       "mscAtmIfVptVccTestLoadingFrmLost": mscAtmIfVptVccTestLoadingFrmLost,
       "mscAtmIfVptVccTestVerificationFrmTx": mscAtmIfVptVccTestVerificationFrmTx,
       "mscAtmIfVptVccTestVerificationFrmRx": mscAtmIfVptVccTestVerificationFrmRx,
       "mscAtmIfVptVccTestVerificationFrmBad": mscAtmIfVptVccTestVerificationFrmBad,
       "mscAtmIfVptVccTestUnrecognizableFrmRx": mscAtmIfVptVccTestUnrecognizableFrmRx,
       "mscAtmIfVptVccTm": mscAtmIfVptVccTm,
       "mscAtmIfVptVccTmRowStatusTable": mscAtmIfVptVccTmRowStatusTable,
       "mscAtmIfVptVccTmRowStatusEntry": mscAtmIfVptVccTmRowStatusEntry,
       "mscAtmIfVptVccTmRowStatus": mscAtmIfVptVccTmRowStatus,
       "mscAtmIfVptVccTmComponentName": mscAtmIfVptVccTmComponentName,
       "mscAtmIfVptVccTmStorageType": mscAtmIfVptVccTmStorageType,
       "mscAtmIfVptVccTmIndex": mscAtmIfVptVccTmIndex,
       "mscAtmIfVptVccTmAbr": mscAtmIfVptVccTmAbr,
       "mscAtmIfVptVccTmAbrRowStatusTable": mscAtmIfVptVccTmAbrRowStatusTable,
       "mscAtmIfVptVccTmAbrRowStatusEntry": mscAtmIfVptVccTmAbrRowStatusEntry,
       "mscAtmIfVptVccTmAbrRowStatus": mscAtmIfVptVccTmAbrRowStatus,
       "mscAtmIfVptVccTmAbrComponentName": mscAtmIfVptVccTmAbrComponentName,
       "mscAtmIfVptVccTmAbrStorageType": mscAtmIfVptVccTmAbrStorageType,
       "mscAtmIfVptVccTmAbrIndex": mscAtmIfVptVccTmAbrIndex,
       "mscAtmIfVptVccTmAbrOperTable": mscAtmIfVptVccTmAbrOperTable,
       "mscAtmIfVptVccTmAbrOperEntry": mscAtmIfVptVccTmAbrOperEntry,
       "mscAtmIfVptVccTmAbrInitialCellRate": mscAtmIfVptVccTmAbrInitialCellRate,
       "mscAtmIfVptVccTmAbrTransientBufferExposure": mscAtmIfVptVccTmAbrTransientBufferExposure,
       "mscAtmIfVptVccTmAbrFixedRoundTripTime": mscAtmIfVptVccTmAbrFixedRoundTripTime,
       "mscAtmIfVptVccTmAbrRateDecreaseFactor": mscAtmIfVptVccTmAbrRateDecreaseFactor,
       "mscAtmIfVptVccTmAbrRateIncreaseFactor": mscAtmIfVptVccTmAbrRateIncreaseFactor,
       "mscAtmIfVptVccTmAbrMaxCellPerRmCell": mscAtmIfVptVccTmAbrMaxCellPerRmCell,
       "mscAtmIfVptVccTmAbrMaxTimeBetweenRmCell": mscAtmIfVptVccTmAbrMaxTimeBetweenRmCell,
       "mscAtmIfVptVccTmAbrCutoffDecreaseFactor": mscAtmIfVptVccTmAbrCutoffDecreaseFactor,
       "mscAtmIfVptVccTmAbrAcrDecreaseTimeFactor": mscAtmIfVptVccTmAbrAcrDecreaseTimeFactor,
       "mscAtmIfVptVccTmAbrForwardRmCellLimit": mscAtmIfVptVccTmAbrForwardRmCellLimit,
       "mscAtmIfVptVccTmAbrTxRateChangeInfo": mscAtmIfVptVccTmAbrTxRateChangeInfo,
       "mscAtmIfVptVccTmAbrAcrRateChangeInfo": mscAtmIfVptVccTmAbrAcrRateChangeInfo,
       "mscAtmIfVptVccTmAbrTxFwdRmCells": mscAtmIfVptVccTmAbrTxFwdRmCells,
       "mscAtmIfVptVccTmAbrRxEfci": mscAtmIfVptVccTmAbrRxEfci,
       "mscAtmIfVptVccTmOperTable": mscAtmIfVptVccTmOperTable,
       "mscAtmIfVptVccTmOperEntry": mscAtmIfVptVccTmOperEntry,
       "mscAtmIfVptVccTmTxTrafficDescType": mscAtmIfVptVccTmTxTrafficDescType,
       "mscAtmIfVptVccTmTxQosClass": mscAtmIfVptVccTmTxQosClass,
       "mscAtmIfVptVccTmTxQueueLength": mscAtmIfVptVccTmTxQueueLength,
       "mscAtmIfVptVccTmTxQueueCongestionState": mscAtmIfVptVccTmTxQueueCongestionState,
       "mscAtmIfVptVccTmHoldingPriority": mscAtmIfVptVccTmHoldingPriority,
       "mscAtmIfVptVccTmRxTrafficDescType": mscAtmIfVptVccTmRxTrafficDescType,
       "mscAtmIfVptVccTmRxQosClass": mscAtmIfVptVccTmRxQosClass,
       "mscAtmIfVptVccTmAtmServiceCategory": mscAtmIfVptVccTmAtmServiceCategory,
       "mscAtmIfVptVccTmTrafficShaping": mscAtmIfVptVccTmTrafficShaping,
       "mscAtmIfVptVccTmBearerClassBbc": mscAtmIfVptVccTmBearerClassBbc,
       "mscAtmIfVptVccTmTransferCapabilityBbc": mscAtmIfVptVccTmTransferCapabilityBbc,
       "mscAtmIfVptVccTmClippingBbc": mscAtmIfVptVccTmClippingBbc,
       "mscAtmIfVptVccTmUnshapedTransmitQueueing": mscAtmIfVptVccTmUnshapedTransmitQueueing,
       "mscAtmIfVptVccTmBestEffort": mscAtmIfVptVccTmBestEffort,
       "mscAtmIfVptVccTmForceTagging": mscAtmIfVptVccTmForceTagging,
       "mscAtmIfVptVccTmWeight": mscAtmIfVptVccTmWeight,
       "mscAtmIfVptVccTmUsageParameterControl": mscAtmIfVptVccTmUsageParameterControl,
       "mscAtmIfVptVccTmTxPacketWiseDiscard": mscAtmIfVptVccTmTxPacketWiseDiscard,
       "mscAtmIfVptVccTmRxPacketWiseDiscard": mscAtmIfVptVccTmRxPacketWiseDiscard,
       "mscAtmIfVptVccTmBandwidthElastic": mscAtmIfVptVccTmBandwidthElastic,
       "mscAtmIfVptVccTmBandwidthReduction": mscAtmIfVptVccTmBandwidthReduction,
       "mscAtmIfVptVccTmAbrConnectionType": mscAtmIfVptVccTmAbrConnectionType,
       "mscAtmIfVptVccTmTxTdpTable": mscAtmIfVptVccTmTxTdpTable,
       "mscAtmIfVptVccTmTxTdpEntry": mscAtmIfVptVccTmTxTdpEntry,
       "mscAtmIfVptVccTmTxTdpIndex": mscAtmIfVptVccTmTxTdpIndex,
       "mscAtmIfVptVccTmTxTdpValue": mscAtmIfVptVccTmTxTdpValue,
       "mscAtmIfVptVccTmTxQThreshTable": mscAtmIfVptVccTmTxQThreshTable,
       "mscAtmIfVptVccTmTxQThreshEntry": mscAtmIfVptVccTmTxQThreshEntry,
       "mscAtmIfVptVccTmTxQThreshIndex": mscAtmIfVptVccTmTxQThreshIndex,
       "mscAtmIfVptVccTmTxQThreshValue": mscAtmIfVptVccTmTxQThreshValue,
       "mscAtmIfVptVccTmRxTdpTable": mscAtmIfVptVccTmRxTdpTable,
       "mscAtmIfVptVccTmRxTdpEntry": mscAtmIfVptVccTmRxTdpEntry,
       "mscAtmIfVptVccTmRxTdpIndex": mscAtmIfVptVccTmRxTdpIndex,
       "mscAtmIfVptVccTmRxTdpValue": mscAtmIfVptVccTmRxTdpValue,
       "mscAtmIfVptVccTmTqpTable": mscAtmIfVptVccTmTqpTable,
       "mscAtmIfVptVccTmTqpEntry": mscAtmIfVptVccTmTqpEntry,
       "mscAtmIfVptVccTmTqpIndex": mscAtmIfVptVccTmTqpIndex,
       "mscAtmIfVptVccTmTqpValue": mscAtmIfVptVccTmTqpValue,
       "mscAtmIfVptVccTmRqpTable": mscAtmIfVptVccTmRqpTable,
       "mscAtmIfVptVccTmRqpEntry": mscAtmIfVptVccTmRqpEntry,
       "mscAtmIfVptVccTmRqpIndex": mscAtmIfVptVccTmRqpIndex,
       "mscAtmIfVptVccTmRqpValue": mscAtmIfVptVccTmRqpValue,
       "mscAtmIfVptVccStateTable": mscAtmIfVptVccStateTable,
       "mscAtmIfVptVccStateEntry": mscAtmIfVptVccStateEntry,
       "mscAtmIfVptVccAdminState": mscAtmIfVptVccAdminState,
       "mscAtmIfVptVccOperationalState": mscAtmIfVptVccOperationalState,
       "mscAtmIfVptVccUsageState": mscAtmIfVptVccUsageState,
       "mscAtmIfVptVccOperTable": mscAtmIfVptVccOperTable,
       "mscAtmIfVptVccOperEntry": mscAtmIfVptVccOperEntry,
       "mscAtmIfVptVccConnectionPointType": mscAtmIfVptVccConnectionPointType,
       "mscAtmIfVptVccConnInfoTable": mscAtmIfVptVccConnInfoTable,
       "mscAtmIfVptVccConnInfoEntry": mscAtmIfVptVccConnInfoEntry,
       "mscAtmIfVptVccDistributionType": mscAtmIfVptVccDistributionType,
       "mscAtmIfVptVccNumLeaves": mscAtmIfVptVccNumLeaves,
       "mscAtmIfVptVccCallDirection": mscAtmIfVptVccCallDirection,
       "mscAtmIfVptVccStatusTable": mscAtmIfVptVccStatusTable,
       "mscAtmIfVptVccStatusEntry": mscAtmIfVptVccStatusEntry,
       "mscAtmIfVptVccOperStatus": mscAtmIfVptVccOperStatus,
       "mscAtmIfVptVccLocalFailureCause": mscAtmIfVptVccLocalFailureCause,
       "mscAtmIfVptVccTroubled": mscAtmIfVptVccTroubled,
       "mscAtmIfVptVccSegLinkSideLoopbackState": mscAtmIfVptVccSegLinkSideLoopbackState,
       "mscAtmIfVptVccSegSwitchSideLoopbackState": mscAtmIfVptVccSegSwitchSideLoopbackState,
       "mscAtmIfVptVccEndToEndLoopbackState": mscAtmIfVptVccEndToEndLoopbackState,
       "mscAtmIfVptVccRxOamCellCongestionState": mscAtmIfVptVccRxOamCellCongestionState,
       "mscAtmIfVptVccAisState": mscAtmIfVptVccAisState,
       "mscAtmIfVptVccRdiState": mscAtmIfVptVccRdiState,
       "mscAtmIfVptVccTrafficTable": mscAtmIfVptVccTrafficTable,
       "mscAtmIfVptVccTrafficEntry": mscAtmIfVptVccTrafficEntry,
       "mscAtmIfVptVccTxTrafficDescType": mscAtmIfVptVccTxTrafficDescType,
       "mscAtmIfVptVccTxQosClass": mscAtmIfVptVccTxQosClass,
       "mscAtmIfVptVccFwdQosClass": mscAtmIfVptVccFwdQosClass,
       "mscAtmIfVptVccTxQueueLength": mscAtmIfVptVccTxQueueLength,
       "mscAtmIfVptVccTxQueueCongestionState": mscAtmIfVptVccTxQueueCongestionState,
       "mscAtmIfVptVccHoldingPriority": mscAtmIfVptVccHoldingPriority,
       "mscAtmIfVptVccRxTrafficDescType": mscAtmIfVptVccRxTrafficDescType,
       "mscAtmIfVptVccRxQosClass": mscAtmIfVptVccRxQosClass,
       "mscAtmIfVptVccBwdQosClass": mscAtmIfVptVccBwdQosClass,
       "mscAtmIfVptVccAtmServiceCategory": mscAtmIfVptVccAtmServiceCategory,
       "mscAtmIfVptVccTrafficShaping": mscAtmIfVptVccTrafficShaping,
       "mscAtmIfVptVccBearerClassBbc": mscAtmIfVptVccBearerClassBbc,
       "mscAtmIfVptVccTransferCapabilityBbc": mscAtmIfVptVccTransferCapabilityBbc,
       "mscAtmIfVptVccClippingBbc": mscAtmIfVptVccClippingBbc,
       "mscAtmIfVptVccUnshapedTransmitQueueing": mscAtmIfVptVccUnshapedTransmitQueueing,
       "mscAtmIfVptVccBestEffort": mscAtmIfVptVccBestEffort,
       "mscAtmIfVptVccUsageParameterControl": mscAtmIfVptVccUsageParameterControl,
       "mscAtmIfVptVccTxFrameDiscard": mscAtmIfVptVccTxFrameDiscard,
       "mscAtmIfVptVccRxFrameDiscard": mscAtmIfVptVccRxFrameDiscard,
       "mscAtmIfVptVccBandwidthElastic": mscAtmIfVptVccBandwidthElastic,
       "mscAtmIfVptVccBandwidthReduction": mscAtmIfVptVccBandwidthReduction,
       "mscAtmIfVptVccStatsTable": mscAtmIfVptVccStatsTable,
       "mscAtmIfVptVccStatsEntry": mscAtmIfVptVccStatsEntry,
       "mscAtmIfVptVccStatsTxCell": mscAtmIfVptVccStatsTxCell,
       "mscAtmIfVptVccStatsTxCellClp": mscAtmIfVptVccStatsTxCellClp,
       "mscAtmIfVptVccTxDiscard": mscAtmIfVptVccTxDiscard,
       "mscAtmIfVptVccTxDiscardClp": mscAtmIfVptVccTxDiscardClp,
       "mscAtmIfVptVccStatsTxCellDiscard": mscAtmIfVptVccStatsTxCellDiscard,
       "mscAtmIfVptVccStatsTxCellDiscardClp": mscAtmIfVptVccStatsTxCellDiscardClp,
       "mscAtmIfVptVccStatsTxFrameDiscard": mscAtmIfVptVccStatsTxFrameDiscard,
       "mscAtmIfVptVccStatsTxFrameDiscardClp": mscAtmIfVptVccStatsTxFrameDiscardClp,
       "mscAtmIfVptVccStatsRxCell": mscAtmIfVptVccStatsRxCell,
       "mscAtmIfVptVccStatsRxCellClp": mscAtmIfVptVccStatsRxCellClp,
       "mscAtmIfVptVccRxDiscard": mscAtmIfVptVccRxDiscard,
       "mscAtmIfVptVccRxDiscardClp": mscAtmIfVptVccRxDiscardClp,
       "mscAtmIfVptVccStatsRxCellDiscard": mscAtmIfVptVccStatsRxCellDiscard,
       "mscAtmIfVptVccStatsRxCellDiscardClp": mscAtmIfVptVccStatsRxCellDiscardClp,
       "mscAtmIfVptVccStatsRxFrameDiscard": mscAtmIfVptVccStatsRxFrameDiscard,
       "mscAtmIfVptVccStatsRxFrameDiscardClp": mscAtmIfVptVccStatsRxFrameDiscardClp,
       "mscAtmIfVptVccStatsRxUpcViolationOnEnforcer1": mscAtmIfVptVccStatsRxUpcViolationOnEnforcer1,
       "mscAtmIfVptVccStatsRxUpcViolationOnEnforcer2": mscAtmIfVptVccStatsRxUpcViolationOnEnforcer2,
       "mscAtmIfVptVccStatsRxAal5FrameError": mscAtmIfVptVccStatsRxAal5FrameError,
       "mscAtmIfVptVccStatsRxAal5FrameAbort": mscAtmIfVptVccStatsRxAal5FrameAbort,
       "mscAtmIfVptVccTxTdpTable": mscAtmIfVptVccTxTdpTable,
       "mscAtmIfVptVccTxTdpEntry": mscAtmIfVptVccTxTdpEntry,
       "mscAtmIfVptVccTxTdpIndex": mscAtmIfVptVccTxTdpIndex,
       "mscAtmIfVptVccTxTdpValue": mscAtmIfVptVccTxTdpValue,
       "mscAtmIfVptVccRxTdpTable": mscAtmIfVptVccRxTdpTable,
       "mscAtmIfVptVccRxTdpEntry": mscAtmIfVptVccRxTdpEntry,
       "mscAtmIfVptVccRxTdpIndex": mscAtmIfVptVccRxTdpIndex,
       "mscAtmIfVptVccRxTdpValue": mscAtmIfVptVccRxTdpValue,
       "mscAtmIfVptVccTxQThreshTable": mscAtmIfVptVccTxQThreshTable,
       "mscAtmIfVptVccTxQThreshEntry": mscAtmIfVptVccTxQThreshEntry,
       "mscAtmIfVptVccTxQThreshIndex": mscAtmIfVptVccTxQThreshIndex,
       "mscAtmIfVptVccTxQThreshValue": mscAtmIfVptVccTxQThreshValue,
       "mscAtmIfVptVccFqpTable": mscAtmIfVptVccFqpTable,
       "mscAtmIfVptVccFqpEntry": mscAtmIfVptVccFqpEntry,
       "mscAtmIfVptVccFqpIndex": mscAtmIfVptVccFqpIndex,
       "mscAtmIfVptVccFqpValue": mscAtmIfVptVccFqpValue,
       "mscAtmIfVptVccBqpTable": mscAtmIfVptVccBqpTable,
       "mscAtmIfVptVccBqpEntry": mscAtmIfVptVccBqpEntry,
       "mscAtmIfVptVccBqpIndex": mscAtmIfVptVccBqpIndex,
       "mscAtmIfVptVccBqpValue": mscAtmIfVptVccBqpValue,
       "mscAtmIfVptStateTable": mscAtmIfVptStateTable,
       "mscAtmIfVptStateEntry": mscAtmIfVptStateEntry,
       "mscAtmIfVptAdminState": mscAtmIfVptAdminState,
       "mscAtmIfVptOperationalState": mscAtmIfVptOperationalState,
       "mscAtmIfVptUsageState": mscAtmIfVptUsageState,
       "mscAtmIfVptOperTable": mscAtmIfVptOperTable,
       "mscAtmIfVptOperEntry": mscAtmIfVptOperEntry,
       "mscAtmIfVptConnectionPointType": mscAtmIfVptConnectionPointType,
       "mscAtmIfVptStatusTable": mscAtmIfVptStatusTable,
       "mscAtmIfVptStatusEntry": mscAtmIfVptStatusEntry,
       "mscAtmIfVptOperStatus": mscAtmIfVptOperStatus,
       "mscAtmIfVptLocalFailureCause": mscAtmIfVptLocalFailureCause,
       "mscAtmIfVptTroubled": mscAtmIfVptTroubled,
       "mscAtmIfVptSegLinkSideLoopbackState": mscAtmIfVptSegLinkSideLoopbackState,
       "mscAtmIfVptSegSwitchSideLoopbackState": mscAtmIfVptSegSwitchSideLoopbackState,
       "mscAtmIfVptEndToEndLoopbackState": mscAtmIfVptEndToEndLoopbackState,
       "mscAtmIfVptRxOamCellCongestionState": mscAtmIfVptRxOamCellCongestionState,
       "mscAtmIfVptAisState": mscAtmIfVptAisState,
       "mscAtmIfVptRdiState": mscAtmIfVptRdiState,
       "mscAtmIfVptTrafficTable": mscAtmIfVptTrafficTable,
       "mscAtmIfVptTrafficEntry": mscAtmIfVptTrafficEntry,
       "mscAtmIfVptTxTrafficDescType": mscAtmIfVptTxTrafficDescType,
       "mscAtmIfVptTxQosClass": mscAtmIfVptTxQosClass,
       "mscAtmIfVptFwdQosClass": mscAtmIfVptFwdQosClass,
       "mscAtmIfVptTxQueueLength": mscAtmIfVptTxQueueLength,
       "mscAtmIfVptTxQueueCongestionState": mscAtmIfVptTxQueueCongestionState,
       "mscAtmIfVptHoldingPriority": mscAtmIfVptHoldingPriority,
       "mscAtmIfVptRxTrafficDescType": mscAtmIfVptRxTrafficDescType,
       "mscAtmIfVptRxQosClass": mscAtmIfVptRxQosClass,
       "mscAtmIfVptBwdQosClass": mscAtmIfVptBwdQosClass,
       "mscAtmIfVptAtmServiceCategory": mscAtmIfVptAtmServiceCategory,
       "mscAtmIfVptTrafficShaping": mscAtmIfVptTrafficShaping,
       "mscAtmIfVptBearerClassBbc": mscAtmIfVptBearerClassBbc,
       "mscAtmIfVptTransferCapabilityBbc": mscAtmIfVptTransferCapabilityBbc,
       "mscAtmIfVptClippingBbc": mscAtmIfVptClippingBbc,
       "mscAtmIfVptUnshapedTransmitQueueing": mscAtmIfVptUnshapedTransmitQueueing,
       "mscAtmIfVptBestEffort": mscAtmIfVptBestEffort,
       "mscAtmIfVptUsageParameterControl": mscAtmIfVptUsageParameterControl,
       "mscAtmIfVptTxFrameDiscard": mscAtmIfVptTxFrameDiscard,
       "mscAtmIfVptRxFrameDiscard": mscAtmIfVptRxFrameDiscard,
       "mscAtmIfVptBandwidthElastic": mscAtmIfVptBandwidthElastic,
       "mscAtmIfVptBandwidthReduction": mscAtmIfVptBandwidthReduction,
       "mscAtmIfVptStatsTable": mscAtmIfVptStatsTable,
       "mscAtmIfVptStatsEntry": mscAtmIfVptStatsEntry,
       "mscAtmIfVptStatsTxCell": mscAtmIfVptStatsTxCell,
       "mscAtmIfVptStatsTxCellClp": mscAtmIfVptStatsTxCellClp,
       "mscAtmIfVptTxDiscard": mscAtmIfVptTxDiscard,
       "mscAtmIfVptTxDiscardClp": mscAtmIfVptTxDiscardClp,
       "mscAtmIfVptStatsTxCellDiscard": mscAtmIfVptStatsTxCellDiscard,
       "mscAtmIfVptStatsTxCellDiscardClp": mscAtmIfVptStatsTxCellDiscardClp,
       "mscAtmIfVptStatsTxFrameDiscard": mscAtmIfVptStatsTxFrameDiscard,
       "mscAtmIfVptStatsTxFrameDiscardClp": mscAtmIfVptStatsTxFrameDiscardClp,
       "mscAtmIfVptStatsRxCell": mscAtmIfVptStatsRxCell,
       "mscAtmIfVptStatsRxCellClp": mscAtmIfVptStatsRxCellClp,
       "mscAtmIfVptRxDiscard": mscAtmIfVptRxDiscard,
       "mscAtmIfVptRxDiscardClp": mscAtmIfVptRxDiscardClp,
       "mscAtmIfVptStatsRxCellDiscard": mscAtmIfVptStatsRxCellDiscard,
       "mscAtmIfVptStatsRxCellDiscardClp": mscAtmIfVptStatsRxCellDiscardClp,
       "mscAtmIfVptStatsRxFrameDiscard": mscAtmIfVptStatsRxFrameDiscard,
       "mscAtmIfVptStatsRxFrameDiscardClp": mscAtmIfVptStatsRxFrameDiscardClp,
       "mscAtmIfVptStatsRxUpcViolationOnEnforcer1": mscAtmIfVptStatsRxUpcViolationOnEnforcer1,
       "mscAtmIfVptStatsRxUpcViolationOnEnforcer2": mscAtmIfVptStatsRxUpcViolationOnEnforcer2,
       "mscAtmIfVptStatsRxAal5FrameError": mscAtmIfVptStatsRxAal5FrameError,
       "mscAtmIfVptStatsRxAal5FrameAbort": mscAtmIfVptStatsRxAal5FrameAbort,
       "mscAtmIfVptTxTdpTable": mscAtmIfVptTxTdpTable,
       "mscAtmIfVptTxTdpEntry": mscAtmIfVptTxTdpEntry,
       "mscAtmIfVptTxTdpIndex": mscAtmIfVptTxTdpIndex,
       "mscAtmIfVptTxTdpValue": mscAtmIfVptTxTdpValue,
       "mscAtmIfVptRxTdpTable": mscAtmIfVptRxTdpTable,
       "mscAtmIfVptRxTdpEntry": mscAtmIfVptRxTdpEntry,
       "mscAtmIfVptRxTdpIndex": mscAtmIfVptRxTdpIndex,
       "mscAtmIfVptRxTdpValue": mscAtmIfVptRxTdpValue,
       "mscAtmIfVptTxQThreshTable": mscAtmIfVptTxQThreshTable,
       "mscAtmIfVptTxQThreshEntry": mscAtmIfVptTxQThreshEntry,
       "mscAtmIfVptTxQThreshIndex": mscAtmIfVptTxQThreshIndex,
       "mscAtmIfVptTxQThreshValue": mscAtmIfVptTxQThreshValue,
       "mscAtmIfVptFqpTable": mscAtmIfVptFqpTable,
       "mscAtmIfVptFqpEntry": mscAtmIfVptFqpEntry,
       "mscAtmIfVptFqpIndex": mscAtmIfVptFqpIndex,
       "mscAtmIfVptFqpValue": mscAtmIfVptFqpValue,
       "mscAtmIfVptBqpTable": mscAtmIfVptBqpTable,
       "mscAtmIfVptBqpEntry": mscAtmIfVptBqpEntry,
       "mscAtmIfVptBqpIndex": mscAtmIfVptBqpIndex,
       "mscAtmIfVptBqpValue": mscAtmIfVptBqpValue,
       "mscAtmIfEp": mscAtmIfEp,
       "mscAtmIfEpRowStatusTable": mscAtmIfEpRowStatusTable,
       "mscAtmIfEpRowStatusEntry": mscAtmIfEpRowStatusEntry,
       "mscAtmIfEpRowStatus": mscAtmIfEpRowStatus,
       "mscAtmIfEpComponentName": mscAtmIfEpComponentName,
       "mscAtmIfEpStorageType": mscAtmIfEpStorageType,
       "mscAtmIfEpIndex": mscAtmIfEpIndex,
       "mscAtmIfEpProvTable": mscAtmIfEpProvTable,
       "mscAtmIfEpProvEntry": mscAtmIfEpProvEntry,
       "mscAtmIfEpMinimumBandwidthGuarantee": mscAtmIfEpMinimumBandwidthGuarantee,
       "mscAtmIfPm": mscAtmIfPm,
       "mscAtmIfPmRowStatusTable": mscAtmIfPmRowStatusTable,
       "mscAtmIfPmRowStatusEntry": mscAtmIfPmRowStatusEntry,
       "mscAtmIfPmRowStatus": mscAtmIfPmRowStatus,
       "mscAtmIfPmComponentName": mscAtmIfPmComponentName,
       "mscAtmIfPmStorageType": mscAtmIfPmStorageType,
       "mscAtmIfPmIndex": mscAtmIfPmIndex,
       "mscAtmIfPmProvTable": mscAtmIfPmProvTable,
       "mscAtmIfPmProvEntry": mscAtmIfPmProvEntry,
       "mscAtmIfPmSegSwitchSideMeasurement": mscAtmIfPmSegSwitchSideMeasurement,
       "mscAtmIfPmSegLinkSideMeasurement": mscAtmIfPmSegLinkSideMeasurement,
       "mscAtmIfPmControlMode": mscAtmIfPmControlMode,
       "mscAtmIfCidDataTable": mscAtmIfCidDataTable,
       "mscAtmIfCidDataEntry": mscAtmIfCidDataEntry,
       "mscAtmIfCustomerIdentifier": mscAtmIfCustomerIdentifier,
       "mscAtmIfProvTable": mscAtmIfProvTable,
       "mscAtmIfProvEntry": mscAtmIfProvEntry,
       "mscAtmIfInterfaceName": mscAtmIfInterfaceName,
       "mscAtmIfType": mscAtmIfType,
       "mscAtmIfOamSegmentBoundary": mscAtmIfOamSegmentBoundary,
       "mscAtmIfMaxVpcs": mscAtmIfMaxVpcs,
       "mscAtmIfMaxVccs": mscAtmIfMaxVccs,
       "mscAtmIfTrafficShaping": mscAtmIfTrafficShaping,
       "mscAtmIfUnshapedTransmitQueueing": mscAtmIfUnshapedTransmitQueueing,
       "mscAtmIfUsageParameterControl": mscAtmIfUsageParameterControl,
       "mscAtmIfMaxVpiBits": mscAtmIfMaxVpiBits,
       "mscAtmIfRemoteAtmInterfaceLabel": mscAtmIfRemoteAtmInterfaceLabel,
       "mscAtmIfTxCellMemory": mscAtmIfTxCellMemory,
       "mscAtmIfFaultHoldOffTime": mscAtmIfFaultHoldOffTime,
       "mscAtmIfCtdCalculation": mscAtmIfCtdCalculation,
       "mscAtmIfLbkTable": mscAtmIfLbkTable,
       "mscAtmIfLbkEntry": mscAtmIfLbkEntry,
       "mscAtmIfSegLinkSideLoopback": mscAtmIfSegLinkSideLoopback,
       "mscAtmIfSegSwitchSideLoopback": mscAtmIfSegSwitchSideLoopback,
       "mscAtmIfEndToEndLoopback": mscAtmIfEndToEndLoopback,
       "mscAtmIfStateTable": mscAtmIfStateTable,
       "mscAtmIfStateEntry": mscAtmIfStateEntry,
       "mscAtmIfAdminState": mscAtmIfAdminState,
       "mscAtmIfOperationalState": mscAtmIfOperationalState,
       "mscAtmIfUsageState": mscAtmIfUsageState,
       "mscAtmIfAvailabilityStatus": mscAtmIfAvailabilityStatus,
       "mscAtmIfProceduralStatus": mscAtmIfProceduralStatus,
       "mscAtmIfControlStatus": mscAtmIfControlStatus,
       "mscAtmIfAlarmStatus": mscAtmIfAlarmStatus,
       "mscAtmIfStandbyStatus": mscAtmIfStandbyStatus,
       "mscAtmIfUnknownStatus": mscAtmIfUnknownStatus,
       "mscAtmIfOperTable": mscAtmIfOperTable,
       "mscAtmIfOperEntry": mscAtmIfOperEntry,
       "mscAtmIfTxCellMemoryAvailable": mscAtmIfTxCellMemoryAvailable,
       "mscAtmIfTxCellMemoryCongestionState": mscAtmIfTxCellMemoryCongestionState,
       "mscAtmIfUnshapedTransmitQueueingOper": mscAtmIfUnshapedTransmitQueueingOper,
       "mscAtmIfStatsTable": mscAtmIfStatsTable,
       "mscAtmIfStatsEntry": mscAtmIfStatsEntry,
       "mscAtmIfTransmittedCells": mscAtmIfTransmittedCells,
       "mscAtmIfTxCell": mscAtmIfTxCell,
       "mscAtmIfTxCellClp": mscAtmIfTxCellClp,
       "mscAtmIfTxCellEfci": mscAtmIfTxCellEfci,
       "mscAtmIfTxCellDiscard": mscAtmIfTxCellDiscard,
       "mscAtmIfTxCellDiscardClp": mscAtmIfTxCellDiscardClp,
       "mscAtmIfTxFrameDiscard": mscAtmIfTxFrameDiscard,
       "mscAtmIfTxFrameDiscardClp": mscAtmIfTxFrameDiscardClp,
       "mscAtmIfReceivedCells": mscAtmIfReceivedCells,
       "mscAtmIfRxCell": mscAtmIfRxCell,
       "mscAtmIfRxCellClp": mscAtmIfRxCellClp,
       "mscAtmIfRxCellEfci": mscAtmIfRxCellEfci,
       "mscAtmIfRxCellDiscard": mscAtmIfRxCellDiscard,
       "mscAtmIfRxCellDiscardClp": mscAtmIfRxCellDiscardClp,
       "mscAtmIfRxFrameDiscard": mscAtmIfRxFrameDiscard,
       "mscAtmIfRxFrameDiscardClp": mscAtmIfRxFrameDiscardClp,
       "mscAtmIfDroppedRxCells": mscAtmIfDroppedRxCells,
       "mscAtmIfLastDroppedRxCellConnection": mscAtmIfLastDroppedRxCellConnection,
       "mscAtmIfAal5RxErrors": mscAtmIfAal5RxErrors,
       "mscAtmIfLastAal5RxErrorConnection": mscAtmIfLastAal5RxErrorConnection,
       "mscAtmIfLrcFrameErrors": mscAtmIfLrcFrameErrors,
       "mscAtmIfLastLrcFrameErrorConnection": mscAtmIfLastLrcFrameErrorConnection,
       "mscAtmIfAal5RxAborts": mscAtmIfAal5RxAborts,
       "mscAtmIfLastAal5RxAbortConnection": mscAtmIfLastAal5RxAbortConnection,
       "mscAtmIfTxLinkUtilization": mscAtmIfTxLinkUtilization,
       "mscAtmIfRxLinkUtilization": mscAtmIfRxLinkUtilization,
       "mscAtmIfTxCellMemoryThresholdTable": mscAtmIfTxCellMemoryThresholdTable,
       "mscAtmIfTxCellMemoryThresholdEntry": mscAtmIfTxCellMemoryThresholdEntry,
       "mscAtmIfTxCellMemoryThresholdIndex": mscAtmIfTxCellMemoryThresholdIndex,
       "mscAtmIfTxCellMemoryThresholdValue": mscAtmIfTxCellMemoryThresholdValue,
       "mscAtmIfOpShapingRatesTable": mscAtmIfOpShapingRatesTable,
       "mscAtmIfOpShapingRatesEntry": mscAtmIfOpShapingRatesEntry,
       "mscAtmIfOpShapingRatesIndex": mscAtmIfOpShapingRatesIndex,
       "mscAtmIfOpShapingRatesValue": mscAtmIfOpShapingRatesValue,
       "mscAtmIfShapeUsageTable": mscAtmIfShapeUsageTable,
       "mscAtmIfShapeUsageEntry": mscAtmIfShapeUsageEntry,
       "mscAtmIfShapeUsageIndex": mscAtmIfShapeUsageIndex,
       "mscAtmIfShapeUsageValue": mscAtmIfShapeUsageValue,
       "atmCoreMIB": atmCoreMIB,
       "atmCoreGroup": atmCoreGroup,
       "atmCoreGroupCB": atmCoreGroupCB,
       "atmCoreGroupCB02": atmCoreGroupCB02,
       "atmCoreGroupCB02A": atmCoreGroupCB02A,
       "atmCoreCapabilities": atmCoreCapabilities,
       "atmCoreCapabilitiesCB": atmCoreCapabilitiesCB,
       "atmCoreCapabilitiesCB02": atmCoreCapabilitiesCB02,
       "atmCoreCapabilitiesCB02A": atmCoreCapabilitiesCB02A}
)
