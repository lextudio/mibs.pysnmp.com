# SNMP MIB module (LANCOM-1711-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/LANCOM-1711-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:17:00 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(CounterBasedGauge64,) = mibBuilder.importSymbols(
    "HCNUM-TC",
    "CounterBasedGauge64")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(sysDescr,
 sysName) = mibBuilder.importSymbols(
    "SNMPv2-MIB",
    "sysDescr",
    "sysName")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 MacAddress,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "TextualConvention")


# MODULE-IDENTITY

lancom_1711_plus = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712)
)
lancom_1711_plus.setRevisions(
        ("2009-08-12 17:08",)
)


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Trapgrp_ObjectIdentity = ObjectIdentity
trapgrp = _Trapgrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0)
)
_Traps_ObjectIdentity = ObjectIdentity
traps = _Traps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0)
)
_Sta_ObjectIdentity = ObjectIdentity
sta = _Sta_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1)
)
_StaOper_Type = DisplayString
_StaOper_Object = MibScalar
staOper = _StaOper_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 2),
    _StaOper_Type()
)
staOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staOper.setStatus("current")
_StaWan_ObjectIdentity = ObjectIdentity
staWan = _StaWan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4)
)
_StaWanBytetransTable_Object = MibTable
staWanBytetransTable = _StaWanBytetransTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1)
)
if mibBuilder.loadTexts:
    staWanBytetransTable.setStatus("current")
_StaWanBytetransEntry_Object = MibTableRow
staWanBytetransEntry = _StaWanBytetransEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1)
)
staWanBytetransEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanBytetransIfc"),
)
if mibBuilder.loadTexts:
    staWanBytetransEntry.setStatus("current")


class _StaWanBytetransIfc_Type(Integer32):
    """Custom type staWanBytetransIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaWanBytetransIfc_Type.__name__ = "Integer32"
_StaWanBytetransIfc_Object = MibTableColumn
staWanBytetransIfc = _StaWanBytetransIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 1),
    _StaWanBytetransIfc_Type()
)
staWanBytetransIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransIfc.setStatus("current")
_StaWanBytetransCrx_Type = Counter32
_StaWanBytetransCrx_Object = MibTableColumn
staWanBytetransCrx = _StaWanBytetransCrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 2),
    _StaWanBytetransCrx_Type()
)
staWanBytetransCrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransCrx.setStatus("current")
_StaWanBytetransRxb_Type = Counter32
_StaWanBytetransRxb_Object = MibTableColumn
staWanBytetransRxb = _StaWanBytetransRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 3),
    _StaWanBytetransRxb_Type()
)
staWanBytetransRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransRxb.setStatus("current")
_StaWanBytetransTxb_Type = Counter32
_StaWanBytetransTxb_Object = MibTableColumn
staWanBytetransTxb = _StaWanBytetransTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 4),
    _StaWanBytetransTxb_Type()
)
staWanBytetransTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransTxb.setStatus("current")
_StaWanBytetransCtx_Type = Counter32
_StaWanBytetransCtx_Object = MibTableColumn
staWanBytetransCtx = _StaWanBytetransCtx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 1, 1, 5),
    _StaWanBytetransCtx_Type()
)
staWanBytetransCtx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransCtx.setStatus("current")
_StaWanPackettraTable_Object = MibTable
staWanPackettraTable = _StaWanPackettraTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2)
)
if mibBuilder.loadTexts:
    staWanPackettraTable.setStatus("current")
_StaWanPackettraEntry_Object = MibTableRow
staWanPackettraEntry = _StaWanPackettraEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1)
)
staWanPackettraEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanPackettraIfc"),
)
if mibBuilder.loadTexts:
    staWanPackettraEntry.setStatus("current")


class _StaWanPackettraIfc_Type(Integer32):
    """Custom type staWanPackettraIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaWanPackettraIfc_Type.__name__ = "Integer32"
_StaWanPackettraIfc_Object = MibTableColumn
staWanPackettraIfc = _StaWanPackettraIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 1),
    _StaWanPackettraIfc_Type()
)
staWanPackettraIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraIfc.setStatus("current")
_StaWanPackettraRx_Type = Counter32
_StaWanPackettraRx_Object = MibTableColumn
staWanPackettraRx = _StaWanPackettraRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 2),
    _StaWanPackettraRx_Type()
)
staWanPackettraRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraRx.setStatus("current")
_StaWanPackettraTxt_Type = Counter32
_StaWanPackettraTxt_Object = MibTableColumn
staWanPackettraTxt = _StaWanPackettraTxt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 3),
    _StaWanPackettraTxt_Type()
)
staWanPackettraTxt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxt.setStatus("current")
_StaWanPackettraTxn_Type = Counter32
_StaWanPackettraTxn_Object = MibTableColumn
staWanPackettraTxn = _StaWanPackettraTxn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 4),
    _StaWanPackettraTxn_Type()
)
staWanPackettraTxn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxn.setStatus("current")
_StaWanPackettraTxr_Type = Counter32
_StaWanPackettraTxr_Object = MibTableColumn
staWanPackettraTxr = _StaWanPackettraTxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 5),
    _StaWanPackettraTxr_Type()
)
staWanPackettraTxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxr.setStatus("current")
_StaWanPackettraTxu_Type = Counter32
_StaWanPackettraTxu_Object = MibTableColumn
staWanPackettraTxu = _StaWanPackettraTxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 2, 1, 6),
    _StaWanPackettraTxu_Type()
)
staWanPackettraTxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxu.setStatus("current")
_StaWanErrorsTable_Object = MibTable
staWanErrorsTable = _StaWanErrorsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3)
)
if mibBuilder.loadTexts:
    staWanErrorsTable.setStatus("current")
_StaWanErrorsEntry_Object = MibTableRow
staWanErrorsEntry = _StaWanErrorsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1)
)
staWanErrorsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanErrorsIfc"),
)
if mibBuilder.loadTexts:
    staWanErrorsEntry.setStatus("current")


class _StaWanErrorsIfc_Type(Integer32):
    """Custom type staWanErrorsIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaWanErrorsIfc_Type.__name__ = "Integer32"
_StaWanErrorsIfc_Object = MibTableColumn
staWanErrorsIfc = _StaWanErrorsIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 1),
    _StaWanErrorsIfc_Type()
)
staWanErrorsIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsIfc.setStatus("current")
_StaWanErrorsRxl1_Type = Counter32
_StaWanErrorsRxl1_Object = MibTableColumn
staWanErrorsRxl1 = _StaWanErrorsRxl1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 2),
    _StaWanErrorsRxl1_Type()
)
staWanErrorsRxl1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsRxl1.setStatus("current")
_StaWanErrorsRxl2_Type = Counter32
_StaWanErrorsRxl2_Object = MibTableColumn
staWanErrorsRxl2 = _StaWanErrorsRxl2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 3),
    _StaWanErrorsRxl2_Type()
)
staWanErrorsRxl2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsRxl2.setStatus("current")
_StaWanErrorsRxl3_Type = Counter32
_StaWanErrorsRxl3_Object = MibTableColumn
staWanErrorsRxl3 = _StaWanErrorsRxl3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 4),
    _StaWanErrorsRxl3_Type()
)
staWanErrorsRxl3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsRxl3.setStatus("current")
_StaWanErrorsStac_Type = Counter32
_StaWanErrorsStac_Object = MibTableColumn
staWanErrorsStac = _StaWanErrorsStac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 5),
    _StaWanErrorsStac_Type()
)
staWanErrorsStac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsStac.setStatus("current")
_StaWanErrorsTxer_Type = Counter32
_StaWanErrorsTxer_Object = MibTableColumn
staWanErrorsTxer = _StaWanErrorsTxer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 3, 1, 6),
    _StaWanErrorsTxer_Type()
)
staWanErrorsTxer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsTxer.setStatus("current")
_StaWanWantxdisc_Type = Counter32
_StaWanWantxdisc_Object = MibScalar
staWanWantxdisc = _StaWanWantxdisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 4),
    _StaWanWantxdisc_Type()
)
staWanWantxdisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWantxdisc.setStatus("current")
_StaWanWanheappa_Type = Integer32
_StaWanWanheappa_Object = MibScalar
staWanWanheappa = _StaWanWanheappa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 5),
    _StaWanWanheappa_Type()
)
staWanWanheappa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanheappa.setStatus("current")
_StaWanWanqueuep_Type = Integer32
_StaWanWanqueuep_Object = MibScalar
staWanWanqueuep = _StaWanWanqueuep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 6),
    _StaWanWanqueuep_Type()
)
staWanWanqueuep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanqueuep.setStatus("current")
_StaWanWanqueuee_Type = Counter32
_StaWanWanqueuee_Object = MibScalar
staWanWanqueuee = _StaWanWanqueuee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 7),
    _StaWanWanqueuee_Type()
)
staWanWanqueuee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanqueuee.setStatus("current")
_StaWanThroughpuTable_Object = MibTable
staWanThroughpuTable = _StaWanThroughpuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8)
)
if mibBuilder.loadTexts:
    staWanThroughpuTable.setStatus("current")
_StaWanThroughpuEntry_Object = MibTableRow
staWanThroughpuEntry = _StaWanThroughpuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1)
)
staWanThroughpuEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanThroughpuIfc"),
)
if mibBuilder.loadTexts:
    staWanThroughpuEntry.setStatus("current")


class _StaWanThroughpuIfc_Type(Integer32):
    """Custom type staWanThroughpuIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaWanThroughpuIfc_Type.__name__ = "Integer32"
_StaWanThroughpuIfc_Object = MibTableColumn
staWanThroughpuIfc = _StaWanThroughpuIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 1),
    _StaWanThroughpuIfc_Type()
)
staWanThroughpuIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuIfc.setStatus("current")


class _StaWanThroughpuRxsc_Type(Integer32):
    """Custom type staWanThroughpuRxsc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuRxsc_Type.__name__ = "Integer32"
_StaWanThroughpuRxsc_Object = MibTableColumn
staWanThroughpuRxsc = _StaWanThroughpuRxsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 2),
    _StaWanThroughpuRxsc_Type()
)
staWanThroughpuRxsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuRxsc.setStatus("current")


class _StaWanThroughpuTxsc_Type(Integer32):
    """Custom type staWanThroughpuTxsc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuTxsc_Type.__name__ = "Integer32"
_StaWanThroughpuTxsc_Object = MibTableColumn
staWanThroughpuTxsc = _StaWanThroughpuTxsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 3),
    _StaWanThroughpuTxsc_Type()
)
staWanThroughpuTxsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuTxsc.setStatus("current")


class _StaWanThroughpuRxsa_Type(Integer32):
    """Custom type staWanThroughpuRxsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuRxsa_Type.__name__ = "Integer32"
_StaWanThroughpuRxsa_Object = MibTableColumn
staWanThroughpuRxsa = _StaWanThroughpuRxsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 4),
    _StaWanThroughpuRxsa_Type()
)
staWanThroughpuRxsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuRxsa.setStatus("current")


class _StaWanThroughpuTxsa_Type(Integer32):
    """Custom type staWanThroughpuTxsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuTxsa_Type.__name__ = "Integer32"
_StaWanThroughpuTxsa_Object = MibTableColumn
staWanThroughpuTxsa = _StaWanThroughpuTxsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 8, 1, 5),
    _StaWanThroughpuTxsa_Type()
)
staWanThroughpuTxsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuTxsa.setStatus("current")
_StaWanDeleteval_Type = DisplayString
_StaWanDeleteval_Object = MibScalar
staWanDeleteval = _StaWanDeleteval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 9),
    _StaWanDeleteval_Type()
)
staWanDeleteval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWanDeleteval.setStatus("current")
_StaWanConnectio_Type = Integer32
_StaWanConnectio_Object = MibScalar
staWanConnectio = _StaWanConnectio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 10),
    _StaWanConnectio_Type()
)
staWanConnectio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanConnectio.setStatus("current")
_StaWanMtuTable_Object = MibTable
staWanMtuTable = _StaWanMtuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11)
)
if mibBuilder.loadTexts:
    staWanMtuTable.setStatus("current")
_StaWanMtuEntry_Object = MibTableRow
staWanMtuEntry = _StaWanMtuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1)
)
staWanMtuEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanMtuPee"),
)
if mibBuilder.loadTexts:
    staWanMtuEntry.setStatus("current")


class _StaWanMtuPee_Type(DisplayString):
    """Custom type staWanMtuPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWanMtuPee_Type.__name__ = "DisplayString"
_StaWanMtuPee_Object = MibTableColumn
staWanMtuPee = _StaWanMtuPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1, 1),
    _StaWanMtuPee_Type()
)
staWanMtuPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWanMtuPee.setStatus("current")


class _StaWanMtuMtu_Type(Integer32):
    """Custom type staWanMtuMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWanMtuMtu_Type.__name__ = "Integer32"
_StaWanMtuMtu_Object = MibTableColumn
staWanMtuMtu = _StaWanMtuMtu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 11, 1, 2),
    _StaWanMtuMtu_Type()
)
staWanMtuMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWanMtuMtu.setStatus("current")
_StaWanActions_ObjectIdentity = ObjectIdentity
staWanActions = _StaWanActions_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20)
)
_StaWanActionsActTable_Object = MibTable
staWanActionsActTable = _StaWanActionsActTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1)
)
if mibBuilder.loadTexts:
    staWanActionsActTable.setStatus("current")
_StaWanActionsActEntry_Object = MibTableRow
staWanActionsActEntry = _StaWanActionsActEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1)
)
staWanActionsActEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanActionsActTim"),
)
if mibBuilder.loadTexts:
    staWanActionsActEntry.setStatus("current")


class _StaWanActionsActTim_Type(DisplayString):
    """Custom type staWanActionsActTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaWanActionsActTim_Type.__name__ = "DisplayString"
_StaWanActionsActTim_Object = MibTableColumn
staWanActionsActTim = _StaWanActionsActTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 1),
    _StaWanActionsActTim_Type()
)
staWanActionsActTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsActTim.setStatus("current")


class _StaWanActionsActAct_Type(DisplayString):
    """Custom type staWanActionsActAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWanActionsActAct_Type.__name__ = "DisplayString"
_StaWanActionsActAct_Object = MibTableColumn
staWanActionsActAct = _StaWanActionsActAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 2),
    _StaWanActionsActAct_Type()
)
staWanActionsActAct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsActAct.setStatus("current")


class _StaWanActionsActRes_Type(DisplayString):
    """Custom type staWanActionsActRes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_StaWanActionsActRes_Type.__name__ = "DisplayString"
_StaWanActionsActRes_Object = MibTableColumn
staWanActionsActRes = _StaWanActionsActRes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 1, 1, 3),
    _StaWanActionsActRes_Type()
)
staWanActionsActRes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsActRes.setStatus("current")
_StaWanActionsLocTable_Object = MibTable
staWanActionsLocTable = _StaWanActionsLocTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2)
)
if mibBuilder.loadTexts:
    staWanActionsLocTable.setStatus("current")
_StaWanActionsLocEntry_Object = MibTableRow
staWanActionsLocEntry = _StaWanActionsLocEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1)
)
staWanActionsLocEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staWanActionsLocInd"),
)
if mibBuilder.loadTexts:
    staWanActionsLocEntry.setStatus("current")


class _StaWanActionsLocInd_Type(Integer32):
    """Custom type staWanActionsLocInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWanActionsLocInd_Type.__name__ = "Integer32"
_StaWanActionsLocInd_Object = MibTableColumn
staWanActionsLocInd = _StaWanActionsLocInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1, 1),
    _StaWanActionsLocInd_Type()
)
staWanActionsLocInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsLocInd.setStatus("current")


class _StaWanActionsLocRem_Type(Integer32):
    """Custom type staWanActionsLocRem based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanActionsLocRem_Type.__name__ = "Integer32"
_StaWanActionsLocRem_Object = MibTableColumn
staWanActionsLocRem = _StaWanActionsLocRem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 20, 2, 1, 2),
    _StaWanActionsLocRem_Type()
)
staWanActionsLocRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsLocRem.setStatus("current")
_StaWanWanqueuem_Type = Counter32
_StaWanWanqueuem_Object = MibScalar
staWanWanqueuem = _StaWanWanqueuem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 4, 21),
    _StaWanWanqueuem_Type()
)
staWanWanqueuem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanqueuem.setStatus("current")
_StaLan_ObjectIdentity = ObjectIdentity
staLan = _StaLan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5)
)
_StaLanLanh_Type = Integer32
_StaLanLanh_Object = MibScalar
staLanLanh = _StaLanLanh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 7),
    _StaLanLanh_Type()
)
staLanLanh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanLanh.setStatus("current")
_StaLanDele_Type = DisplayString
_StaLanDele_Object = MibScalar
staLanDele = _StaLanDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 11),
    _StaLanDele_Type()
)
staLanDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staLanDele.setStatus("current")
_StaLanInteTable_Object = MibTable
staLanInteTable = _StaLanInteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51)
)
if mibBuilder.loadTexts:
    staLanInteTable.setStatus("current")
_StaLanInteEntry_Object = MibTableRow
staLanInteEntry = _StaLanInteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1)
)
staLanInteEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staLanInteIfc"),
)
if mibBuilder.loadTexts:
    staLanInteEntry.setStatus("current")


class _StaLanInteIfc_Type(DisplayString):
    """Custom type staLanInteIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanInteIfc_Type.__name__ = "DisplayString"
_StaLanInteIfc_Object = MibTableColumn
staLanInteIfc = _StaLanInteIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1, 1),
    _StaLanInteIfc_Type()
)
staLanInteIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInteIfc.setStatus("current")


class _StaLanInteQue_Type(Integer32):
    """Custom type staLanInteQue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanInteQue_Type.__name__ = "Integer32"
_StaLanInteQue_Object = MibTableColumn
staLanInteQue = _StaLanInteQue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 51, 1, 2),
    _StaLanInteQue_Type()
)
staLanInteQue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInteQue.setStatus("current")
_StaLanByteTable_Object = MibTable
staLanByteTable = _StaLanByteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52)
)
if mibBuilder.loadTexts:
    staLanByteTable.setStatus("current")
_StaLanByteEntry_Object = MibTableRow
staLanByteEntry = _StaLanByteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1)
)
staLanByteEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staLanByteIfc"),
)
if mibBuilder.loadTexts:
    staLanByteEntry.setStatus("current")


class _StaLanByteIfc_Type(DisplayString):
    """Custom type staLanByteIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanByteIfc_Type.__name__ = "DisplayString"
_StaLanByteIfc_Object = MibTableColumn
staLanByteIfc = _StaLanByteIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 1),
    _StaLanByteIfc_Type()
)
staLanByteIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteIfc.setStatus("current")
_StaLanByteTxbyte_Type = Counter64
_StaLanByteTxbyte_Object = MibTableColumn
staLanByteTxbyte = _StaLanByteTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 2),
    _StaLanByteTxbyte_Type()
)
staLanByteTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteTxbyte.setStatus("current")
_StaLanByteRxbyte_Type = Counter64
_StaLanByteRxbyte_Object = MibTableColumn
staLanByteRxbyte = _StaLanByteRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 3),
    _StaLanByteRxbyte_Type()
)
staLanByteRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteRxbyte.setStatus("current")


class _StaLanByteThroug_Type(DisplayString):
    """Custom type staLanByteThroug based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanByteThroug_Type.__name__ = "DisplayString"
_StaLanByteThroug_Object = MibTableColumn
staLanByteThroug = _StaLanByteThroug_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 4),
    _StaLanByteThroug_Type()
)
staLanByteThroug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteThroug.setStatus("current")


class _StaLanByteMaxthr_Type(DisplayString):
    """Custom type staLanByteMaxthr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanByteMaxthr_Type.__name__ = "DisplayString"
_StaLanByteMaxthr_Object = MibTableColumn
staLanByteMaxthr = _StaLanByteMaxthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 5),
    _StaLanByteMaxthr_Type()
)
staLanByteMaxthr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteMaxthr.setStatus("current")


class _StaLanByteBytest_Type(Integer32):
    """Custom type staLanByteBytest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanByteBytest_Type.__name__ = "Integer32"
_StaLanByteBytest_Object = MibTableColumn
staLanByteBytest = _StaLanByteBytest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 6),
    _StaLanByteBytest_Type()
)
staLanByteBytest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteBytest.setStatus("current")


class _StaLanByteBytesm_Type(Integer32):
    """Custom type staLanByteBytesm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanByteBytesm_Type.__name__ = "Integer32"
_StaLanByteBytesm_Object = MibTableColumn
staLanByteBytesm = _StaLanByteBytesm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 52, 1, 7),
    _StaLanByteBytesm_Type()
)
staLanByteBytesm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanByteBytesm.setStatus("current")
_StaLanPackTable_Object = MibTable
staLanPackTable = _StaLanPackTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53)
)
if mibBuilder.loadTexts:
    staLanPackTable.setStatus("current")
_StaLanPackEntry_Object = MibTableRow
staLanPackEntry = _StaLanPackEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1)
)
staLanPackEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staLanPackIfc"),
)
if mibBuilder.loadTexts:
    staLanPackEntry.setStatus("current")


class _StaLanPackIfc_Type(DisplayString):
    """Custom type staLanPackIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanPackIfc_Type.__name__ = "DisplayString"
_StaLanPackIfc_Object = MibTableColumn
staLanPackIfc = _StaLanPackIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 1),
    _StaLanPackIfc_Type()
)
staLanPackIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackIfc.setStatus("current")
_StaLanPackRxp_Type = Counter32
_StaLanPackRxp_Object = MibTableColumn
staLanPackRxp = _StaLanPackRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 2),
    _StaLanPackRxp_Type()
)
staLanPackRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackRxp.setStatus("current")
_StaLanPackTxp_Type = Counter32
_StaLanPackTxp_Object = MibTableColumn
staLanPackTxp = _StaLanPackTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 3),
    _StaLanPackTxp_Type()
)
staLanPackTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackTxp.setStatus("current")
_StaLanPackRxb_Type = Counter32
_StaLanPackRxb_Object = MibTableColumn
staLanPackRxb = _StaLanPackRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 4),
    _StaLanPackRxb_Type()
)
staLanPackRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackRxb.setStatus("current")
_StaLanPackRxm_Type = Counter32
_StaLanPackRxm_Object = MibTableColumn
staLanPackRxm = _StaLanPackRxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 5),
    _StaLanPackRxm_Type()
)
staLanPackRxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackRxm.setStatus("current")
_StaLanPackRxu_Type = Counter32
_StaLanPackRxu_Object = MibTableColumn
staLanPackRxu = _StaLanPackRxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 6),
    _StaLanPackRxu_Type()
)
staLanPackRxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackRxu.setStatus("current")
_StaLanPackTxb_Type = Counter32
_StaLanPackTxb_Object = MibTableColumn
staLanPackTxb = _StaLanPackTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 7),
    _StaLanPackTxb_Type()
)
staLanPackTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackTxb.setStatus("current")
_StaLanPackTxm_Type = Counter32
_StaLanPackTxm_Object = MibTableColumn
staLanPackTxm = _StaLanPackTxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 8),
    _StaLanPackTxm_Type()
)
staLanPackTxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackTxm.setStatus("current")
_StaLanPackTxu_Type = Counter32
_StaLanPackTxu_Object = MibTableColumn
staLanPackTxu = _StaLanPackTxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 53, 1, 9),
    _StaLanPackTxu_Type()
)
staLanPackTxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackTxu.setStatus("current")
_StaLanErroTable_Object = MibTable
staLanErroTable = _StaLanErroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54)
)
if mibBuilder.loadTexts:
    staLanErroTable.setStatus("current")
_StaLanErroEntry_Object = MibTableRow
staLanErroEntry = _StaLanErroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1)
)
staLanErroEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staLanErroIfc"),
)
if mibBuilder.loadTexts:
    staLanErroEntry.setStatus("current")


class _StaLanErroIfc_Type(DisplayString):
    """Custom type staLanErroIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanErroIfc_Type.__name__ = "DisplayString"
_StaLanErroIfc_Object = MibTableColumn
staLanErroIfc = _StaLanErroIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 1),
    _StaLanErroIfc_Type()
)
staLanErroIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroIfc.setStatus("current")
_StaLanErroRxerro_Type = Counter32
_StaLanErroRxerro_Object = MibTableColumn
staLanErroRxerro = _StaLanErroRxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 2),
    _StaLanErroRxerro_Type()
)
staLanErroRxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroRxerro.setStatus("current")
_StaLanErroTxerro_Type = Counter32
_StaLanErroTxerro_Object = MibTableColumn
staLanErroTxerro = _StaLanErroTxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 3),
    _StaLanErroTxerro_Type()
)
staLanErroTxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroTxerro.setStatus("current")
_StaLanErroStacke_Type = Counter32
_StaLanErroStacke_Object = MibTableColumn
staLanErroStacke = _StaLanErroStacke_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 4),
    _StaLanErroStacke_Type()
)
staLanErroStacke.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroStacke.setStatus("current")
_StaLanErroNicerr_Type = Counter32
_StaLanErroNicerr_Object = MibTableColumn
staLanErroNicerr = _StaLanErroNicerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 5),
    _StaLanErroNicerr_Type()
)
staLanErroNicerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroNicerr.setStatus("current")
_StaLanErroQueuee_Type = Counter32
_StaLanErroQueuee_Object = MibTableColumn
staLanErroQueuee = _StaLanErroQueuee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 6),
    _StaLanErroQueuee_Type()
)
staLanErroQueuee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroQueuee.setStatus("current")
_StaLanErroRxcrce_Type = Counter32
_StaLanErroRxcrce_Object = MibTableColumn
staLanErroRxcrce = _StaLanErroRxcrce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 7),
    _StaLanErroRxcrce_Type()
)
staLanErroRxcrce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroRxcrce.setStatus("current")
_StaLanErroCollis_Type = Counter32
_StaLanErroCollis_Object = MibTableColumn
staLanErroCollis = _StaLanErroCollis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 8),
    _StaLanErroCollis_Type()
)
staLanErroCollis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroCollis.setStatus("current")
_StaLanErroSingle_Type = Counter32
_StaLanErroSingle_Object = MibTableColumn
staLanErroSingle = _StaLanErroSingle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 9),
    _StaLanErroSingle_Type()
)
staLanErroSingle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroSingle.setStatus("current")
_StaLanErroMultip_Type = Counter32
_StaLanErroMultip_Object = MibTableColumn
staLanErroMultip = _StaLanErroMultip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 10),
    _StaLanErroMultip_Type()
)
staLanErroMultip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroMultip.setStatus("current")
_StaLanErroLateco_Type = Counter32
_StaLanErroLateco_Object = MibTableColumn
staLanErroLateco = _StaLanErroLateco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 11),
    _StaLanErroLateco_Type()
)
staLanErroLateco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroLateco.setStatus("current")
_StaLanErroExcess_Type = Counter32
_StaLanErroExcess_Object = MibTableColumn
staLanErroExcess = _StaLanErroExcess_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 12),
    _StaLanErroExcess_Type()
)
staLanErroExcess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroExcess.setStatus("current")
_StaLanErroRxalig_Type = Counter32
_StaLanErroRxalig_Object = MibTableColumn
staLanErroRxalig = _StaLanErroRxalig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 13),
    _StaLanErroRxalig_Type()
)
staLanErroRxalig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroRxalig.setStatus("current")
_StaLanErroRxtoos_Type = Counter32
_StaLanErroRxtoos_Object = MibTableColumn
staLanErroRxtoos = _StaLanErroRxtoos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 14),
    _StaLanErroRxtoos_Type()
)
staLanErroRxtoos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroRxtoos.setStatus("current")
_StaLanErroRxtool_Type = Counter32
_StaLanErroRxtool_Object = MibTableColumn
staLanErroRxtool = _StaLanErroRxtool_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 15),
    _StaLanErroRxtool_Type()
)
staLanErroRxtool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroRxtool.setStatus("current")
_StaLanErroTxcarr_Type = Counter32
_StaLanErroTxcarr_Object = MibTableColumn
staLanErroTxcarr = _StaLanErroTxcarr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 16),
    _StaLanErroTxcarr_Type()
)
staLanErroTxcarr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroTxcarr.setStatus("current")
_StaLanErroTxdefe_Type = Counter32
_StaLanErroTxdefe_Object = MibTableColumn
staLanErroTxdefe = _StaLanErroTxdefe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 54, 1, 17),
    _StaLanErroTxdefe_Type()
)
staLanErroTxdefe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErroTxdefe.setStatus("current")
_StaLanLanq_Type = Counter32
_StaLanLanq_Object = MibScalar
staLanLanq = _StaLanLanq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 5, 60),
    _StaLanLanq_Type()
)
staLanLanq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanLanq.setStatus("current")
_StaPpp_ObjectIdentity = ObjectIdentity
staPpp = _StaPpp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6)
)
_StaPppPppTable_Object = MibTable
staPppPppTable = _StaPppPppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1)
)
if mibBuilder.loadTexts:
    staPppPppTable.setStatus("current")
_StaPppPppEntry_Object = MibTableRow
staPppPppEntry = _StaPppPppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1)
)
staPppPppEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPppPppIfc"),
)
if mibBuilder.loadTexts:
    staPppPppEntry.setStatus("current")


class _StaPppPppIfc_Type(Integer32):
    """Custom type staPppPppIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaPppPppIfc_Type.__name__ = "Integer32"
_StaPppPppIfc_Object = MibTableColumn
staPppPppIfc = _StaPppPppIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 1),
    _StaPppPppIfc_Type()
)
staPppPppIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppIfc.setStatus("current")


class _StaPppPppPha_Type(Integer32):
    """Custom type staPppPppPha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("authenticate", 4),
          ("callback", 5),
          ("dead", 1),
          ("establish", 2),
          ("network", 6),
          ("terminate", 3))
    )


_StaPppPppPha_Type.__name__ = "Integer32"
_StaPppPppPha_Object = MibTableColumn
staPppPppPha = _StaPppPppPha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 2),
    _StaPppPppPha_Type()
)
staPppPppPha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppPha.setStatus("current")


class _StaPppPppLcp_Type(Integer32):
    """Custom type staPppPppLcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppLcp_Type.__name__ = "Integer32"
_StaPppPppLcp_Object = MibTableColumn
staPppPppLcp = _StaPppPppLcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 3),
    _StaPppPppLcp_Type()
)
staPppPppLcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppLcp.setStatus("current")


class _StaPppPppIpc_Type(Integer32):
    """Custom type staPppPppIpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppIpc_Type.__name__ = "Integer32"
_StaPppPppIpc_Object = MibTableColumn
staPppPppIpc = _StaPppPppIpc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 4),
    _StaPppPppIpc_Type()
)
staPppPppIpc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppIpc.setStatus("current")


class _StaPppPppCcp_Type(Integer32):
    """Custom type staPppPppCcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppCcp_Type.__name__ = "Integer32"
_StaPppPppCcp_Object = MibTableColumn
staPppPppCcp = _StaPppPppCcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 6),
    _StaPppPppCcp_Type()
)
staPppPppCcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppCcp.setStatus("current")


class _StaPppPppBac_Type(Integer32):
    """Custom type staPppPppBac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppBac_Type.__name__ = "Integer32"
_StaPppPppBac_Object = MibTableColumn
staPppPppBac = _StaPppPppBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 1, 1, 7),
    _StaPppPppBac_Type()
)
staPppPppBac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppBac.setStatus("current")
_StaPppLcp_ObjectIdentity = ObjectIdentity
staPppLcp = _StaPppLcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2)
)
_StaPppLcpRxerrors_Type = Counter32
_StaPppLcpRxerrors_Object = MibScalar
staPppLcpRxerrors = _StaPppLcpRxerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 1),
    _StaPppLcpRxerrors_Type()
)
staPppLcpRxerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxerrors.setStatus("current")
_StaPppLcpRxdiscarded_Type = Counter32
_StaPppLcpRxdiscarded_Object = MibScalar
staPppLcpRxdiscarded = _StaPppLcpRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 2),
    _StaPppLcpRxdiscarded_Type()
)
staPppLcpRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxdiscarded.setStatus("current")
_StaPppLcpRxconfigrequ_Type = Counter32
_StaPppLcpRxconfigrequ_Object = MibScalar
staPppLcpRxconfigrequ = _StaPppLcpRxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 3),
    _StaPppLcpRxconfigrequ_Type()
)
staPppLcpRxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfigrequ.setStatus("current")
_StaPppLcpRxconfigack_Type = Counter32
_StaPppLcpRxconfigack_Object = MibScalar
staPppLcpRxconfigack = _StaPppLcpRxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 4),
    _StaPppLcpRxconfigack_Type()
)
staPppLcpRxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfigack.setStatus("current")
_StaPppLcpRxconfignak_Type = Counter32
_StaPppLcpRxconfignak_Object = MibScalar
staPppLcpRxconfignak = _StaPppLcpRxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 5),
    _StaPppLcpRxconfignak_Type()
)
staPppLcpRxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfignak.setStatus("current")
_StaPppLcpRxconfigreje_Type = Counter32
_StaPppLcpRxconfigreje_Object = MibScalar
staPppLcpRxconfigreje = _StaPppLcpRxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 6),
    _StaPppLcpRxconfigreje_Type()
)
staPppLcpRxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfigreje.setStatus("current")
_StaPppLcpRxterminater_Type = Counter32
_StaPppLcpRxterminater_Object = MibScalar
staPppLcpRxterminater = _StaPppLcpRxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 7),
    _StaPppLcpRxterminater_Type()
)
staPppLcpRxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxterminater.setStatus("current")
_StaPppLcpRxterminatea_Type = Counter32
_StaPppLcpRxterminatea_Object = MibScalar
staPppLcpRxterminatea = _StaPppLcpRxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 8),
    _StaPppLcpRxterminatea_Type()
)
staPppLcpRxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxterminatea.setStatus("current")
_StaPppLcpRxcodereject_Type = Counter32
_StaPppLcpRxcodereject_Object = MibScalar
staPppLcpRxcodereject = _StaPppLcpRxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 9),
    _StaPppLcpRxcodereject_Type()
)
staPppLcpRxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxcodereject.setStatus("current")
_StaPppLcpRxprotocolre_Type = Counter32
_StaPppLcpRxprotocolre_Object = MibScalar
staPppLcpRxprotocolre = _StaPppLcpRxprotocolre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 10),
    _StaPppLcpRxprotocolre_Type()
)
staPppLcpRxprotocolre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxprotocolre.setStatus("current")
_StaPppLcpRxechoreques_Type = Counter32
_StaPppLcpRxechoreques_Object = MibScalar
staPppLcpRxechoreques = _StaPppLcpRxechoreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 11),
    _StaPppLcpRxechoreques_Type()
)
staPppLcpRxechoreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxechoreques.setStatus("current")
_StaPppLcpRxechoreply_Type = Counter32
_StaPppLcpRxechoreply_Object = MibScalar
staPppLcpRxechoreply = _StaPppLcpRxechoreply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 12),
    _StaPppLcpRxechoreply_Type()
)
staPppLcpRxechoreply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxechoreply.setStatus("current")
_StaPppLcpRxdiscardreq_Type = Counter32
_StaPppLcpRxdiscardreq_Object = MibScalar
staPppLcpRxdiscardreq = _StaPppLcpRxdiscardreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 13),
    _StaPppLcpRxdiscardreq_Type()
)
staPppLcpRxdiscardreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxdiscardreq.setStatus("current")
_StaPppLcpTxconfigrequ_Type = Counter32
_StaPppLcpTxconfigrequ_Object = MibScalar
staPppLcpTxconfigrequ = _StaPppLcpTxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 14),
    _StaPppLcpTxconfigrequ_Type()
)
staPppLcpTxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfigrequ.setStatus("current")
_StaPppLcpTxconfigack_Type = Counter32
_StaPppLcpTxconfigack_Object = MibScalar
staPppLcpTxconfigack = _StaPppLcpTxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 15),
    _StaPppLcpTxconfigack_Type()
)
staPppLcpTxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfigack.setStatus("current")
_StaPppLcpTxconfignak_Type = Counter32
_StaPppLcpTxconfignak_Object = MibScalar
staPppLcpTxconfignak = _StaPppLcpTxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 16),
    _StaPppLcpTxconfignak_Type()
)
staPppLcpTxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfignak.setStatus("current")
_StaPppLcpTxconfigreje_Type = Counter32
_StaPppLcpTxconfigreje_Object = MibScalar
staPppLcpTxconfigreje = _StaPppLcpTxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 17),
    _StaPppLcpTxconfigreje_Type()
)
staPppLcpTxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfigreje.setStatus("current")
_StaPppLcpTxterminater_Type = Counter32
_StaPppLcpTxterminater_Object = MibScalar
staPppLcpTxterminater = _StaPppLcpTxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 18),
    _StaPppLcpTxterminater_Type()
)
staPppLcpTxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxterminater.setStatus("current")
_StaPppLcpTxterminatea_Type = Counter32
_StaPppLcpTxterminatea_Object = MibScalar
staPppLcpTxterminatea = _StaPppLcpTxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 19),
    _StaPppLcpTxterminatea_Type()
)
staPppLcpTxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxterminatea.setStatus("current")
_StaPppLcpTxcodereject_Type = Counter32
_StaPppLcpTxcodereject_Object = MibScalar
staPppLcpTxcodereject = _StaPppLcpTxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 20),
    _StaPppLcpTxcodereject_Type()
)
staPppLcpTxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxcodereject.setStatus("current")
_StaPppLcpTxprotocolre_Type = Counter32
_StaPppLcpTxprotocolre_Object = MibScalar
staPppLcpTxprotocolre = _StaPppLcpTxprotocolre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 21),
    _StaPppLcpTxprotocolre_Type()
)
staPppLcpTxprotocolre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxprotocolre.setStatus("current")
_StaPppLcpTxechoreques_Type = Counter32
_StaPppLcpTxechoreques_Object = MibScalar
staPppLcpTxechoreques = _StaPppLcpTxechoreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 22),
    _StaPppLcpTxechoreques_Type()
)
staPppLcpTxechoreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxechoreques.setStatus("current")
_StaPppLcpTxechoreply_Type = Counter32
_StaPppLcpTxechoreply_Object = MibScalar
staPppLcpTxechoreply = _StaPppLcpTxechoreply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 23),
    _StaPppLcpTxechoreply_Type()
)
staPppLcpTxechoreply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxechoreply.setStatus("current")
_StaPppLcpTxdiscardreq_Type = Counter32
_StaPppLcpTxdiscardreq_Object = MibScalar
staPppLcpTxdiscardreq = _StaPppLcpTxdiscardreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 24),
    _StaPppLcpTxdiscardreq_Type()
)
staPppLcpTxdiscardreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxdiscardreq.setStatus("current")
_StaPppLcpDeletevalues_Type = DisplayString
_StaPppLcpDeletevalues_Object = MibScalar
staPppLcpDeletevalues = _StaPppLcpDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 2, 25),
    _StaPppLcpDeletevalues_Type()
)
staPppLcpDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppLcpDeletevalues.setStatus("current")
_StaPppPap_ObjectIdentity = ObjectIdentity
staPppPap = _StaPppPap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3)
)
_StaPppPapRxdis_Type = Counter32
_StaPppPapRxdis_Object = MibScalar
staPppPapRxdis = _StaPppPapRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 1),
    _StaPppPapRxdis_Type()
)
staPppPapRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxdis.setStatus("current")
_StaPppPapRxreq_Type = Counter32
_StaPppPapRxreq_Object = MibScalar
staPppPapRxreq = _StaPppPapRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 2),
    _StaPppPapRxreq_Type()
)
staPppPapRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxreq.setStatus("current")
_StaPppPapRxsuc_Type = Counter32
_StaPppPapRxsuc_Object = MibScalar
staPppPapRxsuc = _StaPppPapRxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 3),
    _StaPppPapRxsuc_Type()
)
staPppPapRxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxsuc.setStatus("current")
_StaPppPapRxfai_Type = Counter32
_StaPppPapRxfai_Object = MibScalar
staPppPapRxfai = _StaPppPapRxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 4),
    _StaPppPapRxfai_Type()
)
staPppPapRxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxfai.setStatus("current")
_StaPppPapTxret_Type = Counter32
_StaPppPapTxret_Object = MibScalar
staPppPapTxret = _StaPppPapTxret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 5),
    _StaPppPapTxret_Type()
)
staPppPapTxret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxret.setStatus("current")
_StaPppPapTxreq_Type = Counter32
_StaPppPapTxreq_Object = MibScalar
staPppPapTxreq = _StaPppPapTxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 6),
    _StaPppPapTxreq_Type()
)
staPppPapTxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxreq.setStatus("current")
_StaPppPapTxsuc_Type = Counter32
_StaPppPapTxsuc_Object = MibScalar
staPppPapTxsuc = _StaPppPapTxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 7),
    _StaPppPapTxsuc_Type()
)
staPppPapTxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxsuc.setStatus("current")
_StaPppPapTxfai_Type = Counter32
_StaPppPapTxfai_Object = MibScalar
staPppPapTxfai = _StaPppPapTxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 8),
    _StaPppPapTxfai_Type()
)
staPppPapTxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxfai.setStatus("current")
_StaPppPapDelet_Type = DisplayString
_StaPppPapDelet_Object = MibScalar
staPppPapDelet = _StaPppPapDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 3, 9),
    _StaPppPapDelet_Type()
)
staPppPapDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppPapDelet.setStatus("current")
_StaPppCha_ObjectIdentity = ObjectIdentity
staPppCha = _StaPppCha_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4)
)
_StaPppChaRxdis_Type = Counter32
_StaPppChaRxdis_Object = MibScalar
staPppChaRxdis = _StaPppChaRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 1),
    _StaPppChaRxdis_Type()
)
staPppChaRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxdis.setStatus("current")
_StaPppChaRxcha_Type = Counter32
_StaPppChaRxcha_Object = MibScalar
staPppChaRxcha = _StaPppChaRxcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 2),
    _StaPppChaRxcha_Type()
)
staPppChaRxcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxcha.setStatus("current")
_StaPppChaRxres_Type = Counter32
_StaPppChaRxres_Object = MibScalar
staPppChaRxres = _StaPppChaRxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 3),
    _StaPppChaRxres_Type()
)
staPppChaRxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxres.setStatus("current")
_StaPppChaRxsuc_Type = Counter32
_StaPppChaRxsuc_Object = MibScalar
staPppChaRxsuc = _StaPppChaRxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 4),
    _StaPppChaRxsuc_Type()
)
staPppChaRxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxsuc.setStatus("current")
_StaPppChaRxfai_Type = Counter32
_StaPppChaRxfai_Object = MibScalar
staPppChaRxfai = _StaPppChaRxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 5),
    _StaPppChaRxfai_Type()
)
staPppChaRxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxfai.setStatus("current")
_StaPppChaTxret_Type = Counter32
_StaPppChaTxret_Object = MibScalar
staPppChaTxret = _StaPppChaTxret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 6),
    _StaPppChaTxret_Type()
)
staPppChaTxret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxret.setStatus("current")
_StaPppChaTxcha_Type = Counter32
_StaPppChaTxcha_Object = MibScalar
staPppChaTxcha = _StaPppChaTxcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 7),
    _StaPppChaTxcha_Type()
)
staPppChaTxcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxcha.setStatus("current")
_StaPppChaTxres_Type = Counter32
_StaPppChaTxres_Object = MibScalar
staPppChaTxres = _StaPppChaTxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 8),
    _StaPppChaTxres_Type()
)
staPppChaTxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxres.setStatus("current")
_StaPppChaTxsuc_Type = Counter32
_StaPppChaTxsuc_Object = MibScalar
staPppChaTxsuc = _StaPppChaTxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 9),
    _StaPppChaTxsuc_Type()
)
staPppChaTxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxsuc.setStatus("current")
_StaPppChaTxfai_Type = Counter32
_StaPppChaTxfai_Object = MibScalar
staPppChaTxfai = _StaPppChaTxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 10),
    _StaPppChaTxfai_Type()
)
staPppChaTxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxfai.setStatus("current")
_StaPppChaDelet_Type = DisplayString
_StaPppChaDelet_Object = MibScalar
staPppChaDelet = _StaPppChaDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 4, 11),
    _StaPppChaDelet_Type()
)
staPppChaDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppChaDelet.setStatus("current")
_StaPppIpc_ObjectIdentity = ObjectIdentity
staPppIpc = _StaPppIpc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6)
)
_StaPppIpcRxdiscarded_Type = Counter32
_StaPppIpcRxdiscarded_Object = MibScalar
staPppIpcRxdiscarded = _StaPppIpcRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 1),
    _StaPppIpcRxdiscarded_Type()
)
staPppIpcRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxdiscarded.setStatus("current")
_StaPppIpcRxconfigrequ_Type = Counter32
_StaPppIpcRxconfigrequ_Object = MibScalar
staPppIpcRxconfigrequ = _StaPppIpcRxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 2),
    _StaPppIpcRxconfigrequ_Type()
)
staPppIpcRxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfigrequ.setStatus("current")
_StaPppIpcRxconfigack_Type = Counter32
_StaPppIpcRxconfigack_Object = MibScalar
staPppIpcRxconfigack = _StaPppIpcRxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 3),
    _StaPppIpcRxconfigack_Type()
)
staPppIpcRxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfigack.setStatus("current")
_StaPppIpcRxconfignak_Type = Counter32
_StaPppIpcRxconfignak_Object = MibScalar
staPppIpcRxconfignak = _StaPppIpcRxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 4),
    _StaPppIpcRxconfignak_Type()
)
staPppIpcRxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfignak.setStatus("current")
_StaPppIpcRxconfigreje_Type = Counter32
_StaPppIpcRxconfigreje_Object = MibScalar
staPppIpcRxconfigreje = _StaPppIpcRxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 5),
    _StaPppIpcRxconfigreje_Type()
)
staPppIpcRxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfigreje.setStatus("current")
_StaPppIpcRxterminater_Type = Counter32
_StaPppIpcRxterminater_Object = MibScalar
staPppIpcRxterminater = _StaPppIpcRxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 6),
    _StaPppIpcRxterminater_Type()
)
staPppIpcRxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxterminater.setStatus("current")
_StaPppIpcRxterminatea_Type = Counter32
_StaPppIpcRxterminatea_Object = MibScalar
staPppIpcRxterminatea = _StaPppIpcRxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 7),
    _StaPppIpcRxterminatea_Type()
)
staPppIpcRxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxterminatea.setStatus("current")
_StaPppIpcRxcodereject_Type = Counter32
_StaPppIpcRxcodereject_Object = MibScalar
staPppIpcRxcodereject = _StaPppIpcRxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 8),
    _StaPppIpcRxcodereject_Type()
)
staPppIpcRxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxcodereject.setStatus("current")
_StaPppIpcTxconfigrequ_Type = Counter32
_StaPppIpcTxconfigrequ_Object = MibScalar
staPppIpcTxconfigrequ = _StaPppIpcTxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 9),
    _StaPppIpcTxconfigrequ_Type()
)
staPppIpcTxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfigrequ.setStatus("current")
_StaPppIpcTxconfigack_Type = Counter32
_StaPppIpcTxconfigack_Object = MibScalar
staPppIpcTxconfigack = _StaPppIpcTxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 10),
    _StaPppIpcTxconfigack_Type()
)
staPppIpcTxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfigack.setStatus("current")
_StaPppIpcTxconfignak_Type = Counter32
_StaPppIpcTxconfignak_Object = MibScalar
staPppIpcTxconfignak = _StaPppIpcTxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 11),
    _StaPppIpcTxconfignak_Type()
)
staPppIpcTxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfignak.setStatus("current")
_StaPppIpcTxconfigreje_Type = Counter32
_StaPppIpcTxconfigreje_Object = MibScalar
staPppIpcTxconfigreje = _StaPppIpcTxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 12),
    _StaPppIpcTxconfigreje_Type()
)
staPppIpcTxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfigreje.setStatus("current")
_StaPppIpcTxterminater_Type = Counter32
_StaPppIpcTxterminater_Object = MibScalar
staPppIpcTxterminater = _StaPppIpcTxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 13),
    _StaPppIpcTxterminater_Type()
)
staPppIpcTxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxterminater.setStatus("current")
_StaPppIpcTxterminatea_Type = Counter32
_StaPppIpcTxterminatea_Object = MibScalar
staPppIpcTxterminatea = _StaPppIpcTxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 14),
    _StaPppIpcTxterminatea_Type()
)
staPppIpcTxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxterminatea.setStatus("current")
_StaPppIpcTxcodereject_Type = Counter32
_StaPppIpcTxcodereject_Object = MibScalar
staPppIpcTxcodereject = _StaPppIpcTxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 15),
    _StaPppIpcTxcodereject_Type()
)
staPppIpcTxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxcodereject.setStatus("current")
_StaPppIpcDeletevalues_Type = DisplayString
_StaPppIpcDeletevalues_Object = MibScalar
staPppIpcDeletevalues = _StaPppIpcDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 6, 16),
    _StaPppIpcDeletevalues_Type()
)
staPppIpcDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppIpcDeletevalues.setStatus("current")
_StaPppCbc_ObjectIdentity = ObjectIdentity
staPppCbc = _StaPppCbc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7)
)
_StaPppCbcRxdis_Type = Counter32
_StaPppCbcRxdis_Object = MibScalar
staPppCbcRxdis = _StaPppCbcRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 1),
    _StaPppCbcRxdis_Type()
)
staPppCbcRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcRxdis.setStatus("current")
_StaPppCbcRxreq_Type = Counter32
_StaPppCbcRxreq_Object = MibScalar
staPppCbcRxreq = _StaPppCbcRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 2),
    _StaPppCbcRxreq_Type()
)
staPppCbcRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcRxreq.setStatus("current")
_StaPppCbcRxres_Type = Counter32
_StaPppCbcRxres_Object = MibScalar
staPppCbcRxres = _StaPppCbcRxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 3),
    _StaPppCbcRxres_Type()
)
staPppCbcRxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcRxres.setStatus("current")
_StaPppCbcRxack_Type = Counter32
_StaPppCbcRxack_Object = MibScalar
staPppCbcRxack = _StaPppCbcRxack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 4),
    _StaPppCbcRxack_Type()
)
staPppCbcRxack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcRxack.setStatus("current")
_StaPppCbcTxreq_Type = Counter32
_StaPppCbcTxreq_Object = MibScalar
staPppCbcTxreq = _StaPppCbcTxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 5),
    _StaPppCbcTxreq_Type()
)
staPppCbcTxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcTxreq.setStatus("current")
_StaPppCbcTxres_Type = Counter32
_StaPppCbcTxres_Object = MibScalar
staPppCbcTxres = _StaPppCbcTxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 6),
    _StaPppCbcTxres_Type()
)
staPppCbcTxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcTxres.setStatus("current")
_StaPppCbcTxack_Type = Counter32
_StaPppCbcTxack_Object = MibScalar
staPppCbcTxack = _StaPppCbcTxack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 7),
    _StaPppCbcTxack_Type()
)
staPppCbcTxack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCbcTxack.setStatus("current")
_StaPppCbcDelet_Type = DisplayString
_StaPppCbcDelet_Object = MibScalar
staPppCbcDelet = _StaPppCbcDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 7, 8),
    _StaPppCbcDelet_Type()
)
staPppCbcDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppCbcDelet.setStatus("current")
_StaPppRxo_ObjectIdentity = ObjectIdentity
staPppRxo = _StaPppRxo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8)
)
_StaPppRxoLcpTable_Object = MibTable
staPppRxoLcpTable = _StaPppRxoLcpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1)
)
if mibBuilder.loadTexts:
    staPppRxoLcpTable.setStatus("current")
_StaPppRxoLcpEntry_Object = MibTableRow
staPppRxoLcpEntry = _StaPppRxoLcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1)
)
staPppRxoLcpEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPppRxoLcpIfc"),
)
if mibBuilder.loadTexts:
    staPppRxoLcpEntry.setStatus("current")


class _StaPppRxoLcpIfc_Type(Integer32):
    """Custom type staPppRxoLcpIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaPppRxoLcpIfc_Type.__name__ = "Integer32"
_StaPppRxoLcpIfc_Object = MibTableColumn
staPppRxoLcpIfc = _StaPppRxoLcpIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 1),
    _StaPppRxoLcpIfc_Type()
)
staPppRxoLcpIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpIfc.setStatus("current")


class _StaPppRxoLcpMru_Type(Integer32):
    """Custom type staPppRxoLcpMru based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPppRxoLcpMru_Type.__name__ = "Integer32"
_StaPppRxoLcpMru_Object = MibTableColumn
staPppRxoLcpMru = _StaPppRxoLcpMru_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 2),
    _StaPppRxoLcpMru_Type()
)
staPppRxoLcpMru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpMru.setStatus("current")


class _StaPppRxoLcpAcc_Type(DisplayString):
    """Custom type staPppRxoLcpAcc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaPppRxoLcpAcc_Type.__name__ = "DisplayString"
_StaPppRxoLcpAcc_Object = MibTableColumn
staPppRxoLcpAcc = _StaPppRxoLcpAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 3),
    _StaPppRxoLcpAcc_Type()
)
staPppRxoLcpAcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpAcc.setStatus("current")


class _StaPppRxoLcpAut_Type(Integer32):
    """Custom type staPppRxoLcpAut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8,
              16,
              32)
        )
    )
    namedValues = NamedValues(
        *(("chap", 8),
          ("ms-chap", 16),
          ("ms-chapv2", 32),
          ("none", 0),
          ("pap", 4))
    )


_StaPppRxoLcpAut_Type.__name__ = "Integer32"
_StaPppRxoLcpAut_Object = MibTableColumn
staPppRxoLcpAut = _StaPppRxoLcpAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 4),
    _StaPppRxoLcpAut_Type()
)
staPppRxoLcpAut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpAut.setStatus("current")


class _StaPppRxoLcpCal_Type(Integer32):
    """Custom type staPppRxoLcpCal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              255)
        )
    )
    namedValues = NamedValues(
        *(("cbcp", 6),
          ("lcp", 5),
          ("none", 255))
    )


_StaPppRxoLcpCal_Type.__name__ = "Integer32"
_StaPppRxoLcpCal_Object = MibTableColumn
staPppRxoLcpCal = _StaPppRxoLcpCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 5),
    _StaPppRxoLcpCal_Type()
)
staPppRxoLcpCal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpCal.setStatus("current")


class _StaPppRxoLcpMag_Type(DisplayString):
    """Custom type staPppRxoLcpMag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaPppRxoLcpMag_Type.__name__ = "DisplayString"
_StaPppRxoLcpMag_Object = MibTableColumn
staPppRxoLcpMag = _StaPppRxoLcpMag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 6),
    _StaPppRxoLcpMag_Type()
)
staPppRxoLcpMag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpMag.setStatus("current")


class _StaPppRxoLcpPfc_Type(Integer32):
    """Custom type staPppRxoLcpPfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaPppRxoLcpPfc_Type.__name__ = "Integer32"
_StaPppRxoLcpPfc_Object = MibTableColumn
staPppRxoLcpPfc = _StaPppRxoLcpPfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 7),
    _StaPppRxoLcpPfc_Type()
)
staPppRxoLcpPfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpPfc.setStatus("current")


class _StaPppRxoLcpAcf_Type(Integer32):
    """Custom type staPppRxoLcpAcf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaPppRxoLcpAcf_Type.__name__ = "Integer32"
_StaPppRxoLcpAcf_Object = MibTableColumn
staPppRxoLcpAcf = _StaPppRxoLcpAcf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 1, 1, 8),
    _StaPppRxoLcpAcf_Type()
)
staPppRxoLcpAcf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpAcf.setStatus("current")
_StaPppRxoIpcTable_Object = MibTable
staPppRxoIpcTable = _StaPppRxoIpcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3)
)
if mibBuilder.loadTexts:
    staPppRxoIpcTable.setStatus("current")
_StaPppRxoIpcEntry_Object = MibTableRow
staPppRxoIpcEntry = _StaPppRxoIpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1)
)
staPppRxoIpcEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPppRxoIpcIfc"),
)
if mibBuilder.loadTexts:
    staPppRxoIpcEntry.setStatus("current")


class _StaPppRxoIpcIfc_Type(Integer32):
    """Custom type staPppRxoIpcIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaPppRxoIpcIfc_Type.__name__ = "Integer32"
_StaPppRxoIpcIfc_Object = MibTableColumn
staPppRxoIpcIfc = _StaPppRxoIpcIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 1),
    _StaPppRxoIpcIfc_Type()
)
staPppRxoIpcIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcIfc.setStatus("current")
_StaPppRxoIpcIpadd_Type = IpAddress
_StaPppRxoIpcIpadd_Object = MibTableColumn
staPppRxoIpcIpadd = _StaPppRxoIpcIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 2),
    _StaPppRxoIpcIpadd_Type()
)
staPppRxoIpcIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcIpadd.setStatus("current")
_StaPppRxoIpcDnsde_Type = IpAddress
_StaPppRxoIpcDnsde_Object = MibTableColumn
staPppRxoIpcDnsde = _StaPppRxoIpcDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 3),
    _StaPppRxoIpcDnsde_Type()
)
staPppRxoIpcDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcDnsde.setStatus("current")
_StaPppRxoIpcNbnsd_Type = IpAddress
_StaPppRxoIpcNbnsd_Object = MibTableColumn
staPppRxoIpcNbnsd = _StaPppRxoIpcNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 4),
    _StaPppRxoIpcNbnsd_Type()
)
staPppRxoIpcNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcNbnsd.setStatus("current")
_StaPppRxoIpcDnsba_Type = IpAddress
_StaPppRxoIpcDnsba_Object = MibTableColumn
staPppRxoIpcDnsba = _StaPppRxoIpcDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 5),
    _StaPppRxoIpcDnsba_Type()
)
staPppRxoIpcDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcDnsba.setStatus("current")
_StaPppRxoIpcNbnsb_Type = IpAddress
_StaPppRxoIpcNbnsb_Object = MibTableColumn
staPppRxoIpcNbnsb = _StaPppRxoIpcNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 8, 3, 1, 6),
    _StaPppRxoIpcNbnsb_Type()
)
staPppRxoIpcNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcNbnsb.setStatus("current")
_StaPppTxo_ObjectIdentity = ObjectIdentity
staPppTxo = _StaPppTxo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9)
)
_StaPppTxoLcpTable_Object = MibTable
staPppTxoLcpTable = _StaPppTxoLcpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1)
)
if mibBuilder.loadTexts:
    staPppTxoLcpTable.setStatus("current")
_StaPppTxoLcpEntry_Object = MibTableRow
staPppTxoLcpEntry = _StaPppTxoLcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1)
)
staPppTxoLcpEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPppTxoLcpIfc"),
)
if mibBuilder.loadTexts:
    staPppTxoLcpEntry.setStatus("current")


class _StaPppTxoLcpIfc_Type(Integer32):
    """Custom type staPppTxoLcpIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaPppTxoLcpIfc_Type.__name__ = "Integer32"
_StaPppTxoLcpIfc_Object = MibTableColumn
staPppTxoLcpIfc = _StaPppTxoLcpIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 1),
    _StaPppTxoLcpIfc_Type()
)
staPppTxoLcpIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpIfc.setStatus("current")


class _StaPppTxoLcpMru_Type(Integer32):
    """Custom type staPppTxoLcpMru based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPppTxoLcpMru_Type.__name__ = "Integer32"
_StaPppTxoLcpMru_Object = MibTableColumn
staPppTxoLcpMru = _StaPppTxoLcpMru_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 2),
    _StaPppTxoLcpMru_Type()
)
staPppTxoLcpMru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpMru.setStatus("current")


class _StaPppTxoLcpAcc_Type(DisplayString):
    """Custom type staPppTxoLcpAcc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaPppTxoLcpAcc_Type.__name__ = "DisplayString"
_StaPppTxoLcpAcc_Object = MibTableColumn
staPppTxoLcpAcc = _StaPppTxoLcpAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 3),
    _StaPppTxoLcpAcc_Type()
)
staPppTxoLcpAcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpAcc.setStatus("current")


class _StaPppTxoLcpAut_Type(Integer32):
    """Custom type staPppTxoLcpAut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8,
              16,
              32)
        )
    )
    namedValues = NamedValues(
        *(("chap", 8),
          ("ms-chap", 16),
          ("ms-chapv2", 32),
          ("none", 0),
          ("pap", 4))
    )


_StaPppTxoLcpAut_Type.__name__ = "Integer32"
_StaPppTxoLcpAut_Object = MibTableColumn
staPppTxoLcpAut = _StaPppTxoLcpAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 4),
    _StaPppTxoLcpAut_Type()
)
staPppTxoLcpAut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpAut.setStatus("current")


class _StaPppTxoLcpCal_Type(Integer32):
    """Custom type staPppTxoLcpCal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              255)
        )
    )
    namedValues = NamedValues(
        *(("cbcp", 6),
          ("lcp", 5),
          ("none", 255))
    )


_StaPppTxoLcpCal_Type.__name__ = "Integer32"
_StaPppTxoLcpCal_Object = MibTableColumn
staPppTxoLcpCal = _StaPppTxoLcpCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 5),
    _StaPppTxoLcpCal_Type()
)
staPppTxoLcpCal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpCal.setStatus("current")


class _StaPppTxoLcpMag_Type(DisplayString):
    """Custom type staPppTxoLcpMag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaPppTxoLcpMag_Type.__name__ = "DisplayString"
_StaPppTxoLcpMag_Object = MibTableColumn
staPppTxoLcpMag = _StaPppTxoLcpMag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 6),
    _StaPppTxoLcpMag_Type()
)
staPppTxoLcpMag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpMag.setStatus("current")


class _StaPppTxoLcpPfc_Type(Integer32):
    """Custom type staPppTxoLcpPfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaPppTxoLcpPfc_Type.__name__ = "Integer32"
_StaPppTxoLcpPfc_Object = MibTableColumn
staPppTxoLcpPfc = _StaPppTxoLcpPfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 7),
    _StaPppTxoLcpPfc_Type()
)
staPppTxoLcpPfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpPfc.setStatus("current")


class _StaPppTxoLcpAcf_Type(Integer32):
    """Custom type staPppTxoLcpAcf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaPppTxoLcpAcf_Type.__name__ = "Integer32"
_StaPppTxoLcpAcf_Object = MibTableColumn
staPppTxoLcpAcf = _StaPppTxoLcpAcf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 1, 1, 8),
    _StaPppTxoLcpAcf_Type()
)
staPppTxoLcpAcf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpAcf.setStatus("current")
_StaPppTxoIpcTable_Object = MibTable
staPppTxoIpcTable = _StaPppTxoIpcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3)
)
if mibBuilder.loadTexts:
    staPppTxoIpcTable.setStatus("current")
_StaPppTxoIpcEntry_Object = MibTableRow
staPppTxoIpcEntry = _StaPppTxoIpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1)
)
staPppTxoIpcEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPppTxoIpcIfc"),
)
if mibBuilder.loadTexts:
    staPppTxoIpcEntry.setStatus("current")


class _StaPppTxoIpcIfc_Type(Integer32):
    """Custom type staPppTxoIpcIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaPppTxoIpcIfc_Type.__name__ = "Integer32"
_StaPppTxoIpcIfc_Object = MibTableColumn
staPppTxoIpcIfc = _StaPppTxoIpcIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 1),
    _StaPppTxoIpcIfc_Type()
)
staPppTxoIpcIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcIfc.setStatus("current")
_StaPppTxoIpcIpadd_Type = IpAddress
_StaPppTxoIpcIpadd_Object = MibTableColumn
staPppTxoIpcIpadd = _StaPppTxoIpcIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 2),
    _StaPppTxoIpcIpadd_Type()
)
staPppTxoIpcIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcIpadd.setStatus("current")
_StaPppTxoIpcDnsde_Type = IpAddress
_StaPppTxoIpcDnsde_Object = MibTableColumn
staPppTxoIpcDnsde = _StaPppTxoIpcDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 3),
    _StaPppTxoIpcDnsde_Type()
)
staPppTxoIpcDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcDnsde.setStatus("current")
_StaPppTxoIpcNbnsd_Type = IpAddress
_StaPppTxoIpcNbnsd_Object = MibTableColumn
staPppTxoIpcNbnsd = _StaPppTxoIpcNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 4),
    _StaPppTxoIpcNbnsd_Type()
)
staPppTxoIpcNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcNbnsd.setStatus("current")
_StaPppTxoIpcDnsba_Type = IpAddress
_StaPppTxoIpcDnsba_Object = MibTableColumn
staPppTxoIpcDnsba = _StaPppTxoIpcDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 5),
    _StaPppTxoIpcDnsba_Type()
)
staPppTxoIpcDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcDnsba.setStatus("current")
_StaPppTxoIpcNbnsb_Type = IpAddress
_StaPppTxoIpcNbnsb_Object = MibTableColumn
staPppTxoIpcNbnsb = _StaPppTxoIpcNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 9, 3, 1, 6),
    _StaPppTxoIpcNbnsb_Type()
)
staPppTxoIpcNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcNbnsb.setStatus("current")
_StaPppCcp_ObjectIdentity = ObjectIdentity
staPppCcp = _StaPppCcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10)
)
_StaPppCcpRxdiscarded_Type = Counter32
_StaPppCcpRxdiscarded_Object = MibScalar
staPppCcpRxdiscarded = _StaPppCcpRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 1),
    _StaPppCcpRxdiscarded_Type()
)
staPppCcpRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxdiscarded.setStatus("current")
_StaPppCcpRxconfigrequ_Type = Counter32
_StaPppCcpRxconfigrequ_Object = MibScalar
staPppCcpRxconfigrequ = _StaPppCcpRxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 2),
    _StaPppCcpRxconfigrequ_Type()
)
staPppCcpRxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfigrequ.setStatus("current")
_StaPppCcpRxconfigack_Type = Counter32
_StaPppCcpRxconfigack_Object = MibScalar
staPppCcpRxconfigack = _StaPppCcpRxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 3),
    _StaPppCcpRxconfigack_Type()
)
staPppCcpRxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfigack.setStatus("current")
_StaPppCcpRxconfignak_Type = Counter32
_StaPppCcpRxconfignak_Object = MibScalar
staPppCcpRxconfignak = _StaPppCcpRxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 4),
    _StaPppCcpRxconfignak_Type()
)
staPppCcpRxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfignak.setStatus("current")
_StaPppCcpRxconfigreje_Type = Counter32
_StaPppCcpRxconfigreje_Object = MibScalar
staPppCcpRxconfigreje = _StaPppCcpRxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 5),
    _StaPppCcpRxconfigreje_Type()
)
staPppCcpRxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfigreje.setStatus("current")
_StaPppCcpRxterminater_Type = Counter32
_StaPppCcpRxterminater_Object = MibScalar
staPppCcpRxterminater = _StaPppCcpRxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 6),
    _StaPppCcpRxterminater_Type()
)
staPppCcpRxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxterminater.setStatus("current")
_StaPppCcpRxterminatea_Type = Counter32
_StaPppCcpRxterminatea_Object = MibScalar
staPppCcpRxterminatea = _StaPppCcpRxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 7),
    _StaPppCcpRxterminatea_Type()
)
staPppCcpRxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxterminatea.setStatus("current")
_StaPppCcpRxcodereject_Type = Counter32
_StaPppCcpRxcodereject_Object = MibScalar
staPppCcpRxcodereject = _StaPppCcpRxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 8),
    _StaPppCcpRxcodereject_Type()
)
staPppCcpRxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxcodereject.setStatus("current")
_StaPppCcpRxresetreque_Type = Counter32
_StaPppCcpRxresetreque_Object = MibScalar
staPppCcpRxresetreque = _StaPppCcpRxresetreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 9),
    _StaPppCcpRxresetreque_Type()
)
staPppCcpRxresetreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxresetreque.setStatus("current")
_StaPppCcpRxresetack_Type = Counter32
_StaPppCcpRxresetack_Object = MibScalar
staPppCcpRxresetack = _StaPppCcpRxresetack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 10),
    _StaPppCcpRxresetack_Type()
)
staPppCcpRxresetack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxresetack.setStatus("current")
_StaPppCcpTxconfigrequ_Type = Counter32
_StaPppCcpTxconfigrequ_Object = MibScalar
staPppCcpTxconfigrequ = _StaPppCcpTxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 11),
    _StaPppCcpTxconfigrequ_Type()
)
staPppCcpTxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfigrequ.setStatus("current")
_StaPppCcpTxconfigack_Type = Counter32
_StaPppCcpTxconfigack_Object = MibScalar
staPppCcpTxconfigack = _StaPppCcpTxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 12),
    _StaPppCcpTxconfigack_Type()
)
staPppCcpTxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfigack.setStatus("current")
_StaPppCcpTxconfignak_Type = Counter32
_StaPppCcpTxconfignak_Object = MibScalar
staPppCcpTxconfignak = _StaPppCcpTxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 13),
    _StaPppCcpTxconfignak_Type()
)
staPppCcpTxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfignak.setStatus("current")
_StaPppCcpTxconfigreje_Type = Counter32
_StaPppCcpTxconfigreje_Object = MibScalar
staPppCcpTxconfigreje = _StaPppCcpTxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 14),
    _StaPppCcpTxconfigreje_Type()
)
staPppCcpTxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfigreje.setStatus("current")
_StaPppCcpTxterminater_Type = Counter32
_StaPppCcpTxterminater_Object = MibScalar
staPppCcpTxterminater = _StaPppCcpTxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 15),
    _StaPppCcpTxterminater_Type()
)
staPppCcpTxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxterminater.setStatus("current")
_StaPppCcpTxterminatea_Type = Counter32
_StaPppCcpTxterminatea_Object = MibScalar
staPppCcpTxterminatea = _StaPppCcpTxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 16),
    _StaPppCcpTxterminatea_Type()
)
staPppCcpTxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxterminatea.setStatus("current")
_StaPppCcpTxcodereject_Type = Counter32
_StaPppCcpTxcodereject_Object = MibScalar
staPppCcpTxcodereject = _StaPppCcpTxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 17),
    _StaPppCcpTxcodereject_Type()
)
staPppCcpTxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxcodereject.setStatus("current")
_StaPppCcpTxresetreque_Type = Counter32
_StaPppCcpTxresetreque_Object = MibScalar
staPppCcpTxresetreque = _StaPppCcpTxresetreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 19),
    _StaPppCcpTxresetreque_Type()
)
staPppCcpTxresetreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxresetreque.setStatus("current")
_StaPppCcpTxresetack_Type = Counter32
_StaPppCcpTxresetack_Object = MibScalar
staPppCcpTxresetack = _StaPppCcpTxresetack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 20),
    _StaPppCcpTxresetack_Type()
)
staPppCcpTxresetack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxresetack.setStatus("current")
_StaPppCcpDeletevalues_Type = DisplayString
_StaPppCcpDeletevalues_Object = MibScalar
staPppCcpDeletevalues = _StaPppCcpDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 21),
    _StaPppCcpDeletevalues_Type()
)
staPppCcpDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppCcpDeletevalues.setStatus("current")
_StaPppCcpCompressione_Type = Counter32
_StaPppCcpCompressione_Object = MibScalar
staPppCcpCompressione = _StaPppCcpCompressione_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 10, 22),
    _StaPppCcpCompressione_Type()
)
staPppCcpCompressione.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpCompressione.setStatus("current")
_StaPppMl_ObjectIdentity = ObjectIdentity
staPppMl = _StaPppMl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11)
)
_StaPppMlBundlec_Type = Integer32
_StaPppMlBundlec_Object = MibScalar
staPppMlBundlec = _StaPppMlBundlec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 1),
    _StaPppMlBundlec_Type()
)
staPppMlBundlec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlBundlec.setStatus("current")
_StaPppMlRxseqlo_Type = Counter32
_StaPppMlRxseqlo_Object = MibScalar
staPppMlRxseqlo = _StaPppMlRxseqlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 2),
    _StaPppMlRxseqlo_Type()
)
staPppMlRxseqlo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxseqlo.setStatus("current")
_StaPppMlRxseqre_Type = Counter32
_StaPppMlRxseqre_Object = MibScalar
staPppMlRxseqre = _StaPppMlRxseqre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 3),
    _StaPppMlRxseqre_Type()
)
staPppMlRxseqre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxseqre.setStatus("current")
_StaPppMlRxmrrue_Type = Counter32
_StaPppMlRxmrrue_Object = MibScalar
staPppMlRxmrrue = _StaPppMlRxmrrue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 4),
    _StaPppMlRxmrrue_Type()
)
staPppMlRxmrrue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxmrrue.setStatus("current")
_StaPppMlRxheade_Type = Counter32
_StaPppMlRxheade_Object = MibScalar
staPppMlRxheade = _StaPppMlRxheade_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 5),
    _StaPppMlRxheade_Type()
)
staPppMlRxheade.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxheade.setStatus("current")
_StaPppMlRxdisca_Type = Counter32
_StaPppMlRxdisca_Object = MibScalar
staPppMlRxdisca = _StaPppMlRxdisca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 6),
    _StaPppMlRxdisca_Type()
)
staPppMlRxdisca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxdisca.setStatus("current")
_StaPppMlRxfrags_Type = Counter32
_StaPppMlRxfrags_Object = MibScalar
staPppMlRxfrags = _StaPppMlRxfrags_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 7),
    _StaPppMlRxfrags_Type()
)
staPppMlRxfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxfrags.setStatus("current")
_StaPppMlRxfragm_Type = Counter32
_StaPppMlRxfragm_Object = MibScalar
staPppMlRxfragm = _StaPppMlRxfragm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 8),
    _StaPppMlRxfragm_Type()
)
staPppMlRxfragm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxfragm.setStatus("current")
_StaPppMlRxfrage_Type = Counter32
_StaPppMlRxfrage_Object = MibScalar
staPppMlRxfrage = _StaPppMlRxfrage_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 9),
    _StaPppMlRxfrage_Type()
)
staPppMlRxfrage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxfrage.setStatus("current")
_StaPppMlRxnotfr_Type = Counter32
_StaPppMlRxnotfr_Object = MibScalar
staPppMlRxnotfr = _StaPppMlRxnotfr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 10),
    _StaPppMlRxnotfr_Type()
)
staPppMlRxnotfr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppMlRxnotfr.setStatus("current")
_StaPppMlDeletev_Type = DisplayString
_StaPppMlDeletev_Object = MibScalar
staPppMlDeletev = _StaPppMlDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 11, 11),
    _StaPppMlDeletev_Type()
)
staPppMlDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppMlDeletev.setStatus("current")
_StaPppBac_ObjectIdentity = ObjectIdentity
staPppBac = _StaPppBac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12)
)
_StaPppBacRxerrors_Type = Counter32
_StaPppBacRxerrors_Object = MibScalar
staPppBacRxerrors = _StaPppBacRxerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 1),
    _StaPppBacRxerrors_Type()
)
staPppBacRxerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxerrors.setStatus("current")
_StaPppBacRxdiscarded_Type = Counter32
_StaPppBacRxdiscarded_Object = MibScalar
staPppBacRxdiscarded = _StaPppBacRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 2),
    _StaPppBacRxdiscarded_Type()
)
staPppBacRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxdiscarded.setStatus("current")
_StaPppBacRxcallrequest_Type = Counter32
_StaPppBacRxcallrequest_Object = MibScalar
staPppBacRxcallrequest = _StaPppBacRxcallrequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 3),
    _StaPppBacRxcallrequest_Type()
)
staPppBacRxcallrequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxcallrequest.setStatus("current")
_StaPppBacRxcallrespons_Type = Counter32
_StaPppBacRxcallrespons_Object = MibScalar
staPppBacRxcallrespons = _StaPppBacRxcallrespons_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 4),
    _StaPppBacRxcallrespons_Type()
)
staPppBacRxcallrespons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxcallrespons.setStatus("current")
_StaPppBacRxcallbackreq_Type = Counter32
_StaPppBacRxcallbackreq_Object = MibScalar
staPppBacRxcallbackreq = _StaPppBacRxcallbackreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 5),
    _StaPppBacRxcallbackreq_Type()
)
staPppBacRxcallbackreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxcallbackreq.setStatus("current")
_StaPppBacRxcallbackres_Type = Counter32
_StaPppBacRxcallbackres_Object = MibScalar
staPppBacRxcallbackres = _StaPppBacRxcallbackres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 6),
    _StaPppBacRxcallbackres_Type()
)
staPppBacRxcallbackres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxcallbackres.setStatus("current")
_StaPppBacRxlinkdropreq_Type = Counter32
_StaPppBacRxlinkdropreq_Object = MibScalar
staPppBacRxlinkdropreq = _StaPppBacRxlinkdropreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 7),
    _StaPppBacRxlinkdropreq_Type()
)
staPppBacRxlinkdropreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxlinkdropreq.setStatus("current")
_StaPppBacRxlinkdropres_Type = Counter32
_StaPppBacRxlinkdropres_Object = MibScalar
staPppBacRxlinkdropres = _StaPppBacRxlinkdropres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 8),
    _StaPppBacRxlinkdropres_Type()
)
staPppBacRxlinkdropres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxlinkdropres.setStatus("current")
_StaPppBacRxstatusindic_Type = Counter32
_StaPppBacRxstatusindic_Object = MibScalar
staPppBacRxstatusindic = _StaPppBacRxstatusindic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 9),
    _StaPppBacRxstatusindic_Type()
)
staPppBacRxstatusindic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxstatusindic.setStatus("current")
_StaPppBacRxstatusrespo_Type = Counter32
_StaPppBacRxstatusrespo_Object = MibScalar
staPppBacRxstatusrespo = _StaPppBacRxstatusrespo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 10),
    _StaPppBacRxstatusrespo_Type()
)
staPppBacRxstatusrespo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacRxstatusrespo.setStatus("current")
_StaPppBacTxcallrequest_Type = Counter32
_StaPppBacTxcallrequest_Object = MibScalar
staPppBacTxcallrequest = _StaPppBacTxcallrequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 11),
    _StaPppBacTxcallrequest_Type()
)
staPppBacTxcallrequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxcallrequest.setStatus("current")
_StaPppBacTxcallrespons_Type = Counter32
_StaPppBacTxcallrespons_Object = MibScalar
staPppBacTxcallrespons = _StaPppBacTxcallrespons_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 12),
    _StaPppBacTxcallrespons_Type()
)
staPppBacTxcallrespons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxcallrespons.setStatus("current")
_StaPppBacTxcallbackreq_Type = Counter32
_StaPppBacTxcallbackreq_Object = MibScalar
staPppBacTxcallbackreq = _StaPppBacTxcallbackreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 13),
    _StaPppBacTxcallbackreq_Type()
)
staPppBacTxcallbackreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxcallbackreq.setStatus("current")
_StaPppBacTxcallbackres_Type = Counter32
_StaPppBacTxcallbackres_Object = MibScalar
staPppBacTxcallbackres = _StaPppBacTxcallbackres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 14),
    _StaPppBacTxcallbackres_Type()
)
staPppBacTxcallbackres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxcallbackres.setStatus("current")
_StaPppBacTxlinkdropreq_Type = Counter32
_StaPppBacTxlinkdropreq_Object = MibScalar
staPppBacTxlinkdropreq = _StaPppBacTxlinkdropreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 15),
    _StaPppBacTxlinkdropreq_Type()
)
staPppBacTxlinkdropreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxlinkdropreq.setStatus("current")
_StaPppBacTxlinkdropres_Type = Counter32
_StaPppBacTxlinkdropres_Object = MibScalar
staPppBacTxlinkdropres = _StaPppBacTxlinkdropres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 16),
    _StaPppBacTxlinkdropres_Type()
)
staPppBacTxlinkdropres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxlinkdropres.setStatus("current")
_StaPppBacTxstatusindic_Type = Counter32
_StaPppBacTxstatusindic_Object = MibScalar
staPppBacTxstatusindic = _StaPppBacTxstatusindic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 17),
    _StaPppBacTxstatusindic_Type()
)
staPppBacTxstatusindic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxstatusindic.setStatus("current")
_StaPppBacTxstatusrespo_Type = Counter32
_StaPppBacTxstatusrespo_Object = MibScalar
staPppBacTxstatusrespo = _StaPppBacTxstatusrespo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 18),
    _StaPppBacTxstatusrespo_Type()
)
staPppBacTxstatusrespo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppBacTxstatusrespo.setStatus("current")
_StaPppBacDeletevalues_Type = DisplayString
_StaPppBacDeletevalues_Object = MibScalar
staPppBacDeletevalues = _StaPppBacDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 12, 19),
    _StaPppBacDeletevalues_Type()
)
staPppBacDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppBacDeletevalues.setStatus("current")
_StaPppDel_Type = DisplayString
_StaPppDel_Object = MibScalar
staPppDel = _StaPppDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 6, 13),
    _StaPppDel_Type()
)
staPppDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppDel.setStatus("current")
_StaTcpi_ObjectIdentity = ObjectIdentity
staTcpi = _StaTcpi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9)
)
_StaTcpiArp_ObjectIdentity = ObjectIdentity
staTcpiArp = _StaTcpiArp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1)
)
_StaTcpiArpLanr_Type = Counter32
_StaTcpiArpLanr_Object = MibScalar
staTcpiArpLanr = _StaTcpiArpLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 1),
    _StaTcpiArpLanr_Type()
)
staTcpiArpLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpLanr.setStatus("current")
_StaTcpiArpLant_Type = Counter32
_StaTcpiArpLant_Object = MibScalar
staTcpiArpLant = _StaTcpiArpLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 2),
    _StaTcpiArpLant_Type()
)
staTcpiArpLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpLant.setStatus("current")
_StaTcpiArpLane_Type = Counter32
_StaTcpiArpLane_Object = MibScalar
staTcpiArpLane = _StaTcpiArpLane_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 3),
    _StaTcpiArpLane_Type()
)
staTcpiArpLane.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpLane.setStatus("current")
_StaTcpiArpWanr_Type = Counter32
_StaTcpiArpWanr_Object = MibScalar
staTcpiArpWanr = _StaTcpiArpWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 4),
    _StaTcpiArpWanr_Type()
)
staTcpiArpWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpWanr.setStatus("current")
_StaTcpiArpWant_Type = Counter32
_StaTcpiArpWant_Object = MibScalar
staTcpiArpWant = _StaTcpiArpWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 5),
    _StaTcpiArpWant_Type()
)
staTcpiArpWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpWant.setStatus("current")
_StaTcpiArpWane_Type = Counter32
_StaTcpiArpWane_Object = MibScalar
staTcpiArpWane = _StaTcpiArpWane_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 6),
    _StaTcpiArpWane_Type()
)
staTcpiArpWane.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpWane.setStatus("current")
_StaTcpiArpTablTable_Object = MibTable
staTcpiArpTablTable = _StaTcpiArpTablTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7)
)
if mibBuilder.loadTexts:
    staTcpiArpTablTable.setStatus("current")
_StaTcpiArpTablEntry_Object = MibTableRow
staTcpiArpTablEntry = _StaTcpiArpTablEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1)
)
staTcpiArpTablEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiArpTablIpa"),
)
if mibBuilder.loadTexts:
    staTcpiArpTablEntry.setStatus("current")
_StaTcpiArpTablIpa_Type = IpAddress
_StaTcpiArpTablIpa_Object = MibTableColumn
staTcpiArpTablIpa = _StaTcpiArpTablIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 1),
    _StaTcpiArpTablIpa_Type()
)
staTcpiArpTablIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablIpa.setStatus("current")
_StaTcpiArpTablMac_Type = MacAddress
_StaTcpiArpTablMac_Object = MibTableColumn
staTcpiArpTablMac = _StaTcpiArpTablMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 2),
    _StaTcpiArpTablMac_Type()
)
staTcpiArpTablMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablMac.setStatus("current")


class _StaTcpiArpTablLas_Type(Integer32):
    """Custom type staTcpiArpTablLas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiArpTablLas_Type.__name__ = "Integer32"
_StaTcpiArpTablLas_Object = MibTableColumn
staTcpiArpTablLas = _StaTcpiArpTablLas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 3),
    _StaTcpiArpTablLas_Type()
)
staTcpiArpTablLas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablLas.setStatus("current")


class _StaTcpiArpTablCon_Type(Integer32):
    """Custom type staTcpiArpTablCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3),
          ("wan", 4))
    )


_StaTcpiArpTablCon_Type.__name__ = "Integer32"
_StaTcpiArpTablCon_Object = MibTableColumn
staTcpiArpTablCon = _StaTcpiArpTablCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 4),
    _StaTcpiArpTablCon_Type()
)
staTcpiArpTablCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablCon.setStatus("current")


class _StaTcpiArpTablEth_Type(Integer32):
    """Custom type staTcpiArpTablEth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_StaTcpiArpTablEth_Type.__name__ = "Integer32"
_StaTcpiArpTablEth_Object = MibTableColumn
staTcpiArpTablEth = _StaTcpiArpTablEth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 5),
    _StaTcpiArpTablEth_Type()
)
staTcpiArpTablEth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablEth.setStatus("current")


class _StaTcpiArpTablPee_Type(DisplayString):
    """Custom type staTcpiArpTablPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaTcpiArpTablPee_Type.__name__ = "DisplayString"
_StaTcpiArpTablPee_Object = MibTableColumn
staTcpiArpTablPee = _StaTcpiArpTablPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 6),
    _StaTcpiArpTablPee_Type()
)
staTcpiArpTablPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablPee.setStatus("current")


class _StaTcpiArpTablVla_Type(Integer32):
    """Custom type staTcpiArpTablVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiArpTablVla_Type.__name__ = "Integer32"
_StaTcpiArpTablVla_Object = MibTableColumn
staTcpiArpTablVla = _StaTcpiArpTablVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 7, 1, 7),
    _StaTcpiArpTablVla_Type()
)
staTcpiArpTablVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiArpTablVla.setStatus("current")
_StaTcpiArpDele_Type = DisplayString
_StaTcpiArpDele_Object = MibScalar
staTcpiArpDele = _StaTcpiArpDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 1, 8),
    _StaTcpiArpDele_Type()
)
staTcpiArpDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiArpDele.setStatus("current")
_StaTcpiIp_ObjectIdentity = ObjectIdentity
staTcpiIp = _StaTcpiIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2)
)
_StaTcpiIpLanrx_Type = Counter32
_StaTcpiIpLanrx_Object = MibScalar
staTcpiIpLanrx = _StaTcpiIpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 1),
    _StaTcpiIpLanrx_Type()
)
staTcpiIpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLanrx.setStatus("current")
_StaTcpiIpLantx_Type = Counter32
_StaTcpiIpLantx_Object = MibScalar
staTcpiIpLantx = _StaTcpiIpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 2),
    _StaTcpiIpLantx_Type()
)
staTcpiIpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLantx.setStatus("current")
_StaTcpiIpLanchecksumerrors_Type = Counter32
_StaTcpiIpLanchecksumerrors_Object = MibScalar
staTcpiIpLanchecksumerrors = _StaTcpiIpLanchecksumerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 3),
    _StaTcpiIpLanchecksumerrors_Type()
)
staTcpiIpLanchecksumerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLanchecksumerrors.setStatus("current")
_StaTcpiIpLanserviceerrors_Type = Counter32
_StaTcpiIpLanserviceerrors_Object = MibScalar
staTcpiIpLanserviceerrors = _StaTcpiIpLanserviceerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 4),
    _StaTcpiIpLanserviceerrors_Type()
)
staTcpiIpLanserviceerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLanserviceerrors.setStatus("current")
_StaTcpiIpWanrx_Type = Counter32
_StaTcpiIpWanrx_Object = MibScalar
staTcpiIpWanrx = _StaTcpiIpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 5),
    _StaTcpiIpWanrx_Type()
)
staTcpiIpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanrx.setStatus("current")
_StaTcpiIpWantx_Type = Counter32
_StaTcpiIpWantx_Object = MibScalar
staTcpiIpWantx = _StaTcpiIpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 6),
    _StaTcpiIpWantx_Type()
)
staTcpiIpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWantx.setStatus("current")
_StaTcpiIpWanchecksumerrors_Type = Counter32
_StaTcpiIpWanchecksumerrors_Object = MibScalar
staTcpiIpWanchecksumerrors = _StaTcpiIpWanchecksumerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 7),
    _StaTcpiIpWanchecksumerrors_Type()
)
staTcpiIpWanchecksumerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanchecksumerrors.setStatus("current")
_StaTcpiIpWanserviceerrors_Type = Counter32
_StaTcpiIpWanserviceerrors_Object = MibScalar
staTcpiIpWanserviceerrors = _StaTcpiIpWanserviceerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 8),
    _StaTcpiIpWanserviceerrors_Type()
)
staTcpiIpWanserviceerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanserviceerrors.setStatus("current")
_StaTcpiIpWanrxdisconnect_Type = Counter32
_StaTcpiIpWanrxdisconnect_Object = MibScalar
staTcpiIpWanrxdisconnect = _StaTcpiIpWanrxdisconnect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 9),
    _StaTcpiIpWanrxdisconnect_Type()
)
staTcpiIpWanrxdisconnect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanrxdisconnect.setStatus("current")
_StaTcpiIpLanfragmentationer_Type = Counter32
_StaTcpiIpLanfragmentationer_Object = MibScalar
staTcpiIpLanfragmentationer = _StaTcpiIpLanfragmentationer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 10),
    _StaTcpiIpLanfragmentationer_Type()
)
staTcpiIpLanfragmentationer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLanfragmentationer.setStatus("current")
_StaTcpiIpWanfragmentationer_Type = Counter32
_StaTcpiIpWanfragmentationer_Object = MibScalar
staTcpiIpWanfragmentationer = _StaTcpiIpWanfragmentationer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 11),
    _StaTcpiIpWanfragmentationer_Type()
)
staTcpiIpWanfragmentationer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanfragmentationer.setStatus("current")
_StaTcpiIpDeletevalues_Type = DisplayString
_StaTcpiIpDeletevalues_Object = MibScalar
staTcpiIpDeletevalues = _StaTcpiIpDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 12),
    _StaTcpiIpDeletevalues_Type()
)
staTcpiIpDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiIpDeletevalues.setStatus("current")
_StaTcpiIpLanfragmentations_Type = Counter32
_StaTcpiIpLanfragmentations_Object = MibScalar
staTcpiIpLanfragmentations = _StaTcpiIpLanfragmentations_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 13),
    _StaTcpiIpLanfragmentations_Type()
)
staTcpiIpLanfragmentations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLanfragmentations.setStatus("current")
_StaTcpiIpLanfragmentationsf_Type = Counter32
_StaTcpiIpLanfragmentationsf_Object = MibScalar
staTcpiIpLanfragmentationsf = _StaTcpiIpLanfragmentationsf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 14),
    _StaTcpiIpLanfragmentationsf_Type()
)
staTcpiIpLanfragmentationsf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLanfragmentationsf.setStatus("current")
_StaTcpiIpWanfragmentations_Type = Counter32
_StaTcpiIpWanfragmentations_Object = MibScalar
staTcpiIpWanfragmentations = _StaTcpiIpWanfragmentations_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 15),
    _StaTcpiIpWanfragmentations_Type()
)
staTcpiIpWanfragmentations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanfragmentations.setStatus("current")
_StaTcpiIpWanfragmentationsf_Type = Counter32
_StaTcpiIpWanfragmentationsf_Object = MibScalar
staTcpiIpWanfragmentationsf = _StaTcpiIpWanfragmentationsf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 16),
    _StaTcpiIpWanfragmentationsf_Type()
)
staTcpiIpWanfragmentationsf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpWanfragmentationsf.setStatus("current")
_StaTcpiIpLooperror_Type = Counter32
_StaTcpiIpLooperror_Object = MibScalar
staTcpiIpLooperror = _StaTcpiIpLooperror_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 2, 17),
    _StaTcpiIpLooperror_Type()
)
staTcpiIpLooperror.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIpLooperror.setStatus("current")
_StaTcpiIcmp_ObjectIdentity = ObjectIdentity
staTcpiIcmp = _StaTcpiIcmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3)
)
_StaTcpiIcmpLanr_Type = Counter32
_StaTcpiIcmpLanr_Object = MibScalar
staTcpiIcmpLanr = _StaTcpiIcmpLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 1),
    _StaTcpiIcmpLanr_Type()
)
staTcpiIcmpLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpLanr.setStatus("current")
_StaTcpiIcmpLant_Type = Counter32
_StaTcpiIcmpLant_Object = MibScalar
staTcpiIcmpLant = _StaTcpiIcmpLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 2),
    _StaTcpiIcmpLant_Type()
)
staTcpiIcmpLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpLant.setStatus("current")
_StaTcpiIcmpLanc_Type = Counter32
_StaTcpiIcmpLanc_Object = MibScalar
staTcpiIcmpLanc = _StaTcpiIcmpLanc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 3),
    _StaTcpiIcmpLanc_Type()
)
staTcpiIcmpLanc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpLanc.setStatus("current")
_StaTcpiIcmpLans_Type = Counter32
_StaTcpiIcmpLans_Object = MibScalar
staTcpiIcmpLans = _StaTcpiIcmpLans_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 4),
    _StaTcpiIcmpLans_Type()
)
staTcpiIcmpLans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpLans.setStatus("current")
_StaTcpiIcmpWanr_Type = Counter32
_StaTcpiIcmpWanr_Object = MibScalar
staTcpiIcmpWanr = _StaTcpiIcmpWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 5),
    _StaTcpiIcmpWanr_Type()
)
staTcpiIcmpWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpWanr.setStatus("current")
_StaTcpiIcmpWant_Type = Counter32
_StaTcpiIcmpWant_Object = MibScalar
staTcpiIcmpWant = _StaTcpiIcmpWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 6),
    _StaTcpiIcmpWant_Type()
)
staTcpiIcmpWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpWant.setStatus("current")
_StaTcpiIcmpWanc_Type = Counter32
_StaTcpiIcmpWanc_Object = MibScalar
staTcpiIcmpWanc = _StaTcpiIcmpWanc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 7),
    _StaTcpiIcmpWanc_Type()
)
staTcpiIcmpWanc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpWanc.setStatus("current")
_StaTcpiIcmpWans_Type = Counter32
_StaTcpiIcmpWans_Object = MibScalar
staTcpiIcmpWans = _StaTcpiIcmpWans_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 8),
    _StaTcpiIcmpWans_Type()
)
staTcpiIcmpWans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiIcmpWans.setStatus("current")
_StaTcpiIcmpDele_Type = DisplayString
_StaTcpiIcmpDele_Object = MibScalar
staTcpiIcmpDele = _StaTcpiIcmpDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 3, 9),
    _StaTcpiIcmpDele_Type()
)
staTcpiIcmpDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiIcmpDele.setStatus("current")
_StaTcpiTftp_ObjectIdentity = ObjectIdentity
staTcpiTftp = _StaTcpiTftp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4)
)
_StaTcpiTftpLanrx_Type = Counter32
_StaTcpiTftpLanrx_Object = MibScalar
staTcpiTftpLanrx = _StaTcpiTftpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 1),
    _StaTcpiTftpLanrx_Type()
)
staTcpiTftpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrx.setStatus("current")
_StaTcpiTftpLanrxr_Type = Counter32
_StaTcpiTftpLanrxr_Object = MibScalar
staTcpiTftpLanrxr = _StaTcpiTftpLanrxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 2),
    _StaTcpiTftpLanrxr_Type()
)
staTcpiTftpLanrxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxr.setStatus("current")
_StaTcpiTftpLanrxw_Type = Counter32
_StaTcpiTftpLanrxw_Object = MibScalar
staTcpiTftpLanrxw = _StaTcpiTftpLanrxw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 3),
    _StaTcpiTftpLanrxw_Type()
)
staTcpiTftpLanrxw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxw.setStatus("current")
_StaTcpiTftpLanrxd_Type = Counter32
_StaTcpiTftpLanrxd_Object = MibScalar
staTcpiTftpLanrxd = _StaTcpiTftpLanrxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 4),
    _StaTcpiTftpLanrxd_Type()
)
staTcpiTftpLanrxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxd.setStatus("current")
_StaTcpiTftpLanrxa_Type = Counter32
_StaTcpiTftpLanrxa_Object = MibScalar
staTcpiTftpLanrxa = _StaTcpiTftpLanrxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 5),
    _StaTcpiTftpLanrxa_Type()
)
staTcpiTftpLanrxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxa.setStatus("current")
_StaTcpiTftpLanrxo_Type = Counter32
_StaTcpiTftpLanrxo_Object = MibScalar
staTcpiTftpLanrxo = _StaTcpiTftpLanrxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 6),
    _StaTcpiTftpLanrxo_Type()
)
staTcpiTftpLanrxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxo.setStatus("current")
_StaTcpiTftpLanrxe_Type = Counter32
_StaTcpiTftpLanrxe_Object = MibScalar
staTcpiTftpLanrxe = _StaTcpiTftpLanrxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 7),
    _StaTcpiTftpLanrxe_Type()
)
staTcpiTftpLanrxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxe.setStatus("current")
_StaTcpiTftpLanrxb_Type = Counter32
_StaTcpiTftpLanrxb_Object = MibScalar
staTcpiTftpLanrxb = _StaTcpiTftpLanrxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 8),
    _StaTcpiTftpLanrxb_Type()
)
staTcpiTftpLanrxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLanrxb.setStatus("current")
_StaTcpiTftpLantx_Type = Counter32
_StaTcpiTftpLantx_Object = MibScalar
staTcpiTftpLantx = _StaTcpiTftpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 9),
    _StaTcpiTftpLantx_Type()
)
staTcpiTftpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLantx.setStatus("current")
_StaTcpiTftpLantxd_Type = Counter32
_StaTcpiTftpLantxd_Object = MibScalar
staTcpiTftpLantxd = _StaTcpiTftpLantxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 10),
    _StaTcpiTftpLantxd_Type()
)
staTcpiTftpLantxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLantxd.setStatus("current")
_StaTcpiTftpLantxa_Type = Counter32
_StaTcpiTftpLantxa_Object = MibScalar
staTcpiTftpLantxa = _StaTcpiTftpLantxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 11),
    _StaTcpiTftpLantxa_Type()
)
staTcpiTftpLantxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLantxa.setStatus("current")
_StaTcpiTftpLantxo_Type = Counter32
_StaTcpiTftpLantxo_Object = MibScalar
staTcpiTftpLantxo = _StaTcpiTftpLantxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 12),
    _StaTcpiTftpLantxo_Type()
)
staTcpiTftpLantxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLantxo.setStatus("current")
_StaTcpiTftpLantxe_Type = Counter32
_StaTcpiTftpLantxe_Object = MibScalar
staTcpiTftpLantxe = _StaTcpiTftpLantxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 13),
    _StaTcpiTftpLantxe_Type()
)
staTcpiTftpLantxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLantxe.setStatus("current")
_StaTcpiTftpLantxr_Type = Counter32
_StaTcpiTftpLantxr_Object = MibScalar
staTcpiTftpLantxr = _StaTcpiTftpLantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 14),
    _StaTcpiTftpLantxr_Type()
)
staTcpiTftpLantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLantxr.setStatus("current")
_StaTcpiTftpLancon_Type = Counter32
_StaTcpiTftpLancon_Object = MibScalar
staTcpiTftpLancon = _StaTcpiTftpLancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 15),
    _StaTcpiTftpLancon_Type()
)
staTcpiTftpLancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpLancon.setStatus("current")
_StaTcpiTftpWanrx_Type = Counter32
_StaTcpiTftpWanrx_Object = MibScalar
staTcpiTftpWanrx = _StaTcpiTftpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 16),
    _StaTcpiTftpWanrx_Type()
)
staTcpiTftpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrx.setStatus("current")
_StaTcpiTftpWanrxr_Type = Counter32
_StaTcpiTftpWanrxr_Object = MibScalar
staTcpiTftpWanrxr = _StaTcpiTftpWanrxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 17),
    _StaTcpiTftpWanrxr_Type()
)
staTcpiTftpWanrxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxr.setStatus("current")
_StaTcpiTftpWanrxw_Type = Counter32
_StaTcpiTftpWanrxw_Object = MibScalar
staTcpiTftpWanrxw = _StaTcpiTftpWanrxw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 18),
    _StaTcpiTftpWanrxw_Type()
)
staTcpiTftpWanrxw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxw.setStatus("current")
_StaTcpiTftpWanrxd_Type = Counter32
_StaTcpiTftpWanrxd_Object = MibScalar
staTcpiTftpWanrxd = _StaTcpiTftpWanrxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 19),
    _StaTcpiTftpWanrxd_Type()
)
staTcpiTftpWanrxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxd.setStatus("current")
_StaTcpiTftpWanrxa_Type = Counter32
_StaTcpiTftpWanrxa_Object = MibScalar
staTcpiTftpWanrxa = _StaTcpiTftpWanrxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 20),
    _StaTcpiTftpWanrxa_Type()
)
staTcpiTftpWanrxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxa.setStatus("current")
_StaTcpiTftpWanrxo_Type = Counter32
_StaTcpiTftpWanrxo_Object = MibScalar
staTcpiTftpWanrxo = _StaTcpiTftpWanrxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 21),
    _StaTcpiTftpWanrxo_Type()
)
staTcpiTftpWanrxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxo.setStatus("current")
_StaTcpiTftpWanrxe_Type = Counter32
_StaTcpiTftpWanrxe_Object = MibScalar
staTcpiTftpWanrxe = _StaTcpiTftpWanrxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 22),
    _StaTcpiTftpWanrxe_Type()
)
staTcpiTftpWanrxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxe.setStatus("current")
_StaTcpiTftpWanrxb_Type = Counter32
_StaTcpiTftpWanrxb_Object = MibScalar
staTcpiTftpWanrxb = _StaTcpiTftpWanrxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 23),
    _StaTcpiTftpWanrxb_Type()
)
staTcpiTftpWanrxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWanrxb.setStatus("current")
_StaTcpiTftpWantx_Type = Counter32
_StaTcpiTftpWantx_Object = MibScalar
staTcpiTftpWantx = _StaTcpiTftpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 24),
    _StaTcpiTftpWantx_Type()
)
staTcpiTftpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWantx.setStatus("current")
_StaTcpiTftpWantxd_Type = Counter32
_StaTcpiTftpWantxd_Object = MibScalar
staTcpiTftpWantxd = _StaTcpiTftpWantxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 25),
    _StaTcpiTftpWantxd_Type()
)
staTcpiTftpWantxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWantxd.setStatus("current")
_StaTcpiTftpWantxa_Type = Counter32
_StaTcpiTftpWantxa_Object = MibScalar
staTcpiTftpWantxa = _StaTcpiTftpWantxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 26),
    _StaTcpiTftpWantxa_Type()
)
staTcpiTftpWantxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWantxa.setStatus("current")
_StaTcpiTftpWantxo_Type = Counter32
_StaTcpiTftpWantxo_Object = MibScalar
staTcpiTftpWantxo = _StaTcpiTftpWantxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 27),
    _StaTcpiTftpWantxo_Type()
)
staTcpiTftpWantxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWantxo.setStatus("current")
_StaTcpiTftpWantxe_Type = Counter32
_StaTcpiTftpWantxe_Object = MibScalar
staTcpiTftpWantxe = _StaTcpiTftpWantxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 28),
    _StaTcpiTftpWantxe_Type()
)
staTcpiTftpWantxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWantxe.setStatus("current")
_StaTcpiTftpWantxr_Type = Counter32
_StaTcpiTftpWantxr_Object = MibScalar
staTcpiTftpWantxr = _StaTcpiTftpWantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 29),
    _StaTcpiTftpWantxr_Type()
)
staTcpiTftpWantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWantxr.setStatus("current")
_StaTcpiTftpWancon_Type = Counter32
_StaTcpiTftpWancon_Object = MibScalar
staTcpiTftpWancon = _StaTcpiTftpWancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 30),
    _StaTcpiTftpWancon_Type()
)
staTcpiTftpWancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTftpWancon.setStatus("current")
_StaTcpiTftpDelete_Type = DisplayString
_StaTcpiTftpDelete_Object = MibScalar
staTcpiTftpDelete = _StaTcpiTftpDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 4, 31),
    _StaTcpiTftpDelete_Type()
)
staTcpiTftpDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiTftpDelete.setStatus("current")
_StaTcpiTcp_ObjectIdentity = ObjectIdentity
staTcpiTcp = _StaTcpiTcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5)
)
_StaTcpiTcpLanrx_Type = Counter32
_StaTcpiTcpLanrx_Object = MibScalar
staTcpiTcpLanrx = _StaTcpiTcpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 1),
    _StaTcpiTcpLanrx_Type()
)
staTcpiTcpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpLanrx.setStatus("current")
_StaTcpiTcpLantx_Type = Counter32
_StaTcpiTcpLantx_Object = MibScalar
staTcpiTcpLantx = _StaTcpiTcpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 2),
    _StaTcpiTcpLantx_Type()
)
staTcpiTcpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpLantx.setStatus("current")
_StaTcpiTcpLantxr_Type = Counter32
_StaTcpiTcpLantxr_Object = MibScalar
staTcpiTcpLantxr = _StaTcpiTcpLantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 3),
    _StaTcpiTcpLantxr_Type()
)
staTcpiTcpLantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpLantxr.setStatus("current")
_StaTcpiTcpLanche_Type = Counter32
_StaTcpiTcpLanche_Object = MibScalar
staTcpiTcpLanche = _StaTcpiTcpLanche_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 4),
    _StaTcpiTcpLanche_Type()
)
staTcpiTcpLanche.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpLanche.setStatus("current")
_StaTcpiTcpLanser_Type = Counter32
_StaTcpiTcpLanser_Object = MibScalar
staTcpiTcpLanser = _StaTcpiTcpLanser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 5),
    _StaTcpiTcpLanser_Type()
)
staTcpiTcpLanser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpLanser.setStatus("current")
_StaTcpiTcpLancon_Type = Counter32
_StaTcpiTcpLancon_Object = MibScalar
staTcpiTcpLancon = _StaTcpiTcpLancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 6),
    _StaTcpiTcpLancon_Type()
)
staTcpiTcpLancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpLancon.setStatus("current")
_StaTcpiTcpWanrx_Type = Counter32
_StaTcpiTcpWanrx_Object = MibScalar
staTcpiTcpWanrx = _StaTcpiTcpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 7),
    _StaTcpiTcpWanrx_Type()
)
staTcpiTcpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpWanrx.setStatus("current")
_StaTcpiTcpWantx_Type = Counter32
_StaTcpiTcpWantx_Object = MibScalar
staTcpiTcpWantx = _StaTcpiTcpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 8),
    _StaTcpiTcpWantx_Type()
)
staTcpiTcpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpWantx.setStatus("current")
_StaTcpiTcpWantxr_Type = Counter32
_StaTcpiTcpWantxr_Object = MibScalar
staTcpiTcpWantxr = _StaTcpiTcpWantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 9),
    _StaTcpiTcpWantxr_Type()
)
staTcpiTcpWantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpWantxr.setStatus("current")
_StaTcpiTcpWanche_Type = Counter32
_StaTcpiTcpWanche_Object = MibScalar
staTcpiTcpWanche = _StaTcpiTcpWanche_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 10),
    _StaTcpiTcpWanche_Type()
)
staTcpiTcpWanche.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpWanche.setStatus("current")
_StaTcpiTcpWanser_Type = Counter32
_StaTcpiTcpWanser_Object = MibScalar
staTcpiTcpWanser = _StaTcpiTcpWanser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 11),
    _StaTcpiTcpWanser_Type()
)
staTcpiTcpWanser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpWanser.setStatus("current")
_StaTcpiTcpWancon_Type = Counter32
_StaTcpiTcpWancon_Object = MibScalar
staTcpiTcpWancon = _StaTcpiTcpWancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 12),
    _StaTcpiTcpWancon_Type()
)
staTcpiTcpWancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiTcpWancon.setStatus("current")
_StaTcpiTcpDelete_Type = DisplayString
_StaTcpiTcpDelete_Object = MibScalar
staTcpiTcpDelete = _StaTcpiTcpDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 5, 13),
    _StaTcpiTcpDelete_Type()
)
staTcpiTcpDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiTcpDelete.setStatus("current")
_StaTcpiDhcp_ObjectIdentity = ObjectIdentity
staTcpiDhcp = _StaTcpiDhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6)
)
_StaTcpiDhcpLanrx_Type = Counter32
_StaTcpiDhcpLanrx_Object = MibScalar
staTcpiDhcpLanrx = _StaTcpiDhcpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 1),
    _StaTcpiDhcpLanrx_Type()
)
staTcpiDhcpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpLanrx.setStatus("current")
_StaTcpiDhcpLantx_Type = Counter32
_StaTcpiDhcpLantx_Object = MibScalar
staTcpiDhcpLantx = _StaTcpiDhcpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 2),
    _StaTcpiDhcpLantx_Type()
)
staTcpiDhcpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpLantx.setStatus("current")
_StaTcpiDhcpWanrx_Type = Counter32
_StaTcpiDhcpWanrx_Object = MibScalar
staTcpiDhcpWanrx = _StaTcpiDhcpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 3),
    _StaTcpiDhcpWanrx_Type()
)
staTcpiDhcpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpWanrx.setStatus("current")
_StaTcpiDhcpDisca_Type = Counter32
_StaTcpiDhcpDisca_Object = MibScalar
staTcpiDhcpDisca = _StaTcpiDhcpDisca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 4),
    _StaTcpiDhcpDisca_Type()
)
staTcpiDhcpDisca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDisca.setStatus("current")
_StaTcpiDhcpRxdis_Type = Counter32
_StaTcpiDhcpRxdis_Object = MibScalar
staTcpiDhcpRxdis = _StaTcpiDhcpRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 5),
    _StaTcpiDhcpRxdis_Type()
)
staTcpiDhcpRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpRxdis.setStatus("current")
_StaTcpiDhcpRxreq_Type = Counter32
_StaTcpiDhcpRxreq_Object = MibScalar
staTcpiDhcpRxreq = _StaTcpiDhcpRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 6),
    _StaTcpiDhcpRxreq_Type()
)
staTcpiDhcpRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpRxreq.setStatus("current")
_StaTcpiDhcpRxdec_Type = Counter32
_StaTcpiDhcpRxdec_Object = MibScalar
staTcpiDhcpRxdec = _StaTcpiDhcpRxdec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 7),
    _StaTcpiDhcpRxdec_Type()
)
staTcpiDhcpRxdec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpRxdec.setStatus("current")
_StaTcpiDhcpRxinf_Type = Counter32
_StaTcpiDhcpRxinf_Object = MibScalar
staTcpiDhcpRxinf = _StaTcpiDhcpRxinf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 8),
    _StaTcpiDhcpRxinf_Type()
)
staTcpiDhcpRxinf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpRxinf.setStatus("current")
_StaTcpiDhcpRxrel_Type = Counter32
_StaTcpiDhcpRxrel_Object = MibScalar
staTcpiDhcpRxrel = _StaTcpiDhcpRxrel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 9),
    _StaTcpiDhcpRxrel_Type()
)
staTcpiDhcpRxrel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpRxrel.setStatus("current")
_StaTcpiDhcpTxoff_Type = Counter32
_StaTcpiDhcpTxoff_Object = MibScalar
staTcpiDhcpTxoff = _StaTcpiDhcpTxoff_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 10),
    _StaTcpiDhcpTxoff_Type()
)
staTcpiDhcpTxoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpTxoff.setStatus("current")
_StaTcpiDhcpTxack_Type = Counter32
_StaTcpiDhcpTxack_Object = MibScalar
staTcpiDhcpTxack = _StaTcpiDhcpTxack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 11),
    _StaTcpiDhcpTxack_Type()
)
staTcpiDhcpTxack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpTxack.setStatus("current")
_StaTcpiDhcpTxnak_Type = Counter32
_StaTcpiDhcpTxnak_Object = MibScalar
staTcpiDhcpTxnak = _StaTcpiDhcpTxnak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 12),
    _StaTcpiDhcpTxnak_Type()
)
staTcpiDhcpTxnak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpTxnak.setStatus("current")
_StaTcpiDhcpServe_Type = Counter32
_StaTcpiDhcpServe_Object = MibScalar
staTcpiDhcpServe = _StaTcpiDhcpServe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 13),
    _StaTcpiDhcpServe_Type()
)
staTcpiDhcpServe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpServe.setStatus("current")
_StaTcpiDhcpAssig_Type = Integer32
_StaTcpiDhcpAssig_Object = MibScalar
staTcpiDhcpAssig = _StaTcpiDhcpAssig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 14),
    _StaTcpiDhcpAssig_Type()
)
staTcpiDhcpAssig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpAssig.setStatus("current")
_StaTcpiDhcpMacco_Type = Counter32
_StaTcpiDhcpMacco_Object = MibScalar
staTcpiDhcpMacco = _StaTcpiDhcpMacco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 15),
    _StaTcpiDhcpMacco_Type()
)
staTcpiDhcpMacco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpMacco.setStatus("current")
_StaTcpiDhcpDhcptTable_Object = MibTable
staTcpiDhcpDhcptTable = _StaTcpiDhcpDhcptTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16)
)
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptTable.setStatus("current")
_StaTcpiDhcpDhcptEntry_Object = MibTableRow
staTcpiDhcpDhcptEntry = _StaTcpiDhcpDhcptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1)
)
staTcpiDhcpDhcptEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiDhcpDhcptIpa"),
    (0, "LANCOM-1711-MIB", "staTcpiDhcpDhcptNet"),
)
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptEntry.setStatus("current")
_StaTcpiDhcpDhcptIpa_Type = IpAddress
_StaTcpiDhcpDhcptIpa_Object = MibTableColumn
staTcpiDhcpDhcptIpa = _StaTcpiDhcpDhcptIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 1),
    _StaTcpiDhcpDhcptIpa_Type()
)
staTcpiDhcpDhcptIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptIpa.setStatus("current")


class _StaTcpiDhcpDhcptMac_Type(DisplayString):
    """Custom type staTcpiDhcpDhcptMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaTcpiDhcpDhcptMac_Type.__name__ = "DisplayString"
_StaTcpiDhcpDhcptMac_Object = MibTableColumn
staTcpiDhcpDhcptMac = _StaTcpiDhcpDhcptMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 2),
    _StaTcpiDhcpDhcptMac_Type()
)
staTcpiDhcpDhcptMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptMac.setStatus("current")


class _StaTcpiDhcpDhcptTim_Type(Integer32):
    """Custom type staTcpiDhcpDhcptTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiDhcpDhcptTim_Type.__name__ = "Integer32"
_StaTcpiDhcpDhcptTim_Object = MibTableColumn
staTcpiDhcpDhcptTim = _StaTcpiDhcpDhcptTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 3),
    _StaTcpiDhcpDhcptTim_Type()
)
staTcpiDhcpDhcptTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptTim.setStatus("current")


class _StaTcpiDhcpDhcptHos_Type(DisplayString):
    """Custom type staTcpiDhcpDhcptHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpiDhcpDhcptHos_Type.__name__ = "DisplayString"
_StaTcpiDhcpDhcptHos_Object = MibTableColumn
staTcpiDhcpDhcptHos = _StaTcpiDhcpDhcptHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 4),
    _StaTcpiDhcpDhcptHos_Type()
)
staTcpiDhcpDhcptHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptHos.setStatus("current")


class _StaTcpiDhcpDhcptTyp_Type(Bits):
    """Custom type staTcpiDhcpDhcptTyp based on Bits"""
    namedValues = NamedValues(
        *(("bootp", 10),
          ("dyn", 11),
          ("new", 15),
          ("relay", 4),
          ("stat", 12),
          ("unkn", 13))
    )

_StaTcpiDhcpDhcptTyp_Type.__name__ = "Bits"
_StaTcpiDhcpDhcptTyp_Object = MibTableColumn
staTcpiDhcpDhcptTyp = _StaTcpiDhcpDhcptTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 5),
    _StaTcpiDhcpDhcptTyp_Type()
)
staTcpiDhcpDhcptTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptTyp.setStatus("current")


class _StaTcpiDhcpDhcptLan_Type(Integer32):
    """Custom type staTcpiDhcpDhcptLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaTcpiDhcpDhcptLan_Type.__name__ = "Integer32"
_StaTcpiDhcpDhcptLan_Object = MibTableColumn
staTcpiDhcpDhcptLan = _StaTcpiDhcpDhcptLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 6),
    _StaTcpiDhcpDhcptLan_Type()
)
staTcpiDhcpDhcptLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptLan.setStatus("current")


class _StaTcpiDhcpDhcptEth_Type(Integer32):
    """Custom type staTcpiDhcpDhcptEth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_StaTcpiDhcpDhcptEth_Type.__name__ = "Integer32"
_StaTcpiDhcpDhcptEth_Object = MibTableColumn
staTcpiDhcpDhcptEth = _StaTcpiDhcpDhcptEth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 7),
    _StaTcpiDhcpDhcptEth_Type()
)
staTcpiDhcpDhcptEth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptEth.setStatus("current")


class _StaTcpiDhcpDhcptVla_Type(Integer32):
    """Custom type staTcpiDhcpDhcptVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiDhcpDhcptVla_Type.__name__ = "Integer32"
_StaTcpiDhcpDhcptVla_Object = MibTableColumn
staTcpiDhcpDhcptVla = _StaTcpiDhcpDhcptVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 8),
    _StaTcpiDhcpDhcptVla_Type()
)
staTcpiDhcpDhcptVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptVla.setStatus("current")


class _StaTcpiDhcpDhcptNet_Type(DisplayString):
    """Custom type staTcpiDhcpDhcptNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_StaTcpiDhcpDhcptNet_Type.__name__ = "DisplayString"
_StaTcpiDhcpDhcptNet_Object = MibTableColumn
staTcpiDhcpDhcptNet = _StaTcpiDhcpDhcptNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 16, 1, 9),
    _StaTcpiDhcpDhcptNet_Type()
)
staTcpiDhcpDhcptNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpDhcptNet.setStatus("current")
_StaTcpiDhcpDelet_Type = DisplayString
_StaTcpiDhcpDelet_Object = MibScalar
staTcpiDhcpDelet = _StaTcpiDhcpDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 18),
    _StaTcpiDhcpDelet_Type()
)
staTcpiDhcpDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiDhcpDelet.setStatus("current")
_StaTcpiDhcpWantx_Type = Counter32
_StaTcpiDhcpWantx_Object = MibScalar
staTcpiDhcpWantx = _StaTcpiDhcpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 19),
    _StaTcpiDhcpWantx_Type()
)
staTcpiDhcpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpWantx.setStatus("current")
_StaTcpiDhcpNetwoTable_Object = MibTable
staTcpiDhcpNetwoTable = _StaTcpiDhcpNetwoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20)
)
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoTable.setStatus("current")
_StaTcpiDhcpNetwoEntry_Object = MibTableRow
staTcpiDhcpNetwoEntry = _StaTcpiDhcpNetwoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1)
)
staTcpiDhcpNetwoEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiDhcpNetwoNetworknam"),
)
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoEntry.setStatus("current")


class _StaTcpiDhcpNetwoNetworknam_Type(DisplayString):
    """Custom type staTcpiDhcpNetwoNetworknam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiDhcpNetwoNetworknam_Type.__name__ = "DisplayString"
_StaTcpiDhcpNetwoNetworknam_Object = MibTableColumn
staTcpiDhcpNetwoNetworknam = _StaTcpiDhcpNetwoNetworknam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 1),
    _StaTcpiDhcpNetwoNetworknam_Type()
)
staTcpiDhcpNetwoNetworknam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoNetworknam.setStatus("current")
_StaTcpiDhcpNetwoStartaddre_Type = IpAddress
_StaTcpiDhcpNetwoStartaddre_Object = MibTableColumn
staTcpiDhcpNetwoStartaddre = _StaTcpiDhcpNetwoStartaddre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 2),
    _StaTcpiDhcpNetwoStartaddre_Type()
)
staTcpiDhcpNetwoStartaddre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoStartaddre.setStatus("current")
_StaTcpiDhcpNetwoEndaddress_Type = IpAddress
_StaTcpiDhcpNetwoEndaddress_Object = MibTableColumn
staTcpiDhcpNetwoEndaddress = _StaTcpiDhcpNetwoEndaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 3),
    _StaTcpiDhcpNetwoEndaddress_Type()
)
staTcpiDhcpNetwoEndaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoEndaddress.setStatus("current")
_StaTcpiDhcpNetwoNetmask_Type = IpAddress
_StaTcpiDhcpNetwoNetmask_Object = MibTableColumn
staTcpiDhcpNetwoNetmask = _StaTcpiDhcpNetwoNetmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 4),
    _StaTcpiDhcpNetwoNetmask_Type()
)
staTcpiDhcpNetwoNetmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoNetmask.setStatus("current")
_StaTcpiDhcpNetwoBroadcasta_Type = IpAddress
_StaTcpiDhcpNetwoBroadcasta_Object = MibTableColumn
staTcpiDhcpNetwoBroadcasta = _StaTcpiDhcpNetwoBroadcasta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 5),
    _StaTcpiDhcpNetwoBroadcasta_Type()
)
staTcpiDhcpNetwoBroadcasta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoBroadcasta.setStatus("current")
_StaTcpiDhcpNetwoGatewayadd_Type = IpAddress
_StaTcpiDhcpNetwoGatewayadd_Object = MibTableColumn
staTcpiDhcpNetwoGatewayadd = _StaTcpiDhcpNetwoGatewayadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 6),
    _StaTcpiDhcpNetwoGatewayadd_Type()
)
staTcpiDhcpNetwoGatewayadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoGatewayadd.setStatus("current")
_StaTcpiDhcpNetwoDnsdefault_Type = IpAddress
_StaTcpiDhcpNetwoDnsdefault_Object = MibTableColumn
staTcpiDhcpNetwoDnsdefault = _StaTcpiDhcpNetwoDnsdefault_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 7),
    _StaTcpiDhcpNetwoDnsdefault_Type()
)
staTcpiDhcpNetwoDnsdefault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoDnsdefault.setStatus("current")
_StaTcpiDhcpNetwoDnsbackup_Type = IpAddress
_StaTcpiDhcpNetwoDnsbackup_Object = MibTableColumn
staTcpiDhcpNetwoDnsbackup = _StaTcpiDhcpNetwoDnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 8),
    _StaTcpiDhcpNetwoDnsbackup_Type()
)
staTcpiDhcpNetwoDnsbackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoDnsbackup.setStatus("current")
_StaTcpiDhcpNetwoNbnsdefaul_Type = IpAddress
_StaTcpiDhcpNetwoNbnsdefaul_Object = MibTableColumn
staTcpiDhcpNetwoNbnsdefaul = _StaTcpiDhcpNetwoNbnsdefaul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 9),
    _StaTcpiDhcpNetwoNbnsdefaul_Type()
)
staTcpiDhcpNetwoNbnsdefaul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoNbnsdefaul.setStatus("current")
_StaTcpiDhcpNetwoNbnsbackup_Type = IpAddress
_StaTcpiDhcpNetwoNbnsbackup_Object = MibTableColumn
staTcpiDhcpNetwoNbnsbackup = _StaTcpiDhcpNetwoNbnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 10),
    _StaTcpiDhcpNetwoNbnsbackup_Type()
)
staTcpiDhcpNetwoNbnsbackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoNbnsbackup.setStatus("current")


class _StaTcpiDhcpNetwoServerflag_Type(DisplayString):
    """Custom type staTcpiDhcpNetwoServerflag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaTcpiDhcpNetwoServerflag_Type.__name__ = "DisplayString"
_StaTcpiDhcpNetwoServerflag_Object = MibTableColumn
staTcpiDhcpNetwoServerflag = _StaTcpiDhcpNetwoServerflag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 11),
    _StaTcpiDhcpNetwoServerflag_Type()
)
staTcpiDhcpNetwoServerflag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoServerflag.setStatus("current")


class _StaTcpiDhcpNetwoBroadcastb_Type(Integer32):
    """Custom type staTcpiDhcpNetwoBroadcastb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaTcpiDhcpNetwoBroadcastb_Type.__name__ = "Integer32"
_StaTcpiDhcpNetwoBroadcastb_Object = MibTableColumn
staTcpiDhcpNetwoBroadcastb = _StaTcpiDhcpNetwoBroadcastb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 13),
    _StaTcpiDhcpNetwoBroadcastb_Type()
)
staTcpiDhcpNetwoBroadcastb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoBroadcastb.setStatus("current")
_StaTcpiDhcpNetwoServerid_Type = IpAddress
_StaTcpiDhcpNetwoServerid_Object = MibTableColumn
staTcpiDhcpNetwoServerid = _StaTcpiDhcpNetwoServerid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 14),
    _StaTcpiDhcpNetwoServerid_Type()
)
staTcpiDhcpNetwoServerid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoServerid.setStatus("current")


class _StaTcpiDhcpNetwoLanifc_Type(Integer32):
    """Custom type staTcpiDhcpNetwoLanifc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaTcpiDhcpNetwoLanifc_Type.__name__ = "Integer32"
_StaTcpiDhcpNetwoLanifc_Object = MibTableColumn
staTcpiDhcpNetwoLanifc = _StaTcpiDhcpNetwoLanifc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 15),
    _StaTcpiDhcpNetwoLanifc_Type()
)
staTcpiDhcpNetwoLanifc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoLanifc.setStatus("current")


class _StaTcpiDhcpNetwoVlanid_Type(Integer32):
    """Custom type staTcpiDhcpNetwoVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiDhcpNetwoVlanid_Type.__name__ = "Integer32"
_StaTcpiDhcpNetwoVlanid_Object = MibTableColumn
staTcpiDhcpNetwoVlanid = _StaTcpiDhcpNetwoVlanid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 16),
    _StaTcpiDhcpNetwoVlanid_Type()
)
staTcpiDhcpNetwoVlanid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoVlanid.setStatus("current")
_StaTcpiDhcpNetwoMasterserv_Type = IpAddress
_StaTcpiDhcpNetwoMasterserv_Object = MibTableColumn
staTcpiDhcpNetwoMasterserv = _StaTcpiDhcpNetwoMasterserv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 17),
    _StaTcpiDhcpNetwoMasterserv_Type()
)
staTcpiDhcpNetwoMasterserv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoMasterserv.setStatus("current")


class _StaTcpiDhcpNetwoCache_Type(Integer32):
    """Custom type staTcpiDhcpNetwoCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaTcpiDhcpNetwoCache_Type.__name__ = "Integer32"
_StaTcpiDhcpNetwoCache_Object = MibTableColumn
staTcpiDhcpNetwoCache = _StaTcpiDhcpNetwoCache_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 18),
    _StaTcpiDhcpNetwoCache_Type()
)
staTcpiDhcpNetwoCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoCache.setStatus("current")


class _StaTcpiDhcpNetwoAdaption_Type(Integer32):
    """Custom type staTcpiDhcpNetwoAdaption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaTcpiDhcpNetwoAdaption_Type.__name__ = "Integer32"
_StaTcpiDhcpNetwoAdaption_Object = MibTableColumn
staTcpiDhcpNetwoAdaption = _StaTcpiDhcpNetwoAdaption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 6, 20, 1, 19),
    _StaTcpiDhcpNetwoAdaption_Type()
)
staTcpiDhcpNetwoAdaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDhcpNetwoAdaption.setStatus("current")
_StaTcpiDele_Type = DisplayString
_StaTcpiDele_Object = MibScalar
staTcpiDele = _StaTcpiDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 7),
    _StaTcpiDele_Type()
)
staTcpiDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiDele.setStatus("current")
_StaTcpiNetb_ObjectIdentity = ObjectIdentity
staTcpiNetb = _StaTcpiNetb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8)
)
_StaTcpiNetbLanrx_Type = Counter32
_StaTcpiNetbLanrx_Object = MibScalar
staTcpiNetbLanrx = _StaTcpiNetbLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 1),
    _StaTcpiNetbLanrx_Type()
)
staTcpiNetbLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbLanrx.setStatus("current")
_StaTcpiNetbLantx_Type = Counter32
_StaTcpiNetbLantx_Object = MibScalar
staTcpiNetbLantx = _StaTcpiNetbLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 2),
    _StaTcpiNetbLantx_Type()
)
staTcpiNetbLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbLantx.setStatus("current")
_StaTcpiNetbWanrx_Type = Counter32
_StaTcpiNetbWanrx_Object = MibScalar
staTcpiNetbWanrx = _StaTcpiNetbWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 3),
    _StaTcpiNetbWanrx_Type()
)
staTcpiNetbWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbWanrx.setStatus("current")
_StaTcpiNetbWantx_Type = Counter32
_StaTcpiNetbWantx_Object = MibScalar
staTcpiNetbWantx = _StaTcpiNetbWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 4),
    _StaTcpiNetbWantx_Type()
)
staTcpiNetbWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbWantx.setStatus("current")
_StaTcpiNetbRegist_Type = Counter32
_StaTcpiNetbRegist_Object = MibScalar
staTcpiNetbRegist = _StaTcpiNetbRegist_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 5),
    _StaTcpiNetbRegist_Type()
)
staTcpiNetbRegist.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbRegist.setStatus("current")
_StaTcpiNetbConfli_Type = Counter32
_StaTcpiNetbConfli_Object = MibScalar
staTcpiNetbConfli = _StaTcpiNetbConfli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 6),
    _StaTcpiNetbConfli_Type()
)
staTcpiNetbConfli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbConfli.setStatus("current")
_StaTcpiNetbReleas_Type = Counter32
_StaTcpiNetbReleas_Object = MibScalar
staTcpiNetbReleas = _StaTcpiNetbReleas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 7),
    _StaTcpiNetbReleas_Type()
)
staTcpiNetbReleas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbReleas.setStatus("current")
_StaTcpiNetbRefres_Type = Counter32
_StaTcpiNetbRefres_Object = MibScalar
staTcpiNetbRefres = _StaTcpiNetbRefres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 8),
    _StaTcpiNetbRefres_Type()
)
staTcpiNetbRefres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbRefres.setStatus("current")
_StaTcpiNetbTimeou_Type = Counter32
_StaTcpiNetbTimeou_Object = MibScalar
staTcpiNetbTimeou = _StaTcpiNetbTimeou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 9),
    _StaTcpiNetbTimeou_Type()
)
staTcpiNetbTimeou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbTimeou.setStatus("current")
_StaTcpiNetbHosts_Type = Integer32
_StaTcpiNetbHosts_Object = MibScalar
staTcpiNetbHosts = _StaTcpiNetbHosts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 10),
    _StaTcpiNetbHosts_Type()
)
staTcpiNetbHosts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHosts.setStatus("current")
_StaTcpiNetbGroups_Type = Integer32
_StaTcpiNetbGroups_Object = MibScalar
staTcpiNetbGroups = _StaTcpiNetbGroups_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 11),
    _StaTcpiNetbGroups_Type()
)
staTcpiNetbGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGroups.setStatus("current")
_StaTcpiNetbBnodes_Type = Integer32
_StaTcpiNetbBnodes_Object = MibScalar
staTcpiNetbBnodes = _StaTcpiNetbBnodes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 12),
    _StaTcpiNetbBnodes_Type()
)
staTcpiNetbBnodes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBnodes.setStatus("current")
_StaTcpiNetbPnodes_Type = Integer32
_StaTcpiNetbPnodes_Object = MibScalar
staTcpiNetbPnodes = _StaTcpiNetbPnodes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 13),
    _StaTcpiNetbPnodes_Type()
)
staTcpiNetbPnodes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbPnodes.setStatus("current")
_StaTcpiNetbMnodes_Type = Integer32
_StaTcpiNetbMnodes_Object = MibScalar
staTcpiNetbMnodes = _StaTcpiNetbMnodes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 14),
    _StaTcpiNetbMnodes_Type()
)
staTcpiNetbMnodes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbMnodes.setStatus("current")
_StaTcpiNetbWnodes_Type = Integer32
_StaTcpiNetbWnodes_Object = MibScalar
staTcpiNetbWnodes = _StaTcpiNetbWnodes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 15),
    _StaTcpiNetbWnodes_Type()
)
staTcpiNetbWnodes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbWnodes.setStatus("current")
_StaTcpiNetbPeersTable_Object = MibTable
staTcpiNetbPeersTable = _StaTcpiNetbPeersTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16)
)
if mibBuilder.loadTexts:
    staTcpiNetbPeersTable.setStatus("current")
_StaTcpiNetbPeersEntry_Object = MibTableRow
staTcpiNetbPeersEntry = _StaTcpiNetbPeersEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1)
)
staTcpiNetbPeersEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetbPeersNam"),
)
if mibBuilder.loadTexts:
    staTcpiNetbPeersEntry.setStatus("current")


class _StaTcpiNetbPeersNam_Type(DisplayString):
    """Custom type staTcpiNetbPeersNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbPeersNam_Type.__name__ = "DisplayString"
_StaTcpiNetbPeersNam_Object = MibTableColumn
staTcpiNetbPeersNam = _StaTcpiNetbPeersNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 1),
    _StaTcpiNetbPeersNam_Type()
)
staTcpiNetbPeersNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbPeersNam.setStatus("current")


class _StaTcpiNetbPeersTyp_Type(Integer32):
    """Custom type staTcpiNetbPeersTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("router", 0),
          ("workstation", 1))
    )


_StaTcpiNetbPeersTyp_Type.__name__ = "Integer32"
_StaTcpiNetbPeersTyp_Object = MibTableColumn
staTcpiNetbPeersTyp = _StaTcpiNetbPeersTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 2),
    _StaTcpiNetbPeersTyp_Type()
)
staTcpiNetbPeersTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbPeersTyp.setStatus("current")


class _StaTcpiNetbPeersBac_Type(Integer32):
    """Custom type staTcpiNetbPeersBac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaTcpiNetbPeersBac_Type.__name__ = "Integer32"
_StaTcpiNetbPeersBac_Object = MibTableColumn
staTcpiNetbPeersBac = _StaTcpiNetbPeersBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 3),
    _StaTcpiNetbPeersBac_Type()
)
staTcpiNetbPeersBac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbPeersBac.setStatus("current")


class _StaTcpiNetbPeersTim_Type(Integer32):
    """Custom type staTcpiNetbPeersTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbPeersTim_Type.__name__ = "Integer32"
_StaTcpiNetbPeersTim_Object = MibTableColumn
staTcpiNetbPeersTim = _StaTcpiNetbPeersTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 16, 1, 4),
    _StaTcpiNetbPeersTim_Type()
)
staTcpiNetbPeersTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbPeersTim.setStatus("current")
_StaTcpiNetbDelete_Type = DisplayString
_StaTcpiNetbDelete_Object = MibScalar
staTcpiNetbDelete = _StaTcpiNetbDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 17),
    _StaTcpiNetbDelete_Type()
)
staTcpiNetbDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiNetbDelete.setStatus("current")
_StaTcpiNetbNetworTable_Object = MibTable
staTcpiNetbNetworTable = _StaTcpiNetbNetworTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18)
)
if mibBuilder.loadTexts:
    staTcpiNetbNetworTable.setStatus("current")
_StaTcpiNetbNetworEntry_Object = MibTableRow
staTcpiNetbNetworEntry = _StaTcpiNetbNetworEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1)
)
staTcpiNetbNetworEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetbNetworNet"),
)
if mibBuilder.loadTexts:
    staTcpiNetbNetworEntry.setStatus("current")


class _StaTcpiNetbNetworNet_Type(DisplayString):
    """Custom type staTcpiNetbNetworNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbNetworNet_Type.__name__ = "DisplayString"
_StaTcpiNetbNetworNet_Object = MibTableColumn
staTcpiNetbNetworNet = _StaTcpiNetbNetworNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 1),
    _StaTcpiNetbNetworNet_Type()
)
staTcpiNetbNetworNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbNetworNet.setStatus("current")


class _StaTcpiNetbNetworNtd_Type(DisplayString):
    """Custom type staTcpiNetbNetworNtd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbNetworNtd_Type.__name__ = "DisplayString"
_StaTcpiNetbNetworNtd_Object = MibTableColumn
staTcpiNetbNetworNtd = _StaTcpiNetbNetworNtd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 2),
    _StaTcpiNetbNetworNtd_Type()
)
staTcpiNetbNetworNtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbNetworNtd.setStatus("current")


class _StaTcpiNetbNetworRtg_Type(Integer32):
    """Custom type staTcpiNetbNetworRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbNetworRtg_Type.__name__ = "Integer32"
_StaTcpiNetbNetworRtg_Object = MibTableColumn
staTcpiNetbNetworRtg = _StaTcpiNetbNetworRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 3),
    _StaTcpiNetbNetworRtg_Type()
)
staTcpiNetbNetworRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbNetworRtg.setStatus("current")


class _StaTcpiNetbNetworInt_Type(Integer32):
    """Custom type staTcpiNetbNetworInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaTcpiNetbNetworInt_Type.__name__ = "Integer32"
_StaTcpiNetbNetworInt_Object = MibTableColumn
staTcpiNetbNetworInt = _StaTcpiNetbNetworInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 4),
    _StaTcpiNetbNetworInt_Type()
)
staTcpiNetbNetworInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbNetworInt.setStatus("current")


class _StaTcpiNetbNetworVla_Type(Integer32):
    """Custom type staTcpiNetbNetworVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbNetworVla_Type.__name__ = "Integer32"
_StaTcpiNetbNetworVla_Object = MibTableColumn
staTcpiNetbNetworVla = _StaTcpiNetbNetworVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 18, 1, 5),
    _StaTcpiNetbNetworVla_Type()
)
staTcpiNetbNetworVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbNetworVla.setStatus("current")
_StaTcpiNetbGrouplTable_Object = MibTable
staTcpiNetbGrouplTable = _StaTcpiNetbGrouplTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19)
)
if mibBuilder.loadTexts:
    staTcpiNetbGrouplTable.setStatus("current")
_StaTcpiNetbGrouplEntry_Object = MibTableRow
staTcpiNetbGrouplEntry = _StaTcpiNetbGrouplEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1)
)
staTcpiNetbGrouplEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplGro"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplTyp"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplIpa"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbGrouplRtg"),
)
if mibBuilder.loadTexts:
    staTcpiNetbGrouplEntry.setStatus("current")


class _StaTcpiNetbGrouplGro_Type(DisplayString):
    """Custom type staTcpiNetbGrouplGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbGrouplGro_Type.__name__ = "DisplayString"
_StaTcpiNetbGrouplGro_Object = MibTableColumn
staTcpiNetbGrouplGro = _StaTcpiNetbGrouplGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 1),
    _StaTcpiNetbGrouplGro_Type()
)
staTcpiNetbGrouplGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplGro.setStatus("current")


class _StaTcpiNetbGrouplTyp_Type(DisplayString):
    """Custom type staTcpiNetbGrouplTyp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_StaTcpiNetbGrouplTyp_Type.__name__ = "DisplayString"
_StaTcpiNetbGrouplTyp_Object = MibTableColumn
staTcpiNetbGrouplTyp = _StaTcpiNetbGrouplTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 2),
    _StaTcpiNetbGrouplTyp_Type()
)
staTcpiNetbGrouplTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplTyp.setStatus("current")
_StaTcpiNetbGrouplIpa_Type = IpAddress
_StaTcpiNetbGrouplIpa_Object = MibTableColumn
staTcpiNetbGrouplIpa = _StaTcpiNetbGrouplIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 3),
    _StaTcpiNetbGrouplIpa_Type()
)
staTcpiNetbGrouplIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplIpa.setStatus("current")


class _StaTcpiNetbGrouplPee_Type(DisplayString):
    """Custom type staTcpiNetbGrouplPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbGrouplPee_Type.__name__ = "DisplayString"
_StaTcpiNetbGrouplPee_Object = MibTableColumn
staTcpiNetbGrouplPee = _StaTcpiNetbGrouplPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 4),
    _StaTcpiNetbGrouplPee_Type()
)
staTcpiNetbGrouplPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplPee.setStatus("current")


class _StaTcpiNetbGrouplTim_Type(Integer32):
    """Custom type staTcpiNetbGrouplTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiNetbGrouplTim_Type.__name__ = "Integer32"
_StaTcpiNetbGrouplTim_Object = MibTableColumn
staTcpiNetbGrouplTim = _StaTcpiNetbGrouplTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 5),
    _StaTcpiNetbGrouplTim_Type()
)
staTcpiNetbGrouplTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplTim.setStatus("current")


class _StaTcpiNetbGrouplFla_Type(DisplayString):
    """Custom type staTcpiNetbGrouplFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbGrouplFla_Type.__name__ = "DisplayString"
_StaTcpiNetbGrouplFla_Object = MibTableColumn
staTcpiNetbGrouplFla = _StaTcpiNetbGrouplFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 6),
    _StaTcpiNetbGrouplFla_Type()
)
staTcpiNetbGrouplFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplFla.setStatus("current")


class _StaTcpiNetbGrouplNet_Type(DisplayString):
    """Custom type staTcpiNetbGrouplNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbGrouplNet_Type.__name__ = "DisplayString"
_StaTcpiNetbGrouplNet_Object = MibTableColumn
staTcpiNetbGrouplNet = _StaTcpiNetbGrouplNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 7),
    _StaTcpiNetbGrouplNet_Type()
)
staTcpiNetbGrouplNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplNet.setStatus("current")


class _StaTcpiNetbGrouplRtg_Type(Integer32):
    """Custom type staTcpiNetbGrouplRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbGrouplRtg_Type.__name__ = "Integer32"
_StaTcpiNetbGrouplRtg_Object = MibTableColumn
staTcpiNetbGrouplRtg = _StaTcpiNetbGrouplRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 19, 1, 8),
    _StaTcpiNetbGrouplRtg_Type()
)
staTcpiNetbGrouplRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbGrouplRtg.setStatus("current")
_StaTcpiNetbHostliTable_Object = MibTable
staTcpiNetbHostliTable = _StaTcpiNetbHostliTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20)
)
if mibBuilder.loadTexts:
    staTcpiNetbHostliTable.setStatus("current")
_StaTcpiNetbHostliEntry_Object = MibTableRow
staTcpiNetbHostliEntry = _StaTcpiNetbHostliEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1)
)
staTcpiNetbHostliEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetbHostliNam"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbHostliTyp"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbHostliIpa"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbHostliRtg"),
)
if mibBuilder.loadTexts:
    staTcpiNetbHostliEntry.setStatus("current")


class _StaTcpiNetbHostliNam_Type(DisplayString):
    """Custom type staTcpiNetbHostliNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbHostliNam_Type.__name__ = "DisplayString"
_StaTcpiNetbHostliNam_Object = MibTableColumn
staTcpiNetbHostliNam = _StaTcpiNetbHostliNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 1),
    _StaTcpiNetbHostliNam_Type()
)
staTcpiNetbHostliNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliNam.setStatus("current")


class _StaTcpiNetbHostliTyp_Type(DisplayString):
    """Custom type staTcpiNetbHostliTyp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_StaTcpiNetbHostliTyp_Type.__name__ = "DisplayString"
_StaTcpiNetbHostliTyp_Object = MibTableColumn
staTcpiNetbHostliTyp = _StaTcpiNetbHostliTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 2),
    _StaTcpiNetbHostliTyp_Type()
)
staTcpiNetbHostliTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliTyp.setStatus("current")
_StaTcpiNetbHostliIpa_Type = IpAddress
_StaTcpiNetbHostliIpa_Object = MibTableColumn
staTcpiNetbHostliIpa = _StaTcpiNetbHostliIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 3),
    _StaTcpiNetbHostliIpa_Type()
)
staTcpiNetbHostliIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliIpa.setStatus("current")


class _StaTcpiNetbHostliPee_Type(DisplayString):
    """Custom type staTcpiNetbHostliPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbHostliPee_Type.__name__ = "DisplayString"
_StaTcpiNetbHostliPee_Object = MibTableColumn
staTcpiNetbHostliPee = _StaTcpiNetbHostliPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 4),
    _StaTcpiNetbHostliPee_Type()
)
staTcpiNetbHostliPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliPee.setStatus("current")


class _StaTcpiNetbHostliTim_Type(Integer32):
    """Custom type staTcpiNetbHostliTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiNetbHostliTim_Type.__name__ = "Integer32"
_StaTcpiNetbHostliTim_Object = MibTableColumn
staTcpiNetbHostliTim = _StaTcpiNetbHostliTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 5),
    _StaTcpiNetbHostliTim_Type()
)
staTcpiNetbHostliTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliTim.setStatus("current")


class _StaTcpiNetbHostliFla_Type(DisplayString):
    """Custom type staTcpiNetbHostliFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbHostliFla_Type.__name__ = "DisplayString"
_StaTcpiNetbHostliFla_Object = MibTableColumn
staTcpiNetbHostliFla = _StaTcpiNetbHostliFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 6),
    _StaTcpiNetbHostliFla_Type()
)
staTcpiNetbHostliFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliFla.setStatus("current")


class _StaTcpiNetbHostliNet_Type(DisplayString):
    """Custom type staTcpiNetbHostliNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbHostliNet_Type.__name__ = "DisplayString"
_StaTcpiNetbHostliNet_Object = MibTableColumn
staTcpiNetbHostliNet = _StaTcpiNetbHostliNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 7),
    _StaTcpiNetbHostliNet_Type()
)
staTcpiNetbHostliNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliNet.setStatus("current")


class _StaTcpiNetbHostliRtg_Type(Integer32):
    """Custom type staTcpiNetbHostliRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbHostliRtg_Type.__name__ = "Integer32"
_StaTcpiNetbHostliRtg_Object = MibTableColumn
staTcpiNetbHostliRtg = _StaTcpiNetbHostliRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 20, 1, 8),
    _StaTcpiNetbHostliRtg_Type()
)
staTcpiNetbHostliRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbHostliRtg.setStatus("current")
_StaTcpiNetbServerTable_Object = MibTable
staTcpiNetbServerTable = _StaTcpiNetbServerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21)
)
if mibBuilder.loadTexts:
    staTcpiNetbServerTable.setStatus("current")
_StaTcpiNetbServerEntry_Object = MibTableRow
staTcpiNetbServerEntry = _StaTcpiNetbServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1)
)
staTcpiNetbServerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetbServerHos"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbServerGro"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbServerIpa"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbServerRtg"),
)
if mibBuilder.loadTexts:
    staTcpiNetbServerEntry.setStatus("current")


class _StaTcpiNetbServerHos_Type(DisplayString):
    """Custom type staTcpiNetbServerHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbServerHos_Type.__name__ = "DisplayString"
_StaTcpiNetbServerHos_Object = MibTableColumn
staTcpiNetbServerHos = _StaTcpiNetbServerHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 1),
    _StaTcpiNetbServerHos_Type()
)
staTcpiNetbServerHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerHos.setStatus("current")


class _StaTcpiNetbServerGro_Type(DisplayString):
    """Custom type staTcpiNetbServerGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbServerGro_Type.__name__ = "DisplayString"
_StaTcpiNetbServerGro_Object = MibTableColumn
staTcpiNetbServerGro = _StaTcpiNetbServerGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 2),
    _StaTcpiNetbServerGro_Type()
)
staTcpiNetbServerGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerGro.setStatus("current")


class _StaTcpiNetbServerIpa_Type(DisplayString):
    """Custom type staTcpiNetbServerIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbServerIpa_Type.__name__ = "DisplayString"
_StaTcpiNetbServerIpa_Object = MibTableColumn
staTcpiNetbServerIpa = _StaTcpiNetbServerIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 4),
    _StaTcpiNetbServerIpa_Type()
)
staTcpiNetbServerIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerIpa.setStatus("current")


class _StaTcpiNetbServerOsv_Type(DisplayString):
    """Custom type staTcpiNetbServerOsv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbServerOsv_Type.__name__ = "DisplayString"
_StaTcpiNetbServerOsv_Object = MibTableColumn
staTcpiNetbServerOsv = _StaTcpiNetbServerOsv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 5),
    _StaTcpiNetbServerOsv_Type()
)
staTcpiNetbServerOsv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerOsv.setStatus("current")


class _StaTcpiNetbServerSmb_Type(DisplayString):
    """Custom type staTcpiNetbServerSmb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbServerSmb_Type.__name__ = "DisplayString"
_StaTcpiNetbServerSmb_Object = MibTableColumn
staTcpiNetbServerSmb = _StaTcpiNetbServerSmb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 6),
    _StaTcpiNetbServerSmb_Type()
)
staTcpiNetbServerSmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerSmb.setStatus("current")


class _StaTcpiNetbServerSer_Type(DisplayString):
    """Custom type staTcpiNetbServerSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_StaTcpiNetbServerSer_Type.__name__ = "DisplayString"
_StaTcpiNetbServerSer_Object = MibTableColumn
staTcpiNetbServerSer = _StaTcpiNetbServerSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 7),
    _StaTcpiNetbServerSer_Type()
)
staTcpiNetbServerSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerSer.setStatus("current")


class _StaTcpiNetbServerPee_Type(DisplayString):
    """Custom type staTcpiNetbServerPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbServerPee_Type.__name__ = "DisplayString"
_StaTcpiNetbServerPee_Object = MibTableColumn
staTcpiNetbServerPee = _StaTcpiNetbServerPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 8),
    _StaTcpiNetbServerPee_Type()
)
staTcpiNetbServerPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerPee.setStatus("current")


class _StaTcpiNetbServerTim_Type(Integer32):
    """Custom type staTcpiNetbServerTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiNetbServerTim_Type.__name__ = "Integer32"
_StaTcpiNetbServerTim_Object = MibTableColumn
staTcpiNetbServerTim = _StaTcpiNetbServerTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 9),
    _StaTcpiNetbServerTim_Type()
)
staTcpiNetbServerTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerTim.setStatus("current")


class _StaTcpiNetbServerFla_Type(DisplayString):
    """Custom type staTcpiNetbServerFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbServerFla_Type.__name__ = "DisplayString"
_StaTcpiNetbServerFla_Object = MibTableColumn
staTcpiNetbServerFla = _StaTcpiNetbServerFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 10),
    _StaTcpiNetbServerFla_Type()
)
staTcpiNetbServerFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerFla.setStatus("current")


class _StaTcpiNetbServerNet_Type(DisplayString):
    """Custom type staTcpiNetbServerNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbServerNet_Type.__name__ = "DisplayString"
_StaTcpiNetbServerNet_Object = MibTableColumn
staTcpiNetbServerNet = _StaTcpiNetbServerNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 11),
    _StaTcpiNetbServerNet_Type()
)
staTcpiNetbServerNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerNet.setStatus("current")


class _StaTcpiNetbServerRtg_Type(Integer32):
    """Custom type staTcpiNetbServerRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbServerRtg_Type.__name__ = "Integer32"
_StaTcpiNetbServerRtg_Object = MibTableColumn
staTcpiNetbServerRtg = _StaTcpiNetbServerRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 21, 1, 12),
    _StaTcpiNetbServerRtg_Type()
)
staTcpiNetbServerRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbServerRtg.setStatus("current")
_StaTcpiNetbBrowseTable_Object = MibTable
staTcpiNetbBrowseTable = _StaTcpiNetbBrowseTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22)
)
if mibBuilder.loadTexts:
    staTcpiNetbBrowseTable.setStatus("current")
_StaTcpiNetbBrowseEntry_Object = MibTableRow
staTcpiNetbBrowseEntry = _StaTcpiNetbBrowseEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1)
)
staTcpiNetbBrowseEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseBro"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseGro"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseIpa"),
    (0, "LANCOM-1711-MIB", "staTcpiNetbBrowseRtg"),
)
if mibBuilder.loadTexts:
    staTcpiNetbBrowseEntry.setStatus("current")


class _StaTcpiNetbBrowseBro_Type(DisplayString):
    """Custom type staTcpiNetbBrowseBro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbBrowseBro_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseBro_Object = MibTableColumn
staTcpiNetbBrowseBro = _StaTcpiNetbBrowseBro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 1),
    _StaTcpiNetbBrowseBro_Type()
)
staTcpiNetbBrowseBro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseBro.setStatus("current")


class _StaTcpiNetbBrowseGro_Type(DisplayString):
    """Custom type staTcpiNetbBrowseGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbBrowseGro_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseGro_Object = MibTableColumn
staTcpiNetbBrowseGro = _StaTcpiNetbBrowseGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 2),
    _StaTcpiNetbBrowseGro_Type()
)
staTcpiNetbBrowseGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseGro.setStatus("current")


class _StaTcpiNetbBrowseIpa_Type(DisplayString):
    """Custom type staTcpiNetbBrowseIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpiNetbBrowseIpa_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseIpa_Object = MibTableColumn
staTcpiNetbBrowseIpa = _StaTcpiNetbBrowseIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 4),
    _StaTcpiNetbBrowseIpa_Type()
)
staTcpiNetbBrowseIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseIpa.setStatus("current")


class _StaTcpiNetbBrowseOsv_Type(DisplayString):
    """Custom type staTcpiNetbBrowseOsv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbBrowseOsv_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseOsv_Object = MibTableColumn
staTcpiNetbBrowseOsv = _StaTcpiNetbBrowseOsv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 5),
    _StaTcpiNetbBrowseOsv_Type()
)
staTcpiNetbBrowseOsv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseOsv.setStatus("current")


class _StaTcpiNetbBrowseSer_Type(DisplayString):
    """Custom type staTcpiNetbBrowseSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_StaTcpiNetbBrowseSer_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseSer_Object = MibTableColumn
staTcpiNetbBrowseSer = _StaTcpiNetbBrowseSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 7),
    _StaTcpiNetbBrowseSer_Type()
)
staTcpiNetbBrowseSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseSer.setStatus("current")


class _StaTcpiNetbBrowsePee_Type(DisplayString):
    """Custom type staTcpiNetbBrowsePee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbBrowsePee_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowsePee_Object = MibTableColumn
staTcpiNetbBrowsePee = _StaTcpiNetbBrowsePee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 8),
    _StaTcpiNetbBrowsePee_Type()
)
staTcpiNetbBrowsePee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowsePee.setStatus("current")


class _StaTcpiNetbBrowseTim_Type(Integer32):
    """Custom type staTcpiNetbBrowseTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiNetbBrowseTim_Type.__name__ = "Integer32"
_StaTcpiNetbBrowseTim_Object = MibTableColumn
staTcpiNetbBrowseTim = _StaTcpiNetbBrowseTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 9),
    _StaTcpiNetbBrowseTim_Type()
)
staTcpiNetbBrowseTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseTim.setStatus("current")


class _StaTcpiNetbBrowseFla_Type(DisplayString):
    """Custom type staTcpiNetbBrowseFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaTcpiNetbBrowseFla_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseFla_Object = MibTableColumn
staTcpiNetbBrowseFla = _StaTcpiNetbBrowseFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 10),
    _StaTcpiNetbBrowseFla_Type()
)
staTcpiNetbBrowseFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseFla.setStatus("current")


class _StaTcpiNetbBrowseNet_Type(DisplayString):
    """Custom type staTcpiNetbBrowseNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpiNetbBrowseNet_Type.__name__ = "DisplayString"
_StaTcpiNetbBrowseNet_Object = MibTableColumn
staTcpiNetbBrowseNet = _StaTcpiNetbBrowseNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 11),
    _StaTcpiNetbBrowseNet_Type()
)
staTcpiNetbBrowseNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseNet.setStatus("current")


class _StaTcpiNetbBrowseRtg_Type(Integer32):
    """Custom type staTcpiNetbBrowseRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetbBrowseRtg_Type.__name__ = "Integer32"
_StaTcpiNetbBrowseRtg_Object = MibTableColumn
staTcpiNetbBrowseRtg = _StaTcpiNetbBrowseRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 8, 22, 1, 12),
    _StaTcpiNetbBrowseRtg_Type()
)
staTcpiNetbBrowseRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetbBrowseRtg.setStatus("current")
_StaTcpiDns_ObjectIdentity = ObjectIdentity
staTcpiDns = _StaTcpiDns_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9)
)
_StaTcpiDnsLanr_Type = Counter32
_StaTcpiDnsLanr_Object = MibScalar
staTcpiDnsLanr = _StaTcpiDnsLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 1),
    _StaTcpiDnsLanr_Type()
)
staTcpiDnsLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsLanr.setStatus("current")
_StaTcpiDnsLant_Type = Counter32
_StaTcpiDnsLant_Object = MibScalar
staTcpiDnsLant = _StaTcpiDnsLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 2),
    _StaTcpiDnsLant_Type()
)
staTcpiDnsLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsLant.setStatus("current")
_StaTcpiDnsWanr_Type = Counter32
_StaTcpiDnsWanr_Object = MibScalar
staTcpiDnsWanr = _StaTcpiDnsWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 3),
    _StaTcpiDnsWanr_Type()
)
staTcpiDnsWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsWanr.setStatus("current")
_StaTcpiDnsWant_Type = Counter32
_StaTcpiDnsWant_Object = MibScalar
staTcpiDnsWant = _StaTcpiDnsWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 4),
    _StaTcpiDnsWant_Type()
)
staTcpiDnsWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsWant.setStatus("current")
_StaTcpiDnsForw_Type = Counter32
_StaTcpiDnsForw_Object = MibScalar
staTcpiDnsForw = _StaTcpiDnsForw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 5),
    _StaTcpiDnsForw_Type()
)
staTcpiDnsForw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsForw.setStatus("current")
_StaTcpiDnsErro_Type = Counter32
_StaTcpiDnsErro_Object = MibScalar
staTcpiDnsErro = _StaTcpiDnsErro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 6),
    _StaTcpiDnsErro_Type()
)
staTcpiDnsErro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsErro.setStatus("current")
_StaTcpiDnsDnsa_Type = Counter32
_StaTcpiDnsDnsa_Object = MibScalar
staTcpiDnsDnsa = _StaTcpiDnsDnsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 7),
    _StaTcpiDnsDnsa_Type()
)
staTcpiDnsDnsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsDnsa.setStatus("current")
_StaTcpiDnsDhcp_Type = Counter32
_StaTcpiDnsDhcp_Object = MibScalar
staTcpiDnsDhcp = _StaTcpiDnsDhcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 8),
    _StaTcpiDnsDhcp_Type()
)
staTcpiDnsDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsDhcp.setStatus("current")
_StaTcpiDnsNetb_Type = Counter32
_StaTcpiDnsNetb_Object = MibScalar
staTcpiDnsNetb = _StaTcpiDnsNetb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 9),
    _StaTcpiDnsNetb_Type()
)
staTcpiDnsNetb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsNetb.setStatus("current")
_StaTcpiDnsFilt_Type = Counter32
_StaTcpiDnsFilt_Object = MibScalar
staTcpiDnsFilt = _StaTcpiDnsFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 10),
    _StaTcpiDnsFilt_Type()
)
staTcpiDnsFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsFilt.setStatus("current")
_StaTcpiDnsHitlTable_Object = MibTable
staTcpiDnsHitlTable = _StaTcpiDnsHitlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11)
)
if mibBuilder.loadTexts:
    staTcpiDnsHitlTable.setStatus("current")
_StaTcpiDnsHitlEntry_Object = MibTableRow
staTcpiDnsHitlEntry = _StaTcpiDnsHitlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1)
)
staTcpiDnsHitlEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiDnsHitlDom"),
)
if mibBuilder.loadTexts:
    staTcpiDnsHitlEntry.setStatus("current")


class _StaTcpiDnsHitlDom_Type(DisplayString):
    """Custom type staTcpiDnsHitlDom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpiDnsHitlDom_Type.__name__ = "DisplayString"
_StaTcpiDnsHitlDom_Object = MibTableColumn
staTcpiDnsHitlDom = _StaTcpiDnsHitlDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 1),
    _StaTcpiDnsHitlDom_Type()
)
staTcpiDnsHitlDom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsHitlDom.setStatus("current")


class _StaTcpiDnsHitlReq_Type(Integer32):
    """Custom type staTcpiDnsHitlReq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiDnsHitlReq_Type.__name__ = "Integer32"
_StaTcpiDnsHitlReq_Object = MibTableColumn
staTcpiDnsHitlReq = _StaTcpiDnsHitlReq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 2),
    _StaTcpiDnsHitlReq_Type()
)
staTcpiDnsHitlReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsHitlReq.setStatus("current")


class _StaTcpiDnsHitlTim_Type(DisplayString):
    """Custom type staTcpiDnsHitlTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaTcpiDnsHitlTim_Type.__name__ = "DisplayString"
_StaTcpiDnsHitlTim_Object = MibTableColumn
staTcpiDnsHitlTim = _StaTcpiDnsHitlTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 3),
    _StaTcpiDnsHitlTim_Type()
)
staTcpiDnsHitlTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsHitlTim.setStatus("current")
_StaTcpiDnsHitlIpa_Type = IpAddress
_StaTcpiDnsHitlIpa_Object = MibTableColumn
staTcpiDnsHitlIpa = _StaTcpiDnsHitlIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 11, 1, 4),
    _StaTcpiDnsHitlIpa_Type()
)
staTcpiDnsHitlIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiDnsHitlIpa.setStatus("current")
_StaTcpiDnsDele_Type = DisplayString
_StaTcpiDnsDele_Object = MibScalar
staTcpiDnsDele = _StaTcpiDnsDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 9, 12),
    _StaTcpiDnsDele_Type()
)
staTcpiDnsDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiDnsDele.setStatus("current")
_StaTcpiHttp_ObjectIdentity = ObjectIdentity
staTcpiHttp = _StaTcpiHttp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10)
)
_StaTcpiHttpHttpac_Type = Counter32
_StaTcpiHttpHttpac_Object = MibScalar
staTcpiHttpHttpac = _StaTcpiHttpHttpac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 1),
    _StaTcpiHttpHttpac_Type()
)
staTcpiHttpHttpac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpHttpac.setStatus("current")
_StaTcpiHttpHttpno_Type = Counter32
_StaTcpiHttpHttpno_Object = MibScalar
staTcpiHttpHttpno = _StaTcpiHttpHttpno_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 2),
    _StaTcpiHttpHttpno_Type()
)
staTcpiHttpHttpno.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpHttpno.setStatus("current")
_StaTcpiHttpHttpau_Type = Counter32
_StaTcpiHttpHttpau_Object = MibScalar
staTcpiHttpHttpau = _StaTcpiHttpHttpau_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 3),
    _StaTcpiHttpHttpau_Type()
)
staTcpiHttpHttpau.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpHttpau.setStatus("current")
_StaTcpiHttpHttppr_Type = Counter32
_StaTcpiHttpHttppr_Object = MibScalar
staTcpiHttpHttppr = _StaTcpiHttpHttppr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 4),
    _StaTcpiHttpHttppr_Type()
)
staTcpiHttpHttppr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpHttppr.setStatus("current")
_StaTcpiHttpDelete_Type = DisplayString
_StaTcpiHttpDelete_Object = MibScalar
staTcpiHttpDelete = _StaTcpiHttpDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 5),
    _StaTcpiHttpDelete_Type()
)
staTcpiHttpDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiHttpDelete.setStatus("current")
_StaTcpiHttpHttpsa_Type = Counter32
_StaTcpiHttpHttpsa_Object = MibScalar
staTcpiHttpHttpsa = _StaTcpiHttpHttpsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 6),
    _StaTcpiHttpHttpsa_Type()
)
staTcpiHttpHttpsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpHttpsa.setStatus("current")
_StaTcpiHttpAgentlTable_Object = MibTable
staTcpiHttpAgentlTable = _StaTcpiHttpAgentlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7)
)
if mibBuilder.loadTexts:
    staTcpiHttpAgentlTable.setStatus("current")
_StaTcpiHttpAgentlEntry_Object = MibTableRow
staTcpiHttpAgentlEntry = _StaTcpiHttpAgentlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1)
)
staTcpiHttpAgentlEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiHttpAgentlAge"),
)
if mibBuilder.loadTexts:
    staTcpiHttpAgentlEntry.setStatus("current")


class _StaTcpiHttpAgentlAge_Type(DisplayString):
    """Custom type staTcpiHttpAgentlAge based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 67),
    )


_StaTcpiHttpAgentlAge_Type.__name__ = "DisplayString"
_StaTcpiHttpAgentlAge_Object = MibTableColumn
staTcpiHttpAgentlAge = _StaTcpiHttpAgentlAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1, 1),
    _StaTcpiHttpAgentlAge_Type()
)
staTcpiHttpAgentlAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpAgentlAge.setStatus("current")


class _StaTcpiHttpAgentlAcc_Type(Integer32):
    """Custom type staTcpiHttpAgentlAcc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiHttpAgentlAcc_Type.__name__ = "Integer32"
_StaTcpiHttpAgentlAcc_Object = MibTableColumn
staTcpiHttpAgentlAcc = _StaTcpiHttpAgentlAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 7, 1, 2),
    _StaTcpiHttpAgentlAcc_Type()
)
staTcpiHttpAgentlAcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpAgentlAcc.setStatus("current")
_StaTcpiHttpActiveTable_Object = MibTable
staTcpiHttpActiveTable = _StaTcpiHttpActiveTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8)
)
if mibBuilder.loadTexts:
    staTcpiHttpActiveTable.setStatus("current")
_StaTcpiHttpActiveEntry_Object = MibTableRow
staTcpiHttpActiveEntry = _StaTcpiHttpActiveEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1)
)
staTcpiHttpActiveEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiHttpActiveIndex"),
)
if mibBuilder.loadTexts:
    staTcpiHttpActiveEntry.setStatus("current")


class _StaTcpiHttpActiveIndex_Type(Integer32):
    """Custom type staTcpiHttpActiveIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiHttpActiveIndex_Type.__name__ = "Integer32"
_StaTcpiHttpActiveIndex_Object = MibTableColumn
staTcpiHttpActiveIndex = _StaTcpiHttpActiveIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 1),
    _StaTcpiHttpActiveIndex_Type()
)
staTcpiHttpActiveIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveIndex.setStatus("current")
_StaTcpiHttpActiveRemotea_Type = IpAddress
_StaTcpiHttpActiveRemotea_Object = MibTableColumn
staTcpiHttpActiveRemotea = _StaTcpiHttpActiveRemotea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 2),
    _StaTcpiHttpActiveRemotea_Type()
)
staTcpiHttpActiveRemotea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveRemotea.setStatus("current")


class _StaTcpiHttpActiveRemotep_Type(Integer32):
    """Custom type staTcpiHttpActiveRemotep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiHttpActiveRemotep_Type.__name__ = "Integer32"
_StaTcpiHttpActiveRemotep_Object = MibTableColumn
staTcpiHttpActiveRemotep = _StaTcpiHttpActiveRemotep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 3),
    _StaTcpiHttpActiveRemotep_Type()
)
staTcpiHttpActiveRemotep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveRemotep.setStatus("current")


class _StaTcpiHttpActiveLocalho_Type(DisplayString):
    """Custom type staTcpiHttpActiveLocalho based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpiHttpActiveLocalho_Type.__name__ = "DisplayString"
_StaTcpiHttpActiveLocalho_Object = MibTableColumn
staTcpiHttpActiveLocalho = _StaTcpiHttpActiveLocalho_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 4),
    _StaTcpiHttpActiveLocalho_Type()
)
staTcpiHttpActiveLocalho.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveLocalho.setStatus("current")


class _StaTcpiHttpActiveLocalpo_Type(Integer32):
    """Custom type staTcpiHttpActiveLocalpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiHttpActiveLocalpo_Type.__name__ = "Integer32"
_StaTcpiHttpActiveLocalpo_Object = MibTableColumn
staTcpiHttpActiveLocalpo = _StaTcpiHttpActiveLocalpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 5),
    _StaTcpiHttpActiveLocalpo_Type()
)
staTcpiHttpActiveLocalpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveLocalpo.setStatus("current")


class _StaTcpiHttpActiveIdletim_Type(Integer32):
    """Custom type staTcpiHttpActiveIdletim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiHttpActiveIdletim_Type.__name__ = "Integer32"
_StaTcpiHttpActiveIdletim_Object = MibTableColumn
staTcpiHttpActiveIdletim = _StaTcpiHttpActiveIdletim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 6),
    _StaTcpiHttpActiveIdletim_Type()
)
staTcpiHttpActiveIdletim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveIdletim.setStatus("current")


class _StaTcpiHttpActiveLocalrt_Type(Integer32):
    """Custom type staTcpiHttpActiveLocalrt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiHttpActiveLocalrt_Type.__name__ = "Integer32"
_StaTcpiHttpActiveLocalrt_Object = MibTableColumn
staTcpiHttpActiveLocalrt = _StaTcpiHttpActiveLocalrt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 7),
    _StaTcpiHttpActiveLocalrt_Type()
)
staTcpiHttpActiveLocalrt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveLocalrt.setStatus("current")


class _StaTcpiHttpActiveNumconn_Type(Integer32):
    """Custom type staTcpiHttpActiveNumconn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiHttpActiveNumconn_Type.__name__ = "Integer32"
_StaTcpiHttpActiveNumconn_Object = MibTableColumn
staTcpiHttpActiveNumconn = _StaTcpiHttpActiveNumconn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 10, 8, 1, 8),
    _StaTcpiHttpActiveNumconn_Type()
)
staTcpiHttpActiveNumconn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiHttpActiveNumconn.setStatus("current")
_StaTcpiSysl_ObjectIdentity = ObjectIdentity
staTcpiSysl = _StaTcpiSysl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11)
)
_StaTcpiSyslLasTable_Object = MibTable
staTcpiSyslLasTable = _StaTcpiSyslLasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11)
)
if mibBuilder.loadTexts:
    staTcpiSyslLasTable.setStatus("current")
_StaTcpiSyslLasEntry_Object = MibTableRow
staTcpiSyslLasEntry = _StaTcpiSyslLasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1)
)
staTcpiSyslLasEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiSyslLasIdx"),
)
if mibBuilder.loadTexts:
    staTcpiSyslLasEntry.setStatus("current")


class _StaTcpiSyslLasIdx_Type(Integer32):
    """Custom type staTcpiSyslLasIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiSyslLasIdx_Type.__name__ = "Integer32"
_StaTcpiSyslLasIdx_Object = MibTableColumn
staTcpiSyslLasIdx = _StaTcpiSyslLasIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 1),
    _StaTcpiSyslLasIdx_Type()
)
staTcpiSyslLasIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiSyslLasIdx.setStatus("current")


class _StaTcpiSyslLasTim_Type(DisplayString):
    """Custom type staTcpiSyslLasTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_StaTcpiSyslLasTim_Type.__name__ = "DisplayString"
_StaTcpiSyslLasTim_Object = MibTableColumn
staTcpiSyslLasTim = _StaTcpiSyslLasTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 2),
    _StaTcpiSyslLasTim_Type()
)
staTcpiSyslLasTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiSyslLasTim.setStatus("current")


class _StaTcpiSyslLasSou_Type(Integer32):
    """Custom type staTcpiSyslLasSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("auth", 4),
          ("authpriv", 10),
          ("cron", 9),
          ("daemon", 3),
          ("kern", 0),
          ("local0", 16),
          ("local1", 17),
          ("local2", 18),
          ("local3", 19),
          ("local4", 20),
          ("local5", 21),
          ("local6", 22),
          ("local7", 23),
          ("lpr", 6),
          ("mail", 2),
          ("news", 7),
          ("syslog", 5),
          ("user", 1),
          ("uucp", 8))
    )


_StaTcpiSyslLasSou_Type.__name__ = "Integer32"
_StaTcpiSyslLasSou_Object = MibTableColumn
staTcpiSyslLasSou = _StaTcpiSyslLasSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 3),
    _StaTcpiSyslLasSou_Type()
)
staTcpiSyslLasSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiSyslLasSou.setStatus("current")


class _StaTcpiSyslLasLev_Type(Integer32):
    """Custom type staTcpiSyslLasLev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("alarm", 1),
          ("critical", 2),
          ("debug", 7),
          ("emergency", 0),
          ("error", 3),
          ("info", 6),
          ("notice", 5),
          ("warning", 4))
    )


_StaTcpiSyslLasLev_Type.__name__ = "Integer32"
_StaTcpiSyslLasLev_Object = MibTableColumn
staTcpiSyslLasLev = _StaTcpiSyslLasLev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 4),
    _StaTcpiSyslLasLev_Type()
)
staTcpiSyslLasLev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiSyslLasLev.setStatus("current")


class _StaTcpiSyslLasMes_Type(DisplayString):
    """Custom type staTcpiSyslLasMes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_StaTcpiSyslLasMes_Type.__name__ = "DisplayString"
_StaTcpiSyslLasMes_Object = MibTableColumn
staTcpiSyslLasMes = _StaTcpiSyslLasMes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 11, 1, 5),
    _StaTcpiSyslLasMes_Type()
)
staTcpiSyslLasMes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiSyslLasMes.setStatus("current")
_StaTcpiSyslDel_Type = DisplayString
_StaTcpiSyslDel_Object = MibScalar
staTcpiSyslDel = _StaTcpiSyslDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 11, 99),
    _StaTcpiSyslDel_Type()
)
staTcpiSyslDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpiSyslDel.setStatus("current")
_StaTcpiRadi_ObjectIdentity = ObjectIdentity
staTcpiRadi = _StaTcpiRadi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13)
)
_StaTcpiRadiInvalidau_Type = Counter32
_StaTcpiRadiInvalidau_Object = MibScalar
staTcpiRadiInvalidau = _StaTcpiRadiInvalidau_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 1),
    _StaTcpiRadiInvalidau_Type()
)
staTcpiRadiInvalidau.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiInvalidau.setStatus("current")
_StaTcpiRadiAuthenticTable_Object = MibTable
staTcpiRadiAuthenticTable = _StaTcpiRadiAuthenticTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2)
)
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticTable.setStatus("current")
_StaTcpiRadiAuthenticEntry_Object = MibTableRow
staTcpiRadiAuthenticEntry = _StaTcpiRadiAuthenticEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1)
)
staTcpiRadiAuthenticEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiRadiAuthenticIpaddress"),
    (0, "LANCOM-1711-MIB", "staTcpiRadiAuthenticPort"),
)
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticEntry.setStatus("current")
_StaTcpiRadiAuthenticIpaddress_Type = IpAddress
_StaTcpiRadiAuthenticIpaddress_Object = MibTableColumn
staTcpiRadiAuthenticIpaddress = _StaTcpiRadiAuthenticIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 1),
    _StaTcpiRadiAuthenticIpaddress_Type()
)
staTcpiRadiAuthenticIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticIpaddress.setStatus("current")


class _StaTcpiRadiAuthenticPort_Type(Integer32):
    """Custom type staTcpiRadiAuthenticPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiRadiAuthenticPort_Type.__name__ = "Integer32"
_StaTcpiRadiAuthenticPort_Object = MibTableColumn
staTcpiRadiAuthenticPort = _StaTcpiRadiAuthenticPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 2),
    _StaTcpiRadiAuthenticPort_Type()
)
staTcpiRadiAuthenticPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticPort.setStatus("current")


class _StaTcpiRadiAuthenticLastreque_Type(Integer32):
    """Custom type staTcpiRadiAuthenticLastreque based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiRadiAuthenticLastreque_Type.__name__ = "Integer32"
_StaTcpiRadiAuthenticLastreque_Object = MibTableColumn
staTcpiRadiAuthenticLastreque = _StaTcpiRadiAuthenticLastreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 3),
    _StaTcpiRadiAuthenticLastreque_Type()
)
staTcpiRadiAuthenticLastreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticLastreque.setStatus("current")
_StaTcpiRadiAuthenticRoundtrip_Type = Counter32
_StaTcpiRadiAuthenticRoundtrip_Object = MibTableColumn
staTcpiRadiAuthenticRoundtrip = _StaTcpiRadiAuthenticRoundtrip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 4),
    _StaTcpiRadiAuthenticRoundtrip_Type()
)
staTcpiRadiAuthenticRoundtrip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticRoundtrip.setStatus("current")
_StaTcpiRadiAuthenticAccessreq_Type = Counter32
_StaTcpiRadiAuthenticAccessreq_Object = MibTableColumn
staTcpiRadiAuthenticAccessreq = _StaTcpiRadiAuthenticAccessreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 5),
    _StaTcpiRadiAuthenticAccessreq_Type()
)
staTcpiRadiAuthenticAccessreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticAccessreq.setStatus("current")
_StaTcpiRadiAuthenticAccessret_Type = Counter32
_StaTcpiRadiAuthenticAccessret_Object = MibTableColumn
staTcpiRadiAuthenticAccessret = _StaTcpiRadiAuthenticAccessret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 6),
    _StaTcpiRadiAuthenticAccessret_Type()
)
staTcpiRadiAuthenticAccessret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticAccessret.setStatus("current")
_StaTcpiRadiAuthenticAccessacc_Type = Counter32
_StaTcpiRadiAuthenticAccessacc_Object = MibTableColumn
staTcpiRadiAuthenticAccessacc = _StaTcpiRadiAuthenticAccessacc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 7),
    _StaTcpiRadiAuthenticAccessacc_Type()
)
staTcpiRadiAuthenticAccessacc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticAccessacc.setStatus("current")
_StaTcpiRadiAuthenticAccessrej_Type = Counter32
_StaTcpiRadiAuthenticAccessrej_Object = MibTableColumn
staTcpiRadiAuthenticAccessrej = _StaTcpiRadiAuthenticAccessrej_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 8),
    _StaTcpiRadiAuthenticAccessrej_Type()
)
staTcpiRadiAuthenticAccessrej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticAccessrej.setStatus("current")
_StaTcpiRadiAuthenticAccesscha_Type = Counter32
_StaTcpiRadiAuthenticAccesscha_Object = MibTableColumn
staTcpiRadiAuthenticAccesscha = _StaTcpiRadiAuthenticAccesscha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 9),
    _StaTcpiRadiAuthenticAccesscha_Type()
)
staTcpiRadiAuthenticAccesscha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticAccesscha.setStatus("current")
_StaTcpiRadiAuthenticMalformed_Type = Counter32
_StaTcpiRadiAuthenticMalformed_Object = MibTableColumn
staTcpiRadiAuthenticMalformed = _StaTcpiRadiAuthenticMalformed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 10),
    _StaTcpiRadiAuthenticMalformed_Type()
)
staTcpiRadiAuthenticMalformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticMalformed.setStatus("current")
_StaTcpiRadiAuthenticBadauthen_Type = Counter32
_StaTcpiRadiAuthenticBadauthen_Object = MibTableColumn
staTcpiRadiAuthenticBadauthen = _StaTcpiRadiAuthenticBadauthen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 11),
    _StaTcpiRadiAuthenticBadauthen_Type()
)
staTcpiRadiAuthenticBadauthen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticBadauthen.setStatus("current")
_StaTcpiRadiAuthenticPendingre_Type = Counter32
_StaTcpiRadiAuthenticPendingre_Object = MibTableColumn
staTcpiRadiAuthenticPendingre = _StaTcpiRadiAuthenticPendingre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 12),
    _StaTcpiRadiAuthenticPendingre_Type()
)
staTcpiRadiAuthenticPendingre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticPendingre.setStatus("current")
_StaTcpiRadiAuthenticTimeouts_Type = Counter32
_StaTcpiRadiAuthenticTimeouts_Object = MibTableColumn
staTcpiRadiAuthenticTimeouts = _StaTcpiRadiAuthenticTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 13),
    _StaTcpiRadiAuthenticTimeouts_Type()
)
staTcpiRadiAuthenticTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticTimeouts.setStatus("current")
_StaTcpiRadiAuthenticUnknownty_Type = Counter32
_StaTcpiRadiAuthenticUnknownty_Object = MibTableColumn
staTcpiRadiAuthenticUnknownty = _StaTcpiRadiAuthenticUnknownty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 14),
    _StaTcpiRadiAuthenticUnknownty_Type()
)
staTcpiRadiAuthenticUnknownty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticUnknownty.setStatus("current")
_StaTcpiRadiAuthenticDropped_Type = Counter32
_StaTcpiRadiAuthenticDropped_Object = MibTableColumn
staTcpiRadiAuthenticDropped = _StaTcpiRadiAuthenticDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 2, 1, 15),
    _StaTcpiRadiAuthenticDropped_Type()
)
staTcpiRadiAuthenticDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAuthenticDropped.setStatus("current")
_StaTcpiRadiInvalidac_Type = Counter32
_StaTcpiRadiInvalidac_Object = MibScalar
staTcpiRadiInvalidac = _StaTcpiRadiInvalidac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 11),
    _StaTcpiRadiInvalidac_Type()
)
staTcpiRadiInvalidac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiInvalidac.setStatus("current")
_StaTcpiRadiAccountinTable_Object = MibTable
staTcpiRadiAccountinTable = _StaTcpiRadiAccountinTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12)
)
if mibBuilder.loadTexts:
    staTcpiRadiAccountinTable.setStatus("current")
_StaTcpiRadiAccountinEntry_Object = MibTableRow
staTcpiRadiAccountinEntry = _StaTcpiRadiAccountinEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1)
)
staTcpiRadiAccountinEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiRadiAccountinIpaddress"),
    (0, "LANCOM-1711-MIB", "staTcpiRadiAccountinPort"),
)
if mibBuilder.loadTexts:
    staTcpiRadiAccountinEntry.setStatus("current")
_StaTcpiRadiAccountinIpaddress_Type = IpAddress
_StaTcpiRadiAccountinIpaddress_Object = MibTableColumn
staTcpiRadiAccountinIpaddress = _StaTcpiRadiAccountinIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 1),
    _StaTcpiRadiAccountinIpaddress_Type()
)
staTcpiRadiAccountinIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinIpaddress.setStatus("current")


class _StaTcpiRadiAccountinPort_Type(Integer32):
    """Custom type staTcpiRadiAccountinPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiRadiAccountinPort_Type.__name__ = "Integer32"
_StaTcpiRadiAccountinPort_Object = MibTableColumn
staTcpiRadiAccountinPort = _StaTcpiRadiAccountinPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 2),
    _StaTcpiRadiAccountinPort_Type()
)
staTcpiRadiAccountinPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinPort.setStatus("current")


class _StaTcpiRadiAccountinLastrequest_Type(Integer32):
    """Custom type staTcpiRadiAccountinLastrequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpiRadiAccountinLastrequest_Type.__name__ = "Integer32"
_StaTcpiRadiAccountinLastrequest_Object = MibTableColumn
staTcpiRadiAccountinLastrequest = _StaTcpiRadiAccountinLastrequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 3),
    _StaTcpiRadiAccountinLastrequest_Type()
)
staTcpiRadiAccountinLastrequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinLastrequest.setStatus("current")
_StaTcpiRadiAccountinRoundtriptime_Type = Counter32
_StaTcpiRadiAccountinRoundtriptime_Object = MibTableColumn
staTcpiRadiAccountinRoundtriptime = _StaTcpiRadiAccountinRoundtriptime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 4),
    _StaTcpiRadiAccountinRoundtriptime_Type()
)
staTcpiRadiAccountinRoundtriptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinRoundtriptime.setStatus("current")
_StaTcpiRadiAccountinAccountingreq_Type = Counter32
_StaTcpiRadiAccountinAccountingreq_Object = MibTableColumn
staTcpiRadiAccountinAccountingreq = _StaTcpiRadiAccountinAccountingreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 5),
    _StaTcpiRadiAccountinAccountingreq_Type()
)
staTcpiRadiAccountinAccountingreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinAccountingreq.setStatus("current")
_StaTcpiRadiAccountinAccountingret_Type = Counter32
_StaTcpiRadiAccountinAccountingret_Object = MibTableColumn
staTcpiRadiAccountinAccountingret = _StaTcpiRadiAccountinAccountingret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 6),
    _StaTcpiRadiAccountinAccountingret_Type()
)
staTcpiRadiAccountinAccountingret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinAccountingret.setStatus("current")
_StaTcpiRadiAccountinAccountingres_Type = Counter32
_StaTcpiRadiAccountinAccountingres_Object = MibTableColumn
staTcpiRadiAccountinAccountingres = _StaTcpiRadiAccountinAccountingres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 7),
    _StaTcpiRadiAccountinAccountingres_Type()
)
staTcpiRadiAccountinAccountingres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinAccountingres.setStatus("current")
_StaTcpiRadiAccountinMalformedacco_Type = Counter32
_StaTcpiRadiAccountinMalformedacco_Object = MibTableColumn
staTcpiRadiAccountinMalformedacco = _StaTcpiRadiAccountinMalformedacco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 8),
    _StaTcpiRadiAccountinMalformedacco_Type()
)
staTcpiRadiAccountinMalformedacco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinMalformedacco.setStatus("current")
_StaTcpiRadiAccountinBadauthentica_Type = Counter32
_StaTcpiRadiAccountinBadauthentica_Object = MibTableColumn
staTcpiRadiAccountinBadauthentica = _StaTcpiRadiAccountinBadauthentica_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 9),
    _StaTcpiRadiAccountinBadauthentica_Type()
)
staTcpiRadiAccountinBadauthentica.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinBadauthentica.setStatus("current")
_StaTcpiRadiAccountinPendingreques_Type = Counter32
_StaTcpiRadiAccountinPendingreques_Object = MibTableColumn
staTcpiRadiAccountinPendingreques = _StaTcpiRadiAccountinPendingreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 10),
    _StaTcpiRadiAccountinPendingreques_Type()
)
staTcpiRadiAccountinPendingreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinPendingreques.setStatus("current")
_StaTcpiRadiAccountinTimeouts_Type = Counter32
_StaTcpiRadiAccountinTimeouts_Object = MibTableColumn
staTcpiRadiAccountinTimeouts = _StaTcpiRadiAccountinTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 11),
    _StaTcpiRadiAccountinTimeouts_Type()
)
staTcpiRadiAccountinTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinTimeouts.setStatus("current")
_StaTcpiRadiAccountinUnknowntypes_Type = Counter32
_StaTcpiRadiAccountinUnknowntypes_Object = MibTableColumn
staTcpiRadiAccountinUnknowntypes = _StaTcpiRadiAccountinUnknowntypes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 12),
    _StaTcpiRadiAccountinUnknowntypes_Type()
)
staTcpiRadiAccountinUnknowntypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinUnknowntypes.setStatus("current")
_StaTcpiRadiAccountinDropped_Type = Counter32
_StaTcpiRadiAccountinDropped_Object = MibTableColumn
staTcpiRadiAccountinDropped = _StaTcpiRadiAccountinDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 13, 12, 1, 13),
    _StaTcpiRadiAccountinDropped_Type()
)
staTcpiRadiAccountinDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiRadiAccountinDropped.setStatus("current")
_StaTcpiNetwTable_Object = MibTable
staTcpiNetwTable = _StaTcpiNetwTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20)
)
if mibBuilder.loadTexts:
    staTcpiNetwTable.setStatus("current")
_StaTcpiNetwEntry_Object = MibTableRow
staTcpiNetwEntry = _StaTcpiNetwEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1)
)
staTcpiNetwEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTcpiNetwNet"),
)
if mibBuilder.loadTexts:
    staTcpiNetwEntry.setStatus("current")


class _StaTcpiNetwNet_Type(DisplayString):
    """Custom type staTcpiNetwNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_StaTcpiNetwNet_Type.__name__ = "DisplayString"
_StaTcpiNetwNet_Object = MibTableColumn
staTcpiNetwNet = _StaTcpiNetwNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 1),
    _StaTcpiNetwNet_Type()
)
staTcpiNetwNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwNet.setStatus("current")
_StaTcpiNetwIpa_Type = IpAddress
_StaTcpiNetwIpa_Object = MibTableColumn
staTcpiNetwIpa = _StaTcpiNetwIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 2),
    _StaTcpiNetwIpa_Type()
)
staTcpiNetwIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwIpa.setStatus("current")
_StaTcpiNetwIpn_Type = IpAddress
_StaTcpiNetwIpn_Object = MibTableColumn
staTcpiNetwIpn = _StaTcpiNetwIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 3),
    _StaTcpiNetwIpn_Type()
)
staTcpiNetwIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwIpn.setStatus("current")


class _StaTcpiNetwVla_Type(Integer32):
    """Custom type staTcpiNetwVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetwVla_Type.__name__ = "Integer32"
_StaTcpiNetwVla_Object = MibTableColumn
staTcpiNetwVla = _StaTcpiNetwVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 4),
    _StaTcpiNetwVla_Type()
)
staTcpiNetwVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwVla.setStatus("current")


class _StaTcpiNetwInt_Type(Integer32):
    """Custom type staTcpiNetwInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(256,
              257,
              258,
              259,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("any", 65535),
          ("lan-1", 256),
          ("lan-2", 257),
          ("lan-3", 258),
          ("lan-4", 259))
    )


_StaTcpiNetwInt_Type.__name__ = "Integer32"
_StaTcpiNetwInt_Object = MibTableColumn
staTcpiNetwInt = _StaTcpiNetwInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 5),
    _StaTcpiNetwInt_Type()
)
staTcpiNetwInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwInt.setStatus("current")


class _StaTcpiNetwSrc_Type(Integer32):
    """Custom type staTcpiNetwSrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("loose", 0),
          ("strict", 1))
    )


_StaTcpiNetwSrc_Type.__name__ = "Integer32"
_StaTcpiNetwSrc_Object = MibTableColumn
staTcpiNetwSrc = _StaTcpiNetwSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 6),
    _StaTcpiNetwSrc_Type()
)
staTcpiNetwSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwSrc.setStatus("current")


class _StaTcpiNetwTyp_Type(Integer32):
    """Custom type staTcpiNetwTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("dmz", 2),
          ("intranet", 1))
    )


_StaTcpiNetwTyp_Type.__name__ = "Integer32"
_StaTcpiNetwTyp_Object = MibTableColumn
staTcpiNetwTyp = _StaTcpiNetwTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 7),
    _StaTcpiNetwTyp_Type()
)
staTcpiNetwTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwTyp.setStatus("current")


class _StaTcpiNetwRtg_Type(Integer32):
    """Custom type staTcpiNetwRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpiNetwRtg_Type.__name__ = "Integer32"
_StaTcpiNetwRtg_Object = MibTableColumn
staTcpiNetwRtg = _StaTcpiNetwRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 9, 20, 1, 8),
    _StaTcpiNetwRtg_Type()
)
staTcpiNetwRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpiNetwRtg.setStatus("current")
_StaIpro_ObjectIdentity = ObjectIdentity
staIpro = _StaIpro_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10)
)
_StaIproLanrx_Type = Counter32
_StaIproLanrx_Object = MibScalar
staIproLanrx = _StaIproLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 1),
    _StaIproLanrx_Type()
)
staIproLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLanrx.setStatus("current")
_StaIproLantx_Type = Counter32
_StaIproLantx_Object = MibScalar
staIproLantx = _StaIproLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 2),
    _StaIproLantx_Type()
)
staIproLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLantx.setStatus("current")
_StaIproLanloca_Type = Counter32
_StaIproLanloca_Object = MibScalar
staIproLanloca = _StaIproLanloca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 3),
    _StaIproLanloca_Type()
)
staIproLanloca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLanloca.setStatus("current")
_StaIproLannetw_Type = Counter32
_StaIproLannetw_Object = MibScalar
staIproLannetw = _StaIproLannetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 4),
    _StaIproLannetw_Type()
)
staIproLannetw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLannetw.setStatus("current")
_StaIproLanrout_Type = Counter32
_StaIproLanrout_Object = MibScalar
staIproLanrout = _StaIproLanrout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 5),
    _StaIproLanrout_Type()
)
staIproLanrout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLanrout.setStatus("current")
_StaIproLanttle_Type = Counter32
_StaIproLanttle_Object = MibScalar
staIproLanttle = _StaIproLanttle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 6),
    _StaIproLanttle_Type()
)
staIproLanttle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLanttle.setStatus("current")
_StaIproLanfilt_Type = Counter32
_StaIproLanfilt_Object = MibScalar
staIproLanfilt = _StaIproLanfilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 7),
    _StaIproLanfilt_Type()
)
staIproLanfilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLanfilt.setStatus("current")
_StaIproLandisc_Type = Counter32
_StaIproLandisc_Object = MibScalar
staIproLandisc = _StaIproLandisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 8),
    _StaIproLandisc_Type()
)
staIproLandisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLandisc.setStatus("current")
_StaIproWanrx_Type = Counter32
_StaIproWanrx_Object = MibScalar
staIproWanrx = _StaIproWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 9),
    _StaIproWanrx_Type()
)
staIproWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWanrx.setStatus("current")
_StaIproWantx_Type = Counter32
_StaIproWantx_Object = MibScalar
staIproWantx = _StaIproWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 10),
    _StaIproWantx_Type()
)
staIproWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWantx.setStatus("current")
_StaIproWannetw_Type = Counter32
_StaIproWannetw_Object = MibScalar
staIproWannetw = _StaIproWannetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 11),
    _StaIproWannetw_Type()
)
staIproWannetw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWannetw.setStatus("current")
_StaIproWanttle_Type = Counter32
_StaIproWanttle_Object = MibScalar
staIproWanttle = _StaIproWanttle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 12),
    _StaIproWanttle_Type()
)
staIproWanttle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWanttle.setStatus("current")
_StaIproWanfilt_Type = Counter32
_StaIproWanfilt_Object = MibScalar
staIproWanfilt = _StaIproWanfilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 13),
    _StaIproWanfilt_Type()
)
staIproWanfilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWanfilt.setStatus("current")
_StaIproWandisc_Type = Counter32
_StaIproWandisc_Object = MibScalar
staIproWandisc = _StaIproWandisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 14),
    _StaIproWandisc_Type()
)
staIproWandisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWandisc.setStatus("current")
_StaIproWantype_Type = Counter32
_StaIproWantype_Object = MibScalar
staIproWantype = _StaIproWantype_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 15),
    _StaIproWantype_Type()
)
staIproWantype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproWantype.setStatus("current")
_StaIproArperro_Type = Counter32
_StaIproArperro_Object = MibScalar
staIproArperro = _StaIproArperro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 16),
    _StaIproArperro_Type()
)
staIproArperro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproArperro.setStatus("current")
_StaIproEstabliTable_Object = MibTable
staIproEstabliTable = _StaIproEstabliTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17)
)
if mibBuilder.loadTexts:
    staIproEstabliTable.setStatus("current")
_StaIproEstabliEntry_Object = MibTableRow
staIproEstabliEntry = _StaIproEstabliEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1)
)
staIproEstabliEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproEstabliTim"),
    (0, "LANCOM-1711-MIB", "staIproEstabliCou"),
)
if mibBuilder.loadTexts:
    staIproEstabliEntry.setStatus("current")


class _StaIproEstabliTim_Type(DisplayString):
    """Custom type staIproEstabliTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaIproEstabliTim_Type.__name__ = "DisplayString"
_StaIproEstabliTim_Object = MibTableColumn
staIproEstabliTim = _StaIproEstabliTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 1),
    _StaIproEstabliTim_Type()
)
staIproEstabliTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliTim.setStatus("current")
_StaIproEstabliDes_Type = IpAddress
_StaIproEstabliDes_Object = MibTableColumn
staIproEstabliDes = _StaIproEstabliDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 2),
    _StaIproEstabliDes_Type()
)
staIproEstabliDes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliDes.setStatus("current")
_StaIproEstabliSrc_Type = IpAddress
_StaIproEstabliSrc_Object = MibTableColumn
staIproEstabliSrc = _StaIproEstabliSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 3),
    _StaIproEstabliSrc_Type()
)
staIproEstabliSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliSrc.setStatus("current")


class _StaIproEstabliPro_Type(Integer32):
    """Custom type staIproEstabliPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6,
              8,
              17,
              47,
              50,
              51,
              62,
              108,
              112,
              119)
        )
    )
    namedValues = NamedValues(
        *(("ah", 51),
          ("cftp", 62),
          ("egp", 8),
          ("esp", 50),
          ("ggt", 3),
          ("gre", 47),
          ("icmp", 1),
          ("igmp", 2),
          ("ipcomp", 108),
          ("ipip", 4),
          ("srp", 119),
          ("tcp", 6),
          ("udp", 17),
          ("vrrp", 112))
    )


_StaIproEstabliPro_Type.__name__ = "Integer32"
_StaIproEstabliPro_Object = MibTableColumn
staIproEstabliPro = _StaIproEstabliPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 4),
    _StaIproEstabliPro_Type()
)
staIproEstabliPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliPro.setStatus("current")


class _StaIproEstabliDpo_Type(Integer32):
    """Custom type staIproEstabliDpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproEstabliDpo_Type.__name__ = "Integer32"
_StaIproEstabliDpo_Object = MibTableColumn
staIproEstabliDpo = _StaIproEstabliDpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 5),
    _StaIproEstabliDpo_Type()
)
staIproEstabliDpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliDpo.setStatus("current")


class _StaIproEstabliSou_Type(Integer32):
    """Custom type staIproEstabliSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproEstabliSou_Type.__name__ = "Integer32"
_StaIproEstabliSou_Object = MibTableColumn
staIproEstabliSou = _StaIproEstabliSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 6),
    _StaIproEstabliSou_Type()
)
staIproEstabliSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliSou.setStatus("current")


class _StaIproEstabliCou_Type(Integer32):
    """Custom type staIproEstabliCou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproEstabliCou_Type.__name__ = "Integer32"
_StaIproEstabliCou_Object = MibTableColumn
staIproEstabliCou = _StaIproEstabliCou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 17, 1, 7),
    _StaIproEstabliCou_Type()
)
staIproEstabliCou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproEstabliCou.setStatus("current")
_StaIproProtocoTable_Object = MibTable
staIproProtocoTable = _StaIproProtocoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18)
)
if mibBuilder.loadTexts:
    staIproProtocoTable.setStatus("current")
_StaIproProtocoEntry_Object = MibTableRow
staIproProtocoEntry = _StaIproProtocoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1)
)
staIproProtocoEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproProtocoPro"),
)
if mibBuilder.loadTexts:
    staIproProtocoEntry.setStatus("current")


class _StaIproProtocoPro_Type(Integer32):
    """Custom type staIproProtocoPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6,
              8,
              17,
              47,
              50,
              51,
              62,
              108,
              112,
              119)
        )
    )
    namedValues = NamedValues(
        *(("ah", 51),
          ("cftp", 62),
          ("egp", 8),
          ("esp", 50),
          ("ggt", 3),
          ("gre", 47),
          ("icmp", 1),
          ("igmp", 2),
          ("ipcomp", 108),
          ("ipip", 4),
          ("srp", 119),
          ("tcp", 6),
          ("udp", 17),
          ("vrrp", 112))
    )


_StaIproProtocoPro_Type.__name__ = "Integer32"
_StaIproProtocoPro_Object = MibTableColumn
staIproProtocoPro = _StaIproProtocoPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 1),
    _StaIproProtocoPro_Type()
)
staIproProtocoPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproProtocoPro.setStatus("current")
_StaIproProtocoLan_Type = Counter32
_StaIproProtocoLan_Object = MibTableColumn
staIproProtocoLan = _StaIproProtocoLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 2),
    _StaIproProtocoLan_Type()
)
staIproProtocoLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproProtocoLan.setStatus("current")
_StaIproProtocoWan_Type = Counter32
_StaIproProtocoWan_Object = MibTableColumn
staIproProtocoWan = _StaIproProtocoWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 18, 1, 3),
    _StaIproProtocoWan_Type()
)
staIproProtocoWan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproProtocoWan.setStatus("current")
_StaIproRip_ObjectIdentity = ObjectIdentity
staIproRip = _StaIproRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19)
)
_StaIproRipRx_Type = Counter32
_StaIproRipRx_Object = MibScalar
staIproRipRx = _StaIproRipRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 1),
    _StaIproRipRx_Type()
)
staIproRipRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipRx.setStatus("current")
_StaIproRipRequ_Type = Counter32
_StaIproRipRequ_Object = MibScalar
staIproRipRequ = _StaIproRipRequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 2),
    _StaIproRipRequ_Type()
)
staIproRipRequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipRequ.setStatus("current")
_StaIproRipResp_Type = Counter32
_StaIproRipResp_Object = MibScalar
staIproRipResp = _StaIproRipResp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 3),
    _StaIproRipResp_Type()
)
staIproRipResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipResp.setStatus("current")
_StaIproRipDisc_Type = Counter32
_StaIproRipDisc_Object = MibScalar
staIproRipDisc = _StaIproRipDisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 4),
    _StaIproRipDisc_Type()
)
staIproRipDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDisc.setStatus("current")
_StaIproRipErro_Type = Counter32
_StaIproRipErro_Object = MibScalar
staIproRipErro = _StaIproRipErro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 5),
    _StaIproRipErro_Type()
)
staIproRipErro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipErro.setStatus("current")
_StaIproRipEntr_Type = Counter32
_StaIproRipEntr_Object = MibScalar
staIproRipEntr = _StaIproRipEntr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 6),
    _StaIproRipEntr_Type()
)
staIproRipEntr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipEntr.setStatus("current")
_StaIproRipTx_Type = Counter32
_StaIproRipTx_Object = MibScalar
staIproRipTx = _StaIproRipTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 7),
    _StaIproRipTx_Type()
)
staIproRipTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipTx.setStatus("current")
_StaIproRipIpriTable_Object = MibTable
staIproRipIpriTable = _StaIproRipIpriTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8)
)
if mibBuilder.loadTexts:
    staIproRipIpriTable.setStatus("current")
_StaIproRipIpriEntry_Object = MibTableRow
staIproRipIpriEntry = _StaIproRipIpriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1)
)
staIproRipIpriEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipIpriIpa"),
    (0, "LANCOM-1711-MIB", "staIproRipIpriIpn"),
    (0, "LANCOM-1711-MIB", "staIproRipIpriRtg"),
)
if mibBuilder.loadTexts:
    staIproRipIpriEntry.setStatus("current")
_StaIproRipIpriIpa_Type = IpAddress
_StaIproRipIpriIpa_Object = MibTableColumn
staIproRipIpriIpa = _StaIproRipIpriIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 1),
    _StaIproRipIpriIpa_Type()
)
staIproRipIpriIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriIpa.setStatus("current")
_StaIproRipIpriIpn_Type = IpAddress
_StaIproRipIpriIpn_Object = MibTableColumn
staIproRipIpriIpn = _StaIproRipIpriIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 2),
    _StaIproRipIpriIpn_Type()
)
staIproRipIpriIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriIpn.setStatus("current")


class _StaIproRipIpriTim_Type(Integer32):
    """Custom type staIproRipIpriTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipIpriTim_Type.__name__ = "Integer32"
_StaIproRipIpriTim_Object = MibTableColumn
staIproRipIpriTim = _StaIproRipIpriTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 3),
    _StaIproRipIpriTim_Type()
)
staIproRipIpriTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriTim.setStatus("current")


class _StaIproRipIpriDis_Type(Integer32):
    """Custom type staIproRipIpriDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipIpriDis_Type.__name__ = "Integer32"
_StaIproRipIpriDis_Object = MibTableColumn
staIproRipIpriDis = _StaIproRipIpriDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 4),
    _StaIproRipIpriDis_Type()
)
staIproRipIpriDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriDis.setStatus("current")
_StaIproRipIpriGat_Type = IpAddress
_StaIproRipIpriGat_Object = MibTableColumn
staIproRipIpriGat = _StaIproRipIpriGat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 5),
    _StaIproRipIpriGat_Type()
)
staIproRipIpriGat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriGat.setStatus("current")


class _StaIproRipIpriRtg_Type(Integer32):
    """Custom type staIproRipIpriRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipIpriRtg_Type.__name__ = "Integer32"
_StaIproRipIpriRtg_Object = MibTableColumn
staIproRipIpriRtg = _StaIproRipIpriRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 6),
    _StaIproRipIpriRtg_Type()
)
staIproRipIpriRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriRtg.setStatus("current")


class _StaIproRipIpriPee_Type(DisplayString):
    """Custom type staIproRipIpriPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipIpriPee_Type.__name__ = "DisplayString"
_StaIproRipIpriPee_Object = MibTableColumn
staIproRipIpriPee = _StaIproRipIpriPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 8),
    _StaIproRipIpriPee_Type()
)
staIproRipIpriPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriPee.setStatus("current")


class _StaIproRipIpriPor_Type(Integer32):
    """Custom type staIproRipIpriPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaIproRipIpriPor_Type.__name__ = "Integer32"
_StaIproRipIpriPor_Object = MibTableColumn
staIproRipIpriPor = _StaIproRipIpriPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 9),
    _StaIproRipIpriPor_Type()
)
staIproRipIpriPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriPor.setStatus("current")


class _StaIproRipIpriVla_Type(Integer32):
    """Custom type staIproRipIpriVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipIpriVla_Type.__name__ = "Integer32"
_StaIproRipIpriVla_Object = MibTableColumn
staIproRipIpriVla = _StaIproRipIpriVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 10),
    _StaIproRipIpriVla_Type()
)
staIproRipIpriVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriVla.setStatus("current")


class _StaIproRipIpriNet_Type(DisplayString):
    """Custom type staIproRipIpriNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipIpriNet_Type.__name__ = "DisplayString"
_StaIproRipIpriNet_Object = MibTableColumn
staIproRipIpriNet = _StaIproRipIpriNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 8, 1, 11),
    _StaIproRipIpriNet_Type()
)
staIproRipIpriNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipIpriNet.setStatus("current")
_StaIproRipDele_Type = DisplayString
_StaIproRipDele_Object = MibScalar
staIproRipDele = _StaIproRipDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 9),
    _StaIproRipDele_Type()
)
staIproRipDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIproRipDele.setStatus("current")
_StaIproRipLansTable_Object = MibTable
staIproRipLansTable = _StaIproRipLansTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10)
)
if mibBuilder.loadTexts:
    staIproRipLansTable.setStatus("current")
_StaIproRipLansEntry_Object = MibTableRow
staIproRipLansEntry = _StaIproRipLansEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1)
)
staIproRipLansEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipLansNetw"),
)
if mibBuilder.loadTexts:
    staIproRipLansEntry.setStatus("current")


class _StaIproRipLansNetw_Type(DisplayString):
    """Custom type staIproRipLansNetw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipLansNetw_Type.__name__ = "DisplayString"
_StaIproRipLansNetw_Object = MibTableColumn
staIproRipLansNetw = _StaIproRipLansNetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 1),
    _StaIproRipLansNetw_Type()
)
staIproRipLansNetw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansNetw.setStatus("current")


class _StaIproRipLansRipt_Type(Integer32):
    """Custom type staIproRipLansRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIproRipLansRipt_Type.__name__ = "Integer32"
_StaIproRipLansRipt_Object = MibTableColumn
staIproRipLansRipt = _StaIproRipLansRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 2),
    _StaIproRipLansRipt_Type()
)
staIproRipLansRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansRipt.setStatus("current")


class _StaIproRipLansRipa_Type(Integer32):
    """Custom type staIproRipLansRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipLansRipa_Type.__name__ = "Integer32"
_StaIproRipLansRipa_Object = MibTableColumn
staIproRipLansRipa = _StaIproRipLansRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 3),
    _StaIproRipLansRipa_Type()
)
staIproRipLansRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansRipa.setStatus("current")


class _StaIproRipLansProp_Type(Integer32):
    """Custom type staIproRipLansProp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipLansProp_Type.__name__ = "Integer32"
_StaIproRipLansProp_Object = MibTableColumn
staIproRipLansProp = _StaIproRipLansProp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 4),
    _StaIproRipLansProp_Type()
)
staIproRipLansProp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansProp.setStatus("current")


class _StaIproRipLansDftr_Type(Integer32):
    """Custom type staIproRipLansDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipLansDftr_Type.__name__ = "Integer32"
_StaIproRipLansDftr_Object = MibTableColumn
staIproRipLansDftr = _StaIproRipLansDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 5),
    _StaIproRipLansDftr_Type()
)
staIproRipLansDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansDftr.setStatus("current")


class _StaIproRipLansRtgt_Type(DisplayString):
    """Custom type staIproRipLansRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIproRipLansRtgt_Type.__name__ = "DisplayString"
_StaIproRipLansRtgt_Object = MibTableColumn
staIproRipLansRtgt = _StaIproRipLansRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 6),
    _StaIproRipLansRtgt_Type()
)
staIproRipLansRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansRtgt.setStatus("current")


class _StaIproRipLansPort_Type(Integer32):
    """Custom type staIproRipLansPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaIproRipLansPort_Type.__name__ = "Integer32"
_StaIproRipLansPort_Object = MibTableColumn
staIproRipLansPort = _StaIproRipLansPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 7),
    _StaIproRipLansPort_Type()
)
staIproRipLansPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansPort.setStatus("current")


class _StaIproRipLansVlan_Type(Integer32):
    """Custom type staIproRipLansVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipLansVlan_Type.__name__ = "Integer32"
_StaIproRipLansVlan_Object = MibTableColumn
staIproRipLansVlan = _StaIproRipLansVlan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 8),
    _StaIproRipLansVlan_Type()
)
staIproRipLansVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansVlan.setStatus("current")


class _StaIproRipLansPois_Type(Integer32):
    """Custom type staIproRipLansPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipLansPois_Type.__name__ = "Integer32"
_StaIproRipLansPois_Object = MibTableColumn
staIproRipLansPois = _StaIproRipLansPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 9),
    _StaIproRipLansPois_Type()
)
staIproRipLansPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansPois.setStatus("current")


class _StaIproRipLansRxfi_Type(DisplayString):
    """Custom type staIproRipLansRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipLansRxfi_Type.__name__ = "DisplayString"
_StaIproRipLansRxfi_Object = MibTableColumn
staIproRipLansRxfi = _StaIproRipLansRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 10),
    _StaIproRipLansRxfi_Type()
)
staIproRipLansRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansRxfi.setStatus("current")


class _StaIproRipLansTxfi_Type(DisplayString):
    """Custom type staIproRipLansTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipLansTxfi_Type.__name__ = "DisplayString"
_StaIproRipLansTxfi_Object = MibTableColumn
staIproRipLansTxfi = _StaIproRipLansTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 11),
    _StaIproRipLansTxfi_Type()
)
staIproRipLansTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansTxfi.setStatus("current")


class _StaIproRipLansRips_Type(Integer32):
    """Custom type staIproRipLansRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipLansRips_Type.__name__ = "Integer32"
_StaIproRipLansRips_Object = MibTableColumn
staIproRipLansRips = _StaIproRipLansRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 10, 1, 12),
    _StaIproRipLansRips_Type()
)
staIproRipLansRips.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipLansRips.setStatus("current")
_StaIproRipWansTable_Object = MibTable
staIproRipWansTable = _StaIproRipWansTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11)
)
if mibBuilder.loadTexts:
    staIproRipWansTable.setStatus("current")
_StaIproRipWansEntry_Object = MibTableRow
staIproRipWansEntry = _StaIproRipWansEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1)
)
staIproRipWansEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipWansPeer"),
)
if mibBuilder.loadTexts:
    staIproRipWansEntry.setStatus("current")


class _StaIproRipWansPeer_Type(DisplayString):
    """Custom type staIproRipWansPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipWansPeer_Type.__name__ = "DisplayString"
_StaIproRipWansPeer_Object = MibTableColumn
staIproRipWansPeer = _StaIproRipWansPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 1),
    _StaIproRipWansPeer_Type()
)
staIproRipWansPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansPeer.setStatus("current")


class _StaIproRipWansRipt_Type(Integer32):
    """Custom type staIproRipWansRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIproRipWansRipt_Type.__name__ = "Integer32"
_StaIproRipWansRipt_Object = MibTableColumn
staIproRipWansRipt = _StaIproRipWansRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 2),
    _StaIproRipWansRipt_Type()
)
staIproRipWansRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansRipt.setStatus("current")


class _StaIproRipWansRipa_Type(Integer32):
    """Custom type staIproRipWansRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWansRipa_Type.__name__ = "Integer32"
_StaIproRipWansRipa_Object = MibTableColumn
staIproRipWansRipa = _StaIproRipWansRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 3),
    _StaIproRipWansRipa_Type()
)
staIproRipWansRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansRipa.setStatus("current")


class _StaIproRipWansMasq_Type(Integer32):
    """Custom type staIproRipWansMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_StaIproRipWansMasq_Type.__name__ = "Integer32"
_StaIproRipWansMasq_Object = MibTableColumn
staIproRipWansMasq = _StaIproRipWansMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 4),
    _StaIproRipWansMasq_Type()
)
staIproRipWansMasq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansMasq.setStatus("current")


class _StaIproRipWansDftr_Type(Integer32):
    """Custom type staIproRipWansDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipWansDftr_Type.__name__ = "Integer32"
_StaIproRipWansDftr_Object = MibTableColumn
staIproRipWansDftr = _StaIproRipWansDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 5),
    _StaIproRipWansDftr_Type()
)
staIproRipWansDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansDftr.setStatus("current")


class _StaIproRipWansRtgt_Type(DisplayString):
    """Custom type staIproRipWansRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIproRipWansRtgt_Type.__name__ = "DisplayString"
_StaIproRipWansRtgt_Object = MibTableColumn
staIproRipWansRtgt = _StaIproRipWansRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 6),
    _StaIproRipWansRtgt_Type()
)
staIproRipWansRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansRtgt.setStatus("current")


class _StaIproRipWansPois_Type(Integer32):
    """Custom type staIproRipWansPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWansPois_Type.__name__ = "Integer32"
_StaIproRipWansPois_Object = MibTableColumn
staIproRipWansPois = _StaIproRipWansPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 7),
    _StaIproRipWansPois_Type()
)
staIproRipWansPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansPois.setStatus("current")


class _StaIproRipWansRfc2_Type(Integer32):
    """Custom type staIproRipWansRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWansRfc2_Type.__name__ = "Integer32"
_StaIproRipWansRfc2_Object = MibTableColumn
staIproRipWansRfc2 = _StaIproRipWansRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 8),
    _StaIproRipWansRfc2_Type()
)
staIproRipWansRfc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansRfc2.setStatus("current")
_StaIproRipWansGate_Type = IpAddress
_StaIproRipWansGate_Object = MibTableColumn
staIproRipWansGate = _StaIproRipWansGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 9),
    _StaIproRipWansGate_Type()
)
staIproRipWansGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansGate.setStatus("current")


class _StaIproRipWansRxfi_Type(DisplayString):
    """Custom type staIproRipWansRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipWansRxfi_Type.__name__ = "DisplayString"
_StaIproRipWansRxfi_Object = MibTableColumn
staIproRipWansRxfi = _StaIproRipWansRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 10),
    _StaIproRipWansRxfi_Type()
)
staIproRipWansRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansRxfi.setStatus("current")


class _StaIproRipWansTxfi_Type(DisplayString):
    """Custom type staIproRipWansTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipWansTxfi_Type.__name__ = "DisplayString"
_StaIproRipWansTxfi_Object = MibTableColumn
staIproRipWansTxfi = _StaIproRipWansTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 11),
    _StaIproRipWansTxfi_Type()
)
staIproRipWansTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansTxfi.setStatus("current")


class _StaIproRipWansRips_Type(Integer32):
    """Custom type staIproRipWansRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWansRips_Type.__name__ = "Integer32"
_StaIproRipWansRips_Object = MibTableColumn
staIproRipWansRips = _StaIproRipWansRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 11, 1, 12),
    _StaIproRipWansRips_Type()
)
staIproRipWansRips.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWansRips.setStatus("current")
_StaIproRipVrrpTable_Object = MibTable
staIproRipVrrpTable = _StaIproRipVrrpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12)
)
if mibBuilder.loadTexts:
    staIproRipVrrpTable.setStatus("current")
_StaIproRipVrrpEntry_Object = MibTableRow
staIproRipVrrpEntry = _StaIproRipVrrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1)
)
staIproRipVrrpEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipVrrpNet"),
    (0, "LANCOM-1711-MIB", "staIproRipVrrpRou"),
)
if mibBuilder.loadTexts:
    staIproRipVrrpEntry.setStatus("current")


class _StaIproRipVrrpNet_Type(DisplayString):
    """Custom type staIproRipVrrpNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipVrrpNet_Type.__name__ = "DisplayString"
_StaIproRipVrrpNet_Object = MibTableColumn
staIproRipVrrpNet = _StaIproRipVrrpNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 1),
    _StaIproRipVrrpNet_Type()
)
staIproRipVrrpNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipVrrpNet.setStatus("current")


class _StaIproRipVrrpRip_Type(Integer32):
    """Custom type staIproRipVrrpRip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIproRipVrrpRip_Type.__name__ = "Integer32"
_StaIproRipVrrpRip_Object = MibTableColumn
staIproRipVrrpRip = _StaIproRipVrrpRip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 2),
    _StaIproRipVrrpRip_Type()
)
staIproRipVrrpRip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipVrrpRip.setStatus("current")


class _StaIproRipVrrpRou_Type(Integer32):
    """Custom type staIproRipVrrpRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproRipVrrpRou_Type.__name__ = "Integer32"
_StaIproRipVrrpRou_Object = MibTableColumn
staIproRipVrrpRou = _StaIproRipVrrpRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 12, 1, 3),
    _StaIproRipVrrpRou_Type()
)
staIproRipVrrpRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipVrrpRou.setStatus("current")
_StaIproRipDynlTable_Object = MibTable
staIproRipDynlTable = _StaIproRipDynlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13)
)
if mibBuilder.loadTexts:
    staIproRipDynlTable.setStatus("current")
_StaIproRipDynlEntry_Object = MibTableRow
staIproRipDynlEntry = _StaIproRipDynlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1)
)
staIproRipDynlEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipDynlGate"),
)
if mibBuilder.loadTexts:
    staIproRipDynlEntry.setStatus("current")


class _StaIproRipDynlGate_Type(DisplayString):
    """Custom type staIproRipDynlGate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipDynlGate_Type.__name__ = "DisplayString"
_StaIproRipDynlGate_Object = MibTableColumn
staIproRipDynlGate = _StaIproRipDynlGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 1),
    _StaIproRipDynlGate_Type()
)
staIproRipDynlGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlGate.setStatus("current")


class _StaIproRipDynlRipt_Type(Integer32):
    """Custom type staIproRipDynlRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIproRipDynlRipt_Type.__name__ = "Integer32"
_StaIproRipDynlRipt_Object = MibTableColumn
staIproRipDynlRipt = _StaIproRipDynlRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 2),
    _StaIproRipDynlRipt_Type()
)
staIproRipDynlRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlRipt.setStatus("current")


class _StaIproRipDynlRipa_Type(Integer32):
    """Custom type staIproRipDynlRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynlRipa_Type.__name__ = "Integer32"
_StaIproRipDynlRipa_Object = MibTableColumn
staIproRipDynlRipa = _StaIproRipDynlRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 3),
    _StaIproRipDynlRipa_Type()
)
staIproRipDynlRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlRipa.setStatus("current")


class _StaIproRipDynlPois_Type(Integer32):
    """Custom type staIproRipDynlPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynlPois_Type.__name__ = "Integer32"
_StaIproRipDynlPois_Object = MibTableColumn
staIproRipDynlPois = _StaIproRipDynlPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 4),
    _StaIproRipDynlPois_Type()
)
staIproRipDynlPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlPois.setStatus("current")


class _StaIproRipDynlDftr_Type(Integer32):
    """Custom type staIproRipDynlDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipDynlDftr_Type.__name__ = "Integer32"
_StaIproRipDynlDftr_Object = MibTableColumn
staIproRipDynlDftr = _StaIproRipDynlDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 5),
    _StaIproRipDynlDftr_Type()
)
staIproRipDynlDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlDftr.setStatus("current")


class _StaIproRipDynlRtgt_Type(DisplayString):
    """Custom type staIproRipDynlRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIproRipDynlRtgt_Type.__name__ = "DisplayString"
_StaIproRipDynlRtgt_Object = MibTableColumn
staIproRipDynlRtgt = _StaIproRipDynlRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 6),
    _StaIproRipDynlRtgt_Type()
)
staIproRipDynlRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlRtgt.setStatus("current")


class _StaIproRipDynlPort_Type(Integer32):
    """Custom type staIproRipDynlPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaIproRipDynlPort_Type.__name__ = "Integer32"
_StaIproRipDynlPort_Object = MibTableColumn
staIproRipDynlPort = _StaIproRipDynlPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 7),
    _StaIproRipDynlPort_Type()
)
staIproRipDynlPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlPort.setStatus("current")


class _StaIproRipDynlVlan_Type(Integer32):
    """Custom type staIproRipDynlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipDynlVlan_Type.__name__ = "Integer32"
_StaIproRipDynlVlan_Object = MibTableColumn
staIproRipDynlVlan = _StaIproRipDynlVlan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 8),
    _StaIproRipDynlVlan_Type()
)
staIproRipDynlVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlVlan.setStatus("current")


class _StaIproRipDynlRxfi_Type(DisplayString):
    """Custom type staIproRipDynlRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipDynlRxfi_Type.__name__ = "DisplayString"
_StaIproRipDynlRxfi_Object = MibTableColumn
staIproRipDynlRxfi = _StaIproRipDynlRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 10),
    _StaIproRipDynlRxfi_Type()
)
staIproRipDynlRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlRxfi.setStatus("current")


class _StaIproRipDynlTxfi_Type(DisplayString):
    """Custom type staIproRipDynlTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipDynlTxfi_Type.__name__ = "DisplayString"
_StaIproRipDynlTxfi_Object = MibTableColumn
staIproRipDynlTxfi = _StaIproRipDynlTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 11),
    _StaIproRipDynlTxfi_Type()
)
staIproRipDynlTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlTxfi.setStatus("current")


class _StaIproRipDynlRips_Type(Integer32):
    """Custom type staIproRipDynlRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynlRips_Type.__name__ = "Integer32"
_StaIproRipDynlRips_Object = MibTableColumn
staIproRipDynlRips = _StaIproRipDynlRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 13, 1, 12),
    _StaIproRipDynlRips_Type()
)
staIproRipDynlRips.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynlRips.setStatus("current")
_StaIproRipDynwTable_Object = MibTable
staIproRipDynwTable = _StaIproRipDynwTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14)
)
if mibBuilder.loadTexts:
    staIproRipDynwTable.setStatus("current")
_StaIproRipDynwEntry_Object = MibTableRow
staIproRipDynwEntry = _StaIproRipDynwEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1)
)
staIproRipDynwEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipDynwPeer"),
)
if mibBuilder.loadTexts:
    staIproRipDynwEntry.setStatus("current")


class _StaIproRipDynwPeer_Type(DisplayString):
    """Custom type staIproRipDynwPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipDynwPeer_Type.__name__ = "DisplayString"
_StaIproRipDynwPeer_Object = MibTableColumn
staIproRipDynwPeer = _StaIproRipDynwPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 1),
    _StaIproRipDynwPeer_Type()
)
staIproRipDynwPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwPeer.setStatus("current")


class _StaIproRipDynwRipt_Type(Integer32):
    """Custom type staIproRipDynwRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIproRipDynwRipt_Type.__name__ = "Integer32"
_StaIproRipDynwRipt_Object = MibTableColumn
staIproRipDynwRipt = _StaIproRipDynwRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 2),
    _StaIproRipDynwRipt_Type()
)
staIproRipDynwRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwRipt.setStatus("current")


class _StaIproRipDynwRipa_Type(Integer32):
    """Custom type staIproRipDynwRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynwRipa_Type.__name__ = "Integer32"
_StaIproRipDynwRipa_Object = MibTableColumn
staIproRipDynwRipa = _StaIproRipDynwRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 3),
    _StaIproRipDynwRipa_Type()
)
staIproRipDynwRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwRipa.setStatus("current")


class _StaIproRipDynwMasq_Type(Integer32):
    """Custom type staIproRipDynwMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_StaIproRipDynwMasq_Type.__name__ = "Integer32"
_StaIproRipDynwMasq_Object = MibTableColumn
staIproRipDynwMasq = _StaIproRipDynwMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 4),
    _StaIproRipDynwMasq_Type()
)
staIproRipDynwMasq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwMasq.setStatus("current")


class _StaIproRipDynwDftr_Type(Integer32):
    """Custom type staIproRipDynwDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipDynwDftr_Type.__name__ = "Integer32"
_StaIproRipDynwDftr_Object = MibTableColumn
staIproRipDynwDftr = _StaIproRipDynwDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 5),
    _StaIproRipDynwDftr_Type()
)
staIproRipDynwDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwDftr.setStatus("current")


class _StaIproRipDynwRtgt_Type(DisplayString):
    """Custom type staIproRipDynwRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIproRipDynwRtgt_Type.__name__ = "DisplayString"
_StaIproRipDynwRtgt_Object = MibTableColumn
staIproRipDynwRtgt = _StaIproRipDynwRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 6),
    _StaIproRipDynwRtgt_Type()
)
staIproRipDynwRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwRtgt.setStatus("current")


class _StaIproRipDynwPois_Type(Integer32):
    """Custom type staIproRipDynwPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynwPois_Type.__name__ = "Integer32"
_StaIproRipDynwPois_Object = MibTableColumn
staIproRipDynwPois = _StaIproRipDynwPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 7),
    _StaIproRipDynwPois_Type()
)
staIproRipDynwPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwPois.setStatus("current")


class _StaIproRipDynwRfc2_Type(Integer32):
    """Custom type staIproRipDynwRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynwRfc2_Type.__name__ = "Integer32"
_StaIproRipDynwRfc2_Object = MibTableColumn
staIproRipDynwRfc2 = _StaIproRipDynwRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 8),
    _StaIproRipDynwRfc2_Type()
)
staIproRipDynwRfc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwRfc2.setStatus("current")
_StaIproRipDynwGate_Type = IpAddress
_StaIproRipDynwGate_Object = MibTableColumn
staIproRipDynwGate = _StaIproRipDynwGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 9),
    _StaIproRipDynwGate_Type()
)
staIproRipDynwGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwGate.setStatus("current")


class _StaIproRipDynwRxfi_Type(DisplayString):
    """Custom type staIproRipDynwRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipDynwRxfi_Type.__name__ = "DisplayString"
_StaIproRipDynwRxfi_Object = MibTableColumn
staIproRipDynwRxfi = _StaIproRipDynwRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 10),
    _StaIproRipDynwRxfi_Type()
)
staIproRipDynwRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwRxfi.setStatus("current")


class _StaIproRipDynwTxfi_Type(DisplayString):
    """Custom type staIproRipDynwTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipDynwTxfi_Type.__name__ = "DisplayString"
_StaIproRipDynwTxfi_Object = MibTableColumn
staIproRipDynwTxfi = _StaIproRipDynwTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 11),
    _StaIproRipDynwTxfi_Type()
)
staIproRipDynwTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwTxfi.setStatus("current")


class _StaIproRipDynwRips_Type(Integer32):
    """Custom type staIproRipDynwRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipDynwRips_Type.__name__ = "Integer32"
_StaIproRipDynwRips_Object = MibTableColumn
staIproRipDynwRips = _StaIproRipDynwRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 14, 1, 12),
    _StaIproRipDynwRips_Type()
)
staIproRipDynwRips.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipDynwRips.setStatus("current")
_StaIproRipFiltTable_Object = MibTable
staIproRipFiltTable = _StaIproRipFiltTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15)
)
if mibBuilder.loadTexts:
    staIproRipFiltTable.setStatus("current")
_StaIproRipFiltEntry_Object = MibTableRow
staIproRipFiltEntry = _StaIproRipFiltEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1)
)
staIproRipFiltEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipFiltIdx"),
)
if mibBuilder.loadTexts:
    staIproRipFiltEntry.setStatus("current")


class _StaIproRipFiltIdx_Type(Integer32):
    """Custom type staIproRipFiltIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipFiltIdx_Type.__name__ = "Integer32"
_StaIproRipFiltIdx_Object = MibTableColumn
staIproRipFiltIdx = _StaIproRipFiltIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 1),
    _StaIproRipFiltIdx_Type()
)
staIproRipFiltIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipFiltIdx.setStatus("current")


class _StaIproRipFiltTyp_Type(Integer32):
    """Custom type staIproRipFiltTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("negative", 2),
          ("positive", 1),
          ("unknown", 0))
    )


_StaIproRipFiltTyp_Type.__name__ = "Integer32"
_StaIproRipFiltTyp_Object = MibTableColumn
staIproRipFiltTyp = _StaIproRipFiltTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 2),
    _StaIproRipFiltTyp_Type()
)
staIproRipFiltTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipFiltTyp.setStatus("current")


class _StaIproRipFiltNam_Type(DisplayString):
    """Custom type staIproRipFiltNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproRipFiltNam_Type.__name__ = "DisplayString"
_StaIproRipFiltNam_Object = MibTableColumn
staIproRipFiltNam = _StaIproRipFiltNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 3),
    _StaIproRipFiltNam_Type()
)
staIproRipFiltNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipFiltNam.setStatus("current")
_StaIproRipFiltIpa_Type = IpAddress
_StaIproRipFiltIpa_Object = MibTableColumn
staIproRipFiltIpa = _StaIproRipFiltIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 4),
    _StaIproRipFiltIpa_Type()
)
staIproRipFiltIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipFiltIpa.setStatus("current")
_StaIproRipFiltIpn_Type = IpAddress
_StaIproRipFiltIpn_Object = MibTableColumn
staIproRipFiltIpn = _StaIproRipFiltIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 15, 1, 5),
    _StaIproRipFiltIpn_Type()
)
staIproRipFiltIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipFiltIpn.setStatus("current")
_StaIproRipWildTable_Object = MibTable
staIproRipWildTable = _StaIproRipWildTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16)
)
if mibBuilder.loadTexts:
    staIproRipWildTable.setStatus("current")
_StaIproRipWildEntry_Object = MibTableRow
staIproRipWildEntry = _StaIproRipWildEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1)
)
staIproRipWildEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproRipWildPeer"),
)
if mibBuilder.loadTexts:
    staIproRipWildEntry.setStatus("current")


class _StaIproRipWildPeer_Type(DisplayString):
    """Custom type staIproRipWildPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipWildPeer_Type.__name__ = "DisplayString"
_StaIproRipWildPeer_Object = MibTableColumn
staIproRipWildPeer = _StaIproRipWildPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 1),
    _StaIproRipWildPeer_Type()
)
staIproRipWildPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildPeer.setStatus("current")


class _StaIproRipWildRipt_Type(Integer32):
    """Custom type staIproRipWildRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIproRipWildRipt_Type.__name__ = "Integer32"
_StaIproRipWildRipt_Object = MibTableColumn
staIproRipWildRipt = _StaIproRipWildRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 2),
    _StaIproRipWildRipt_Type()
)
staIproRipWildRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildRipt.setStatus("current")


class _StaIproRipWildRipa_Type(Integer32):
    """Custom type staIproRipWildRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWildRipa_Type.__name__ = "Integer32"
_StaIproRipWildRipa_Object = MibTableColumn
staIproRipWildRipa = _StaIproRipWildRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 3),
    _StaIproRipWildRipa_Type()
)
staIproRipWildRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildRipa.setStatus("current")


class _StaIproRipWildMasq_Type(Integer32):
    """Custom type staIproRipWildMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_StaIproRipWildMasq_Type.__name__ = "Integer32"
_StaIproRipWildMasq_Object = MibTableColumn
staIproRipWildMasq = _StaIproRipWildMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 4),
    _StaIproRipWildMasq_Type()
)
staIproRipWildMasq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildMasq.setStatus("current")


class _StaIproRipWildDftr_Type(Integer32):
    """Custom type staIproRipWildDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproRipWildDftr_Type.__name__ = "Integer32"
_StaIproRipWildDftr_Object = MibTableColumn
staIproRipWildDftr = _StaIproRipWildDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 5),
    _StaIproRipWildDftr_Type()
)
staIproRipWildDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildDftr.setStatus("current")


class _StaIproRipWildRtgt_Type(DisplayString):
    """Custom type staIproRipWildRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIproRipWildRtgt_Type.__name__ = "DisplayString"
_StaIproRipWildRtgt_Object = MibTableColumn
staIproRipWildRtgt = _StaIproRipWildRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 6),
    _StaIproRipWildRtgt_Type()
)
staIproRipWildRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildRtgt.setStatus("current")


class _StaIproRipWildPois_Type(Integer32):
    """Custom type staIproRipWildPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWildPois_Type.__name__ = "Integer32"
_StaIproRipWildPois_Object = MibTableColumn
staIproRipWildPois = _StaIproRipWildPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 7),
    _StaIproRipWildPois_Type()
)
staIproRipWildPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildPois.setStatus("current")


class _StaIproRipWildRfc2_Type(Integer32):
    """Custom type staIproRipWildRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWildRfc2_Type.__name__ = "Integer32"
_StaIproRipWildRfc2_Object = MibTableColumn
staIproRipWildRfc2 = _StaIproRipWildRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 8),
    _StaIproRipWildRfc2_Type()
)
staIproRipWildRfc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildRfc2.setStatus("current")
_StaIproRipWildGate_Type = IpAddress
_StaIproRipWildGate_Object = MibTableColumn
staIproRipWildGate = _StaIproRipWildGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 9),
    _StaIproRipWildGate_Type()
)
staIproRipWildGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildGate.setStatus("current")


class _StaIproRipWildRxfi_Type(DisplayString):
    """Custom type staIproRipWildRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipWildRxfi_Type.__name__ = "DisplayString"
_StaIproRipWildRxfi_Object = MibTableColumn
staIproRipWildRxfi = _StaIproRipWildRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 10),
    _StaIproRipWildRxfi_Type()
)
staIproRipWildRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildRxfi.setStatus("current")


class _StaIproRipWildTxfi_Type(DisplayString):
    """Custom type staIproRipWildTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproRipWildTxfi_Type.__name__ = "DisplayString"
_StaIproRipWildTxfi_Object = MibTableColumn
staIproRipWildTxfi = _StaIproRipWildTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 11),
    _StaIproRipWildTxfi_Type()
)
staIproRipWildTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildTxfi.setStatus("current")


class _StaIproRipWildRips_Type(Integer32):
    """Custom type staIproRipWildRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproRipWildRips_Type.__name__ = "Integer32"
_StaIproRipWildRips_Object = MibTableColumn
staIproRipWildRips = _StaIproRipWildRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 19, 16, 1, 12),
    _StaIproRipWildRips_Type()
)
staIproRipWildRips.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRipWildRips.setStatus("current")
_StaIproDeletev_Type = DisplayString
_StaIproDeletev_Object = MibScalar
staIproDeletev = _StaIproDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 20),
    _StaIproDeletev_Type()
)
staIproDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIproDeletev.setStatus("current")
_StaIproServiceTable_Object = MibTable
staIproServiceTable = _StaIproServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21)
)
if mibBuilder.loadTexts:
    staIproServiceTable.setStatus("current")
_StaIproServiceEntry_Object = MibTableRow
staIproServiceEntry = _StaIproServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1)
)
staIproServiceEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproServiceService"),
)
if mibBuilder.loadTexts:
    staIproServiceEntry.setStatus("current")


class _StaIproServiceService_Type(Integer32):
    """Custom type staIproServiceService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 8),
          ("dns", 5),
          ("ftp", 2),
          ("http", 3),
          ("icmp", 1),
          ("imap2", 11),
          ("irc", 13),
          ("netbios", 10),
          ("news", 12),
          ("other", 15),
          ("pop3", 9),
          ("smtp", 4),
          ("snmp", 14),
          ("telnet", 6),
          ("tftp", 7),
          ("total", 16))
    )


_StaIproServiceService_Type.__name__ = "Integer32"
_StaIproServiceService_Object = MibTableColumn
staIproServiceService = _StaIproServiceService_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 1),
    _StaIproServiceService_Type()
)
staIproServiceService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServiceService.setStatus("current")
_StaIproServicePacketrx_Type = Counter32
_StaIproServicePacketrx_Object = MibTableColumn
staIproServicePacketrx = _StaIproServicePacketrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 2),
    _StaIproServicePacketrx_Type()
)
staIproServicePacketrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServicePacketrx.setStatus("current")
_StaIproServicePackettx_Type = Counter32
_StaIproServicePackettx_Object = MibTableColumn
staIproServicePackettx = _StaIproServicePackettx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 3),
    _StaIproServicePackettx_Type()
)
staIproServicePackettx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServicePackettx.setStatus("current")


class _StaIproServicePacketre_Type(DisplayString):
    """Custom type staIproServicePacketre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproServicePacketre_Type.__name__ = "DisplayString"
_StaIproServicePacketre_Object = MibTableColumn
staIproServicePacketre = _StaIproServicePacketre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 4),
    _StaIproServicePacketre_Type()
)
staIproServicePacketre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServicePacketre.setStatus("current")
_StaIproServiceKbytesrx_Type = Counter32
_StaIproServiceKbytesrx_Object = MibTableColumn
staIproServiceKbytesrx = _StaIproServiceKbytesrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 5),
    _StaIproServiceKbytesrx_Type()
)
staIproServiceKbytesrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServiceKbytesrx.setStatus("current")
_StaIproServiceKbytestx_Type = Counter32
_StaIproServiceKbytestx_Object = MibTableColumn
staIproServiceKbytestx = _StaIproServiceKbytestx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 6),
    _StaIproServiceKbytestx_Type()
)
staIproServiceKbytestx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServiceKbytestx.setStatus("current")


class _StaIproServiceKbytesre_Type(DisplayString):
    """Custom type staIproServiceKbytesre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproServiceKbytesre_Type.__name__ = "DisplayString"
_StaIproServiceKbytesre_Object = MibTableColumn
staIproServiceKbytesre = _StaIproServiceKbytesre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 21, 1, 7),
    _StaIproServiceKbytesre_Type()
)
staIproServiceKbytesre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproServiceKbytesre.setStatus("current")
_StaIproFilterlTable_Object = MibTable
staIproFilterlTable = _StaIproFilterlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22)
)
if mibBuilder.loadTexts:
    staIproFilterlTable.setStatus("current")
_StaIproFilterlEntry_Object = MibTableRow
staIproFilterlEntry = _StaIproFilterlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1)
)
staIproFilterlEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproFilterlIdx"),
)
if mibBuilder.loadTexts:
    staIproFilterlEntry.setStatus("current")


class _StaIproFilterlIdx_Type(Integer32):
    """Custom type staIproFilterlIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlIdx_Type.__name__ = "Integer32"
_StaIproFilterlIdx_Object = MibTableColumn
staIproFilterlIdx = _StaIproFilterlIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 1),
    _StaIproFilterlIdx_Type()
)
staIproFilterlIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlIdx.setStatus("current")


class _StaIproFilterlProt_Type(Integer32):
    """Custom type staIproFilterlProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproFilterlProt_Type.__name__ = "Integer32"
_StaIproFilterlProt_Object = MibTableColumn
staIproFilterlProt = _StaIproFilterlProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 2),
    _StaIproFilterlProt_Type()
)
staIproFilterlProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlProt.setStatus("current")
_StaIproFilterlSrca_Type = IpAddress
_StaIproFilterlSrca_Object = MibTableColumn
staIproFilterlSrca = _StaIproFilterlSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 3),
    _StaIproFilterlSrca_Type()
)
staIproFilterlSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlSrca.setStatus("current")
_StaIproFilterlSrcn_Type = IpAddress
_StaIproFilterlSrcn_Object = MibTableColumn
staIproFilterlSrcn = _StaIproFilterlSrcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 4),
    _StaIproFilterlSrcn_Type()
)
staIproFilterlSrcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlSrcn.setStatus("current")


class _StaIproFilterlSst_Type(Integer32):
    """Custom type staIproFilterlSst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlSst_Type.__name__ = "Integer32"
_StaIproFilterlSst_Object = MibTableColumn
staIproFilterlSst = _StaIproFilterlSst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 5),
    _StaIproFilterlSst_Type()
)
staIproFilterlSst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlSst.setStatus("current")


class _StaIproFilterlSend_Type(Integer32):
    """Custom type staIproFilterlSend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlSend_Type.__name__ = "Integer32"
_StaIproFilterlSend_Object = MibTableColumn
staIproFilterlSend = _StaIproFilterlSend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 6),
    _StaIproFilterlSend_Type()
)
staIproFilterlSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlSend.setStatus("current")
_StaIproFilterlDsta_Type = IpAddress
_StaIproFilterlDsta_Object = MibTableColumn
staIproFilterlDsta = _StaIproFilterlDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 7),
    _StaIproFilterlDsta_Type()
)
staIproFilterlDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlDsta.setStatus("current")
_StaIproFilterlDstn_Type = IpAddress
_StaIproFilterlDstn_Object = MibTableColumn
staIproFilterlDstn = _StaIproFilterlDstn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 8),
    _StaIproFilterlDstn_Type()
)
staIproFilterlDstn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlDstn.setStatus("current")


class _StaIproFilterlDst_Type(Integer32):
    """Custom type staIproFilterlDst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlDst_Type.__name__ = "Integer32"
_StaIproFilterlDst_Object = MibTableColumn
staIproFilterlDst = _StaIproFilterlDst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 9),
    _StaIproFilterlDst_Type()
)
staIproFilterlDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlDst.setStatus("current")


class _StaIproFilterlDend_Type(Integer32):
    """Custom type staIproFilterlDend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlDend_Type.__name__ = "Integer32"
_StaIproFilterlDend_Object = MibTableColumn
staIproFilterlDend = _StaIproFilterlDend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 10),
    _StaIproFilterlDend_Type()
)
staIproFilterlDend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlDend.setStatus("current")


class _StaIproFilterlActi_Type(DisplayString):
    """Custom type staIproFilterlActi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproFilterlActi_Type.__name__ = "DisplayString"
_StaIproFilterlActi_Object = MibTableColumn
staIproFilterlActi = _StaIproFilterlActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 11),
    _StaIproFilterlActi_Type()
)
staIproFilterlActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlActi.setStatus("current")


class _StaIproFilterlSrcm_Type(DisplayString):
    """Custom type staIproFilterlSrcm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaIproFilterlSrcm_Type.__name__ = "DisplayString"
_StaIproFilterlSrcm_Object = MibTableColumn
staIproFilterlSrcm = _StaIproFilterlSrcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 13),
    _StaIproFilterlSrcm_Type()
)
staIproFilterlSrcm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlSrcm.setStatus("current")


class _StaIproFilterlDstm_Type(DisplayString):
    """Custom type staIproFilterlDstm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaIproFilterlDstm_Type.__name__ = "DisplayString"
_StaIproFilterlDstm_Object = MibTableColumn
staIproFilterlDstm = _StaIproFilterlDstm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 14),
    _StaIproFilterlDstm_Type()
)
staIproFilterlDstm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlDstm.setStatus("current")


class _StaIproFilterlLink_Type(Integer32):
    """Custom type staIproFilterlLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproFilterlLink_Type.__name__ = "Integer32"
_StaIproFilterlLink_Object = MibTableColumn
staIproFilterlLink = _StaIproFilterlLink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 15),
    _StaIproFilterlLink_Type()
)
staIproFilterlLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlLink.setStatus("current")


class _StaIproFilterlPrio_Type(Integer32):
    """Custom type staIproFilterlPrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlPrio_Type.__name__ = "Integer32"
_StaIproFilterlPrio_Object = MibTableColumn
staIproFilterlPrio = _StaIproFilterlPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 16),
    _StaIproFilterlPrio_Type()
)
staIproFilterlPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlPrio.setStatus("current")


class _StaIproFilterlRtgt_Type(Integer32):
    """Custom type staIproFilterlRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproFilterlRtgt_Type.__name__ = "Integer32"
_StaIproFilterlRtgt_Object = MibTableColumn
staIproFilterlRtgt = _StaIproFilterlRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 22, 1, 17),
    _StaIproFilterlRtgt_Type()
)
staIproFilterlRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilterlRtgt.setStatus("current")
_StaIproConnectTable_Object = MibTable
staIproConnectTable = _StaIproConnectTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23)
)
if mibBuilder.loadTexts:
    staIproConnectTable.setStatus("current")
_StaIproConnectEntry_Object = MibTableRow
staIproConnectEntry = _StaIproConnectEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1)
)
staIproConnectEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproConnectSrca"),
    (0, "LANCOM-1711-MIB", "staIproConnectDsta"),
    (0, "LANCOM-1711-MIB", "staIproConnectProt"),
    (0, "LANCOM-1711-MIB", "staIproConnectSrcp"),
    (0, "LANCOM-1711-MIB", "staIproConnectDstp"),
)
if mibBuilder.loadTexts:
    staIproConnectEntry.setStatus("current")
_StaIproConnectSrca_Type = IpAddress
_StaIproConnectSrca_Object = MibTableColumn
staIproConnectSrca = _StaIproConnectSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 1),
    _StaIproConnectSrca_Type()
)
staIproConnectSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectSrca.setStatus("current")
_StaIproConnectDsta_Type = IpAddress
_StaIproConnectDsta_Object = MibTableColumn
staIproConnectDsta = _StaIproConnectDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 2),
    _StaIproConnectDsta_Type()
)
staIproConnectDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectDsta.setStatus("current")


class _StaIproConnectProt_Type(Integer32):
    """Custom type staIproConnectProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproConnectProt_Type.__name__ = "Integer32"
_StaIproConnectProt_Object = MibTableColumn
staIproConnectProt = _StaIproConnectProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 3),
    _StaIproConnectProt_Type()
)
staIproConnectProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectProt.setStatus("current")


class _StaIproConnectSrcp_Type(Integer32):
    """Custom type staIproConnectSrcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproConnectSrcp_Type.__name__ = "Integer32"
_StaIproConnectSrcp_Object = MibTableColumn
staIproConnectSrcp = _StaIproConnectSrcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 4),
    _StaIproConnectSrcp_Type()
)
staIproConnectSrcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectSrcp.setStatus("current")


class _StaIproConnectDstp_Type(Integer32):
    """Custom type staIproConnectDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproConnectDstp_Type.__name__ = "Integer32"
_StaIproConnectDstp_Object = MibTableColumn
staIproConnectDstp = _StaIproConnectDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 5),
    _StaIproConnectDstp_Type()
)
staIproConnectDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectDstp.setStatus("current")


class _StaIproConnectTime_Type(Integer32):
    """Custom type staIproConnectTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproConnectTime_Type.__name__ = "Integer32"
_StaIproConnectTime_Object = MibTableColumn
staIproConnectTime = _StaIproConnectTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 6),
    _StaIproConnectTime_Type()
)
staIproConnectTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectTime.setStatus("current")


class _StaIproConnectFlag_Type(Integer32):
    """Custom type staIproConnectFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproConnectFlag_Type.__name__ = "Integer32"
_StaIproConnectFlag_Object = MibTableColumn
staIproConnectFlag = _StaIproConnectFlag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 7),
    _StaIproConnectFlag_Type()
)
staIproConnectFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectFlag.setStatus("current")


class _StaIproConnectFilt_Type(DisplayString):
    """Custom type staIproConnectFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproConnectFilt_Type.__name__ = "DisplayString"
_StaIproConnectFilt_Object = MibTableColumn
staIproConnectFilt = _StaIproConnectFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 8),
    _StaIproConnectFilt_Type()
)
staIproConnectFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectFilt.setStatus("current")


class _StaIproConnectSrcr_Type(DisplayString):
    """Custom type staIproConnectSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproConnectSrcr_Type.__name__ = "DisplayString"
_StaIproConnectSrcr_Object = MibTableColumn
staIproConnectSrcr = _StaIproConnectSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 9),
    _StaIproConnectSrcr_Type()
)
staIproConnectSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectSrcr.setStatus("current")


class _StaIproConnectDest_Type(DisplayString):
    """Custom type staIproConnectDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproConnectDest_Type.__name__ = "DisplayString"
_StaIproConnectDest_Object = MibTableColumn
staIproConnectDest = _StaIproConnectDest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 10),
    _StaIproConnectDest_Type()
)
staIproConnectDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectDest.setStatus("current")


class _StaIproConnectRtgt_Type(Integer32):
    """Custom type staIproConnectRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproConnectRtgt_Type.__name__ = "Integer32"
_StaIproConnectRtgt_Object = MibTableColumn
staIproConnectRtgt = _StaIproConnectRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 23, 1, 11),
    _StaIproConnectRtgt_Type()
)
staIproConnectRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproConnectRtgt.setStatus("current")
_StaIproHostbloTable_Object = MibTable
staIproHostbloTable = _StaIproHostbloTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24)
)
if mibBuilder.loadTexts:
    staIproHostbloTable.setStatus("current")
_StaIproHostbloEntry_Object = MibTableRow
staIproHostbloEntry = _StaIproHostbloEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1)
)
staIproHostbloEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproHostbloSrc"),
)
if mibBuilder.loadTexts:
    staIproHostbloEntry.setStatus("current")
_StaIproHostbloSrc_Type = IpAddress
_StaIproHostbloSrc_Object = MibTableColumn
staIproHostbloSrc = _StaIproHostbloSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 1),
    _StaIproHostbloSrc_Type()
)
staIproHostbloSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproHostbloSrc.setStatus("current")


class _StaIproHostbloTim_Type(Integer32):
    """Custom type staIproHostbloTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproHostbloTim_Type.__name__ = "Integer32"
_StaIproHostbloTim_Object = MibTableColumn
staIproHostbloTim = _StaIproHostbloTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 2),
    _StaIproHostbloTim_Type()
)
staIproHostbloTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproHostbloTim.setStatus("current")


class _StaIproHostbloFil_Type(DisplayString):
    """Custom type staIproHostbloFil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproHostbloFil_Type.__name__ = "DisplayString"
_StaIproHostbloFil_Object = MibTableColumn
staIproHostbloFil = _StaIproHostbloFil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 24, 1, 3),
    _StaIproHostbloFil_Type()
)
staIproHostbloFil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproHostbloFil.setStatus("current")
_StaIproPortbloTable_Object = MibTable
staIproPortbloTable = _StaIproPortbloTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25)
)
if mibBuilder.loadTexts:
    staIproPortbloTable.setStatus("current")
_StaIproPortbloEntry_Object = MibTableRow
staIproPortbloEntry = _StaIproPortbloEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1)
)
staIproPortbloEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproPortbloDsta"),
)
if mibBuilder.loadTexts:
    staIproPortbloEntry.setStatus("current")
_StaIproPortbloDsta_Type = IpAddress
_StaIproPortbloDsta_Object = MibTableColumn
staIproPortbloDsta = _StaIproPortbloDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 1),
    _StaIproPortbloDsta_Type()
)
staIproPortbloDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproPortbloDsta.setStatus("current")


class _StaIproPortbloProt_Type(Integer32):
    """Custom type staIproPortbloProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproPortbloProt_Type.__name__ = "Integer32"
_StaIproPortbloProt_Object = MibTableColumn
staIproPortbloProt = _StaIproPortbloProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 2),
    _StaIproPortbloProt_Type()
)
staIproPortbloProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproPortbloProt.setStatus("current")


class _StaIproPortbloDstp_Type(Integer32):
    """Custom type staIproPortbloDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproPortbloDstp_Type.__name__ = "Integer32"
_StaIproPortbloDstp_Object = MibTableColumn
staIproPortbloDstp = _StaIproPortbloDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 3),
    _StaIproPortbloDstp_Type()
)
staIproPortbloDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproPortbloDstp.setStatus("current")


class _StaIproPortbloTime_Type(Integer32):
    """Custom type staIproPortbloTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproPortbloTime_Type.__name__ = "Integer32"
_StaIproPortbloTime_Object = MibTableColumn
staIproPortbloTime = _StaIproPortbloTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 4),
    _StaIproPortbloTime_Type()
)
staIproPortbloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproPortbloTime.setStatus("current")


class _StaIproPortbloFilt_Type(DisplayString):
    """Custom type staIproPortbloFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproPortbloFilt_Type.__name__ = "DisplayString"
_StaIproPortbloFilt_Object = MibTableColumn
staIproPortbloFilt = _StaIproPortbloFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 25, 1, 5),
    _StaIproPortbloFilt_Type()
)
staIproPortbloFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproPortbloFilt.setStatus("current")
_StaIproLogtablTable_Object = MibTable
staIproLogtablTable = _StaIproLogtablTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26)
)
if mibBuilder.loadTexts:
    staIproLogtablTable.setStatus("current")
_StaIproLogtablEntry_Object = MibTableRow
staIproLogtablEntry = _StaIproLogtablEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1)
)
staIproLogtablEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproLogtablIdx"),
)
if mibBuilder.loadTexts:
    staIproLogtablEntry.setStatus("current")


class _StaIproLogtablIdx_Type(Integer32):
    """Custom type staIproLogtablIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproLogtablIdx_Type.__name__ = "Integer32"
_StaIproLogtablIdx_Object = MibTableColumn
staIproLogtablIdx = _StaIproLogtablIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 1),
    _StaIproLogtablIdx_Type()
)
staIproLogtablIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablIdx.setStatus("current")


class _StaIproLogtablSyst_Type(DisplayString):
    """Custom type staIproLogtablSyst based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaIproLogtablSyst_Type.__name__ = "DisplayString"
_StaIproLogtablSyst_Object = MibTableColumn
staIproLogtablSyst = _StaIproLogtablSyst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 2),
    _StaIproLogtablSyst_Type()
)
staIproLogtablSyst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablSyst.setStatus("current")
_StaIproLogtablSrca_Type = IpAddress
_StaIproLogtablSrca_Object = MibTableColumn
staIproLogtablSrca = _StaIproLogtablSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 3),
    _StaIproLogtablSrca_Type()
)
staIproLogtablSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablSrca.setStatus("current")
_StaIproLogtablDsta_Type = IpAddress
_StaIproLogtablDsta_Object = MibTableColumn
staIproLogtablDsta = _StaIproLogtablDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 4),
    _StaIproLogtablDsta_Type()
)
staIproLogtablDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablDsta.setStatus("current")


class _StaIproLogtablProt_Type(Integer32):
    """Custom type staIproLogtablProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproLogtablProt_Type.__name__ = "Integer32"
_StaIproLogtablProt_Object = MibTableColumn
staIproLogtablProt = _StaIproLogtablProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 5),
    _StaIproLogtablProt_Type()
)
staIproLogtablProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablProt.setStatus("current")


class _StaIproLogtablSrcp_Type(Integer32):
    """Custom type staIproLogtablSrcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproLogtablSrcp_Type.__name__ = "Integer32"
_StaIproLogtablSrcp_Object = MibTableColumn
staIproLogtablSrcp = _StaIproLogtablSrcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 6),
    _StaIproLogtablSrcp_Type()
)
staIproLogtablSrcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablSrcp.setStatus("current")


class _StaIproLogtablDstp_Type(Integer32):
    """Custom type staIproLogtablDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproLogtablDstp_Type.__name__ = "Integer32"
_StaIproLogtablDstp_Object = MibTableColumn
staIproLogtablDstp = _StaIproLogtablDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 7),
    _StaIproLogtablDstp_Type()
)
staIproLogtablDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablDstp.setStatus("current")


class _StaIproLogtablFilt_Type(DisplayString):
    """Custom type staIproLogtablFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaIproLogtablFilt_Type.__name__ = "DisplayString"
_StaIproLogtablFilt_Object = MibTableColumn
staIproLogtablFilt = _StaIproLogtablFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 8),
    _StaIproLogtablFilt_Type()
)
staIproLogtablFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablFilt.setStatus("current")


class _StaIproLogtablLimi_Type(Integer32):
    """Custom type staIproLogtablLimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproLogtablLimi_Type.__name__ = "Integer32"
_StaIproLogtablLimi_Object = MibTableColumn
staIproLogtablLimi = _StaIproLogtablLimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 9),
    _StaIproLogtablLimi_Type()
)
staIproLogtablLimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablLimi.setStatus("current")


class _StaIproLogtablThre_Type(Integer32):
    """Custom type staIproLogtablThre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproLogtablThre_Type.__name__ = "Integer32"
_StaIproLogtablThre_Object = MibTableColumn
staIproLogtablThre = _StaIproLogtablThre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 10),
    _StaIproLogtablThre_Type()
)
staIproLogtablThre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablThre.setStatus("current")


class _StaIproLogtablActi_Type(Integer32):
    """Custom type staIproLogtablActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproLogtablActi_Type.__name__ = "Integer32"
_StaIproLogtablActi_Object = MibTableColumn
staIproLogtablActi = _StaIproLogtablActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 26, 1, 11),
    _StaIproLogtablActi_Type()
)
staIproLogtablActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLogtablActi.setStatus("current")
_StaIproHoconnlTable_Object = MibTable
staIproHoconnlTable = _StaIproHoconnlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27)
)
if mibBuilder.loadTexts:
    staIproHoconnlTable.setStatus("current")
_StaIproHoconnlEntry_Object = MibTableRow
staIproHoconnlEntry = _StaIproHoconnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1)
)
staIproHoconnlEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproHoconnlDst"),
)
if mibBuilder.loadTexts:
    staIproHoconnlEntry.setStatus("current")
_StaIproHoconnlDst_Type = IpAddress
_StaIproHoconnlDst_Object = MibTableColumn
staIproHoconnlDst = _StaIproHoconnlDst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 1),
    _StaIproHoconnlDst_Type()
)
staIproHoconnlDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproHoconnlDst.setStatus("current")


class _StaIproHoconnlNum_Type(Integer32):
    """Custom type staIproHoconnlNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproHoconnlNum_Type.__name__ = "Integer32"
_StaIproHoconnlNum_Object = MibTableColumn
staIproHoconnlNum = _StaIproHoconnlNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 2),
    _StaIproHoconnlNum_Type()
)
staIproHoconnlNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproHoconnlNum.setStatus("current")


class _StaIproHoconnlTim_Type(Integer32):
    """Custom type staIproHoconnlTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproHoconnlTim_Type.__name__ = "Integer32"
_StaIproHoconnlTim_Object = MibTableColumn
staIproHoconnlTim = _StaIproHoconnlTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 27, 1, 3),
    _StaIproHoconnlTim_Type()
)
staIproHoconnlTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproHoconnlTim.setStatus("current")
_StaIproQosTable_Object = MibTable
staIproQosTable = _StaIproQosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28)
)
if mibBuilder.loadTexts:
    staIproQosTable.setStatus("current")
_StaIproQosEntry_Object = MibTableRow
staIproQosEntry = _StaIproQosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1)
)
staIproQosEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproQosIfc"),
)
if mibBuilder.loadTexts:
    staIproQosEntry.setStatus("current")


class _StaIproQosIfc_Type(Integer32):
    """Custom type staIproQosIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaIproQosIfc_Type.__name__ = "Integer32"
_StaIproQosIfc_Object = MibTableColumn
staIproQosIfc = _StaIproQosIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 1),
    _StaIproQosIfc_Type()
)
staIproQosIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosIfc.setStatus("current")


class _StaIproQosPeer_Type(DisplayString):
    """Custom type staIproQosPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproQosPeer_Type.__name__ = "DisplayString"
_StaIproQosPeer_Object = MibTableColumn
staIproQosPeer = _StaIproQosPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 2),
    _StaIproQosPeer_Type()
)
staIproQosPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosPeer.setStatus("current")


class _StaIproQosDowns_Type(Integer32):
    """Custom type staIproQosDowns based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosDowns_Type.__name__ = "Integer32"
_StaIproQosDowns_Object = MibTableColumn
staIproQosDowns = _StaIproQosDowns_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 3),
    _StaIproQosDowns_Type()
)
staIproQosDowns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosDowns.setStatus("current")


class _StaIproQosRxres_Type(Integer32):
    """Custom type staIproQosRxres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosRxres_Type.__name__ = "Integer32"
_StaIproQosRxres_Object = MibTableColumn
staIproQosRxres = _StaIproQosRxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 4),
    _StaIproQosRxres_Type()
)
staIproQosRxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosRxres.setStatus("current")


class _StaIproQosRxblo_Type(Integer32):
    """Custom type staIproQosRxblo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproQosRxblo_Type.__name__ = "Integer32"
_StaIproQosRxblo_Object = MibTableColumn
staIproQosRxblo = _StaIproQosRxblo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 5),
    _StaIproQosRxblo_Type()
)
staIproQosRxblo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosRxblo.setStatus("current")


class _StaIproQosFragm_Type(Integer32):
    """Custom type staIproQosFragm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproQosFragm_Type.__name__ = "Integer32"
_StaIproQosFragm_Object = MibTableColumn
staIproQosFragm = _StaIproQosFragm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 6),
    _StaIproQosFragm_Type()
)
staIproQosFragm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosFragm.setStatus("current")


class _StaIproQosPmtus_Type(Integer32):
    """Custom type staIproQosPmtus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproQosPmtus_Type.__name__ = "Integer32"
_StaIproQosPmtus_Object = MibTableColumn
staIproQosPmtus = _StaIproQosPmtus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 7),
    _StaIproQosPmtus_Type()
)
staIproQosPmtus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosPmtus.setStatus("current")


class _StaIproQosUpstr_Type(Integer32):
    """Custom type staIproQosUpstr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosUpstr_Type.__name__ = "Integer32"
_StaIproQosUpstr_Object = MibTableColumn
staIproQosUpstr = _StaIproQosUpstr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 8),
    _StaIproQosUpstr_Type()
)
staIproQosUpstr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosUpstr.setStatus("current")


class _StaIproQosTxres_Type(Integer32):
    """Custom type staIproQosTxres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosTxres_Type.__name__ = "Integer32"
_StaIproQosTxres_Object = MibTableColumn
staIproQosTxres = _StaIproQosTxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 9),
    _StaIproQosTxres_Type()
)
staIproQosTxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosTxres.setStatus("current")


class _StaIproQosTxblo_Type(Integer32):
    """Custom type staIproQosTxblo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproQosTxblo_Type.__name__ = "Integer32"
_StaIproQosTxblo_Object = MibTableColumn
staIproQosTxblo = _StaIproQosTxblo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 10),
    _StaIproQosTxblo_Type()
)
staIproQosTxblo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosTxblo.setStatus("current")


class _StaIproQosRxreq_Type(Integer32):
    """Custom type staIproQosRxreq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosRxreq_Type.__name__ = "Integer32"
_StaIproQosRxreq_Object = MibTableColumn
staIproQosRxreq = _StaIproQosRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 11),
    _StaIproQosRxreq_Type()
)
staIproQosRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosRxreq.setStatus("current")


class _StaIproQosTxreq_Type(Integer32):
    """Custom type staIproQosTxreq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosTxreq_Type.__name__ = "Integer32"
_StaIproQosTxreq_Object = MibTableColumn
staIproQosTxreq = _StaIproQosTxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 12),
    _StaIproQosTxreq_Type()
)
staIproQosTxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosTxreq.setStatus("current")


class _StaIproQosTxfav_Type(Integer32):
    """Custom type staIproQosTxfav based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproQosTxfav_Type.__name__ = "Integer32"
_StaIproQosTxfav_Object = MibTableColumn
staIproQosTxfav = _StaIproQosTxfav_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 28, 1, 13),
    _StaIproQosTxfav_Type()
)
staIproQosTxfav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproQosTxfav.setStatus("current")
_StaIproOpenporTable_Object = MibTable
staIproOpenporTable = _StaIproOpenporTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29)
)
if mibBuilder.loadTexts:
    staIproOpenporTable.setStatus("current")
_StaIproOpenporEntry_Object = MibTableRow
staIproOpenporEntry = _StaIproOpenporEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1)
)
staIproOpenporEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproOpenporSrca"),
    (0, "LANCOM-1711-MIB", "staIproOpenporDsta"),
    (0, "LANCOM-1711-MIB", "staIproOpenporProt"),
    (0, "LANCOM-1711-MIB", "staIproOpenporDstp"),
)
if mibBuilder.loadTexts:
    staIproOpenporEntry.setStatus("current")
_StaIproOpenporSrca_Type = IpAddress
_StaIproOpenporSrca_Object = MibTableColumn
staIproOpenporSrca = _StaIproOpenporSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 1),
    _StaIproOpenporSrca_Type()
)
staIproOpenporSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporSrca.setStatus("current")
_StaIproOpenporDsta_Type = IpAddress
_StaIproOpenporDsta_Object = MibTableColumn
staIproOpenporDsta = _StaIproOpenporDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 2),
    _StaIproOpenporDsta_Type()
)
staIproOpenporDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporDsta.setStatus("current")


class _StaIproOpenporProt_Type(Integer32):
    """Custom type staIproOpenporProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproOpenporProt_Type.__name__ = "Integer32"
_StaIproOpenporProt_Object = MibTableColumn
staIproOpenporProt = _StaIproOpenporProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 3),
    _StaIproOpenporProt_Type()
)
staIproOpenporProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporProt.setStatus("current")


class _StaIproOpenporDstp_Type(Integer32):
    """Custom type staIproOpenporDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproOpenporDstp_Type.__name__ = "Integer32"
_StaIproOpenporDstp_Object = MibTableColumn
staIproOpenporDstp = _StaIproOpenporDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 5),
    _StaIproOpenporDstp_Type()
)
staIproOpenporDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporDstp.setStatus("current")


class _StaIproOpenporTime_Type(Integer32):
    """Custom type staIproOpenporTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproOpenporTime_Type.__name__ = "Integer32"
_StaIproOpenporTime_Object = MibTableColumn
staIproOpenporTime = _StaIproOpenporTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 6),
    _StaIproOpenporTime_Type()
)
staIproOpenporTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporTime.setStatus("current")


class _StaIproOpenporFilt_Type(DisplayString):
    """Custom type staIproOpenporFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproOpenporFilt_Type.__name__ = "DisplayString"
_StaIproOpenporFilt_Object = MibTableColumn
staIproOpenporFilt = _StaIproOpenporFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 8),
    _StaIproOpenporFilt_Type()
)
staIproOpenporFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporFilt.setStatus("current")


class _StaIproOpenporSrcr_Type(DisplayString):
    """Custom type staIproOpenporSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproOpenporSrcr_Type.__name__ = "DisplayString"
_StaIproOpenporSrcr_Object = MibTableColumn
staIproOpenporSrcr = _StaIproOpenporSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 29, 1, 9),
    _StaIproOpenporSrcr_Type()
)
staIproOpenporSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproOpenporSrcr.setStatus("current")
_StaIproActiproTable_Object = MibTable
staIproActiproTable = _StaIproActiproTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30)
)
if mibBuilder.loadTexts:
    staIproActiproTable.setStatus("current")
_StaIproActiproEntry_Object = MibTableRow
staIproActiproEntry = _StaIproActiproEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1)
)
staIproActiproEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproActiproIpa"),
    (0, "LANCOM-1711-MIB", "staIproActiproIpn"),
    (0, "LANCOM-1711-MIB", "staIproActiproRtg"),
)
if mibBuilder.loadTexts:
    staIproActiproEntry.setStatus("current")
_StaIproActiproIpa_Type = IpAddress
_StaIproActiproIpa_Object = MibTableColumn
staIproActiproIpa = _StaIproActiproIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 1),
    _StaIproActiproIpa_Type()
)
staIproActiproIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproIpa.setStatus("current")
_StaIproActiproIpn_Type = IpAddress
_StaIproActiproIpn_Object = MibTableColumn
staIproActiproIpn = _StaIproActiproIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 2),
    _StaIproActiproIpn_Type()
)
staIproActiproIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproIpn.setStatus("current")


class _StaIproActiproRtg_Type(Integer32):
    """Custom type staIproActiproRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproActiproRtg_Type.__name__ = "Integer32"
_StaIproActiproRtg_Object = MibTableColumn
staIproActiproRtg = _StaIproActiproRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 3),
    _StaIproActiproRtg_Type()
)
staIproActiproRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproRtg.setStatus("current")
_StaIproActiproGat_Type = IpAddress
_StaIproActiproGat_Object = MibTableColumn
staIproActiproGat = _StaIproActiproGat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 4),
    _StaIproActiproGat_Type()
)
staIproActiproGat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproGat.setStatus("current")


class _StaIproActiproPee_Type(DisplayString):
    """Custom type staIproActiproPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproActiproPee_Type.__name__ = "DisplayString"
_StaIproActiproPee_Object = MibTableColumn
staIproActiproPee = _StaIproActiproPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 5),
    _StaIproActiproPee_Type()
)
staIproActiproPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproPee.setStatus("current")


class _StaIproActiproDis_Type(Integer32):
    """Custom type staIproActiproDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproActiproDis_Type.__name__ = "Integer32"
_StaIproActiproDis_Object = MibTableColumn
staIproActiproDis = _StaIproActiproDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 6),
    _StaIproActiproDis_Type()
)
staIproActiproDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproDis.setStatus("current")


class _StaIproActiproMas_Type(Integer32):
    """Custom type staIproActiproMas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("intranet", 2),
          ("no", 0),
          ("on", 1),
          ("unknown", 255))
    )


_StaIproActiproMas_Type.__name__ = "Integer32"
_StaIproActiproMas_Object = MibTableColumn
staIproActiproMas = _StaIproActiproMas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 7),
    _StaIproActiproMas_Type()
)
staIproActiproMas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproMas.setStatus("current")


class _StaIproActiproTyp_Type(Integer32):
    """Custom type staIproActiproTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("capwap", 4),
          ("rip", 2),
          ("static", 1),
          ("unknown", 0),
          ("vpn", 3))
    )


_StaIproActiproTyp_Type.__name__ = "Integer32"
_StaIproActiproTyp_Object = MibTableColumn
staIproActiproTyp = _StaIproActiproTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 30, 1, 8),
    _StaIproActiproTyp_Type()
)
staIproActiproTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproActiproTyp.setStatus("current")
_StaIproL4error_Type = Counter32
_StaIproL4error_Object = MibScalar
staIproL4error = _StaIproL4error_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 31),
    _StaIproL4error_Type()
)
staIproL4error.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproL4error.setStatus("current")
_StaIproLoadbal_ObjectIdentity = ObjectIdentity
staIproLoadbal = _StaIproLoadbal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32)
)


class _StaIproLoadbalOpe_Type(Integer32):
    """Custom type staIproLoadbalOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproLoadbalOpe_Type.__name__ = "Integer32"
_StaIproLoadbalOpe_Object = MibScalar
staIproLoadbalOpe = _StaIproLoadbalOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 1),
    _StaIproLoadbalOpe_Type()
)
staIproLoadbalOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalOpe.setStatus("current")
_StaIproLoadbalConTable_Object = MibTable
staIproLoadbalConTable = _StaIproLoadbalConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2)
)
if mibBuilder.loadTexts:
    staIproLoadbalConTable.setStatus("current")
_StaIproLoadbalConEntry_Object = MibTableRow
staIproLoadbalConEntry = _StaIproLoadbalConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1)
)
staIproLoadbalConEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproLoadbalConPee"),
    (0, "LANCOM-1711-MIB", "staIproLoadbalConBun"),
)
if mibBuilder.loadTexts:
    staIproLoadbalConEntry.setStatus("current")


class _StaIproLoadbalConPee_Type(DisplayString):
    """Custom type staIproLoadbalConPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproLoadbalConPee_Type.__name__ = "DisplayString"
_StaIproLoadbalConPee_Object = MibTableColumn
staIproLoadbalConPee = _StaIproLoadbalConPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 1),
    _StaIproLoadbalConPee_Type()
)
staIproLoadbalConPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalConPee.setStatus("current")


class _StaIproLoadbalConBun_Type(DisplayString):
    """Custom type staIproLoadbalConBun based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproLoadbalConBun_Type.__name__ = "DisplayString"
_StaIproLoadbalConBun_Object = MibTableColumn
staIproLoadbalConBun = _StaIproLoadbalConBun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 2),
    _StaIproLoadbalConBun_Type()
)
staIproLoadbalConBun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalConBun.setStatus("current")


class _StaIproLoadbalConSta_Type(Integer32):
    """Custom type staIproLoadbalConSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connection", 7),
          ("disconnecting", 8),
          ("ready", 2))
    )


_StaIproLoadbalConSta_Type.__name__ = "Integer32"
_StaIproLoadbalConSta_Object = MibTableColumn
staIproLoadbalConSta = _StaIproLoadbalConSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 3),
    _StaIproLoadbalConSta_Type()
)
staIproLoadbalConSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalConSta.setStatus("current")


class _StaIproLoadbalConTcp_Type(Integer32):
    """Custom type staIproLoadbalConTcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproLoadbalConTcp_Type.__name__ = "Integer32"
_StaIproLoadbalConTcp_Object = MibTableColumn
staIproLoadbalConTcp = _StaIproLoadbalConTcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 4),
    _StaIproLoadbalConTcp_Type()
)
staIproLoadbalConTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalConTcp.setStatus("current")


class _StaIproLoadbalConPpt_Type(Integer32):
    """Custom type staIproLoadbalConPpt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproLoadbalConPpt_Type.__name__ = "Integer32"
_StaIproLoadbalConPpt_Object = MibTableColumn
staIproLoadbalConPpt = _StaIproLoadbalConPpt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 5),
    _StaIproLoadbalConPpt_Type()
)
staIproLoadbalConPpt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalConPpt.setStatus("current")


class _StaIproLoadbalConVpn_Type(Integer32):
    """Custom type staIproLoadbalConVpn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIproLoadbalConVpn_Type.__name__ = "Integer32"
_StaIproLoadbalConVpn_Object = MibTableColumn
staIproLoadbalConVpn = _StaIproLoadbalConVpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 32, 2, 1, 6),
    _StaIproLoadbalConVpn_Type()
)
staIproLoadbalConVpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproLoadbalConVpn.setStatus("current")
_StaIproVrrp_ObjectIdentity = ObjectIdentity
staIproVrrp = _StaIproVrrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33)
)
_StaIproVrrpRx_Type = Counter32
_StaIproVrrpRx_Object = MibScalar
staIproVrrpRx = _StaIproVrrpRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 1),
    _StaIproVrrpRx_Type()
)
staIproVrrpRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpRx.setStatus("current")
_StaIproVrrpTx_Type = Counter32
_StaIproVrrpTx_Object = MibScalar
staIproVrrpTx = _StaIproVrrpTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 2),
    _StaIproVrrpTx_Type()
)
staIproVrrpTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpTx.setStatus("current")
_StaIproVrrpErr_Type = Counter32
_StaIproVrrpErr_Object = MibScalar
staIproVrrpErr = _StaIproVrrpErr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 3),
    _StaIproVrrpErr_Type()
)
staIproVrrpErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpErr.setStatus("current")
_StaIproVrrpDro_Type = Counter32
_StaIproVrrpDro_Object = MibScalar
staIproVrrpDro = _StaIproVrrpDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 4),
    _StaIproVrrpDro_Type()
)
staIproVrrpDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpDro.setStatus("current")


class _StaIproVrrpOpe_Type(Integer32):
    """Custom type staIproVrrpOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproVrrpOpe_Type.__name__ = "Integer32"
_StaIproVrrpOpe_Object = MibScalar
staIproVrrpOpe = _StaIproVrrpOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 5),
    _StaIproVrrpOpe_Type()
)
staIproVrrpOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpOpe.setStatus("current")


class _StaIproVrrpInt_Type(Integer32):
    """Custom type staIproVrrpInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproVrrpInt_Type.__name__ = "Integer32"
_StaIproVrrpInt_Object = MibScalar
staIproVrrpInt = _StaIproVrrpInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 6),
    _StaIproVrrpInt_Type()
)
staIproVrrpInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpInt.setStatus("current")
_StaIproVrrpVirTable_Object = MibTable
staIproVrrpVirTable = _StaIproVrrpVirTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10)
)
if mibBuilder.loadTexts:
    staIproVrrpVirTable.setStatus("current")
_StaIproVrrpVirEntry_Object = MibTableRow
staIproVrrpVirEntry = _StaIproVrrpVirEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1)
)
staIproVrrpVirEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproVrrpVirRou"),
)
if mibBuilder.loadTexts:
    staIproVrrpVirEntry.setStatus("current")


class _StaIproVrrpVirRou_Type(Integer32):
    """Custom type staIproVrrpVirRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproVrrpVirRou_Type.__name__ = "Integer32"
_StaIproVrrpVirRou_Object = MibTableColumn
staIproVrrpVirRou = _StaIproVrrpVirRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 1),
    _StaIproVrrpVirRou_Type()
)
staIproVrrpVirRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirRou.setStatus("current")
_StaIproVrrpVirVir_Type = IpAddress
_StaIproVrrpVirVir_Object = MibTableColumn
staIproVrrpVirVir = _StaIproVrrpVirVir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 2),
    _StaIproVrrpVirVir_Type()
)
staIproVrrpVirVir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirVir.setStatus("current")


class _StaIproVrrpVirPri_Type(Integer32):
    """Custom type staIproVrrpVirPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproVrrpVirPri_Type.__name__ = "Integer32"
_StaIproVrrpVirPri_Object = MibTableColumn
staIproVrrpVirPri = _StaIproVrrpVirPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 3),
    _StaIproVrrpVirPri_Type()
)
staIproVrrpVirPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirPri.setStatus("current")


class _StaIproVrrpVirBpr_Type(Integer32):
    """Custom type staIproVrrpVirBpr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproVrrpVirBpr_Type.__name__ = "Integer32"
_StaIproVrrpVirBpr_Object = MibTableColumn
staIproVrrpVirBpr = _StaIproVrrpVirBpr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 4),
    _StaIproVrrpVirBpr_Type()
)
staIproVrrpVirBpr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirBpr.setStatus("current")


class _StaIproVrrpVirPee_Type(DisplayString):
    """Custom type staIproVrrpVirPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproVrrpVirPee_Type.__name__ = "DisplayString"
_StaIproVrrpVirPee_Object = MibTableColumn
staIproVrrpVirPee = _StaIproVrrpVirPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 5),
    _StaIproVrrpVirPee_Type()
)
staIproVrrpVirPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirPee.setStatus("current")


class _StaIproVrrpVirSta_Type(Integer32):
    """Custom type staIproVrrpVirSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("down", 4),
          ("init", 0),
          ("listen", 1),
          ("master", 3),
          ("reconnect", 5),
          ("standby", 2))
    )


_StaIproVrrpVirSta_Type.__name__ = "Integer32"
_StaIproVrrpVirSta_Object = MibTableColumn
staIproVrrpVirSta = _StaIproVrrpVirSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 6),
    _StaIproVrrpVirSta_Type()
)
staIproVrrpVirSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirSta.setStatus("current")


class _StaIproVrrpVirBac_Type(Integer32):
    """Custom type staIproVrrpVirBac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIproVrrpVirBac_Type.__name__ = "Integer32"
_StaIproVrrpVirBac_Object = MibTableColumn
staIproVrrpVirBac = _StaIproVrrpVirBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 7),
    _StaIproVrrpVirBac_Type()
)
staIproVrrpVirBac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirBac.setStatus("current")
_StaIproVrrpVirMas_Type = IpAddress
_StaIproVrrpVirMas_Object = MibTableColumn
staIproVrrpVirMas = _StaIproVrrpVirMas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 8),
    _StaIproVrrpVirMas_Type()
)
staIproVrrpVirMas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirMas.setStatus("current")


class _StaIproVrrpVirPor_Type(Integer32):
    """Custom type staIproVrrpVirPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_StaIproVrrpVirPor_Type.__name__ = "Integer32"
_StaIproVrrpVirPor_Object = MibTableColumn
staIproVrrpVirPor = _StaIproVrrpVirPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 9),
    _StaIproVrrpVirPor_Type()
)
staIproVrrpVirPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirPor.setStatus("current")


class _StaIproVrrpVirVla_Type(Integer32):
    """Custom type staIproVrrpVirVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproVrrpVirVla_Type.__name__ = "Integer32"
_StaIproVrrpVirVla_Object = MibTableColumn
staIproVrrpVirVla = _StaIproVrrpVirVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 10),
    _StaIproVrrpVirVla_Type()
)
staIproVrrpVirVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirVla.setStatus("current")


class _StaIproVrrpVirNet_Type(DisplayString):
    """Custom type staIproVrrpVirNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIproVrrpVirNet_Type.__name__ = "DisplayString"
_StaIproVrrpVirNet_Object = MibTableColumn
staIproVrrpVirNet = _StaIproVrrpVirNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 10, 1, 11),
    _StaIproVrrpVirNet_Type()
)
staIproVrrpVirNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpVirNet.setStatus("current")
_StaIproVrrpMacTable_Object = MibTable
staIproVrrpMacTable = _StaIproVrrpMacTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11)
)
if mibBuilder.loadTexts:
    staIproVrrpMacTable.setStatus("current")
_StaIproVrrpMacEntry_Object = MibTableRow
staIproVrrpMacEntry = _StaIproVrrpMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1)
)
staIproVrrpMacEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproVrrpMacVir"),
)
if mibBuilder.loadTexts:
    staIproVrrpMacEntry.setStatus("current")
_StaIproVrrpMacVir_Type = IpAddress
_StaIproVrrpMacVir_Object = MibTableColumn
staIproVrrpMacVir = _StaIproVrrpMacVir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 1),
    _StaIproVrrpMacVir_Type()
)
staIproVrrpMacVir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpMacVir.setStatus("current")
_StaIproVrrpMacMac_Type = MacAddress
_StaIproVrrpMacMac_Object = MibTableColumn
staIproVrrpMacMac = _StaIproVrrpMacMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 2),
    _StaIproVrrpMacMac_Type()
)
staIproVrrpMacMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpMacMac.setStatus("current")


class _StaIproVrrpMacRou_Type(Integer32):
    """Custom type staIproVrrpMacRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproVrrpMacRou_Type.__name__ = "Integer32"
_StaIproVrrpMacRou_Object = MibTableColumn
staIproVrrpMacRou = _StaIproVrrpMacRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 11, 1, 3),
    _StaIproVrrpMacRou_Type()
)
staIproVrrpMacRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpMacRou.setStatus("current")
_StaIproVrrpEveTable_Object = MibTable
staIproVrrpEveTable = _StaIproVrrpEveTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12)
)
if mibBuilder.loadTexts:
    staIproVrrpEveTable.setStatus("current")
_StaIproVrrpEveEntry_Object = MibTableRow
staIproVrrpEveEntry = _StaIproVrrpEveEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1)
)
staIproVrrpEveEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIproVrrpEveIdx"),
)
if mibBuilder.loadTexts:
    staIproVrrpEveEntry.setStatus("current")


class _StaIproVrrpEveIdx_Type(Integer32):
    """Custom type staIproVrrpEveIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIproVrrpEveIdx_Type.__name__ = "Integer32"
_StaIproVrrpEveIdx_Object = MibTableColumn
staIproVrrpEveIdx = _StaIproVrrpEveIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 1),
    _StaIproVrrpEveIdx_Type()
)
staIproVrrpEveIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpEveIdx.setStatus("current")


class _StaIproVrrpEveSys_Type(DisplayString):
    """Custom type staIproVrrpEveSys based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaIproVrrpEveSys_Type.__name__ = "DisplayString"
_StaIproVrrpEveSys_Object = MibTableColumn
staIproVrrpEveSys = _StaIproVrrpEveSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 2),
    _StaIproVrrpEveSys_Type()
)
staIproVrrpEveSys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpEveSys.setStatus("current")
_StaIproVrrpEveSrc_Type = IpAddress
_StaIproVrrpEveSrc_Object = MibTableColumn
staIproVrrpEveSrc = _StaIproVrrpEveSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 3),
    _StaIproVrrpEveSrc_Type()
)
staIproVrrpEveSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpEveSrc.setStatus("current")


class _StaIproVrrpEveVri_Type(Integer32):
    """Custom type staIproVrrpEveVri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIproVrrpEveVri_Type.__name__ = "Integer32"
_StaIproVrrpEveVri_Object = MibTableColumn
staIproVrrpEveVri = _StaIproVrrpEveVri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 4),
    _StaIproVrrpEveVri_Type()
)
staIproVrrpEveVri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpEveVri.setStatus("current")


class _StaIproVrrpEveEve_Type(Integer32):
    """Custom type staIproVrrpEveEve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("backup-ended", 15),
          ("backup-started", 14),
          ("bad-advertisement-interval", 5),
          ("bad-authentication-type", 4),
          ("bad-number-of-virtual-addresses", 3),
          ("invalid-priority", 8),
          ("invalid-router-address", 7),
          ("invalid-ttl", 1),
          ("invalid-version", 2),
          ("invalid-vrid", 6),
          ("link-down", 12),
          ("link-up", 11),
          ("new-master", 13),
          ("virtual-router-started", 10),
          ("virtual-router-stopped", 9))
    )


_StaIproVrrpEveEve_Type.__name__ = "Integer32"
_StaIproVrrpEveEve_Object = MibTableColumn
staIproVrrpEveEve = _StaIproVrrpEveEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 5),
    _StaIproVrrpEveEve_Type()
)
staIproVrrpEveEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpEveEve.setStatus("current")


class _StaIproVrrpEveInf_Type(DisplayString):
    """Custom type staIproVrrpEveInf based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIproVrrpEveInf_Type.__name__ = "DisplayString"
_StaIproVrrpEveInf_Object = MibTableColumn
staIproVrrpEveInf = _StaIproVrrpEveInf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 12, 1, 6),
    _StaIproVrrpEveInf_Type()
)
staIproVrrpEveInf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproVrrpEveInf.setStatus("current")
_StaIproVrrpDel_Type = DisplayString
_StaIproVrrpDel_Object = MibScalar
staIproVrrpDel = _StaIproVrrpDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 33, 20),
    _StaIproVrrpDel_Type()
)
staIproVrrpDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIproVrrpDel.setStatus("current")
_StaIproRules_Type = Integer32
_StaIproRules_Object = MibScalar
staIproRules = _StaIproRules_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 34),
    _StaIproRules_Type()
)
staIproRules.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproRules.setStatus("current")
_StaIproFilter_Type = Integer32
_StaIproFilter_Object = MibScalar
staIproFilter = _StaIproFilter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 10, 35),
    _StaIproFilter_Type()
)
staIproFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIproFilter.setStatus("current")
_StaConf_ObjectIdentity = ObjectIdentity
staConf = _StaConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11)
)
_StaConfLanactiv_Type = Integer32
_StaConfLanactiv_Object = MibScalar
staConfLanactiv = _StaConfLanactiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 1),
    _StaConfLanactiv_Type()
)
staConfLanactiv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLanactiv.setStatus("current")
_StaConfLantotal_Type = Counter32
_StaConfLantotal_Object = MibScalar
staConfLantotal = _StaConfLantotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 2),
    _StaConfLantotal_Type()
)
staConfLantotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLantotal.setStatus("current")
_StaConfWanactiv_Type = Integer32
_StaConfWanactiv_Object = MibScalar
staConfWanactiv = _StaConfWanactiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 3),
    _StaConfWanactiv_Type()
)
staConfWanactiv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfWanactiv.setStatus("current")
_StaConfWantotal_Type = Counter32
_StaConfWantotal_Object = MibScalar
staConfWantotal = _StaConfWantotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 4),
    _StaConfWantotal_Type()
)
staConfWantotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfWantotal.setStatus("current")
_StaConfOutbanda_Type = Integer32
_StaConfOutbanda_Object = MibScalar
staConfOutbanda = _StaConfOutbanda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 5),
    _StaConfOutbanda_Type()
)
staConfOutbanda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfOutbanda.setStatus("current")
_StaConfOutbandt_Type = Counter32
_StaConfOutbandt_Object = MibScalar
staConfOutbandt = _StaConfOutbandt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 6),
    _StaConfOutbandt_Type()
)
staConfOutbandt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfOutbandt.setStatus("current")
_StaConfOutbandb_Type = Integer32
_StaConfOutbandb_Object = MibScalar
staConfOutbandb = _StaConfOutbandb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 7),
    _StaConfOutbandb_Type()
)
staConfOutbandb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfOutbandb.setStatus("current")
_StaConfLoginerr_Type = Counter32
_StaConfLoginerr_Object = MibScalar
staConfLoginerr = _StaConfLoginerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 8),
    _StaConfLoginerr_Type()
)
staConfLoginerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLoginerr.setStatus("current")
_StaConfLoginloc_Type = Counter32
_StaConfLoginloc_Object = MibScalar
staConfLoginloc = _StaConfLoginloc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 9),
    _StaConfLoginloc_Type()
)
staConfLoginloc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLoginloc.setStatus("current")
_StaConfLoginrej_Type = Counter32
_StaConfLoginrej_Object = MibScalar
staConfLoginrej = _StaConfLoginrej_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 10),
    _StaConfLoginrej_Type()
)
staConfLoginrej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLoginrej.setStatus("current")
_StaConfDeleteva_Type = DisplayString
_StaConfDeleteva_Object = MibScalar
staConfDeleteva = _StaConfDeleteva_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 11),
    _StaConfDeleteva_Type()
)
staConfDeleteva.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfDeleteva.setStatus("current")
_StaConfEventlogTable_Object = MibTable
staConfEventlogTable = _StaConfEventlogTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12)
)
if mibBuilder.loadTexts:
    staConfEventlogTable.setStatus("current")
_StaConfEventlogEntry_Object = MibTableRow
staConfEventlogEntry = _StaConfEventlogEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1)
)
staConfEventlogEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staConfEventlogIdx"),
)
if mibBuilder.loadTexts:
    staConfEventlogEntry.setStatus("current")


class _StaConfEventlogIdx_Type(Integer32):
    """Custom type staConfEventlogIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaConfEventlogIdx_Type.__name__ = "Integer32"
_StaConfEventlogIdx_Object = MibTableColumn
staConfEventlogIdx = _StaConfEventlogIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 1),
    _StaConfEventlogIdx_Type()
)
staConfEventlogIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogIdx.setStatus("current")


class _StaConfEventlogEvent_Type(Integer32):
    """Custom type staConfEventlogEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              29)
        )
    )
    namedValues = NamedValues(
        *(("cnfdnlstart", 12),
          ("cnfdnlsucc", 13),
          ("cnfuplstart", 11),
          ("errlogin", 29),
          ("fwuplstart", 4),
          ("login", 9),
          ("logout", 10),
          ("uplfailbaddev", 8),
          ("uplfailincl", 7),
          ("uplfailto", 6),
          ("uplsucc", 5))
    )


_StaConfEventlogEvent_Type.__name__ = "Integer32"
_StaConfEventlogEvent_Object = MibTableColumn
staConfEventlogEvent = _StaConfEventlogEvent_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 2),
    _StaConfEventlogEvent_Type()
)
staConfEventlogEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogEvent.setStatus("current")


class _StaConfEventlogAcces_Type(Integer32):
    """Custom type staConfEventlogAcces based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("http", 3),
          ("https", 5),
          ("ll2m", 8),
          ("outband", 0),
          ("ppp", 254),
          ("snmp", 4),
          ("ssh", 7),
          ("telnet", 1),
          ("telnet-ssl", 6),
          ("tftp", 2),
          ("unknown", 255))
    )


_StaConfEventlogAcces_Type.__name__ = "Integer32"
_StaConfEventlogAcces_Object = MibTableColumn
staConfEventlogAcces = _StaConfEventlogAcces_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 3),
    _StaConfEventlogAcces_Type()
)
staConfEventlogAcces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogAcces.setStatus("current")
_StaConfEventlogIpadd_Type = IpAddress
_StaConfEventlogIpadd_Object = MibTableColumn
staConfEventlogIpadd = _StaConfEventlogIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 4),
    _StaConfEventlogIpadd_Type()
)
staConfEventlogIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogIpadd.setStatus("current")


class _StaConfEventlogInfo1_Type(DisplayString):
    """Custom type staConfEventlogInfo1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaConfEventlogInfo1_Type.__name__ = "DisplayString"
_StaConfEventlogInfo1_Object = MibTableColumn
staConfEventlogInfo1 = _StaConfEventlogInfo1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 5),
    _StaConfEventlogInfo1_Type()
)
staConfEventlogInfo1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogInfo1.setStatus("current")


class _StaConfEventlogInfo2_Type(DisplayString):
    """Custom type staConfEventlogInfo2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaConfEventlogInfo2_Type.__name__ = "DisplayString"
_StaConfEventlogInfo2_Object = MibTableColumn
staConfEventlogInfo2 = _StaConfEventlogInfo2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 6),
    _StaConfEventlogInfo2_Type()
)
staConfEventlogInfo2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogInfo2.setStatus("current")


class _StaConfEventlogSyste_Type(DisplayString):
    """Custom type staConfEventlogSyste based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaConfEventlogSyste_Type.__name__ = "DisplayString"
_StaConfEventlogSyste_Object = MibTableColumn
staConfEventlogSyste = _StaConfEventlogSyste_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 12, 1, 7),
    _StaConfEventlogSyste_Type()
)
staConfEventlogSyste.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfEventlogSyste.setStatus("current")
_StaConfStartsca_Type = DisplayString
_StaConfStartsca_Object = MibScalar
staConfStartsca = _StaConfStartsca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 13),
    _StaConfStartsca_Type()
)
staConfStartsca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfStartsca.setStatus("current")
_StaConfScanresuTable_Object = MibTable
staConfScanresuTable = _StaConfScanresuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14)
)
if mibBuilder.loadTexts:
    staConfScanresuTable.setStatus("current")
_StaConfScanresuEntry_Object = MibTableRow
staConfScanresuEntry = _StaConfScanresuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1)
)
staConfScanresuEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staConfScanresuIpadd"),
    (0, "LANCOM-1711-MIB", "staConfScanresuRtgta"),
)
if mibBuilder.loadTexts:
    staConfScanresuEntry.setStatus("current")
_StaConfScanresuIpadd_Type = IpAddress
_StaConfScanresuIpadd_Object = MibTableColumn
staConfScanresuIpadd = _StaConfScanresuIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 1),
    _StaConfScanresuIpadd_Type()
)
staConfScanresuIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuIpadd.setStatus("current")


class _StaConfScanresuName_Type(DisplayString):
    """Custom type staConfScanresuName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_StaConfScanresuName_Type.__name__ = "DisplayString"
_StaConfScanresuName_Object = MibTableColumn
staConfScanresuName = _StaConfScanresuName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 2),
    _StaConfScanresuName_Type()
)
staConfScanresuName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuName.setStatus("current")


class _StaConfScanresuDevic_Type(DisplayString):
    """Custom type staConfScanresuDevic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaConfScanresuDevic_Type.__name__ = "DisplayString"
_StaConfScanresuDevic_Object = MibTableColumn
staConfScanresuDevic = _StaConfScanresuDevic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 3),
    _StaConfScanresuDevic_Type()
)
staConfScanresuDevic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuDevic.setStatus("current")


class _StaConfScanresuVersi_Type(DisplayString):
    """Custom type staConfScanresuVersi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_StaConfScanresuVersi_Type.__name__ = "DisplayString"
_StaConfScanresuVersi_Object = MibTableColumn
staConfScanresuVersi = _StaConfScanresuVersi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 4),
    _StaConfScanresuVersi_Type()
)
staConfScanresuVersi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuVersi.setStatus("current")


class _StaConfScanresuState_Type(Integer32):
    """Custom type staConfScanresuState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("error", 2),
          ("ready", 1),
          ("scanning", 0))
    )


_StaConfScanresuState_Type.__name__ = "Integer32"
_StaConfScanresuState_Object = MibTableColumn
staConfScanresuState = _StaConfScanresuState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 5),
    _StaConfScanresuState_Type()
)
staConfScanresuState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuState.setStatus("current")


class _StaConfScanresuCapip_Type(Integer32):
    """Custom type staConfScanresuCapip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfScanresuCapip_Type.__name__ = "Integer32"
_StaConfScanresuCapip_Object = MibTableColumn
staConfScanresuCapip = _StaConfScanresuCapip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 6),
    _StaConfScanresuCapip_Type()
)
staConfScanresuCapip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuCapip.setStatus("current")


class _StaConfScanresuHttpp_Type(Integer32):
    """Custom type staConfScanresuHttpp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfScanresuHttpp_Type.__name__ = "Integer32"
_StaConfScanresuHttpp_Object = MibTableColumn
staConfScanresuHttpp = _StaConfScanresuHttpp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 7),
    _StaConfScanresuHttpp_Type()
)
staConfScanresuHttpp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuHttpp.setStatus("current")


class _StaConfScanresuHttps_Type(Integer32):
    """Custom type staConfScanresuHttps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfScanresuHttps_Type.__name__ = "Integer32"
_StaConfScanresuHttps_Object = MibTableColumn
staConfScanresuHttps = _StaConfScanresuHttps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 8),
    _StaConfScanresuHttps_Type()
)
staConfScanresuHttps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuHttps.setStatus("current")


class _StaConfScanresuRtgta_Type(Integer32):
    """Custom type staConfScanresuRtgta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfScanresuRtgta_Type.__name__ = "Integer32"
_StaConfScanresuRtgta_Object = MibTableColumn
staConfScanresuRtgta = _StaConfScanresuRtgta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 14, 1, 9),
    _StaConfScanresuRtgta_Type()
)
staConfScanresuRtgta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfScanresuRtgta.setStatus("current")
_StaConfAntithef_ObjectIdentity = ObjectIdentity
staConfAntithef = _StaConfAntithef_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15)
)


class _StaConfAntithefState_Type(Integer32):
    """Custom type staConfAntithefState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("disabled", 0),
          ("locked", 3),
          ("successfull", 2))
    )


_StaConfAntithefState_Type.__name__ = "Integer32"
_StaConfAntithefState_Object = MibScalar
staConfAntithefState = _StaConfAntithefState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 1),
    _StaConfAntithefState_Type()
)
staConfAntithefState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefState.setStatus("current")


class _StaConfAntithefSendi_Type(DisplayString):
    """Custom type staConfAntithefSendi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaConfAntithefSendi_Type.__name__ = "DisplayString"
_StaConfAntithefSendi_Object = MibScalar
staConfAntithefSendi = _StaConfAntithefSendi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 2),
    _StaConfAntithefSendi_Type()
)
staConfAntithefSendi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefSendi.setStatus("current")


class _StaConfAntithefWaiti_Type(DisplayString):
    """Custom type staConfAntithefWaiti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaConfAntithefWaiti_Type.__name__ = "DisplayString"
_StaConfAntithefWaiti_Object = MibScalar
staConfAntithefWaiti = _StaConfAntithefWaiti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 3),
    _StaConfAntithefWaiti_Type()
)
staConfAntithefWaiti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefWaiti.setStatus("current")


class _StaConfAntithefLasts_Type(DisplayString):
    """Custom type staConfAntithefLasts based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaConfAntithefLasts_Type.__name__ = "DisplayString"
_StaConfAntithefLasts_Object = MibScalar
staConfAntithefLasts = _StaConfAntithefLasts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 4),
    _StaConfAntithefLasts_Type()
)
staConfAntithefLasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefLasts.setStatus("current")


class _StaConfAntithefCalla_Type(Integer32):
    """Custom type staConfAntithefCalla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaConfAntithefCalla_Type.__name__ = "Integer32"
_StaConfAntithefCalla_Object = MibScalar
staConfAntithefCalla = _StaConfAntithefCalla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 5),
    _StaConfAntithefCalla_Type()
)
staConfAntithefCalla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefCalla.setStatus("current")


class _StaConfAntithefLaste_Type(Integer32):
    """Custom type staConfAntithefLaste based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              16,
              17,
              18,
              19,
              21,
              22,
              26,
              27,
              31,
              34,
              41,
              42,
              50,
              63,
              81,
              88)
        )
    )
    namedValues = NamedValues(
        *(("call-rejected", 21),
          ("destination-out-of-order", 27),
          ("facility-not-available", 63),
          ("facility-not-subscribed", 50),
          ("incompatible-destination", 88),
          ("invalid-call-reference-number", 81),
          ("no-channel-available", 34),
          ("no-route-to-destination", 3),
          ("no-user-responding", 18),
          ("non-selected-user-clearing", 26),
          ("normal-call-clearing", 16),
          ("normal-unspecified", 31),
          ("number-changed", 22),
          ("switching-equipment-congestion", 42),
          ("temp-failure", 41),
          ("unallocated-number", 1),
          ("unknown", 0),
          ("user-alerting-no-answer", 19),
          ("user-busy", 17))
    )


_StaConfAntithefLaste_Type.__name__ = "Integer32"
_StaConfAntithefLaste_Object = MibScalar
staConfAntithefLaste = _StaConfAntithefLaste_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 6),
    _StaConfAntithefLaste_Type()
)
staConfAntithefLaste.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefLaste.setStatus("current")


class _StaConfAntithefIncom_Type(Integer32):
    """Custom type staConfAntithefIncom based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaConfAntithefIncom_Type.__name__ = "Integer32"
_StaConfAntithefIncom_Object = MibScalar
staConfAntithefIncom = _StaConfAntithefIncom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 7),
    _StaConfAntithefIncom_Type()
)
staConfAntithefIncom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefIncom.setStatus("current")


class _StaConfAntithefMetho_Type(Integer32):
    """Custom type staConfAntithefMetho based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic-call", 0),
          ("facility", 1))
    )


_StaConfAntithefMetho_Type.__name__ = "Integer32"
_StaConfAntithefMetho_Object = MibScalar
staConfAntithefMetho = _StaConfAntithefMetho_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 15, 8),
    _StaConfAntithefMetho_Type()
)
staConfAntithefMetho.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfAntithefMetho.setStatus("current")
_StaConfFeaturesTable_Object = MibTable
staConfFeaturesTable = _StaConfFeaturesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16)
)
if mibBuilder.loadTexts:
    staConfFeaturesTable.setStatus("current")
_StaConfFeaturesEntry_Object = MibTableRow
staConfFeaturesEntry = _StaConfFeaturesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1)
)
staConfFeaturesEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staConfFeaturesFea"),
)
if mibBuilder.loadTexts:
    staConfFeaturesEntry.setStatus("current")


class _StaConfFeaturesFea_Type(Integer32):
    """Custom type staConfFeaturesFea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              33,
              34,
              35,
              36,
              37,
              38,
              39)
        )
    )
    namedValues = NamedValues(
        *(("dsl-interface", 6),
          ("dynamic-vpn", 23),
          ("fax", 7),
          ("hermes1-wpa", 20),
          ("ipx", 1),
          ("lan-bridge", 2),
          ("lancapi", 3),
          ("leased-line", 4),
          ("modem", 8),
          ("public-spot", 16),
          ("switched-line", 5),
          ("umts", 22),
          ("unused", 33),
          ("utm-antispam-small", 35),
          ("utm-antivirus-small", 34),
          ("utm-contentfilter-small", 36),
          ("voip-advanced-32", 26),
          ("voip-advanced-8", 31),
          ("voip-basic", 27),
          ("vpn-100", 13),
          ("vpn-1000", 19),
          ("vpn-200", 17),
          ("vpn-25", 10),
          ("vpn-25-old", 11),
          ("vpn-3", 21),
          ("vpn-5", 9),
          ("vpn-50-old", 12),
          ("vpn-500", 18),
          ("wlan-5ghz", 24),
          ("wlan-fcc-restrictions", 28),
          ("wlan-monitor-mode", 38),
          ("wlan-no-5ghz", 39),
          ("wlan-no-encryption", 25),
          ("wlan-point-to-point", 15),
          ("wlc-4006-12", 30),
          ("wlc-4025-100", 14),
          ("wlc-4025-50", 29),
          ("wlc-public-spot", 37))
    )


_StaConfFeaturesFea_Type.__name__ = "Integer32"
_StaConfFeaturesFea_Object = MibTableColumn
staConfFeaturesFea = _StaConfFeaturesFea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1, 1),
    _StaConfFeaturesFea_Type()
)
staConfFeaturesFea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfFeaturesFea.setStatus("current")


class _StaConfFeaturesExp_Type(DisplayString):
    """Custom type staConfFeaturesExp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaConfFeaturesExp_Type.__name__ = "DisplayString"
_StaConfFeaturesExp_Object = MibTableColumn
staConfFeaturesExp = _StaConfFeaturesExp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 16, 1, 2),
    _StaConfFeaturesExp_Type()
)
staConfFeaturesExp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfFeaturesExp.setStatus("current")
_StaConfLl2m_ObjectIdentity = ObjectIdentity
staConfLl2m = _StaConfLl2m_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65)
)
_StaConfLl2mRxpa_Type = Integer32
_StaConfLl2mRxpa_Object = MibScalar
staConfLl2mRxpa = _StaConfLl2mRxpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 1),
    _StaConfLl2mRxpa_Type()
)
staConfLl2mRxpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mRxpa.setStatus("current")
_StaConfLl2mRxbr_Type = Integer32
_StaConfLl2mRxbr_Object = MibScalar
staConfLl2mRxbr = _StaConfLl2mRxbr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 2),
    _StaConfLl2mRxbr_Type()
)
staConfLl2mRxbr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mRxbr.setStatus("current")
_StaConfLl2mRxmu_Type = Integer32
_StaConfLl2mRxmu_Object = MibScalar
staConfLl2mRxmu = _StaConfLl2mRxmu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 3),
    _StaConfLl2mRxmu_Type()
)
staConfLl2mRxmu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mRxmu.setStatus("current")
_StaConfLl2mRxun_Type = Integer32
_StaConfLl2mRxun_Object = MibScalar
staConfLl2mRxun = _StaConfLl2mRxun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 4),
    _StaConfLl2mRxun_Type()
)
staConfLl2mRxun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mRxun.setStatus("current")
_StaConfLl2mRxdi_Type = Integer32
_StaConfLl2mRxdi_Object = MibScalar
staConfLl2mRxdi = _StaConfLl2mRxdi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 5),
    _StaConfLl2mRxdi_Type()
)
staConfLl2mRxdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mRxdi.setStatus("current")
_StaConfLl2mRxma_Type = Integer32
_StaConfLl2mRxma_Object = MibScalar
staConfLl2mRxma = _StaConfLl2mRxma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 6),
    _StaConfLl2mRxma_Type()
)
staConfLl2mRxma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mRxma.setStatus("current")
_StaConfLl2mServ_ObjectIdentity = ObjectIdentity
staConfLl2mServ = _StaConfLl2mServ_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20)
)
_StaConfLl2mServRxp_Type = Integer32
_StaConfLl2mServRxp_Object = MibScalar
staConfLl2mServRxp = _StaConfLl2mServRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 1),
    _StaConfLl2mServRxp_Type()
)
staConfLl2mServRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mServRxp.setStatus("current")
_StaConfLl2mServRxb_Type = Integer32
_StaConfLl2mServRxb_Object = MibScalar
staConfLl2mServRxb = _StaConfLl2mServRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 2),
    _StaConfLl2mServRxb_Type()
)
staConfLl2mServRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mServRxb.setStatus("current")
_StaConfLl2mServRxm_Type = Integer32
_StaConfLl2mServRxm_Object = MibScalar
staConfLl2mServRxm = _StaConfLl2mServRxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 3),
    _StaConfLl2mServRxm_Type()
)
staConfLl2mServRxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mServRxm.setStatus("current")
_StaConfLl2mServRxu_Type = Integer32
_StaConfLl2mServRxu_Object = MibScalar
staConfLl2mServRxu = _StaConfLl2mServRxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 4),
    _StaConfLl2mServRxu_Type()
)
staConfLl2mServRxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mServRxu.setStatus("current")
_StaConfLl2mServRxd_Type = Integer32
_StaConfLl2mServRxd_Object = MibScalar
staConfLl2mServRxd = _StaConfLl2mServRxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 5),
    _StaConfLl2mServRxd_Type()
)
staConfLl2mServRxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mServRxd.setStatus("current")
_StaConfLl2mServDel_Type = DisplayString
_StaConfLl2mServDel_Object = MibScalar
staConfLl2mServDel = _StaConfLl2mServDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 20, 99),
    _StaConfLl2mServDel_Type()
)
staConfLl2mServDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfLl2mServDel.setStatus("current")
_StaConfLl2mClie_ObjectIdentity = ObjectIdentity
staConfLl2mClie = _StaConfLl2mClie_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30)
)
_StaConfLl2mClieRxp_Type = Integer32
_StaConfLl2mClieRxp_Object = MibScalar
staConfLl2mClieRxp = _StaConfLl2mClieRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 1),
    _StaConfLl2mClieRxp_Type()
)
staConfLl2mClieRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mClieRxp.setStatus("current")
_StaConfLl2mClieRxb_Type = Integer32
_StaConfLl2mClieRxb_Object = MibScalar
staConfLl2mClieRxb = _StaConfLl2mClieRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 2),
    _StaConfLl2mClieRxb_Type()
)
staConfLl2mClieRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mClieRxb.setStatus("current")
_StaConfLl2mClieRxm_Type = Integer32
_StaConfLl2mClieRxm_Object = MibScalar
staConfLl2mClieRxm = _StaConfLl2mClieRxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 3),
    _StaConfLl2mClieRxm_Type()
)
staConfLl2mClieRxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mClieRxm.setStatus("current")
_StaConfLl2mClieRxu_Type = Integer32
_StaConfLl2mClieRxu_Object = MibScalar
staConfLl2mClieRxu = _StaConfLl2mClieRxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 4),
    _StaConfLl2mClieRxu_Type()
)
staConfLl2mClieRxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mClieRxu.setStatus("current")
_StaConfLl2mClieRxd_Type = Integer32
_StaConfLl2mClieRxd_Object = MibScalar
staConfLl2mClieRxd = _StaConfLl2mClieRxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 5),
    _StaConfLl2mClieRxd_Type()
)
staConfLl2mClieRxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfLl2mClieRxd.setStatus("current")
_StaConfLl2mClieDel_Type = DisplayString
_StaConfLl2mClieDel_Object = MibScalar
staConfLl2mClieDel = _StaConfLl2mClieDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 30, 99),
    _StaConfLl2mClieDel_Type()
)
staConfLl2mClieDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfLl2mClieDel.setStatus("current")
_StaConfLl2mDele_Type = DisplayString
_StaConfLl2mDele_Object = MibScalar
staConfLl2mDele = _StaConfLl2mDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 11, 65, 99),
    _StaConfLl2mDele_Type()
)
staConfLl2mDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfLl2mDele.setStatus("current")
_StaQueu_ObjectIdentity = ObjectIdentity
staQueu = _StaQueu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12)
)
_StaQueuLanheap_Type = Integer32
_StaQueuLanheap_Object = MibScalar
staQueuLanheap = _StaQueuLanheap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 1),
    _StaQueuLanheap_Type()
)
staQueuLanheap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuLanheap.setStatus("current")
_StaQueuQueuepa_Type = Integer32
_StaQueuQueuepa_Object = MibScalar
staQueuQueuepa = _StaQueuQueuepa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 2),
    _StaQueuQueuepa_Type()
)
staQueuQueuepa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuQueuepa.setStatus("current")
_StaQueuWanheap_Type = Integer32
_StaQueuWanheap_Object = MibScalar
staQueuWanheap = _StaQueuWanheap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 3),
    _StaQueuWanheap_Type()
)
staQueuWanheap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuWanheap.setStatus("current")
_StaQueuWanqueu_Type = Integer32
_StaQueuWanqueu_Object = MibScalar
staQueuWanqueu = _StaQueuWanqueu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 4),
    _StaQueuWanqueu_Type()
)
staQueuWanqueu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuWanqueu.setStatus("current")
_StaQueuArpquer_Type = Integer32
_StaQueuArpquer_Object = MibScalar
staQueuArpquer = _StaQueuArpquer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 7),
    _StaQueuArpquer_Type()
)
staQueuArpquer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuArpquer.setStatus("current")
_StaQueuArpqueu_Type = Integer32
_StaQueuArpqueu_Object = MibScalar
staQueuArpqueu = _StaQueuArpqueu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 8),
    _StaQueuArpqueu_Type()
)
staQueuArpqueu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuArpqueu.setStatus("current")
_StaQueuIpqueue_Type = Integer32
_StaQueuIpqueue_Object = MibScalar
staQueuIpqueue = _StaQueuIpqueue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 9),
    _StaQueuIpqueue_Type()
)
staQueuIpqueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuIpqueue.setStatus("current")
_StaQueuIpurgen_Type = Integer32
_StaQueuIpurgen_Object = MibScalar
staQueuIpurgen = _StaQueuIpurgen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 10),
    _StaQueuIpurgen_Type()
)
staQueuIpurgen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuIpurgen.setStatus("current")
_StaQueuIcmpque_Type = Integer32
_StaQueuIcmpque_Object = MibScalar
staQueuIcmpque = _StaQueuIcmpque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 11),
    _StaQueuIcmpque_Type()
)
staQueuIcmpque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuIcmpque.setStatus("current")
_StaQueuTcpqueu_Type = Integer32
_StaQueuTcpqueu_Object = MibScalar
staQueuTcpqueu = _StaQueuTcpqueu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 12),
    _StaQueuTcpqueu_Type()
)
staQueuTcpqueu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuTcpqueu.setStatus("current")
_StaQueuTftpser_Type = Integer32
_StaQueuTftpser_Object = MibScalar
staQueuTftpser = _StaQueuTftpser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 13),
    _StaQueuTftpser_Type()
)
staQueuTftpser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuTftpser.setStatus("current")
_StaQueuSnmpque_Type = Integer32
_StaQueuSnmpque_Object = MibScalar
staQueuSnmpque = _StaQueuSnmpque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 14),
    _StaQueuSnmpque_Type()
)
staQueuSnmpque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuSnmpque.setStatus("current")
_StaQueuProthea_Type = Integer32
_StaQueuProthea_Object = MibScalar
staQueuProthea = _StaQueuProthea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 22),
    _StaQueuProthea_Type()
)
staQueuProthea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuProthea.setStatus("current")
_StaQueuDhcpser_Type = Integer32
_StaQueuDhcpser_Object = MibScalar
staQueuDhcpser = _StaQueuDhcpser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 27),
    _StaQueuDhcpser_Type()
)
staQueuDhcpser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuDhcpser.setStatus("current")
_StaQueuDhcpcli_Type = Integer32
_StaQueuDhcpcli_Object = MibScalar
staQueuDhcpcli = _StaQueuDhcpcli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 28),
    _StaQueuDhcpcli_Type()
)
staQueuDhcpcli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuDhcpcli.setStatus("current")
_StaQueuIprripq_Type = Integer32
_StaQueuIprripq_Object = MibScalar
staQueuIprripq = _StaQueuIprripq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 29),
    _StaQueuIprripq_Type()
)
staQueuIprripq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuIprripq.setStatus("current")
_StaQueuDnstxqu_Type = Integer32
_StaQueuDnstxqu_Object = MibScalar
staQueuDnstxqu = _StaQueuDnstxqu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 30),
    _StaQueuDnstxqu_Type()
)
staQueuDnstxqu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuDnstxqu.setStatus("current")
_StaQueuDnsrxqu_Type = Integer32
_StaQueuDnsrxqu_Object = MibScalar
staQueuDnsrxqu = _StaQueuDnsrxqu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 12, 31),
    _StaQueuDnsrxqu_Type()
)
staQueuDnsrxqu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueuDnsrxqu.setStatus("current")
_StaConnTable_Object = MibTable
staConnTable = _StaConnTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13)
)
if mibBuilder.loadTexts:
    staConnTable.setStatus("current")
_StaConnEntry_Object = MibTableRow
staConnEntry = _StaConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1)
)
staConnEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staConnIfc"),
)
if mibBuilder.loadTexts:
    staConnEntry.setStatus("current")


class _StaConnIfc_Type(Integer32):
    """Custom type staConnIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaConnIfc_Type.__name__ = "Integer32"
_StaConnIfc_Object = MibTableColumn
staConnIfc = _StaConnIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 1),
    _StaConnIfc_Type()
)
staConnIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnIfc.setStatus("current")


class _StaConnConn_Type(Integer32):
    """Custom type staConnConn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConnConn_Type.__name__ = "Integer32"
_StaConnConn_Object = MibTableColumn
staConnConn = _StaConnConn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 2),
    _StaConnConn_Type()
)
staConnConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnConn.setStatus("current")


class _StaConnActi_Type(Integer32):
    """Custom type staConnActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConnActi_Type.__name__ = "Integer32"
_StaConnActi_Object = MibTableColumn
staConnActi = _StaConnActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 3),
    _StaConnActi_Type()
)
staConnActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnActi.setStatus("current")


class _StaConnPass_Type(Integer32):
    """Custom type staConnPass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConnPass_Type.__name__ = "Integer32"
_StaConnPass_Object = MibTableColumn
staConnPass = _StaConnPass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 4),
    _StaConnPass_Type()
)
staConnPass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnPass.setStatus("current")


class _StaConnErro_Type(Integer32):
    """Custom type staConnErro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConnErro_Type.__name__ = "Integer32"
_StaConnErro_Object = MibTableColumn
staConnErro = _StaConnErro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 5),
    _StaConnErro_Type()
)
staConnErro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnErro.setStatus("current")


class _StaConnCont_Type(DisplayString):
    """Custom type staConnCont based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaConnCont_Type.__name__ = "DisplayString"
_StaConnCont_Object = MibTableColumn
staConnCont = _StaConnCont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 6),
    _StaConnCont_Type()
)
staConnCont.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnCont.setStatus("current")


class _StaConnChar_Type(Integer32):
    """Custom type staConnChar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConnChar_Type.__name__ = "Integer32"
_StaConnChar_Object = MibTableColumn
staConnChar = _StaConnChar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 13, 1, 7),
    _StaConnChar_Type()
)
staConnChar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnChar.setStatus("current")
_StaInfoTable_Object = MibTable
staInfoTable = _StaInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14)
)
if mibBuilder.loadTexts:
    staInfoTable.setStatus("current")
_StaInfoEntry_Object = MibTableRow
staInfoEntry = _StaInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1)
)
staInfoEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staInfoIfc"),
)
if mibBuilder.loadTexts:
    staInfoEntry.setStatus("current")


class _StaInfoIfc_Type(Integer32):
    """Custom type staInfoIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaInfoIfc_Type.__name__ = "Integer32"
_StaInfoIfc_Object = MibTableColumn
staInfoIfc = _StaInfoIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 1),
    _StaInfoIfc_Type()
)
staInfoIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoIfc.setStatus("current")


class _StaInfoSta_Type(DisplayString):
    """Custom type staInfoSta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaInfoSta_Type.__name__ = "DisplayString"
_StaInfoSta_Object = MibTableColumn
staInfoSta = _StaInfoSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 2),
    _StaInfoSta_Type()
)
staInfoSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoSta.setStatus("current")


class _StaInfoMod_Type(Integer32):
    """Custom type staInfoMod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("callback", 9),
          ("passive", 5),
          ("unknown", 0))
    )


_StaInfoMod_Type.__name__ = "Integer32"
_StaInfoMod_Object = MibTableColumn
staInfoMod = _StaInfoMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 3),
    _StaInfoMod_Type()
)
staInfoMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoMod.setStatus("current")


class _StaInfoDia_Type(DisplayString):
    """Custom type staInfoDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaInfoDia_Type.__name__ = "DisplayString"
_StaInfoDia_Object = MibTableColumn
staInfoDia = _StaInfoDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 4),
    _StaInfoDia_Type()
)
staInfoDia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoDia.setStatus("current")


class _StaInfoPee_Type(DisplayString):
    """Custom type staInfoPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaInfoPee_Type.__name__ = "DisplayString"
_StaInfoPee_Object = MibTableColumn
staInfoPee = _StaInfoPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 5),
    _StaInfoPee_Type()
)
staInfoPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoPee.setStatus("current")


class _StaInfoB1d_Type(Integer32):
    """Custom type staInfoB1d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaInfoB1d_Type.__name__ = "Integer32"
_StaInfoB1d_Object = MibTableColumn
staInfoB1d = _StaInfoB1d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 6),
    _StaInfoB1d_Type()
)
staInfoB1d.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoB1d.setStatus("current")


class _StaInfoB2d_Type(Integer32):
    """Custom type staInfoB2d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaInfoB2d_Type.__name__ = "Integer32"
_StaInfoB2d_Object = MibTableColumn
staInfoB2d = _StaInfoB2d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 14, 1, 7),
    _StaInfoB2d_Type()
)
staInfoB2d.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfoB2d.setStatus("current")
_StaLayeTable_Object = MibTable
staLayeTable = _StaLayeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15)
)
if mibBuilder.loadTexts:
    staLayeTable.setStatus("current")
_StaLayeEntry_Object = MibTableRow
staLayeEntry = _StaLayeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1)
)
staLayeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staLayeIfc"),
)
if mibBuilder.loadTexts:
    staLayeEntry.setStatus("current")


class _StaLayeIfc_Type(Integer32):
    """Custom type staLayeIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaLayeIfc_Type.__name__ = "Integer32"
_StaLayeIfc_Object = MibTableColumn
staLayeIfc = _StaLayeIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 1),
    _StaLayeIfc_Type()
)
staLayeIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeIfc.setStatus("current")


class _StaLayeWanl_Type(DisplayString):
    """Custom type staLayeWanl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_StaLayeWanl_Type.__name__ = "DisplayString"
_StaLayeWanl_Object = MibTableColumn
staLayeWanl = _StaLayeWanl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 2),
    _StaLayeWanl_Type()
)
staLayeWanl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeWanl.setStatus("current")


class _StaLayeEnca_Type(Integer32):
    """Custom type staLayeEnca based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ether", 0),
          ("trans", 255))
    )


_StaLayeEnca_Type.__name__ = "Integer32"
_StaLayeEnca_Object = MibTableColumn
staLayeEnca = _StaLayeEnca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 3),
    _StaLayeEnca_Type()
)
staLayeEnca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeEnca.setStatus("current")


class _StaLayeLay3_Type(Integer32):
    """Custom type staLayeLay3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              255)
        )
    )
    namedValues = NamedValues(
        *(("appp", 5),
          ("dhcp", 9),
          ("ppp", 4),
          ("scappp", 7),
          ("scppp", 6),
          ("sctrans", 8),
          ("trans", 255))
    )


_StaLayeLay3_Type.__name__ = "Integer32"
_StaLayeLay3_Object = MibTableColumn
staLayeLay3 = _StaLayeLay3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 4),
    _StaLayeLay3_Type()
)
staLayeLay3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeLay3.setStatus("current")


class _StaLayeLay2_Type(Integer32):
    """Custom type staLayeLay2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("pppoe", 5),
          ("sscop", 6),
          ("trans", 1),
          ("x-75lapb", 0))
    )


_StaLayeLay2_Type.__name__ = "Integer32"
_StaLayeLay2_Object = MibTableColumn
staLayeLay2 = _StaLayeLay2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 5),
    _StaLayeLay2_Type()
)
staLayeLay2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeLay2.setStatus("current")


class _StaLayeL2op_Type(Integer32):
    """Custom type staLayeL2op based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("bnd-plus-cmpr", 2),
          ("bundle", 1),
          ("compr", 0),
          ("none", 255))
    )


_StaLayeL2op_Type.__name__ = "Integer32"
_StaLayeL2op_Object = MibTableColumn
staLayeL2op = _StaLayeL2op_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 6),
    _StaLayeL2op_Type()
)
staLayeL2op.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeL2op.setStatus("current")


class _StaLayeLay1_Type(Integer32):
    """Custom type staLayeLay1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              67,
              131)
        )
    )
    namedValues = NamedValues(
        *(("aal-5", 2),
          ("eth", 4),
          ("hdlc56k", 1),
          ("hdlc64k", 0),
          ("modem", 5),
          ("v110-19k2", 67),
          ("v110-38k4", 131),
          ("v110-9k6", 3))
    )


_StaLayeLay1_Type.__name__ = "Integer32"
_StaLayeLay1_Object = MibTableColumn
staLayeLay1 = _StaLayeLay1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 7),
    _StaLayeLay1_Type()
)
staLayeLay1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeLay1.setStatus("current")


class _StaLayeL1pa_Type(Integer32):
    """Custom type staLayeL1pa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("v-21-300", 1),
          ("v-22-1200", 4),
          ("v-22bis-2400", 5),
          ("v-23-1200", 3),
          ("v-23-600", 2),
          ("v-32bis-12000", 10),
          ("v-32bis-14400", 11),
          ("v-32bis-7200", 8),
          ("v-32qam-4800", 6),
          ("v-32qam-9600", 7),
          ("v-32tcm-9600", 9),
          ("v-34-12000", 16),
          ("v-34-14400", 17),
          ("v-34-16800", 18),
          ("v-34-19200", 19),
          ("v-34-21600", 20),
          ("v-34-2400", 12),
          ("v-34-24000", 21),
          ("v-34-26400", 22),
          ("v-34-28800", 23),
          ("v-34-31200", 24),
          ("v-34-33600", 25),
          ("v-34-4800", 13),
          ("v-34-7200", 14),
          ("v-34-9600", 15),
          ("v-90-28000", 26),
          ("v-90-29333", 27),
          ("v-90-30667", 28),
          ("v-90-32000", 29),
          ("v-90-33333", 30),
          ("v-90-34667", 31),
          ("v-90-36000", 32),
          ("v-90-37333", 33),
          ("v-90-38667", 34),
          ("v-90-40000", 35),
          ("v-90-41333", 36),
          ("v-90-42667", 37),
          ("v-90-44000", 38),
          ("v-90-45333", 39),
          ("v-90-46667", 40),
          ("v-90-48000", 41),
          ("v-90-49333", 42),
          ("v-90-50667", 43),
          ("v-90-52000", 44),
          ("v-90-53333", 45),
          ("v-90-54667", 46),
          ("v-90-56000", 47))
    )


_StaLayeL1pa_Type.__name__ = "Integer32"
_StaLayeL1pa_Object = MibTableColumn
staLayeL1pa = _StaLayeL1pa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 15, 1, 8),
    _StaLayeL1pa_Type()
)
staLayeL1pa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayeL1pa.setStatus("current")
_StaCallTable_Object = MibTable
staCallTable = _StaCallTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16)
)
if mibBuilder.loadTexts:
    staCallTable.setStatus("current")
_StaCallEntry_Object = MibTableRow
staCallEntry = _StaCallEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1)
)
staCallEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCallSys"),
    (0, "LANCOM-1711-MIB", "staCallCou"),
)
if mibBuilder.loadTexts:
    staCallEntry.setStatus("current")


class _StaCallSys_Type(Integer32):
    """Custom type staCallSys based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCallSys_Type.__name__ = "Integer32"
_StaCallSys_Object = MibTableColumn
staCallSys = _StaCallSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 1),
    _StaCallSys_Type()
)
staCallSys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallSys.setStatus("current")


class _StaCallIfc_Type(Integer32):
    """Custom type staCallIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_StaCallIfc_Type.__name__ = "Integer32"
_StaCallIfc_Object = MibTableColumn
staCallIfc = _StaCallIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 2),
    _StaCallIfc_Type()
)
staCallIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallIfc.setStatus("current")


class _StaCallCli_Type(DisplayString):
    """Custom type staCallCli based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaCallCli_Type.__name__ = "DisplayString"
_StaCallCli_Object = MibTableColumn
staCallCli = _StaCallCli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 3),
    _StaCallCli_Type()
)
staCallCli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallCli.setStatus("current")


class _StaCallDia_Type(DisplayString):
    """Custom type staCallDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaCallDia_Type.__name__ = "DisplayString"
_StaCallDia_Object = MibTableColumn
staCallDia = _StaCallDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 4),
    _StaCallDia_Type()
)
staCallDia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallDia.setStatus("current")


class _StaCallCap_Type(Integer32):
    """Custom type staCallCap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              5,
              13,
              14,
              15,
              67,
              131,
              255)
        )
    )
    namedValues = NamedValues(
        *(("a-3-1khz", 13),
          ("fax-g2-3", 15),
          ("hdlc56k", 1),
          ("hdlc64k", 0),
          ("modem", 5),
          ("speech", 14),
          ("unknown", 255),
          ("v110-19k2", 67),
          ("v110-38k4", 131),
          ("v110-9k6", 3))
    )


_StaCallCap_Type.__name__ = "Integer32"
_StaCallCap_Object = MibTableColumn
staCallCap = _StaCallCap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 5),
    _StaCallCap_Type()
)
staCallCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallCap.setStatus("current")


class _StaCallBch_Type(Integer32):
    """Custom type staCallBch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCallBch_Type.__name__ = "Integer32"
_StaCallBch_Object = MibTableColumn
staCallBch = _StaCallBch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 6),
    _StaCallBch_Type()
)
staCallBch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallBch.setStatus("current")


class _StaCallCou_Type(Integer32):
    """Custom type staCallCou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCallCou_Type.__name__ = "Integer32"
_StaCallCou_Object = MibTableColumn
staCallCou = _StaCallCou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 16, 1, 7),
    _StaCallCou_Type()
)
staCallCou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCallCou.setStatus("current")
_StaRemoTable_Object = MibTable
staRemoTable = _StaRemoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17)
)
if mibBuilder.loadTexts:
    staRemoTable.setStatus("current")
_StaRemoEntry_Object = MibTableRow
staRemoEntry = _StaRemoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1)
)
staRemoEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staRemoConns"),
    (0, "LANCOM-1711-MIB", "staRemoCount"),
)
if mibBuilder.loadTexts:
    staRemoEntry.setStatus("current")


class _StaRemoConns_Type(DisplayString):
    """Custom type staRemoConns based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaRemoConns_Type.__name__ = "DisplayString"
_StaRemoConns_Object = MibTableColumn
staRemoConns = _StaRemoConns_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 1),
    _StaRemoConns_Type()
)
staRemoConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoConns.setStatus("current")


class _StaRemoRemot_Type(DisplayString):
    """Custom type staRemoRemot based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaRemoRemot_Type.__name__ = "DisplayString"
_StaRemoRemot_Object = MibTableColumn
staRemoRemot = _StaRemoRemot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 2),
    _StaRemoRemot_Type()
)
staRemoRemot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoRemot.setStatus("current")


class _StaRemoMode_Type(Integer32):
    """Custom type staRemoMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("callback", 9),
          ("passive", 5),
          ("unknown", 0))
    )


_StaRemoMode_Type.__name__ = "Integer32"
_StaRemoMode_Object = MibTableColumn
staRemoMode = _StaRemoMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 3),
    _StaRemoMode_Type()
)
staRemoMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoMode.setStatus("current")


class _StaRemoIfc_Type(Integer32):
    """Custom type staRemoIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaRemoIfc_Type.__name__ = "Integer32"
_StaRemoIfc_Object = MibTableColumn
staRemoIfc = _StaRemoIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 4),
    _StaRemoIfc_Type()
)
staRemoIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoIfc.setStatus("current")


class _StaRemoConnt_Type(DisplayString):
    """Custom type staRemoConnt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaRemoConnt_Type.__name__ = "DisplayString"
_StaRemoConnt_Object = MibTableColumn
staRemoConnt = _StaRemoConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 5),
    _StaRemoConnt_Type()
)
staRemoConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoConnt.setStatus("current")


class _StaRemoCharg_Type(Integer32):
    """Custom type staRemoCharg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaRemoCharg_Type.__name__ = "Integer32"
_StaRemoCharg_Object = MibTableColumn
staRemoCharg = _StaRemoCharg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 6),
    _StaRemoCharg_Type()
)
staRemoCharg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoCharg.setStatus("current")


class _StaRemoCount_Type(Integer32):
    """Custom type staRemoCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaRemoCount_Type.__name__ = "Integer32"
_StaRemoCount_Object = MibTableColumn
staRemoCount = _StaRemoCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 17, 1, 8),
    _StaRemoCount_Type()
)
staRemoCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemoCount.setStatus("current")
_StaCurr_Type = DisplayString
_StaCurr_Object = MibScalar
staCurr = _StaCurr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 18),
    _StaCurr_Type()
)
staCurr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCurr.setStatus("current")
_StaTime_ObjectIdentity = ObjectIdentity
staTime = _StaTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21)
)
_StaTimeCur_Type = DisplayString
_StaTimeCur_Object = MibScalar
staTimeCur = _StaTimeCur_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 1),
    _StaTimeCur_Type()
)
staTimeCur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeCur.setStatus("current")


class _StaTimeSou_Type(Integer32):
    """Custom type staTimeSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("isdn", 2),
          ("lan", 3),
          ("lanconfig", 8),
          ("manual", 1),
          ("no", 0),
          ("ntp", 9),
          ("ram", 4))
    )


_StaTimeSou_Type.__name__ = "Integer32"
_StaTimeSou_Object = MibScalar
staTimeSou = _StaTimeSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 2),
    _StaTimeSou_Type()
)
staTimeSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeSou.setStatus("current")
_StaTimeSet_Type = Counter32
_StaTimeSet_Object = MibScalar
staTimeSet = _StaTimeSet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 3),
    _StaTimeSet_Type()
)
staTimeSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeSet.setStatus("current")
_StaTimeIsd_ObjectIdentity = ObjectIdentity
staTimeIsd = _StaTimeIsd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4)
)
_StaTimeIsdConne_Type = Integer32
_StaTimeIsdConne_Object = MibScalar
staTimeIsdConne = _StaTimeIsdConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 1),
    _StaTimeIsdConne_Type()
)
staTimeIsdConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeIsdConne.setStatus("current")
_StaTimeIsdInfor_Type = Integer32
_StaTimeIsdInfor_Object = MibScalar
staTimeIsdInfor = _StaTimeIsdInfor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 2),
    _StaTimeIsdInfor_Type()
)
staTimeIsdInfor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeIsdInfor.setStatus("current")
_StaTimeIsdInfoe_Type = Integer32
_StaTimeIsdInfoe_Object = MibScalar
staTimeIsdInfoe = _StaTimeIsdInfoe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 3),
    _StaTimeIsdInfoe_Type()
)
staTimeIsdInfoe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeIsdInfoe.setStatus("current")
_StaTimeIsdUnits_Type = Integer32
_StaTimeIsdUnits_Object = MibScalar
staTimeIsdUnits = _StaTimeIsdUnits_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 4),
    _StaTimeIsdUnits_Type()
)
staTimeIsdUnits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeIsdUnits.setStatus("current")
_StaTimeIsdDelet_Type = DisplayString
_StaTimeIsdDelet_Object = MibScalar
staTimeIsdDelet = _StaTimeIsdDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 4, 5),
    _StaTimeIsdDelet_Type()
)
staTimeIsdDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeIsdDelet.setStatus("current")
_StaTimeUtc_Type = Counter32
_StaTimeUtc_Object = MibScalar
staTimeUtc = _StaTimeUtc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 7),
    _StaTimeUtc_Type()
)
staTimeUtc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeUtc.setStatus("current")


class _StaTimeTim_Type(Integer32):
    """Custom type staTimeTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e0", 0),
          ("minus-1", 255),
          ("minus-10", 246),
          ("minus-11", 245),
          ("minus-12", 244),
          ("minus-2", 254),
          ("minus-3", 253),
          ("minus-4", 252),
          ("minus-5", 251),
          ("minus-6", 250),
          ("minus-7", 249),
          ("minus-8", 248),
          ("minus-9", 247),
          ("plus-1", 1),
          ("plus-10", 10),
          ("plus-11", 11),
          ("plus-12", 12),
          ("plus-13", 13),
          ("plus-14", 14),
          ("plus-2", 2),
          ("plus-3", 3),
          ("plus-4", 4),
          ("plus-5", 5),
          ("plus-6", 6),
          ("plus-7", 7),
          ("plus-8", 8),
          ("plus-9", 9))
    )


_StaTimeTim_Type.__name__ = "Integer32"
_StaTimeTim_Object = MibScalar
staTimeTim = _StaTimeTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 10),
    _StaTimeTim_Type()
)
staTimeTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeTim.setStatus("current")


class _StaTimeDay_Type(Integer32):
    """Custom type staTimeDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("europe-eu", 2),
          ("no", 0),
          ("russia", 3),
          ("usa", 4),
          ("user-defined", 255),
          ("yes", 1))
    )


_StaTimeDay_Type.__name__ = "Integer32"
_StaTimeDay_Object = MibScalar
staTimeDay = _StaTimeDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 11),
    _StaTimeDay_Type()
)
staTimeDay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeDay.setStatus("current")
_StaTimeDstTable_Object = MibTable
staTimeDstTable = _StaTimeDstTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12)
)
if mibBuilder.loadTexts:
    staTimeDstTable.setStatus("current")
_StaTimeDstEntry_Object = MibTableRow
staTimeDstEntry = _StaTimeDstEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1)
)
staTimeDstEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staTimeDstEve"),
)
if mibBuilder.loadTexts:
    staTimeDstEntry.setStatus("current")


class _StaTimeDstEve_Type(Integer32):
    """Custom type staTimeDstEve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("end", 2),
          ("start", 1))
    )


_StaTimeDstEve_Type.__name__ = "Integer32"
_StaTimeDstEve_Object = MibTableColumn
staTimeDstEve = _StaTimeDstEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 1),
    _StaTimeDstEve_Type()
)
staTimeDstEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeDstEve.setStatus("current")


class _StaTimeDstInd_Type(Integer32):
    """Custom type staTimeDstInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e2-last", 254),
          ("e3-last", 253),
          ("e4-last", 252),
          ("first", 1),
          ("fourth", 4),
          ("last", 255),
          ("second", 2),
          ("third", 3))
    )


_StaTimeDstInd_Type.__name__ = "Integer32"
_StaTimeDstInd_Object = MibTableColumn
staTimeDstInd = _StaTimeDstInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 2),
    _StaTimeDstInd_Type()
)
staTimeDstInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstInd.setStatus("current")


class _StaTimeDstDay_Type(Integer32):
    """Custom type staTimeDstDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("friday", 5),
          ("monday", 1),
          ("saturday", 6),
          ("sunday", 0),
          ("thursday", 4),
          ("tuesday", 2),
          ("wednesday", 3))
    )


_StaTimeDstDay_Type.__name__ = "Integer32"
_StaTimeDstDay_Object = MibTableColumn
staTimeDstDay = _StaTimeDstDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 3),
    _StaTimeDstDay_Type()
)
staTimeDstDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstDay.setStatus("current")


class _StaTimeDstMon_Type(Integer32):
    """Custom type staTimeDstMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("april", 4),
          ("august", 8),
          ("december", 12),
          ("february", 2),
          ("january", 1),
          ("july", 7),
          ("june", 6),
          ("march", 3),
          ("may", 5),
          ("november", 11),
          ("october", 10),
          ("september", 9))
    )


_StaTimeDstMon_Type.__name__ = "Integer32"
_StaTimeDstMon_Object = MibTableColumn
staTimeDstMon = _StaTimeDstMon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 4),
    _StaTimeDstMon_Type()
)
staTimeDstMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstMon.setStatus("current")


class _StaTimeDstHou_Type(Integer32):
    """Custom type staTimeDstHou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaTimeDstHou_Type.__name__ = "Integer32"
_StaTimeDstHou_Object = MibTableColumn
staTimeDstHou = _StaTimeDstHou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 5),
    _StaTimeDstHou_Type()
)
staTimeDstHou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstHou.setStatus("current")


class _StaTimeDstMin_Type(Integer32):
    """Custom type staTimeDstMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaTimeDstMin_Type.__name__ = "Integer32"
_StaTimeDstMin_Object = MibTableColumn
staTimeDstMin = _StaTimeDstMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 6),
    _StaTimeDstMin_Type()
)
staTimeDstMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstMin.setStatus("current")


class _StaTimeDstTim_Type(Integer32):
    """Custom type staTimeDstTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("lst", 0),
          ("utc", 1))
    )


_StaTimeDstTim_Type.__name__ = "Integer32"
_StaTimeDstTim_Object = MibTableColumn
staTimeDstTim = _StaTimeDstTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 21, 12, 1, 7),
    _StaTimeDstTim_Type()
)
staTimeDstTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstTim.setStatus("current")
_StaLcr_ObjectIdentity = ObjectIdentity
staLcr = _StaLcr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22)
)
_StaLcrTot_Type = Counter32
_StaLcrTot_Object = MibScalar
staLcrTot = _StaLcrTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 1),
    _StaLcrTot_Type()
)
staLcrTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrTot.setStatus("current")
_StaLcrFou_Type = Counter32
_StaLcrFou_Object = MibScalar
staLcrFou = _StaLcrFou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 2),
    _StaLcrFou_Type()
)
staLcrFou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrFou.setStatus("current")
_StaLcrNot_Type = Counter32
_StaLcrNot_Object = MibScalar
staLcrNot = _StaLcrNot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 3),
    _StaLcrNot_Type()
)
staLcrNot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrNot.setStatus("current")
_StaLcrMis_Type = Counter32
_StaLcrMis_Object = MibScalar
staLcrMis = _StaLcrMis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 4),
    _StaLcrMis_Type()
)
staLcrMis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrMis.setStatus("current")
_StaLcrProTable_Object = MibTable
staLcrProTable = _StaLcrProTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6)
)
if mibBuilder.loadTexts:
    staLcrProTable.setStatus("current")
_StaLcrProEntry_Object = MibTableRow
staLcrProEntry = _StaLcrProEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1)
)
staLcrProEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staLcrProPro"),
)
if mibBuilder.loadTexts:
    staLcrProEntry.setStatus("current")


class _StaLcrProPro_Type(DisplayString):
    """Custom type staLcrProPro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_StaLcrProPro_Type.__name__ = "DisplayString"
_StaLcrProPro_Object = MibTableColumn
staLcrProPro = _StaLcrProPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 1),
    _StaLcrProPro_Type()
)
staLcrProPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrProPro.setStatus("current")


class _StaLcrProFai_Type(Integer32):
    """Custom type staLcrProFai based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLcrProFai_Type.__name__ = "Integer32"
_StaLcrProFai_Object = MibTableColumn
staLcrProFai = _StaLcrProFai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 2),
    _StaLcrProFai_Type()
)
staLcrProFai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrProFai.setStatus("current")


class _StaLcrProSuc_Type(Integer32):
    """Custom type staLcrProSuc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLcrProSuc_Type.__name__ = "Integer32"
_StaLcrProSuc_Object = MibTableColumn
staLcrProSuc = _StaLcrProSuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 6, 1, 3),
    _StaLcrProSuc_Type()
)
staLcrProSuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrProSuc.setStatus("current")
_StaLcrDel_Type = DisplayString
_StaLcrDel_Object = MibScalar
staLcrDel = _StaLcrDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 22, 7),
    _StaLcrDel_Type()
)
staLcrDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staLcrDel.setStatus("current")
_StaChar_ObjectIdentity = ObjectIdentity
staChar = _StaChar_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24)
)
_StaCharSpareds_Type = Integer32
_StaCharSpareds_Object = MibScalar
staCharSpareds = _StaCharSpareds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 1),
    _StaCharSpareds_Type()
)
staCharSpareds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharSpareds.setStatus("current")
_StaCharTimetabTable_Object = MibTable
staCharTimetabTable = _StaCharTimetabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2)
)
if mibBuilder.loadTexts:
    staCharTimetabTable.setStatus("current")
_StaCharTimetabEntry_Object = MibTableRow
staCharTimetabEntry = _StaCharTimetabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1)
)
staCharTimetabEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCharTimetabIfc"),
)
if mibBuilder.loadTexts:
    staCharTimetabEntry.setStatus("current")


class _StaCharTimetabIfc_Type(Integer32):
    """Custom type staCharTimetabIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ab-1", 4),
          ("ab-2", 5),
          ("ab-3", 6),
          ("ab-4", 7),
          ("lancapi", 3),
          ("router-dsl-broadband", 1),
          ("router-isdn-serial", 2),
          ("time-modul", 255))
    )


_StaCharTimetabIfc_Type.__name__ = "Integer32"
_StaCharTimetabIfc_Object = MibTableColumn
staCharTimetabIfc = _StaCharTimetabIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 1),
    _StaCharTimetabIfc_Type()
)
staCharTimetabIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTimetabIfc.setStatus("current")


class _StaCharTimetabBudgetmi_Type(Integer32):
    """Custom type staCharTimetabBudgetmi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCharTimetabBudgetmi_Type.__name__ = "Integer32"
_StaCharTimetabBudgetmi_Object = MibTableColumn
staCharTimetabBudgetmi = _StaCharTimetabBudgetmi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 2),
    _StaCharTimetabBudgetmi_Type()
)
staCharTimetabBudgetmi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTimetabBudgetmi.setStatus("current")


class _StaCharTimetabSparemin_Type(Integer32):
    """Custom type staCharTimetabSparemin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCharTimetabSparemin_Type.__name__ = "Integer32"
_StaCharTimetabSparemin_Object = MibTableColumn
staCharTimetabSparemin = _StaCharTimetabSparemin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 3),
    _StaCharTimetabSparemin_Type()
)
staCharTimetabSparemin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTimetabSparemin.setStatus("current")


class _StaCharTimetabMinutesa_Type(Integer32):
    """Custom type staCharTimetabMinutesa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCharTimetabMinutesa_Type.__name__ = "Integer32"
_StaCharTimetabMinutesa_Object = MibTableColumn
staCharTimetabMinutesa = _StaCharTimetabMinutesa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 4),
    _StaCharTimetabMinutesa_Type()
)
staCharTimetabMinutesa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTimetabMinutesa.setStatus("current")


class _StaCharTimetabMinutesp_Type(Integer32):
    """Custom type staCharTimetabMinutesp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCharTimetabMinutesp_Type.__name__ = "Integer32"
_StaCharTimetabMinutesp_Object = MibTableColumn
staCharTimetabMinutesp = _StaCharTimetabMinutesp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 2, 1, 5),
    _StaCharTimetabMinutesp_Type()
)
staCharTimetabMinutesp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTimetabMinutesp.setStatus("current")
_StaCharDeletev_Type = DisplayString
_StaCharDeletev_Object = MibScalar
staCharDeletev = _StaCharDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 3),
    _StaCharDeletev_Type()
)
staCharDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staCharDeletev.setStatus("current")
_StaCharSpareun_Type = Integer32
_StaCharSpareun_Object = MibScalar
staCharSpareun = _StaCharSpareun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 4),
    _StaCharSpareun_Type()
)
staCharSpareun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharSpareun.setStatus("current")
_StaCharTablebuTable_Object = MibTable
staCharTablebuTable = _StaCharTablebuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5)
)
if mibBuilder.loadTexts:
    staCharTablebuTable.setStatus("current")
_StaCharTablebuEntry_Object = MibTableRow
staCharTablebuEntry = _StaCharTablebuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1)
)
staCharTablebuEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCharTablebuIfc"),
)
if mibBuilder.loadTexts:
    staCharTablebuEntry.setStatus("current")


class _StaCharTablebuIfc_Type(Integer32):
    """Custom type staCharTablebuIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ab-1", 3),
          ("ab-2", 4),
          ("ab-3", 5),
          ("ab-4", 6),
          ("lancapi", 2),
          ("router-isdn-serial", 1),
          ("time-modul", 255))
    )


_StaCharTablebuIfc_Type.__name__ = "Integer32"
_StaCharTablebuIfc_Object = MibTableColumn
staCharTablebuIfc = _StaCharTablebuIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 1),
    _StaCharTablebuIfc_Type()
)
staCharTablebuIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTablebuIfc.setStatus("current")


class _StaCharTablebuBud_Type(Integer32):
    """Custom type staCharTablebuBud based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCharTablebuBud_Type.__name__ = "Integer32"
_StaCharTablebuBud_Object = MibTableColumn
staCharTablebuBud = _StaCharTablebuBud_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 2),
    _StaCharTablebuBud_Type()
)
staCharTablebuBud.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTablebuBud.setStatus("current")


class _StaCharTablebuSpa_Type(Integer32):
    """Custom type staCharTablebuSpa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCharTablebuSpa_Type.__name__ = "Integer32"
_StaCharTablebuSpa_Object = MibTableColumn
staCharTablebuSpa = _StaCharTablebuSpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 3),
    _StaCharTablebuSpa_Type()
)
staCharTablebuSpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTablebuSpa.setStatus("current")


class _StaCharTablebuTot_Type(Integer32):
    """Custom type staCharTablebuTot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCharTablebuTot_Type.__name__ = "Integer32"
_StaCharTablebuTot_Object = MibTableColumn
staCharTablebuTot = _StaCharTablebuTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 5, 1, 4),
    _StaCharTablebuTot_Type()
)
staCharTablebuTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTablebuTot.setStatus("current")
_StaCharSpareda_Type = Integer32
_StaCharSpareda_Object = MibScalar
staCharSpareda = _StaCharSpareda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 6),
    _StaCharSpareda_Type()
)
staCharSpareda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharSpareda.setStatus("current")
_StaCharRouteru_Type = Integer32
_StaCharRouteru_Object = MibScalar
staCharRouteru = _StaCharRouteru_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 7),
    _StaCharRouteru_Type()
)
staCharRouteru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharRouteru.setStatus("current")
_StaCharTotalun_Type = Integer32
_StaCharTotalun_Object = MibScalar
staCharTotalun = _StaCharTotalun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 8),
    _StaCharTotalun_Type()
)
staCharTotalun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharTotalun.setStatus("current")
_StaCharRouterd_Type = Integer32
_StaCharRouterd_Object = MibScalar
staCharRouterd = _StaCharRouterd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 9),
    _StaCharRouterd_Type()
)
staCharRouterd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharRouterd.setStatus("current")
_StaCharSparedi_Type = Integer32
_StaCharSparedi_Object = MibScalar
staCharSparedi = _StaCharSparedi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 10),
    _StaCharSparedi_Type()
)
staCharSparedi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharSparedi.setStatus("current")
_StaCharRouteri_Type = Integer32
_StaCharRouteri_Object = MibScalar
staCharRouteri = _StaCharRouteri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 24, 11),
    _StaCharRouteri_Type()
)
staCharRouteri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCharRouteri.setStatus("current")
_StaDsl_ObjectIdentity = ObjectIdentity
staDsl = _StaDsl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25)
)
_StaDslIntTable_Object = MibTable
staDslIntTable = _StaDslIntTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1)
)
if mibBuilder.loadTexts:
    staDslIntTable.setStatus("current")
_StaDslIntEntry_Object = MibTableRow
staDslIntEntry = _StaDslIntEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1)
)
staDslIntEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staDslIntIfc"),
)
if mibBuilder.loadTexts:
    staDslIntEntry.setStatus("current")


class _StaDslIntIfc_Type(DisplayString):
    """Custom type staDslIntIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDslIntIfc_Type.__name__ = "DisplayString"
_StaDslIntIfc_Object = MibTableColumn
staDslIntIfc = _StaDslIntIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1, 1),
    _StaDslIntIfc_Type()
)
staDslIntIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslIntIfc.setStatus("current")


class _StaDslIntLin_Type(Integer32):
    """Custom type staDslIntLin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaDslIntLin_Type.__name__ = "Integer32"
_StaDslIntLin_Object = MibTableColumn
staDslIntLin = _StaDslIntLin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 1, 1, 3),
    _StaDslIntLin_Type()
)
staDslIntLin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslIntLin.setStatus("current")
_StaDslBytTable_Object = MibTable
staDslBytTable = _StaDslBytTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2)
)
if mibBuilder.loadTexts:
    staDslBytTable.setStatus("current")
_StaDslBytEntry_Object = MibTableRow
staDslBytEntry = _StaDslBytEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1)
)
staDslBytEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staDslBytIfc"),
)
if mibBuilder.loadTexts:
    staDslBytEntry.setStatus("current")


class _StaDslBytIfc_Type(DisplayString):
    """Custom type staDslBytIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDslBytIfc_Type.__name__ = "DisplayString"
_StaDslBytIfc_Object = MibTableColumn
staDslBytIfc = _StaDslBytIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 1),
    _StaDslBytIfc_Type()
)
staDslBytIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslBytIfc.setStatus("current")
_StaDslBytTxb_Type = Counter64
_StaDslBytTxb_Object = MibTableColumn
staDslBytTxb = _StaDslBytTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 2),
    _StaDslBytTxb_Type()
)
staDslBytTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslBytTxb.setStatus("current")
_StaDslBytRxb_Type = Counter64
_StaDslBytRxb_Object = MibTableColumn
staDslBytRxb = _StaDslBytRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 2, 1, 3),
    _StaDslBytRxb_Type()
)
staDslBytRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslBytRxb.setStatus("current")
_StaDslPacTable_Object = MibTable
staDslPacTable = _StaDslPacTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3)
)
if mibBuilder.loadTexts:
    staDslPacTable.setStatus("current")
_StaDslPacEntry_Object = MibTableRow
staDslPacEntry = _StaDslPacEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1)
)
staDslPacEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staDslPacIfc"),
)
if mibBuilder.loadTexts:
    staDslPacEntry.setStatus("current")


class _StaDslPacIfc_Type(DisplayString):
    """Custom type staDslPacIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDslPacIfc_Type.__name__ = "DisplayString"
_StaDslPacIfc_Object = MibTableColumn
staDslPacIfc = _StaDslPacIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 1),
    _StaDslPacIfc_Type()
)
staDslPacIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacIfc.setStatus("current")
_StaDslPacRxp_Type = Counter32
_StaDslPacRxp_Object = MibTableColumn
staDslPacRxp = _StaDslPacRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 2),
    _StaDslPacRxp_Type()
)
staDslPacRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacRxp.setStatus("current")
_StaDslPacTxp_Type = Counter32
_StaDslPacTxp_Object = MibTableColumn
staDslPacTxp = _StaDslPacTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 3),
    _StaDslPacTxp_Type()
)
staDslPacTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacTxp.setStatus("current")
_StaDslPacRxb_Type = Counter32
_StaDslPacRxb_Object = MibTableColumn
staDslPacRxb = _StaDslPacRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 4),
    _StaDslPacRxb_Type()
)
staDslPacRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacRxb.setStatus("current")
_StaDslPacRxm_Type = Counter32
_StaDslPacRxm_Object = MibTableColumn
staDslPacRxm = _StaDslPacRxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 5),
    _StaDslPacRxm_Type()
)
staDslPacRxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacRxm.setStatus("current")
_StaDslPacRxu_Type = Counter32
_StaDslPacRxu_Object = MibTableColumn
staDslPacRxu = _StaDslPacRxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 6),
    _StaDslPacRxu_Type()
)
staDslPacRxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacRxu.setStatus("current")
_StaDslPacTxb_Type = Counter32
_StaDslPacTxb_Object = MibTableColumn
staDslPacTxb = _StaDslPacTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 7),
    _StaDslPacTxb_Type()
)
staDslPacTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacTxb.setStatus("current")
_StaDslPacTxm_Type = Counter32
_StaDslPacTxm_Object = MibTableColumn
staDslPacTxm = _StaDslPacTxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 8),
    _StaDslPacTxm_Type()
)
staDslPacTxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacTxm.setStatus("current")
_StaDslPacTxu_Type = Counter32
_StaDslPacTxu_Object = MibTableColumn
staDslPacTxu = _StaDslPacTxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 3, 1, 9),
    _StaDslPacTxu_Type()
)
staDslPacTxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPacTxu.setStatus("current")
_StaDslErrTable_Object = MibTable
staDslErrTable = _StaDslErrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4)
)
if mibBuilder.loadTexts:
    staDslErrTable.setStatus("current")
_StaDslErrEntry_Object = MibTableRow
staDslErrEntry = _StaDslErrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1)
)
staDslErrEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staDslErrIfc"),
)
if mibBuilder.loadTexts:
    staDslErrEntry.setStatus("current")


class _StaDslErrIfc_Type(DisplayString):
    """Custom type staDslErrIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDslErrIfc_Type.__name__ = "DisplayString"
_StaDslErrIfc_Object = MibTableColumn
staDslErrIfc = _StaDslErrIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 1),
    _StaDslErrIfc_Type()
)
staDslErrIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrIfc.setStatus("current")
_StaDslErrRxerro_Type = Counter32
_StaDslErrRxerro_Object = MibTableColumn
staDslErrRxerro = _StaDslErrRxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 2),
    _StaDslErrRxerro_Type()
)
staDslErrRxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrRxerro.setStatus("current")
_StaDslErrTxerro_Type = Counter32
_StaDslErrTxerro_Object = MibTableColumn
staDslErrTxerro = _StaDslErrTxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 3),
    _StaDslErrTxerro_Type()
)
staDslErrTxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrTxerro.setStatus("current")
_StaDslErrStacke_Type = Counter32
_StaDslErrStacke_Object = MibTableColumn
staDslErrStacke = _StaDslErrStacke_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 4),
    _StaDslErrStacke_Type()
)
staDslErrStacke.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrStacke.setStatus("current")
_StaDslErrNicerr_Type = Counter32
_StaDslErrNicerr_Object = MibTableColumn
staDslErrNicerr = _StaDslErrNicerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 5),
    _StaDslErrNicerr_Type()
)
staDslErrNicerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrNicerr.setStatus("current")
_StaDslErrQueuee_Type = Counter32
_StaDslErrQueuee_Object = MibTableColumn
staDslErrQueuee = _StaDslErrQueuee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 6),
    _StaDslErrQueuee_Type()
)
staDslErrQueuee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrQueuee.setStatus("current")
_StaDslErrRxcrce_Type = Counter32
_StaDslErrRxcrce_Object = MibTableColumn
staDslErrRxcrce = _StaDslErrRxcrce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 7),
    _StaDslErrRxcrce_Type()
)
staDslErrRxcrce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrRxcrce.setStatus("current")
_StaDslErrCollis_Type = Counter32
_StaDslErrCollis_Object = MibTableColumn
staDslErrCollis = _StaDslErrCollis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 8),
    _StaDslErrCollis_Type()
)
staDslErrCollis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrCollis.setStatus("current")
_StaDslErrSingle_Type = Counter32
_StaDslErrSingle_Object = MibTableColumn
staDslErrSingle = _StaDslErrSingle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 9),
    _StaDslErrSingle_Type()
)
staDslErrSingle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrSingle.setStatus("current")
_StaDslErrMultip_Type = Counter32
_StaDslErrMultip_Object = MibTableColumn
staDslErrMultip = _StaDslErrMultip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 10),
    _StaDslErrMultip_Type()
)
staDslErrMultip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrMultip.setStatus("current")
_StaDslErrLateco_Type = Counter32
_StaDslErrLateco_Object = MibTableColumn
staDslErrLateco = _StaDslErrLateco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 11),
    _StaDslErrLateco_Type()
)
staDslErrLateco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrLateco.setStatus("current")
_StaDslErrExcess_Type = Counter32
_StaDslErrExcess_Object = MibTableColumn
staDslErrExcess = _StaDslErrExcess_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 12),
    _StaDslErrExcess_Type()
)
staDslErrExcess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrExcess.setStatus("current")
_StaDslErrRxalig_Type = Counter32
_StaDslErrRxalig_Object = MibTableColumn
staDslErrRxalig = _StaDslErrRxalig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 13),
    _StaDslErrRxalig_Type()
)
staDslErrRxalig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrRxalig.setStatus("current")
_StaDslErrRxtoos_Type = Counter32
_StaDslErrRxtoos_Object = MibTableColumn
staDslErrRxtoos = _StaDslErrRxtoos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 14),
    _StaDslErrRxtoos_Type()
)
staDslErrRxtoos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrRxtoos.setStatus("current")
_StaDslErrRxtool_Type = Counter32
_StaDslErrRxtool_Object = MibTableColumn
staDslErrRxtool = _StaDslErrRxtool_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 15),
    _StaDslErrRxtool_Type()
)
staDslErrRxtool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrRxtool.setStatus("current")
_StaDslErrTxcarr_Type = Counter32
_StaDslErrTxcarr_Object = MibTableColumn
staDslErrTxcarr = _StaDslErrTxcarr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 16),
    _StaDslErrTxcarr_Type()
)
staDslErrTxcarr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrTxcarr.setStatus("current")
_StaDslErrTxdefe_Type = Counter32
_StaDslErrTxdefe_Object = MibTableColumn
staDslErrTxdefe = _StaDslErrTxdefe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 4, 1, 17),
    _StaDslErrTxdefe_Type()
)
staDslErrTxdefe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslErrTxdefe.setStatus("current")
_StaDslPpp_ObjectIdentity = ObjectIdentity
staDslPpp = _StaDslPpp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23)
)
_StaDslPppTxpadi_Type = Integer32
_StaDslPppTxpadi_Object = MibScalar
staDslPppTxpadi = _StaDslPppTxpadi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 1),
    _StaDslPppTxpadi_Type()
)
staDslPppTxpadi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppTxpadi.setStatus("current")
_StaDslPppRxpado_Type = Integer32
_StaDslPppRxpado_Object = MibScalar
staDslPppRxpado = _StaDslPppRxpado_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 2),
    _StaDslPppRxpado_Type()
)
staDslPppRxpado.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppRxpado.setStatus("current")
_StaDslPppTxpadr_Type = Integer32
_StaDslPppTxpadr_Object = MibScalar
staDslPppTxpadr = _StaDslPppTxpadr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 3),
    _StaDslPppTxpadr_Type()
)
staDslPppTxpadr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppTxpadr.setStatus("current")
_StaDslPppRxpads_Type = Integer32
_StaDslPppRxpads_Object = MibScalar
staDslPppRxpads = _StaDslPppRxpads_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 4),
    _StaDslPppRxpads_Type()
)
staDslPppRxpads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppRxpads.setStatus("current")
_StaDslPppTxpadt_Type = Integer32
_StaDslPppTxpadt_Object = MibScalar
staDslPppTxpadt = _StaDslPppTxpadt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 5),
    _StaDslPppTxpadt_Type()
)
staDslPppTxpadt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppTxpadt.setStatus("current")
_StaDslPppRxpadt_Type = Integer32
_StaDslPppRxpadt_Object = MibScalar
staDslPppRxpadt = _StaDslPppRxpadt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 6),
    _StaDslPppRxpadt_Type()
)
staDslPppRxpadt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppRxpadt.setStatus("current")
_StaDslPppTxprot_Type = Integer32
_StaDslPppTxprot_Object = MibScalar
staDslPppTxprot = _StaDslPppTxprot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 7),
    _StaDslPppTxprot_Type()
)
staDslPppTxprot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppTxprot.setStatus("current")
_StaDslPppRxprot_Type = Integer32
_StaDslPppRxprot_Object = MibScalar
staDslPppRxprot = _StaDslPppRxprot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 8),
    _StaDslPppRxprot_Type()
)
staDslPppRxprot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppRxprot.setStatus("current")
_StaDslPppTxdata_Type = Integer32
_StaDslPppTxdata_Object = MibScalar
staDslPppTxdata = _StaDslPppTxdata_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 9),
    _StaDslPppTxdata_Type()
)
staDslPppTxdata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppTxdata.setStatus("current")
_StaDslPppRxdata_Type = Integer32
_StaDslPppRxdata_Object = MibScalar
staDslPppRxdata = _StaDslPppRxdata_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 10),
    _StaDslPppRxdata_Type()
)
staDslPppRxdata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppRxdata.setStatus("current")
_StaDslPppRxbad_Type = Integer32
_StaDslPppRxbad_Object = MibScalar
staDslPppRxbad = _StaDslPppRxbad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 11),
    _StaDslPppRxbad_Type()
)
staDslPppRxbad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppRxbad.setStatus("current")


class _StaDslPppAcname_Type(DisplayString):
    """Custom type staDslPppAcname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaDslPppAcname_Type.__name__ = "DisplayString"
_StaDslPppAcname_Object = MibScalar
staDslPppAcname = _StaDslPppAcname_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 12),
    _StaDslPppAcname_Type()
)
staDslPppAcname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppAcname.setStatus("current")


class _StaDslPppServic_Type(DisplayString):
    """Custom type staDslPppServic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaDslPppServic_Type.__name__ = "DisplayString"
_StaDslPppServic_Object = MibScalar
staDslPppServic = _StaDslPppServic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 13),
    _StaDslPppServic_Type()
)
staDslPppServic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppServic.setStatus("current")
_StaDslPppDelete_Type = DisplayString
_StaDslPppDelete_Object = MibScalar
staDslPppDelete = _StaDslPppDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 23, 30),
    _StaDslPppDelete_Type()
)
staDslPppDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staDslPppDelete.setStatus("current")
_StaDslDel_Type = DisplayString
_StaDslDel_Object = MibScalar
staDslDel = _StaDslDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 25, 30),
    _StaDslDel_Type()
)
staDslDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staDslDel.setStatus("current")
_StaVpn_ObjectIdentity = ObjectIdentity
staVpn = _StaVpn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26)
)
_StaVpnPeers_Type = Integer32
_StaVpnPeers_Object = MibScalar
staVpnPeers = _StaVpnPeers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 1),
    _StaVpnPeers_Type()
)
staVpnPeers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnPeers.setStatus("current")
_StaVpnRules_Type = Integer32
_StaVpnRules_Object = MibScalar
staVpnRules = _StaVpnRules_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 2),
    _StaVpnRules_Type()
)
staVpnRules.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnRules.setStatus("current")
_StaVpnTunnel_Type = Integer32
_StaVpnTunnel_Object = MibScalar
staVpnTunnel = _StaVpnTunnel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 4),
    _StaVpnTunnel_Type()
)
staVpnTunnel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnTunnel.setStatus("current")
_StaVpnIkesas_Type = Integer32
_StaVpnIkesas_Object = MibScalar
staVpnIkesas = _StaVpnIkesas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 5),
    _StaVpnIkesas_Type()
)
staVpnIkesas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkesas.setStatus("current")
_StaVpnEspsas_Type = Integer32
_StaVpnEspsas_Object = MibScalar
staVpnEspsas = _StaVpnEspsas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 6),
    _StaVpnEspsas_Type()
)
staVpnEspsas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspsas.setStatus("current")
_StaVpnAhsas_Type = Integer32
_StaVpnAhsas_Object = MibScalar
staVpnAhsas = _StaVpnAhsas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 7),
    _StaVpnAhsas_Type()
)
staVpnAhsas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhsas.setStatus("current")
_StaVpnIkeTable_Object = MibTable
staVpnIkeTable = _StaVpnIkeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8)
)
if mibBuilder.loadTexts:
    staVpnIkeTable.setStatus("current")
_StaVpnIkeEntry_Object = MibTableRow
staVpnIkeEntry = _StaVpnIkeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1)
)
staVpnIkeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVpnIkeIdx"),
)
if mibBuilder.loadTexts:
    staVpnIkeEntry.setStatus("current")


class _StaVpnIkeIdx_Type(DisplayString):
    """Custom type staVpnIkeIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_StaVpnIkeIdx_Type.__name__ = "DisplayString"
_StaVpnIkeIdx_Object = MibTableColumn
staVpnIkeIdx = _StaVpnIkeIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 1),
    _StaVpnIkeIdx_Type()
)
staVpnIkeIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeIdx.setStatus("current")


class _StaVpnIkePeer_Type(DisplayString):
    """Custom type staVpnIkePeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnIkePeer_Type.__name__ = "DisplayString"
_StaVpnIkePeer_Object = MibTableColumn
staVpnIkePeer = _StaVpnIkePeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 2),
    _StaVpnIkePeer_Type()
)
staVpnIkePeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkePeer.setStatus("current")
_StaVpnIkeDesta_Type = IpAddress
_StaVpnIkeDesta_Object = MibTableColumn
staVpnIkeDesta = _StaVpnIkeDesta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 3),
    _StaVpnIkeDesta_Type()
)
staVpnIkeDesta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeDesta.setStatus("current")
_StaVpnIkeSrcad_Type = IpAddress
_StaVpnIkeSrcad_Object = MibTableColumn
staVpnIkeSrcad = _StaVpnIkeSrcad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 4),
    _StaVpnIkeSrcad_Type()
)
staVpnIkeSrcad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeSrcad.setStatus("current")


class _StaVpnIkeCrypt_Type(DisplayString):
    """Custom type staVpnIkeCrypt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnIkeCrypt_Type.__name__ = "DisplayString"
_StaVpnIkeCrypt_Object = MibTableColumn
staVpnIkeCrypt = _StaVpnIkeCrypt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 5),
    _StaVpnIkeCrypt_Type()
)
staVpnIkeCrypt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeCrypt.setStatus("current")


class _StaVpnIkeHasha_Type(DisplayString):
    """Custom type staVpnIkeHasha based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnIkeHasha_Type.__name__ = "DisplayString"
_StaVpnIkeHasha_Object = MibTableColumn
staVpnIkeHasha = _StaVpnIkeHasha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 6),
    _StaVpnIkeHasha_Type()
)
staVpnIkeHasha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeHasha.setStatus("current")


class _StaVpnIkeAge_Type(Integer32):
    """Custom type staVpnIkeAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIkeAge_Type.__name__ = "Integer32"
_StaVpnIkeAge_Object = MibTableColumn
staVpnIkeAge = _StaVpnIkeAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 8),
    _StaVpnIkeAge_Type()
)
staVpnIkeAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeAge.setStatus("current")


class _StaVpnIkeIniti_Type(DisplayString):
    """Custom type staVpnIkeIniti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_StaVpnIkeIniti_Type.__name__ = "DisplayString"
_StaVpnIkeIniti_Object = MibTableColumn
staVpnIkeIniti = _StaVpnIkeIniti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 9),
    _StaVpnIkeIniti_Type()
)
staVpnIkeIniti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeIniti.setStatus("current")


class _StaVpnIkeSofts_Type(Integer32):
    """Custom type staVpnIkeSofts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIkeSofts_Type.__name__ = "Integer32"
_StaVpnIkeSofts_Object = MibTableColumn
staVpnIkeSofts = _StaVpnIkeSofts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 10),
    _StaVpnIkeSofts_Type()
)
staVpnIkeSofts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeSofts.setStatus("current")


class _StaVpnIkeMaxse_Type(Integer32):
    """Custom type staVpnIkeMaxse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIkeMaxse_Type.__name__ = "Integer32"
_StaVpnIkeMaxse_Object = MibTableColumn
staVpnIkeMaxse = _StaVpnIkeMaxse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 11),
    _StaVpnIkeMaxse_Type()
)
staVpnIkeMaxse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeMaxse.setStatus("current")


class _StaVpnIkeKbyte_Type(Integer32):
    """Custom type staVpnIkeKbyte based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIkeKbyte_Type.__name__ = "Integer32"
_StaVpnIkeKbyte_Object = MibTableColumn
staVpnIkeKbyte = _StaVpnIkeKbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 12),
    _StaVpnIkeKbyte_Type()
)
staVpnIkeKbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeKbyte.setStatus("current")


class _StaVpnIkeSoftk_Type(Integer32):
    """Custom type staVpnIkeSoftk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIkeSoftk_Type.__name__ = "Integer32"
_StaVpnIkeSoftk_Object = MibTableColumn
staVpnIkeSoftk = _StaVpnIkeSoftk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 13),
    _StaVpnIkeSoftk_Type()
)
staVpnIkeSoftk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeSoftk.setStatus("current")


class _StaVpnIkeMaxkb_Type(Integer32):
    """Custom type staVpnIkeMaxkb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIkeMaxkb_Type.__name__ = "Integer32"
_StaVpnIkeMaxkb_Object = MibTableColumn
staVpnIkeMaxkb = _StaVpnIkeMaxkb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 14),
    _StaVpnIkeMaxkb_Type()
)
staVpnIkeMaxkb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeMaxkb.setStatus("current")


class _StaVpnIkeIkeau_Type(Integer32):
    """Custom type staVpnIkeIkeau based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              65001,
              65002,
              65003,
              65004,
              65005,
              65006)
        )
    )
    namedValues = NamedValues(
        *(("dss", 2),
          ("dss-init-xauth", 65003),
          ("dss-resp-xauth", 65004),
          ("ecdsa-sig", 8),
          ("el-gamal-enc", 6),
          ("el-gamal-enc-rev", 7),
          ("no", 0),
          ("pre-shared", 1),
          ("pre-shared-init-xauth", 65001),
          ("pre-shared-resp-xauth", 65002),
          ("rsa-enc", 4),
          ("rsa-enc-rev", 5),
          ("rsa-init-xauth", 65005),
          ("rsa-resp-xauth", 65006),
          ("rsa-sig", 3))
    )


_StaVpnIkeIkeau_Type.__name__ = "Integer32"
_StaVpnIkeIkeau_Object = MibTableColumn
staVpnIkeIkeau = _StaVpnIkeIkeau_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 15),
    _StaVpnIkeIkeau_Type()
)
staVpnIkeIkeau.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeIkeau.setStatus("current")


class _StaVpnIkeDstpo_Type(Integer32):
    """Custom type staVpnIkeDstpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnIkeDstpo_Type.__name__ = "Integer32"
_StaVpnIkeDstpo_Object = MibTableColumn
staVpnIkeDstpo = _StaVpnIkeDstpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 16),
    _StaVpnIkeDstpo_Type()
)
staVpnIkeDstpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeDstpo.setStatus("current")


class _StaVpnIkeSrcpo_Type(Integer32):
    """Custom type staVpnIkeSrcpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnIkeSrcpo_Type.__name__ = "Integer32"
_StaVpnIkeSrcpo_Object = MibTableColumn
staVpnIkeSrcpo = _StaVpnIkeSrcpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 8, 1, 17),
    _StaVpnIkeSrcpo_Type()
)
staVpnIkeSrcpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIkeSrcpo.setStatus("current")
_StaVpnEspTable_Object = MibTable
staVpnEspTable = _StaVpnEspTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9)
)
if mibBuilder.loadTexts:
    staVpnEspTable.setStatus("current")
_StaVpnEspEntry_Object = MibTableRow
staVpnEspEntry = _StaVpnEspEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1)
)
staVpnEspEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVpnEspIdx"),
)
if mibBuilder.loadTexts:
    staVpnEspEntry.setStatus("current")


class _StaVpnEspIdx_Type(DisplayString):
    """Custom type staVpnEspIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_StaVpnEspIdx_Type.__name__ = "DisplayString"
_StaVpnEspIdx_Object = MibTableColumn
staVpnEspIdx = _StaVpnEspIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 1),
    _StaVpnEspIdx_Type()
)
staVpnEspIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspIdx.setStatus("current")


class _StaVpnEspPeer_Type(DisplayString):
    """Custom type staVpnEspPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnEspPeer_Type.__name__ = "DisplayString"
_StaVpnEspPeer_Object = MibTableColumn
staVpnEspPeer = _StaVpnEspPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 2),
    _StaVpnEspPeer_Type()
)
staVpnEspPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspPeer.setStatus("current")
_StaVpnEspDesta_Type = IpAddress
_StaVpnEspDesta_Object = MibTableColumn
staVpnEspDesta = _StaVpnEspDesta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 3),
    _StaVpnEspDesta_Type()
)
staVpnEspDesta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspDesta.setStatus("current")
_StaVpnEspSrcad_Type = IpAddress
_StaVpnEspSrcad_Object = MibTableColumn
staVpnEspSrcad = _StaVpnEspSrcad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 4),
    _StaVpnEspSrcad_Type()
)
staVpnEspSrcad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspSrcad.setStatus("current")


class _StaVpnEspMode_Type(DisplayString):
    """Custom type staVpnEspMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaVpnEspMode_Type.__name__ = "DisplayString"
_StaVpnEspMode_Object = MibTableColumn
staVpnEspMode = _StaVpnEspMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 5),
    _StaVpnEspMode_Type()
)
staVpnEspMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspMode.setStatus("current")


class _StaVpnEspCrypt_Type(DisplayString):
    """Custom type staVpnEspCrypt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnEspCrypt_Type.__name__ = "DisplayString"
_StaVpnEspCrypt_Object = MibTableColumn
staVpnEspCrypt = _StaVpnEspCrypt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 6),
    _StaVpnEspCrypt_Type()
)
staVpnEspCrypt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspCrypt.setStatus("current")


class _StaVpnEspHasha_Type(DisplayString):
    """Custom type staVpnEspHasha based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnEspHasha_Type.__name__ = "DisplayString"
_StaVpnEspHasha_Object = MibTableColumn
staVpnEspHasha = _StaVpnEspHasha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 7),
    _StaVpnEspHasha_Type()
)
staVpnEspHasha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspHasha.setStatus("current")


class _StaVpnEspSpi_Type(DisplayString):
    """Custom type staVpnEspSpi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnEspSpi_Type.__name__ = "DisplayString"
_StaVpnEspSpi_Object = MibTableColumn
staVpnEspSpi = _StaVpnEspSpi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 9),
    _StaVpnEspSpi_Type()
)
staVpnEspSpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspSpi.setStatus("current")


class _StaVpnEspAge_Type(Integer32):
    """Custom type staVpnEspAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnEspAge_Type.__name__ = "Integer32"
_StaVpnEspAge_Object = MibTableColumn
staVpnEspAge = _StaVpnEspAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 10),
    _StaVpnEspAge_Type()
)
staVpnEspAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspAge.setStatus("current")


class _StaVpnEspSofts_Type(Integer32):
    """Custom type staVpnEspSofts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnEspSofts_Type.__name__ = "Integer32"
_StaVpnEspSofts_Object = MibTableColumn
staVpnEspSofts = _StaVpnEspSofts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 11),
    _StaVpnEspSofts_Type()
)
staVpnEspSofts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspSofts.setStatus("current")


class _StaVpnEspMaxse_Type(Integer32):
    """Custom type staVpnEspMaxse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnEspMaxse_Type.__name__ = "Integer32"
_StaVpnEspMaxse_Object = MibTableColumn
staVpnEspMaxse = _StaVpnEspMaxse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 12),
    _StaVpnEspMaxse_Type()
)
staVpnEspMaxse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspMaxse.setStatus("current")


class _StaVpnEspKbyte_Type(Integer32):
    """Custom type staVpnEspKbyte based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnEspKbyte_Type.__name__ = "Integer32"
_StaVpnEspKbyte_Object = MibTableColumn
staVpnEspKbyte = _StaVpnEspKbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 13),
    _StaVpnEspKbyte_Type()
)
staVpnEspKbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspKbyte.setStatus("current")


class _StaVpnEspSoftk_Type(Integer32):
    """Custom type staVpnEspSoftk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnEspSoftk_Type.__name__ = "Integer32"
_StaVpnEspSoftk_Object = MibTableColumn
staVpnEspSoftk = _StaVpnEspSoftk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 14),
    _StaVpnEspSoftk_Type()
)
staVpnEspSoftk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspSoftk.setStatus("current")


class _StaVpnEspMaxkb_Type(Integer32):
    """Custom type staVpnEspMaxkb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnEspMaxkb_Type.__name__ = "Integer32"
_StaVpnEspMaxkb_Object = MibTableColumn
staVpnEspMaxkb = _StaVpnEspMaxkb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 9, 1, 15),
    _StaVpnEspMaxkb_Type()
)
staVpnEspMaxkb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnEspMaxkb.setStatus("current")
_StaVpnAhTable_Object = MibTable
staVpnAhTable = _StaVpnAhTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10)
)
if mibBuilder.loadTexts:
    staVpnAhTable.setStatus("current")
_StaVpnAhEntry_Object = MibTableRow
staVpnAhEntry = _StaVpnAhEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1)
)
staVpnAhEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVpnAhIdx"),
)
if mibBuilder.loadTexts:
    staVpnAhEntry.setStatus("current")


class _StaVpnAhIdx_Type(DisplayString):
    """Custom type staVpnAhIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_StaVpnAhIdx_Type.__name__ = "DisplayString"
_StaVpnAhIdx_Object = MibTableColumn
staVpnAhIdx = _StaVpnAhIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 1),
    _StaVpnAhIdx_Type()
)
staVpnAhIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhIdx.setStatus("current")


class _StaVpnAhPeer_Type(DisplayString):
    """Custom type staVpnAhPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnAhPeer_Type.__name__ = "DisplayString"
_StaVpnAhPeer_Object = MibTableColumn
staVpnAhPeer = _StaVpnAhPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 2),
    _StaVpnAhPeer_Type()
)
staVpnAhPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhPeer.setStatus("current")
_StaVpnAhDesta_Type = IpAddress
_StaVpnAhDesta_Object = MibTableColumn
staVpnAhDesta = _StaVpnAhDesta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 3),
    _StaVpnAhDesta_Type()
)
staVpnAhDesta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhDesta.setStatus("current")
_StaVpnAhSrcad_Type = IpAddress
_StaVpnAhSrcad_Object = MibTableColumn
staVpnAhSrcad = _StaVpnAhSrcad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 4),
    _StaVpnAhSrcad_Type()
)
staVpnAhSrcad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhSrcad.setStatus("current")


class _StaVpnAhMode_Type(DisplayString):
    """Custom type staVpnAhMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaVpnAhMode_Type.__name__ = "DisplayString"
_StaVpnAhMode_Object = MibTableColumn
staVpnAhMode = _StaVpnAhMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 5),
    _StaVpnAhMode_Type()
)
staVpnAhMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhMode.setStatus("current")


class _StaVpnAhCrypt_Type(DisplayString):
    """Custom type staVpnAhCrypt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnAhCrypt_Type.__name__ = "DisplayString"
_StaVpnAhCrypt_Object = MibTableColumn
staVpnAhCrypt = _StaVpnAhCrypt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 6),
    _StaVpnAhCrypt_Type()
)
staVpnAhCrypt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhCrypt.setStatus("current")


class _StaVpnAhHasha_Type(DisplayString):
    """Custom type staVpnAhHasha based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnAhHasha_Type.__name__ = "DisplayString"
_StaVpnAhHasha_Object = MibTableColumn
staVpnAhHasha = _StaVpnAhHasha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 7),
    _StaVpnAhHasha_Type()
)
staVpnAhHasha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhHasha.setStatus("current")


class _StaVpnAhSpi_Type(DisplayString):
    """Custom type staVpnAhSpi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnAhSpi_Type.__name__ = "DisplayString"
_StaVpnAhSpi_Object = MibTableColumn
staVpnAhSpi = _StaVpnAhSpi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 9),
    _StaVpnAhSpi_Type()
)
staVpnAhSpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhSpi.setStatus("current")


class _StaVpnAhAge_Type(Integer32):
    """Custom type staVpnAhAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnAhAge_Type.__name__ = "Integer32"
_StaVpnAhAge_Object = MibTableColumn
staVpnAhAge = _StaVpnAhAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 10),
    _StaVpnAhAge_Type()
)
staVpnAhAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhAge.setStatus("current")


class _StaVpnAhSofts_Type(Integer32):
    """Custom type staVpnAhSofts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnAhSofts_Type.__name__ = "Integer32"
_StaVpnAhSofts_Object = MibTableColumn
staVpnAhSofts = _StaVpnAhSofts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 11),
    _StaVpnAhSofts_Type()
)
staVpnAhSofts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhSofts.setStatus("current")


class _StaVpnAhMaxse_Type(Integer32):
    """Custom type staVpnAhMaxse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnAhMaxse_Type.__name__ = "Integer32"
_StaVpnAhMaxse_Object = MibTableColumn
staVpnAhMaxse = _StaVpnAhMaxse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 12),
    _StaVpnAhMaxse_Type()
)
staVpnAhMaxse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhMaxse.setStatus("current")


class _StaVpnAhKbyte_Type(Integer32):
    """Custom type staVpnAhKbyte based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnAhKbyte_Type.__name__ = "Integer32"
_StaVpnAhKbyte_Object = MibTableColumn
staVpnAhKbyte = _StaVpnAhKbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 13),
    _StaVpnAhKbyte_Type()
)
staVpnAhKbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhKbyte.setStatus("current")


class _StaVpnAhSoftk_Type(Integer32):
    """Custom type staVpnAhSoftk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnAhSoftk_Type.__name__ = "Integer32"
_StaVpnAhSoftk_Object = MibTableColumn
staVpnAhSoftk = _StaVpnAhSoftk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 14),
    _StaVpnAhSoftk_Type()
)
staVpnAhSoftk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhSoftk.setStatus("current")


class _StaVpnAhMaxkb_Type(Integer32):
    """Custom type staVpnAhMaxkb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnAhMaxkb_Type.__name__ = "Integer32"
_StaVpnAhMaxkb_Object = MibTableColumn
staVpnAhMaxkb = _StaVpnAhMaxkb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 10, 1, 15),
    _StaVpnAhMaxkb_Type()
)
staVpnAhMaxkb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnAhMaxkb.setStatus("current")
_StaVpnDeletev_Type = DisplayString
_StaVpnDeletev_Object = MibScalar
staVpnDeletev = _StaVpnDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 12),
    _StaVpnDeletev_Type()
)
staVpnDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staVpnDeletev.setStatus("current")
_StaVpnIpcomps_Type = Integer32
_StaVpnIpcomps_Object = MibScalar
staVpnIpcomps = _StaVpnIpcomps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 13),
    _StaVpnIpcomps_Type()
)
staVpnIpcomps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcomps.setStatus("current")
_StaVpnIpcompTable_Object = MibTable
staVpnIpcompTable = _StaVpnIpcompTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14)
)
if mibBuilder.loadTexts:
    staVpnIpcompTable.setStatus("current")
_StaVpnIpcompEntry_Object = MibTableRow
staVpnIpcompEntry = _StaVpnIpcompEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1)
)
staVpnIpcompEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVpnIpcompIdx"),
)
if mibBuilder.loadTexts:
    staVpnIpcompEntry.setStatus("current")


class _StaVpnIpcompIdx_Type(DisplayString):
    """Custom type staVpnIpcompIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_StaVpnIpcompIdx_Type.__name__ = "DisplayString"
_StaVpnIpcompIdx_Object = MibTableColumn
staVpnIpcompIdx = _StaVpnIpcompIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 1),
    _StaVpnIpcompIdx_Type()
)
staVpnIpcompIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompIdx.setStatus("current")


class _StaVpnIpcompPeer_Type(DisplayString):
    """Custom type staVpnIpcompPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnIpcompPeer_Type.__name__ = "DisplayString"
_StaVpnIpcompPeer_Object = MibTableColumn
staVpnIpcompPeer = _StaVpnIpcompPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 2),
    _StaVpnIpcompPeer_Type()
)
staVpnIpcompPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompPeer.setStatus("current")
_StaVpnIpcompDesta_Type = IpAddress
_StaVpnIpcompDesta_Object = MibTableColumn
staVpnIpcompDesta = _StaVpnIpcompDesta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 3),
    _StaVpnIpcompDesta_Type()
)
staVpnIpcompDesta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompDesta.setStatus("current")
_StaVpnIpcompSrcad_Type = IpAddress
_StaVpnIpcompSrcad_Object = MibTableColumn
staVpnIpcompSrcad = _StaVpnIpcompSrcad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 4),
    _StaVpnIpcompSrcad_Type()
)
staVpnIpcompSrcad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompSrcad.setStatus("current")


class _StaVpnIpcompMode_Type(DisplayString):
    """Custom type staVpnIpcompMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_StaVpnIpcompMode_Type.__name__ = "DisplayString"
_StaVpnIpcompMode_Object = MibTableColumn
staVpnIpcompMode = _StaVpnIpcompMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 5),
    _StaVpnIpcompMode_Type()
)
staVpnIpcompMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompMode.setStatus("current")


class _StaVpnIpcompCrypt_Type(DisplayString):
    """Custom type staVpnIpcompCrypt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnIpcompCrypt_Type.__name__ = "DisplayString"
_StaVpnIpcompCrypt_Object = MibTableColumn
staVpnIpcompCrypt = _StaVpnIpcompCrypt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 6),
    _StaVpnIpcompCrypt_Type()
)
staVpnIpcompCrypt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompCrypt.setStatus("current")


class _StaVpnIpcompHasha_Type(DisplayString):
    """Custom type staVpnIpcompHasha based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaVpnIpcompHasha_Type.__name__ = "DisplayString"
_StaVpnIpcompHasha_Object = MibTableColumn
staVpnIpcompHasha = _StaVpnIpcompHasha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 7),
    _StaVpnIpcompHasha_Type()
)
staVpnIpcompHasha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompHasha.setStatus("current")


class _StaVpnIpcompSpi_Type(DisplayString):
    """Custom type staVpnIpcompSpi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaVpnIpcompSpi_Type.__name__ = "DisplayString"
_StaVpnIpcompSpi_Object = MibTableColumn
staVpnIpcompSpi = _StaVpnIpcompSpi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 9),
    _StaVpnIpcompSpi_Type()
)
staVpnIpcompSpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompSpi.setStatus("current")


class _StaVpnIpcompAge_Type(Integer32):
    """Custom type staVpnIpcompAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIpcompAge_Type.__name__ = "Integer32"
_StaVpnIpcompAge_Object = MibTableColumn
staVpnIpcompAge = _StaVpnIpcompAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 10),
    _StaVpnIpcompAge_Type()
)
staVpnIpcompAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompAge.setStatus("current")


class _StaVpnIpcompSofts_Type(Integer32):
    """Custom type staVpnIpcompSofts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIpcompSofts_Type.__name__ = "Integer32"
_StaVpnIpcompSofts_Object = MibTableColumn
staVpnIpcompSofts = _StaVpnIpcompSofts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 11),
    _StaVpnIpcompSofts_Type()
)
staVpnIpcompSofts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompSofts.setStatus("current")


class _StaVpnIpcompMaxse_Type(Integer32):
    """Custom type staVpnIpcompMaxse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIpcompMaxse_Type.__name__ = "Integer32"
_StaVpnIpcompMaxse_Object = MibTableColumn
staVpnIpcompMaxse = _StaVpnIpcompMaxse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 12),
    _StaVpnIpcompMaxse_Type()
)
staVpnIpcompMaxse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompMaxse.setStatus("current")


class _StaVpnIpcompKbyte_Type(Integer32):
    """Custom type staVpnIpcompKbyte based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIpcompKbyte_Type.__name__ = "Integer32"
_StaVpnIpcompKbyte_Object = MibTableColumn
staVpnIpcompKbyte = _StaVpnIpcompKbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 13),
    _StaVpnIpcompKbyte_Type()
)
staVpnIpcompKbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompKbyte.setStatus("current")


class _StaVpnIpcompSoftk_Type(Integer32):
    """Custom type staVpnIpcompSoftk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIpcompSoftk_Type.__name__ = "Integer32"
_StaVpnIpcompSoftk_Object = MibTableColumn
staVpnIpcompSoftk = _StaVpnIpcompSoftk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 14),
    _StaVpnIpcompSoftk_Type()
)
staVpnIpcompSoftk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompSoftk.setStatus("current")


class _StaVpnIpcompMaxkb_Type(Integer32):
    """Custom type staVpnIpcompMaxkb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnIpcompMaxkb_Type.__name__ = "Integer32"
_StaVpnIpcompMaxkb_Object = MibTableColumn
staVpnIpcompMaxkb = _StaVpnIpcompMaxkb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 14, 1, 15),
    _StaVpnIpcompMaxkb_Type()
)
staVpnIpcompMaxkb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnIpcompMaxkb.setStatus("current")
_StaVpnConnectTable_Object = MibTable
staVpnConnectTable = _StaVpnConnectTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17)
)
if mibBuilder.loadTexts:
    staVpnConnectTable.setStatus("current")
_StaVpnConnectEntry_Object = MibTableRow
staVpnConnectEntry = _StaVpnConnectEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1)
)
staVpnConnectEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVpnConnectPeer"),
)
if mibBuilder.loadTexts:
    staVpnConnectEntry.setStatus("current")


class _StaVpnConnectPeer_Type(DisplayString):
    """Custom type staVpnConnectPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaVpnConnectPeer_Type.__name__ = "DisplayString"
_StaVpnConnectPeer_Object = MibTableColumn
staVpnConnectPeer = _StaVpnConnectPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 1),
    _StaVpnConnectPeer_Type()
)
staVpnConnectPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectPeer.setStatus("current")


class _StaVpnConnectPhysco_Type(DisplayString):
    """Custom type staVpnConnectPhysco based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaVpnConnectPhysco_Type.__name__ = "DisplayString"
_StaVpnConnectPhysco_Object = MibTableColumn
staVpnConnectPhysco = _StaVpnConnectPhysco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 2),
    _StaVpnConnectPhysco_Type()
)
staVpnConnectPhysco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectPhysco.setStatus("current")
_StaVpnConnectRemote_Type = IpAddress
_StaVpnConnectRemote_Object = MibTableColumn
staVpnConnectRemote = _StaVpnConnectRemote_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 3),
    _StaVpnConnectRemote_Type()
)
staVpnConnectRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectRemote.setStatus("current")


class _StaVpnConnectCrypta_Type(DisplayString):
    """Custom type staVpnConnectCrypta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaVpnConnectCrypta_Type.__name__ = "DisplayString"
_StaVpnConnectCrypta_Object = MibTableColumn
staVpnConnectCrypta = _StaVpnConnectCrypta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 4),
    _StaVpnConnectCrypta_Type()
)
staVpnConnectCrypta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectCrypta.setStatus("current")


class _StaVpnConnectCryptl_Type(Integer32):
    """Custom type staVpnConnectCryptl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnConnectCryptl_Type.__name__ = "Integer32"
_StaVpnConnectCryptl_Object = MibTableColumn
staVpnConnectCryptl = _StaVpnConnectCryptl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 5),
    _StaVpnConnectCryptl_Type()
)
staVpnConnectCryptl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectCryptl.setStatus("current")


class _StaVpnConnectHashal_Type(DisplayString):
    """Custom type staVpnConnectHashal based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaVpnConnectHashal_Type.__name__ = "DisplayString"
_StaVpnConnectHashal_Object = MibTableColumn
staVpnConnectHashal = _StaVpnConnectHashal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 6),
    _StaVpnConnectHashal_Type()
)
staVpnConnectHashal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectHashal.setStatus("current")


class _StaVpnConnectHashle_Type(Integer32):
    """Custom type staVpnConnectHashle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnConnectHashle_Type.__name__ = "Integer32"
_StaVpnConnectHashle_Object = MibTableColumn
staVpnConnectHashle = _StaVpnConnectHashle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 7),
    _StaVpnConnectHashle_Type()
)
staVpnConnectHashle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectHashle.setStatus("current")


class _StaVpnConnectHmacal_Type(DisplayString):
    """Custom type staVpnConnectHmacal based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaVpnConnectHmacal_Type.__name__ = "DisplayString"
_StaVpnConnectHmacal_Object = MibTableColumn
staVpnConnectHmacal = _StaVpnConnectHmacal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 8),
    _StaVpnConnectHmacal_Type()
)
staVpnConnectHmacal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectHmacal.setStatus("current")


class _StaVpnConnectHmacle_Type(Integer32):
    """Custom type staVpnConnectHmacle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnConnectHmacle_Type.__name__ = "Integer32"
_StaVpnConnectHmacle_Object = MibTableColumn
staVpnConnectHmacle = _StaVpnConnectHmacle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 9),
    _StaVpnConnectHmacle_Type()
)
staVpnConnectHmacle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectHmacle.setStatus("current")


class _StaVpnConnectCompra_Type(DisplayString):
    """Custom type staVpnConnectCompra based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaVpnConnectCompra_Type.__name__ = "DisplayString"
_StaVpnConnectCompra_Object = MibTableColumn
staVpnConnectCompra = _StaVpnConnectCompra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 10),
    _StaVpnConnectCompra_Type()
)
staVpnConnectCompra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectCompra.setStatus("current")


class _StaVpnConnectState_Type(Integer32):
    """Custom type staVpnConnectState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bundle", 13),
          ("bundle-connect", 10),
          ("call-back", 9),
          ("connection", 7),
          ("dial", 4),
          ("disconnecting", 8),
          ("incoming-call", 5),
          ("init", 0),
          ("protocol", 6),
          ("protocol-2", 11),
          ("ready", 2),
          ("reserved", 12),
          ("setup-wan", 1),
          ("wait-for-cb", 3))
    )


_StaVpnConnectState_Type.__name__ = "Integer32"
_StaVpnConnectState_Object = MibTableColumn
staVpnConnectState = _StaVpnConnectState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 11),
    _StaVpnConnectState_Type()
)
staVpnConnectState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectState.setStatus("current")


class _StaVpnConnectMode_Type(Integer32):
    """Custom type staVpnConnectMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              128)
        )
    )
    namedValues = NamedValues(
        *(("active", 128),
          ("passive", 0))
    )


_StaVpnConnectMode_Type.__name__ = "Integer32"
_StaVpnConnectMode_Object = MibTableColumn
staVpnConnectMode = _StaVpnConnectMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 12),
    _StaVpnConnectMode_Type()
)
staVpnConnectMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectMode.setStatus("current")


class _StaVpnConnectShtime_Type(Integer32):
    """Custom type staVpnConnectShtime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnConnectShtime_Type.__name__ = "Integer32"
_StaVpnConnectShtime_Object = MibTableColumn
staVpnConnectShtime = _StaVpnConnectShtime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 13),
    _StaVpnConnectShtime_Type()
)
staVpnConnectShtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectShtime.setStatus("current")


class _StaVpnConnectB1dt_Type(Integer32):
    """Custom type staVpnConnectB1dt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVpnConnectB1dt_Type.__name__ = "Integer32"
_StaVpnConnectB1dt_Object = MibTableColumn
staVpnConnectB1dt = _StaVpnConnectB1dt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 14),
    _StaVpnConnectB1dt_Type()
)
staVpnConnectB1dt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectB1dt.setStatus("current")


class _StaVpnConnectLaster_Type(Integer32):
    """Custom type staVpnConnectLaster based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              275,
              4353,
              4354,
              4355,
              4356,
              4357,
              4358,
              4360,
              4361,
              4369,
              4370,
              4371,
              4372,
              4373,
              4374,
              4375,
              4385,
              4386,
              4387,
              4388,
              4389,
              4390,
              4391,
              4609,
              4610,
              4611,
              4612,
              4613,
              4614,
              4871,
              4904,
              8451,
              8458,
              8461,
              8462,
              8463,
              8464,
              8465,
              8466,
              8467,
              8468,
              8469,
              8470,
              8471,
              8472,
              8473,
              8474,
              8475,
              8476,
              8477,
              8478,
              8479,
              8480,
              8481,
              8482,
              8483,
              8484,
              8485,
              8486,
              8487,
              8488,
              8489,
              8490,
              8491,
              8492,
              8493,
              8494,
              8495,
              8496,
              8497,
              8498,
              8499,
              8500,
              8501,
              8502,
              8503,
              8504,
              8505,
              8506,
              8507,
              8508,
              8509,
              8702,
              8703,
              8705,
              8706,
              8707,
              8708,
              8709,
              8710,
              8711,
              8712,
              8713,
              8714,
              8715,
              8716,
              8717,
              8718,
              8719,
              8720,
              8721,
              8722,
              8723,
              8724,
              8725,
              8726,
              8727,
              8728,
              8729,
              8730,
              8731,
              8732,
              8733,
              8734,
              8735,
              8736,
              8737,
              8738,
              8739,
              8740,
              8741,
              8742,
              8743,
              8744,
              8745,
              8746,
              8747,
              8748,
              8749,
              8750,
              8751,
              8752,
              8753,
              8754,
              8755,
              8756,
              8757,
              8758,
              8759,
              8760,
              8761,
              8762,
              8763,
              8764,
              8765,
              8958,
              8959,
              12546,
              12801,
              12802,
              12803,
              17153,
              17154,
              17155,
              17156,
              17157,
              17158,
              17159,
              17160)
        )
    )
    namedValues = NamedValues(
        *(("configuration-changed", 17159),
          ("dynamic-vpn-reconnect", 17158),
          ("icmp-conn-error", 275),
          ("ifc-i-connection-timeout-dynamic", 4357),
          ("ifc-i-connection-timeout-ike-ipsec", 4358),
          ("ifc-i-license-exceeded", 4353),
          ("ifc-i-name-resolution-failed", 4361),
          ("ifc-i-negotiator-charge-locked", 4369),
          ("ifc-i-negotiator-line-error", 4375),
          ("ifc-i-negotiator-no-dial-number", 4371),
          ("ifc-i-negotiator-no-multiconnect", 4374),
          ("ifc-i-negotiator-no-remote", 4372),
          ("ifc-i-negotiator-remote-blocked", 4373),
          ("ifc-i-negotiator-time-locked", 4370),
          ("ifc-i-no-channel-available", 4354),
          ("ifc-i-no-poll-table-entry-matched", 4360),
          ("ifc-i-no-ppp-table-entry-matched", 4356),
          ("ifc-i-no-route-to-remote-gateway", 4355),
          ("ifc-i-physical-charge-locked", 4385),
          ("ifc-i-physical-no-dial-number", 4387),
          ("ifc-i-physical-no-multiconnect", 4391),
          ("ifc-i-physical-no-remote", 4388),
          ("ifc-i-physical-no-server-address", 4389),
          ("ifc-i-physical-remote-locked", 4390),
          ("ifc-i-physical-time-locked", 4386),
          ("ifc-r-connection-timeout-dynamic", 4613),
          ("ifc-r-connection-timeout-ike-ipsec", 4614),
          ("ifc-r-license-exceeded", 4609),
          ("ifc-r-no-channel-available", 4610),
          ("ifc-r-no-ppp-table-entry-matched", 4612),
          ("ifc-r-no-route-to-remote-gateway", 4611),
          ("ifc-x-line-polling-failed", 4871),
          ("ifc-x-physical-line-error", 4904),
          ("ike-i-akid-issuer-serial-mismatch", 8491),
          ("ike-i-akid-skid-mismatch", 8490),
          ("ike-i-application-verification", 8498),
          ("ike-i-cert-chain-too-long", 8482),
          ("ike-i-cert-has-expired", 8470),
          ("ike-i-cert-not-yet-valid", 8469),
          ("ike-i-cert-rejected", 8488),
          ("ike-i-cert-revoked", 8483),
          ("ike-i-cert-revoked-a-a-compromise", 8508),
          ("ike-i-cert-revoked-affiliation-changed", 8502),
          ("ike-i-cert-revoked-ca-compromise", 8501),
          ("ike-i-cert-revoked-certificate-hold", 8505),
          ("ike-i-cert-revoked-cessation-of-operation", 8504),
          ("ike-i-cert-revoked-key-compromise", 8500),
          ("ike-i-cert-revoked-privilege-withdrawn", 8507),
          ("ike-i-cert-revoked-remove-from-crl", 8506),
          ("ike-i-cert-revoked-superseded", 8503),
          ("ike-i-cert-revoked-unknown-reason", 8509),
          ("ike-i-cert-revoked-unspecified", 8499),
          ("ike-i-cert-signature-failure", 8467),
          ("ike-i-cert-untrusted", 8487),
          ("ike-i-crl-has-exceeded-exceedance", 8497),
          ("ike-i-crl-has-expired", 8472),
          ("ike-i-crl-not-yet-valid", 8471),
          ("ike-i-crl-signature-failure", 8468),
          ("ike-i-depth-zero-self-signed-cert", 8478),
          ("ike-i-dpd-timeout", 8461),
          ("ike-i-error-in-cert-not-after-field", 8474),
          ("ike-i-error-in-cert-not-before-field", 8473),
          ("ike-i-error-in-crl-last-update-field", 8475),
          ("ike-i-error-in-crl-next-update-field", 8476),
          ("ike-i-general-failure", 8703),
          ("ike-i-ike-key-mismatch", 8458),
          ("ike-i-invalid-ca", 8484),
          ("ike-i-invalid-purpose", 8486),
          ("ike-i-keyusage-no-certsign", 8492),
          ("ike-i-keyusage-no-crl-sign", 8495),
          ("ike-i-no-proposal-matched", 8451),
          ("ike-i-out-of-mem", 8477),
          ("ike-i-out-of-memory", 8702),
          ("ike-i-path-length-exceeded", 8485),
          ("ike-i-self-signed-cert-in-chain", 8479),
          ("ike-i-subject-issuer-mismatch", 8489),
          ("ike-i-unable-to-decode-issuer-public-key", 8466),
          ("ike-i-unable-to-decrypt-cert-signature", 8464),
          ("ike-i-unable-to-decrypt-crl-signature", 8465),
          ("ike-i-unable-to-get-crl", 8463),
          ("ike-i-unable-to-get-crl-issuer", 8493),
          ("ike-i-unable-to-get-issuer-cert", 8462),
          ("ike-i-unable-to-get-issuer-cert-locally", 8480),
          ("ike-i-unable-to-verify-leaf-signature", 8481),
          ("ike-i-unhandled-critical-crl-extension", 8496),
          ("ike-i-unhandled-critical-extension", 8494),
          ("ike-r-akid-issuer-serial-mismatch", 8747),
          ("ike-r-akid-skid-mismatch", 8746),
          ("ike-r-application-verification", 8754),
          ("ike-r-cert-chain-too-long", 8738),
          ("ike-r-cert-has-expired", 8726),
          ("ike-r-cert-not-yet-valid", 8725),
          ("ike-r-cert-rejected", 8744),
          ("ike-r-cert-revoked", 8739),
          ("ike-r-cert-revoked-a-a-compromise", 8764),
          ("ike-r-cert-revoked-affiliation-changed", 8758),
          ("ike-r-cert-revoked-ca-compromise", 8757),
          ("ike-r-cert-revoked-certificate-hold", 8761),
          ("ike-r-cert-revoked-cessation-of-operation", 8760),
          ("ike-r-cert-revoked-key-compromise", 8756),
          ("ike-r-cert-revoked-privilege-withdrawn", 8763),
          ("ike-r-cert-revoked-remove-from-crl", 8762),
          ("ike-r-cert-revoked-superseded", 8759),
          ("ike-r-cert-revoked-unknown-reason", 8765),
          ("ike-r-cert-revoked-unspecified", 8755),
          ("ike-r-cert-signature-failure", 8723),
          ("ike-r-cert-untrusted", 8743),
          ("ike-r-crl-has-exceeded-exceedance", 8753),
          ("ike-r-crl-has-expired", 8728),
          ("ike-r-crl-not-yet-valid", 8727),
          ("ike-r-crl-signature-failure", 8724),
          ("ike-r-depth-zero-self-signed-cert", 8734),
          ("ike-r-dpd-timeout", 8717),
          ("ike-r-error-in-cert-not-after-field", 8730),
          ("ike-r-error-in-cert-not-before-field", 8729),
          ("ike-r-error-in-crl-last-update-field", 8731),
          ("ike-r-error-in-crl-next-update-field", 8732),
          ("ike-r-exchange-type-mismatch", 8706),
          ("ike-r-general-failure", 8959),
          ("ike-r-id-type-mismatch", 8712),
          ("ike-r-id-type-unsupported", 8711),
          ("ike-r-ike-group-mismatch", 8708),
          ("ike-r-ike-key-mismatch", 8714),
          ("ike-r-invalid-ca", 8740),
          ("ike-r-invalid-purpose", 8742),
          ("ike-r-keyusage-no-certsign", 8748),
          ("ike-r-keyusage-no-crl-sign", 8751),
          ("ike-r-license-demosn-exceeded", 8715),
          ("ike-r-license-exceeded", 8705),
          ("ike-r-license-sn-exceeded", 8716),
          ("ike-r-life-duration-mismatch", 8710),
          ("ike-r-life-type-unsupported", 8709),
          ("ike-r-no-proposal-matched", 8707),
          ("ike-r-no-rule-matched-id", 8713),
          ("ike-r-out-of-mem", 8733),
          ("ike-r-out-of-memory", 8958),
          ("ike-r-path-length-exceeded", 8741),
          ("ike-r-self-signed-cert-in-chain", 8735),
          ("ike-r-subject-issuer-mismatch", 8745),
          ("ike-r-unable-to-decode-issuer-public-key", 8722),
          ("ike-r-unable-to-decrypt-cert-signature", 8720),
          ("ike-r-unable-to-decrypt-crl-signature", 8721),
          ("ike-r-unable-to-get-crl", 8719),
          ("ike-r-unable-to-get-crl-issuer", 8749),
          ("ike-r-unable-to-get-issuer-cert", 8718),
          ("ike-r-unable-to-get-issuer-cert-locally", 8736),
          ("ike-r-unable-to-verify-leaf-signature", 8737),
          ("ike-r-unhandled-critical-crl-extension", 8752),
          ("ike-r-unhandled-critical-extension", 8750),
          ("invalid-physical-channel", 17157),
          ("ipsec-i-no-proposal-matched", 12546),
          ("ipsec-r-no-proposal-matched", 12802),
          ("ipsec-r-no-rule-matched-ids", 12801),
          ("ipsec-r-pfs-group-mismatch", 12803),
          ("manual-disconnect", 17154),
          ("none", 0),
          ("physical-disconnected", 17156),
          ("remote-disconnected", 17153),
          ("removed-from-config", 17160),
          ("shorthold-expired", 17155))
    )


_StaVpnConnectLaster_Type.__name__ = "Integer32"
_StaVpnConnectLaster_Object = MibTableColumn
staVpnConnectLaster = _StaVpnConnectLaster_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 16),
    _StaVpnConnectLaster_Type()
)
staVpnConnectLaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staVpnConnectLaster.setStatus("current")


class _StaVpnConnectClient_Type(Integer32):
    """Custom type staVpnConnectClient based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0)
        )
    )
    namedValues = NamedValues(
        *(("demo-version", 0),
          ("not-available", -1))
    )


_StaVpnConnectClient_Type.__name__ = "Integer32"
_StaVpnConnectClient_Object = MibTableColumn
staVpnConnectClient = _StaVpnConnectClient_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 17),
    _StaVpnConnectClient_Type()
)
staVpnConnectClient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectClient.setStatus("current")


class _StaVpnConnectNatdet_Type(Integer32):
    """Custom type staVpnConnectNatdet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nat-both", 3),
          ("nat-local", 1),
          ("nat-remote", 2),
          ("no-nat", 0))
    )


_StaVpnConnectNatdet_Type.__name__ = "Integer32"
_StaVpnConnectNatdet_Object = MibTableColumn
staVpnConnectNatdet = _StaVpnConnectNatdet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 18),
    _StaVpnConnectNatdet_Type()
)
staVpnConnectNatdet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectNatdet.setStatus("current")


class _StaVpnConnectConnti_Type(Integer32):
    """Custom type staVpnConnectConnti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaVpnConnectConnti_Type.__name__ = "Integer32"
_StaVpnConnectConnti_Object = MibTableColumn
staVpnConnectConnti = _StaVpnConnectConnti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 26, 17, 1, 19),
    _StaVpnConnectConnti_Type()
)
staVpnConnectConnti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVpnConnectConnti.setStatus("current")
_StaPptp_ObjectIdentity = ObjectIdentity
staPptp = _StaPptp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27)
)
_StaPptpRxp_Type = Counter32
_StaPptpRxp_Object = MibScalar
staPptpRxp = _StaPptpRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 1),
    _StaPptpRxp_Type()
)
staPptpRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpRxp.setStatus("current")
_StaPptpTxp_Type = Counter32
_StaPptpTxp_Object = MibScalar
staPptpTxp = _StaPptpTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 2),
    _StaPptpTxp_Type()
)
staPptpTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpTxp.setStatus("current")
_StaPptpEch_Type = Counter32
_StaPptpEch_Object = MibScalar
staPptpEch = _StaPptpEch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 3),
    _StaPptpEch_Type()
)
staPptpEch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpEch.setStatus("current")
_StaPptpAck_Type = Counter32
_StaPptpAck_Object = MibScalar
staPptpAck = _StaPptpAck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 4),
    _StaPptpAck_Type()
)
staPptpAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpAck.setStatus("current")
_StaPptpDro_Type = Counter32
_StaPptpDro_Object = MibScalar
staPptpDro = _StaPptpDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 5),
    _StaPptpDro_Type()
)
staPptpDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpDro.setStatus("current")
_StaPptpRxe_Type = Counter32
_StaPptpRxe_Object = MibScalar
staPptpRxe = _StaPptpRxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 6),
    _StaPptpRxe_Type()
)
staPptpRxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpRxe.setStatus("current")
_StaPptpTcp_Type = Counter32
_StaPptpTcp_Object = MibScalar
staPptpTcp = _StaPptpTcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 7),
    _StaPptpTcp_Type()
)
staPptpTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpTcp.setStatus("current")
_StaPptpCal_Type = Counter32
_StaPptpCal_Object = MibScalar
staPptpCal = _StaPptpCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 8),
    _StaPptpCal_Type()
)
staPptpCal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpCal.setStatus("current")
_StaPptpConTable_Object = MibTable
staPptpConTable = _StaPptpConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9)
)
if mibBuilder.loadTexts:
    staPptpConTable.setStatus("current")
_StaPptpConEntry_Object = MibTableRow
staPptpConEntry = _StaPptpConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1)
)
staPptpConEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPptpConChann"),
)
if mibBuilder.loadTexts:
    staPptpConEntry.setStatus("current")


class _StaPptpConChann_Type(DisplayString):
    """Custom type staPptpConChann based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaPptpConChann_Type.__name__ = "DisplayString"
_StaPptpConChann_Object = MibTableColumn
staPptpConChann = _StaPptpConChann_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 1),
    _StaPptpConChann_Type()
)
staPptpConChann.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConChann.setStatus("current")


class _StaPptpConState_Type(Integer32):
    """Custom type staPptpConState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bundle", 13),
          ("bundle-connect", 10),
          ("call-back", 9),
          ("connection", 7),
          ("dial", 4),
          ("disconnecting", 8),
          ("incoming-call", 5),
          ("init", 0),
          ("protocol", 6),
          ("protocol-2", 11),
          ("ready", 2),
          ("reserved", 12),
          ("setup-wan", 1),
          ("wait-for-cb", 3))
    )


_StaPptpConState_Type.__name__ = "Integer32"
_StaPptpConState_Object = MibTableColumn
staPptpConState = _StaPptpConState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 3),
    _StaPptpConState_Type()
)
staPptpConState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConState.setStatus("current")


class _StaPptpConMode_Type(Integer32):
    """Custom type staPptpConMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              128)
        )
    )
    namedValues = NamedValues(
        *(("active", 128),
          ("passive", 0))
    )


_StaPptpConMode_Type.__name__ = "Integer32"
_StaPptpConMode_Object = MibTableColumn
staPptpConMode = _StaPptpConMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 4),
    _StaPptpConMode_Type()
)
staPptpConMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConMode.setStatus("current")


class _StaPptpConShtim_Type(Integer32):
    """Custom type staPptpConShtim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPptpConShtim_Type.__name__ = "Integer32"
_StaPptpConShtim_Object = MibTableColumn
staPptpConShtim = _StaPptpConShtim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 5),
    _StaPptpConShtim_Type()
)
staPptpConShtim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConShtim.setStatus("current")


class _StaPptpConPhysc_Type(DisplayString):
    """Custom type staPptpConPhysc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaPptpConPhysc_Type.__name__ = "DisplayString"
_StaPptpConPhysc_Object = MibTableColumn
staPptpConPhysc = _StaPptpConPhysc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 6),
    _StaPptpConPhysc_Type()
)
staPptpConPhysc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConPhysc.setStatus("current")
_StaPptpConPeera_Type = IpAddress
_StaPptpConPeera_Object = MibTableColumn
staPptpConPeera = _StaPptpConPeera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 7),
    _StaPptpConPeera_Type()
)
staPptpConPeera.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConPeera.setStatus("current")
_StaPptpConIpadd_Type = IpAddress
_StaPptpConIpadd_Object = MibTableColumn
staPptpConIpadd = _StaPptpConIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 8),
    _StaPptpConIpadd_Type()
)
staPptpConIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConIpadd.setStatus("current")
_StaPptpConDnsde_Type = IpAddress
_StaPptpConDnsde_Object = MibTableColumn
staPptpConDnsde = _StaPptpConDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 9),
    _StaPptpConDnsde_Type()
)
staPptpConDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConDnsde.setStatus("current")
_StaPptpConNbnsd_Type = IpAddress
_StaPptpConNbnsd_Object = MibTableColumn
staPptpConNbnsd = _StaPptpConNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 10),
    _StaPptpConNbnsd_Type()
)
staPptpConNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConNbnsd.setStatus("current")


class _StaPptpConLaste_Type(Integer32):
    """Custom type staPptpConLaste based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              267,
              275,
              277,
              278,
              279,
              280,
              513,
              514,
              515,
              516,
              517,
              518,
              17153,
              17154,
              17155,
              17156,
              17157,
              17158,
              17159,
              17160,
              32768,
              32769,
              32770,
              32771,
              32784,
              32785,
              32786,
              32787,
              32788,
              32789,
              32800,
              32801,
              32802,
              32803,
              32804,
              32805,
              32816,
              32817,
              32818,
              32819,
              32832,
              32848,
              33008)
        )
    )
    namedValues = NamedValues(
        *(("arp-no-response", 280),
          ("auth-error", 32769),
          ("auth-rejected", 32770),
          ("ccp-rejected", 32848),
          ("chap-fail-recvd", 32804),
          ("chap-rejected", 32800),
          ("chap-rx-timeout", 32801),
          ("chap-tx-timeout", 32802),
          ("configuration-changed", 17159),
          ("dhcp-timeout", 277),
          ("dynamic-vpn-reconnect", 17158),
          ("icmp-conn-error", 275),
          ("invalid-physical-channel", 17157),
          ("ipcp-rejected", 32832),
          ("ipxcp-net-reject", 32818),
          ("ipxcp-rejected", 32816),
          ("ipxcp-route-unkn", 32819),
          ("lcp-conn-error", 32771),
          ("lcp-rejected", 32768),
          ("manual-disconnect", 17154),
          ("no-ncp-available", 33008),
          ("none", 0),
          ("pap-nak-received", 32788),
          ("pap-rejected", 32784),
          ("pap-rx-timeout", 32785),
          ("pap-tx-timeout", 32786),
          ("physical-disconnected", 17156),
          ("pptp-bad-call-id", 517),
          ("pptp-bad-format", 514),
          ("pptp-bad-value", 515),
          ("pptp-gen-error", 518),
          ("pptp-no-channel", 513),
          ("pptp-no-response", 278),
          ("pptp-no-ressource", 516),
          ("remote-disconnected", 17153),
          ("remote-doubled", 267),
          ("removed-from-config", 17160),
          ("shorthold-expired", 17155),
          ("unkn-chap-peer", 32805),
          ("unkn-pap-peer", 32789),
          ("vpn-no-response", 279),
          ("wrong-chap-resp", 32803),
          ("wrong-ipxcp-net", 32817),
          ("wrong-pap-req", 32787))
    )


_StaPptpConLaste_Type.__name__ = "Integer32"
_StaPptpConLaste_Object = MibTableColumn
staPptpConLaste = _StaPptpConLaste_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 11),
    _StaPptpConLaste_Type()
)
staPptpConLaste.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPptpConLaste.setStatus("current")
_StaPptpConDnsba_Type = IpAddress
_StaPptpConDnsba_Object = MibTableColumn
staPptpConDnsba = _StaPptpConDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 12),
    _StaPptpConDnsba_Type()
)
staPptpConDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConDnsba.setStatus("current")
_StaPptpConNbnsb_Type = IpAddress
_StaPptpConNbnsb_Object = MibTableColumn
staPptpConNbnsb = _StaPptpConNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 13),
    _StaPptpConNbnsb_Type()
)
staPptpConNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConNbnsb.setStatus("current")


class _StaPptpConConnt_Type(Integer32):
    """Custom type staPptpConConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaPptpConConnt_Type.__name__ = "Integer32"
_StaPptpConConnt_Object = MibTableColumn
staPptpConConnt = _StaPptpConConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 14),
    _StaPptpConConnt_Type()
)
staPptpConConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConConnt.setStatus("current")
_StaPptpConGatew_Type = IpAddress
_StaPptpConGatew_Object = MibTableColumn
staPptpConGatew = _StaPptpConGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 9, 1, 15),
    _StaPptpConGatew_Type()
)
staPptpConGatew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConGatew.setStatus("current")
_StaPptpTun_Type = Integer32
_StaPptpTun_Object = MibScalar
staPptpTun = _StaPptpTun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 10),
    _StaPptpTun_Type()
)
staPptpTun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpTun.setStatus("current")
_StaPptpDel_Type = DisplayString
_StaPptpDel_Object = MibScalar
staPptpDel = _StaPptpDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 11),
    _StaPptpDel_Type()
)
staPptpDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPptpDel.setStatus("current")
_StaPptpFlo_Type = Integer32
_StaPptpFlo_Object = MibScalar
staPptpFlo = _StaPptpFlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 27, 12),
    _StaPptpFlo_Type()
)
staPptpFlo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpFlo.setStatus("current")
_StaDhcp_ObjectIdentity = ObjectIdentity
staDhcp = _StaDhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32)
)
_StaDhcpWanTable_Object = MibTable
staDhcpWanTable = _StaDhcpWanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20)
)
if mibBuilder.loadTexts:
    staDhcpWanTable.setStatus("current")
_StaDhcpWanEntry_Object = MibTableRow
staDhcpWanEntry = _StaDhcpWanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1)
)
staDhcpWanEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staDhcpWanIfc"),
)
if mibBuilder.loadTexts:
    staDhcpWanEntry.setStatus("current")


class _StaDhcpWanIfc_Type(Integer32):
    """Custom type staDhcpWanIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("ch01", 9),
          ("ch02", 10),
          ("dsl-ch-1", 1),
          ("dsl-ch-2", 2),
          ("dsl-ch-3", 3),
          ("dsl-ch-4", 4),
          ("dsl-ch-5", 5),
          ("dsl-ch-6", 6),
          ("dsl-ch-7", 7),
          ("dsl-ch-8", 8),
          ("ext", 11))
    )


_StaDhcpWanIfc_Type.__name__ = "Integer32"
_StaDhcpWanIfc_Object = MibTableColumn
staDhcpWanIfc = _StaDhcpWanIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 1),
    _StaDhcpWanIfc_Type()
)
staDhcpWanIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanIfc.setStatus("current")
_StaDhcpWanIpadd_Type = IpAddress
_StaDhcpWanIpadd_Object = MibTableColumn
staDhcpWanIpadd = _StaDhcpWanIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 2),
    _StaDhcpWanIpadd_Type()
)
staDhcpWanIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanIpadd.setStatus("current")
_StaDhcpWanIpnet_Type = IpAddress
_StaDhcpWanIpnet_Object = MibTableColumn
staDhcpWanIpnet = _StaDhcpWanIpnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 3),
    _StaDhcpWanIpnet_Type()
)
staDhcpWanIpnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanIpnet.setStatus("current")
_StaDhcpWanGatew_Type = IpAddress
_StaDhcpWanGatew_Object = MibTableColumn
staDhcpWanGatew = _StaDhcpWanGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 4),
    _StaDhcpWanGatew_Type()
)
staDhcpWanGatew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanGatew.setStatus("current")
_StaDhcpWanDnsde_Type = IpAddress
_StaDhcpWanDnsde_Object = MibTableColumn
staDhcpWanDnsde = _StaDhcpWanDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 5),
    _StaDhcpWanDnsde_Type()
)
staDhcpWanDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanDnsde.setStatus("current")
_StaDhcpWanDnsba_Type = IpAddress
_StaDhcpWanDnsba_Object = MibTableColumn
staDhcpWanDnsba = _StaDhcpWanDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 6),
    _StaDhcpWanDnsba_Type()
)
staDhcpWanDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanDnsba.setStatus("current")
_StaDhcpWanNbnsd_Type = IpAddress
_StaDhcpWanNbnsd_Object = MibTableColumn
staDhcpWanNbnsd = _StaDhcpWanNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 7),
    _StaDhcpWanNbnsd_Type()
)
staDhcpWanNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanNbnsd.setStatus("current")
_StaDhcpWanNbnsb_Type = IpAddress
_StaDhcpWanNbnsb_Object = MibTableColumn
staDhcpWanNbnsb = _StaDhcpWanNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 8),
    _StaDhcpWanNbnsb_Type()
)
staDhcpWanNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanNbnsb.setStatus("current")
_StaDhcpWanDhcps_Type = IpAddress
_StaDhcpWanDhcps_Object = MibTableColumn
staDhcpWanDhcps = _StaDhcpWanDhcps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 9),
    _StaDhcpWanDhcps_Type()
)
staDhcpWanDhcps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanDhcps.setStatus("current")


class _StaDhcpWanDomai_Type(DisplayString):
    """Custom type staDhcpWanDomai based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDhcpWanDomai_Type.__name__ = "DisplayString"
_StaDhcpWanDomai_Object = MibTableColumn
staDhcpWanDomai = _StaDhcpWanDomai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 20, 1, 10),
    _StaDhcpWanDomai_Type()
)
staDhcpWanDomai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpWanDomai.setStatus("current")
_StaDhcpLanTable_Object = MibTable
staDhcpLanTable = _StaDhcpLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21)
)
if mibBuilder.loadTexts:
    staDhcpLanTable.setStatus("current")
_StaDhcpLanEntry_Object = MibTableRow
staDhcpLanEntry = _StaDhcpLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1)
)
staDhcpLanEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staDhcpLanIfc"),
)
if mibBuilder.loadTexts:
    staDhcpLanEntry.setStatus("current")


class _StaDhcpLanIfc_Type(DisplayString):
    """Custom type staDhcpLanIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaDhcpLanIfc_Type.__name__ = "DisplayString"
_StaDhcpLanIfc_Object = MibTableColumn
staDhcpLanIfc = _StaDhcpLanIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 1),
    _StaDhcpLanIfc_Type()
)
staDhcpLanIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanIfc.setStatus("current")
_StaDhcpLanIpadd_Type = IpAddress
_StaDhcpLanIpadd_Object = MibTableColumn
staDhcpLanIpadd = _StaDhcpLanIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 2),
    _StaDhcpLanIpadd_Type()
)
staDhcpLanIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanIpadd.setStatus("current")
_StaDhcpLanIpnet_Type = IpAddress
_StaDhcpLanIpnet_Object = MibTableColumn
staDhcpLanIpnet = _StaDhcpLanIpnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 3),
    _StaDhcpLanIpnet_Type()
)
staDhcpLanIpnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanIpnet.setStatus("current")
_StaDhcpLanGatew_Type = IpAddress
_StaDhcpLanGatew_Object = MibTableColumn
staDhcpLanGatew = _StaDhcpLanGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 4),
    _StaDhcpLanGatew_Type()
)
staDhcpLanGatew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanGatew.setStatus("current")
_StaDhcpLanDnsde_Type = IpAddress
_StaDhcpLanDnsde_Object = MibTableColumn
staDhcpLanDnsde = _StaDhcpLanDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 5),
    _StaDhcpLanDnsde_Type()
)
staDhcpLanDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanDnsde.setStatus("current")
_StaDhcpLanDnsba_Type = IpAddress
_StaDhcpLanDnsba_Object = MibTableColumn
staDhcpLanDnsba = _StaDhcpLanDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 6),
    _StaDhcpLanDnsba_Type()
)
staDhcpLanDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanDnsba.setStatus("current")
_StaDhcpLanNbnsd_Type = IpAddress
_StaDhcpLanNbnsd_Object = MibTableColumn
staDhcpLanNbnsd = _StaDhcpLanNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 7),
    _StaDhcpLanNbnsd_Type()
)
staDhcpLanNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanNbnsd.setStatus("current")
_StaDhcpLanNbnsb_Type = IpAddress
_StaDhcpLanNbnsb_Object = MibTableColumn
staDhcpLanNbnsb = _StaDhcpLanNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 8),
    _StaDhcpLanNbnsb_Type()
)
staDhcpLanNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanNbnsb.setStatus("current")
_StaDhcpLanDhcps_Type = IpAddress
_StaDhcpLanDhcps_Object = MibTableColumn
staDhcpLanDhcps = _StaDhcpLanDhcps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 9),
    _StaDhcpLanDhcps_Type()
)
staDhcpLanDhcps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanDhcps.setStatus("current")


class _StaDhcpLanDomai_Type(DisplayString):
    """Custom type staDhcpLanDomai based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDhcpLanDomai_Type.__name__ = "DisplayString"
_StaDhcpLanDomai_Object = MibTableColumn
staDhcpLanDomai = _StaDhcpLanDomai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 32, 21, 1, 10),
    _StaDhcpLanDomai_Type()
)
staDhcpLanDomai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpLanDomai.setStatus("current")
_StaIsdn_ObjectIdentity = ObjectIdentity
staIsdn = _StaIsdn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33)
)
_StaIsdnLin_ObjectIdentity = ObjectIdentity
staIsdnLin = _StaIsdnLin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1)
)
_StaIsdnLinS0Table_Object = MibTable
staIsdnLinS0Table = _StaIsdnLinS0Table_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1)
)
if mibBuilder.loadTexts:
    staIsdnLinS0Table.setStatus("current")
_StaIsdnLinS0Entry_Object = MibTableRow
staIsdnLinS0Entry = _StaIsdnLinS0Entry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1)
)
staIsdnLinS0Entry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIsdnLinS0Ifc"),
)
if mibBuilder.loadTexts:
    staIsdnLinS0Entry.setStatus("current")


class _StaIsdnLinS0Ifc_Type(Integer32):
    """Custom type staIsdnLinS0Ifc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_StaIsdnLinS0Ifc_Type.__name__ = "Integer32"
_StaIsdnLinS0Ifc_Object = MibTableColumn
staIsdnLinS0Ifc = _StaIsdnLinS0Ifc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1, 1),
    _StaIsdnLinS0Ifc_Type()
)
staIsdnLinS0Ifc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnLinS0Ifc.setStatus("current")


class _StaIsdnLinS0Ope_Type(Integer32):
    """Custom type staIsdnLinS0Ope based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIsdnLinS0Ope_Type.__name__ = "Integer32"
_StaIsdnLinS0Ope_Object = MibTableColumn
staIsdnLinS0Ope = _StaIsdnLinS0Ope_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 1, 1, 1, 2),
    _StaIsdnLinS0Ope_Type()
)
staIsdnLinS0Ope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnLinS0Ope.setStatus("current")
_StaIsdnFra_ObjectIdentity = ObjectIdentity
staIsdnFra = _StaIsdnFra_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2)
)
_StaIsdnFraS0Table_Object = MibTable
staIsdnFraS0Table = _StaIsdnFraS0Table_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1)
)
if mibBuilder.loadTexts:
    staIsdnFraS0Table.setStatus("current")
_StaIsdnFraS0Entry_Object = MibTableRow
staIsdnFraS0Entry = _StaIsdnFraS0Entry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1)
)
staIsdnFraS0Entry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIsdnFraS0Ifc"),
)
if mibBuilder.loadTexts:
    staIsdnFraS0Entry.setStatus("current")


class _StaIsdnFraS0Ifc_Type(Integer32):
    """Custom type staIsdnFraS0Ifc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_StaIsdnFraS0Ifc_Type.__name__ = "Integer32"
_StaIsdnFraS0Ifc_Object = MibTableColumn
staIsdnFraS0Ifc = _StaIsdnFraS0Ifc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 1),
    _StaIsdnFraS0Ifc_Type()
)
staIsdnFraS0Ifc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnFraS0Ifc.setStatus("current")


class _StaIsdnFraS0Sta_Type(DisplayString):
    """Custom type staIsdnFraS0Sta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIsdnFraS0Sta_Type.__name__ = "DisplayString"
_StaIsdnFraS0Sta_Object = MibTableColumn
staIsdnFraS0Sta = _StaIsdnFraS0Sta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 2),
    _StaIsdnFraS0Sta_Type()
)
staIsdnFraS0Sta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnFraS0Sta.setStatus("current")


class _StaIsdnFraS0B1f_Type(Bits):
    """Custom type staIsdnFraS0B1f based on Bits"""
    namedValues = NamedValues(
        *(("loop", 7),
          ("rx-data", 6),
          ("tx-data", 5))
    )

_StaIsdnFraS0B1f_Type.__name__ = "Bits"
_StaIsdnFraS0B1f_Object = MibTableColumn
staIsdnFraS0B1f = _StaIsdnFraS0B1f_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 3),
    _StaIsdnFraS0B1f_Type()
)
staIsdnFraS0B1f.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnFraS0B1f.setStatus("current")


class _StaIsdnFraS0B2f_Type(Bits):
    """Custom type staIsdnFraS0B2f based on Bits"""
    namedValues = NamedValues(
        *(("loop", 7),
          ("rx-data", 6),
          ("tx-data", 5))
    )

_StaIsdnFraS0B2f_Type.__name__ = "Bits"
_StaIsdnFraS0B2f_Object = MibTableColumn
staIsdnFraS0B2f = _StaIsdnFraS0B2f_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 2, 1, 1, 4),
    _StaIsdnFraS0B2f_Type()
)
staIsdnFraS0B2f.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnFraS0B2f.setStatus("current")
_StaIsdnSig_ObjectIdentity = ObjectIdentity
staIsdnSig = _StaIsdnSig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3)
)
_StaIsdnSigLay_ObjectIdentity = ObjectIdentity
staIsdnSigLay = _StaIsdnSigLay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1)
)
_StaIsdnSigLayLapTable_Object = MibTable
staIsdnSigLayLapTable = _StaIsdnSigLayLapTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1)
)
if mibBuilder.loadTexts:
    staIsdnSigLayLapTable.setStatus("current")
_StaIsdnSigLayLapEntry_Object = MibTableRow
staIsdnSigLayLapEntry = _StaIsdnSigLayLapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1)
)
staIsdnSigLayLapEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIsdnSigLayLapCha"),
)
if mibBuilder.loadTexts:
    staIsdnSigLayLapEntry.setStatus("current")


class _StaIsdnSigLayLapCha_Type(Integer32):
    """Custom type staIsdnSigLayLapCha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("e1-1", 1),
          ("e1-2", 2))
    )


_StaIsdnSigLayLapCha_Type.__name__ = "Integer32"
_StaIsdnSigLayLapCha_Object = MibTableColumn
staIsdnSigLayLapCha = _StaIsdnSigLayLapCha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 1),
    _StaIsdnSigLayLapCha_Type()
)
staIsdnSigLayLapCha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigLayLapCha.setStatus("current")


class _StaIsdnSigLayLapTei_Type(Integer32):
    """Custom type staIsdnSigLayLapTei based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            128
        )
    )
    namedValues = NamedValues(
        ("none", 128)
    )


_StaIsdnSigLayLapTei_Type.__name__ = "Integer32"
_StaIsdnSigLayLapTei_Object = MibTableColumn
staIsdnSigLayLapTei = _StaIsdnSigLayLapTei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 2),
    _StaIsdnSigLayLapTei_Type()
)
staIsdnSigLayLapTei.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigLayLapTei.setStatus("current")


class _StaIsdnSigLayLapL2a_Type(Integer32):
    """Custom type staIsdnSigLayLapL2a based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIsdnSigLayLapL2a_Type.__name__ = "Integer32"
_StaIsdnSigLayLapL2a_Object = MibTableColumn
staIsdnSigLayLapL2a = _StaIsdnSigLayLapL2a_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 3),
    _StaIsdnSigLayLapL2a_Type()
)
staIsdnSigLayLapL2a.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigLayLapL2a.setStatus("current")


class _StaIsdnSigLayLapCon_Type(Integer32):
    """Custom type staIsdnSigLayLapCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIsdnSigLayLapCon_Type.__name__ = "Integer32"
_StaIsdnSigLayLapCon_Object = MibTableColumn
staIsdnSigLayLapCon = _StaIsdnSigLayLapCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 1, 1, 1, 4),
    _StaIsdnSigLayLapCon_Type()
)
staIsdnSigLayLapCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigLayLapCon.setStatus("current")
_StaIsdnSigMan_ObjectIdentity = ObjectIdentity
staIsdnSigMan = _StaIsdnSigMan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3)
)
_StaIsdnSigManDinTable_Object = MibTable
staIsdnSigManDinTable = _StaIsdnSigManDinTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1)
)
if mibBuilder.loadTexts:
    staIsdnSigManDinTable.setStatus("current")
_StaIsdnSigManDinEntry_Object = MibTableRow
staIsdnSigManDinEntry = _StaIsdnSigManDinEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1)
)
staIsdnSigManDinEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIsdnSigManDinCha"),
)
if mibBuilder.loadTexts:
    staIsdnSigManDinEntry.setStatus("current")


class _StaIsdnSigManDinCha_Type(Integer32):
    """Custom type staIsdnSigManDinCha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_StaIsdnSigManDinCha_Type.__name__ = "Integer32"
_StaIsdnSigManDinCha_Object = MibTableColumn
staIsdnSigManDinCha = _StaIsdnSigManDinCha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 1),
    _StaIsdnSigManDinCha_Type()
)
staIsdnSigManDinCha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManDinCha.setStatus("current")


class _StaIsdnSigManDinPro_Type(Integer32):
    """Custom type staIsdnSigManDinPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("auto", 255),
          ("dss1", 1),
          ("e1tr6", 2),
          ("no", 0),
          ("p2p-dss1", 4))
    )


_StaIsdnSigManDinPro_Type.__name__ = "Integer32"
_StaIsdnSigManDinPro_Object = MibTableColumn
staIsdnSigManDinPro = _StaIsdnSigManDinPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 2),
    _StaIsdnSigManDinPro_Type()
)
staIsdnSigManDinPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManDinPro.setStatus("current")


class _StaIsdnSigManDinLay_Type(Integer32):
    """Custom type staIsdnSigManDinLay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIsdnSigManDinLay_Type.__name__ = "Integer32"
_StaIsdnSigManDinLay_Object = MibTableColumn
staIsdnSigManDinLay = _StaIsdnSigManDinLay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 3),
    _StaIsdnSigManDinLay_Type()
)
staIsdnSigManDinLay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManDinLay.setStatus("current")


class _StaIsdnSigManDinTei_Type(Integer32):
    """Custom type staIsdnSigManDinTei based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIsdnSigManDinTei_Type.__name__ = "Integer32"
_StaIsdnSigManDinTei_Object = MibTableColumn
staIsdnSigManDinTei = _StaIsdnSigManDinTei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 4),
    _StaIsdnSigManDinTei_Type()
)
staIsdnSigManDinTei.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManDinTei.setStatus("current")


class _StaIsdnSigManDinS0a_Type(Integer32):
    """Custom type staIsdnSigManDinS0a based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIsdnSigManDinS0a_Type.__name__ = "Integer32"
_StaIsdnSigManDinS0a_Object = MibTableColumn
staIsdnSigManDinS0a = _StaIsdnSigManDinS0a_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 1, 1, 5),
    _StaIsdnSigManDinS0a_Type()
)
staIsdnSigManDinS0a.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManDinS0a.setStatus("current")
_StaIsdnSigManErrTable_Object = MibTable
staIsdnSigManErrTable = _StaIsdnSigManErrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2)
)
if mibBuilder.loadTexts:
    staIsdnSigManErrTable.setStatus("current")
_StaIsdnSigManErrEntry_Object = MibTableRow
staIsdnSigManErrEntry = _StaIsdnSigManErrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1)
)
staIsdnSigManErrEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staIsdnSigManErrIfc"),
)
if mibBuilder.loadTexts:
    staIsdnSigManErrEntry.setStatus("current")


class _StaIsdnSigManErrIfc_Type(Integer32):
    """Custom type staIsdnSigManErrIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_StaIsdnSigManErrIfc_Type.__name__ = "Integer32"
_StaIsdnSigManErrIfc_Object = MibTableColumn
staIsdnSigManErrIfc = _StaIsdnSigManErrIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 1),
    _StaIsdnSigManErrIfc_Type()
)
staIsdnSigManErrIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrIfc.setStatus("current")


class _StaIsdnSigManErrA_Type(Integer32):
    """Custom type staIsdnSigManErrA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrA_Type.__name__ = "Integer32"
_StaIsdnSigManErrA_Object = MibTableColumn
staIsdnSigManErrA = _StaIsdnSigManErrA_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 2),
    _StaIsdnSigManErrA_Type()
)
staIsdnSigManErrA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrA.setStatus("current")


class _StaIsdnSigManErrB_Type(Integer32):
    """Custom type staIsdnSigManErrB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrB_Type.__name__ = "Integer32"
_StaIsdnSigManErrB_Object = MibTableColumn
staIsdnSigManErrB = _StaIsdnSigManErrB_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 3),
    _StaIsdnSigManErrB_Type()
)
staIsdnSigManErrB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrB.setStatus("current")


class _StaIsdnSigManErrC_Type(Integer32):
    """Custom type staIsdnSigManErrC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrC_Type.__name__ = "Integer32"
_StaIsdnSigManErrC_Object = MibTableColumn
staIsdnSigManErrC = _StaIsdnSigManErrC_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 4),
    _StaIsdnSigManErrC_Type()
)
staIsdnSigManErrC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrC.setStatus("current")


class _StaIsdnSigManErrD_Type(Integer32):
    """Custom type staIsdnSigManErrD based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrD_Type.__name__ = "Integer32"
_StaIsdnSigManErrD_Object = MibTableColumn
staIsdnSigManErrD = _StaIsdnSigManErrD_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 5),
    _StaIsdnSigManErrD_Type()
)
staIsdnSigManErrD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrD.setStatus("current")


class _StaIsdnSigManErrE_Type(Integer32):
    """Custom type staIsdnSigManErrE based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrE_Type.__name__ = "Integer32"
_StaIsdnSigManErrE_Object = MibTableColumn
staIsdnSigManErrE = _StaIsdnSigManErrE_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 6),
    _StaIsdnSigManErrE_Type()
)
staIsdnSigManErrE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrE.setStatus("current")


class _StaIsdnSigManErrF_Type(Integer32):
    """Custom type staIsdnSigManErrF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrF_Type.__name__ = "Integer32"
_StaIsdnSigManErrF_Object = MibTableColumn
staIsdnSigManErrF = _StaIsdnSigManErrF_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 7),
    _StaIsdnSigManErrF_Type()
)
staIsdnSigManErrF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrF.setStatus("current")


class _StaIsdnSigManErrG_Type(Integer32):
    """Custom type staIsdnSigManErrG based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrG_Type.__name__ = "Integer32"
_StaIsdnSigManErrG_Object = MibTableColumn
staIsdnSigManErrG = _StaIsdnSigManErrG_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 8),
    _StaIsdnSigManErrG_Type()
)
staIsdnSigManErrG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrG.setStatus("current")


class _StaIsdnSigManErrH_Type(Integer32):
    """Custom type staIsdnSigManErrH based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrH_Type.__name__ = "Integer32"
_StaIsdnSigManErrH_Object = MibTableColumn
staIsdnSigManErrH = _StaIsdnSigManErrH_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 9),
    _StaIsdnSigManErrH_Type()
)
staIsdnSigManErrH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrH.setStatus("current")


class _StaIsdnSigManErrI_Type(Integer32):
    """Custom type staIsdnSigManErrI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrI_Type.__name__ = "Integer32"
_StaIsdnSigManErrI_Object = MibTableColumn
staIsdnSigManErrI = _StaIsdnSigManErrI_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 10),
    _StaIsdnSigManErrI_Type()
)
staIsdnSigManErrI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrI.setStatus("current")


class _StaIsdnSigManErrJ_Type(Integer32):
    """Custom type staIsdnSigManErrJ based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrJ_Type.__name__ = "Integer32"
_StaIsdnSigManErrJ_Object = MibTableColumn
staIsdnSigManErrJ = _StaIsdnSigManErrJ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 11),
    _StaIsdnSigManErrJ_Type()
)
staIsdnSigManErrJ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrJ.setStatus("current")


class _StaIsdnSigManErrK_Type(Integer32):
    """Custom type staIsdnSigManErrK based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrK_Type.__name__ = "Integer32"
_StaIsdnSigManErrK_Object = MibTableColumn
staIsdnSigManErrK = _StaIsdnSigManErrK_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 12),
    _StaIsdnSigManErrK_Type()
)
staIsdnSigManErrK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrK.setStatus("current")


class _StaIsdnSigManErrL_Type(Integer32):
    """Custom type staIsdnSigManErrL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrL_Type.__name__ = "Integer32"
_StaIsdnSigManErrL_Object = MibTableColumn
staIsdnSigManErrL = _StaIsdnSigManErrL_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 13),
    _StaIsdnSigManErrL_Type()
)
staIsdnSigManErrL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrL.setStatus("current")


class _StaIsdnSigManErrM_Type(Integer32):
    """Custom type staIsdnSigManErrM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrM_Type.__name__ = "Integer32"
_StaIsdnSigManErrM_Object = MibTableColumn
staIsdnSigManErrM = _StaIsdnSigManErrM_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 14),
    _StaIsdnSigManErrM_Type()
)
staIsdnSigManErrM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrM.setStatus("current")


class _StaIsdnSigManErrN_Type(Integer32):
    """Custom type staIsdnSigManErrN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrN_Type.__name__ = "Integer32"
_StaIsdnSigManErrN_Object = MibTableColumn
staIsdnSigManErrN = _StaIsdnSigManErrN_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 15),
    _StaIsdnSigManErrN_Type()
)
staIsdnSigManErrN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrN.setStatus("current")


class _StaIsdnSigManErrO_Type(Integer32):
    """Custom type staIsdnSigManErrO based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIsdnSigManErrO_Type.__name__ = "Integer32"
_StaIsdnSigManErrO_Object = MibTableColumn
staIsdnSigManErrO = _StaIsdnSigManErrO_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 3, 3, 2, 1, 16),
    _StaIsdnSigManErrO_Type()
)
staIsdnSigManErrO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIsdnSigManErrO.setStatus("current")
_StaIsdnDel_Type = DisplayString
_StaIsdnDel_Object = MibScalar
staIsdnDel = _StaIsdnDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 33, 99),
    _StaIsdnDel_Type()
)
staIsdnDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIsdnDel.setStatus("current")
_StaSnmp_ObjectIdentity = ObjectIdentity
staSnmp = _StaSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35)
)
_StaSnmpEveTable_Object = MibTable
staSnmpEveTable = _StaSnmpEveTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1)
)
if mibBuilder.loadTexts:
    staSnmpEveTable.setStatus("current")
_StaSnmpEveEntry_Object = MibTableRow
staSnmpEveEntry = _StaSnmpEveEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1)
)
staSnmpEveEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staSnmpEveTra"),
    (0, "LANCOM-1711-MIB", "staSnmpEveVen"),
)
if mibBuilder.loadTexts:
    staSnmpEveEntry.setStatus("current")


class _StaSnmpEveTra_Type(Integer32):
    """Custom type staSnmpEveTra based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              255)
        )
    )
    namedValues = NamedValues(
        *(("authfail", 4),
          ("coldstart", 255),
          ("enterprise", 6),
          ("epgnloss", 5),
          ("linkdown", 2),
          ("linkup", 3),
          ("warmstart", 1))
    )


_StaSnmpEveTra_Type.__name__ = "Integer32"
_StaSnmpEveTra_Object = MibTableColumn
staSnmpEveTra = _StaSnmpEveTra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 1),
    _StaSnmpEveTra_Type()
)
staSnmpEveTra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staSnmpEveTra.setStatus("current")


class _StaSnmpEveVen_Type(Integer32):
    """Custom type staSnmpEveVen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              26,
              27,
              28,
              29,
              38,
              39,
              41,
              2000,
              2001,
              5002,
              5003,
              5004)
        )
    )
    namedValues = NamedValues(
        *(("cnfdnlstart", 12),
          ("cnfdnlsucc", 13),
          ("cnfuplstart", 11),
          ("errlogin", 29),
          ("fwuplstart", 4),
          ("http-tunnel-close", 2001),
          ("http-tunnel-open", 2000),
          ("ipfwflt", 26),
          ("lan-overtemp-throttle", 5002),
          ("lan-overtemp-throttle-end", 5003),
          ("lan-overtemp-throttle-recommend", 5004),
          ("ldblconn", 38),
          ("login", 9),
          ("logout", 10),
          ("pppoesconn", 39),
          ("pptpconn", 28),
          ("statchan", 1),
          ("uplfailbaddev", 8),
          ("uplfailincl", 7),
          ("uplfailto", 6),
          ("uplsucc", 5),
          ("vpnconn", 27),
          ("vrrp", 41))
    )


_StaSnmpEveVen_Type.__name__ = "Integer32"
_StaSnmpEveVen_Object = MibTableColumn
staSnmpEveVen = _StaSnmpEveVen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 2),
    _StaSnmpEveVen_Type()
)
staSnmpEveVen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staSnmpEveVen.setStatus("current")


class _StaSnmpEveCou_Type(Integer32):
    """Custom type staSnmpEveCou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaSnmpEveCou_Type.__name__ = "Integer32"
_StaSnmpEveCou_Object = MibTableColumn
staSnmpEveCou = _StaSnmpEveCou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 35, 1, 1, 3),
    _StaSnmpEveCou_Type()
)
staSnmpEveCou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staSnmpEveCou.setStatus("current")
_StaMail_ObjectIdentity = ObjectIdentity
staMail = _StaMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43)
)
_StaMailBuf_Type = Integer32
_StaMailBuf_Object = MibScalar
staMailBuf = _StaMailBuf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 1),
    _StaMailBuf_Type()
)
staMailBuf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staMailBuf.setStatus("current")
_StaMailSen_Type = Counter32
_StaMailSen_Object = MibScalar
staMailSen = _StaMailSen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 2),
    _StaMailSen_Type()
)
staMailSen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staMailSen.setStatus("current")
_StaMailDis_Type = Counter32
_StaMailDis_Object = MibScalar
staMailDis = _StaMailDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 3),
    _StaMailDis_Type()
)
staMailDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staMailDis.setStatus("current")
_StaMailCle_Type = DisplayString
_StaMailCle_Object = MibScalar
staMailCle = _StaMailCle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 4),
    _StaMailCle_Type()
)
staMailCle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staMailCle.setStatus("current")
_StaMailDel_Type = DisplayString
_StaMailDel_Object = MibScalar
staMailDel = _StaMailDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 43, 5),
    _StaMailDel_Type()
)
staMailDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staMailDel.setStatus("current")
_StaHard_ObjectIdentity = ObjectIdentity
staHard = _StaHard_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47)
)


class _StaHardCput_Type(DisplayString):
    """Custom type staHardCput based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_StaHardCput_Type.__name__ = "DisplayString"
_StaHardCput_Object = MibScalar
staHardCput = _StaHardCput_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 1),
    _StaHardCput_Type()
)
staHardCput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardCput.setStatus("current")
_StaHardCpuc_Type = Integer32
_StaHardCpuc_Object = MibScalar
staHardCpuc = _StaHardCpuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 2),
    _StaHardCpuc_Type()
)
staHardCpuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardCpuc.setStatus("current")
_StaHardCpul_Type = Integer32
_StaHardCpul_Object = MibScalar
staHardCpul = _StaHardCpul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 3),
    _StaHardCpul_Type()
)
staHardCpul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardCpul.setStatus("current")
_StaHardTota_Type = Integer32
_StaHardTota_Object = MibScalar
staHardTota = _StaHardTota_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 4),
    _StaHardTota_Type()
)
staHardTota.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardTota.setStatus("current")
_StaHardFree_Type = Integer32
_StaHardFree_Object = MibScalar
staHardFree = _StaHardFree_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 5),
    _StaHardFree_Type()
)
staHardFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardFree.setStatus("current")


class _StaHardMode_Type(DisplayString):
    """Custom type staHardMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaHardMode_Type.__name__ = "DisplayString"
_StaHardMode_Object = MibScalar
staHardMode = _StaHardMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 6),
    _StaHardMode_Type()
)
staHardMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardMode.setStatus("current")


class _StaHardSeri_Type(DisplayString):
    """Custom type staHardSeri based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaHardSeri_Type.__name__ = "DisplayString"
_StaHardSeri_Object = MibScalar
staHardSeri = _StaHardSeri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 7),
    _StaHardSeri_Type()
)
staHardSeri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardSeri.setStatus("current")


class _StaHardBoar_Type(DisplayString):
    """Custom type staHardBoar based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_StaHardBoar_Type.__name__ = "DisplayString"
_StaHardBoar_Object = MibScalar
staHardBoar = _StaHardBoar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 8),
    _StaHardBoar_Type()
)
staHardBoar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardBoar.setStatus("current")


class _StaHardSwve_Type(DisplayString):
    """Custom type staHardSwve based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_StaHardSwve_Type.__name__ = "DisplayString"
_StaHardSwve_Object = MibScalar
staHardSwve = _StaHardSwve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 9),
    _StaHardSwve_Type()
)
staHardSwve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardSwve.setStatus("current")


class _StaHardEthe_Type(DisplayString):
    """Custom type staHardEthe based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_StaHardEthe_Type.__name__ = "DisplayString"
_StaHardEthe_Object = MibScalar
staHardEthe = _StaHardEthe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 10),
    _StaHardEthe_Type()
)
staHardEthe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardEthe.setStatus("current")


class _StaHardVpnh_Type(Integer32):
    """Custom type staHardVpnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaHardVpnh_Type.__name__ = "Integer32"
_StaHardVpnh_Object = MibScalar
staHardVpnh = _StaHardVpnh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 47, 11),
    _StaHardVpnh_Type()
)
staHardVpnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardVpnh.setStatus("current")
_StaChanTable_Object = MibTable
staChanTable = _StaChanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48)
)
if mibBuilder.loadTexts:
    staChanTable.setStatus("current")
_StaChanEntry_Object = MibTableRow
staChanEntry = _StaChanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1)
)
staChanEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staChanChan"),
)
if mibBuilder.loadTexts:
    staChanEntry.setStatus("current")


class _StaChanChan_Type(Integer32):
    """Custom type staChanChan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 2),
          ("dsl-ch-2", 3),
          ("dsl-ch-3", 4),
          ("dsl-ch-4", 5),
          ("dsl-ch-5", 6),
          ("dsl-ch-6", 7),
          ("dsl-ch-7", 8),
          ("dsl-ch-8", 9),
          ("dsl-err", 1),
          ("ext", 14),
          ("ext-err", 13),
          ("s0-1-b1", 11),
          ("s0-1-b2", 12),
          ("s0-1-err", 10))
    )


_StaChanChan_Type.__name__ = "Integer32"
_StaChanChan_Object = MibTableColumn
staChanChan = _StaChanChan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 1),
    _StaChanChan_Type()
)
staChanChan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanChan.setStatus("current")


class _StaChanPlci_Type(Integer32):
    """Custom type staChanPlci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanPlci_Type.__name__ = "Integer32"
_StaChanPlci_Object = MibTableColumn
staChanPlci = _StaChanPlci_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 2),
    _StaChanPlci_Type()
)
staChanPlci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanPlci.setStatus("current")


class _StaChanBus_Type(Integer32):
    """Custom type staChanBus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanBus_Type.__name__ = "Integer32"
_StaChanBus_Object = MibTableColumn
staChanBus = _StaChanBus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 3),
    _StaChanBus_Type()
)
staChanBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanBus.setStatus("current")


class _StaChanState_Type(Integer32):
    """Custom type staChanState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanState_Type.__name__ = "Integer32"
_StaChanState_Object = MibTableColumn
staChanState = _StaChanState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 4),
    _StaChanState_Type()
)
staChanState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanState.setStatus("current")


class _StaChanApp_Type(Integer32):
    """Custom type staChanApp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("a-b", 3),
          ("capi", 2),
          ("none", 0),
          ("router", 1),
          ("time-module", 255))
    )


_StaChanApp_Type.__name__ = "Integer32"
_StaChanApp_Object = MibTableColumn
staChanApp = _StaChanApp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 5),
    _StaChanApp_Type()
)
staChanApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanApp.setStatus("current")


class _StaChanMode_Type(Integer32):
    """Custom type staChanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("act", 1),
          ("pas", 2),
          ("perm", 3),
          ("unk", 0))
    )


_StaChanMode_Type.__name__ = "Integer32"
_StaChanMode_Object = MibTableColumn
staChanMode = _StaChanMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 6),
    _StaChanMode_Type()
)
staChanMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanMode.setStatus("current")


class _StaChanCause_Type(Integer32):
    """Custom type staChanCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaChanCause_Type.__name__ = "Integer32"
_StaChanCause_Object = MibTableColumn
staChanCause = _StaChanCause_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 7),
    _StaChanCause_Type()
)
staChanCause.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staChanCause.setStatus("current")


class _StaChanNumbe_Type(DisplayString):
    """Custom type staChanNumbe based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_StaChanNumbe_Type.__name__ = "DisplayString"
_StaChanNumbe_Object = MibTableColumn
staChanNumbe = _StaChanNumbe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 8),
    _StaChanNumbe_Type()
)
staChanNumbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanNumbe.setStatus("current")


class _StaChanSubad_Type(Integer32):
    """Custom type staChanSubad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanSubad_Type.__name__ = "Integer32"
_StaChanSubad_Object = MibTableColumn
staChanSubad = _StaChanSubad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 9),
    _StaChanSubad_Type()
)
staChanSubad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanSubad.setStatus("current")


class _StaChanCharg_Type(Integer32):
    """Custom type staChanCharg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanCharg_Type.__name__ = "Integer32"
_StaChanCharg_Object = MibTableColumn
staChanCharg = _StaChanCharg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 10),
    _StaChanCharg_Type()
)
staChanCharg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanCharg.setStatus("current")


class _StaChanExtra_Type(DisplayString):
    """Custom type staChanExtra based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaChanExtra_Type.__name__ = "DisplayString"
_StaChanExtra_Object = MibTableColumn
staChanExtra = _StaChanExtra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 11),
    _StaChanExtra_Type()
)
staChanExtra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanExtra.setStatus("current")


class _StaChanConnt_Type(Integer32):
    """Custom type staChanConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanConnt_Type.__name__ = "Integer32"
_StaChanConnt_Object = MibTableColumn
staChanConnt = _StaChanConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 12),
    _StaChanConnt_Type()
)
staChanConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanConnt.setStatus("current")


class _StaChanConns_Type(Integer32):
    """Custom type staChanConns based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanConns_Type.__name__ = "Integer32"
_StaChanConns_Object = MibTableColumn
staChanConns = _StaChanConns_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 13),
    _StaChanConns_Type()
)
staChanConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanConns.setStatus("current")


class _StaChanIsdnd_Type(DisplayString):
    """Custom type staChanIsdnd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_StaChanIsdnd_Type.__name__ = "DisplayString"
_StaChanIsdnd_Object = MibTableColumn
staChanIsdnd = _StaChanIsdnd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 14),
    _StaChanIsdnd_Type()
)
staChanIsdnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanIsdnd.setStatus("current")


class _StaChanPhcha_Type(Integer32):
    """Custom type staChanPhcha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanPhcha_Type.__name__ = "Integer32"
_StaChanPhcha_Object = MibTableColumn
staChanPhcha = _StaChanPhcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 15),
    _StaChanPhcha_Type()
)
staChanPhcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanPhcha.setStatus("current")


class _StaChanPptpc_Type(Integer32):
    """Custom type staChanPptpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanPptpc_Type.__name__ = "Integer32"
_StaChanPptpc_Object = MibTableColumn
staChanPptpc = _StaChanPptpc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 16),
    _StaChanPptpc_Type()
)
staChanPptpc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanPptpc.setStatus("current")


class _StaChanVpnco_Type(Integer32):
    """Custom type staChanVpnco based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChanVpnco_Type.__name__ = "Integer32"
_StaChanVpnco_Object = MibTableColumn
staChanVpnco = _StaChanVpnco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 48, 1, 17),
    _StaChanVpnco_Type()
)
staChanVpnco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChanVpnco.setStatus("current")
_StaMode_ObjectIdentity = ObjectIdentity
staMode = _StaMode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49)
)


class _StaModeModeminfo_Type(DisplayString):
    """Custom type staModeModeminfo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaModeModeminfo_Type.__name__ = "DisplayString"
_StaModeModeminfo_Object = MibScalar
staModeModeminfo = _StaModeModeminfo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 1),
    _StaModeModeminfo_Type()
)
staModeModeminfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeModeminfo.setStatus("current")


class _StaModeConnectinfo_Type(DisplayString):
    """Custom type staModeConnectinfo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaModeConnectinfo_Type.__name__ = "DisplayString"
_StaModeConnectinfo_Object = MibScalar
staModeConnectinfo = _StaModeConnectinfo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 2),
    _StaModeConnectinfo_Type()
)
staModeConnectinfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeConnectinfo.setStatus("current")


class _StaModeState_Type(Integer32):
    """Custom type staModeState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connecting", 6),
          ("data-mode", 8),
          ("deactivated", 0),
          ("device-detection", 1),
          ("initializing", 3),
          ("modem-id", 4),
          ("network", 14),
          ("network-scan", 9),
          ("pass-connecting", 7),
          ("pin-invalid", 11),
          ("puk-required", 13),
          ("ready", 5),
          ("reset", 2),
          ("set-pin", 10),
          ("unexpected-response", 12),
          ("wait-for-device", 15))
    )


_StaModeState_Type.__name__ = "Integer32"
_StaModeState_Object = MibScalar
staModeState = _StaModeState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 3),
    _StaModeState_Type()
)
staModeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeState.setStatus("current")


class _StaModeOperating_Type(Integer32):
    """Custom type staModeOperating based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("modem", 1),
          ("no", 0),
          ("umts-gprs", 2))
    )


_StaModeOperating_Type.__name__ = "Integer32"
_StaModeOperating_Object = MibScalar
staModeOperating = _StaModeOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 4),
    _StaModeOperating_Type()
)
staModeOperating.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeOperating.setStatus("current")
_StaModeDatarate_Type = Integer32
_StaModeDatarate_Object = MibScalar
staModeDatarate = _StaModeDatarate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 5),
    _StaModeDatarate_Type()
)
staModeDatarate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeDatarate.setStatus("current")
_StaModeSignaldbm_Type = Integer32
_StaModeSignaldbm_Object = MibScalar
staModeSignaldbm = _StaModeSignaldbm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 6),
    _StaModeSignaldbm_Type()
)
staModeSignaldbm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeSignaldbm.setStatus("current")


class _StaModeRegistration_Type(Integer32):
    """Custom type staModeRegistration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("denied", 3),
          ("home-network", 1),
          ("no-network", 0),
          ("roaming", 5),
          ("searching", 2),
          ("unknown", 4))
    )


_StaModeRegistration_Type.__name__ = "Integer32"
_StaModeRegistration_Object = MibScalar
staModeRegistration = _StaModeRegistration_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 7),
    _StaModeRegistration_Type()
)
staModeRegistration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeRegistration.setStatus("current")


class _StaModeNetwork_Type(DisplayString):
    """Custom type staModeNetwork based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaModeNetwork_Type.__name__ = "DisplayString"
_StaModeNetwork_Object = MibScalar
staModeNetwork = _StaModeNetwork_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 8),
    _StaModeNetwork_Type()
)
staModeNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeNetwork.setStatus("current")
_StaModeNetworklistTable_Object = MibTable
staModeNetworklistTable = _StaModeNetworklistTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9)
)
if mibBuilder.loadTexts:
    staModeNetworklistTable.setStatus("current")
_StaModeNetworklistEntry_Object = MibTableRow
staModeNetworklistEntry = _StaModeNetworklistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1)
)
staModeNetworklistEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staModeNetworklistNet"),
)
if mibBuilder.loadTexts:
    staModeNetworklistEntry.setStatus("current")


class _StaModeNetworklistNet_Type(DisplayString):
    """Custom type staModeNetworklistNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaModeNetworklistNet_Type.__name__ = "DisplayString"
_StaModeNetworklistNet_Object = MibTableColumn
staModeNetworklistNet = _StaModeNetworklistNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 1),
    _StaModeNetworklistNet_Type()
)
staModeNetworklistNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeNetworklistNet.setStatus("current")


class _StaModeNetworklistSta_Type(Integer32):
    """Custom type staModeNetworklistSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("available", 2),
          ("current", 3),
          ("forbidden", 4),
          ("unknown", 1))
    )


_StaModeNetworklistSta_Type.__name__ = "Integer32"
_StaModeNetworklistSta_Object = MibTableColumn
staModeNetworklistSta = _StaModeNetworklistSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 2),
    _StaModeNetworklistSta_Type()
)
staModeNetworklistSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeNetworklistSta.setStatus("current")


class _StaModeNetworklistMod_Type(Bits):
    """Custom type staModeNetworklistMod based on Bits"""
    namedValues = NamedValues(
        *(("gprs", 31),
          ("umts", 30))
    )

_StaModeNetworklistMod_Type.__name__ = "Bits"
_StaModeNetworklistMod_Object = MibTableColumn
staModeNetworklistMod = _StaModeNetworklistMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 3),
    _StaModeNetworklistMod_Type()
)
staModeNetworklistMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeNetworklistMod.setStatus("current")


class _StaModeNetworklistNum_Type(Integer32):
    """Custom type staModeNetworklistNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaModeNetworklistNum_Type.__name__ = "Integer32"
_StaModeNetworklistNum_Object = MibTableColumn
staModeNetworklistNum = _StaModeNetworklistNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 9, 1, 4),
    _StaModeNetworklistNum_Type()
)
staModeNetworklistNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeNetworklistNum.setStatus("current")
_StaModeScannetworks_Type = DisplayString
_StaModeScannetworks_Object = MibScalar
staModeScannetworks = _StaModeScannetworks_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 10),
    _StaModeScannetworks_Type()
)
staModeScannetworks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staModeScannetworks.setStatus("current")
_StaModeInputpuk_Type = DisplayString
_StaModeInputpuk_Object = MibScalar
staModeInputpuk = _StaModeInputpuk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 11),
    _StaModeInputpuk_Type()
)
staModeInputpuk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staModeInputpuk.setStatus("current")


class _StaModeMode_Type(Integer32):
    """Custom type staModeMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("edge", 4),
          ("gprs", 2),
          ("gsm", 3),
          ("hsdpa", 5),
          ("hsupa", 6),
          ("umts", 1),
          ("unknown", 0))
    )


_StaModeMode_Type.__name__ = "Integer32"
_StaModeMode_Object = MibScalar
staModeMode = _StaModeMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 12),
    _StaModeMode_Type()
)
staModeMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeMode.setStatus("current")


class _StaModePort_Type(Integer32):
    """Custom type staModePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("outband", 1),
          ("usb", 2))
    )


_StaModePort_Type.__name__ = "Integer32"
_StaModePort_Object = MibScalar
staModePort = _StaModePort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 13),
    _StaModePort_Type()
)
staModePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModePort.setStatus("current")
_StaModeDroppedtxpacke_Type = Integer32
_StaModeDroppedtxpacke_Object = MibScalar
staModeDroppedtxpacke = _StaModeDroppedtxpacke_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 14),
    _StaModeDroppedtxpacke_Type()
)
staModeDroppedtxpacke.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeDroppedtxpacke.setStatus("current")
_StaModeHardwareresets_Type = Integer32
_StaModeHardwareresets_Object = MibScalar
staModeHardwareresets = _StaModeHardwareresets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 15),
    _StaModeHardwareresets_Type()
)
staModeHardwareresets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHardwareresets.setStatus("current")
_StaModeHistoryTable_Object = MibTable
staModeHistoryTable = _StaModeHistoryTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16)
)
if mibBuilder.loadTexts:
    staModeHistoryTable.setStatus("current")
_StaModeHistoryEntry_Object = MibTableRow
staModeHistoryEntry = _StaModeHistoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1)
)
staModeHistoryEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staModeHistoryInd"),
)
if mibBuilder.loadTexts:
    staModeHistoryEntry.setStatus("current")


class _StaModeHistoryInd_Type(Integer32):
    """Custom type staModeHistoryInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaModeHistoryInd_Type.__name__ = "Integer32"
_StaModeHistoryInd_Object = MibTableColumn
staModeHistoryInd = _StaModeHistoryInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 1),
    _StaModeHistoryInd_Type()
)
staModeHistoryInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHistoryInd.setStatus("current")


class _StaModeHistoryTim_Type(Integer32):
    """Custom type staModeHistoryTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaModeHistoryTim_Type.__name__ = "Integer32"
_StaModeHistoryTim_Object = MibTableColumn
staModeHistoryTim = _StaModeHistoryTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 2),
    _StaModeHistoryTim_Type()
)
staModeHistoryTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHistoryTim.setStatus("current")


class _StaModeHistorySig_Type(Integer32):
    """Custom type staModeHistorySig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2147483648, 2147483647),
    )


_StaModeHistorySig_Type.__name__ = "Integer32"
_StaModeHistorySig_Object = MibTableColumn
staModeHistorySig = _StaModeHistorySig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 3),
    _StaModeHistorySig_Type()
)
staModeHistorySig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHistorySig.setStatus("current")


class _StaModeHistoryNet_Type(DisplayString):
    """Custom type staModeHistoryNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_StaModeHistoryNet_Type.__name__ = "DisplayString"
_StaModeHistoryNet_Object = MibTableColumn
staModeHistoryNet = _StaModeHistoryNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 4),
    _StaModeHistoryNet_Type()
)
staModeHistoryNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHistoryNet.setStatus("current")


class _StaModeHistoryMod_Type(Integer32):
    """Custom type staModeHistoryMod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("edge", 4),
          ("gprs", 2),
          ("gsm", 3),
          ("hsdpa", 5),
          ("hsupa", 6),
          ("umts", 1),
          ("unknown", 0))
    )


_StaModeHistoryMod_Type.__name__ = "Integer32"
_StaModeHistoryMod_Object = MibTableColumn
staModeHistoryMod = _StaModeHistoryMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 5),
    _StaModeHistoryMod_Type()
)
staModeHistoryMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHistoryMod.setStatus("current")


class _StaModeHistoryReg_Type(Integer32):
    """Custom type staModeHistoryReg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("denied", 3),
          ("home-network", 1),
          ("no-network", 0),
          ("roaming", 5),
          ("searching", 2),
          ("unknown", 4))
    )


_StaModeHistoryReg_Type.__name__ = "Integer32"
_StaModeHistoryReg_Object = MibTableColumn
staModeHistoryReg = _StaModeHistoryReg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 16, 1, 6),
    _StaModeHistoryReg_Type()
)
staModeHistoryReg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeHistoryReg.setStatus("current")


class _StaModeTemperaturesta_Type(Integer32):
    """Custom type staModeTemperaturesta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("high", 3),
          ("high-critical", 6),
          ("low", 2),
          ("low-critical", 5),
          ("normal", 1),
          ("unknown", 0))
    )


_StaModeTemperaturesta_Type.__name__ = "Integer32"
_StaModeTemperaturesta_Object = MibScalar
staModeTemperaturesta = _StaModeTemperaturesta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 17),
    _StaModeTemperaturesta_Type()
)
staModeTemperaturesta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeTemperaturesta.setStatus("current")
_StaModeTemperaturedeg_Type = Integer32
_StaModeTemperaturedeg_Object = MibScalar
staModeTemperaturedeg = _StaModeTemperaturedeg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 18),
    _StaModeTemperaturedeg_Type()
)
staModeTemperaturedeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeTemperaturedeg.setStatus("current")


class _StaModeSupplyvoltages_Type(Integer32):
    """Custom type staModeSupplyvoltages based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("high", 3),
          ("high-critical", 6),
          ("low", 2),
          ("low-critical", 5),
          ("normal", 1),
          ("unknown", 0))
    )


_StaModeSupplyvoltages_Type.__name__ = "Integer32"
_StaModeSupplyvoltages_Object = MibScalar
staModeSupplyvoltages = _StaModeSupplyvoltages_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 19),
    _StaModeSupplyvoltages_Type()
)
staModeSupplyvoltages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeSupplyvoltages.setStatus("current")
_StaModeSupplyvoltagem_Type = Integer32
_StaModeSupplyvoltagem_Object = MibScalar
staModeSupplyvoltagem = _StaModeSupplyvoltagem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 20),
    _StaModeSupplyvoltagem_Type()
)
staModeSupplyvoltagem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeSupplyvoltagem.setStatus("current")


class _StaModePinstatus_Type(DisplayString):
    """Custom type staModePinstatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 47),
    )


_StaModePinstatus_Type.__name__ = "DisplayString"
_StaModePinstatus_Object = MibScalar
staModePinstatus = _StaModePinstatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 21),
    _StaModePinstatus_Type()
)
staModePinstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModePinstatus.setStatus("current")
_StaModeRxtimeouts_Type = Integer32
_StaModeRxtimeouts_Object = MibScalar
staModeRxtimeouts = _StaModeRxtimeouts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 22),
    _StaModeRxtimeouts_Type()
)
staModeRxtimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeRxtimeouts.setStatus("current")


class _StaModeSimidiccid_Type(DisplayString):
    """Custom type staModeSimidiccid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 22),
    )


_StaModeSimidiccid_Type.__name__ = "DisplayString"
_StaModeSimidiccid_Object = MibScalar
staModeSimidiccid = _StaModeSimidiccid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 49, 23),
    _StaModeSimidiccid_Type()
)
staModeSimidiccid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staModeSimidiccid.setStatus("current")
_StaFile_ObjectIdentity = ObjectIdentity
staFile = _StaFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50)
)
_StaFileConTable_Object = MibTable
staFileConTable = _StaFileConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1)
)
if mibBuilder.loadTexts:
    staFileConTable.setStatus("current")
_StaFileConEntry_Object = MibTableRow
staFileConEntry = _StaFileConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1)
)
staFileConEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staFileConNam"),
)
if mibBuilder.loadTexts:
    staFileConEntry.setStatus("current")


class _StaFileConNam_Type(DisplayString):
    """Custom type staFileConNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaFileConNam_Type.__name__ = "DisplayString"
_StaFileConNam_Object = MibTableColumn
staFileConNam = _StaFileConNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1, 1),
    _StaFileConNam_Type()
)
staFileConNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staFileConNam.setStatus("current")


class _StaFileConSiz_Type(Integer32):
    """Custom type staFileConSiz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaFileConSiz_Type.__name__ = "Integer32"
_StaFileConSiz_Object = MibTableColumn
staFileConSiz = _StaFileConSiz_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 50, 1, 1, 2),
    _StaFileConSiz_Type()
)
staFileConSiz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staFileConSiz.setStatus("current")
_StaEthe_ObjectIdentity = ObjectIdentity
staEthe = _StaEthe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51)
)
_StaEthePortsTable_Object = MibTable
staEthePortsTable = _StaEthePortsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1)
)
if mibBuilder.loadTexts:
    staEthePortsTable.setStatus("current")
_StaEthePortsEntry_Object = MibTableRow
staEthePortsEntry = _StaEthePortsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1)
)
staEthePortsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staEthePortsPor"),
)
if mibBuilder.loadTexts:
    staEthePortsEntry.setStatus("current")


class _StaEthePortsPor_Type(Integer32):
    """Custom type staEthePortsPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_StaEthePortsPor_Type.__name__ = "Integer32"
_StaEthePortsPor_Object = MibTableColumn
staEthePortsPor = _StaEthePortsPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 1),
    _StaEthePortsPor_Type()
)
staEthePortsPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsPor.setStatus("current")


class _StaEthePortsLin_Type(Integer32):
    """Custom type staEthePortsLin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaEthePortsLin_Type.__name__ = "Integer32"
_StaEthePortsLin_Object = MibTableColumn
staEthePortsLin = _StaEthePortsLin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 3),
    _StaEthePortsLin_Type()
)
staEthePortsLin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsLin.setStatus("current")


class _StaEthePortsCon_Type(Integer32):
    """Custom type staEthePortsCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("e100b-tx", 3),
          ("e10b-t", 1),
          ("fd100b-tx", 4),
          ("fd10b-tx", 2),
          ("none", 0))
    )


_StaEthePortsCon_Type.__name__ = "Integer32"
_StaEthePortsCon_Object = MibTableColumn
staEthePortsCon = _StaEthePortsCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 4),
    _StaEthePortsCon_Type()
)
staEthePortsCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsCon.setStatus("current")


class _StaEthePortsMdi_Type(Integer32):
    """Custom type staEthePortsMdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_StaEthePortsMdi_Type.__name__ = "Integer32"
_StaEthePortsMdi_Object = MibTableColumn
staEthePortsMdi = _StaEthePortsMdi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 6),
    _StaEthePortsMdi_Type()
)
staEthePortsMdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsMdi.setStatus("current")


class _StaEthePortsAss_Type(Integer32):
    """Custom type staEthePortsAss based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              512,
              513,
              514,
              515,
              65533,
              65534,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 512),
          ("dsl-2", 513),
          ("dsl-3", 514),
          ("dsl-4", 515),
          ("idle", 65533),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3),
          ("monitor", 65534),
          ("power-down", 65535))
    )


_StaEthePortsAss_Type.__name__ = "Integer32"
_StaEthePortsAss_Object = MibTableColumn
staEthePortsAss = _StaEthePortsAss_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 7),
    _StaEthePortsAss_Type()
)
staEthePortsAss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsAss.setStatus("current")


class _StaEthePortsFlo_Type(Integer32):
    """Custom type staEthePortsFlo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaEthePortsFlo_Type.__name__ = "Integer32"
_StaEthePortsFlo_Object = MibTableColumn
staEthePortsFlo = _StaEthePortsFlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 8),
    _StaEthePortsFlo_Type()
)
staEthePortsFlo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsFlo.setStatus("current")


class _StaEthePortsPri_Type(Integer32):
    """Custom type staEthePortsPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaEthePortsPri_Type.__name__ = "Integer32"
_StaEthePortsPri_Object = MibTableColumn
staEthePortsPri = _StaEthePortsPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 9),
    _StaEthePortsPri_Type()
)
staEthePortsPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsPri.setStatus("current")


class _StaEthePortsAut_Type(Integer32):
    """Custom type staEthePortsAut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("completed", 1),
          ("disabled", 2),
          ("not-available", 3),
          ("pending", 0))
    )


_StaEthePortsAut_Type.__name__ = "Integer32"
_StaEthePortsAut_Object = MibTableColumn
staEthePortsAut = _StaEthePortsAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 1, 1, 10),
    _StaEthePortsAut_Type()
)
staEthePortsAut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEthePortsAut.setStatus("current")
_StaEtheCabletest_Type = DisplayString
_StaEtheCabletest_Object = MibScalar
staEtheCabletest = _StaEtheCabletest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 2),
    _StaEtheCabletest_Type()
)
staEtheCabletest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staEtheCabletest.setStatus("current")
_StaEtheCabletestrTable_Object = MibTable
staEtheCabletestrTable = _StaEtheCabletestrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3)
)
if mibBuilder.loadTexts:
    staEtheCabletestrTable.setStatus("current")
_StaEtheCabletestrEntry_Object = MibTableRow
staEtheCabletestrEntry = _StaEtheCabletestrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1)
)
staEtheCabletestrEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staEtheCabletestrIfc"),
)
if mibBuilder.loadTexts:
    staEtheCabletestrEntry.setStatus("current")


class _StaEtheCabletestrIfc_Type(Integer32):
    """Custom type staEtheCabletestrIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_StaEtheCabletestrIfc_Type.__name__ = "Integer32"
_StaEtheCabletestrIfc_Object = MibTableColumn
staEtheCabletestrIfc = _StaEtheCabletestrIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 1),
    _StaEtheCabletestrIfc_Type()
)
staEtheCabletestrIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEtheCabletestrIfc.setStatus("current")


class _StaEtheCabletestrRxs_Type(Integer32):
    """Custom type staEtheCabletestrRxs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("busy", 6),
          ("fail", 5),
          ("impedance-fault", 4),
          ("ok", 1),
          ("open", 2),
          ("short", 3),
          ("unknown", 0))
    )


_StaEtheCabletestrRxs_Type.__name__ = "Integer32"
_StaEtheCabletestrRxs_Object = MibTableColumn
staEtheCabletestrRxs = _StaEtheCabletestrRxs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 2),
    _StaEtheCabletestrRxs_Type()
)
staEtheCabletestrRxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEtheCabletestrRxs.setStatus("current")


class _StaEtheCabletestrRxd_Type(DisplayString):
    """Custom type staEtheCabletestrRxd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_StaEtheCabletestrRxd_Type.__name__ = "DisplayString"
_StaEtheCabletestrRxd_Object = MibTableColumn
staEtheCabletestrRxd = _StaEtheCabletestrRxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 3),
    _StaEtheCabletestrRxd_Type()
)
staEtheCabletestrRxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEtheCabletestrRxd.setStatus("current")


class _StaEtheCabletestrTxs_Type(Integer32):
    """Custom type staEtheCabletestrTxs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("busy", 6),
          ("fail", 5),
          ("impedance-fault", 4),
          ("ok", 1),
          ("open", 2),
          ("short", 3),
          ("unknown", 0))
    )


_StaEtheCabletestrTxs_Type.__name__ = "Integer32"
_StaEtheCabletestrTxs_Object = MibTableColumn
staEtheCabletestrTxs = _StaEtheCabletestrTxs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 4),
    _StaEtheCabletestrTxs_Type()
)
staEtheCabletestrTxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEtheCabletestrTxs.setStatus("current")


class _StaEtheCabletestrTxd_Type(DisplayString):
    """Custom type staEtheCabletestrTxd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_StaEtheCabletestrTxd_Type.__name__ = "DisplayString"
_StaEtheCabletestrTxd_Object = MibTableColumn
staEtheCabletestrTxd = _StaEtheCabletestrTxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 51, 3, 1, 5),
    _StaEtheCabletestrTxd_Type()
)
staEtheCabletestrTxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staEtheCabletestrTxd.setStatus("current")
_StaPppo_ObjectIdentity = ObjectIdentity
staPppo = _StaPppo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52)
)
_StaPppoRxp_Type = Counter32
_StaPppoRxp_Object = MibScalar
staPppoRxp = _StaPppoRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 1),
    _StaPppoRxp_Type()
)
staPppoRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoRxp.setStatus("current")
_StaPppoTxp_Type = Counter32
_StaPppoTxp_Object = MibScalar
staPppoTxp = _StaPppoTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 2),
    _StaPppoTxp_Type()
)
staPppoTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoTxp.setStatus("current")
_StaPppoDro_Type = Counter32
_StaPppoDro_Object = MibScalar
staPppoDro = _StaPppoDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 5),
    _StaPppoDro_Type()
)
staPppoDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoDro.setStatus("current")
_StaPppoRxe_Type = Counter32
_StaPppoRxe_Object = MibScalar
staPppoRxe = _StaPppoRxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 6),
    _StaPppoRxe_Type()
)
staPppoRxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoRxe.setStatus("current")
_StaPppoSes_Type = Counter32
_StaPppoSes_Object = MibScalar
staPppoSes = _StaPppoSes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 8),
    _StaPppoSes_Type()
)
staPppoSes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoSes.setStatus("current")
_StaPppoConTable_Object = MibTable
staPppoConTable = _StaPppoConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9)
)
if mibBuilder.loadTexts:
    staPppoConTable.setStatus("current")
_StaPppoConEntry_Object = MibTableRow
staPppoConEntry = _StaPppoConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1)
)
staPppoConEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staPppoConCha"),
    (0, "LANCOM-1711-MIB", "staPppoConMac"),
)
if mibBuilder.loadTexts:
    staPppoConEntry.setStatus("current")


class _StaPppoConCha_Type(DisplayString):
    """Custom type staPppoConCha based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaPppoConCha_Type.__name__ = "DisplayString"
_StaPppoConCha_Object = MibTableColumn
staPppoConCha = _StaPppoConCha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 1),
    _StaPppoConCha_Type()
)
staPppoConCha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoConCha.setStatus("current")


class _StaPppoConMac_Type(DisplayString):
    """Custom type staPppoConMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaPppoConMac_Type.__name__ = "DisplayString"
_StaPppoConMac_Object = MibTableColumn
staPppoConMac = _StaPppoConMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 2),
    _StaPppoConMac_Type()
)
staPppoConMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoConMac.setStatus("current")


class _StaPppoConSta_Type(Integer32):
    """Custom type staPppoConSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bundle", 13),
          ("bundle-connect", 10),
          ("call-back", 9),
          ("connection", 7),
          ("dial", 4),
          ("disconnecting", 8),
          ("incoming-call", 5),
          ("init", 0),
          ("protocol", 6),
          ("protocol-2", 11),
          ("ready", 2),
          ("reserved", 12),
          ("setup-wan", 1),
          ("wait-for-cb", 3))
    )


_StaPppoConSta_Type.__name__ = "Integer32"
_StaPppoConSta_Object = MibTableColumn
staPppoConSta = _StaPppoConSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 3),
    _StaPppoConSta_Type()
)
staPppoConSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoConSta.setStatus("current")


class _StaPppoConLas_Type(Integer32):
    """Custom type staPppoConLas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              267,
              275,
              277,
              278,
              279,
              280,
              513,
              514,
              515,
              516,
              517,
              518,
              17153,
              17154,
              17155,
              17156,
              17157,
              17158,
              17159,
              17160,
              32768,
              32769,
              32770,
              32771,
              32784,
              32785,
              32786,
              32787,
              32788,
              32789,
              32800,
              32801,
              32802,
              32803,
              32804,
              32805,
              32816,
              32817,
              32818,
              32819,
              32832,
              32848,
              33008)
        )
    )
    namedValues = NamedValues(
        *(("arp-no-response", 280),
          ("auth-error", 32769),
          ("auth-rejected", 32770),
          ("ccp-rejected", 32848),
          ("chap-fail-recvd", 32804),
          ("chap-rejected", 32800),
          ("chap-rx-timeout", 32801),
          ("chap-tx-timeout", 32802),
          ("configuration-changed", 17159),
          ("dhcp-timeout", 277),
          ("dynamic-vpn-reconnect", 17158),
          ("icmp-conn-error", 275),
          ("invalid-physical-channel", 17157),
          ("ipcp-rejected", 32832),
          ("ipxcp-net-reject", 32818),
          ("ipxcp-rejected", 32816),
          ("ipxcp-route-unkn", 32819),
          ("lcp-conn-error", 32771),
          ("lcp-rejected", 32768),
          ("manual-disconnect", 17154),
          ("no-ncp-available", 33008),
          ("none", 0),
          ("pap-nak-received", 32788),
          ("pap-rejected", 32784),
          ("pap-rx-timeout", 32785),
          ("pap-tx-timeout", 32786),
          ("physical-disconnected", 17156),
          ("pptp-bad-call-id", 517),
          ("pptp-bad-format", 514),
          ("pptp-bad-value", 515),
          ("pptp-gen-error", 518),
          ("pptp-no-channel", 513),
          ("pptp-no-response", 278),
          ("pptp-no-ressource", 516),
          ("remote-disconnected", 17153),
          ("remote-doubled", 267),
          ("removed-from-config", 17160),
          ("shorthold-expired", 17155),
          ("unkn-chap-peer", 32805),
          ("unkn-pap-peer", 32789),
          ("vpn-no-response", 279),
          ("wrong-chap-resp", 32803),
          ("wrong-ipxcp-net", 32817),
          ("wrong-pap-req", 32787))
    )


_StaPppoConLas_Type.__name__ = "Integer32"
_StaPppoConLas_Object = MibTableColumn
staPppoConLas = _StaPppoConLas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 4),
    _StaPppoConLas_Type()
)
staPppoConLas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppoConLas.setStatus("current")


class _StaPppoConSht_Type(Integer32):
    """Custom type staPppoConSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPppoConSht_Type.__name__ = "Integer32"
_StaPppoConSht_Object = MibTableColumn
staPppoConSht = _StaPppoConSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 5),
    _StaPppoConSht_Type()
)
staPppoConSht.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoConSht.setStatus("current")
_StaPppoConPee_Type = IpAddress
_StaPppoConPee_Object = MibTableColumn
staPppoConPee = _StaPppoConPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 6),
    _StaPppoConPee_Type()
)
staPppoConPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoConPee.setStatus("current")


class _StaPppoConCon_Type(Integer32):
    """Custom type staPppoConCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaPppoConCon_Type.__name__ = "Integer32"
_StaPppoConCon_Object = MibTableColumn
staPppoConCon = _StaPppoConCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 9, 1, 7),
    _StaPppoConCon_Type()
)
staPppoConCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoConCon.setStatus("current")
_StaPppoNum_Type = Integer32
_StaPppoNum_Object = MibScalar
staPppoNum = _StaPppoNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 10),
    _StaPppoNum_Type()
)
staPppoNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoNum.setStatus("current")
_StaPppoDel_Type = DisplayString
_StaPppoDel_Object = MibScalar
staPppoDel = _StaPppoDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 52, 11),
    _StaPppoDel_Type()
)
staPppoDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppoDel.setStatus("current")
_StaUsb_ObjectIdentity = ObjectIdentity
staUsb = _StaUsb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54)
)
_StaUsbDevTable_Object = MibTable
staUsbDevTable = _StaUsbDevTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1)
)
if mibBuilder.loadTexts:
    staUsbDevTable.setStatus("current")
_StaUsbDevEntry_Object = MibTableRow
staUsbDevEntry = _StaUsbDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1)
)
staUsbDevEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staUsbDevBus"),
    (0, "LANCOM-1711-MIB", "staUsbDevAddress"),
)
if mibBuilder.loadTexts:
    staUsbDevEntry.setStatus("current")


class _StaUsbDevBus_Type(DisplayString):
    """Custom type staUsbDevBus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaUsbDevBus_Type.__name__ = "DisplayString"
_StaUsbDevBus_Object = MibTableColumn
staUsbDevBus = _StaUsbDevBus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 1),
    _StaUsbDevBus_Type()
)
staUsbDevBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevBus.setStatus("current")


class _StaUsbDevAddress_Type(Integer32):
    """Custom type staUsbDevAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaUsbDevAddress_Type.__name__ = "Integer32"
_StaUsbDevAddress_Object = MibTableColumn
staUsbDevAddress = _StaUsbDevAddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 2),
    _StaUsbDevAddress_Type()
)
staUsbDevAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevAddress.setStatus("current")


class _StaUsbDevVendor_Type(DisplayString):
    """Custom type staUsbDevVendor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaUsbDevVendor_Type.__name__ = "DisplayString"
_StaUsbDevVendor_Object = MibTableColumn
staUsbDevVendor = _StaUsbDevVendor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 3),
    _StaUsbDevVendor_Type()
)
staUsbDevVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevVendor.setStatus("current")


class _StaUsbDevVendorid_Type(Integer32):
    """Custom type staUsbDevVendorid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaUsbDevVendorid_Type.__name__ = "Integer32"
_StaUsbDevVendorid_Object = MibTableColumn
staUsbDevVendorid = _StaUsbDevVendorid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 4),
    _StaUsbDevVendorid_Type()
)
staUsbDevVendorid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevVendorid.setStatus("current")


class _StaUsbDevProduct_Type(DisplayString):
    """Custom type staUsbDevProduct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaUsbDevProduct_Type.__name__ = "DisplayString"
_StaUsbDevProduct_Object = MibTableColumn
staUsbDevProduct = _StaUsbDevProduct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 5),
    _StaUsbDevProduct_Type()
)
staUsbDevProduct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevProduct.setStatus("current")


class _StaUsbDevProducti_Type(Integer32):
    """Custom type staUsbDevProducti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaUsbDevProducti_Type.__name__ = "Integer32"
_StaUsbDevProducti_Object = MibTableColumn
staUsbDevProducti = _StaUsbDevProducti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 6),
    _StaUsbDevProducti_Type()
)
staUsbDevProducti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevProducti.setStatus("current")


class _StaUsbDevDepth_Type(Integer32):
    """Custom type staUsbDevDepth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaUsbDevDepth_Type.__name__ = "Integer32"
_StaUsbDevDepth_Object = MibTableColumn
staUsbDevDepth = _StaUsbDevDepth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 8),
    _StaUsbDevDepth_Type()
)
staUsbDevDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevDepth.setStatus("current")


class _StaUsbDevSpeed_Type(Integer32):
    """Custom type staUsbDevSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaUsbDevSpeed_Type.__name__ = "Integer32"
_StaUsbDevSpeed_Object = MibTableColumn
staUsbDevSpeed = _StaUsbDevSpeed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 9),
    _StaUsbDevSpeed_Type()
)
staUsbDevSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevSpeed.setStatus("current")


class _StaUsbDevInterfac_Type(Integer32):
    """Custom type staUsbDevInterfac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaUsbDevInterfac_Type.__name__ = "Integer32"
_StaUsbDevInterfac_Object = MibTableColumn
staUsbDevInterfac = _StaUsbDevInterfac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 10),
    _StaUsbDevInterfac_Type()
)
staUsbDevInterfac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevInterfac.setStatus("current")


class _StaUsbDevPower_Type(Integer32):
    """Custom type staUsbDevPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaUsbDevPower_Type.__name__ = "Integer32"
_StaUsbDevPower_Object = MibTableColumn
staUsbDevPower = _StaUsbDevPower_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 11),
    _StaUsbDevPower_Type()
)
staUsbDevPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevPower.setStatus("current")


class _StaUsbDevDriver_Type(DisplayString):
    """Custom type staUsbDevDriver based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaUsbDevDriver_Type.__name__ = "DisplayString"
_StaUsbDevDriver_Object = MibTableColumn
staUsbDevDriver = _StaUsbDevDriver_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 12),
    _StaUsbDevDriver_Type()
)
staUsbDevDriver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevDriver.setStatus("current")


class _StaUsbDevParent_Type(DisplayString):
    """Custom type staUsbDevParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaUsbDevParent_Type.__name__ = "DisplayString"
_StaUsbDevParent_Object = MibTableColumn
staUsbDevParent = _StaUsbDevParent_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 1, 1, 13),
    _StaUsbDevParent_Type()
)
staUsbDevParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUsbDevParent.setStatus("current")
_StaUsbRei_Type = DisplayString
_StaUsbRei_Object = MibScalar
staUsbRei = _StaUsbRei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 54, 2),
    _StaUsbRei_Type()
)
staUsbRei.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staUsbRei.setStatus("current")
_StaAcco_ObjectIdentity = ObjectIdentity
staAcco = _StaAcco_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56)
)
_StaAccoCurTable_Object = MibTable
staAccoCurTable = _StaAccoCurTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1)
)
if mibBuilder.loadTexts:
    staAccoCurTable.setStatus("current")
_StaAccoCurEntry_Object = MibTableRow
staAccoCurEntry = _StaAccoCurEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1)
)
staAccoCurEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staAccoCurUsern"),
    (0, "LANCOM-1711-MIB", "staAccoCurMacad"),
    (0, "LANCOM-1711-MIB", "staAccoCurPeer"),
    (0, "LANCOM-1711-MIB", "staAccoCurConnt"),
)
if mibBuilder.loadTexts:
    staAccoCurEntry.setStatus("current")


class _StaAccoCurUsern_Type(DisplayString):
    """Custom type staAccoCurUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_StaAccoCurUsern_Type.__name__ = "DisplayString"
_StaAccoCurUsern_Object = MibTableColumn
staAccoCurUsern = _StaAccoCurUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 1),
    _StaAccoCurUsern_Type()
)
staAccoCurUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurUsern.setStatus("current")


class _StaAccoCurMacad_Type(DisplayString):
    """Custom type staAccoCurMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaAccoCurMacad_Type.__name__ = "DisplayString"
_StaAccoCurMacad_Object = MibTableColumn
staAccoCurMacad = _StaAccoCurMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 2),
    _StaAccoCurMacad_Type()
)
staAccoCurMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurMacad.setStatus("current")


class _StaAccoCurPeer_Type(DisplayString):
    """Custom type staAccoCurPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaAccoCurPeer_Type.__name__ = "DisplayString"
_StaAccoCurPeer_Object = MibTableColumn
staAccoCurPeer = _StaAccoCurPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 3),
    _StaAccoCurPeer_Type()
)
staAccoCurPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurPeer.setStatus("current")


class _StaAccoCurConnt_Type(Integer32):
    """Custom type staAccoCurConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_StaAccoCurConnt_Type.__name__ = "Integer32"
_StaAccoCurConnt_Object = MibTableColumn
staAccoCurConnt = _StaAccoCurConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 4),
    _StaAccoCurConnt_Type()
)
staAccoCurConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurConnt.setStatus("current")


class _StaAccoCurRxkby_Type(Integer32):
    """Custom type staAccoCurRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoCurRxkby_Type.__name__ = "Integer32"
_StaAccoCurRxkby_Object = MibTableColumn
staAccoCurRxkby = _StaAccoCurRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 5),
    _StaAccoCurRxkby_Type()
)
staAccoCurRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurRxkby.setStatus("current")


class _StaAccoCurTxkby_Type(Integer32):
    """Custom type staAccoCurTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoCurTxkby_Type.__name__ = "Integer32"
_StaAccoCurTxkby_Object = MibTableColumn
staAccoCurTxkby = _StaAccoCurTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 6),
    _StaAccoCurTxkby_Type()
)
staAccoCurTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurTxkby.setStatus("current")


class _StaAccoCurTotal_Type(Integer32):
    """Custom type staAccoCurTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoCurTotal_Type.__name__ = "Integer32"
_StaAccoCurTotal_Object = MibTableColumn
staAccoCurTotal = _StaAccoCurTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 8),
    _StaAccoCurTotal_Type()
)
staAccoCurTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurTotal.setStatus("current")


class _StaAccoCurConne_Type(Integer32):
    """Custom type staAccoCurConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoCurConne_Type.__name__ = "Integer32"
_StaAccoCurConne_Object = MibTableColumn
staAccoCurConne = _StaAccoCurConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 1, 1, 9),
    _StaAccoCurConne_Type()
)
staAccoCurConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoCurConne.setStatus("current")
_StaAccoAccTable_Object = MibTable
staAccoAccTable = _StaAccoAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2)
)
if mibBuilder.loadTexts:
    staAccoAccTable.setStatus("current")
_StaAccoAccEntry_Object = MibTableRow
staAccoAccEntry = _StaAccoAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1)
)
staAccoAccEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staAccoAccUsern"),
    (0, "LANCOM-1711-MIB", "staAccoAccMacad"),
    (0, "LANCOM-1711-MIB", "staAccoAccPeer"),
    (0, "LANCOM-1711-MIB", "staAccoAccConnt"),
)
if mibBuilder.loadTexts:
    staAccoAccEntry.setStatus("current")


class _StaAccoAccUsern_Type(DisplayString):
    """Custom type staAccoAccUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_StaAccoAccUsern_Type.__name__ = "DisplayString"
_StaAccoAccUsern_Object = MibTableColumn
staAccoAccUsern = _StaAccoAccUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 1),
    _StaAccoAccUsern_Type()
)
staAccoAccUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccUsern.setStatus("current")


class _StaAccoAccMacad_Type(DisplayString):
    """Custom type staAccoAccMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaAccoAccMacad_Type.__name__ = "DisplayString"
_StaAccoAccMacad_Object = MibTableColumn
staAccoAccMacad = _StaAccoAccMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 2),
    _StaAccoAccMacad_Type()
)
staAccoAccMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccMacad.setStatus("current")


class _StaAccoAccPeer_Type(DisplayString):
    """Custom type staAccoAccPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaAccoAccPeer_Type.__name__ = "DisplayString"
_StaAccoAccPeer_Object = MibTableColumn
staAccoAccPeer = _StaAccoAccPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 3),
    _StaAccoAccPeer_Type()
)
staAccoAccPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccPeer.setStatus("current")


class _StaAccoAccConnt_Type(Integer32):
    """Custom type staAccoAccConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_StaAccoAccConnt_Type.__name__ = "Integer32"
_StaAccoAccConnt_Object = MibTableColumn
staAccoAccConnt = _StaAccoAccConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 4),
    _StaAccoAccConnt_Type()
)
staAccoAccConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccConnt.setStatus("current")


class _StaAccoAccRxkby_Type(Integer32):
    """Custom type staAccoAccRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoAccRxkby_Type.__name__ = "Integer32"
_StaAccoAccRxkby_Object = MibTableColumn
staAccoAccRxkby = _StaAccoAccRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 5),
    _StaAccoAccRxkby_Type()
)
staAccoAccRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccRxkby.setStatus("current")


class _StaAccoAccTxkby_Type(Integer32):
    """Custom type staAccoAccTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoAccTxkby_Type.__name__ = "Integer32"
_StaAccoAccTxkby_Object = MibTableColumn
staAccoAccTxkby = _StaAccoAccTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 6),
    _StaAccoAccTxkby_Type()
)
staAccoAccTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccTxkby.setStatus("current")


class _StaAccoAccTotal_Type(Integer32):
    """Custom type staAccoAccTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoAccTotal_Type.__name__ = "Integer32"
_StaAccoAccTotal_Object = MibTableColumn
staAccoAccTotal = _StaAccoAccTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 8),
    _StaAccoAccTotal_Type()
)
staAccoAccTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccTotal.setStatus("current")


class _StaAccoAccConne_Type(Integer32):
    """Custom type staAccoAccConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoAccConne_Type.__name__ = "Integer32"
_StaAccoAccConne_Object = MibTableColumn
staAccoAccConne = _StaAccoAccConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 2, 1, 9),
    _StaAccoAccConne_Type()
)
staAccoAccConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoAccConne.setStatus("current")
_StaAccoLasTable_Object = MibTable
staAccoLasTable = _StaAccoLasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3)
)
if mibBuilder.loadTexts:
    staAccoLasTable.setStatus("current")
_StaAccoLasEntry_Object = MibTableRow
staAccoLasEntry = _StaAccoLasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1)
)
staAccoLasEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staAccoLasUsern"),
    (0, "LANCOM-1711-MIB", "staAccoLasMacad"),
    (0, "LANCOM-1711-MIB", "staAccoLasPeer"),
    (0, "LANCOM-1711-MIB", "staAccoLasConnt"),
)
if mibBuilder.loadTexts:
    staAccoLasEntry.setStatus("current")


class _StaAccoLasUsern_Type(DisplayString):
    """Custom type staAccoLasUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_StaAccoLasUsern_Type.__name__ = "DisplayString"
_StaAccoLasUsern_Object = MibTableColumn
staAccoLasUsern = _StaAccoLasUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 1),
    _StaAccoLasUsern_Type()
)
staAccoLasUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasUsern.setStatus("current")


class _StaAccoLasMacad_Type(DisplayString):
    """Custom type staAccoLasMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaAccoLasMacad_Type.__name__ = "DisplayString"
_StaAccoLasMacad_Object = MibTableColumn
staAccoLasMacad = _StaAccoLasMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 2),
    _StaAccoLasMacad_Type()
)
staAccoLasMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasMacad.setStatus("current")


class _StaAccoLasPeer_Type(DisplayString):
    """Custom type staAccoLasPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaAccoLasPeer_Type.__name__ = "DisplayString"
_StaAccoLasPeer_Object = MibTableColumn
staAccoLasPeer = _StaAccoLasPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 3),
    _StaAccoLasPeer_Type()
)
staAccoLasPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasPeer.setStatus("current")


class _StaAccoLasConnt_Type(Integer32):
    """Custom type staAccoLasConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_StaAccoLasConnt_Type.__name__ = "Integer32"
_StaAccoLasConnt_Object = MibTableColumn
staAccoLasConnt = _StaAccoLasConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 4),
    _StaAccoLasConnt_Type()
)
staAccoLasConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasConnt.setStatus("current")


class _StaAccoLasRxkby_Type(Integer32):
    """Custom type staAccoLasRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoLasRxkby_Type.__name__ = "Integer32"
_StaAccoLasRxkby_Object = MibTableColumn
staAccoLasRxkby = _StaAccoLasRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 5),
    _StaAccoLasRxkby_Type()
)
staAccoLasRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasRxkby.setStatus("current")


class _StaAccoLasTxkby_Type(Integer32):
    """Custom type staAccoLasTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoLasTxkby_Type.__name__ = "Integer32"
_StaAccoLasTxkby_Object = MibTableColumn
staAccoLasTxkby = _StaAccoLasTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 6),
    _StaAccoLasTxkby_Type()
)
staAccoLasTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasTxkby.setStatus("current")


class _StaAccoLasTotal_Type(Integer32):
    """Custom type staAccoLasTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoLasTotal_Type.__name__ = "Integer32"
_StaAccoLasTotal_Object = MibTableColumn
staAccoLasTotal = _StaAccoLasTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 8),
    _StaAccoLasTotal_Type()
)
staAccoLasTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasTotal.setStatus("current")


class _StaAccoLasConne_Type(Integer32):
    """Custom type staAccoLasConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccoLasConne_Type.__name__ = "Integer32"
_StaAccoLasConne_Object = MibTableColumn
staAccoLasConne = _StaAccoLasConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 3, 1, 9),
    _StaAccoLasConne_Type()
)
staAccoLasConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoLasConne.setStatus("current")
_StaAccoDel_Type = DisplayString
_StaAccoDel_Object = MibScalar
staAccoDel = _StaAccoDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 4),
    _StaAccoDel_Type()
)
staAccoDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staAccoDel.setStatus("current")
_StaAccoTimTable_Object = MibTable
staAccoTimTable = _StaAccoTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5)
)
if mibBuilder.loadTexts:
    staAccoTimTable.setStatus("current")
_StaAccoTimEntry_Object = MibTableRow
staAccoTimEntry = _StaAccoTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5, 1)
)
staAccoTimEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staAccoTimSys"),
)
if mibBuilder.loadTexts:
    staAccoTimEntry.setStatus("current")
_StaAccoTimSys_Type = Counter32
_StaAccoTimSys_Object = MibTableColumn
staAccoTimSys = _StaAccoTimSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 56, 5, 1, 1),
    _StaAccoTimSys_Type()
)
staAccoTimSys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccoTimSys.setStatus("current")
_StaCert_ObjectIdentity = ObjectIdentity
staCert = _StaCert_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61)
)
_StaCertSce_ObjectIdentity = ObjectIdentity
staCertSce = _StaCertSce_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1)
)
_StaCertSceNumca_Type = Integer32
_StaCertSceNumca_Object = MibScalar
staCertSceNumca = _StaCertSceNumca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 1),
    _StaCertSceNumca_Type()
)
staCertSceNumca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceNumca.setStatus("current")
_StaCertSceNumra_Type = Integer32
_StaCertSceNumra_Object = MibScalar
staCertSceNumra = _StaCertSceNumra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 2),
    _StaCertSceNumra_Type()
)
staCertSceNumra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceNumra.setStatus("current")
_StaCertSceNumce_Type = Integer32
_StaCertSceNumce_Object = MibScalar
staCertSceNumce = _StaCertSceNumce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 3),
    _StaCertSceNumce_Type()
)
staCertSceNumce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceNumce.setStatus("current")
_StaCertSceCasTable_Object = MibTable
staCertSceCasTable = _StaCertSceCasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4)
)
if mibBuilder.loadTexts:
    staCertSceCasTable.setStatus("current")
_StaCertSceCasEntry_Object = MibTableRow
staCertSceCasEntry = _StaCertSceCasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1)
)
staCertSceCasEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCertSceCasIdx"),
)
if mibBuilder.loadTexts:
    staCertSceCasEntry.setStatus("current")


class _StaCertSceCasIdx_Type(Integer32):
    """Custom type staCertSceCasIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceCasIdx_Type.__name__ = "Integer32"
_StaCertSceCasIdx_Object = MibTableColumn
staCertSceCasIdx = _StaCertSceCasIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 1),
    _StaCertSceCasIdx_Type()
)
staCertSceCasIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasIdx.setStatus("current")


class _StaCertSceCasName_Type(DisplayString):
    """Custom type staCertSceCasName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaCertSceCasName_Type.__name__ = "DisplayString"
_StaCertSceCasName_Object = MibTableColumn
staCertSceCasName = _StaCertSceCasName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 2),
    _StaCertSceCasName_Type()
)
staCertSceCasName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasName.setStatus("current")


class _StaCertSceCasExpire_Type(DisplayString):
    """Custom type staCertSceCasExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertSceCasExpire_Type.__name__ = "DisplayString"
_StaCertSceCasExpire_Object = MibTableColumn
staCertSceCasExpire = _StaCertSceCasExpire_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 3),
    _StaCertSceCasExpire_Type()
)
staCertSceCasExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasExpire.setStatus("current")


class _StaCertSceCasIssued_Type(DisplayString):
    """Custom type staCertSceCasIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertSceCasIssued_Type.__name__ = "DisplayString"
_StaCertSceCasIssued_Object = MibTableColumn
staCertSceCasIssued = _StaCertSceCasIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 4),
    _StaCertSceCasIssued_Type()
)
staCertSceCasIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasIssued.setStatus("current")


class _StaCertSceCasKeyusa_Type(DisplayString):
    """Custom type staCertSceCasKeyusa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCasKeyusa_Type.__name__ = "DisplayString"
_StaCertSceCasKeyusa_Object = MibTableColumn
staCertSceCasKeyusa = _StaCertSceCasKeyusa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 5),
    _StaCertSceCasKeyusa_Type()
)
staCertSceCasKeyusa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasKeyusa.setStatus("current")


class _StaCertSceCasIssuer_Type(DisplayString):
    """Custom type staCertSceCasIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCasIssuer_Type.__name__ = "DisplayString"
_StaCertSceCasIssuer_Object = MibTableColumn
staCertSceCasIssuer = _StaCertSceCasIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 6),
    _StaCertSceCasIssuer_Type()
)
staCertSceCasIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasIssuer.setStatus("current")


class _StaCertSceCasSubjec_Type(DisplayString):
    """Custom type staCertSceCasSubjec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCasSubjec_Type.__name__ = "DisplayString"
_StaCertSceCasSubjec_Object = MibTableColumn
staCertSceCasSubjec = _StaCertSceCasSubjec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 7),
    _StaCertSceCasSubjec_Type()
)
staCertSceCasSubjec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasSubjec.setStatus("current")


class _StaCertSceCasStatus_Type(Integer32):
    """Custom type staCertSceCasStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("ca-ra-bad", 22),
          ("ca-ra-bad-config", 23),
          ("ca-ra-need-update", 21),
          ("ca-ra-ok", 20),
          ("ca-ra-received", 19),
          ("ca-ra-requested", 18),
          ("disabled", 47),
          ("dn-normalization-failed", 45),
          ("enroll-bad", 4),
          ("enroll-bad-config", 5),
          ("enroll-bad-reply", 17),
          ("enroll-ca-missing", 13),
          ("enroll-exp-unknown", 14),
          ("enroll-key-missing", 15),
          ("enroll-ok", 3),
          ("enroll-pending", 6),
          ("enroll-received", 2),
          ("enroll-rejected", 7),
          ("enroll-rejected-badalg", 8),
          ("enroll-rejected-badcertid", 12),
          ("enroll-rejected-badmsgchk", 9),
          ("enroll-rejected-badreq", 10),
          ("enroll-rejected-badtime", 11),
          ("enroll-req-missing", 16),
          ("enroll-requested", 1),
          ("fingerprint-check-failed", 25),
          ("gen-err", 37),
          ("io-err", 46),
          ("job-busy", 26),
          ("job-httpc-con-err", 39),
          ("job-httpc-dns-err", 40),
          ("job-httpc-err", 38),
          ("job-httpc-mem-err", 42),
          ("job-httpc-prot-err", 41),
          ("job-no-scep-msg", 30),
          ("job-no-url", 29),
          ("job-scep-not-free", 28),
          ("job-timeout", 27),
          ("job-wdog-err", 43),
          ("mem-err", 32),
          ("msg-len-err", 33),
          ("not-a-ca-cert", 24),
          ("ok", 44),
          ("pkcs7-unwrap-err", 36),
          ("pkcs7-wrap-err", 35),
          ("selfsigned-err", 34),
          ("status-unknown", 0),
          ("utc-err", 31))
    )


_StaCertSceCasStatus_Type.__name__ = "Integer32"
_StaCertSceCasStatus_Object = MibTableColumn
staCertSceCasStatus = _StaCertSceCasStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 8),
    _StaCertSceCasStatus_Type()
)
staCertSceCasStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasStatus.setStatus("current")


class _StaCertSceCasIkecer_Type(Integer32):
    """Custom type staCertSceCasIkecer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaCertSceCasIkecer_Type.__name__ = "Integer32"
_StaCertSceCasIkecer_Object = MibTableColumn
staCertSceCasIkecer = _StaCertSceCasIkecer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 9),
    _StaCertSceCasIkecer_Type()
)
staCertSceCasIkecer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasIkecer.setStatus("current")


class _StaCertSceCasMd5fin_Type(DisplayString):
    """Custom type staCertSceCasMd5fin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_StaCertSceCasMd5fin_Type.__name__ = "DisplayString"
_StaCertSceCasMd5fin_Object = MibTableColumn
staCertSceCasMd5fin = _StaCertSceCasMd5fin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 10),
    _StaCertSceCasMd5fin_Type()
)
staCertSceCasMd5fin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasMd5fin.setStatus("current")


class _StaCertSceCasSha1fi_Type(DisplayString):
    """Custom type staCertSceCasSha1fi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 58),
    )


_StaCertSceCasSha1fi_Type.__name__ = "DisplayString"
_StaCertSceCasSha1fi_Object = MibTableColumn
staCertSceCasSha1fi = _StaCertSceCasSha1fi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 11),
    _StaCertSceCasSha1fi_Type()
)
staCertSceCasSha1fi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasSha1fi.setStatus("current")


class _StaCertSceCasExpsnm_Type(Integer32):
    """Custom type staCertSceCasExpsnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceCasExpsnm_Type.__name__ = "Integer32"
_StaCertSceCasExpsnm_Object = MibTableColumn
staCertSceCasExpsnm = _StaCertSceCasExpsnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 12),
    _StaCertSceCasExpsnm_Type()
)
staCertSceCasExpsnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasExpsnm.setStatus("current")


class _StaCertSceCasIsssnm_Type(Integer32):
    """Custom type staCertSceCasIsssnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceCasIsssnm_Type.__name__ = "Integer32"
_StaCertSceCasIsssnm_Object = MibTableColumn
staCertSceCasIsssnm = _StaCertSceCasIsssnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 4, 1, 13),
    _StaCertSceCasIsssnm_Type()
)
staCertSceCasIsssnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCasIsssnm.setStatus("current")
_StaCertSceRasTable_Object = MibTable
staCertSceRasTable = _StaCertSceRasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5)
)
if mibBuilder.loadTexts:
    staCertSceRasTable.setStatus("current")
_StaCertSceRasEntry_Object = MibTableRow
staCertSceRasEntry = _StaCertSceRasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1)
)
staCertSceRasEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCertSceRasIdx"),
)
if mibBuilder.loadTexts:
    staCertSceRasEntry.setStatus("current")


class _StaCertSceRasIdx_Type(Integer32):
    """Custom type staCertSceRasIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceRasIdx_Type.__name__ = "Integer32"
_StaCertSceRasIdx_Object = MibTableColumn
staCertSceRasIdx = _StaCertSceRasIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 1),
    _StaCertSceRasIdx_Type()
)
staCertSceRasIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasIdx.setStatus("current")


class _StaCertSceRasName_Type(DisplayString):
    """Custom type staCertSceRasName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaCertSceRasName_Type.__name__ = "DisplayString"
_StaCertSceRasName_Object = MibTableColumn
staCertSceRasName = _StaCertSceRasName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 2),
    _StaCertSceRasName_Type()
)
staCertSceRasName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasName.setStatus("current")


class _StaCertSceRasExpire_Type(DisplayString):
    """Custom type staCertSceRasExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertSceRasExpire_Type.__name__ = "DisplayString"
_StaCertSceRasExpire_Object = MibTableColumn
staCertSceRasExpire = _StaCertSceRasExpire_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 3),
    _StaCertSceRasExpire_Type()
)
staCertSceRasExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasExpire.setStatus("current")


class _StaCertSceRasIssued_Type(DisplayString):
    """Custom type staCertSceRasIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertSceRasIssued_Type.__name__ = "DisplayString"
_StaCertSceRasIssued_Object = MibTableColumn
staCertSceRasIssued = _StaCertSceRasIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 4),
    _StaCertSceRasIssued_Type()
)
staCertSceRasIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasIssued.setStatus("current")


class _StaCertSceRasKeyusa_Type(DisplayString):
    """Custom type staCertSceRasKeyusa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceRasKeyusa_Type.__name__ = "DisplayString"
_StaCertSceRasKeyusa_Object = MibTableColumn
staCertSceRasKeyusa = _StaCertSceRasKeyusa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 5),
    _StaCertSceRasKeyusa_Type()
)
staCertSceRasKeyusa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasKeyusa.setStatus("current")


class _StaCertSceRasIssuer_Type(DisplayString):
    """Custom type staCertSceRasIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceRasIssuer_Type.__name__ = "DisplayString"
_StaCertSceRasIssuer_Object = MibTableColumn
staCertSceRasIssuer = _StaCertSceRasIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 6),
    _StaCertSceRasIssuer_Type()
)
staCertSceRasIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasIssuer.setStatus("current")


class _StaCertSceRasSubjec_Type(DisplayString):
    """Custom type staCertSceRasSubjec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceRasSubjec_Type.__name__ = "DisplayString"
_StaCertSceRasSubjec_Object = MibTableColumn
staCertSceRasSubjec = _StaCertSceRasSubjec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 7),
    _StaCertSceRasSubjec_Type()
)
staCertSceRasSubjec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasSubjec.setStatus("current")


class _StaCertSceRasStatus_Type(Integer32):
    """Custom type staCertSceRasStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("ca-ra-bad", 22),
          ("ca-ra-bad-config", 23),
          ("ca-ra-need-update", 21),
          ("ca-ra-ok", 20),
          ("ca-ra-received", 19),
          ("ca-ra-requested", 18),
          ("disabled", 47),
          ("dn-normalization-failed", 45),
          ("enroll-bad", 4),
          ("enroll-bad-config", 5),
          ("enroll-bad-reply", 17),
          ("enroll-ca-missing", 13),
          ("enroll-exp-unknown", 14),
          ("enroll-key-missing", 15),
          ("enroll-ok", 3),
          ("enroll-pending", 6),
          ("enroll-received", 2),
          ("enroll-rejected", 7),
          ("enroll-rejected-badalg", 8),
          ("enroll-rejected-badcertid", 12),
          ("enroll-rejected-badmsgchk", 9),
          ("enroll-rejected-badreq", 10),
          ("enroll-rejected-badtime", 11),
          ("enroll-req-missing", 16),
          ("enroll-requested", 1),
          ("fingerprint-check-failed", 25),
          ("gen-err", 37),
          ("io-err", 46),
          ("job-busy", 26),
          ("job-httpc-con-err", 39),
          ("job-httpc-dns-err", 40),
          ("job-httpc-err", 38),
          ("job-httpc-mem-err", 42),
          ("job-httpc-prot-err", 41),
          ("job-no-scep-msg", 30),
          ("job-no-url", 29),
          ("job-scep-not-free", 28),
          ("job-timeout", 27),
          ("job-wdog-err", 43),
          ("mem-err", 32),
          ("msg-len-err", 33),
          ("not-a-ca-cert", 24),
          ("ok", 44),
          ("pkcs7-unwrap-err", 36),
          ("pkcs7-wrap-err", 35),
          ("selfsigned-err", 34),
          ("status-unknown", 0),
          ("utc-err", 31))
    )


_StaCertSceRasStatus_Type.__name__ = "Integer32"
_StaCertSceRasStatus_Object = MibTableColumn
staCertSceRasStatus = _StaCertSceRasStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 8),
    _StaCertSceRasStatus_Type()
)
staCertSceRasStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasStatus.setStatus("current")


class _StaCertSceRasExpsnm_Type(Integer32):
    """Custom type staCertSceRasExpsnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceRasExpsnm_Type.__name__ = "Integer32"
_StaCertSceRasExpsnm_Object = MibTableColumn
staCertSceRasExpsnm = _StaCertSceRasExpsnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 9),
    _StaCertSceRasExpsnm_Type()
)
staCertSceRasExpsnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasExpsnm.setStatus("current")


class _StaCertSceRasIsssnm_Type(Integer32):
    """Custom type staCertSceRasIsssnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceRasIsssnm_Type.__name__ = "Integer32"
_StaCertSceRasIsssnm_Object = MibTableColumn
staCertSceRasIsssnm = _StaCertSceRasIsssnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 5, 1, 10),
    _StaCertSceRasIsssnm_Type()
)
staCertSceRasIsssnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceRasIsssnm.setStatus("current")
_StaCertSceCertsTable_Object = MibTable
staCertSceCertsTable = _StaCertSceCertsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6)
)
if mibBuilder.loadTexts:
    staCertSceCertsTable.setStatus("current")
_StaCertSceCertsEntry_Object = MibTableRow
staCertSceCertsEntry = _StaCertSceCertsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1)
)
staCertSceCertsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCertSceCertsIdx"),
)
if mibBuilder.loadTexts:
    staCertSceCertsEntry.setStatus("current")


class _StaCertSceCertsIdx_Type(Integer32):
    """Custom type staCertSceCertsIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceCertsIdx_Type.__name__ = "Integer32"
_StaCertSceCertsIdx_Object = MibTableColumn
staCertSceCertsIdx = _StaCertSceCertsIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 1),
    _StaCertSceCertsIdx_Type()
)
staCertSceCertsIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsIdx.setStatus("current")


class _StaCertSceCertsName_Type(DisplayString):
    """Custom type staCertSceCertsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaCertSceCertsName_Type.__name__ = "DisplayString"
_StaCertSceCertsName_Object = MibTableColumn
staCertSceCertsName = _StaCertSceCertsName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 2),
    _StaCertSceCertsName_Type()
)
staCertSceCertsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsName.setStatus("current")


class _StaCertSceCertsExpires_Type(DisplayString):
    """Custom type staCertSceCertsExpires based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertSceCertsExpires_Type.__name__ = "DisplayString"
_StaCertSceCertsExpires_Object = MibTableColumn
staCertSceCertsExpires = _StaCertSceCertsExpires_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 3),
    _StaCertSceCertsExpires_Type()
)
staCertSceCertsExpires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsExpires.setStatus("current")


class _StaCertSceCertsIssued_Type(DisplayString):
    """Custom type staCertSceCertsIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertSceCertsIssued_Type.__name__ = "DisplayString"
_StaCertSceCertsIssued_Object = MibTableColumn
staCertSceCertsIssued = _StaCertSceCertsIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 4),
    _StaCertSceCertsIssued_Type()
)
staCertSceCertsIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsIssued.setStatus("current")


class _StaCertSceCertsKeyusage_Type(DisplayString):
    """Custom type staCertSceCertsKeyusage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCertsKeyusage_Type.__name__ = "DisplayString"
_StaCertSceCertsKeyusage_Object = MibTableColumn
staCertSceCertsKeyusage = _StaCertSceCertsKeyusage_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 5),
    _StaCertSceCertsKeyusage_Type()
)
staCertSceCertsKeyusage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsKeyusage.setStatus("current")


class _StaCertSceCertsSubjecta_Type(DisplayString):
    """Custom type staCertSceCertsSubjecta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCertsSubjecta_Type.__name__ = "DisplayString"
_StaCertSceCertsSubjecta_Object = MibTableColumn
staCertSceCertsSubjecta = _StaCertSceCertsSubjecta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 6),
    _StaCertSceCertsSubjecta_Type()
)
staCertSceCertsSubjecta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsSubjecta.setStatus("current")


class _StaCertSceCertsIssuer_Type(DisplayString):
    """Custom type staCertSceCertsIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCertsIssuer_Type.__name__ = "DisplayString"
_StaCertSceCertsIssuer_Object = MibTableColumn
staCertSceCertsIssuer = _StaCertSceCertsIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 7),
    _StaCertSceCertsIssuer_Type()
)
staCertSceCertsIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsIssuer.setStatus("current")


class _StaCertSceCertsSubject_Type(DisplayString):
    """Custom type staCertSceCertsSubject based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCertsSubject_Type.__name__ = "DisplayString"
_StaCertSceCertsSubject_Object = MibTableColumn
staCertSceCertsSubject = _StaCertSceCertsSubject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 8),
    _StaCertSceCertsSubject_Type()
)
staCertSceCertsSubject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsSubject.setStatus("current")


class _StaCertSceCertsStatus_Type(Integer32):
    """Custom type staCertSceCertsStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("ca-ra-bad", 22),
          ("ca-ra-bad-config", 23),
          ("ca-ra-need-update", 21),
          ("ca-ra-ok", 20),
          ("ca-ra-received", 19),
          ("ca-ra-requested", 18),
          ("disabled", 47),
          ("dn-normalization-failed", 45),
          ("enroll-bad", 4),
          ("enroll-bad-config", 5),
          ("enroll-bad-reply", 17),
          ("enroll-ca-missing", 13),
          ("enroll-exp-unknown", 14),
          ("enroll-key-missing", 15),
          ("enroll-ok", 3),
          ("enroll-pending", 6),
          ("enroll-received", 2),
          ("enroll-rejected", 7),
          ("enroll-rejected-badalg", 8),
          ("enroll-rejected-badcertid", 12),
          ("enroll-rejected-badmsgchk", 9),
          ("enroll-rejected-badreq", 10),
          ("enroll-rejected-badtime", 11),
          ("enroll-req-missing", 16),
          ("enroll-requested", 1),
          ("fingerprint-check-failed", 25),
          ("gen-err", 37),
          ("io-err", 46),
          ("job-busy", 26),
          ("job-httpc-con-err", 39),
          ("job-httpc-dns-err", 40),
          ("job-httpc-err", 38),
          ("job-httpc-mem-err", 42),
          ("job-httpc-prot-err", 41),
          ("job-no-scep-msg", 30),
          ("job-no-url", 29),
          ("job-scep-not-free", 28),
          ("job-timeout", 27),
          ("job-wdog-err", 43),
          ("mem-err", 32),
          ("msg-len-err", 33),
          ("not-a-ca-cert", 24),
          ("ok", 44),
          ("pkcs7-unwrap-err", 36),
          ("pkcs7-wrap-err", 35),
          ("selfsigned-err", 34),
          ("status-unknown", 0),
          ("utc-err", 31))
    )


_StaCertSceCertsStatus_Type.__name__ = "Integer32"
_StaCertSceCertsStatus_Object = MibTableColumn
staCertSceCertsStatus = _StaCertSceCertsStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 9),
    _StaCertSceCertsStatus_Type()
)
staCertSceCertsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsStatus.setStatus("current")


class _StaCertSceCertsExpsnmp_Type(Integer32):
    """Custom type staCertSceCertsExpsnmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceCertsExpsnmp_Type.__name__ = "Integer32"
_StaCertSceCertsExpsnmp_Object = MibTableColumn
staCertSceCertsExpsnmp = _StaCertSceCertsExpsnmp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 10),
    _StaCertSceCertsExpsnmp_Type()
)
staCertSceCertsExpsnmp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsExpsnmp.setStatus("current")


class _StaCertSceCertsIsssnmp_Type(Integer32):
    """Custom type staCertSceCertsIsssnmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertSceCertsIsssnmp_Type.__name__ = "Integer32"
_StaCertSceCertsIsssnmp_Object = MibTableColumn
staCertSceCertsIsssnmp = _StaCertSceCertsIsssnmp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 11),
    _StaCertSceCertsIsssnmp_Type()
)
staCertSceCertsIsssnmp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsIsssnmp.setStatus("current")


class _StaCertSceCertsExtended_Type(DisplayString):
    """Custom type staCertSceCertsExtended based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertSceCertsExtended_Type.__name__ = "DisplayString"
_StaCertSceCertsExtended_Object = MibTableColumn
staCertSceCertsExtended = _StaCertSceCertsExtended_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 6, 1, 12),
    _StaCertSceCertsExtended_Type()
)
staCertSceCertsExtended.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertSceCertsExtended.setStatus("current")
_StaCertSceDelet_Type = DisplayString
_StaCertSceDelet_Object = MibScalar
staCertSceDelet = _StaCertSceDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 1, 7),
    _StaCertSceDelet_Type()
)
staCertSceDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staCertSceDelet.setStatus("current")
_StaCertCrl_ObjectIdentity = ObjectIdentity
staCertCrl = _StaCertCrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3)
)
_StaCertCrlNum_Type = Integer32
_StaCertCrlNum_Object = MibScalar
staCertCrlNum = _StaCertCrlNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 1),
    _StaCertCrlNum_Type()
)
staCertCrlNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlNum.setStatus("current")
_StaCertCrlCrlTable_Object = MibTable
staCertCrlCrlTable = _StaCertCrlCrlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2)
)
if mibBuilder.loadTexts:
    staCertCrlCrlTable.setStatus("current")
_StaCertCrlCrlEntry_Object = MibTableRow
staCertCrlCrlEntry = _StaCertCrlCrlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1)
)
staCertCrlCrlEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCertCrlCrlIdx"),
)
if mibBuilder.loadTexts:
    staCertCrlCrlEntry.setStatus("current")


class _StaCertCrlCrlIdx_Type(Integer32):
    """Custom type staCertCrlCrlIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertCrlCrlIdx_Type.__name__ = "Integer32"
_StaCertCrlCrlIdx_Object = MibTableColumn
staCertCrlCrlIdx = _StaCertCrlCrlIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 1),
    _StaCertCrlCrlIdx_Type()
)
staCertCrlCrlIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlIdx.setStatus("current")


class _StaCertCrlCrlExpire_Type(DisplayString):
    """Custom type staCertCrlCrlExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertCrlCrlExpire_Type.__name__ = "DisplayString"
_StaCertCrlCrlExpire_Object = MibTableColumn
staCertCrlCrlExpire = _StaCertCrlCrlExpire_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 2),
    _StaCertCrlCrlExpire_Type()
)
staCertCrlCrlExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlExpire.setStatus("current")


class _StaCertCrlCrlIssued_Type(DisplayString):
    """Custom type staCertCrlCrlIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertCrlCrlIssued_Type.__name__ = "DisplayString"
_StaCertCrlCrlIssued_Object = MibTableColumn
staCertCrlCrlIssued = _StaCertCrlCrlIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 3),
    _StaCertCrlCrlIssued_Type()
)
staCertCrlCrlIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlIssued.setStatus("current")


class _StaCertCrlCrlIssuer_Type(DisplayString):
    """Custom type staCertCrlCrlIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertCrlCrlIssuer_Type.__name__ = "DisplayString"
_StaCertCrlCrlIssuer_Object = MibTableColumn
staCertCrlCrlIssuer = _StaCertCrlCrlIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 4),
    _StaCertCrlCrlIssuer_Type()
)
staCertCrlCrlIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlIssuer.setStatus("current")


class _StaCertCrlCrlDistri_Type(DisplayString):
    """Custom type staCertCrlCrlDistri based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertCrlCrlDistri_Type.__name__ = "DisplayString"
_StaCertCrlCrlDistri_Object = MibTableColumn
staCertCrlCrlDistri = _StaCertCrlCrlDistri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 5),
    _StaCertCrlCrlDistri_Type()
)
staCertCrlCrlDistri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlDistri.setStatus("current")


class _StaCertCrlCrlStatus_Type(Integer32):
    """Custom type staCertCrlCrlStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30)
        )
    )
    namedValues = NamedValues(
        *(("crl-gen-err", 13),
          ("crl-job-busy", 5),
          ("crl-job-mem-err", 11),
          ("crl-job-timeout", 6),
          ("crl-job-wdog-err", 19),
          ("crl-len-err", 12),
          ("crl-not-free-err", 7),
          ("crl-not-gmt", 27),
          ("crl-ok", 22),
          ("crls-disabled", 30),
          ("httpc-con-err", 15),
          ("httpc-dns-err", 16),
          ("httpc-err", 14),
          ("httpc-mem-err", 18),
          ("httpc-prot-err", 17),
          ("invalid-field", 28),
          ("issuer-mismatch", 25),
          ("no-crl-received-err", 9),
          ("no-lu-in-crl", 26),
          ("no-root-issuer", 24),
          ("no-url-passed-err", 8),
          ("no-utc-err", 10),
          ("not-a-crl", 23),
          ("prefetching", 20),
          ("retrieving", 21),
          ("status-unknown", 0),
          ("update-bad", 4),
          ("update-expired", 29),
          ("update-ok", 3),
          ("update-received", 2),
          ("update-requested", 1))
    )


_StaCertCrlCrlStatus_Type.__name__ = "Integer32"
_StaCertCrlCrlStatus_Object = MibTableColumn
staCertCrlCrlStatus = _StaCertCrlCrlStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 6),
    _StaCertCrlCrlStatus_Type()
)
staCertCrlCrlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlStatus.setStatus("current")


class _StaCertCrlCrlExpsnm_Type(Integer32):
    """Custom type staCertCrlCrlExpsnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertCrlCrlExpsnm_Type.__name__ = "Integer32"
_StaCertCrlCrlExpsnm_Object = MibTableColumn
staCertCrlCrlExpsnm = _StaCertCrlCrlExpsnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 7),
    _StaCertCrlCrlExpsnm_Type()
)
staCertCrlCrlExpsnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlExpsnm.setStatus("current")


class _StaCertCrlCrlIsssnm_Type(Integer32):
    """Custom type staCertCrlCrlIsssnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertCrlCrlIsssnm_Type.__name__ = "Integer32"
_StaCertCrlCrlIsssnm_Object = MibTableColumn
staCertCrlCrlIsssnm = _StaCertCrlCrlIsssnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 61, 3, 2, 1, 8),
    _StaCertCrlCrlIsssnm_Type()
)
staCertCrlCrlIsssnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertCrlCrlIsssnm.setStatus("current")
_StaVlan_ObjectIdentity = ObjectIdentity
staVlan = _StaVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62)
)
_StaVlanNetTable_Object = MibTable
staVlanNetTable = _StaVlanNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1)
)
if mibBuilder.loadTexts:
    staVlanNetTable.setStatus("current")
_StaVlanNetEntry_Object = MibTableRow
staVlanNetEntry = _StaVlanNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1)
)
staVlanNetEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVlanNetVla"),
)
if mibBuilder.loadTexts:
    staVlanNetEntry.setStatus("current")


class _StaVlanNetVla_Type(Integer32):
    """Custom type staVlanNetVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVlanNetVla_Type.__name__ = "Integer32"
_StaVlanNetVla_Object = MibTableColumn
staVlanNetVla = _StaVlanNetVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1, 1),
    _StaVlanNetVla_Type()
)
staVlanNetVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanNetVla.setStatus("current")


class _StaVlanNetPor_Type(DisplayString):
    """Custom type staVlanNetPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaVlanNetPor_Type.__name__ = "DisplayString"
_StaVlanNetPor_Object = MibTableColumn
staVlanNetPor = _StaVlanNetPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 1, 1, 4),
    _StaVlanNetPor_Type()
)
staVlanNetPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanNetPor.setStatus("current")
_StaVlanPorTable_Object = MibTable
staVlanPorTable = _StaVlanPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2)
)
if mibBuilder.loadTexts:
    staVlanPorTable.setStatus("current")
_StaVlanPorEntry_Object = MibTableRow
staVlanPorEntry = _StaVlanPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1)
)
staVlanPorEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staVlanPorPor"),
)
if mibBuilder.loadTexts:
    staVlanPorEntry.setStatus("current")


class _StaVlanPorPor_Type(DisplayString):
    """Custom type staVlanPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaVlanPorPor_Type.__name__ = "DisplayString"
_StaVlanPorPor_Object = MibTableColumn
staVlanPorPor = _StaVlanPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1, 1),
    _StaVlanPorPor_Type()
)
staVlanPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanPorPor.setStatus("current")


class _StaVlanPorTag_Type(Integer32):
    """Custom type staVlanPorTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("always", 3),
          ("ingress-mixed", 0),
          ("mixed", 2),
          ("never", 1))
    )


_StaVlanPorTag_Type.__name__ = "Integer32"
_StaVlanPorTag_Object = MibTableColumn
staVlanPorTag = _StaVlanPorTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 2, 1, 6),
    _StaVlanPorTag_Type()
)
staVlanPorTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanPorTag.setStatus("current")


class _StaVlanOpe_Type(Integer32):
    """Custom type staVlanOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaVlanOpe_Type.__name__ = "Integer32"
_StaVlanOpe_Object = MibScalar
staVlanOpe = _StaVlanOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 62, 4),
    _StaVlanOpe_Type()
)
staVlanOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanOpe.setStatus("current")
_StaComp_ObjectIdentity = ObjectIdentity
staComp = _StaComp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67)
)
_StaCompDevTable_Object = MibTable
staCompDevTable = _StaCompDevTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1)
)
if mibBuilder.loadTexts:
    staCompDevTable.setStatus("current")
_StaCompDevEntry_Object = MibTableRow
staCompDevEntry = _StaCompDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1)
)
staCompDevEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCompDevIndex"),
)
if mibBuilder.loadTexts:
    staCompDevEntry.setStatus("current")


class _StaCompDevIndex_Type(Integer32):
    """Custom type staCompDevIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompDevIndex_Type.__name__ = "Integer32"
_StaCompDevIndex_Object = MibTableColumn
staCompDevIndex = _StaCompDevIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 1),
    _StaCompDevIndex_Type()
)
staCompDevIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevIndex.setStatus("current")


class _StaCompDevDevicet_Type(Integer32):
    """Custom type staCompDevDevicet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              17,
              23,
              26,
              30,
              31,
              33,
              34,
              35,
              39)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("e4g-systems-uxs1", 23),
          ("ftdi-8u232am", 35),
          ("huawei-e172-e220-e870", 31),
          ("novatel-merlin-mc950d", 26),
          ("option-icon", 17),
          ("outband", 1),
          ("outband-modem", 2),
          ("prolific-2303", 34),
          ("sierra-aircard-875u", 30),
          ("sierra-compass-885", 39))
    )


_StaCompDevDevicet_Type.__name__ = "Integer32"
_StaCompDevDevicet_Object = MibTableColumn
staCompDevDevicet = _StaCompDevDevicet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 2),
    _StaCompDevDevicet_Type()
)
staCompDevDevicet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevDevicet.setStatus("current")


class _StaCompDevBus_Type(Integer32):
    """Custom type staCompDevBus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cardbus", 2),
          ("outband", 1),
          ("unknown", 0),
          ("usb", 3),
          ("virtual", 4))
    )


_StaCompDevBus_Type.__name__ = "Integer32"
_StaCompDevBus_Object = MibTableColumn
staCompDevBus = _StaCompDevBus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 3),
    _StaCompDevBus_Type()
)
staCompDevBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevBus.setStatus("current")


class _StaCompDevDevice_Type(Integer32):
    """Custom type staCompDevDevice based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCompDevDevice_Type.__name__ = "Integer32"
_StaCompDevDevice_Object = MibTableColumn
staCompDevDevice = _StaCompDevDevice_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 4),
    _StaCompDevDevice_Type()
)
staCompDevDevice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevDevice.setStatus("current")


class _StaCompDevVendor_Type(Integer32):
    """Custom type staCompDevVendor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCompDevVendor_Type.__name__ = "Integer32"
_StaCompDevVendor_Object = MibTableColumn
staCompDevVendor = _StaCompDevVendor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 5),
    _StaCompDevVendor_Type()
)
staCompDevVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevVendor.setStatus("current")


class _StaCompDevUsbdriv_Type(Integer32):
    """Custom type staCompDevUsbdriv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("ubsa", 1),
          ("uchcom", 2),
          ("uftdi", 3),
          ("ugensa", 4),
          ("uhmodem", 5),
          ("ukyopon", 6),
          ("unknown", 0),
          ("uplcom", 7),
          ("uslsa", 8))
    )


_StaCompDevUsbdriv_Type.__name__ = "Integer32"
_StaCompDevUsbdriv_Object = MibTableColumn
staCompDevUsbdriv = _StaCompDevUsbdriv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 11),
    _StaCompDevUsbdriv_Type()
)
staCompDevUsbdriv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevUsbdriv.setStatus("current")


class _StaCompDevState_Type(Integer32):
    """Custom type staCompDevState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 5),
          ("in-use", 4),
          ("initialize", 6),
          ("ready", 3),
          ("unknown", 0),
          ("wait-for-firmware", 2))
    )


_StaCompDevState_Type.__name__ = "Integer32"
_StaCompDevState_Object = MibTableColumn
staCompDevState = _StaCompDevState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 13),
    _StaCompDevState_Type()
)
staCompDevState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevState.setStatus("current")


class _StaCompDevFirmwar_Type(DisplayString):
    """Custom type staCompDevFirmwar based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaCompDevFirmwar_Type.__name__ = "DisplayString"
_StaCompDevFirmwar_Object = MibTableColumn
staCompDevFirmwar = _StaCompDevFirmwar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 14),
    _StaCompDevFirmwar_Type()
)
staCompDevFirmwar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevFirmwar.setStatus("current")


class _StaCompDevService_Type(Integer32):
    """Custom type staCompDevService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("com-port-server", 2),
          ("wan", 1))
    )


_StaCompDevService_Type.__name__ = "Integer32"
_StaCompDevService_Object = MibTableColumn
staCompDevService = _StaCompDevService_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 15),
    _StaCompDevService_Type()
)
staCompDevService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevService.setStatus("current")


class _StaCompDevFullnam_Type(DisplayString):
    """Custom type staCompDevFullnam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaCompDevFullnam_Type.__name__ = "DisplayString"
_StaCompDevFullnam_Object = MibTableColumn
staCompDevFullnam = _StaCompDevFullnam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 1, 1, 99),
    _StaCompDevFullnam_Type()
)
staCompDevFullnam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompDevFullnam.setStatus("current")
_StaCompCom_ObjectIdentity = ObjectIdentity
staCompCom = _StaCompCom_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2)
)
_StaCompComNetworksTable_Object = MibTable
staCompComNetworksTable = _StaCompComNetworksTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1)
)
if mibBuilder.loadTexts:
    staCompComNetworksTable.setStatus("current")
_StaCompComNetworksEntry_Object = MibTableRow
staCompComNetworksEntry = _StaCompComNetworksEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1)
)
staCompComNetworksEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCompComNetworksDevicet"),
    (0, "LANCOM-1711-MIB", "staCompComNetworksPortnum"),
)
if mibBuilder.loadTexts:
    staCompComNetworksEntry.setStatus("current")


class _StaCompComNetworksDevicet_Type(Integer32):
    """Custom type staCompComNetworksDevicet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_StaCompComNetworksDevicet_Type.__name__ = "Integer32"
_StaCompComNetworksDevicet_Object = MibTableColumn
staCompComNetworksDevicet = _StaCompComNetworksDevicet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 1),
    _StaCompComNetworksDevicet_Type()
)
staCompComNetworksDevicet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksDevicet.setStatus("current")


class _StaCompComNetworksPortnum_Type(Integer32):
    """Custom type staCompComNetworksPortnum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaCompComNetworksPortnum_Type.__name__ = "Integer32"
_StaCompComNetworksPortnum_Object = MibTableColumn
staCompComNetworksPortnum = _StaCompComNetworksPortnum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 2),
    _StaCompComNetworksPortnum_Type()
)
staCompComNetworksPortnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksPortnum.setStatus("current")


class _StaCompComNetworksConnect_Type(Integer32):
    """Custom type staCompComNetworksConnect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("connecting", 2),
          ("idle", 0),
          ("listening", 1),
          ("not-listening", 4))
    )


_StaCompComNetworksConnect_Type.__name__ = "Integer32"
_StaCompComNetworksConnect_Object = MibTableColumn
staCompComNetworksConnect = _StaCompComNetworksConnect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 4),
    _StaCompComNetworksConnect_Type()
)
staCompComNetworksConnect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksConnect.setStatus("current")


class _StaCompComNetworksLasterr_Type(Integer32):
    """Custom type staCompComNetworksLasterr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dns-error", 1),
          ("none", 0),
          ("remote-disconnect", 3),
          ("tcp-connect-error", 2))
    )


_StaCompComNetworksLasterr_Type.__name__ = "Integer32"
_StaCompComNetworksLasterr_Object = MibTableColumn
staCompComNetworksLasterr = _StaCompComNetworksLasterr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 5),
    _StaCompComNetworksLasterr_Type()
)
staCompComNetworksLasterr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksLasterr.setStatus("current")
_StaCompComNetworksRemotea_Type = IpAddress
_StaCompComNetworksRemotea_Object = MibTableColumn
staCompComNetworksRemotea = _StaCompComNetworksRemotea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 6),
    _StaCompComNetworksRemotea_Type()
)
staCompComNetworksRemotea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksRemotea.setStatus("current")


class _StaCompComNetworksLocalpo_Type(Integer32):
    """Custom type staCompComNetworksLocalpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCompComNetworksLocalpo_Type.__name__ = "Integer32"
_StaCompComNetworksLocalpo_Object = MibTableColumn
staCompComNetworksLocalpo = _StaCompComNetworksLocalpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 7),
    _StaCompComNetworksLocalpo_Type()
)
staCompComNetworksLocalpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksLocalpo.setStatus("current")


class _StaCompComNetworksRemotep_Type(Integer32):
    """Custom type staCompComNetworksRemotep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCompComNetworksRemotep_Type.__name__ = "Integer32"
_StaCompComNetworksRemotep_Object = MibTableColumn
staCompComNetworksRemotep = _StaCompComNetworksRemotep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 8),
    _StaCompComNetworksRemotep_Type()
)
staCompComNetworksRemotep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksRemotep.setStatus("current")


class _StaCompComNetworksFullnam_Type(DisplayString):
    """Custom type staCompComNetworksFullnam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaCompComNetworksFullnam_Type.__name__ = "DisplayString"
_StaCompComNetworksFullnam_Object = MibTableColumn
staCompComNetworksFullnam = _StaCompComNetworksFullnam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 1, 1, 99),
    _StaCompComNetworksFullnam_Type()
)
staCompComNetworksFullnam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComNetworksFullnam.setStatus("current")
_StaCompComComportsTable_Object = MibTable
staCompComComportsTable = _StaCompComComportsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2)
)
if mibBuilder.loadTexts:
    staCompComComportsTable.setStatus("current")
_StaCompComComportsEntry_Object = MibTableRow
staCompComComportsEntry = _StaCompComComportsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1)
)
staCompComComportsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCompComComportsDev"),
    (0, "LANCOM-1711-MIB", "staCompComComportsPor"),
)
if mibBuilder.loadTexts:
    staCompComComportsEntry.setStatus("current")


class _StaCompComComportsDev_Type(Integer32):
    """Custom type staCompComComportsDev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_StaCompComComportsDev_Type.__name__ = "Integer32"
_StaCompComComportsDev_Object = MibTableColumn
staCompComComportsDev = _StaCompComComportsDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 1),
    _StaCompComComportsDev_Type()
)
staCompComComportsDev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsDev.setStatus("current")


class _StaCompComComportsPor_Type(Integer32):
    """Custom type staCompComComportsPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaCompComComportsPor_Type.__name__ = "Integer32"
_StaCompComComportsPor_Object = MibTableColumn
staCompComComportsPor = _StaCompComComportsPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 2),
    _StaCompComComportsPor_Type()
)
staCompComComportsPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsPor.setStatus("current")


class _StaCompComComportsInt_Type(Integer32):
    """Custom type staCompComComportsInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-present", 0),
          ("not-ready", 1),
          ("ready", 2))
    )


_StaCompComComportsInt_Type.__name__ = "Integer32"
_StaCompComComportsInt_Object = MibTableColumn
staCompComComportsInt = _StaCompComComportsInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 4),
    _StaCompComComportsInt_Type()
)
staCompComComportsInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsInt.setStatus("current")


class _StaCompComComportsBit_Type(Integer32):
    """Custom type staCompComComportsBit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(110,
              300,
              600,
              1200,
              2400,
              4800,
              9600,
              19200,
              38400,
              57600,
              115200,
              125000,
              230400)
        )
    )
    namedValues = NamedValues(
        *(("e110", 110),
          ("e115200", 115200),
          ("e1200", 1200),
          ("e125000", 125000),
          ("e19200", 19200),
          ("e230400", 230400),
          ("e2400", 2400),
          ("e300", 300),
          ("e38400", 38400),
          ("e4800", 4800),
          ("e57600", 57600),
          ("e600", 600),
          ("e9600", 9600))
    )


_StaCompComComportsBit_Type.__name__ = "Integer32"
_StaCompComComportsBit_Object = MibTableColumn
staCompComComportsBit = _StaCompComComportsBit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 5),
    _StaCompComComportsBit_Type()
)
staCompComComportsBit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsBit.setStatus("current")


class _StaCompComComportsDat_Type(Integer32):
    """Custom type staCompComComportsDat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("e7", 7),
          ("e8", 8))
    )


_StaCompComComportsDat_Type.__name__ = "Integer32"
_StaCompComComportsDat_Object = MibTableColumn
staCompComComportsDat = _StaCompComComportsDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 6),
    _StaCompComComportsDat_Type()
)
staCompComComportsDat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsDat.setStatus("current")


class _StaCompComComportsPar_Type(Integer32):
    """Custom type staCompComComportsPar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("even", 3),
          ("none", 1),
          ("odd", 2))
    )


_StaCompComComportsPar_Type.__name__ = "Integer32"
_StaCompComComportsPar_Object = MibTableColumn
staCompComComportsPar = _StaCompComComportsPar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 7),
    _StaCompComComportsPar_Type()
)
staCompComComportsPar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsPar.setStatus("current")


class _StaCompComComportsSto_Type(Integer32):
    """Custom type staCompComComportsSto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("e1", 1),
          ("e2", 2))
    )


_StaCompComComportsSto_Type.__name__ = "Integer32"
_StaCompComComportsSto_Object = MibTableColumn
staCompComComportsSto = _StaCompComComportsSto_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 8),
    _StaCompComComportsSto_Type()
)
staCompComComportsSto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsSto.setStatus("current")


class _StaCompComComportsHan_Type(Integer32):
    """Custom type staCompComComportsHan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rts-cts", 1))
    )


_StaCompComComportsHan_Type.__name__ = "Integer32"
_StaCompComComportsHan_Object = MibTableColumn
staCompComComportsHan = _StaCompComComportsHan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 9),
    _StaCompComComportsHan_Type()
)
staCompComComportsHan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsHan.setStatus("current")


class _StaCompComComportsFul_Type(DisplayString):
    """Custom type staCompComComportsFul based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaCompComComportsFul_Type.__name__ = "DisplayString"
_StaCompComComportsFul_Object = MibTableColumn
staCompComComportsFul = _StaCompComComportsFul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 2, 1, 99),
    _StaCompComComportsFul_Type()
)
staCompComComportsFul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportsFul.setStatus("current")
_StaCompComBytecounTable_Object = MibTable
staCompComBytecounTable = _StaCompComBytecounTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3)
)
if mibBuilder.loadTexts:
    staCompComBytecounTable.setStatus("current")
_StaCompComBytecounEntry_Object = MibTableRow
staCompComBytecounEntry = _StaCompComBytecounEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1)
)
staCompComBytecounEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCompComBytecounDevicety"),
    (0, "LANCOM-1711-MIB", "staCompComBytecounPortnumb"),
)
if mibBuilder.loadTexts:
    staCompComBytecounEntry.setStatus("current")


class _StaCompComBytecounDevicety_Type(Integer32):
    """Custom type staCompComBytecounDevicety based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_StaCompComBytecounDevicety_Type.__name__ = "Integer32"
_StaCompComBytecounDevicety_Object = MibTableColumn
staCompComBytecounDevicety = _StaCompComBytecounDevicety_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 1),
    _StaCompComBytecounDevicety_Type()
)
staCompComBytecounDevicety.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounDevicety.setStatus("current")


class _StaCompComBytecounPortnumb_Type(Integer32):
    """Custom type staCompComBytecounPortnumb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaCompComBytecounPortnumb_Type.__name__ = "Integer32"
_StaCompComBytecounPortnumb_Object = MibTableColumn
staCompComBytecounPortnumb = _StaCompComBytecounPortnumb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 2),
    _StaCompComBytecounPortnumb_Type()
)
staCompComBytecounPortnumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounPortnumb.setStatus("current")


class _StaCompComBytecounSerialtx_Type(Integer32):
    """Custom type staCompComBytecounSerialtx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComBytecounSerialtx_Type.__name__ = "Integer32"
_StaCompComBytecounSerialtx_Object = MibTableColumn
staCompComBytecounSerialtx = _StaCompComBytecounSerialtx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 4),
    _StaCompComBytecounSerialtx_Type()
)
staCompComBytecounSerialtx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounSerialtx.setStatus("current")


class _StaCompComBytecounSerialrx_Type(Integer32):
    """Custom type staCompComBytecounSerialrx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComBytecounSerialrx_Type.__name__ = "Integer32"
_StaCompComBytecounSerialrx_Object = MibTableColumn
staCompComBytecounSerialrx = _StaCompComBytecounSerialrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 5),
    _StaCompComBytecounSerialrx_Type()
)
staCompComBytecounSerialrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounSerialrx.setStatus("current")


class _StaCompComBytecounNetworkt_Type(Integer32):
    """Custom type staCompComBytecounNetworkt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComBytecounNetworkt_Type.__name__ = "Integer32"
_StaCompComBytecounNetworkt_Object = MibTableColumn
staCompComBytecounNetworkt = _StaCompComBytecounNetworkt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 6),
    _StaCompComBytecounNetworkt_Type()
)
staCompComBytecounNetworkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounNetworkt.setStatus("current")


class _StaCompComBytecounNetworkr_Type(Integer32):
    """Custom type staCompComBytecounNetworkr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComBytecounNetworkr_Type.__name__ = "Integer32"
_StaCompComBytecounNetworkr_Object = MibTableColumn
staCompComBytecounNetworkr = _StaCompComBytecounNetworkr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 7),
    _StaCompComBytecounNetworkr_Type()
)
staCompComBytecounNetworkr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounNetworkr.setStatus("current")


class _StaCompComBytecounFullname_Type(DisplayString):
    """Custom type staCompComBytecounFullname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaCompComBytecounFullname_Type.__name__ = "DisplayString"
_StaCompComBytecounFullname_Object = MibTableColumn
staCompComBytecounFullname = _StaCompComBytecounFullname_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 3, 1, 99),
    _StaCompComBytecounFullname_Type()
)
staCompComBytecounFullname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComBytecounFullname.setStatus("current")
_StaCompComComporteTable_Object = MibTable
staCompComComporteTable = _StaCompComComporteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4)
)
if mibBuilder.loadTexts:
    staCompComComporteTable.setStatus("current")
_StaCompComComporteEntry_Object = MibTableRow
staCompComComporteEntry = _StaCompComComporteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1)
)
staCompComComporteEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCompComComporteDev"),
    (0, "LANCOM-1711-MIB", "staCompComComportePor"),
)
if mibBuilder.loadTexts:
    staCompComComporteEntry.setStatus("current")


class _StaCompComComporteDev_Type(Integer32):
    """Custom type staCompComComporteDev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_StaCompComComporteDev_Type.__name__ = "Integer32"
_StaCompComComporteDev_Object = MibTableColumn
staCompComComporteDev = _StaCompComComporteDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 1),
    _StaCompComComporteDev_Type()
)
staCompComComporteDev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComporteDev.setStatus("current")


class _StaCompComComportePor_Type(Integer32):
    """Custom type staCompComComportePor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaCompComComportePor_Type.__name__ = "Integer32"
_StaCompComComportePor_Object = MibTableColumn
staCompComComportePor = _StaCompComComportePor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 2),
    _StaCompComComportePor_Type()
)
staCompComComportePor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportePor.setStatus("current")


class _StaCompComComportePar_Type(Integer32):
    """Custom type staCompComComportePar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComComportePar_Type.__name__ = "Integer32"
_StaCompComComportePar_Object = MibTableColumn
staCompComComportePar = _StaCompComComportePar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 4),
    _StaCompComComportePar_Type()
)
staCompComComportePar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComportePar.setStatus("current")


class _StaCompComComporteFra_Type(Integer32):
    """Custom type staCompComComporteFra based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComComporteFra_Type.__name__ = "Integer32"
_StaCompComComporteFra_Object = MibTableColumn
staCompComComporteFra = _StaCompComComporteFra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 5),
    _StaCompComComporteFra_Type()
)
staCompComComporteFra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComporteFra.setStatus("current")


class _StaCompComComporteFul_Type(DisplayString):
    """Custom type staCompComComporteFul based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaCompComComporteFul_Type.__name__ = "DisplayString"
_StaCompComComporteFul_Object = MibTableColumn
staCompComComporteFul = _StaCompComComporteFul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 4, 1, 99),
    _StaCompComComporteFul_Type()
)
staCompComComporteFul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComComporteFul.setStatus("current")
_StaCompComConnectiTable_Object = MibTable
staCompComConnectiTable = _StaCompComConnectiTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5)
)
if mibBuilder.loadTexts:
    staCompComConnectiTable.setStatus("current")
_StaCompComConnectiEntry_Object = MibTableRow
staCompComConnectiEntry = _StaCompComConnectiEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1)
)
staCompComConnectiEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "staCompComConnectiDevicet"),
    (0, "LANCOM-1711-MIB", "staCompComConnectiPortnum"),
)
if mibBuilder.loadTexts:
    staCompComConnectiEntry.setStatus("current")


class _StaCompComConnectiDevicet_Type(Integer32):
    """Custom type staCompComConnectiDevicet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_StaCompComConnectiDevicet_Type.__name__ = "Integer32"
_StaCompComConnectiDevicet_Object = MibTableColumn
staCompComConnectiDevicet = _StaCompComConnectiDevicet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 1),
    _StaCompComConnectiDevicet_Type()
)
staCompComConnectiDevicet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiDevicet.setStatus("current")


class _StaCompComConnectiPortnum_Type(Integer32):
    """Custom type staCompComConnectiPortnum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaCompComConnectiPortnum_Type.__name__ = "Integer32"
_StaCompComConnectiPortnum_Object = MibTableColumn
staCompComConnectiPortnum = _StaCompComConnectiPortnum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 2),
    _StaCompComConnectiPortnum_Type()
)
staCompComConnectiPortnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiPortnum.setStatus("current")


class _StaCompComConnectiServerg_Type(Integer32):
    """Custom type staCompComConnectiServerg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComConnectiServerg_Type.__name__ = "Integer32"
_StaCompComConnectiServerg_Object = MibTableColumn
staCompComConnectiServerg = _StaCompComConnectiServerg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 4),
    _StaCompComConnectiServerg_Type()
)
staCompComConnectiServerg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiServerg.setStatus("current")


class _StaCompComConnectiServerr_Type(Integer32):
    """Custom type staCompComConnectiServerr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComConnectiServerr_Type.__name__ = "Integer32"
_StaCompComConnectiServerr_Object = MibTableColumn
staCompComConnectiServerr = _StaCompComConnectiServerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 5),
    _StaCompComConnectiServerr_Type()
)
staCompComConnectiServerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiServerr.setStatus("current")


class _StaCompComConnectiClients_Type(Integer32):
    """Custom type staCompComConnectiClients based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComConnectiClients_Type.__name__ = "Integer32"
_StaCompComConnectiClients_Object = MibTableColumn
staCompComConnectiClients = _StaCompComConnectiClients_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 6),
    _StaCompComConnectiClients_Type()
)
staCompComConnectiClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiClients.setStatus("current")


class _StaCompComConnectiClientd_Type(Integer32):
    """Custom type staCompComConnectiClientd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComConnectiClientd_Type.__name__ = "Integer32"
_StaCompComConnectiClientd_Object = MibTableColumn
staCompComConnectiClientd = _StaCompComConnectiClientd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 7),
    _StaCompComConnectiClientd_Type()
)
staCompComConnectiClientd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiClientd.setStatus("current")


class _StaCompComConnectiClientt_Type(Integer32):
    """Custom type staCompComConnectiClientt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComConnectiClientt_Type.__name__ = "Integer32"
_StaCompComConnectiClientt_Object = MibTableColumn
staCompComConnectiClientt = _StaCompComConnectiClientt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 8),
    _StaCompComConnectiClientt_Type()
)
staCompComConnectiClientt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiClientt.setStatus("current")


class _StaCompComConnectiClientr_Type(Integer32):
    """Custom type staCompComConnectiClientr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCompComConnectiClientr_Type.__name__ = "Integer32"
_StaCompComConnectiClientr_Object = MibTableColumn
staCompComConnectiClientr = _StaCompComConnectiClientr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 9),
    _StaCompComConnectiClientr_Type()
)
staCompComConnectiClientr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiClientr.setStatus("current")


class _StaCompComConnectiFullnam_Type(DisplayString):
    """Custom type staCompComConnectiFullnam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaCompComConnectiFullnam_Type.__name__ = "DisplayString"
_StaCompComConnectiFullnam_Object = MibTableColumn
staCompComConnectiFullnam = _StaCompComConnectiFullnam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 5, 1, 99),
    _StaCompComConnectiFullnam_Type()
)
staCompComConnectiFullnam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCompComConnectiFullnam.setStatus("current")
_StaCompComDeleteva_Type = DisplayString
_StaCompComDeleteva_Object = MibScalar
staCompComDeleteva = _StaCompComDeleteva_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 67, 2, 99),
    _StaCompComDeleteva_Type()
)
staCompComDeleteva.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staCompComDeleteva.setStatus("current")
_StaTaca_ObjectIdentity = ObjectIdentity
staTaca = _StaTaca_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69)
)
_StaTacaAuthe_Type = Counter32
_StaTacaAuthe_Object = MibScalar
staTacaAuthe = _StaTacaAuthe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 1),
    _StaTacaAuthe_Type()
)
staTacaAuthe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTacaAuthe.setStatus("current")
_StaTacaAutho_Type = Counter32
_StaTacaAutho_Object = MibScalar
staTacaAutho = _StaTacaAutho_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 2),
    _StaTacaAutho_Type()
)
staTacaAutho.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTacaAutho.setStatus("current")
_StaTacaDelet_Type = DisplayString
_StaTacaDelet_Object = MibScalar
staTacaDelet = _StaTacaDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 69, 3),
    _StaTacaDelet_Type()
)
staTacaDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTacaDelet.setStatus("current")
_StaDele_Type = DisplayString
_StaDele_Object = MibScalar
staDele = _StaDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 1, 100),
    _StaDele_Type()
)
staDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staDele.setStatus("current")
_Set_ObjectIdentity = ObjectIdentity
set = _Set_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2)
)


class _SetName_Type(DisplayString):
    """Custom type setName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetName_Type.__name__ = "DisplayString"
_SetName_Object = MibScalar
setName = _SetName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 1),
    _SetName_Type()
)
setName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setName.setStatus("current")
_SetWan_ObjectIdentity = ObjectIdentity
setWan = _SetWan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2)
)
_SetWanDialuppTable_Object = MibTable
setWanDialuppTable = _SetWanDialuppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2)
)
if mibBuilder.loadTexts:
    setWanDialuppTable.setStatus("current")
_SetWanDialuppEntry_Object = MibTableRow
setWanDialuppEntry = _SetWanDialuppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1)
)
setWanDialuppEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanDialuppPee"),
)
if mibBuilder.loadTexts:
    setWanDialuppEntry.setStatus("current")


class _SetWanDialuppPee_Type(DisplayString):
    """Custom type setWanDialuppPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanDialuppPee_Type.__name__ = "DisplayString"
_SetWanDialuppPee_Object = MibTableColumn
setWanDialuppPee = _SetWanDialuppPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 1),
    _SetWanDialuppPee_Type()
)
setWanDialuppPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppPee.setStatus("current")


class _SetWanDialuppDia_Type(DisplayString):
    """Custom type setWanDialuppDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanDialuppDia_Type.__name__ = "DisplayString"
_SetWanDialuppDia_Object = MibTableColumn
setWanDialuppDia = _SetWanDialuppDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 2),
    _SetWanDialuppDia_Type()
)
setWanDialuppDia.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppDia.setStatus("current")


class _SetWanDialuppB1d_Type(Integer32):
    """Custom type setWanDialuppB1d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDialuppB1d_Type.__name__ = "Integer32"
_SetWanDialuppB1d_Object = MibTableColumn
setWanDialuppB1d = _SetWanDialuppB1d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 3),
    _SetWanDialuppB1d_Type()
)
setWanDialuppB1d.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppB1d.setStatus("current")


class _SetWanDialuppB2d_Type(Integer32):
    """Custom type setWanDialuppB2d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDialuppB2d_Type.__name__ = "Integer32"
_SetWanDialuppB2d_Object = MibTableColumn
setWanDialuppB2d = _SetWanDialuppB2d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 4),
    _SetWanDialuppB2d_Type()
)
setWanDialuppB2d.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppB2d.setStatus("current")


class _SetWanDialuppWan_Type(DisplayString):
    """Custom type setWanDialuppWan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetWanDialuppWan_Type.__name__ = "DisplayString"
_SetWanDialuppWan_Object = MibTableColumn
setWanDialuppWan = _SetWanDialuppWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 5),
    _SetWanDialuppWan_Type()
)
setWanDialuppWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppWan.setStatus("current")


class _SetWanDialuppCal_Type(Integer32):
    """Custom type setWanDialuppCal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("fast", 9),
          ("looser", 2),
          ("name", 5),
          ("no", 0))
    )


_SetWanDialuppCal_Type.__name__ = "Integer32"
_SetWanDialuppCal_Object = MibTableColumn
setWanDialuppCal = _SetWanDialuppCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 2, 1, 6),
    _SetWanDialuppCal_Type()
)
setWanDialuppCal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppCal.setStatus("current")
_SetWanRoundroTable_Object = MibTable
setWanRoundroTable = _SetWanRoundroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3)
)
if mibBuilder.loadTexts:
    setWanRoundroTable.setStatus("current")
_SetWanRoundroEntry_Object = MibTableRow
setWanRoundroEntry = _SetWanRoundroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1)
)
setWanRoundroEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanRoundroPee"),
)
if mibBuilder.loadTexts:
    setWanRoundroEntry.setStatus("current")


class _SetWanRoundroPee_Type(DisplayString):
    """Custom type setWanRoundroPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetWanRoundroPee_Type.__name__ = "DisplayString"
_SetWanRoundroPee_Object = MibTableColumn
setWanRoundroPee = _SetWanRoundroPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 1),
    _SetWanRoundroPee_Type()
)
setWanRoundroPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRoundroPee.setStatus("current")


class _SetWanRoundroRou_Type(DisplayString):
    """Custom type setWanRoundroRou based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 53),
    )


_SetWanRoundroRou_Type.__name__ = "DisplayString"
_SetWanRoundroRou_Object = MibTableColumn
setWanRoundroRou = _SetWanRoundroRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 2),
    _SetWanRoundroRou_Type()
)
setWanRoundroRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRoundroRou.setStatus("current")


class _SetWanRoundroHea_Type(Integer32):
    """Custom type setWanRoundroHea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("first", 1),
          ("last", 0))
    )


_SetWanRoundroHea_Type.__name__ = "Integer32"
_SetWanRoundroHea_Object = MibTableColumn
setWanRoundroHea = _SetWanRoundroHea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 3, 1, 3),
    _SetWanRoundroHea_Type()
)
setWanRoundroHea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRoundroHea.setStatus("current")
_SetWanLayerTable_Object = MibTable
setWanLayerTable = _SetWanLayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4)
)
if mibBuilder.loadTexts:
    setWanLayerTable.setStatus("current")
_SetWanLayerEntry_Object = MibTableRow
setWanLayerEntry = _SetWanLayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1)
)
setWanLayerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanLayerWanl"),
)
if mibBuilder.loadTexts:
    setWanLayerEntry.setStatus("current")


class _SetWanLayerWanl_Type(DisplayString):
    """Custom type setWanLayerWanl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetWanLayerWanl_Type.__name__ = "DisplayString"
_SetWanLayerWanl_Object = MibTableColumn
setWanLayerWanl = _SetWanLayerWanl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 1),
    _SetWanLayerWanl_Type()
)
setWanLayerWanl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerWanl.setStatus("current")


class _SetWanLayerEnca_Type(Integer32):
    """Custom type setWanLayerEnca based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ether", 0),
          ("trans", 255))
    )


_SetWanLayerEnca_Type.__name__ = "Integer32"
_SetWanLayerEnca_Object = MibTableColumn
setWanLayerEnca = _SetWanLayerEnca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 2),
    _SetWanLayerEnca_Type()
)
setWanLayerEnca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerEnca.setStatus("current")


class _SetWanLayerLay3_Type(Integer32):
    """Custom type setWanLayerLay3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              255)
        )
    )
    namedValues = NamedValues(
        *(("appp", 5),
          ("dhcp", 9),
          ("ppp", 4),
          ("scappp", 7),
          ("scppp", 6),
          ("sctrans", 8),
          ("trans", 255))
    )


_SetWanLayerLay3_Type.__name__ = "Integer32"
_SetWanLayerLay3_Object = MibTableColumn
setWanLayerLay3 = _SetWanLayerLay3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 3),
    _SetWanLayerLay3_Type()
)
setWanLayerLay3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerLay3.setStatus("current")


class _SetWanLayerLay2_Type(Integer32):
    """Custom type setWanLayerLay2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pppoe", 5),
          ("trans", 1),
          ("x-75lapb", 0))
    )


_SetWanLayerLay2_Type.__name__ = "Integer32"
_SetWanLayerLay2_Object = MibTableColumn
setWanLayerLay2 = _SetWanLayerLay2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 4),
    _SetWanLayerLay2_Type()
)
setWanLayerLay2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerLay2.setStatus("current")


class _SetWanLayerL2op_Type(Integer32):
    """Custom type setWanLayerL2op based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("bnd-plus-cmpr", 2),
          ("bundle", 1),
          ("compr", 0),
          ("none", 255))
    )


_SetWanLayerL2op_Type.__name__ = "Integer32"
_SetWanLayerL2op_Object = MibTableColumn
setWanLayerL2op = _SetWanLayerL2op_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 5),
    _SetWanLayerL2op_Type()
)
setWanLayerL2op.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerL2op.setStatus("current")


class _SetWanLayerLay1_Type(Integer32):
    """Custom type setWanLayerLay1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              6,
              67,
              131)
        )
    )
    namedValues = NamedValues(
        *(("eth", 4),
          ("hdlc56k", 1),
          ("hdlc64k", 0),
          ("serial", 6),
          ("v110-19k2", 67),
          ("v110-38k4", 131),
          ("v110-9k6", 3))
    )


_SetWanLayerLay1_Type.__name__ = "Integer32"
_SetWanLayerLay1_Object = MibTableColumn
setWanLayerLay1 = _SetWanLayerLay1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 4, 1, 6),
    _SetWanLayerLay1_Type()
)
setWanLayerLay1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerLay1.setStatus("current")
_SetWanPppTable_Object = MibTable
setWanPppTable = _SetWanPppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5)
)
if mibBuilder.loadTexts:
    setWanPppTable.setStatus("current")
_SetWanPppEntry_Object = MibTableRow
setWanPppEntry = _SetWanPppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1)
)
setWanPppEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanPppPeer"),
)
if mibBuilder.loadTexts:
    setWanPppEntry.setStatus("current")


class _SetWanPppPeer_Type(DisplayString):
    """Custom type setWanPppPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPppPeer_Type.__name__ = "DisplayString"
_SetWanPppPeer_Object = MibTableColumn
setWanPppPeer = _SetWanPppPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 1),
    _SetWanPppPeer_Type()
)
setWanPppPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppPeer.setStatus("current")


class _SetWanPppAuthentreq_Type(Bits):
    """Custom type setWanPppAuthentreq based on Bits"""
    namedValues = NamedValues(
        *(("chap", 4),
          ("ms-chap", 3),
          ("ms-chapv2", 2),
          ("pap", 5))
    )

_SetWanPppAuthentreq_Type.__name__ = "Bits"
_SetWanPppAuthentreq_Object = MibTableColumn
setWanPppAuthentreq = _SetWanPppAuthentreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 2),
    _SetWanPppAuthentreq_Type()
)
setWanPppAuthentreq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppAuthentreq.setStatus("current")


class _SetWanPppKey_Type(DisplayString):
    """Custom type setWanPppKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWanPppKey_Type.__name__ = "DisplayString"
_SetWanPppKey_Object = MibTableColumn
setWanPppKey = _SetWanPppKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 3),
    _SetWanPppKey_Type()
)
setWanPppKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppKey.setStatus("current")


class _SetWanPppTime_Type(Integer32):
    """Custom type setWanPppTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppTime_Type.__name__ = "Integer32"
_SetWanPppTime_Object = MibTableColumn
setWanPppTime = _SetWanPppTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 4),
    _SetWanPppTime_Type()
)
setWanPppTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppTime.setStatus("current")


class _SetWanPppTry_Type(Integer32):
    """Custom type setWanPppTry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppTry_Type.__name__ = "Integer32"
_SetWanPppTry_Object = MibTableColumn
setWanPppTry = _SetWanPppTry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 5),
    _SetWanPppTry_Type()
)
setWanPppTry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppTry.setStatus("current")


class _SetWanPppUsername_Type(DisplayString):
    """Custom type setWanPppUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetWanPppUsername_Type.__name__ = "DisplayString"
_SetWanPppUsername_Object = MibTableColumn
setWanPppUsername = _SetWanPppUsername_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 6),
    _SetWanPppUsername_Type()
)
setWanPppUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppUsername.setStatus("current")


class _SetWanPppConf_Type(Integer32):
    """Custom type setWanPppConf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppConf_Type.__name__ = "Integer32"
_SetWanPppConf_Object = MibTableColumn
setWanPppConf = _SetWanPppConf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 7),
    _SetWanPppConf_Type()
)
setWanPppConf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppConf.setStatus("current")


class _SetWanPppFail_Type(Integer32):
    """Custom type setWanPppFail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppFail_Type.__name__ = "Integer32"
_SetWanPppFail_Object = MibTableColumn
setWanPppFail = _SetWanPppFail_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 8),
    _SetWanPppFail_Type()
)
setWanPppFail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppFail.setStatus("current")


class _SetWanPppTerm_Type(Integer32):
    """Custom type setWanPppTerm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppTerm_Type.__name__ = "Integer32"
_SetWanPppTerm_Object = MibTableColumn
setWanPppTerm = _SetWanPppTerm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 9),
    _SetWanPppTerm_Type()
)
setWanPppTerm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppTerm.setStatus("current")


class _SetWanPppRights_Type(Integer32):
    """Custom type setWanPppRights based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("ip-plus-nbt", 3),
          ("none", 0))
    )


_SetWanPppRights_Type.__name__ = "Integer32"
_SetWanPppRights_Object = MibTableColumn
setWanPppRights = _SetWanPppRights_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 10),
    _SetWanPppRights_Type()
)
setWanPppRights.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppRights.setStatus("current")


class _SetWanPppAuthentres_Type(Bits):
    """Custom type setWanPppAuthentres based on Bits"""
    namedValues = NamedValues(
        *(("chap", 4),
          ("ms-chap", 3),
          ("ms-chapv2", 2),
          ("pap", 5))
    )

_SetWanPppAuthentres_Type.__name__ = "Bits"
_SetWanPppAuthentres_Object = MibTableColumn
setWanPppAuthentres = _SetWanPppAuthentres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 5, 1, 11),
    _SetWanPppAuthentres_Type()
)
setWanPppAuthentres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppAuthentres.setStatus("current")
_SetWanIncominTable_Object = MibTable
setWanIncominTable = _SetWanIncominTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6)
)
if mibBuilder.loadTexts:
    setWanIncominTable.setStatus("current")
_SetWanIncominEntry_Object = MibTableRow
setWanIncominEntry = _SetWanIncominEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1)
)
setWanIncominEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanIncominDia"),
)
if mibBuilder.loadTexts:
    setWanIncominEntry.setStatus("current")


class _SetWanIncominDia_Type(DisplayString):
    """Custom type setWanIncominDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanIncominDia_Type.__name__ = "DisplayString"
_SetWanIncominDia_Object = MibTableColumn
setWanIncominDia = _SetWanIncominDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1, 1),
    _SetWanIncominDia_Type()
)
setWanIncominDia.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIncominDia.setStatus("current")


class _SetWanIncominPee_Type(DisplayString):
    """Custom type setWanIncominPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanIncominPee_Type.__name__ = "DisplayString"
_SetWanIncominPee_Object = MibTableColumn
setWanIncominPee = _SetWanIncominPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 6, 1, 2),
    _SetWanIncominPee_Type()
)
setWanIncominPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIncominPee.setStatus("current")


class _SetWanDialpre_Type(DisplayString):
    """Custom type setWanDialpre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetWanDialpre_Type.__name__ = "DisplayString"
_SetWanDialpre_Object = MibScalar
setWanDialpre = _SetWanDialpre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 7),
    _SetWanDialpre_Type()
)
setWanDialpre.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setWanDialpre.setStatus("current")
_SetWanScriptsTable_Object = MibTable
setWanScriptsTable = _SetWanScriptsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8)
)
if mibBuilder.loadTexts:
    setWanScriptsTable.setStatus("current")
_SetWanScriptsEntry_Object = MibTableRow
setWanScriptsEntry = _SetWanScriptsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1)
)
setWanScriptsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanScriptsPee"),
)
if mibBuilder.loadTexts:
    setWanScriptsEntry.setStatus("current")


class _SetWanScriptsPee_Type(DisplayString):
    """Custom type setWanScriptsPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetWanScriptsPee_Type.__name__ = "DisplayString"
_SetWanScriptsPee_Object = MibTableColumn
setWanScriptsPee = _SetWanScriptsPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1, 1),
    _SetWanScriptsPee_Type()
)
setWanScriptsPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanScriptsPee.setStatus("current")


class _SetWanScriptsScr_Type(DisplayString):
    """Custom type setWanScriptsScr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 58),
    )


_SetWanScriptsScr_Type.__name__ = "DisplayString"
_SetWanScriptsScr_Object = MibTableColumn
setWanScriptsScr = _SetWanScriptsScr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 8, 1, 2),
    _SetWanScriptsScr_Type()
)
setWanScriptsScr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanScriptsScr.setStatus("current")


class _SetWanProtect_Type(Integer32):
    """Custom type setWanProtect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("number", 2),
          ("screened", 4))
    )


_SetWanProtect_Type.__name__ = "Integer32"
_SetWanProtect_Object = MibScalar
setWanProtect = _SetWanProtect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 9),
    _SetWanProtect_Type()
)
setWanProtect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanProtect.setStatus("current")
_SetWanCallbac_Type = Integer32
_SetWanCallbac_Object = MibScalar
setWanCallbac = _SetWanCallbac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 10),
    _SetWanCallbac_Type()
)
setWanCallbac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanCallbac.setStatus("current")
_SetWanRouteriTable_Object = MibTable
setWanRouteriTable = _SetWanRouteriTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11)
)
if mibBuilder.loadTexts:
    setWanRouteriTable.setStatus("current")
_SetWanRouteriEntry_Object = MibTableRow
setWanRouteriEntry = _SetWanRouteriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1)
)
setWanRouteriEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanRouteriIfc"),
)
if mibBuilder.loadTexts:
    setWanRouteriEntry.setStatus("current")


class _SetWanRouteriIfc_Type(Integer32):
    """Custom type setWanRouteriIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_SetWanRouteriIfc_Type.__name__ = "Integer32"
_SetWanRouteriIfc_Object = MibTableColumn
setWanRouteriIfc = _SetWanRouteriIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 1),
    _SetWanRouteriIfc_Type()
)
setWanRouteriIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setWanRouteriIfc.setStatus("current")


class _SetWanRouteriMsn_Type(DisplayString):
    """Custom type setWanRouteriMsn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetWanRouteriMsn_Type.__name__ = "DisplayString"
_SetWanRouteriMsn_Object = MibTableColumn
setWanRouteriMsn = _SetWanRouteriMsn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 2),
    _SetWanRouteriMsn_Type()
)
setWanRouteriMsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriMsn.setStatus("current")


class _SetWanRouteriCli_Type(Integer32):
    """Custom type setWanRouteriCli based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetWanRouteriCli_Type.__name__ = "Integer32"
_SetWanRouteriCli_Object = MibTableColumn
setWanRouteriCli = _SetWanRouteriCli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 3),
    _SetWanRouteriCli_Type()
)
setWanRouteriCli.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriCli.setStatus("current")


class _SetWanRouteriYc_Type(Integer32):
    """Custom type setWanRouteriYc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetWanRouteriYc_Type.__name__ = "Integer32"
_SetWanRouteriYc_Object = MibTableColumn
setWanRouteriYc = _SetWanRouteriYc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 8),
    _SetWanRouteriYc_Type()
)
setWanRouteriYc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriYc.setStatus("current")


class _SetWanRouteriAcc_Type(Integer32):
    """Custom type setWanRouteriAcc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              128)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("analog", 2),
          ("digital", 1),
          ("none", 128))
    )


_SetWanRouteriAcc_Type.__name__ = "Integer32"
_SetWanRouteriAcc_Object = MibTableColumn
setWanRouteriAcc = _SetWanRouteriAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 9),
    _SetWanRouteriAcc_Type()
)
setWanRouteriAcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriAcc.setStatus("current")


class _SetWanRouteriTyp_Type(Integer32):
    """Custom type setWanRouteriTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWanRouteriTyp_Type.__name__ = "Integer32"
_SetWanRouteriTyp_Object = MibTableColumn
setWanRouteriTyp = _SetWanRouteriTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 11, 1, 10),
    _SetWanRouteriTyp_Type()
)
setWanRouteriTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setWanRouteriTyp.setStatus("current")
_SetWanManuald_ObjectIdentity = ObjectIdentity
setWanManuald = _SetWanManuald_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13)
)
_SetWanManualdCon_Type = DisplayString
_SetWanManualdCon_Object = MibScalar
setWanManualdCon = _SetWanManualdCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13, 1),
    _SetWanManualdCon_Type()
)
setWanManualdCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanManualdCon.setStatus("current")
_SetWanManualdDis_Type = DisplayString
_SetWanManualdDis_Object = MibScalar
setWanManualdDis = _SetWanManualdDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 13, 2),
    _SetWanManualdDis_Type()
)
setWanManualdDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanManualdDis.setStatus("current")
_SetWanBackupd_Type = Integer32
_SetWanBackupd_Object = MibScalar
setWanBackupd = _SetWanBackupd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 18),
    _SetWanBackupd_Type()
)
setWanBackupd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackupd.setStatus("current")
_SetWanDslbroaTable_Object = MibTable
setWanDslbroaTable = _SetWanDslbroaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19)
)
if mibBuilder.loadTexts:
    setWanDslbroaTable.setStatus("current")
_SetWanDslbroaEntry_Object = MibTableRow
setWanDslbroaEntry = _SetWanDslbroaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1)
)
setWanDslbroaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanDslbroaPee"),
)
if mibBuilder.loadTexts:
    setWanDslbroaEntry.setStatus("current")


class _SetWanDslbroaPee_Type(DisplayString):
    """Custom type setWanDslbroaPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanDslbroaPee_Type.__name__ = "DisplayString"
_SetWanDslbroaPee_Object = MibTableColumn
setWanDslbroaPee = _SetWanDslbroaPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 1),
    _SetWanDslbroaPee_Type()
)
setWanDslbroaPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaPee.setStatus("current")


class _SetWanDslbroaSht_Type(Integer32):
    """Custom type setWanDslbroaSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDslbroaSht_Type.__name__ = "Integer32"
_SetWanDslbroaSht_Object = MibTableColumn
setWanDslbroaSht = _SetWanDslbroaSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 2),
    _SetWanDslbroaSht_Type()
)
setWanDslbroaSht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaSht.setStatus("current")


class _SetWanDslbroaAcn_Type(DisplayString):
    """Custom type setWanDslbroaAcn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetWanDslbroaAcn_Type.__name__ = "DisplayString"
_SetWanDslbroaAcn_Object = MibTableColumn
setWanDslbroaAcn = _SetWanDslbroaAcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 3),
    _SetWanDslbroaAcn_Type()
)
setWanDslbroaAcn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaAcn.setStatus("current")


class _SetWanDslbroaSer_Type(DisplayString):
    """Custom type setWanDslbroaSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWanDslbroaSer_Type.__name__ = "DisplayString"
_SetWanDslbroaSer_Object = MibTableColumn
setWanDslbroaSer = _SetWanDslbroaSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 4),
    _SetWanDslbroaSer_Type()
)
setWanDslbroaSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaSer.setStatus("current")


class _SetWanDslbroaWan_Type(DisplayString):
    """Custom type setWanDslbroaWan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetWanDslbroaWan_Type.__name__ = "DisplayString"
_SetWanDslbroaWan_Object = MibTableColumn
setWanDslbroaWan = _SetWanDslbroaWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 5),
    _SetWanDslbroaWan_Type()
)
setWanDslbroaWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaWan.setStatus("current")
_SetWanDslbroaUse_Type = MacAddress
_SetWanDslbroaUse_Object = MibTableColumn
setWanDslbroaUse = _SetWanDslbroaUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 13),
    _SetWanDslbroaUse_Type()
)
setWanDslbroaUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaUse.setStatus("current")


class _SetWanDslbroaDsl_Type(DisplayString):
    """Custom type setWanDslbroaDsl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetWanDslbroaDsl_Type.__name__ = "DisplayString"
_SetWanDslbroaDsl_Object = MibTableColumn
setWanDslbroaDsl = _SetWanDslbroaDsl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 14),
    _SetWanDslbroaDsl_Type()
)
setWanDslbroaDsl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaDsl.setStatus("current")


class _SetWanDslbroaMac_Type(Integer32):
    """Custom type setWanDslbroaMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("global", 1),
          ("local", 0),
          ("user-def", 2))
    )


_SetWanDslbroaMac_Type.__name__ = "Integer32"
_SetWanDslbroaMac_Object = MibTableColumn
setWanDslbroaMac = _SetWanDslbroaMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 15),
    _SetWanDslbroaMac_Type()
)
setWanDslbroaMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaMac.setStatus("current")


class _SetWanDslbroaVla_Type(Integer32):
    """Custom type setWanDslbroaVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDslbroaVla_Type.__name__ = "Integer32"
_SetWanDslbroaVla_Object = MibTableColumn
setWanDslbroaVla = _SetWanDslbroaVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 19, 1, 16),
    _SetWanDslbroaVla_Type()
)
setWanDslbroaVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaVla.setStatus("current")
_SetWanIplistTable_Object = MibTable
setWanIplistTable = _SetWanIplistTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20)
)
if mibBuilder.loadTexts:
    setWanIplistTable.setStatus("current")
_SetWanIplistEntry_Object = MibTableRow
setWanIplistEntry = _SetWanIplistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1)
)
setWanIplistEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanIplistPeer"),
)
if mibBuilder.loadTexts:
    setWanIplistEntry.setStatus("current")


class _SetWanIplistPeer_Type(DisplayString):
    """Custom type setWanIplistPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetWanIplistPeer_Type.__name__ = "DisplayString"
_SetWanIplistPeer_Object = MibTableColumn
setWanIplistPeer = _SetWanIplistPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 1),
    _SetWanIplistPeer_Type()
)
setWanIplistPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistPeer.setStatus("current")
_SetWanIplistIpadd_Type = IpAddress
_SetWanIplistIpadd_Object = MibTableColumn
setWanIplistIpadd = _SetWanIplistIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 2),
    _SetWanIplistIpadd_Type()
)
setWanIplistIpadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistIpadd.setStatus("current")
_SetWanIplistIpnet_Type = IpAddress
_SetWanIplistIpnet_Object = MibTableColumn
setWanIplistIpnet = _SetWanIplistIpnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 3),
    _SetWanIplistIpnet_Type()
)
setWanIplistIpnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistIpnet.setStatus("current")
_SetWanIplistGatew_Type = IpAddress
_SetWanIplistGatew_Object = MibTableColumn
setWanIplistGatew = _SetWanIplistGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 4),
    _SetWanIplistGatew_Type()
)
setWanIplistGatew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistGatew.setStatus("current")
_SetWanIplistDnsde_Type = IpAddress
_SetWanIplistDnsde_Object = MibTableColumn
setWanIplistDnsde = _SetWanIplistDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 5),
    _SetWanIplistDnsde_Type()
)
setWanIplistDnsde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistDnsde.setStatus("current")
_SetWanIplistDnsba_Type = IpAddress
_SetWanIplistDnsba_Object = MibTableColumn
setWanIplistDnsba = _SetWanIplistDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 6),
    _SetWanIplistDnsba_Type()
)
setWanIplistDnsba.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistDnsba.setStatus("current")
_SetWanIplistNbnsd_Type = IpAddress
_SetWanIplistNbnsd_Object = MibTableColumn
setWanIplistNbnsd = _SetWanIplistNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 7),
    _SetWanIplistNbnsd_Type()
)
setWanIplistNbnsd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistNbnsd.setStatus("current")
_SetWanIplistNbnsb_Type = IpAddress
_SetWanIplistNbnsb_Object = MibTableColumn
setWanIplistNbnsb = _SetWanIplistNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 8),
    _SetWanIplistNbnsb_Type()
)
setWanIplistNbnsb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistNbnsb.setStatus("current")
_SetWanIplistMasqi_Type = IpAddress
_SetWanIplistMasqi_Object = MibTableColumn
setWanIplistMasqi = _SetWanIplistMasqi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 20, 1, 9),
    _SetWanIplistMasqi_Type()
)
setWanIplistMasqi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistMasqi.setStatus("current")
_SetWanPptppeeTable_Object = MibTable
setWanPptppeeTable = _SetWanPptppeeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21)
)
if mibBuilder.loadTexts:
    setWanPptppeeTable.setStatus("current")
_SetWanPptppeeEntry_Object = MibTableRow
setWanPptppeeEntry = _SetWanPptppeeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1)
)
setWanPptppeeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanPptppeePee"),
)
if mibBuilder.loadTexts:
    setWanPptppeeEntry.setStatus("current")


class _SetWanPptppeePee_Type(DisplayString):
    """Custom type setWanPptppeePee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPptppeePee_Type.__name__ = "DisplayString"
_SetWanPptppeePee_Object = MibTableColumn
setWanPptppeePee = _SetWanPptppeePee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 1),
    _SetWanPptppeePee_Type()
)
setWanPptppeePee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeePee.setStatus("current")
_SetWanPptppeeIpa_Type = IpAddress
_SetWanPptppeeIpa_Object = MibTableColumn
setWanPptppeeIpa = _SetWanPptppeeIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 2),
    _SetWanPptppeeIpa_Type()
)
setWanPptppeeIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeeIpa.setStatus("current")


class _SetWanPptppeePor_Type(Integer32):
    """Custom type setWanPptppeePor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPptppeePor_Type.__name__ = "Integer32"
_SetWanPptppeePor_Object = MibTableColumn
setWanPptppeePor = _SetWanPptppeePor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 3),
    _SetWanPptppeePor_Type()
)
setWanPptppeePor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeePor.setStatus("current")


class _SetWanPptppeeSht_Type(Integer32):
    """Custom type setWanPptppeeSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPptppeeSht_Type.__name__ = "Integer32"
_SetWanPptppeeSht_Object = MibTableColumn
setWanPptppeeSht = _SetWanPptppeeSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 4),
    _SetWanPptppeeSht_Type()
)
setWanPptppeeSht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeeSht.setStatus("current")


class _SetWanPptppeeRtg_Type(Integer32):
    """Custom type setWanPptppeeRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPptppeeRtg_Type.__name__ = "Integer32"
_SetWanPptppeeRtg_Object = MibTableColumn
setWanPptppeeRtg = _SetWanPptppeeRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 21, 1, 5),
    _SetWanPptppeeRtg_Type()
)
setWanPptppeeRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeeRtg.setStatus("current")
_SetWanRadius_ObjectIdentity = ObjectIdentity
setWanRadius = _SetWanRadius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22)
)


class _SetWanRadiusOperat_Type(Integer32):
    """Custom type setWanRadiusOperat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetWanRadiusOperat_Type.__name__ = "Integer32"
_SetWanRadiusOperat_Object = MibScalar
setWanRadiusOperat = _SetWanRadiusOperat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 1),
    _SetWanRadiusOperat_Type()
)
setWanRadiusOperat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusOperat.setStatus("current")
_SetWanRadiusServer_Type = IpAddress
_SetWanRadiusServer_Object = MibScalar
setWanRadiusServer = _SetWanRadiusServer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 2),
    _SetWanRadiusServer_Type()
)
setWanRadiusServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusServer.setStatus("current")
_SetWanRadiusAuthpo_Type = Integer32
_SetWanRadiusAuthpo_Object = MibScalar
setWanRadiusAuthpo = _SetWanRadiusAuthpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 3),
    _SetWanRadiusAuthpo_Type()
)
setWanRadiusAuthpo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusAuthpo.setStatus("current")


class _SetWanRadiusSecret_Type(DisplayString):
    """Custom type setWanRadiusSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanRadiusSecret_Type.__name__ = "DisplayString"
_SetWanRadiusSecret_Object = MibScalar
setWanRadiusSecret = _SetWanRadiusSecret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 4),
    _SetWanRadiusSecret_Type()
)
setWanRadiusSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusSecret.setStatus("current")


class _SetWanRadiusPppope_Type(Integer32):
    """Custom type setWanRadiusPppope based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetWanRadiusPppope_Type.__name__ = "Integer32"
_SetWanRadiusPppope_Object = MibScalar
setWanRadiusPppope = _SetWanRadiusPppope_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 5),
    _SetWanRadiusPppope_Type()
)
setWanRadiusPppope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusPppope.setStatus("current")


class _SetWanRadiusClipop_Type(Integer32):
    """Custom type setWanRadiusClipop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetWanRadiusClipop_Type.__name__ = "Integer32"
_SetWanRadiusClipop_Object = MibScalar
setWanRadiusClipop = _SetWanRadiusClipop_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 6),
    _SetWanRadiusClipop_Type()
)
setWanRadiusClipop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusClipop.setStatus("current")


class _SetWanRadiusClippa_Type(DisplayString):
    """Custom type setWanRadiusClippa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanRadiusClippa_Type.__name__ = "DisplayString"
_SetWanRadiusClippa_Object = MibScalar
setWanRadiusClippa = _SetWanRadiusClippa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 7),
    _SetWanRadiusClippa_Type()
)
setWanRadiusClippa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusClippa.setStatus("current")


class _SetWanRadiusLoopba_Type(DisplayString):
    """Custom type setWanRadiusLoopba based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanRadiusLoopba_Type.__name__ = "DisplayString"
_SetWanRadiusLoopba_Object = MibScalar
setWanRadiusLoopba = _SetWanRadiusLoopba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 8),
    _SetWanRadiusLoopba_Type()
)
setWanRadiusLoopba.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusLoopba.setStatus("current")


class _SetWanRadiusProtoc_Type(Integer32):
    """Custom type setWanRadiusProtoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetWanRadiusProtoc_Type.__name__ = "Integer32"
_SetWanRadiusProtoc_Object = MibScalar
setWanRadiusProtoc = _SetWanRadiusProtoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 9),
    _SetWanRadiusProtoc_Type()
)
setWanRadiusProtoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusProtoc.setStatus("current")


class _SetWanRadiusAuthpr_Type(Bits):
    """Custom type setWanRadiusAuthpr based on Bits"""
    namedValues = NamedValues(
        *(("chap", 4),
          ("ms-chap", 3),
          ("ms-chapv2", 2),
          ("pap", 5))
    )

_SetWanRadiusAuthpr_Type.__name__ = "Bits"
_SetWanRadiusAuthpr_Object = MibScalar
setWanRadiusAuthpr = _SetWanRadiusAuthpr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 22, 10),
    _SetWanRadiusAuthpr_Type()
)
setWanRadiusAuthpr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusAuthpr.setStatus("current")
_SetWanPollingTable_Object = MibTable
setWanPollingTable = _SetWanPollingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23)
)
if mibBuilder.loadTexts:
    setWanPollingTable.setStatus("current")
_SetWanPollingEntry_Object = MibTableRow
setWanPollingEntry = _SetWanPollingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1)
)
setWanPollingEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanPollingPeer"),
)
if mibBuilder.loadTexts:
    setWanPollingEntry.setStatus("current")


class _SetWanPollingPeer_Type(DisplayString):
    """Custom type setWanPollingPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPollingPeer_Type.__name__ = "DisplayString"
_SetWanPollingPeer_Object = MibTableColumn
setWanPollingPeer = _SetWanPollingPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 1),
    _SetWanPollingPeer_Type()
)
setWanPollingPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingPeer.setStatus("current")
_SetWanPollingIpaddress1_Type = IpAddress
_SetWanPollingIpaddress1_Object = MibTableColumn
setWanPollingIpaddress1 = _SetWanPollingIpaddress1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 2),
    _SetWanPollingIpaddress1_Type()
)
setWanPollingIpaddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress1.setStatus("current")


class _SetWanPollingTime_Type(Integer32):
    """Custom type setWanPollingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPollingTime_Type.__name__ = "Integer32"
_SetWanPollingTime_Object = MibTableColumn
setWanPollingTime = _SetWanPollingTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 3),
    _SetWanPollingTime_Type()
)
setWanPollingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingTime.setStatus("current")


class _SetWanPollingTry_Type(Integer32):
    """Custom type setWanPollingTry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPollingTry_Type.__name__ = "Integer32"
_SetWanPollingTry_Object = MibTableColumn
setWanPollingTry = _SetWanPollingTry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 4),
    _SetWanPollingTry_Type()
)
setWanPollingTry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingTry.setStatus("current")
_SetWanPollingIpaddress2_Type = IpAddress
_SetWanPollingIpaddress2_Object = MibTableColumn
setWanPollingIpaddress2 = _SetWanPollingIpaddress2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 5),
    _SetWanPollingIpaddress2_Type()
)
setWanPollingIpaddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress2.setStatus("current")
_SetWanPollingIpaddress3_Type = IpAddress
_SetWanPollingIpaddress3_Object = MibTableColumn
setWanPollingIpaddress3 = _SetWanPollingIpaddress3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 6),
    _SetWanPollingIpaddress3_Type()
)
setWanPollingIpaddress3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress3.setStatus("current")
_SetWanPollingIpaddress4_Type = IpAddress
_SetWanPollingIpaddress4_Object = MibTableColumn
setWanPollingIpaddress4 = _SetWanPollingIpaddress4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 7),
    _SetWanPollingIpaddress4_Type()
)
setWanPollingIpaddress4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress4.setStatus("current")


class _SetWanPollingLoopbackad_Type(DisplayString):
    """Custom type setWanPollingLoopbackad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPollingLoopbackad_Type.__name__ = "DisplayString"
_SetWanPollingLoopbackad_Object = MibTableColumn
setWanPollingLoopbackad = _SetWanPollingLoopbackad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 23, 1, 8),
    _SetWanPollingLoopbackad_Type()
)
setWanPollingLoopbackad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingLoopbackad.setStatus("current")
_SetWanBackuppTable_Object = MibTable
setWanBackuppTable = _SetWanBackuppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24)
)
if mibBuilder.loadTexts:
    setWanBackuppTable.setStatus("current")
_SetWanBackuppEntry_Object = MibTableRow
setWanBackuppEntry = _SetWanBackuppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1)
)
setWanBackuppEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanBackuppPee"),
)
if mibBuilder.loadTexts:
    setWanBackuppEntry.setStatus("current")


class _SetWanBackuppPee_Type(DisplayString):
    """Custom type setWanBackuppPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetWanBackuppPee_Type.__name__ = "DisplayString"
_SetWanBackuppPee_Object = MibTableColumn
setWanBackuppPee = _SetWanBackuppPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 1),
    _SetWanBackuppPee_Type()
)
setWanBackuppPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackuppPee.setStatus("current")


class _SetWanBackuppAlt_Type(DisplayString):
    """Custom type setWanBackuppAlt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 53),
    )


_SetWanBackuppAlt_Type.__name__ = "DisplayString"
_SetWanBackuppAlt_Object = MibTableColumn
setWanBackuppAlt = _SetWanBackuppAlt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 2),
    _SetWanBackuppAlt_Type()
)
setWanBackuppAlt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackuppAlt.setStatus("current")


class _SetWanBackuppHea_Type(Integer32):
    """Custom type setWanBackuppHea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("first", 1),
          ("last", 0))
    )


_SetWanBackuppHea_Type.__name__ = "Integer32"
_SetWanBackuppHea_Object = MibTableColumn
setWanBackuppHea = _SetWanBackuppHea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 24, 1, 3),
    _SetWanBackuppHea_Type()
)
setWanBackuppHea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackuppHea.setStatus("current")
_SetWanActiontTable_Object = MibTable
setWanActiontTable = _SetWanActiontTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25)
)
if mibBuilder.loadTexts:
    setWanActiontTable.setStatus("current")
_SetWanActiontEntry_Object = MibTableRow
setWanActiontEntry = _SetWanActiontEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1)
)
setWanActiontEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanActiontIndex"),
)
if mibBuilder.loadTexts:
    setWanActiontEntry.setStatus("current")


class _SetWanActiontIndex_Type(Integer32):
    """Custom type setWanActiontIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanActiontIndex_Type.__name__ = "Integer32"
_SetWanActiontIndex_Object = MibTableColumn
setWanActiontIndex = _SetWanActiontIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 1),
    _SetWanActiontIndex_Type()
)
setWanActiontIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontIndex.setStatus("current")


class _SetWanActiontHostn_Type(DisplayString):
    """Custom type setWanActiontHostn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetWanActiontHostn_Type.__name__ = "DisplayString"
_SetWanActiontHostn_Object = MibTableColumn
setWanActiontHostn = _SetWanActiontHostn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 2),
    _SetWanActiontHostn_Type()
)
setWanActiontHostn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontHostn.setStatus("current")


class _SetWanActiontPeer_Type(DisplayString):
    """Custom type setWanActiontPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanActiontPeer_Type.__name__ = "DisplayString"
_SetWanActiontPeer_Object = MibTableColumn
setWanActiontPeer = _SetWanActiontPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 3),
    _SetWanActiontPeer_Type()
)
setWanActiontPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontPeer.setStatus("current")


class _SetWanActiontLockt_Type(Integer32):
    """Custom type setWanActiontLockt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWanActiontLockt_Type.__name__ = "Integer32"
_SetWanActiontLockt_Object = MibTableColumn
setWanActiontLockt = _SetWanActiontLockt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 4),
    _SetWanActiontLockt_Type()
)
setWanActiontLockt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontLockt.setStatus("current")


class _SetWanActiontCondi_Type(Integer32):
    """Custom type setWanActiontCondi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disconnect", 1),
          ("end", 2),
          ("establish", 0),
          ("establish-failure", 4),
          ("failure", 3))
    )


_SetWanActiontCondi_Type.__name__ = "Integer32"
_SetWanActiontCondi_Object = MibTableColumn
setWanActiontCondi = _SetWanActiontCondi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 5),
    _SetWanActiontCondi_Type()
)
setWanActiontCondi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontCondi.setStatus("current")


class _SetWanActiontActio_Type(DisplayString):
    """Custom type setWanActiontActio based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SetWanActiontActio_Type.__name__ = "DisplayString"
_SetWanActiontActio_Object = MibTableColumn
setWanActiontActio = _SetWanActiontActio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 6),
    _SetWanActiontActio_Type()
)
setWanActiontActio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontActio.setStatus("current")


class _SetWanActiontCheck_Type(DisplayString):
    """Custom type setWanActiontCheck based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetWanActiontCheck_Type.__name__ = "DisplayString"
_SetWanActiontCheck_Object = MibTableColumn
setWanActiontCheck = _SetWanActiontCheck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 7),
    _SetWanActiontCheck_Type()
)
setWanActiontCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontCheck.setStatus("current")


class _SetWanActiontActiv_Type(Integer32):
    """Custom type setWanActiontActiv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetWanActiontActiv_Type.__name__ = "Integer32"
_SetWanActiontActiv_Object = MibTableColumn
setWanActiontActiv = _SetWanActiontActiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 8),
    _SetWanActiontActiv_Type()
)
setWanActiontActiv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontActiv.setStatus("current")


class _SetWanActiontOwner_Type(DisplayString):
    """Custom type setWanActiontOwner based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanActiontOwner_Type.__name__ = "DisplayString"
_SetWanActiontOwner_Object = MibTableColumn
setWanActiontOwner = _SetWanActiontOwner_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 25, 1, 9),
    _SetWanActiontOwner_Type()
)
setWanActiontOwner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontOwner.setStatus("current")
_SetWanMtulistTable_Object = MibTable
setWanMtulistTable = _SetWanMtulistTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26)
)
if mibBuilder.loadTexts:
    setWanMtulistTable.setStatus("current")
_SetWanMtulistEntry_Object = MibTableRow
setWanMtulistEntry = _SetWanMtulistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1)
)
setWanMtulistEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setWanMtulistPee"),
)
if mibBuilder.loadTexts:
    setWanMtulistEntry.setStatus("current")


class _SetWanMtulistPee_Type(DisplayString):
    """Custom type setWanMtulistPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanMtulistPee_Type.__name__ = "DisplayString"
_SetWanMtulistPee_Object = MibTableColumn
setWanMtulistPee = _SetWanMtulistPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1, 1),
    _SetWanMtulistPee_Type()
)
setWanMtulistPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanMtulistPee.setStatus("current")


class _SetWanMtulistMtu_Type(Integer32):
    """Custom type setWanMtulistMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanMtulistMtu_Type.__name__ = "Integer32"
_SetWanMtulistMtu_Object = MibTableColumn
setWanMtulistMtu = _SetWanMtulistMtu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 2, 26, 1, 2),
    _SetWanMtulistMtu_Type()
)
setWanMtulistMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanMtulistMtu.setStatus("current")
_SetChar_ObjectIdentity = ObjectIdentity
setChar = _SetChar_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3)
)
_SetCharBudgetu_Type = Integer32
_SetCharBudgetu_Object = MibScalar
setCharBudgetu = _SetCharBudgetu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 1),
    _SetCharBudgetu_Type()
)
setCharBudgetu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharBudgetu.setStatus("current")
_SetCharDaysper_Type = Integer32
_SetCharDaysper_Object = MibScalar
setCharDaysper = _SetCharDaysper_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 2),
    _SetCharDaysper_Type()
)
setCharDaysper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharDaysper.setStatus("current")
_SetCharSpareun_Type = Integer32
_SetCharSpareun_Object = MibScalar
setCharSpareun = _SetCharSpareun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 3),
    _SetCharSpareun_Type()
)
setCharSpareun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharSpareun.setStatus("current")
_SetCharRouteru_Type = Integer32
_SetCharRouteru_Object = MibScalar
setCharRouteru = _SetCharRouteru_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 4),
    _SetCharRouteru_Type()
)
setCharRouteru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharRouteru.setStatus("current")
_SetCharTablebuTable_Object = MibTable
setCharTablebuTable = _SetCharTablebuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5)
)
if mibBuilder.loadTexts:
    setCharTablebuTable.setStatus("current")
_SetCharTablebuEntry_Object = MibTableRow
setCharTablebuEntry = _SetCharTablebuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1)
)
setCharTablebuEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCharTablebuIfc"),
)
if mibBuilder.loadTexts:
    setCharTablebuEntry.setStatus("current")


class _SetCharTablebuIfc_Type(Integer32):
    """Custom type setCharTablebuIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ab-1", 3),
          ("ab-2", 4),
          ("ab-3", 5),
          ("ab-4", 6),
          ("lancapi", 2),
          ("router-isdn-serial", 1),
          ("time-modul", 255))
    )


_SetCharTablebuIfc_Type.__name__ = "Integer32"
_SetCharTablebuIfc_Object = MibTableColumn
setCharTablebuIfc = _SetCharTablebuIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 1),
    _SetCharTablebuIfc_Type()
)
setCharTablebuIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTablebuIfc.setStatus("current")


class _SetCharTablebuBud_Type(Integer32):
    """Custom type setCharTablebuBud based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetCharTablebuBud_Type.__name__ = "Integer32"
_SetCharTablebuBud_Object = MibTableColumn
setCharTablebuBud = _SetCharTablebuBud_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 2),
    _SetCharTablebuBud_Type()
)
setCharTablebuBud.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTablebuBud.setStatus("current")


class _SetCharTablebuSpa_Type(Integer32):
    """Custom type setCharTablebuSpa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetCharTablebuSpa_Type.__name__ = "Integer32"
_SetCharTablebuSpa_Object = MibTableColumn
setCharTablebuSpa = _SetCharTablebuSpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 3),
    _SetCharTablebuSpa_Type()
)
setCharTablebuSpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTablebuSpa.setStatus("current")


class _SetCharTablebuTot_Type(Integer32):
    """Custom type setCharTablebuTot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCharTablebuTot_Type.__name__ = "Integer32"
_SetCharTablebuTot_Object = MibTableColumn
setCharTablebuTot = _SetCharTablebuTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 5, 1, 4),
    _SetCharTablebuTot_Type()
)
setCharTablebuTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTablebuTot.setStatus("current")
_SetCharTotalun_Type = Integer32
_SetCharTotalun_Object = MibScalar
setCharTotalun = _SetCharTotalun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 6),
    _SetCharTotalun_Type()
)
setCharTotalun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTotalun.setStatus("current")
_SetCharTimetabTable_Object = MibTable
setCharTimetabTable = _SetCharTimetabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7)
)
if mibBuilder.loadTexts:
    setCharTimetabTable.setStatus("current")
_SetCharTimetabEntry_Object = MibTableRow
setCharTimetabEntry = _SetCharTimetabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1)
)
setCharTimetabEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCharTimetabIfc"),
)
if mibBuilder.loadTexts:
    setCharTimetabEntry.setStatus("current")


class _SetCharTimetabIfc_Type(Integer32):
    """Custom type setCharTimetabIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ab-1", 4),
          ("ab-2", 5),
          ("ab-3", 6),
          ("ab-4", 7),
          ("lancapi", 3),
          ("router-dsl-broadband", 1),
          ("router-isdn-serial", 2),
          ("time-modul", 255))
    )


_SetCharTimetabIfc_Type.__name__ = "Integer32"
_SetCharTimetabIfc_Object = MibTableColumn
setCharTimetabIfc = _SetCharTimetabIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 1),
    _SetCharTimetabIfc_Type()
)
setCharTimetabIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTimetabIfc.setStatus("current")


class _SetCharTimetabBudgetmi_Type(Integer32):
    """Custom type setCharTimetabBudgetmi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCharTimetabBudgetmi_Type.__name__ = "Integer32"
_SetCharTimetabBudgetmi_Object = MibTableColumn
setCharTimetabBudgetmi = _SetCharTimetabBudgetmi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 2),
    _SetCharTimetabBudgetmi_Type()
)
setCharTimetabBudgetmi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTimetabBudgetmi.setStatus("current")


class _SetCharTimetabSparemin_Type(Integer32):
    """Custom type setCharTimetabSparemin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCharTimetabSparemin_Type.__name__ = "Integer32"
_SetCharTimetabSparemin_Object = MibTableColumn
setCharTimetabSparemin = _SetCharTimetabSparemin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 3),
    _SetCharTimetabSparemin_Type()
)
setCharTimetabSparemin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTimetabSparemin.setStatus("current")


class _SetCharTimetabMinutesa_Type(Integer32):
    """Custom type setCharTimetabMinutesa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCharTimetabMinutesa_Type.__name__ = "Integer32"
_SetCharTimetabMinutesa_Object = MibTableColumn
setCharTimetabMinutesa = _SetCharTimetabMinutesa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 4),
    _SetCharTimetabMinutesa_Type()
)
setCharTimetabMinutesa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTimetabMinutesa.setStatus("current")


class _SetCharTimetabMinutesp_Type(Integer32):
    """Custom type setCharTimetabMinutesp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCharTimetabMinutesp_Type.__name__ = "Integer32"
_SetCharTimetabMinutesp_Object = MibTableColumn
setCharTimetabMinutesp = _SetCharTimetabMinutesp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 7, 1, 5),
    _SetCharTimetabMinutesp_Type()
)
setCharTimetabMinutesp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharTimetabMinutesp.setStatus("current")
_SetCharDslbroa_Type = Integer32
_SetCharDslbroa_Object = MibScalar
setCharDslbroa = _SetCharDslbroa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 8),
    _SetCharDslbroa_Type()
)
setCharDslbroa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharDslbroa.setStatus("current")
_SetCharSpareds_Type = Integer32
_SetCharSpareds_Object = MibScalar
setCharSpareds = _SetCharSpareds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 9),
    _SetCharSpareds_Type()
)
setCharSpareds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharSpareds.setStatus("current")
_SetCharRouterd_Type = Integer32
_SetCharRouterd_Object = MibScalar
setCharRouterd = _SetCharRouterd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 10),
    _SetCharRouterd_Type()
)
setCharRouterd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharRouterd.setStatus("current")
_SetCharAdditio_Type = Integer32
_SetCharAdditio_Object = MibScalar
setCharAdditio = _SetCharAdditio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 11),
    _SetCharAdditio_Type()
)
setCharAdditio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharAdditio.setStatus("current")
_SetCharActivat_Type = DisplayString
_SetCharActivat_Object = MibScalar
setCharActivat = _SetCharActivat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 12),
    _SetCharActivat_Type()
)
setCharActivat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharActivat.setStatus("current")
_SetCharDialupm_Type = Integer32
_SetCharDialupm_Object = MibScalar
setCharDialupm = _SetCharDialupm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 13),
    _SetCharDialupm_Type()
)
setCharDialupm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharDialupm.setStatus("current")
_SetCharSparedi_Type = Integer32
_SetCharSparedi_Object = MibScalar
setCharSparedi = _SetCharSparedi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 14),
    _SetCharSparedi_Type()
)
setCharSparedi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharSparedi.setStatus("current")
_SetCharRouteri_Type = Integer32
_SetCharRouteri_Object = MibScalar
setCharRouteri = _SetCharRouteri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 15),
    _SetCharRouteri_Type()
)
setCharRouteri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setCharRouteri.setStatus("current")
_SetCharResetbu_Type = DisplayString
_SetCharResetbu_Object = MibScalar
setCharResetbu = _SetCharResetbu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 3, 16),
    _SetCharResetbu_Type()
)
setCharResetbu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCharResetbu.setStatus("current")
_SetLan_ObjectIdentity = ObjectIdentity
setLan = _SetLan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4)
)
_SetLanMacadd_Type = MacAddress
_SetLanMacadd_Object = MibScalar
setLanMacadd = _SetLanMacadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 2),
    _SetLanMacadd_Type()
)
setLanMacadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLanMacadd.setStatus("current")
_SetLanSpareh_Type = Integer32
_SetLanSpareh_Object = MibScalar
setLanSpareh = _SetLanSpareh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 3),
    _SetLanSpareh_Type()
)
setLanSpareh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanSpareh.setStatus("current")
_SetLanTracem_Type = MacAddress
_SetLanTracem_Object = MibScalar
setLanTracem = _SetLanTracem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 8),
    _SetLanTracem_Type()
)
setLanTracem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanTracem.setStatus("current")
_SetLanTracel_Type = Integer32
_SetLanTracel_Object = MibScalar
setLanTracel = _SetLanTracel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 4, 9),
    _SetLanTracel_Type()
)
setLanTracel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanTracel.setStatus("current")
_SetTcpi_ObjectIdentity = ObjectIdentity
setTcpi = _SetTcpi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7)
)


class _SetTcpiOpera_Type(Integer32):
    """Custom type setTcpiOpera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetTcpiOpera_Type.__name__ = "Integer32"
_SetTcpiOpera_Object = MibScalar
setTcpiOpera = _SetTcpiOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 1),
    _SetTcpiOpera_Type()
)
setTcpiOpera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiOpera.setStatus("current")
_SetTcpiAccesTable_Object = MibTable
setTcpiAccesTable = _SetTcpiAccesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6)
)
if mibBuilder.loadTexts:
    setTcpiAccesTable.setStatus("current")
_SetTcpiAccesEntry_Object = MibTableRow
setTcpiAccesEntry = _SetTcpiAccesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1)
)
setTcpiAccesEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setTcpiAccesIpa"),
    (0, "LANCOM-1711-MIB", "setTcpiAccesIpn"),
    (0, "LANCOM-1711-MIB", "setTcpiAccesRtg"),
)
if mibBuilder.loadTexts:
    setTcpiAccesEntry.setStatus("current")
_SetTcpiAccesIpa_Type = IpAddress
_SetTcpiAccesIpa_Object = MibTableColumn
setTcpiAccesIpa = _SetTcpiAccesIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 1),
    _SetTcpiAccesIpa_Type()
)
setTcpiAccesIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAccesIpa.setStatus("current")
_SetTcpiAccesIpn_Type = IpAddress
_SetTcpiAccesIpn_Object = MibTableColumn
setTcpiAccesIpn = _SetTcpiAccesIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 2),
    _SetTcpiAccesIpn_Type()
)
setTcpiAccesIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAccesIpn.setStatus("current")


class _SetTcpiAccesRtg_Type(Integer32):
    """Custom type setTcpiAccesRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpiAccesRtg_Type.__name__ = "Integer32"
_SetTcpiAccesRtg_Object = MibTableColumn
setTcpiAccesRtg = _SetTcpiAccesRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 6, 1, 3),
    _SetTcpiAccesRtg_Type()
)
setTcpiAccesRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAccesRtg.setStatus("current")
_SetTcpiDnsde_Type = IpAddress
_SetTcpiDnsde_Object = MibScalar
setTcpiDnsde = _SetTcpiDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 7),
    _SetTcpiDnsde_Type()
)
setTcpiDnsde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiDnsde.setStatus("current")
_SetTcpiDnsba_Type = IpAddress
_SetTcpiDnsba_Object = MibScalar
setTcpiDnsba = _SetTcpiDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 8),
    _SetTcpiDnsba_Type()
)
setTcpiDnsba.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiDnsba.setStatus("current")
_SetTcpiNbnsd_Type = IpAddress
_SetTcpiNbnsd_Object = MibScalar
setTcpiNbnsd = _SetTcpiNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 9),
    _SetTcpiNbnsd_Type()
)
setTcpiNbnsd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNbnsd.setStatus("current")
_SetTcpiNbnsb_Type = IpAddress
_SetTcpiNbnsb_Object = MibScalar
setTcpiNbnsb = _SetTcpiNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 10),
    _SetTcpiNbnsb_Type()
)
setTcpiNbnsb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNbnsb.setStatus("current")
_SetTcpiArpag_Type = Integer32
_SetTcpiArpag_Object = MibScalar
setTcpiArpag = _SetTcpiArpag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 11),
    _SetTcpiArpag_Type()
)
setTcpiArpag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiArpag.setStatus("current")
_SetTcpiArptaTable_Object = MibTable
setTcpiArptaTable = _SetTcpiArptaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16)
)
if mibBuilder.loadTexts:
    setTcpiArptaTable.setStatus("current")
_SetTcpiArptaEntry_Object = MibTableRow
setTcpiArptaEntry = _SetTcpiArptaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1)
)
setTcpiArptaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setTcpiArptaIpa"),
)
if mibBuilder.loadTexts:
    setTcpiArptaEntry.setStatus("current")
_SetTcpiArptaIpa_Type = IpAddress
_SetTcpiArptaIpa_Object = MibTableColumn
setTcpiArptaIpa = _SetTcpiArptaIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 1),
    _SetTcpiArptaIpa_Type()
)
setTcpiArptaIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaIpa.setStatus("current")
_SetTcpiArptaMac_Type = MacAddress
_SetTcpiArptaMac_Object = MibTableColumn
setTcpiArptaMac = _SetTcpiArptaMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 2),
    _SetTcpiArptaMac_Type()
)
setTcpiArptaMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaMac.setStatus("current")


class _SetTcpiArptaLas_Type(Integer32):
    """Custom type setTcpiArptaLas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetTcpiArptaLas_Type.__name__ = "Integer32"
_SetTcpiArptaLas_Object = MibTableColumn
setTcpiArptaLas = _SetTcpiArptaLas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 3),
    _SetTcpiArptaLas_Type()
)
setTcpiArptaLas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaLas.setStatus("current")


class _SetTcpiArptaCon_Type(Integer32):
    """Custom type setTcpiArptaCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3),
          ("wan", 4))
    )


_SetTcpiArptaCon_Type.__name__ = "Integer32"
_SetTcpiArptaCon_Object = MibTableColumn
setTcpiArptaCon = _SetTcpiArptaCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 4),
    _SetTcpiArptaCon_Type()
)
setTcpiArptaCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaCon.setStatus("current")


class _SetTcpiArptaEth_Type(Integer32):
    """Custom type setTcpiArptaEth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_SetTcpiArptaEth_Type.__name__ = "Integer32"
_SetTcpiArptaEth_Object = MibTableColumn
setTcpiArptaEth = _SetTcpiArptaEth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 5),
    _SetTcpiArptaEth_Type()
)
setTcpiArptaEth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaEth.setStatus("current")


class _SetTcpiArptaPee_Type(DisplayString):
    """Custom type setTcpiArptaPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetTcpiArptaPee_Type.__name__ = "DisplayString"
_SetTcpiArptaPee_Object = MibTableColumn
setTcpiArptaPee = _SetTcpiArptaPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 6),
    _SetTcpiArptaPee_Type()
)
setTcpiArptaPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaPee.setStatus("current")


class _SetTcpiArptaVla_Type(Integer32):
    """Custom type setTcpiArptaVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpiArptaVla_Type.__name__ = "Integer32"
_SetTcpiArptaVla_Object = MibTableColumn
setTcpiArptaVla = _SetTcpiArptaVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 16, 1, 7),
    _SetTcpiArptaVla_Type()
)
setTcpiArptaVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpiArptaVla.setStatus("current")
_SetTcpiLoopbTable_Object = MibTable
setTcpiLoopbTable = _SetTcpiLoopbTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17)
)
if mibBuilder.loadTexts:
    setTcpiLoopbTable.setStatus("current")
_SetTcpiLoopbEntry_Object = MibTableRow
setTcpiLoopbEntry = _SetTcpiLoopbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1)
)
setTcpiLoopbEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setTcpiLoopbNam"),
)
if mibBuilder.loadTexts:
    setTcpiLoopbEntry.setStatus("current")
_SetTcpiLoopbLoo_Type = IpAddress
_SetTcpiLoopbLoo_Object = MibTableColumn
setTcpiLoopbLoo = _SetTcpiLoopbLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 1),
    _SetTcpiLoopbLoo_Type()
)
setTcpiLoopbLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiLoopbLoo.setStatus("current")


class _SetTcpiLoopbNam_Type(DisplayString):
    """Custom type setTcpiLoopbNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetTcpiLoopbNam_Type.__name__ = "DisplayString"
_SetTcpiLoopbNam_Object = MibTableColumn
setTcpiLoopbNam = _SetTcpiLoopbNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 2),
    _SetTcpiLoopbNam_Type()
)
setTcpiLoopbNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiLoopbNam.setStatus("current")


class _SetTcpiLoopbRtg_Type(Integer32):
    """Custom type setTcpiLoopbRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpiLoopbRtg_Type.__name__ = "Integer32"
_SetTcpiLoopbRtg_Object = MibTableColumn
setTcpiLoopbRtg = _SetTcpiLoopbRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 17, 1, 3),
    _SetTcpiLoopbRtg_Type()
)
setTcpiLoopbRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiLoopbRtg.setStatus("current")


class _SetTcpiNonlo_Type(Integer32):
    """Custom type setTcpiNonlo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetTcpiNonlo_Type.__name__ = "Integer32"
_SetTcpiNonlo_Object = MibScalar
setTcpiNonlo = _SetTcpiNonlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 20),
    _SetTcpiNonlo_Type()
)
setTcpiNonlo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNonlo.setStatus("current")
_SetTcpiAlive_ObjectIdentity = ObjectIdentity
setTcpiAlive = _SetTcpiAlive_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21)
)
_SetTcpiAliveTarget_Type = IpAddress
_SetTcpiAliveTarget_Object = MibScalar
setTcpiAliveTarget = _SetTcpiAliveTarget_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 1),
    _SetTcpiAliveTarget_Type()
)
setTcpiAliveTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAliveTarget.setStatus("current")
_SetTcpiAliveTestin_Type = Integer32
_SetTcpiAliveTestin_Object = MibScalar
setTcpiAliveTestin = _SetTcpiAliveTestin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 2),
    _SetTcpiAliveTestin_Type()
)
setTcpiAliveTestin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAliveTestin.setStatus("current")
_SetTcpiAliveRetryc_Type = Integer32
_SetTcpiAliveRetryc_Object = MibScalar
setTcpiAliveRetryc = _SetTcpiAliveRetryc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 3),
    _SetTcpiAliveRetryc_Type()
)
setTcpiAliveRetryc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAliveRetryc.setStatus("current")
_SetTcpiAliveRetryi_Type = Integer32
_SetTcpiAliveRetryi_Object = MibScalar
setTcpiAliveRetryi = _SetTcpiAliveRetryi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 4),
    _SetTcpiAliveRetryi_Type()
)
setTcpiAliveRetryi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAliveRetryi.setStatus("current")
_SetTcpiAliveFailli_Type = Integer32
_SetTcpiAliveFailli_Object = MibScalar
setTcpiAliveFailli = _SetTcpiAliveFailli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 5),
    _SetTcpiAliveFailli_Type()
)
setTcpiAliveFailli.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAliveFailli.setStatus("current")


class _SetTcpiAliveBootty_Type(Integer32):
    """Custom type setTcpiAliveBootty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("cold-boot", 1),
          ("warm-boot", 0))
    )


_SetTcpiAliveBootty_Type.__name__ = "Integer32"
_SetTcpiAliveBootty_Object = MibScalar
setTcpiAliveBootty = _SetTcpiAliveBootty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 21, 6),
    _SetTcpiAliveBootty_Type()
)
setTcpiAliveBootty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiAliveBootty.setStatus("current")


class _SetTcpiIcmpo_Type(Integer32):
    """Custom type setTcpiIcmpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetTcpiIcmpo_Type.__name__ = "Integer32"
_SetTcpiIcmpo_Object = MibScalar
setTcpiIcmpo = _SetTcpiIcmpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 22),
    _SetTcpiIcmpo_Type()
)
setTcpiIcmpo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiIcmpo.setStatus("current")
_SetTcpiNetwoTable_Object = MibTable
setTcpiNetwoTable = _SetTcpiNetwoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30)
)
if mibBuilder.loadTexts:
    setTcpiNetwoTable.setStatus("current")
_SetTcpiNetwoEntry_Object = MibTableRow
setTcpiNetwoEntry = _SetTcpiNetwoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1)
)
setTcpiNetwoEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setTcpiNetwoNet"),
)
if mibBuilder.loadTexts:
    setTcpiNetwoEntry.setStatus("current")


class _SetTcpiNetwoNet_Type(DisplayString):
    """Custom type setTcpiNetwoNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetTcpiNetwoNet_Type.__name__ = "DisplayString"
_SetTcpiNetwoNet_Object = MibTableColumn
setTcpiNetwoNet = _SetTcpiNetwoNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 1),
    _SetTcpiNetwoNet_Type()
)
setTcpiNetwoNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoNet.setStatus("current")
_SetTcpiNetwoIpa_Type = IpAddress
_SetTcpiNetwoIpa_Object = MibTableColumn
setTcpiNetwoIpa = _SetTcpiNetwoIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 2),
    _SetTcpiNetwoIpa_Type()
)
setTcpiNetwoIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoIpa.setStatus("current")
_SetTcpiNetwoIpn_Type = IpAddress
_SetTcpiNetwoIpn_Object = MibTableColumn
setTcpiNetwoIpn = _SetTcpiNetwoIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 3),
    _SetTcpiNetwoIpn_Type()
)
setTcpiNetwoIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoIpn.setStatus("current")


class _SetTcpiNetwoVla_Type(Integer32):
    """Custom type setTcpiNetwoVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpiNetwoVla_Type.__name__ = "Integer32"
_SetTcpiNetwoVla_Object = MibTableColumn
setTcpiNetwoVla = _SetTcpiNetwoVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 4),
    _SetTcpiNetwoVla_Type()
)
setTcpiNetwoVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoVla.setStatus("current")


class _SetTcpiNetwoInt_Type(Integer32):
    """Custom type setTcpiNetwoInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(256,
              257,
              258,
              259,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("any", 65535),
          ("lan-1", 256),
          ("lan-2", 257),
          ("lan-3", 258),
          ("lan-4", 259))
    )


_SetTcpiNetwoInt_Type.__name__ = "Integer32"
_SetTcpiNetwoInt_Object = MibTableColumn
setTcpiNetwoInt = _SetTcpiNetwoInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 5),
    _SetTcpiNetwoInt_Type()
)
setTcpiNetwoInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoInt.setStatus("current")


class _SetTcpiNetwoSrc_Type(Integer32):
    """Custom type setTcpiNetwoSrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("loose", 0),
          ("strict", 1))
    )


_SetTcpiNetwoSrc_Type.__name__ = "Integer32"
_SetTcpiNetwoSrc_Object = MibTableColumn
setTcpiNetwoSrc = _SetTcpiNetwoSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 6),
    _SetTcpiNetwoSrc_Type()
)
setTcpiNetwoSrc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoSrc.setStatus("current")


class _SetTcpiNetwoTyp_Type(Integer32):
    """Custom type setTcpiNetwoTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("dmz", 2),
          ("intranet", 1))
    )


_SetTcpiNetwoTyp_Type.__name__ = "Integer32"
_SetTcpiNetwoTyp_Object = MibTableColumn
setTcpiNetwoTyp = _SetTcpiNetwoTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 7),
    _SetTcpiNetwoTyp_Type()
)
setTcpiNetwoTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoTyp.setStatus("current")


class _SetTcpiNetwoRtg_Type(Integer32):
    """Custom type setTcpiNetwoRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpiNetwoRtg_Type.__name__ = "Integer32"
_SetTcpiNetwoRtg_Object = MibTableColumn
setTcpiNetwoRtg = _SetTcpiNetwoRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 8),
    _SetTcpiNetwoRtg_Type()
)
setTcpiNetwoRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoRtg.setStatus("current")


class _SetTcpiNetwoCom_Type(DisplayString):
    """Custom type setTcpiNetwoCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetTcpiNetwoCom_Type.__name__ = "DisplayString"
_SetTcpiNetwoCom_Object = MibTableColumn
setTcpiNetwoCom = _SetTcpiNetwoCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 7, 30, 1, 9),
    _SetTcpiNetwoCom_Type()
)
setTcpiNetwoCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpiNetwoCom.setStatus("current")
_SetIpro_ObjectIdentity = ObjectIdentity
setIpro = _SetIpro_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8)
)


class _SetIproOpe_Type(Integer32):
    """Custom type setIproOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproOpe_Type.__name__ = "Integer32"
_SetIproOpe_Object = MibScalar
setIproOpe = _SetIproOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 1),
    _SetIproOpe_Type()
)
setIproOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproOpe.setStatus("current")
_SetIproIprTable_Object = MibTable
setIproIprTable = _SetIproIprTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2)
)
if mibBuilder.loadTexts:
    setIproIprTable.setStatus("current")
_SetIproIprEntry_Object = MibTableRow
setIproIprEntry = _SetIproIprEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1)
)
setIproIprEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproIprIpa"),
    (0, "LANCOM-1711-MIB", "setIproIprIpn"),
    (0, "LANCOM-1711-MIB", "setIproIprRtg"),
)
if mibBuilder.loadTexts:
    setIproIprEntry.setStatus("current")
_SetIproIprIpa_Type = IpAddress
_SetIproIprIpa_Object = MibTableColumn
setIproIprIpa = _SetIproIprIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 1),
    _SetIproIprIpa_Type()
)
setIproIprIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprIpa.setStatus("current")
_SetIproIprIpn_Type = IpAddress
_SetIproIprIpn_Object = MibTableColumn
setIproIprIpn = _SetIproIprIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 2),
    _SetIproIprIpn_Type()
)
setIproIprIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprIpn.setStatus("current")


class _SetIproIprPee_Type(DisplayString):
    """Custom type setIproIprPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproIprPee_Type.__name__ = "DisplayString"
_SetIproIprPee_Object = MibTableColumn
setIproIprPee = _SetIproIprPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 3),
    _SetIproIprPee_Type()
)
setIproIprPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprPee.setStatus("current")


class _SetIproIprDis_Type(Integer32):
    """Custom type setIproIprDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproIprDis_Type.__name__ = "Integer32"
_SetIproIprDis_Object = MibTableColumn
setIproIprDis = _SetIproIprDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 4),
    _SetIproIprDis_Type()
)
setIproIprDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprDis.setStatus("current")


class _SetIproIprMas_Type(Integer32):
    """Custom type setIproIprMas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("intranet", 2),
          ("no", 0),
          ("on", 1))
    )


_SetIproIprMas_Type.__name__ = "Integer32"
_SetIproIprMas_Object = MibTableColumn
setIproIprMas = _SetIproIprMas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 5),
    _SetIproIprMas_Type()
)
setIproIprMas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprMas.setStatus("current")


class _SetIproIprAct_Type(Integer32):
    """Custom type setIproIprAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("semi", 2),
          ("yes", 0))
    )


_SetIproIprAct_Type.__name__ = "Integer32"
_SetIproIprAct_Object = MibTableColumn
setIproIprAct = _SetIproIprAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 6),
    _SetIproIprAct_Type()
)
setIproIprAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprAct.setStatus("current")


class _SetIproIprCom_Type(DisplayString):
    """Custom type setIproIprCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIproIprCom_Type.__name__ = "DisplayString"
_SetIproIprCom_Object = MibTableColumn
setIproIprCom = _SetIproIprCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 7),
    _SetIproIprCom_Type()
)
setIproIprCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprCom.setStatus("current")


class _SetIproIprRtg_Type(Integer32):
    """Custom type setIproIprRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproIprRtg_Type.__name__ = "Integer32"
_SetIproIprRtg_Object = MibTableColumn
setIproIprRtg = _SetIproIprRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 2, 1, 8),
    _SetIproIprRtg_Type()
)
setIproIprRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproIprRtg.setStatus("current")


class _SetIproPro_Type(Integer32):
    """Custom type setIproPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproPro_Type.__name__ = "Integer32"
_SetIproPro_Object = MibScalar
setIproPro = _SetIproPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 5),
    _SetIproPro_Type()
)
setIproPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproPro.setStatus("current")


class _SetIproSen_Type(Integer32):
    """Custom type setIproSen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIproSen_Type.__name__ = "Integer32"
_SetIproSen_Object = MibScalar
setIproSen = _SetIproSen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 6),
    _SetIproSen_Type()
)
setIproSen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproSen.setStatus("current")
_SetIproRou_ObjectIdentity = ObjectIdentity
setIproRou = _SetIproRou_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7)
)


class _SetIproRouRou_Type(Integer32):
    """Custom type setIproRouRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("diffserv", 2),
          ("normal", 0),
          ("type-of-service", 1))
    )


_SetIproRouRou_Type.__name__ = "Integer32"
_SetIproRouRou_Object = MibScalar
setIproRouRou = _SetIproRouRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 1),
    _SetIproRouRou_Type()
)
setIproRouRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRouRou.setStatus("current")


class _SetIproRouIcm_Type(Integer32):
    """Custom type setIproRouIcm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("reliable", 1))
    )


_SetIproRouIcm_Type.__name__ = "Integer32"
_SetIproRouIcm_Object = MibScalar
setIproRouIcm = _SetIproRouIcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 2),
    _SetIproRouIcm_Type()
)
setIproRouIcm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRouIcm.setStatus("current")


class _SetIproRouSyn_Type(Integer32):
    """Custom type setIproRouSyn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRouSyn_Type.__name__ = "Integer32"
_SetIproRouSyn_Object = MibScalar
setIproRouSyn = _SetIproRouSyn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 3),
    _SetIproRouSyn_Type()
)
setIproRouSyn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRouSyn.setStatus("current")


class _SetIproRouL2l_Type(Integer32):
    """Custom type setIproRouL2l based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetIproRouL2l_Type.__name__ = "Integer32"
_SetIproRouL2l_Object = MibScalar
setIproRouL2l = _SetIproRouL2l_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 4),
    _SetIproRouL2l_Type()
)
setIproRouL2l.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRouL2l.setStatus("current")


class _SetIproRouL3l_Type(Integer32):
    """Custom type setIproRouL3l based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRouL3l_Type.__name__ = "Integer32"
_SetIproRouL3l_Object = MibScalar
setIproRouL3l = _SetIproRouL3l_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 7, 5),
    _SetIproRouL3l_Type()
)
setIproRouL3l.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRouL3l.setStatus("current")
_SetIproRip_ObjectIdentity = ObjectIdentity
setIproRip = _SetIproRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8)
)


class _SetIproRipR1m_Type(Integer32):
    """Custom type setIproRipR1m based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("address", 1),
          ("cl-plus-addr", 2),
          ("class", 0))
    )


_SetIproRipR1m_Type.__name__ = "Integer32"
_SetIproRipR1m_Object = MibScalar
setIproRipR1m = _SetIproRipR1m_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 2),
    _SetIproRipR1m_Type()
)
setIproRipR1m.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipR1m.setStatus("current")
_SetIproRipIprTable_Object = MibTable
setIproRipIprTable = _SetIproRipIprTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3)
)
if mibBuilder.loadTexts:
    setIproRipIprTable.setStatus("current")
_SetIproRipIprEntry_Object = MibTableRow
setIproRipIprEntry = _SetIproRipIprEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1)
)
setIproRipIprEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproRipIprIpa"),
    (0, "LANCOM-1711-MIB", "setIproRipIprIpn"),
    (0, "LANCOM-1711-MIB", "setIproRipIprRtg"),
)
if mibBuilder.loadTexts:
    setIproRipIprEntry.setStatus("current")
_SetIproRipIprIpa_Type = IpAddress
_SetIproRipIprIpa_Object = MibTableColumn
setIproRipIprIpa = _SetIproRipIprIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 1),
    _SetIproRipIprIpa_Type()
)
setIproRipIprIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprIpa.setStatus("current")
_SetIproRipIprIpn_Type = IpAddress
_SetIproRipIprIpn_Object = MibTableColumn
setIproRipIprIpn = _SetIproRipIprIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 2),
    _SetIproRipIprIpn_Type()
)
setIproRipIprIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprIpn.setStatus("current")


class _SetIproRipIprTim_Type(Integer32):
    """Custom type setIproRipIprTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproRipIprTim_Type.__name__ = "Integer32"
_SetIproRipIprTim_Object = MibTableColumn
setIproRipIprTim = _SetIproRipIprTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 3),
    _SetIproRipIprTim_Type()
)
setIproRipIprTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprTim.setStatus("current")


class _SetIproRipIprDis_Type(Integer32):
    """Custom type setIproRipIprDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproRipIprDis_Type.__name__ = "Integer32"
_SetIproRipIprDis_Object = MibTableColumn
setIproRipIprDis = _SetIproRipIprDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 4),
    _SetIproRipIprDis_Type()
)
setIproRipIprDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprDis.setStatus("current")
_SetIproRipIprGat_Type = IpAddress
_SetIproRipIprGat_Object = MibTableColumn
setIproRipIprGat = _SetIproRipIprGat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 5),
    _SetIproRipIprGat_Type()
)
setIproRipIprGat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprGat.setStatus("current")


class _SetIproRipIprRtg_Type(Integer32):
    """Custom type setIproRipIprRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproRipIprRtg_Type.__name__ = "Integer32"
_SetIproRipIprRtg_Object = MibTableColumn
setIproRipIprRtg = _SetIproRipIprRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 6),
    _SetIproRipIprRtg_Type()
)
setIproRipIprRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprRtg.setStatus("current")


class _SetIproRipIprPee_Type(DisplayString):
    """Custom type setIproRipIprPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipIprPee_Type.__name__ = "DisplayString"
_SetIproRipIprPee_Object = MibTableColumn
setIproRipIprPee = _SetIproRipIprPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 8),
    _SetIproRipIprPee_Type()
)
setIproRipIprPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprPee.setStatus("current")


class _SetIproRipIprPor_Type(Integer32):
    """Custom type setIproRipIprPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_SetIproRipIprPor_Type.__name__ = "Integer32"
_SetIproRipIprPor_Object = MibTableColumn
setIproRipIprPor = _SetIproRipIprPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 9),
    _SetIproRipIprPor_Type()
)
setIproRipIprPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprPor.setStatus("current")


class _SetIproRipIprVla_Type(Integer32):
    """Custom type setIproRipIprVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproRipIprVla_Type.__name__ = "Integer32"
_SetIproRipIprVla_Object = MibTableColumn
setIproRipIprVla = _SetIproRipIprVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 10),
    _SetIproRipIprVla_Type()
)
setIproRipIprVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprVla.setStatus("current")


class _SetIproRipIprNet_Type(DisplayString):
    """Custom type setIproRipIprNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipIprNet_Type.__name__ = "DisplayString"
_SetIproRipIprNet_Object = MibTableColumn
setIproRipIprNet = _SetIproRipIprNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 3, 1, 11),
    _SetIproRipIprNet_Type()
)
setIproRipIprNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproRipIprNet.setStatus("current")
_SetIproRipWanTable_Object = MibTable
setIproRipWanTable = _SetIproRipWanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4)
)
if mibBuilder.loadTexts:
    setIproRipWanTable.setStatus("current")
_SetIproRipWanEntry_Object = MibTableRow
setIproRipWanEntry = _SetIproRipWanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1)
)
setIproRipWanEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproRipWanPeer"),
)
if mibBuilder.loadTexts:
    setIproRipWanEntry.setStatus("current")


class _SetIproRipWanPeer_Type(DisplayString):
    """Custom type setIproRipWanPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipWanPeer_Type.__name__ = "DisplayString"
_SetIproRipWanPeer_Object = MibTableColumn
setIproRipWanPeer = _SetIproRipWanPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 1),
    _SetIproRipWanPeer_Type()
)
setIproRipWanPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanPeer.setStatus("current")


class _SetIproRipWanRipt_Type(Integer32):
    """Custom type setIproRipWanRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_SetIproRipWanRipt_Type.__name__ = "Integer32"
_SetIproRipWanRipt_Object = MibTableColumn
setIproRipWanRipt = _SetIproRipWanRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 2),
    _SetIproRipWanRipt_Type()
)
setIproRipWanRipt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanRipt.setStatus("current")


class _SetIproRipWanRipa_Type(Integer32):
    """Custom type setIproRipWanRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipWanRipa_Type.__name__ = "Integer32"
_SetIproRipWanRipa_Object = MibTableColumn
setIproRipWanRipa = _SetIproRipWanRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 3),
    _SetIproRipWanRipa_Type()
)
setIproRipWanRipa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanRipa.setStatus("current")


class _SetIproRipWanMasq_Type(Integer32):
    """Custom type setIproRipWanMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_SetIproRipWanMasq_Type.__name__ = "Integer32"
_SetIproRipWanMasq_Object = MibTableColumn
setIproRipWanMasq = _SetIproRipWanMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 4),
    _SetIproRipWanMasq_Type()
)
setIproRipWanMasq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanMasq.setStatus("current")


class _SetIproRipWanDftr_Type(Integer32):
    """Custom type setIproRipWanDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproRipWanDftr_Type.__name__ = "Integer32"
_SetIproRipWanDftr_Object = MibTableColumn
setIproRipWanDftr = _SetIproRipWanDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 5),
    _SetIproRipWanDftr_Type()
)
setIproRipWanDftr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanDftr.setStatus("current")


class _SetIproRipWanRtgt_Type(DisplayString):
    """Custom type setIproRipWanRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_SetIproRipWanRtgt_Type.__name__ = "DisplayString"
_SetIproRipWanRtgt_Object = MibTableColumn
setIproRipWanRtgt = _SetIproRipWanRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 6),
    _SetIproRipWanRtgt_Type()
)
setIproRipWanRtgt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanRtgt.setStatus("current")


class _SetIproRipWanPois_Type(Integer32):
    """Custom type setIproRipWanPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipWanPois_Type.__name__ = "Integer32"
_SetIproRipWanPois_Object = MibTableColumn
setIproRipWanPois = _SetIproRipWanPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 7),
    _SetIproRipWanPois_Type()
)
setIproRipWanPois.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanPois.setStatus("current")


class _SetIproRipWanRfc2_Type(Integer32):
    """Custom type setIproRipWanRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipWanRfc2_Type.__name__ = "Integer32"
_SetIproRipWanRfc2_Object = MibTableColumn
setIproRipWanRfc2 = _SetIproRipWanRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 8),
    _SetIproRipWanRfc2_Type()
)
setIproRipWanRfc2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanRfc2.setStatus("current")
_SetIproRipWanGate_Type = IpAddress
_SetIproRipWanGate_Object = MibTableColumn
setIproRipWanGate = _SetIproRipWanGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 9),
    _SetIproRipWanGate_Type()
)
setIproRipWanGate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanGate.setStatus("current")


class _SetIproRipWanRxfi_Type(DisplayString):
    """Custom type setIproRipWanRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipWanRxfi_Type.__name__ = "DisplayString"
_SetIproRipWanRxfi_Object = MibTableColumn
setIproRipWanRxfi = _SetIproRipWanRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 10),
    _SetIproRipWanRxfi_Type()
)
setIproRipWanRxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanRxfi.setStatus("current")


class _SetIproRipWanTxfi_Type(DisplayString):
    """Custom type setIproRipWanTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipWanTxfi_Type.__name__ = "DisplayString"
_SetIproRipWanTxfi_Object = MibTableColumn
setIproRipWanTxfi = _SetIproRipWanTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 11),
    _SetIproRipWanTxfi_Type()
)
setIproRipWanTxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanTxfi.setStatus("current")


class _SetIproRipWanRips_Type(Integer32):
    """Custom type setIproRipWanRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipWanRips_Type.__name__ = "Integer32"
_SetIproRipWanRips_Object = MibTableColumn
setIproRipWanRips = _SetIproRipWanRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 4, 1, 12),
    _SetIproRipWanRips_Type()
)
setIproRipWanRips.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipWanRips.setStatus("current")
_SetIproRipLanTable_Object = MibTable
setIproRipLanTable = _SetIproRipLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5)
)
if mibBuilder.loadTexts:
    setIproRipLanTable.setStatus("current")
_SetIproRipLanEntry_Object = MibTableRow
setIproRipLanEntry = _SetIproRipLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1)
)
setIproRipLanEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproRipLanNetw"),
)
if mibBuilder.loadTexts:
    setIproRipLanEntry.setStatus("current")


class _SetIproRipLanNetw_Type(DisplayString):
    """Custom type setIproRipLanNetw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipLanNetw_Type.__name__ = "DisplayString"
_SetIproRipLanNetw_Object = MibTableColumn
setIproRipLanNetw = _SetIproRipLanNetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 1),
    _SetIproRipLanNetw_Type()
)
setIproRipLanNetw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanNetw.setStatus("current")


class _SetIproRipLanRipt_Type(Integer32):
    """Custom type setIproRipLanRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_SetIproRipLanRipt_Type.__name__ = "Integer32"
_SetIproRipLanRipt_Object = MibTableColumn
setIproRipLanRipt = _SetIproRipLanRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 2),
    _SetIproRipLanRipt_Type()
)
setIproRipLanRipt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanRipt.setStatus("current")


class _SetIproRipLanRipa_Type(Integer32):
    """Custom type setIproRipLanRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipLanRipa_Type.__name__ = "Integer32"
_SetIproRipLanRipa_Object = MibTableColumn
setIproRipLanRipa = _SetIproRipLanRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 3),
    _SetIproRipLanRipa_Type()
)
setIproRipLanRipa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanRipa.setStatus("current")


class _SetIproRipLanProp_Type(Integer32):
    """Custom type setIproRipLanProp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipLanProp_Type.__name__ = "Integer32"
_SetIproRipLanProp_Object = MibTableColumn
setIproRipLanProp = _SetIproRipLanProp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 4),
    _SetIproRipLanProp_Type()
)
setIproRipLanProp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanProp.setStatus("current")


class _SetIproRipLanDftr_Type(Integer32):
    """Custom type setIproRipLanDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproRipLanDftr_Type.__name__ = "Integer32"
_SetIproRipLanDftr_Object = MibTableColumn
setIproRipLanDftr = _SetIproRipLanDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 5),
    _SetIproRipLanDftr_Type()
)
setIproRipLanDftr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanDftr.setStatus("current")


class _SetIproRipLanRtgt_Type(DisplayString):
    """Custom type setIproRipLanRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_SetIproRipLanRtgt_Type.__name__ = "DisplayString"
_SetIproRipLanRtgt_Object = MibTableColumn
setIproRipLanRtgt = _SetIproRipLanRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 6),
    _SetIproRipLanRtgt_Type()
)
setIproRipLanRtgt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanRtgt.setStatus("current")


class _SetIproRipLanPois_Type(Integer32):
    """Custom type setIproRipLanPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipLanPois_Type.__name__ = "Integer32"
_SetIproRipLanPois_Object = MibTableColumn
setIproRipLanPois = _SetIproRipLanPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 7),
    _SetIproRipLanPois_Type()
)
setIproRipLanPois.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanPois.setStatus("current")


class _SetIproRipLanRxfi_Type(DisplayString):
    """Custom type setIproRipLanRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipLanRxfi_Type.__name__ = "DisplayString"
_SetIproRipLanRxfi_Object = MibTableColumn
setIproRipLanRxfi = _SetIproRipLanRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 10),
    _SetIproRipLanRxfi_Type()
)
setIproRipLanRxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanRxfi.setStatus("current")


class _SetIproRipLanTxfi_Type(DisplayString):
    """Custom type setIproRipLanTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproRipLanTxfi_Type.__name__ = "DisplayString"
_SetIproRipLanTxfi_Object = MibTableColumn
setIproRipLanTxfi = _SetIproRipLanTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 11),
    _SetIproRipLanTxfi_Type()
)
setIproRipLanTxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanTxfi.setStatus("current")


class _SetIproRipLanRips_Type(Integer32):
    """Custom type setIproRipLanRips based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproRipLanRips_Type.__name__ = "Integer32"
_SetIproRipLanRips_Object = MibTableColumn
setIproRipLanRips = _SetIproRipLanRips_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 5, 1, 12),
    _SetIproRipLanRips_Type()
)
setIproRipLanRips.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipLanRips.setStatus("current")
_SetIproRipPar_ObjectIdentity = ObjectIdentity
setIproRipPar = _SetIproRipPar_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6)
)
_SetIproRipParUpda_Type = Integer32
_SetIproRipParUpda_Object = MibScalar
setIproRipParUpda = _SetIproRipParUpda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 1),
    _SetIproRipParUpda_Type()
)
setIproRipParUpda.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParUpda.setStatus("current")
_SetIproRipParHold_Type = Integer32
_SetIproRipParHold_Object = MibScalar
setIproRipParHold = _SetIproRipParHold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 2),
    _SetIproRipParHold_Type()
)
setIproRipParHold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParHold.setStatus("current")
_SetIproRipParInva_Type = Integer32
_SetIproRipParInva_Object = MibScalar
setIproRipParInva = _SetIproRipParInva_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 3),
    _SetIproRipParInva_Type()
)
setIproRipParInva.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParInva.setStatus("current")
_SetIproRipParFlus_Type = Integer32
_SetIproRipParFlus_Object = MibScalar
setIproRipParFlus = _SetIproRipParFlus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 4),
    _SetIproRipParFlus_Type()
)
setIproRipParFlus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParFlus.setStatus("current")
_SetIproRipParUpdd_Type = Integer32
_SetIproRipParUpdd_Object = MibScalar
setIproRipParUpdd = _SetIproRipParUpdd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 5),
    _SetIproRipParUpdd_Type()
)
setIproRipParUpdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParUpdd.setStatus("current")
_SetIproRipParMaxh_Type = Integer32
_SetIproRipParMaxh_Object = MibScalar
setIproRipParMaxh = _SetIproRipParMaxh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 6),
    _SetIproRipParMaxh_Type()
)
setIproRipParMaxh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParMaxh.setStatus("current")
_SetIproRipParRout_Type = Integer32
_SetIproRipParRout_Object = MibScalar
setIproRipParRout = _SetIproRipParRout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 6, 7),
    _SetIproRipParRout_Type()
)
setIproRipParRout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipParRout.setStatus("current")
_SetIproRipFilTable_Object = MibTable
setIproRipFilTable = _SetIproRipFilTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7)
)
if mibBuilder.loadTexts:
    setIproRipFilTable.setStatus("current")
_SetIproRipFilEntry_Object = MibTableRow
setIproRipFilEntry = _SetIproRipFilEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1)
)
setIproRipFilEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproRipFilNam"),
)
if mibBuilder.loadTexts:
    setIproRipFilEntry.setStatus("current")


class _SetIproRipFilNam_Type(DisplayString):
    """Custom type setIproRipFilNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetIproRipFilNam_Type.__name__ = "DisplayString"
_SetIproRipFilNam_Object = MibTableColumn
setIproRipFilNam = _SetIproRipFilNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1, 1),
    _SetIproRipFilNam_Type()
)
setIproRipFilNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipFilNam.setStatus("current")


class _SetIproRipFilFil_Type(DisplayString):
    """Custom type setIproRipFilFil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIproRipFilFil_Type.__name__ = "DisplayString"
_SetIproRipFilFil_Object = MibTableColumn
setIproRipFilFil = _SetIproRipFilFil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 8, 7, 1, 2),
    _SetIproRipFilFil_Type()
)
setIproRipFilFil.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproRipFilFil.setStatus("current")
_SetIpro1nn_ObjectIdentity = ObjectIdentity
setIpro1nn = _SetIpro1nn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9)
)
_SetIpro1nnTcpagings_Type = Integer32
_SetIpro1nnTcpagings_Object = MibScalar
setIpro1nnTcpagings = _SetIpro1nnTcpagings_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 1),
    _SetIpro1nnTcpagings_Type()
)
setIpro1nnTcpagings.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnTcpagings.setStatus("current")
_SetIpro1nnUdpagings_Type = Integer32
_SetIpro1nnUdpagings_Object = MibScalar
setIpro1nnUdpagings = _SetIpro1nnUdpagings_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 2),
    _SetIpro1nnUdpagings_Type()
)
setIpro1nnUdpagings.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnUdpagings.setStatus("current")
_SetIpro1nnIcmpaging_Type = Integer32
_SetIpro1nnIcmpaging_Object = MibScalar
setIpro1nnIcmpaging = _SetIpro1nnIcmpaging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 3),
    _SetIpro1nnIcmpaging_Type()
)
setIpro1nnIcmpaging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnIcmpaging.setStatus("current")
_SetIpro1nnServicetaTable_Object = MibTable
setIpro1nnServicetaTable = _SetIpro1nnServicetaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4)
)
if mibBuilder.loadTexts:
    setIpro1nnServicetaTable.setStatus("current")
_SetIpro1nnServicetaEntry_Object = MibTableRow
setIpro1nnServicetaEntry = _SetIpro1nnServicetaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1)
)
setIpro1nnServicetaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIpro1nnServicetaDportf"),
    (0, "LANCOM-1711-MIB", "setIpro1nnServicetaDportt"),
    (0, "LANCOM-1711-MIB", "setIpro1nnServicetaProtoc"),
    (0, "LANCOM-1711-MIB", "setIpro1nnServicetaPeer"),
    (0, "LANCOM-1711-MIB", "setIpro1nnServicetaWanadd"),
)
if mibBuilder.loadTexts:
    setIpro1nnServicetaEntry.setStatus("current")


class _SetIpro1nnServicetaDportf_Type(Integer32):
    """Custom type setIpro1nnServicetaDportf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIpro1nnServicetaDportf_Type.__name__ = "Integer32"
_SetIpro1nnServicetaDportf_Object = MibTableColumn
setIpro1nnServicetaDportf = _SetIpro1nnServicetaDportf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 1),
    _SetIpro1nnServicetaDportf_Type()
)
setIpro1nnServicetaDportf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaDportf.setStatus("current")
_SetIpro1nnServicetaIntran_Type = IpAddress
_SetIpro1nnServicetaIntran_Object = MibTableColumn
setIpro1nnServicetaIntran = _SetIpro1nnServicetaIntran_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 2),
    _SetIpro1nnServicetaIntran_Type()
)
setIpro1nnServicetaIntran.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaIntran.setStatus("current")


class _SetIpro1nnServicetaDportt_Type(Integer32):
    """Custom type setIpro1nnServicetaDportt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIpro1nnServicetaDportt_Type.__name__ = "Integer32"
_SetIpro1nnServicetaDportt_Object = MibTableColumn
setIpro1nnServicetaDportt = _SetIpro1nnServicetaDportt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 3),
    _SetIpro1nnServicetaDportt_Type()
)
setIpro1nnServicetaDportt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaDportt.setStatus("current")


class _SetIpro1nnServicetaMappor_Type(Integer32):
    """Custom type setIpro1nnServicetaMappor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIpro1nnServicetaMappor_Type.__name__ = "Integer32"
_SetIpro1nnServicetaMappor_Object = MibTableColumn
setIpro1nnServicetaMappor = _SetIpro1nnServicetaMappor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 4),
    _SetIpro1nnServicetaMappor_Type()
)
setIpro1nnServicetaMappor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaMappor.setStatus("current")


class _SetIpro1nnServicetaActive_Type(Integer32):
    """Custom type setIpro1nnServicetaActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIpro1nnServicetaActive_Type.__name__ = "Integer32"
_SetIpro1nnServicetaActive_Object = MibTableColumn
setIpro1nnServicetaActive = _SetIpro1nnServicetaActive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 5),
    _SetIpro1nnServicetaActive_Type()
)
setIpro1nnServicetaActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaActive.setStatus("current")


class _SetIpro1nnServicetaCommen_Type(DisplayString):
    """Custom type setIpro1nnServicetaCommen based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIpro1nnServicetaCommen_Type.__name__ = "DisplayString"
_SetIpro1nnServicetaCommen_Object = MibTableColumn
setIpro1nnServicetaCommen = _SetIpro1nnServicetaCommen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 6),
    _SetIpro1nnServicetaCommen_Type()
)
setIpro1nnServicetaCommen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaCommen.setStatus("current")


class _SetIpro1nnServicetaPeer_Type(DisplayString):
    """Custom type setIpro1nnServicetaPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIpro1nnServicetaPeer_Type.__name__ = "DisplayString"
_SetIpro1nnServicetaPeer_Object = MibTableColumn
setIpro1nnServicetaPeer = _SetIpro1nnServicetaPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 7),
    _SetIpro1nnServicetaPeer_Type()
)
setIpro1nnServicetaPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaPeer.setStatus("current")


class _SetIpro1nnServicetaProtoc_Type(Integer32):
    """Custom type setIpro1nnServicetaProtoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tcp", 1),
          ("tcp-plus-udp", 0),
          ("udp", 2))
    )


_SetIpro1nnServicetaProtoc_Type.__name__ = "Integer32"
_SetIpro1nnServicetaProtoc_Object = MibTableColumn
setIpro1nnServicetaProtoc = _SetIpro1nnServicetaProtoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 8),
    _SetIpro1nnServicetaProtoc_Type()
)
setIpro1nnServicetaProtoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaProtoc.setStatus("current")
_SetIpro1nnServicetaWanadd_Type = IpAddress
_SetIpro1nnServicetaWanadd_Object = MibTableColumn
setIpro1nnServicetaWanadd = _SetIpro1nnServicetaWanadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 4, 1, 9),
    _SetIpro1nnServicetaWanadd_Type()
)
setIpro1nnServicetaWanadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnServicetaWanadd.setStatus("current")
_SetIpro1nnTable1nnaTable_Object = MibTable
setIpro1nnTable1nnaTable = _SetIpro1nnTable1nnaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5)
)
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaTable.setStatus("current")
_SetIpro1nnTable1nnaEntry_Object = MibTableRow
setIpro1nnTable1nnaEntry = _SetIpro1nnTable1nnaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1)
)
setIpro1nnTable1nnaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIpro1nnTable1nnaInt"),
)
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaEntry.setStatus("current")
_SetIpro1nnTable1nnaInt_Type = IpAddress
_SetIpro1nnTable1nnaInt_Object = MibTableColumn
setIpro1nnTable1nnaInt = _SetIpro1nnTable1nnaInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 1),
    _SetIpro1nnTable1nnaInt_Type()
)
setIpro1nnTable1nnaInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaInt.setStatus("current")


class _SetIpro1nnTable1nnaSou_Type(Integer32):
    """Custom type setIpro1nnTable1nnaSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIpro1nnTable1nnaSou_Type.__name__ = "Integer32"
_SetIpro1nnTable1nnaSou_Object = MibTableColumn
setIpro1nnTable1nnaSou = _SetIpro1nnTable1nnaSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 2),
    _SetIpro1nnTable1nnaSou_Type()
)
setIpro1nnTable1nnaSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaSou.setStatus("current")


class _SetIpro1nnTable1nnaPro_Type(Integer32):
    """Custom type setIpro1nnTable1nnaPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              6,
              17)
        )
    )
    namedValues = NamedValues(
        *(("icmp", 1),
          ("tcp", 6),
          ("udp", 17))
    )


_SetIpro1nnTable1nnaPro_Type.__name__ = "Integer32"
_SetIpro1nnTable1nnaPro_Object = MibTableColumn
setIpro1nnTable1nnaPro = _SetIpro1nnTable1nnaPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 3),
    _SetIpro1nnTable1nnaPro_Type()
)
setIpro1nnTable1nnaPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaPro.setStatus("current")


class _SetIpro1nnTable1nnaTim_Type(Integer32):
    """Custom type setIpro1nnTable1nnaTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIpro1nnTable1nnaTim_Type.__name__ = "Integer32"
_SetIpro1nnTable1nnaTim_Object = MibTableColumn
setIpro1nnTable1nnaTim = _SetIpro1nnTable1nnaTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 4),
    _SetIpro1nnTable1nnaTim_Type()
)
setIpro1nnTable1nnaTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaTim.setStatus("current")


class _SetIpro1nnTable1nnaHan_Type(DisplayString):
    """Custom type setIpro1nnTable1nnaHan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIpro1nnTable1nnaHan_Type.__name__ = "DisplayString"
_SetIpro1nnTable1nnaHan_Object = MibTableColumn
setIpro1nnTable1nnaHan = _SetIpro1nnTable1nnaHan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 5),
    _SetIpro1nnTable1nnaHan_Type()
)
setIpro1nnTable1nnaHan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaHan.setStatus("current")
_SetIpro1nnTable1nnaRem_Type = IpAddress
_SetIpro1nnTable1nnaRem_Object = MibTableColumn
setIpro1nnTable1nnaRem = _SetIpro1nnTable1nnaRem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 5, 1, 6),
    _SetIpro1nnTable1nnaRem_Type()
)
setIpro1nnTable1nnaRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnTable1nnaRem.setStatus("current")


class _SetIpro1nnFragments_Type(Integer32):
    """Custom type setIpro1nnFragments based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("filter", 0),
          ("reassemble", 2),
          ("route", 1))
    )


_SetIpro1nnFragments_Type.__name__ = "Integer32"
_SetIpro1nnFragments_Object = MibScalar
setIpro1nnFragments = _SetIpro1nnFragments_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 6),
    _SetIpro1nnFragments_Type()
)
setIpro1nnFragments.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnFragments.setStatus("current")
_SetIpro1nnFragmenta_Type = Integer32
_SetIpro1nnFragmenta_Object = MibScalar
setIpro1nnFragmenta = _SetIpro1nnFragmenta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 7),
    _SetIpro1nnFragmenta_Type()
)
setIpro1nnFragmenta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnFragmenta.setStatus("current")
_SetIpro1nnIpsecagin_Type = Integer32
_SetIpro1nnIpsecagin_Object = MibScalar
setIpro1nnIpsecagin = _SetIpro1nnIpsecagin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 8),
    _SetIpro1nnIpsecagin_Type()
)
setIpro1nnIpsecagin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnIpsecagin.setStatus("current")
_SetIpro1nnIpsectablTable_Object = MibTable
setIpro1nnIpsectablTable = _SetIpro1nnIpsectablTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9)
)
if mibBuilder.loadTexts:
    setIpro1nnIpsectablTable.setStatus("current")
_SetIpro1nnIpsectablEntry_Object = MibTableRow
setIpro1nnIpsectablEntry = _SetIpro1nnIpsectablEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1)
)
setIpro1nnIpsectablEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIpro1nnIpsectablRemotea"),
)
if mibBuilder.loadTexts:
    setIpro1nnIpsectablEntry.setStatus("current")
_SetIpro1nnIpsectablRemotea_Type = IpAddress
_SetIpro1nnIpsectablRemotea_Object = MibTableColumn
setIpro1nnIpsectablRemotea = _SetIpro1nnIpsectablRemotea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 1),
    _SetIpro1nnIpsectablRemotea_Type()
)
setIpro1nnIpsectablRemotea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablRemotea.setStatus("current")
_SetIpro1nnIpsectablLocalad_Type = IpAddress
_SetIpro1nnIpsectablLocalad_Object = MibTableColumn
setIpro1nnIpsectablLocalad = _SetIpro1nnIpsectablLocalad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 2),
    _SetIpro1nnIpsectablLocalad_Type()
)
setIpro1nnIpsectablLocalad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablLocalad.setStatus("current")


class _SetIpro1nnIpsectablRchi_Type(DisplayString):
    """Custom type setIpro1nnIpsectablRchi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIpro1nnIpsectablRchi_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablRchi_Object = MibTableColumn
setIpro1nnIpsectablRchi = _SetIpro1nnIpsectablRchi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 3),
    _SetIpro1nnIpsectablRchi_Type()
)
setIpro1nnIpsectablRchi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablRchi.setStatus("current")


class _SetIpro1nnIpsectablRclo_Type(DisplayString):
    """Custom type setIpro1nnIpsectablRclo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIpro1nnIpsectablRclo_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablRclo_Object = MibTableColumn
setIpro1nnIpsectablRclo = _SetIpro1nnIpsectablRclo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 4),
    _SetIpro1nnIpsectablRclo_Type()
)
setIpro1nnIpsectablRclo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablRclo.setStatus("current")


class _SetIpro1nnIpsectablLchi_Type(DisplayString):
    """Custom type setIpro1nnIpsectablLchi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIpro1nnIpsectablLchi_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablLchi_Object = MibTableColumn
setIpro1nnIpsectablLchi = _SetIpro1nnIpsectablLchi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 5),
    _SetIpro1nnIpsectablLchi_Type()
)
setIpro1nnIpsectablLchi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablLchi.setStatus("current")


class _SetIpro1nnIpsectablLclo_Type(DisplayString):
    """Custom type setIpro1nnIpsectablLclo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIpro1nnIpsectablLclo_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablLclo_Object = MibTableColumn
setIpro1nnIpsectablLclo = _SetIpro1nnIpsectablLclo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 6),
    _SetIpro1nnIpsectablLclo_Type()
)
setIpro1nnIpsectablLclo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablLclo.setStatus("current")


class _SetIpro1nnIpsectablRemotes_Type(DisplayString):
    """Custom type setIpro1nnIpsectablRemotes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIpro1nnIpsectablRemotes_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablRemotes_Object = MibTableColumn
setIpro1nnIpsectablRemotes = _SetIpro1nnIpsectablRemotes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 7),
    _SetIpro1nnIpsectablRemotes_Type()
)
setIpro1nnIpsectablRemotes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablRemotes.setStatus("current")


class _SetIpro1nnIpsectablLocalsp_Type(DisplayString):
    """Custom type setIpro1nnIpsectablLocalsp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIpro1nnIpsectablLocalsp_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablLocalsp_Object = MibTableColumn
setIpro1nnIpsectablLocalsp = _SetIpro1nnIpsectablLocalsp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 8),
    _SetIpro1nnIpsectablLocalsp_Type()
)
setIpro1nnIpsectablLocalsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablLocalsp.setStatus("current")


class _SetIpro1nnIpsectablTimeout_Type(Integer32):
    """Custom type setIpro1nnIpsectablTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIpro1nnIpsectablTimeout_Type.__name__ = "Integer32"
_SetIpro1nnIpsectablTimeout_Object = MibTableColumn
setIpro1nnIpsectablTimeout = _SetIpro1nnIpsectablTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 9),
    _SetIpro1nnIpsectablTimeout_Type()
)
setIpro1nnIpsectablTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablTimeout.setStatus("current")


class _SetIpro1nnIpsectablFlags_Type(DisplayString):
    """Custom type setIpro1nnIpsectablFlags based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetIpro1nnIpsectablFlags_Type.__name__ = "DisplayString"
_SetIpro1nnIpsectablFlags_Object = MibTableColumn
setIpro1nnIpsectablFlags = _SetIpro1nnIpsectablFlags_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 10),
    _SetIpro1nnIpsectablFlags_Type()
)
setIpro1nnIpsectablFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablFlags.setStatus("current")


class _SetIpro1nnIpsectablCo_Type(Integer32):
    """Custom type setIpro1nnIpsectablCo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIpro1nnIpsectablCo_Type.__name__ = "Integer32"
_SetIpro1nnIpsectablCo_Object = MibTableColumn
setIpro1nnIpsectablCo = _SetIpro1nnIpsectablCo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 11),
    _SetIpro1nnIpsectablCo_Type()
)
setIpro1nnIpsectablCo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablCo.setStatus("current")


class _SetIpro1nnIpsectablNl_Type(Integer32):
    """Custom type setIpro1nnIpsectablNl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIpro1nnIpsectablNl_Type.__name__ = "Integer32"
_SetIpro1nnIpsectablNl_Object = MibTableColumn
setIpro1nnIpsectablNl = _SetIpro1nnIpsectablNl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 12),
    _SetIpro1nnIpsectablNl_Type()
)
setIpro1nnIpsectablNl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablNl.setStatus("current")


class _SetIpro1nnIpsectablNr_Type(Integer32):
    """Custom type setIpro1nnIpsectablNr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIpro1nnIpsectablNr_Type.__name__ = "Integer32"
_SetIpro1nnIpsectablNr_Object = MibTableColumn
setIpro1nnIpsectablNr = _SetIpro1nnIpsectablNr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 13),
    _SetIpro1nnIpsectablNr_Type()
)
setIpro1nnIpsectablNr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablNr.setStatus("current")


class _SetIpro1nnIpsectablDp_Type(Integer32):
    """Custom type setIpro1nnIpsectablDp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIpro1nnIpsectablDp_Type.__name__ = "Integer32"
_SetIpro1nnIpsectablDp_Object = MibTableColumn
setIpro1nnIpsectablDp = _SetIpro1nnIpsectablDp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 9, 1, 14),
    _SetIpro1nnIpsectablDp_Type()
)
setIpro1nnIpsectablDp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIpro1nnIpsectablDp.setStatus("current")


class _SetIpro1nnIdspoofin_Type(Integer32):
    """Custom type setIpro1nnIdspoofin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIpro1nnIdspoofin_Type.__name__ = "Integer32"
_SetIpro1nnIdspoofin_Object = MibScalar
setIpro1nnIdspoofin = _SetIpro1nnIdspoofin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 9, 10),
    _SetIpro1nnIdspoofin_Type()
)
setIpro1nnIdspoofin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIpro1nnIdspoofin.setStatus("current")
_SetIproFir_ObjectIdentity = ObjectIdentity
setIproFir = _SetIproFir_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10)
)
_SetIproFirObjecTable_Object = MibTable
setIproFirObjecTable = _SetIproFirObjecTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1)
)
if mibBuilder.loadTexts:
    setIproFirObjecTable.setStatus("current")
_SetIproFirObjecEntry_Object = MibTableRow
setIproFirObjecEntry = _SetIproFirObjecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1)
)
setIproFirObjecEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirObjecNam"),
)
if mibBuilder.loadTexts:
    setIproFirObjecEntry.setStatus("current")


class _SetIproFirObjecNam_Type(DisplayString):
    """Custom type setIproFirObjecNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIproFirObjecNam_Type.__name__ = "DisplayString"
_SetIproFirObjecNam_Object = MibTableColumn
setIproFirObjecNam = _SetIproFirObjecNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1, 1),
    _SetIproFirObjecNam_Type()
)
setIproFirObjecNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirObjecNam.setStatus("current")


class _SetIproFirObjecDes_Type(DisplayString):
    """Custom type setIproFirObjecDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIproFirObjecDes_Type.__name__ = "DisplayString"
_SetIproFirObjecDes_Object = MibTableColumn
setIproFirObjecDes = _SetIproFirObjecDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 1, 1, 2),
    _SetIproFirObjecDes_Type()
)
setIproFirObjecDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirObjecDes.setStatus("current")
_SetIproFirRulesTable_Object = MibTable
setIproFirRulesTable = _SetIproFirRulesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2)
)
if mibBuilder.loadTexts:
    setIproFirRulesTable.setStatus("current")
_SetIproFirRulesEntry_Object = MibTableRow
setIproFirRulesEntry = _SetIproFirRulesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1)
)
setIproFirRulesEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirRulesNam"),
)
if mibBuilder.loadTexts:
    setIproFirRulesEntry.setStatus("current")


class _SetIproFirRulesNam_Type(DisplayString):
    """Custom type setIproFirRulesNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIproFirRulesNam_Type.__name__ = "DisplayString"
_SetIproFirRulesNam_Object = MibTableColumn
setIproFirRulesNam = _SetIproFirRulesNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 1),
    _SetIproFirRulesNam_Type()
)
setIproFirRulesNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesNam.setStatus("current")


class _SetIproFirRulesPro_Type(DisplayString):
    """Custom type setIproFirRulesPro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_SetIproFirRulesPro_Type.__name__ = "DisplayString"
_SetIproFirRulesPro_Object = MibTableColumn
setIproFirRulesPro = _SetIproFirRulesPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 2),
    _SetIproFirRulesPro_Type()
)
setIproFirRulesPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesPro.setStatus("current")


class _SetIproFirRulesSou_Type(DisplayString):
    """Custom type setIproFirRulesSou based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetIproFirRulesSou_Type.__name__ = "DisplayString"
_SetIproFirRulesSou_Object = MibTableColumn
setIproFirRulesSou = _SetIproFirRulesSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 3),
    _SetIproFirRulesSou_Type()
)
setIproFirRulesSou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesSou.setStatus("current")


class _SetIproFirRulesDes_Type(DisplayString):
    """Custom type setIproFirRulesDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetIproFirRulesDes_Type.__name__ = "DisplayString"
_SetIproFirRulesDes_Object = MibTableColumn
setIproFirRulesDes = _SetIproFirRulesDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 4),
    _SetIproFirRulesDes_Type()
)
setIproFirRulesDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesDes.setStatus("current")


class _SetIproFirRulesAct_Type(DisplayString):
    """Custom type setIproFirRulesAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetIproFirRulesAct_Type.__name__ = "DisplayString"
_SetIproFirRulesAct_Object = MibTableColumn
setIproFirRulesAct = _SetIproFirRulesAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 7),
    _SetIproFirRulesAct_Type()
)
setIproFirRulesAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesAct.setStatus("current")


class _SetIproFirRulesLin_Type(Integer32):
    """Custom type setIproFirRulesLin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproFirRulesLin_Type.__name__ = "Integer32"
_SetIproFirRulesLin_Object = MibTableColumn
setIproFirRulesLin = _SetIproFirRulesLin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 8),
    _SetIproFirRulesLin_Type()
)
setIproFirRulesLin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesLin.setStatus("current")


class _SetIproFirRulesPri_Type(Integer32):
    """Custom type setIproFirRulesPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirRulesPri_Type.__name__ = "Integer32"
_SetIproFirRulesPri_Object = MibTableColumn
setIproFirRulesPri = _SetIproFirRulesPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 9),
    _SetIproFirRulesPri_Type()
)
setIproFirRulesPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesPri.setStatus("current")


class _SetIproFirRulesFir_Type(Integer32):
    """Custom type setIproFirRulesFir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIproFirRulesFir_Type.__name__ = "Integer32"
_SetIproFirRulesFir_Object = MibTableColumn
setIproFirRulesFir = _SetIproFirRulesFir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 10),
    _SetIproFirRulesFir_Type()
)
setIproFirRulesFir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesFir.setStatus("current")


class _SetIproFirRulesVpn_Type(Integer32):
    """Custom type setIproFirRulesVpn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproFirRulesVpn_Type.__name__ = "Integer32"
_SetIproFirRulesVpn_Object = MibTableColumn
setIproFirRulesVpn = _SetIproFirRulesVpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 11),
    _SetIproFirRulesVpn_Type()
)
setIproFirRulesVpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesVpn.setStatus("current")


class _SetIproFirRulesSta_Type(Integer32):
    """Custom type setIproFirRulesSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIproFirRulesSta_Type.__name__ = "Integer32"
_SetIproFirRulesSta_Object = MibTableColumn
setIproFirRulesSta = _SetIproFirRulesSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 12),
    _SetIproFirRulesSta_Type()
)
setIproFirRulesSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesSta.setStatus("current")


class _SetIproFirRulesCom_Type(DisplayString):
    """Custom type setIproFirRulesCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIproFirRulesCom_Type.__name__ = "DisplayString"
_SetIproFirRulesCom_Object = MibTableColumn
setIproFirRulesCom = _SetIproFirRulesCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 13),
    _SetIproFirRulesCom_Type()
)
setIproFirRulesCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesCom.setStatus("current")


class _SetIproFirRulesRtg_Type(Integer32):
    """Custom type setIproFirRulesRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirRulesRtg_Type.__name__ = "Integer32"
_SetIproFirRulesRtg_Object = MibTableColumn
setIproFirRulesRtg = _SetIproFirRulesRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 2, 1, 14),
    _SetIproFirRulesRtg_Type()
)
setIproFirRulesRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirRulesRtg.setStatus("current")
_SetIproFirFilteTable_Object = MibTable
setIproFirFilteTable = _SetIproFirFilteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3)
)
if mibBuilder.loadTexts:
    setIproFirFilteTable.setStatus("current")
_SetIproFirFilteEntry_Object = MibTableRow
setIproFirFilteEntry = _SetIproFirFilteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1)
)
setIproFirFilteEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirFilteIdx"),
)
if mibBuilder.loadTexts:
    setIproFirFilteEntry.setStatus("current")


class _SetIproFirFilteIdx_Type(Integer32):
    """Custom type setIproFirFilteIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFilteIdx_Type.__name__ = "Integer32"
_SetIproFirFilteIdx_Object = MibTableColumn
setIproFirFilteIdx = _SetIproFirFilteIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 1),
    _SetIproFirFilteIdx_Type()
)
setIproFirFilteIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteIdx.setStatus("current")


class _SetIproFirFilteProt_Type(Integer32):
    """Custom type setIproFirFilteProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproFirFilteProt_Type.__name__ = "Integer32"
_SetIproFirFilteProt_Object = MibTableColumn
setIproFirFilteProt = _SetIproFirFilteProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 2),
    _SetIproFirFilteProt_Type()
)
setIproFirFilteProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteProt.setStatus("current")
_SetIproFirFilteSrca_Type = IpAddress
_SetIproFirFilteSrca_Object = MibTableColumn
setIproFirFilteSrca = _SetIproFirFilteSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 3),
    _SetIproFirFilteSrca_Type()
)
setIproFirFilteSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteSrca.setStatus("current")
_SetIproFirFilteSrcn_Type = IpAddress
_SetIproFirFilteSrcn_Object = MibTableColumn
setIproFirFilteSrcn = _SetIproFirFilteSrcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 4),
    _SetIproFirFilteSrcn_Type()
)
setIproFirFilteSrcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteSrcn.setStatus("current")


class _SetIproFirFilteSst_Type(Integer32):
    """Custom type setIproFirFilteSst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFilteSst_Type.__name__ = "Integer32"
_SetIproFirFilteSst_Object = MibTableColumn
setIproFirFilteSst = _SetIproFirFilteSst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 5),
    _SetIproFirFilteSst_Type()
)
setIproFirFilteSst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteSst.setStatus("current")


class _SetIproFirFilteSend_Type(Integer32):
    """Custom type setIproFirFilteSend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFilteSend_Type.__name__ = "Integer32"
_SetIproFirFilteSend_Object = MibTableColumn
setIproFirFilteSend = _SetIproFirFilteSend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 6),
    _SetIproFirFilteSend_Type()
)
setIproFirFilteSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteSend.setStatus("current")
_SetIproFirFilteDsta_Type = IpAddress
_SetIproFirFilteDsta_Object = MibTableColumn
setIproFirFilteDsta = _SetIproFirFilteDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 7),
    _SetIproFirFilteDsta_Type()
)
setIproFirFilteDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteDsta.setStatus("current")
_SetIproFirFilteDstn_Type = IpAddress
_SetIproFirFilteDstn_Object = MibTableColumn
setIproFirFilteDstn = _SetIproFirFilteDstn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 8),
    _SetIproFirFilteDstn_Type()
)
setIproFirFilteDstn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteDstn.setStatus("current")


class _SetIproFirFilteDst_Type(Integer32):
    """Custom type setIproFirFilteDst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFilteDst_Type.__name__ = "Integer32"
_SetIproFirFilteDst_Object = MibTableColumn
setIproFirFilteDst = _SetIproFirFilteDst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 9),
    _SetIproFirFilteDst_Type()
)
setIproFirFilteDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteDst.setStatus("current")


class _SetIproFirFilteDend_Type(Integer32):
    """Custom type setIproFirFilteDend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFilteDend_Type.__name__ = "Integer32"
_SetIproFirFilteDend_Object = MibTableColumn
setIproFirFilteDend = _SetIproFirFilteDend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 10),
    _SetIproFirFilteDend_Type()
)
setIproFirFilteDend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteDend.setStatus("current")


class _SetIproFirFilteActi_Type(DisplayString):
    """Custom type setIproFirFilteActi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirFilteActi_Type.__name__ = "DisplayString"
_SetIproFirFilteActi_Object = MibTableColumn
setIproFirFilteActi = _SetIproFirFilteActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 11),
    _SetIproFirFilteActi_Type()
)
setIproFirFilteActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteActi.setStatus("current")


class _SetIproFirFilteSrcm_Type(DisplayString):
    """Custom type setIproFirFilteSrcm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetIproFirFilteSrcm_Type.__name__ = "DisplayString"
_SetIproFirFilteSrcm_Object = MibTableColumn
setIproFirFilteSrcm = _SetIproFirFilteSrcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 13),
    _SetIproFirFilteSrcm_Type()
)
setIproFirFilteSrcm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteSrcm.setStatus("current")


class _SetIproFirFilteDstm_Type(DisplayString):
    """Custom type setIproFirFilteDstm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetIproFirFilteDstm_Type.__name__ = "DisplayString"
_SetIproFirFilteDstm_Object = MibTableColumn
setIproFirFilteDstm = _SetIproFirFilteDstm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 14),
    _SetIproFirFilteDstm_Type()
)
setIproFirFilteDstm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteDstm.setStatus("current")


class _SetIproFirFilteLink_Type(Integer32):
    """Custom type setIproFirFilteLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproFirFilteLink_Type.__name__ = "Integer32"
_SetIproFirFilteLink_Object = MibTableColumn
setIproFirFilteLink = _SetIproFirFilteLink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 15),
    _SetIproFirFilteLink_Type()
)
setIproFirFilteLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteLink.setStatus("current")


class _SetIproFirFiltePrio_Type(Integer32):
    """Custom type setIproFirFiltePrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFiltePrio_Type.__name__ = "Integer32"
_SetIproFirFiltePrio_Object = MibTableColumn
setIproFirFiltePrio = _SetIproFirFiltePrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 16),
    _SetIproFirFiltePrio_Type()
)
setIproFirFiltePrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFiltePrio.setStatus("current")


class _SetIproFirFilteRtgt_Type(Integer32):
    """Custom type setIproFirFilteRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirFilteRtgt_Type.__name__ = "Integer32"
_SetIproFirFilteRtgt_Object = MibTableColumn
setIproFirFilteRtgt = _SetIproFirFilteRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 3, 1, 17),
    _SetIproFirFilteRtgt_Type()
)
setIproFirFilteRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirFilteRtgt.setStatus("current")
_SetIproFirActioTable_Object = MibTable
setIproFirActioTable = _SetIproFirActioTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4)
)
if mibBuilder.loadTexts:
    setIproFirActioTable.setStatus("current")
_SetIproFirActioEntry_Object = MibTableRow
setIproFirActioEntry = _SetIproFirActioEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1)
)
setIproFirActioEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirActioNam"),
)
if mibBuilder.loadTexts:
    setIproFirActioEntry.setStatus("current")


class _SetIproFirActioNam_Type(DisplayString):
    """Custom type setIproFirActioNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIproFirActioNam_Type.__name__ = "DisplayString"
_SetIproFirActioNam_Object = MibTableColumn
setIproFirActioNam = _SetIproFirActioNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1, 1),
    _SetIproFirActioNam_Type()
)
setIproFirActioNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirActioNam.setStatus("current")


class _SetIproFirActioDes_Type(DisplayString):
    """Custom type setIproFirActioDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIproFirActioDes_Type.__name__ = "DisplayString"
_SetIproFirActioDes_Object = MibTableColumn
setIproFirActioDes = _SetIproFirActioDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 4, 1, 2),
    _SetIproFirActioDes_Type()
)
setIproFirActioDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirActioDes.setStatus("current")
_SetIproFirConneTable_Object = MibTable
setIproFirConneTable = _SetIproFirConneTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5)
)
if mibBuilder.loadTexts:
    setIproFirConneTable.setStatus("current")
_SetIproFirConneEntry_Object = MibTableRow
setIproFirConneEntry = _SetIproFirConneEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1)
)
setIproFirConneEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirConneSrca"),
    (0, "LANCOM-1711-MIB", "setIproFirConneDsta"),
    (0, "LANCOM-1711-MIB", "setIproFirConneProt"),
    (0, "LANCOM-1711-MIB", "setIproFirConneSrcp"),
    (0, "LANCOM-1711-MIB", "setIproFirConneDstp"),
)
if mibBuilder.loadTexts:
    setIproFirConneEntry.setStatus("current")
_SetIproFirConneSrca_Type = IpAddress
_SetIproFirConneSrca_Object = MibTableColumn
setIproFirConneSrca = _SetIproFirConneSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 1),
    _SetIproFirConneSrca_Type()
)
setIproFirConneSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneSrca.setStatus("current")
_SetIproFirConneDsta_Type = IpAddress
_SetIproFirConneDsta_Object = MibTableColumn
setIproFirConneDsta = _SetIproFirConneDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 2),
    _SetIproFirConneDsta_Type()
)
setIproFirConneDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneDsta.setStatus("current")


class _SetIproFirConneProt_Type(Integer32):
    """Custom type setIproFirConneProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproFirConneProt_Type.__name__ = "Integer32"
_SetIproFirConneProt_Object = MibTableColumn
setIproFirConneProt = _SetIproFirConneProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 3),
    _SetIproFirConneProt_Type()
)
setIproFirConneProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneProt.setStatus("current")


class _SetIproFirConneSrcp_Type(Integer32):
    """Custom type setIproFirConneSrcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirConneSrcp_Type.__name__ = "Integer32"
_SetIproFirConneSrcp_Object = MibTableColumn
setIproFirConneSrcp = _SetIproFirConneSrcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 4),
    _SetIproFirConneSrcp_Type()
)
setIproFirConneSrcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneSrcp.setStatus("current")


class _SetIproFirConneDstp_Type(Integer32):
    """Custom type setIproFirConneDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirConneDstp_Type.__name__ = "Integer32"
_SetIproFirConneDstp_Object = MibTableColumn
setIproFirConneDstp = _SetIproFirConneDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 5),
    _SetIproFirConneDstp_Type()
)
setIproFirConneDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneDstp.setStatus("current")


class _SetIproFirConneTime_Type(Integer32):
    """Custom type setIproFirConneTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirConneTime_Type.__name__ = "Integer32"
_SetIproFirConneTime_Object = MibTableColumn
setIproFirConneTime = _SetIproFirConneTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 6),
    _SetIproFirConneTime_Type()
)
setIproFirConneTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneTime.setStatus("current")


class _SetIproFirConneFlag_Type(Integer32):
    """Custom type setIproFirConneFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIproFirConneFlag_Type.__name__ = "Integer32"
_SetIproFirConneFlag_Object = MibTableColumn
setIproFirConneFlag = _SetIproFirConneFlag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 7),
    _SetIproFirConneFlag_Type()
)
setIproFirConneFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneFlag.setStatus("current")


class _SetIproFirConneFilt_Type(DisplayString):
    """Custom type setIproFirConneFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirConneFilt_Type.__name__ = "DisplayString"
_SetIproFirConneFilt_Object = MibTableColumn
setIproFirConneFilt = _SetIproFirConneFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 8),
    _SetIproFirConneFilt_Type()
)
setIproFirConneFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneFilt.setStatus("current")


class _SetIproFirConneSrcr_Type(DisplayString):
    """Custom type setIproFirConneSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirConneSrcr_Type.__name__ = "DisplayString"
_SetIproFirConneSrcr_Object = MibTableColumn
setIproFirConneSrcr = _SetIproFirConneSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 9),
    _SetIproFirConneSrcr_Type()
)
setIproFirConneSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneSrcr.setStatus("current")


class _SetIproFirConneDest_Type(DisplayString):
    """Custom type setIproFirConneDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirConneDest_Type.__name__ = "DisplayString"
_SetIproFirConneDest_Object = MibTableColumn
setIproFirConneDest = _SetIproFirConneDest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 10),
    _SetIproFirConneDest_Type()
)
setIproFirConneDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneDest.setStatus("current")


class _SetIproFirConneRtgt_Type(Integer32):
    """Custom type setIproFirConneRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirConneRtgt_Type.__name__ = "Integer32"
_SetIproFirConneRtgt_Object = MibTableColumn
setIproFirConneRtgt = _SetIproFirConneRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 5, 1, 11),
    _SetIproFirConneRtgt_Type()
)
setIproFirConneRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirConneRtgt.setStatus("current")
_SetIproFirHostbTable_Object = MibTable
setIproFirHostbTable = _SetIproFirHostbTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6)
)
if mibBuilder.loadTexts:
    setIproFirHostbTable.setStatus("current")
_SetIproFirHostbEntry_Object = MibTableRow
setIproFirHostbEntry = _SetIproFirHostbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1)
)
setIproFirHostbEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirHostbSrc"),
)
if mibBuilder.loadTexts:
    setIproFirHostbEntry.setStatus("current")
_SetIproFirHostbSrc_Type = IpAddress
_SetIproFirHostbSrc_Object = MibTableColumn
setIproFirHostbSrc = _SetIproFirHostbSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 1),
    _SetIproFirHostbSrc_Type()
)
setIproFirHostbSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirHostbSrc.setStatus("current")


class _SetIproFirHostbTim_Type(Integer32):
    """Custom type setIproFirHostbTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIproFirHostbTim_Type.__name__ = "Integer32"
_SetIproFirHostbTim_Object = MibTableColumn
setIproFirHostbTim = _SetIproFirHostbTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 2),
    _SetIproFirHostbTim_Type()
)
setIproFirHostbTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirHostbTim.setStatus("current")


class _SetIproFirHostbFil_Type(DisplayString):
    """Custom type setIproFirHostbFil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirHostbFil_Type.__name__ = "DisplayString"
_SetIproFirHostbFil_Object = MibTableColumn
setIproFirHostbFil = _SetIproFirHostbFil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 6, 1, 3),
    _SetIproFirHostbFil_Type()
)
setIproFirHostbFil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirHostbFil.setStatus("current")
_SetIproFirPortbTable_Object = MibTable
setIproFirPortbTable = _SetIproFirPortbTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7)
)
if mibBuilder.loadTexts:
    setIproFirPortbTable.setStatus("current")
_SetIproFirPortbEntry_Object = MibTableRow
setIproFirPortbEntry = _SetIproFirPortbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1)
)
setIproFirPortbEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirPortbDsta"),
)
if mibBuilder.loadTexts:
    setIproFirPortbEntry.setStatus("current")
_SetIproFirPortbDsta_Type = IpAddress
_SetIproFirPortbDsta_Object = MibTableColumn
setIproFirPortbDsta = _SetIproFirPortbDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 1),
    _SetIproFirPortbDsta_Type()
)
setIproFirPortbDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirPortbDsta.setStatus("current")


class _SetIproFirPortbProt_Type(Integer32):
    """Custom type setIproFirPortbProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirPortbProt_Type.__name__ = "Integer32"
_SetIproFirPortbProt_Object = MibTableColumn
setIproFirPortbProt = _SetIproFirPortbProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 2),
    _SetIproFirPortbProt_Type()
)
setIproFirPortbProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirPortbProt.setStatus("current")


class _SetIproFirPortbDstp_Type(Integer32):
    """Custom type setIproFirPortbDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirPortbDstp_Type.__name__ = "Integer32"
_SetIproFirPortbDstp_Object = MibTableColumn
setIproFirPortbDstp = _SetIproFirPortbDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 3),
    _SetIproFirPortbDstp_Type()
)
setIproFirPortbDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirPortbDstp.setStatus("current")


class _SetIproFirPortbTime_Type(Integer32):
    """Custom type setIproFirPortbTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIproFirPortbTime_Type.__name__ = "Integer32"
_SetIproFirPortbTime_Object = MibTableColumn
setIproFirPortbTime = _SetIproFirPortbTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 4),
    _SetIproFirPortbTime_Type()
)
setIproFirPortbTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirPortbTime.setStatus("current")


class _SetIproFirPortbFilt_Type(DisplayString):
    """Custom type setIproFirPortbFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirPortbFilt_Type.__name__ = "DisplayString"
_SetIproFirPortbFilt_Object = MibTableColumn
setIproFirPortbFilt = _SetIproFirPortbFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 7, 1, 5),
    _SetIproFirPortbFilt_Type()
)
setIproFirPortbFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirPortbFilt.setStatus("current")
_SetIproFirMaxha_Type = Integer32
_SetIproFirMaxha_Object = MibScalar
setIproFirMaxha = _SetIproFirMaxha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 8),
    _SetIproFirMaxha_Type()
)
setIproFirMaxha.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirMaxha.setStatus("current")


class _SetIproFirDosac_Type(DisplayString):
    """Custom type setIproFirDosac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetIproFirDosac_Type.__name__ = "DisplayString"
_SetIproFirDosac_Object = MibScalar
setIproFirDosac = _SetIproFirDosac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 9),
    _SetIproFirDosac_Type()
)
setIproFirDosac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirDosac.setStatus("current")


class _SetIproFirAdmin_Type(DisplayString):
    """Custom type setIproFirAdmin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirAdmin_Type.__name__ = "DisplayString"
_SetIproFirAdmin_Object = MibScalar
setIproFirAdmin = _SetIproFirAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 10),
    _SetIproFirAdmin_Type()
)
setIproFirAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAdmin.setStatus("current")


class _SetIproFirOpera_Type(Integer32):
    """Custom type setIproFirOpera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproFirOpera_Type.__name__ = "Integer32"
_SetIproFirOpera_Object = MibScalar
setIproFirOpera = _SetIproFirOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 11),
    _SetIproFirOpera_Type()
)
setIproFirOpera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirOpera.setStatus("current")
_SetIproFirPorts_Type = Integer32
_SetIproFirPorts_Object = MibScalar
setIproFirPorts = _SetIproFirPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 12),
    _SetIproFirPorts_Type()
)
setIproFirPorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirPorts.setStatus("current")


class _SetIproFirIdsac_Type(DisplayString):
    """Custom type setIproFirIdsac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetIproFirIdsac_Type.__name__ = "DisplayString"
_SetIproFirIdsac_Object = MibScalar
setIproFirIdsac = _SetIproFirIdsac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 13),
    _SetIproFirIdsac_Type()
)
setIproFirIdsac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirIdsac.setStatus("current")


class _SetIproFirPingb_Type(Integer32):
    """Custom type setIproFirPingb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirPingb_Type.__name__ = "Integer32"
_SetIproFirPingb_Object = MibScalar
setIproFirPingb = _SetIproFirPingb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 14),
    _SetIproFirPingb_Type()
)
setIproFirPingb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirPingb.setStatus("current")


class _SetIproFirSteal_Type(Integer32):
    """Custom type setIproFirSteal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirSteal_Type.__name__ = "Integer32"
_SetIproFirSteal_Object = MibScalar
setIproFirSteal = _SetIproFirSteal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 15),
    _SetIproFirSteal_Type()
)
setIproFirSteal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirSteal.setStatus("current")


class _SetIproFirAuthp_Type(Integer32):
    """Custom type setIproFirAuthp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("stealth", 1))
    )


_SetIproFirAuthp_Type.__name__ = "Integer32"
_SetIproFirAuthp_Object = MibScalar
setIproFirAuthp = _SetIproFirAuthp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 16),
    _SetIproFirAuthp_Type()
)
setIproFirAuthp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAuthp.setStatus("current")


class _SetIproFirDenys_Type(Integer32):
    """Custom type setIproFirDenys based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirDenys_Type.__name__ = "Integer32"
_SetIproFirDenys_Object = MibScalar
setIproFirDenys = _SetIproFirDenys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 17),
    _SetIproFirDenys_Type()
)
setIproFirDenys.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirDenys.setStatus("current")
_SetIproFirOpenpTable_Object = MibTable
setIproFirOpenpTable = _SetIproFirOpenpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19)
)
if mibBuilder.loadTexts:
    setIproFirOpenpTable.setStatus("current")
_SetIproFirOpenpEntry_Object = MibTableRow
setIproFirOpenpEntry = _SetIproFirOpenpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1)
)
setIproFirOpenpEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproFirOpenpSrca"),
    (0, "LANCOM-1711-MIB", "setIproFirOpenpDsta"),
    (0, "LANCOM-1711-MIB", "setIproFirOpenpProt"),
    (0, "LANCOM-1711-MIB", "setIproFirOpenpDstp"),
)
if mibBuilder.loadTexts:
    setIproFirOpenpEntry.setStatus("current")
_SetIproFirOpenpSrca_Type = IpAddress
_SetIproFirOpenpSrca_Object = MibTableColumn
setIproFirOpenpSrca = _SetIproFirOpenpSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 1),
    _SetIproFirOpenpSrca_Type()
)
setIproFirOpenpSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpSrca.setStatus("current")
_SetIproFirOpenpDsta_Type = IpAddress
_SetIproFirOpenpDsta_Object = MibTableColumn
setIproFirOpenpDsta = _SetIproFirOpenpDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 2),
    _SetIproFirOpenpDsta_Type()
)
setIproFirOpenpDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpDsta.setStatus("current")


class _SetIproFirOpenpProt_Type(Integer32):
    """Custom type setIproFirOpenpProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproFirOpenpProt_Type.__name__ = "Integer32"
_SetIproFirOpenpProt_Object = MibTableColumn
setIproFirOpenpProt = _SetIproFirOpenpProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 3),
    _SetIproFirOpenpProt_Type()
)
setIproFirOpenpProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpProt.setStatus("current")


class _SetIproFirOpenpDstp_Type(Integer32):
    """Custom type setIproFirOpenpDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirOpenpDstp_Type.__name__ = "Integer32"
_SetIproFirOpenpDstp_Object = MibTableColumn
setIproFirOpenpDstp = _SetIproFirOpenpDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 5),
    _SetIproFirOpenpDstp_Type()
)
setIproFirOpenpDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpDstp.setStatus("current")


class _SetIproFirOpenpTime_Type(Integer32):
    """Custom type setIproFirOpenpTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproFirOpenpTime_Type.__name__ = "Integer32"
_SetIproFirOpenpTime_Object = MibTableColumn
setIproFirOpenpTime = _SetIproFirOpenpTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 6),
    _SetIproFirOpenpTime_Type()
)
setIproFirOpenpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpTime.setStatus("current")


class _SetIproFirOpenpFilt_Type(DisplayString):
    """Custom type setIproFirOpenpFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirOpenpFilt_Type.__name__ = "DisplayString"
_SetIproFirOpenpFilt_Object = MibTableColumn
setIproFirOpenpFilt = _SetIproFirOpenpFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 8),
    _SetIproFirOpenpFilt_Type()
)
setIproFirOpenpFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpFilt.setStatus("current")


class _SetIproFirOpenpSrcr_Type(DisplayString):
    """Custom type setIproFirOpenpSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIproFirOpenpSrcr_Type.__name__ = "DisplayString"
_SetIproFirOpenpSrcr_Object = MibTableColumn
setIproFirOpenpSrcr = _SetIproFirOpenpSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 19, 1, 9),
    _SetIproFirOpenpSrcr_Type()
)
setIproFirOpenpSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIproFirOpenpSrcr.setStatus("current")
_SetIproFirAppli_ObjectIdentity = ObjectIdentity
setIproFirAppli = _SetIproFirAppli_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20)
)
_SetIproFirAppliFtp_ObjectIdentity = ObjectIdentity
setIproFirAppliFtp = _SetIproFirAppliFtp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1)
)


class _SetIproFirAppliFtpFtp_Type(Integer32):
    """Custom type setIproFirAppliFtpFtp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliFtpFtp_Type.__name__ = "Integer32"
_SetIproFirAppliFtpFtp_Object = MibScalar
setIproFirAppliFtpFtp = _SetIproFirAppliFtpFtp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 1),
    _SetIproFirAppliFtpFtp_Type()
)
setIproFirAppliFtpFtp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliFtpFtp.setStatus("current")


class _SetIproFirAppliFtpAct_Type(Integer32):
    """Custom type setIproFirAppliFtpAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliFtpAct_Type.__name__ = "Integer32"
_SetIproFirAppliFtpAct_Object = MibScalar
setIproFirAppliFtpAct = _SetIproFirAppliFtpAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 2),
    _SetIproFirAppliFtpAct_Type()
)
setIproFirAppliFtpAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliFtpAct.setStatus("current")
_SetIproFirAppliFtpMin_Type = Integer32
_SetIproFirAppliFtpMin_Object = MibScalar
setIproFirAppliFtpMin = _SetIproFirAppliFtpMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 3),
    _SetIproFirAppliFtpMin_Type()
)
setIproFirAppliFtpMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliFtpMin.setStatus("current")


class _SetIproFirAppliFtpChe_Type(Integer32):
    """Custom type setIproFirAppliFtpChe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliFtpChe_Type.__name__ = "Integer32"
_SetIproFirAppliFtpChe_Object = MibScalar
setIproFirAppliFtpChe = _SetIproFirAppliFtpChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 4),
    _SetIproFirAppliFtpChe_Type()
)
setIproFirAppliFtpChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliFtpChe.setStatus("current")


class _SetIproFirAppliFtpFxp_Type(Integer32):
    """Custom type setIproFirAppliFtpFxp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliFtpFxp_Type.__name__ = "Integer32"
_SetIproFirAppliFtpFxp_Object = MibScalar
setIproFirAppliFtpFxp = _SetIproFirAppliFtpFxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 1, 5),
    _SetIproFirAppliFtpFxp_Type()
)
setIproFirAppliFtpFxp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliFtpFxp.setStatus("current")
_SetIproFirAppliIrc_ObjectIdentity = ObjectIdentity
setIproFirAppliIrc = _SetIproFirAppliIrc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2)
)


class _SetIproFirAppliIrcIrc_Type(Integer32):
    """Custom type setIproFirAppliIrcIrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliIrcIrc_Type.__name__ = "Integer32"
_SetIproFirAppliIrcIrc_Object = MibScalar
setIproFirAppliIrcIrc = _SetIproFirAppliIrcIrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 1),
    _SetIproFirAppliIrcIrc_Type()
)
setIproFirAppliIrcIrc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliIrcIrc.setStatus("current")


class _SetIproFirAppliIrcDdc_Type(Integer32):
    """Custom type setIproFirAppliIrcDdc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliIrcDdc_Type.__name__ = "Integer32"
_SetIproFirAppliIrcDdc_Object = MibScalar
setIproFirAppliIrcDdc = _SetIproFirAppliIrcDdc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 2),
    _SetIproFirAppliIrcDdc_Type()
)
setIproFirAppliIrcDdc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliIrcDdc.setStatus("current")
_SetIproFirAppliIrcMin_Type = Integer32
_SetIproFirAppliIrcMin_Object = MibScalar
setIproFirAppliIrcMin = _SetIproFirAppliIrcMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 3),
    _SetIproFirAppliIrcMin_Type()
)
setIproFirAppliIrcMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliIrcMin.setStatus("current")


class _SetIproFirAppliIrcChe_Type(Integer32):
    """Custom type setIproFirAppliIrcChe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIproFirAppliIrcChe_Type.__name__ = "Integer32"
_SetIproFirAppliIrcChe_Object = MibScalar
setIproFirAppliIrcChe = _SetIproFirAppliIrcChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 2, 4),
    _SetIproFirAppliIrcChe_Type()
)
setIproFirAppliIrcChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliIrcChe.setStatus("current")


class _SetIproFirAppliApp_Type(DisplayString):
    """Custom type setIproFirAppliApp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetIproFirAppliApp_Type.__name__ = "DisplayString"
_SetIproFirAppliApp_Object = MibScalar
setIproFirAppliApp = _SetIproFirAppliApp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 10, 20, 10),
    _SetIproFirAppliApp_Type()
)
setIproFirAppliApp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproFirAppliApp.setStatus("current")
_SetIproSta_Type = IpAddress
_SetIproSta_Object = MibScalar
setIproSta = _SetIproSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 11),
    _SetIproSta_Type()
)
setIproSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproSta.setStatus("current")
_SetIproEnd_Type = IpAddress
_SetIproEnd_Object = MibScalar
setIproEnd = _SetIproEnd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 12),
    _SetIproEnd_Type()
)
setIproEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproEnd.setStatus("current")
_SetIproDefTable_Object = MibTable
setIproDefTable = _SetIproDefTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13)
)
if mibBuilder.loadTexts:
    setIproDefTable.setStatus("current")
_SetIproDefEntry_Object = MibTableRow
setIproDefEntry = _SetIproDefEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1)
)
setIproDefEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproDefInd"),
)
if mibBuilder.loadTexts:
    setIproDefEntry.setStatus("current")


class _SetIproDefInd_Type(Integer32):
    """Custom type setIproDefInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproDefInd_Type.__name__ = "Integer32"
_SetIproDefInd_Object = MibTableColumn
setIproDefInd = _SetIproDefInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 1),
    _SetIproDefInd_Type()
)
setIproDefInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproDefInd.setStatus("current")


class _SetIproDefDay_Type(Bits):
    """Custom type setIproDefDay based on Bits"""
    namedValues = NamedValues(
        *(("friday", 3),
          ("holiday", 0),
          ("monday", 7),
          ("saturday", 2),
          ("sunday", 1),
          ("thursday", 4),
          ("tuesday", 6),
          ("wednesday", 5))
    )

_SetIproDefDay_Type.__name__ = "Bits"
_SetIproDefDay_Object = MibTableColumn
setIproDefDay = _SetIproDefDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 2),
    _SetIproDefDay_Type()
)
setIproDefDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproDefDay.setStatus("current")


class _SetIproDefSta_Type(DisplayString):
    """Custom type setIproDefSta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetIproDefSta_Type.__name__ = "DisplayString"
_SetIproDefSta_Object = MibTableColumn
setIproDefSta = _SetIproDefSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 3),
    _SetIproDefSta_Type()
)
setIproDefSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproDefSta.setStatus("current")


class _SetIproDefSto_Type(DisplayString):
    """Custom type setIproDefSto based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetIproDefSto_Type.__name__ = "DisplayString"
_SetIproDefSto_Object = MibTableColumn
setIproDefSto = _SetIproDefSto_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 4),
    _SetIproDefSto_Type()
)
setIproDefSto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproDefSto.setStatus("current")


class _SetIproDefPee_Type(DisplayString):
    """Custom type setIproDefPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproDefPee_Type.__name__ = "DisplayString"
_SetIproDefPee_Object = MibTableColumn
setIproDefPee = _SetIproDefPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 13, 1, 5),
    _SetIproDefPee_Type()
)
setIproDefPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproDefPee.setStatus("current")


class _SetIproUsa_Type(Integer32):
    """Custom type setIproUsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproUsa_Type.__name__ = "Integer32"
_SetIproUsa_Object = MibScalar
setIproUsa = _SetIproUsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 14),
    _SetIproUsa_Type()
)
setIproUsa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproUsa.setStatus("current")
_SetIproNnnTable_Object = MibTable
setIproNnnTable = _SetIproNnnTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19)
)
if mibBuilder.loadTexts:
    setIproNnnTable.setStatus("current")
_SetIproNnnEntry_Object = MibTableRow
setIproNnnEntry = _SetIproNnnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1)
)
setIproNnnEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproNnnIdx"),
)
if mibBuilder.loadTexts:
    setIproNnnEntry.setStatus("current")


class _SetIproNnnIdx_Type(DisplayString):
    """Custom type setIproNnnIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetIproNnnIdx_Type.__name__ = "DisplayString"
_SetIproNnnIdx_Object = MibTableColumn
setIproNnnIdx = _SetIproNnnIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 1),
    _SetIproNnnIdx_Type()
)
setIproNnnIdx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproNnnIdx.setStatus("current")
_SetIproNnnSrca_Type = IpAddress
_SetIproNnnSrca_Object = MibTableColumn
setIproNnnSrca = _SetIproNnnSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 2),
    _SetIproNnnSrca_Type()
)
setIproNnnSrca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproNnnSrca.setStatus("current")
_SetIproNnnSrcm_Type = IpAddress
_SetIproNnnSrcm_Object = MibTableColumn
setIproNnnSrcm = _SetIproNnnSrcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 3),
    _SetIproNnnSrcm_Type()
)
setIproNnnSrcm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproNnnSrcm.setStatus("current")


class _SetIproNnnDsts_Type(DisplayString):
    """Custom type setIproNnnDsts based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproNnnDsts_Type.__name__ = "DisplayString"
_SetIproNnnDsts_Object = MibTableColumn
setIproNnnDsts = _SetIproNnnDsts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 4),
    _SetIproNnnDsts_Type()
)
setIproNnnDsts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproNnnDsts.setStatus("current")
_SetIproNnnMapp_Type = IpAddress
_SetIproNnnMapp_Object = MibTableColumn
setIproNnnMapp = _SetIproNnnMapp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 19, 1, 5),
    _SetIproNnnMapp_Type()
)
setIproNnnMapp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproNnnMapp.setStatus("current")
_SetIproLoa_ObjectIdentity = ObjectIdentity
setIproLoa = _SetIproLoa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20)
)


class _SetIproLoaOpe_Type(Integer32):
    """Custom type setIproLoaOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproLoaOpe_Type.__name__ = "Integer32"
_SetIproLoaOpe_Object = MibScalar
setIproLoaOpe = _SetIproLoaOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 1),
    _SetIproLoaOpe_Type()
)
setIproLoaOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproLoaOpe.setStatus("current")
_SetIproLoaBunTable_Object = MibTable
setIproLoaBunTable = _SetIproLoaBunTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2)
)
if mibBuilder.loadTexts:
    setIproLoaBunTable.setStatus("current")
_SetIproLoaBunEntry_Object = MibTableRow
setIproLoaBunEntry = _SetIproLoaBunEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1)
)
setIproLoaBunEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproLoaBunPeer"),
)
if mibBuilder.loadTexts:
    setIproLoaBunEntry.setStatus("current")


class _SetIproLoaBunPeer_Type(DisplayString):
    """Custom type setIproLoaBunPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproLoaBunPeer_Type.__name__ = "DisplayString"
_SetIproLoaBunPeer_Object = MibTableColumn
setIproLoaBunPeer = _SetIproLoaBunPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 1),
    _SetIproLoaBunPeer_Type()
)
setIproLoaBunPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproLoaBunPeer.setStatus("current")


class _SetIproLoaBunBundlepeer1_Type(DisplayString):
    """Custom type setIproLoaBunBundlepeer1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproLoaBunBundlepeer1_Type.__name__ = "DisplayString"
_SetIproLoaBunBundlepeer1_Object = MibTableColumn
setIproLoaBunBundlepeer1 = _SetIproLoaBunBundlepeer1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 2),
    _SetIproLoaBunBundlepeer1_Type()
)
setIproLoaBunBundlepeer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproLoaBunBundlepeer1.setStatus("current")


class _SetIproLoaBunBundlepeer2_Type(DisplayString):
    """Custom type setIproLoaBunBundlepeer2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproLoaBunBundlepeer2_Type.__name__ = "DisplayString"
_SetIproLoaBunBundlepeer2_Object = MibTableColumn
setIproLoaBunBundlepeer2 = _SetIproLoaBunBundlepeer2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 3),
    _SetIproLoaBunBundlepeer2_Type()
)
setIproLoaBunBundlepeer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproLoaBunBundlepeer2.setStatus("current")


class _SetIproLoaBunBundlepeer3_Type(DisplayString):
    """Custom type setIproLoaBunBundlepeer3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproLoaBunBundlepeer3_Type.__name__ = "DisplayString"
_SetIproLoaBunBundlepeer3_Object = MibTableColumn
setIproLoaBunBundlepeer3 = _SetIproLoaBunBundlepeer3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 4),
    _SetIproLoaBunBundlepeer3_Type()
)
setIproLoaBunBundlepeer3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproLoaBunBundlepeer3.setStatus("current")


class _SetIproLoaBunBundlepeer4_Type(DisplayString):
    """Custom type setIproLoaBunBundlepeer4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproLoaBunBundlepeer4_Type.__name__ = "DisplayString"
_SetIproLoaBunBundlepeer4_Object = MibTableColumn
setIproLoaBunBundlepeer4 = _SetIproLoaBunBundlepeer4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 20, 2, 1, 5),
    _SetIproLoaBunBundlepeer4_Type()
)
setIproLoaBunBundlepeer4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproLoaBunBundlepeer4.setStatus("current")
_SetIproVrr_ObjectIdentity = ObjectIdentity
setIproVrr = _SetIproVrr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21)
)


class _SetIproVrrOpe_Type(Integer32):
    """Custom type setIproVrrOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproVrrOpe_Type.__name__ = "Integer32"
_SetIproVrrOpe_Object = MibScalar
setIproVrrOpe = _SetIproVrrOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 1),
    _SetIproVrrOpe_Type()
)
setIproVrrOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrOpe.setStatus("current")
_SetIproVrrVrrTable_Object = MibTable
setIproVrrVrrTable = _SetIproVrrVrrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2)
)
if mibBuilder.loadTexts:
    setIproVrrVrrTable.setStatus("current")
_SetIproVrrVrrEntry_Object = MibTableRow
setIproVrrVrrEntry = _SetIproVrrVrrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1)
)
setIproVrrVrrEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproVrrVrrRou"),
)
if mibBuilder.loadTexts:
    setIproVrrVrrEntry.setStatus("current")


class _SetIproVrrVrrRou_Type(Integer32):
    """Custom type setIproVrrVrrRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproVrrVrrRou_Type.__name__ = "Integer32"
_SetIproVrrVrrRou_Object = MibTableColumn
setIproVrrVrrRou = _SetIproVrrVrrRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 1),
    _SetIproVrrVrrRou_Type()
)
setIproVrrVrrRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrVrrRou.setStatus("current")
_SetIproVrrVrrVir_Type = IpAddress
_SetIproVrrVrrVir_Object = MibTableColumn
setIproVrrVrrVir = _SetIproVrrVrrVir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 2),
    _SetIproVrrVrrVir_Type()
)
setIproVrrVrrVir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrVrrVir.setStatus("current")


class _SetIproVrrVrrPri_Type(Integer32):
    """Custom type setIproVrrVrrPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproVrrVrrPri_Type.__name__ = "Integer32"
_SetIproVrrVrrPri_Object = MibTableColumn
setIproVrrVrrPri = _SetIproVrrVrrPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 3),
    _SetIproVrrVrrPri_Type()
)
setIproVrrVrrPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrVrrPri.setStatus("current")


class _SetIproVrrVrrBpr_Type(Integer32):
    """Custom type setIproVrrVrrBpr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIproVrrVrrBpr_Type.__name__ = "Integer32"
_SetIproVrrVrrBpr_Object = MibTableColumn
setIproVrrVrrBpr = _SetIproVrrVrrBpr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 4),
    _SetIproVrrVrrBpr_Type()
)
setIproVrrVrrBpr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrVrrBpr.setStatus("current")


class _SetIproVrrVrrPee_Type(DisplayString):
    """Custom type setIproVrrVrrPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproVrrVrrPee_Type.__name__ = "DisplayString"
_SetIproVrrVrrPee_Object = MibTableColumn
setIproVrrVrrPee = _SetIproVrrVrrPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 5),
    _SetIproVrrVrrPee_Type()
)
setIproVrrVrrPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrVrrPee.setStatus("current")


class _SetIproVrrVrrCom_Type(DisplayString):
    """Custom type setIproVrrVrrCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIproVrrVrrCom_Type.__name__ = "DisplayString"
_SetIproVrrVrrCom_Object = MibTableColumn
setIproVrrVrrCom = _SetIproVrrVrrCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 2, 1, 6),
    _SetIproVrrVrrCom_Type()
)
setIproVrrVrrCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrVrrCom.setStatus("current")
_SetIproVrrRec_Type = Integer32
_SetIproVrrRec_Object = MibScalar
setIproVrrRec = _SetIproVrrRec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 3),
    _SetIproVrrRec_Type()
)
setIproVrrRec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrRec.setStatus("current")
_SetIproVrrAdv_Type = Integer32
_SetIproVrrAdv_Object = MibScalar
setIproVrrAdv = _SetIproVrrAdv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 4),
    _SetIproVrrAdv_Type()
)
setIproVrrAdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrAdv.setStatus("current")


class _SetIproVrrInt_Type(Integer32):
    """Custom type setIproVrrInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIproVrrInt_Type.__name__ = "Integer32"
_SetIproVrrInt_Object = MibScalar
setIproVrrInt = _SetIproVrrInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 21, 5),
    _SetIproVrrInt_Type()
)
setIproVrrInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproVrrInt.setStatus("current")


class _SetIproWan_Type(Integer32):
    """Custom type setIproWan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("manual", 0))
    )


_SetIproWan_Type.__name__ = "Integer32"
_SetIproWan_Object = MibScalar
setIproWan = _SetIproWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 22),
    _SetIproWan_Type()
)
setIproWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproWan.setStatus("current")
_SetIproTagTable_Object = MibTable
setIproTagTable = _SetIproTagTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23)
)
if mibBuilder.loadTexts:
    setIproTagTable.setStatus("current")
_SetIproTagEntry_Object = MibTableRow
setIproTagEntry = _SetIproTagEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1)
)
setIproTagEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setIproTagPee"),
)
if mibBuilder.loadTexts:
    setIproTagEntry.setStatus("current")


class _SetIproTagPee_Type(DisplayString):
    """Custom type setIproTagPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIproTagPee_Type.__name__ = "DisplayString"
_SetIproTagPee_Object = MibTableColumn
setIproTagPee = _SetIproTagPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 1),
    _SetIproTagPee_Type()
)
setIproTagPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproTagPee.setStatus("current")


class _SetIproTagRtg_Type(Integer32):
    """Custom type setIproTagRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIproTagRtg_Type.__name__ = "Integer32"
_SetIproTagRtg_Object = MibTableColumn
setIproTagRtg = _SetIproTagRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 2),
    _SetIproTagRtg_Type()
)
setIproTagRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproTagRtg.setStatus("current")
_SetIproTagSta_Type = IpAddress
_SetIproTagSta_Object = MibTableColumn
setIproTagSta = _SetIproTagSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 3),
    _SetIproTagSta_Type()
)
setIproTagSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproTagSta.setStatus("current")
_SetIproTagEnd_Type = IpAddress
_SetIproTagEnd_Object = MibTableColumn
setIproTagEnd = _SetIproTagEnd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 8, 23, 1, 4),
    _SetIproTagEnd_Type()
)
setIproTagEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIproTagEnd.setStatus("current")
_SetSnmp_ObjectIdentity = ObjectIdentity
setSnmp = _SetSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9)
)


class _SetSnmpSendtrap_Type(Integer32):
    """Custom type setSnmpSendtrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetSnmpSendtrap_Type.__name__ = "Integer32"
_SetSnmpSendtrap_Object = MibScalar
setSnmpSendtrap = _SetSnmpSendtrap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 1),
    _SetSnmpSendtrap_Type()
)
setSnmpSendtrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpSendtrap.setStatus("current")
_SetSnmpIptrapsTable_Object = MibTable
setSnmpIptrapsTable = _SetSnmpIptrapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2)
)
if mibBuilder.loadTexts:
    setSnmpIptrapsTable.setStatus("current")
_SetSnmpIptrapsEntry_Object = MibTableRow
setSnmpIptrapsEntry = _SetSnmpIptrapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1)
)
setSnmpIptrapsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setSnmpIptrapsTra"),
)
if mibBuilder.loadTexts:
    setSnmpIptrapsEntry.setStatus("current")
_SetSnmpIptrapsTra_Type = IpAddress
_SetSnmpIptrapsTra_Object = MibTableColumn
setSnmpIptrapsTra = _SetSnmpIptrapsTra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 1),
    _SetSnmpIptrapsTra_Type()
)
setSnmpIptrapsTra.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpIptrapsTra.setStatus("current")


class _SetSnmpIptrapsLoo_Type(DisplayString):
    """Custom type setSnmpIptrapsLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetSnmpIptrapsLoo_Type.__name__ = "DisplayString"
_SetSnmpIptrapsLoo_Object = MibTableColumn
setSnmpIptrapsLoo = _SetSnmpIptrapsLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 3),
    _SetSnmpIptrapsLoo_Type()
)
setSnmpIptrapsLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpIptrapsLoo.setStatus("current")


class _SetSnmpIptrapsVer_Type(Integer32):
    """Custom type setSnmpIptrapsVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("snmpv1", 1),
          ("snmpv2", 0))
    )


_SetSnmpIptrapsVer_Type.__name__ = "Integer32"
_SetSnmpIptrapsVer_Object = MibTableColumn
setSnmpIptrapsVer = _SetSnmpIptrapsVer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 2, 1, 4),
    _SetSnmpIptrapsVer_Type()
)
setSnmpIptrapsVer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpIptrapsVer.setStatus("current")


class _SetSnmpAdminist_Type(DisplayString):
    """Custom type setSnmpAdminist based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpAdminist_Type.__name__ = "DisplayString"
_SetSnmpAdminist_Object = MibScalar
setSnmpAdminist = _SetSnmpAdminist_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 3),
    _SetSnmpAdminist_Type()
)
setSnmpAdminist.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpAdminist.setStatus("current")


class _SetSnmpLocation_Type(DisplayString):
    """Custom type setSnmpLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpLocation_Type.__name__ = "DisplayString"
_SetSnmpLocation_Object = MibScalar
setSnmpLocation = _SetSnmpLocation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 4),
    _SetSnmpLocation_Type()
)
setSnmpLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpLocation.setStatus("current")
_SetSnmpRegister_Type = DisplayString
_SetSnmpRegister_Object = MibScalar
setSnmpRegister = _SetSnmpRegister_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 5),
    _SetSnmpRegister_Type()
)
setSnmpRegister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpRegister.setStatus("current")
_SetSnmpDeletemo_Type = DisplayString
_SetSnmpDeletemo_Object = MibScalar
setSnmpDeletemo = _SetSnmpDeletemo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 6),
    _SetSnmpDeletemo_Type()
)
setSnmpDeletemo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpDeletemo.setStatus("current")
_SetSnmpMonitortTable_Object = MibTable
setSnmpMonitortTable = _SetSnmpMonitortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7)
)
if mibBuilder.loadTexts:
    setSnmpMonitortTable.setStatus("current")
_SetSnmpMonitortEntry_Object = MibTableRow
setSnmpMonitortEntry = _SetSnmpMonitortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1)
)
setSnmpMonitortEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setSnmpMonitortIpa"),
    (0, "LANCOM-1711-MIB", "setSnmpMonitortPor"),
)
if mibBuilder.loadTexts:
    setSnmpMonitortEntry.setStatus("current")
_SetSnmpMonitortIpa_Type = IpAddress
_SetSnmpMonitortIpa_Object = MibTableColumn
setSnmpMonitortIpa = _SetSnmpMonitortIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 1),
    _SetSnmpMonitortIpa_Type()
)
setSnmpMonitortIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortIpa.setStatus("current")


class _SetSnmpMonitortPor_Type(Integer32):
    """Custom type setSnmpMonitortPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetSnmpMonitortPor_Type.__name__ = "Integer32"
_SetSnmpMonitortPor_Object = MibTableColumn
setSnmpMonitortPor = _SetSnmpMonitortPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 2),
    _SetSnmpMonitortPor_Type()
)
setSnmpMonitortPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortPor.setStatus("current")


class _SetSnmpMonitortTim_Type(Integer32):
    """Custom type setSnmpMonitortTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetSnmpMonitortTim_Type.__name__ = "Integer32"
_SetSnmpMonitortTim_Object = MibTableColumn
setSnmpMonitortTim = _SetSnmpMonitortTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 3),
    _SetSnmpMonitortTim_Type()
)
setSnmpMonitortTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortTim.setStatus("current")


class _SetSnmpMonitortMac_Type(DisplayString):
    """Custom type setSnmpMonitortMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetSnmpMonitortMac_Type.__name__ = "DisplayString"
_SetSnmpMonitortMac_Object = MibTableColumn
setSnmpMonitortMac = _SetSnmpMonitortMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 4),
    _SetSnmpMonitortMac_Type()
)
setSnmpMonitortMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortMac.setStatus("current")


class _SetSnmpMonitortPee_Type(DisplayString):
    """Custom type setSnmpMonitortPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetSnmpMonitortPee_Type.__name__ = "DisplayString"
_SetSnmpMonitortPee_Object = MibTableColumn
setSnmpMonitortPee = _SetSnmpMonitortPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 5),
    _SetSnmpMonitortPee_Type()
)
setSnmpMonitortPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortPee.setStatus("current")
_SetSnmpMonitortLoo_Type = IpAddress
_SetSnmpMonitortLoo_Object = MibTableColumn
setSnmpMonitortLoo = _SetSnmpMonitortLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 6),
    _SetSnmpMonitortLoo_Type()
)
setSnmpMonitortLoo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortLoo.setStatus("current")


class _SetSnmpMonitortVla_Type(Integer32):
    """Custom type setSnmpMonitortVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetSnmpMonitortVla_Type.__name__ = "Integer32"
_SetSnmpMonitortVla_Object = MibTableColumn
setSnmpMonitortVla = _SetSnmpMonitortVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 7),
    _SetSnmpMonitortVla_Type()
)
setSnmpMonitortVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortVla.setStatus("current")


class _SetSnmpMonitortLan_Type(DisplayString):
    """Custom type setSnmpMonitortLan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpMonitortLan_Type.__name__ = "DisplayString"
_SetSnmpMonitortLan_Object = MibTableColumn
setSnmpMonitortLan = _SetSnmpMonitortLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 8),
    _SetSnmpMonitortLan_Type()
)
setSnmpMonitortLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortLan.setStatus("current")


class _SetSnmpMonitortEth_Type(Integer32):
    """Custom type setSnmpMonitortEth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetSnmpMonitortEth_Type.__name__ = "Integer32"
_SetSnmpMonitortEth_Object = MibTableColumn
setSnmpMonitortEth = _SetSnmpMonitortEth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 7, 1, 9),
    _SetSnmpMonitortEth_Type()
)
setSnmpMonitortEth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortEth.setStatus("current")


class _SetSnmpPassword_Type(Integer32):
    """Custom type setSnmpPassword based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetSnmpPassword_Type.__name__ = "Integer32"
_SetSnmpPassword_Object = MibScalar
setSnmpPassword = _SetSnmpPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 10),
    _SetSnmpPassword_Type()
)
setSnmpPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpPassword.setStatus("current")


class _SetSnmpComment1_Type(DisplayString):
    """Custom type setSnmpComment1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment1_Type.__name__ = "DisplayString"
_SetSnmpComment1_Object = MibScalar
setSnmpComment1 = _SetSnmpComment1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 11),
    _SetSnmpComment1_Type()
)
setSnmpComment1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment1.setStatus("current")


class _SetSnmpComment2_Type(DisplayString):
    """Custom type setSnmpComment2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment2_Type.__name__ = "DisplayString"
_SetSnmpComment2_Object = MibScalar
setSnmpComment2 = _SetSnmpComment2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 12),
    _SetSnmpComment2_Type()
)
setSnmpComment2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment2.setStatus("current")


class _SetSnmpComment3_Type(DisplayString):
    """Custom type setSnmpComment3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment3_Type.__name__ = "DisplayString"
_SetSnmpComment3_Object = MibScalar
setSnmpComment3 = _SetSnmpComment3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 13),
    _SetSnmpComment3_Type()
)
setSnmpComment3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment3.setStatus("current")


class _SetSnmpComment4_Type(DisplayString):
    """Custom type setSnmpComment4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment4_Type.__name__ = "DisplayString"
_SetSnmpComment4_Object = MibScalar
setSnmpComment4 = _SetSnmpComment4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 14),
    _SetSnmpComment4_Type()
)
setSnmpComment4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment4.setStatus("current")


class _SetSnmpReadonly_Type(DisplayString):
    """Custom type setSnmpReadonly based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetSnmpReadonly_Type.__name__ = "DisplayString"
_SetSnmpReadonly_Object = MibScalar
setSnmpReadonly = _SetSnmpReadonly_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 9, 15),
    _SetSnmpReadonly_Type()
)
setSnmpReadonly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpReadonly.setStatus("current")
_SetDhcp_ObjectIdentity = ObjectIdentity
setDhcp = _SetDhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10)
)
_SetDhcpMax_Type = Integer32
_SetDhcpMax_Object = MibScalar
setDhcpMax = _SetDhcpMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 6),
    _SetDhcpMax_Type()
)
setDhcpMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpMax.setStatus("current")
_SetDhcpDef_Type = Integer32
_SetDhcpDef_Object = MibScalar
setDhcpDef = _SetDhcpDef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 7),
    _SetDhcpDef_Type()
)
setDhcpDef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpDef.setStatus("current")
_SetDhcpDhcTable_Object = MibTable
setDhcpDhcTable = _SetDhcpDhcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8)
)
if mibBuilder.loadTexts:
    setDhcpDhcTable.setStatus("current")
_SetDhcpDhcEntry_Object = MibTableRow
setDhcpDhcEntry = _SetDhcpDhcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1)
)
setDhcpDhcEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDhcpDhcIpa"),
    (0, "LANCOM-1711-MIB", "setDhcpDhcNet"),
)
if mibBuilder.loadTexts:
    setDhcpDhcEntry.setStatus("current")
_SetDhcpDhcIpa_Type = IpAddress
_SetDhcpDhcIpa_Object = MibTableColumn
setDhcpDhcIpa = _SetDhcpDhcIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 1),
    _SetDhcpDhcIpa_Type()
)
setDhcpDhcIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcIpa.setStatus("current")


class _SetDhcpDhcMac_Type(DisplayString):
    """Custom type setDhcpDhcMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetDhcpDhcMac_Type.__name__ = "DisplayString"
_SetDhcpDhcMac_Object = MibTableColumn
setDhcpDhcMac = _SetDhcpDhcMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 2),
    _SetDhcpDhcMac_Type()
)
setDhcpDhcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcMac.setStatus("current")


class _SetDhcpDhcTim_Type(Integer32):
    """Custom type setDhcpDhcTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetDhcpDhcTim_Type.__name__ = "Integer32"
_SetDhcpDhcTim_Object = MibTableColumn
setDhcpDhcTim = _SetDhcpDhcTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 3),
    _SetDhcpDhcTim_Type()
)
setDhcpDhcTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcTim.setStatus("current")


class _SetDhcpDhcHos_Type(DisplayString):
    """Custom type setDhcpDhcHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDhcpDhcHos_Type.__name__ = "DisplayString"
_SetDhcpDhcHos_Object = MibTableColumn
setDhcpDhcHos = _SetDhcpDhcHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 4),
    _SetDhcpDhcHos_Type()
)
setDhcpDhcHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcHos.setStatus("current")


class _SetDhcpDhcTyp_Type(Bits):
    """Custom type setDhcpDhcTyp based on Bits"""
    namedValues = NamedValues(
        *(("bootp", 10),
          ("dyn", 11),
          ("new", 15),
          ("relay", 4),
          ("stat", 12),
          ("unkn", 13))
    )

_SetDhcpDhcTyp_Type.__name__ = "Bits"
_SetDhcpDhcTyp_Object = MibTableColumn
setDhcpDhcTyp = _SetDhcpDhcTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 5),
    _SetDhcpDhcTyp_Type()
)
setDhcpDhcTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcTyp.setStatus("current")


class _SetDhcpDhcLan_Type(Integer32):
    """Custom type setDhcpDhcLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3))
    )


_SetDhcpDhcLan_Type.__name__ = "Integer32"
_SetDhcpDhcLan_Object = MibTableColumn
setDhcpDhcLan = _SetDhcpDhcLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 6),
    _SetDhcpDhcLan_Type()
)
setDhcpDhcLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcLan.setStatus("current")


class _SetDhcpDhcEth_Type(Integer32):
    """Custom type setDhcpDhcEth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_SetDhcpDhcEth_Type.__name__ = "Integer32"
_SetDhcpDhcEth_Object = MibTableColumn
setDhcpDhcEth = _SetDhcpDhcEth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 7),
    _SetDhcpDhcEth_Type()
)
setDhcpDhcEth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcEth.setStatus("current")


class _SetDhcpDhcVla_Type(Integer32):
    """Custom type setDhcpDhcVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetDhcpDhcVla_Type.__name__ = "Integer32"
_SetDhcpDhcVla_Object = MibTableColumn
setDhcpDhcVla = _SetDhcpDhcVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 8),
    _SetDhcpDhcVla_Type()
)
setDhcpDhcVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcVla.setStatus("current")


class _SetDhcpDhcNet_Type(DisplayString):
    """Custom type setDhcpDhcNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetDhcpDhcNet_Type.__name__ = "DisplayString"
_SetDhcpDhcNet_Object = MibTableColumn
setDhcpDhcNet = _SetDhcpDhcNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 8, 1, 9),
    _SetDhcpDhcNet_Type()
)
setDhcpDhcNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcNet.setStatus("current")
_SetDhcpHosTable_Object = MibTable
setDhcpHosTable = _SetDhcpHosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9)
)
if mibBuilder.loadTexts:
    setDhcpHosTable.setStatus("current")
_SetDhcpHosEntry_Object = MibTableRow
setDhcpHosEntry = _SetDhcpHosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1)
)
setDhcpHosEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDhcpHosMac"),
    (0, "LANCOM-1711-MIB", "setDhcpHosNet"),
)
if mibBuilder.loadTexts:
    setDhcpHosEntry.setStatus("current")


class _SetDhcpHosMac_Type(DisplayString):
    """Custom type setDhcpHosMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetDhcpHosMac_Type.__name__ = "DisplayString"
_SetDhcpHosMac_Object = MibTableColumn
setDhcpHosMac = _SetDhcpHosMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 1),
    _SetDhcpHosMac_Type()
)
setDhcpHosMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosMac.setStatus("current")
_SetDhcpHosIpa_Type = IpAddress
_SetDhcpHosIpa_Object = MibTableColumn
setDhcpHosIpa = _SetDhcpHosIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 2),
    _SetDhcpHosIpa_Type()
)
setDhcpHosIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosIpa.setStatus("current")


class _SetDhcpHosHos_Type(DisplayString):
    """Custom type setDhcpHosHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetDhcpHosHos_Type.__name__ = "DisplayString"
_SetDhcpHosHos_Object = MibTableColumn
setDhcpHosHos = _SetDhcpHosHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 3),
    _SetDhcpHosHos_Type()
)
setDhcpHosHos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosHos.setStatus("current")


class _SetDhcpHosIma_Type(DisplayString):
    """Custom type setDhcpHosIma based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpHosIma_Type.__name__ = "DisplayString"
_SetDhcpHosIma_Object = MibTableColumn
setDhcpHosIma = _SetDhcpHosIma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 4),
    _SetDhcpHosIma_Type()
)
setDhcpHosIma.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosIma.setStatus("current")


class _SetDhcpHosNet_Type(DisplayString):
    """Custom type setDhcpHosNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpHosNet_Type.__name__ = "DisplayString"
_SetDhcpHosNet_Object = MibTableColumn
setDhcpHosNet = _SetDhcpHosNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 9, 1, 5),
    _SetDhcpHosNet_Type()
)
setDhcpHosNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosNet.setStatus("current")
_SetDhcpAliTable_Object = MibTable
setDhcpAliTable = _SetDhcpAliTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10)
)
if mibBuilder.loadTexts:
    setDhcpAliTable.setStatus("current")
_SetDhcpAliEntry_Object = MibTableRow
setDhcpAliEntry = _SetDhcpAliEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1)
)
setDhcpAliEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDhcpAliImagea"),
)
if mibBuilder.loadTexts:
    setDhcpAliEntry.setStatus("current")


class _SetDhcpAliImagea_Type(DisplayString):
    """Custom type setDhcpAliImagea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpAliImagea_Type.__name__ = "DisplayString"
_SetDhcpAliImagea_Object = MibTableColumn
setDhcpAliImagea = _SetDhcpAliImagea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 1),
    _SetDhcpAliImagea_Type()
)
setDhcpAliImagea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAliImagea.setStatus("current")


class _SetDhcpAliImagef_Type(DisplayString):
    """Custom type setDhcpAliImagef based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 60),
    )


_SetDhcpAliImagef_Type.__name__ = "DisplayString"
_SetDhcpAliImagef_Object = MibTableColumn
setDhcpAliImagef = _SetDhcpAliImagef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 2),
    _SetDhcpAliImagef_Type()
)
setDhcpAliImagef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAliImagef.setStatus("current")
_SetDhcpAliImages_Type = IpAddress
_SetDhcpAliImages_Object = MibTableColumn
setDhcpAliImages = _SetDhcpAliImages_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 10, 1, 3),
    _SetDhcpAliImages_Type()
)
setDhcpAliImages.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAliImages.setStatus("current")
_SetDhcpPorTable_Object = MibTable
setDhcpPorTable = _SetDhcpPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18)
)
if mibBuilder.loadTexts:
    setDhcpPorTable.setStatus("current")
_SetDhcpPorEntry_Object = MibTableRow
setDhcpPorEntry = _SetDhcpPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1)
)
setDhcpPorEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDhcpPorPor"),
)
if mibBuilder.loadTexts:
    setDhcpPorEntry.setStatus("current")


class _SetDhcpPorPor_Type(DisplayString):
    """Custom type setDhcpPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetDhcpPorPor_Type.__name__ = "DisplayString"
_SetDhcpPorPor_Object = MibTableColumn
setDhcpPorPor = _SetDhcpPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1, 2),
    _SetDhcpPorPor_Type()
)
setDhcpPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpPorPor.setStatus("current")


class _SetDhcpPorEna_Type(Integer32):
    """Custom type setDhcpPorEna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpPorEna_Type.__name__ = "Integer32"
_SetDhcpPorEna_Object = MibTableColumn
setDhcpPorEna = _SetDhcpPorEna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 18, 1, 3),
    _SetDhcpPorEna_Type()
)
setDhcpPorEna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpPorEna.setStatus("current")


class _SetDhcpUse_Type(DisplayString):
    """Custom type setDhcpUse based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetDhcpUse_Type.__name__ = "DisplayString"
_SetDhcpUse_Object = MibScalar
setDhcpUse = _SetDhcpUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 19),
    _SetDhcpUse_Type()
)
setDhcpUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpUse.setStatus("current")
_SetDhcpNetTable_Object = MibTable
setDhcpNetTable = _SetDhcpNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20)
)
if mibBuilder.loadTexts:
    setDhcpNetTable.setStatus("current")
_SetDhcpNetEntry_Object = MibTableRow
setDhcpNetEntry = _SetDhcpNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1)
)
setDhcpNetEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDhcpNetNetworknam"),
)
if mibBuilder.loadTexts:
    setDhcpNetEntry.setStatus("current")


class _SetDhcpNetNetworknam_Type(DisplayString):
    """Custom type setDhcpNetNetworknam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpNetNetworknam_Type.__name__ = "DisplayString"
_SetDhcpNetNetworknam_Object = MibTableColumn
setDhcpNetNetworknam = _SetDhcpNetNetworknam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 1),
    _SetDhcpNetNetworknam_Type()
)
setDhcpNetNetworknam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNetworknam.setStatus("current")
_SetDhcpNetStartaddre_Type = IpAddress
_SetDhcpNetStartaddre_Object = MibTableColumn
setDhcpNetStartaddre = _SetDhcpNetStartaddre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 2),
    _SetDhcpNetStartaddre_Type()
)
setDhcpNetStartaddre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetStartaddre.setStatus("current")
_SetDhcpNetEndaddress_Type = IpAddress
_SetDhcpNetEndaddress_Object = MibTableColumn
setDhcpNetEndaddress = _SetDhcpNetEndaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 3),
    _SetDhcpNetEndaddress_Type()
)
setDhcpNetEndaddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetEndaddress.setStatus("current")
_SetDhcpNetNetmask_Type = IpAddress
_SetDhcpNetNetmask_Object = MibTableColumn
setDhcpNetNetmask = _SetDhcpNetNetmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 4),
    _SetDhcpNetNetmask_Type()
)
setDhcpNetNetmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNetmask.setStatus("current")
_SetDhcpNetBroadcasta_Type = IpAddress
_SetDhcpNetBroadcasta_Object = MibTableColumn
setDhcpNetBroadcasta = _SetDhcpNetBroadcasta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 5),
    _SetDhcpNetBroadcasta_Type()
)
setDhcpNetBroadcasta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetBroadcasta.setStatus("current")
_SetDhcpNetGatewayadd_Type = IpAddress
_SetDhcpNetGatewayadd_Object = MibTableColumn
setDhcpNetGatewayadd = _SetDhcpNetGatewayadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 6),
    _SetDhcpNetGatewayadd_Type()
)
setDhcpNetGatewayadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetGatewayadd.setStatus("current")
_SetDhcpNetDnsdefault_Type = IpAddress
_SetDhcpNetDnsdefault_Object = MibTableColumn
setDhcpNetDnsdefault = _SetDhcpNetDnsdefault_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 7),
    _SetDhcpNetDnsdefault_Type()
)
setDhcpNetDnsdefault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetDnsdefault.setStatus("current")
_SetDhcpNetDnsbackup_Type = IpAddress
_SetDhcpNetDnsbackup_Object = MibTableColumn
setDhcpNetDnsbackup = _SetDhcpNetDnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 8),
    _SetDhcpNetDnsbackup_Type()
)
setDhcpNetDnsbackup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetDnsbackup.setStatus("current")
_SetDhcpNetNbnsdefaul_Type = IpAddress
_SetDhcpNetNbnsdefaul_Object = MibTableColumn
setDhcpNetNbnsdefaul = _SetDhcpNetNbnsdefaul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 9),
    _SetDhcpNetNbnsdefaul_Type()
)
setDhcpNetNbnsdefaul.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNbnsdefaul.setStatus("current")
_SetDhcpNetNbnsbackup_Type = IpAddress
_SetDhcpNetNbnsbackup_Object = MibTableColumn
setDhcpNetNbnsbackup = _SetDhcpNetNbnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 10),
    _SetDhcpNetNbnsbackup_Type()
)
setDhcpNetNbnsbackup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNbnsbackup.setStatus("current")


class _SetDhcpNetOperating_Type(Integer32):
    """Custom type setDhcpNetOperating based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("client", 4),
          ("no", 0),
          ("relay", 16),
          ("yes", 1))
    )


_SetDhcpNetOperating_Type.__name__ = "Integer32"
_SetDhcpNetOperating_Object = MibTableColumn
setDhcpNetOperating = _SetDhcpNetOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 11),
    _SetDhcpNetOperating_Type()
)
setDhcpNetOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetOperating.setStatus("current")


class _SetDhcpNetBroadcastb_Type(Integer32):
    """Custom type setDhcpNetBroadcastb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpNetBroadcastb_Type.__name__ = "Integer32"
_SetDhcpNetBroadcastb_Object = MibTableColumn
setDhcpNetBroadcastb = _SetDhcpNetBroadcastb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 12),
    _SetDhcpNetBroadcastb_Type()
)
setDhcpNetBroadcastb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetBroadcastb.setStatus("current")
_SetDhcpNetMasterserv_Type = IpAddress
_SetDhcpNetMasterserv_Object = MibTableColumn
setDhcpNetMasterserv = _SetDhcpNetMasterserv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 13),
    _SetDhcpNetMasterserv_Type()
)
setDhcpNetMasterserv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetMasterserv.setStatus("current")


class _SetDhcpNetCache_Type(Integer32):
    """Custom type setDhcpNetCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpNetCache_Type.__name__ = "Integer32"
_SetDhcpNetCache_Object = MibTableColumn
setDhcpNetCache = _SetDhcpNetCache_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 14),
    _SetDhcpNetCache_Type()
)
setDhcpNetCache.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetCache.setStatus("current")


class _SetDhcpNetAdaption_Type(Integer32):
    """Custom type setDhcpNetAdaption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpNetAdaption_Type.__name__ = "Integer32"
_SetDhcpNetAdaption_Object = MibTableColumn
setDhcpNetAdaption = _SetDhcpNetAdaption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 20, 1, 15),
    _SetDhcpNetAdaption_Type()
)
setDhcpNetAdaption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetAdaption.setStatus("current")
_SetDhcpAddTable_Object = MibTable
setDhcpAddTable = _SetDhcpAddTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21)
)
if mibBuilder.loadTexts:
    setDhcpAddTable.setStatus("current")
_SetDhcpAddEntry_Object = MibTableRow
setDhcpAddEntry = _SetDhcpAddEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1)
)
setDhcpAddEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDhcpAddOptionn"),
    (0, "LANCOM-1711-MIB", "setDhcpAddNetwork"),
)
if mibBuilder.loadTexts:
    setDhcpAddEntry.setStatus("current")


class _SetDhcpAddOptionn_Type(Integer32):
    """Custom type setDhcpAddOptionn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetDhcpAddOptionn_Type.__name__ = "Integer32"
_SetDhcpAddOptionn_Object = MibTableColumn
setDhcpAddOptionn = _SetDhcpAddOptionn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 1),
    _SetDhcpAddOptionn_Type()
)
setDhcpAddOptionn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddOptionn.setStatus("current")


class _SetDhcpAddNetwork_Type(DisplayString):
    """Custom type setDhcpAddNetwork based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpAddNetwork_Type.__name__ = "DisplayString"
_SetDhcpAddNetwork_Object = MibTableColumn
setDhcpAddNetwork = _SetDhcpAddNetwork_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 2),
    _SetDhcpAddNetwork_Type()
)
setDhcpAddNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddNetwork.setStatus("current")


class _SetDhcpAddOptionv_Type(DisplayString):
    """Custom type setDhcpAddOptionv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SetDhcpAddOptionv_Type.__name__ = "DisplayString"
_SetDhcpAddOptionv_Object = MibTableColumn
setDhcpAddOptionv = _SetDhcpAddOptionv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 3),
    _SetDhcpAddOptionv_Type()
)
setDhcpAddOptionv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddOptionv.setStatus("current")


class _SetDhcpAddOptiont_Type(Integer32):
    """Custom type setDhcpAddOptiont based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("integer16", 3),
          ("integer32", 1),
          ("integer8", 4),
          ("ip-address", 2),
          ("string", 0))
    )


_SetDhcpAddOptiont_Type.__name__ = "Integer32"
_SetDhcpAddOptiont_Object = MibTableColumn
setDhcpAddOptiont = _SetDhcpAddOptiont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 10, 21, 1, 4),
    _SetDhcpAddOptiont_Type()
)
setDhcpAddOptiont.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddOptiont.setStatus("current")
_SetConf_ObjectIdentity = ObjectIdentity
setConf = _SetConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11)
)
_SetConfLan_Type = Integer32
_SetConfLan_Object = MibScalar
setConfLan = _SetConfLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 1),
    _SetConfLan_Type()
)
setConfLan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setConfLan.setStatus("current")
_SetConfWan_Type = Integer32
_SetConfWan_Object = MibScalar
setConfWan = _SetConfWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 2),
    _SetConfWan_Type()
)
setConfWan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setConfWan.setStatus("current")


class _SetConfPasswor_Type(Integer32):
    """Custom type setConfPasswor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetConfPasswor_Type.__name__ = "Integer32"
_SetConfPasswor_Object = MibScalar
setConfPasswor = _SetConfPasswor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 3),
    _SetConfPasswor_Type()
)
setConfPasswor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfPasswor.setStatus("current")
_SetConfMaximum_Type = Integer32
_SetConfMaximum_Object = MibScalar
setConfMaximum = _SetConfMaximum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 4),
    _SetConfMaximum_Type()
)
setConfMaximum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfMaximum.setStatus("current")
_SetConfConfiga_Type = Integer32
_SetConfConfiga_Object = MibScalar
setConfConfiga = _SetConfConfiga_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 5),
    _SetConfConfiga_Type()
)
setConfConfiga.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfConfiga.setStatus("current")


class _SetConfLanguag_Type(Integer32):
    """Custom type setConfLanguag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deutsch", 2),
          ("english", 1))
    )


_SetConfLanguag_Type.__name__ = "Integer32"
_SetConfLanguag_Object = MibScalar
setConfLanguag = _SetConfLanguag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 6),
    _SetConfLanguag_Type()
)
setConfLanguag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfLanguag.setStatus("current")
_SetConfLoginer_Type = Integer32
_SetConfLoginer_Object = MibScalar
setConfLoginer = _SetConfLoginer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 7),
    _SetConfLoginer_Type()
)
setConfLoginer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfLoginer.setStatus("current")
_SetConfLockmin_Type = Integer32
_SetConfLockmin_Object = MibScalar
setConfLockmin = _SetConfLockmin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 8),
    _SetConfLockmin_Type()
)
setConfLockmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfLockmin.setStatus("current")


class _SetConfAdminea_Type(DisplayString):
    """Custom type setConfAdminea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfAdminea_Type.__name__ = "DisplayString"
_SetConfAdminea_Object = MibScalar
setConfAdminea = _SetConfAdminea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 9),
    _SetConfAdminea_Type()
)
setConfAdminea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminea.setStatus("current")
_SetConfTftpcli_ObjectIdentity = ObjectIdentity
setConfTftpcli = _SetConfTftpcli_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13)
)


class _SetConfTftpcliConfigadd_Type(DisplayString):
    """Custom type setConfTftpcliConfigadd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfTftpcliConfigadd_Type.__name__ = "DisplayString"
_SetConfTftpcliConfigadd_Object = MibScalar
setConfTftpcliConfigadd = _SetConfTftpcliConfigadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 1),
    _SetConfTftpcliConfigadd_Type()
)
setConfTftpcliConfigadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliConfigadd.setStatus("current")


class _SetConfTftpcliConfigfil_Type(DisplayString):
    """Custom type setConfTftpcliConfigfil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetConfTftpcliConfigfil_Type.__name__ = "DisplayString"
_SetConfTftpcliConfigfil_Object = MibScalar
setConfTftpcliConfigfil = _SetConfTftpcliConfigfil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 2),
    _SetConfTftpcliConfigfil_Type()
)
setConfTftpcliConfigfil.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliConfigfil.setStatus("current")


class _SetConfTftpcliFirmwarea_Type(DisplayString):
    """Custom type setConfTftpcliFirmwarea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfTftpcliFirmwarea_Type.__name__ = "DisplayString"
_SetConfTftpcliFirmwarea_Object = MibScalar
setConfTftpcliFirmwarea = _SetConfTftpcliFirmwarea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 3),
    _SetConfTftpcliFirmwarea_Type()
)
setConfTftpcliFirmwarea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliFirmwarea.setStatus("current")


class _SetConfTftpcliFirmwaref_Type(DisplayString):
    """Custom type setConfTftpcliFirmwaref based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetConfTftpcliFirmwaref_Type.__name__ = "DisplayString"
_SetConfTftpcliFirmwaref_Object = MibScalar
setConfTftpcliFirmwaref = _SetConfTftpcliFirmwaref_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 4),
    _SetConfTftpcliFirmwaref_Type()
)
setConfTftpcliFirmwaref.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliFirmwaref.setStatus("current")
_SetConfTftpcliBytesperh_Type = Integer32
_SetConfTftpcliBytesperh_Object = MibScalar
setConfTftpcliBytesperh = _SetConfTftpcliBytesperh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 5),
    _SetConfTftpcliBytesperh_Type()
)
setConfTftpcliBytesperh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliBytesperh.setStatus("current")


class _SetConfTftpcliScriptadd_Type(DisplayString):
    """Custom type setConfTftpcliScriptadd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfTftpcliScriptadd_Type.__name__ = "DisplayString"
_SetConfTftpcliScriptadd_Object = MibScalar
setConfTftpcliScriptadd = _SetConfTftpcliScriptadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 6),
    _SetConfTftpcliScriptadd_Type()
)
setConfTftpcliScriptadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliScriptadd.setStatus("current")


class _SetConfTftpcliScriptfil_Type(DisplayString):
    """Custom type setConfTftpcliScriptfil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetConfTftpcliScriptfil_Type.__name__ = "DisplayString"
_SetConfTftpcliScriptfil_Object = MibScalar
setConfTftpcliScriptfil = _SetConfTftpcliScriptfil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 13, 7),
    _SetConfTftpcliScriptfil_Type()
)
setConfTftpcliScriptfil.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTftpcliScriptfil.setStatus("current")
_SetConfAccesstTable_Object = MibTable
setConfAccesstTable = _SetConfAccesstTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15)
)
if mibBuilder.loadTexts:
    setConfAccesstTable.setStatus("current")
_SetConfAccesstEntry_Object = MibTableRow
setConfAccesstEntry = _SetConfAccesstEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1)
)
setConfAccesstEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setConfAccesstIfc"),
)
if mibBuilder.loadTexts:
    setConfAccesstEntry.setStatus("current")


class _SetConfAccesstIfc_Type(Integer32):
    """Custom type setConfAccesstIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lan", 1),
          ("wan", 2))
    )


_SetConfAccesstIfc_Type.__name__ = "Integer32"
_SetConfAccesstIfc_Object = MibTableColumn
setConfAccesstIfc = _SetConfAccesstIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 1),
    _SetConfAccesstIfc_Type()
)
setConfAccesstIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfAccesstIfc.setStatus("current")


class _SetConfAccesstTelnet_Type(Integer32):
    """Custom type setConfAccesstTelnet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstTelnet_Type.__name__ = "Integer32"
_SetConfAccesstTelnet_Object = MibTableColumn
setConfAccesstTelnet = _SetConfAccesstTelnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 2),
    _SetConfAccesstTelnet_Type()
)
setConfAccesstTelnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstTelnet.setStatus("current")


class _SetConfAccesstTftp_Type(Integer32):
    """Custom type setConfAccesstTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstTftp_Type.__name__ = "Integer32"
_SetConfAccesstTftp_Object = MibTableColumn
setConfAccesstTftp = _SetConfAccesstTftp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 3),
    _SetConfAccesstTftp_Type()
)
setConfAccesstTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstTftp.setStatus("current")


class _SetConfAccesstHttp_Type(Integer32):
    """Custom type setConfAccesstHttp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstHttp_Type.__name__ = "Integer32"
_SetConfAccesstHttp_Object = MibTableColumn
setConfAccesstHttp = _SetConfAccesstHttp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 4),
    _SetConfAccesstHttp_Type()
)
setConfAccesstHttp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstHttp.setStatus("current")


class _SetConfAccesstSnmp_Type(Integer32):
    """Custom type setConfAccesstSnmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstSnmp_Type.__name__ = "Integer32"
_SetConfAccesstSnmp_Object = MibTableColumn
setConfAccesstSnmp = _SetConfAccesstSnmp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 5),
    _SetConfAccesstSnmp_Type()
)
setConfAccesstSnmp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstSnmp.setStatus("current")


class _SetConfAccesstHttps_Type(Integer32):
    """Custom type setConfAccesstHttps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstHttps_Type.__name__ = "Integer32"
_SetConfAccesstHttps_Object = MibTableColumn
setConfAccesstHttps = _SetConfAccesstHttps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 6),
    _SetConfAccesstHttps_Type()
)
setConfAccesstHttps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstHttps.setStatus("current")


class _SetConfAccesstTelnets_Type(Integer32):
    """Custom type setConfAccesstTelnets based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstTelnets_Type.__name__ = "Integer32"
_SetConfAccesstTelnets_Object = MibTableColumn
setConfAccesstTelnets = _SetConfAccesstTelnets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 7),
    _SetConfAccesstTelnets_Type()
)
setConfAccesstTelnets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstTelnets.setStatus("current")


class _SetConfAccesstSsh_Type(Integer32):
    """Custom type setConfAccesstSsh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("vpn", 16),
          ("yes", 1))
    )


_SetConfAccesstSsh_Type.__name__ = "Integer32"
_SetConfAccesstSsh_Object = MibTableColumn
setConfAccesstSsh = _SetConfAccesstSsh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 15, 1, 8),
    _SetConfAccesstSsh_Type()
)
setConfAccesstSsh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAccesstSsh.setStatus("current")
_SetConfScreenh_Type = Integer32
_SetConfScreenh_Object = MibScalar
setConfScreenh = _SetConfScreenh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 16),
    _SetConfScreenh_Type()
)
setConfScreenh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfScreenh.setStatus("current")


class _SetConfPrompt_Type(DisplayString):
    """Custom type setConfPrompt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfPrompt_Type.__name__ = "DisplayString"
_SetConfPrompt_Object = MibScalar
setConfPrompt = _SetConfPrompt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 17),
    _SetConfPrompt_Type()
)
setConfPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfPrompt.setStatus("current")


class _SetConfLedtest_Type(Integer32):
    """Custom type setConfLedtest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("green", 2),
          ("no-test", 255),
          ("off", 0),
          ("red", 1))
    )


_SetConfLedtest_Type.__name__ = "Integer32"
_SetConfLedtest_Object = MibScalar
setConfLedtest = _SetConfLedtest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 18),
    _SetConfLedtest_Type()
)
setConfLedtest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfLedtest.setStatus("current")
_SetConfCrontabTable_Object = MibTable
setConfCrontabTable = _SetConfCrontabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20)
)
if mibBuilder.loadTexts:
    setConfCrontabTable.setStatus("current")
_SetConfCrontabEntry_Object = MibTableRow
setConfCrontabEntry = _SetConfCrontabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1)
)
setConfCrontabEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setConfCrontabInde"),
)
if mibBuilder.loadTexts:
    setConfCrontabEntry.setStatus("current")


class _SetConfCrontabInde_Type(Integer32):
    """Custom type setConfCrontabInde based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetConfCrontabInde_Type.__name__ = "Integer32"
_SetConfCrontabInde_Object = MibTableColumn
setConfCrontabInde = _SetConfCrontabInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 1),
    _SetConfCrontabInde_Type()
)
setConfCrontabInde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabInde.setStatus("current")


class _SetConfCrontabMinu_Type(DisplayString):
    """Custom type setConfCrontabMinu based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfCrontabMinu_Type.__name__ = "DisplayString"
_SetConfCrontabMinu_Object = MibTableColumn
setConfCrontabMinu = _SetConfCrontabMinu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 2),
    _SetConfCrontabMinu_Type()
)
setConfCrontabMinu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabMinu.setStatus("current")


class _SetConfCrontabHour_Type(DisplayString):
    """Custom type setConfCrontabHour based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfCrontabHour_Type.__name__ = "DisplayString"
_SetConfCrontabHour_Object = MibTableColumn
setConfCrontabHour = _SetConfCrontabHour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 3),
    _SetConfCrontabHour_Type()
)
setConfCrontabHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabHour.setStatus("current")


class _SetConfCrontabDayo_Type(DisplayString):
    """Custom type setConfCrontabDayo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfCrontabDayo_Type.__name__ = "DisplayString"
_SetConfCrontabDayo_Object = MibTableColumn
setConfCrontabDayo = _SetConfCrontabDayo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 4),
    _SetConfCrontabDayo_Type()
)
setConfCrontabDayo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabDayo.setStatus("current")


class _SetConfCrontabDay_Type(DisplayString):
    """Custom type setConfCrontabDay based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfCrontabDay_Type.__name__ = "DisplayString"
_SetConfCrontabDay_Object = MibTableColumn
setConfCrontabDay = _SetConfCrontabDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 5),
    _SetConfCrontabDay_Type()
)
setConfCrontabDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabDay.setStatus("current")


class _SetConfCrontabMont_Type(DisplayString):
    """Custom type setConfCrontabMont based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfCrontabMont_Type.__name__ = "DisplayString"
_SetConfCrontabMont_Object = MibTableColumn
setConfCrontabMont = _SetConfCrontabMont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 6),
    _SetConfCrontabMont_Type()
)
setConfCrontabMont.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabMont.setStatus("current")


class _SetConfCrontabComm_Type(DisplayString):
    """Custom type setConfCrontabComm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_SetConfCrontabComm_Type.__name__ = "DisplayString"
_SetConfCrontabComm_Object = MibTableColumn
setConfCrontabComm = _SetConfCrontabComm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 7),
    _SetConfCrontabComm_Type()
)
setConfCrontabComm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabComm.setStatus("current")


class _SetConfCrontabBase_Type(Integer32):
    """Custom type setConfCrontabBase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("operation-time", 1),
          ("real-time", 0))
    )


_SetConfCrontabBase_Type.__name__ = "Integer32"
_SetConfCrontabBase_Object = MibTableColumn
setConfCrontabBase = _SetConfCrontabBase_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 8),
    _SetConfCrontabBase_Type()
)
setConfCrontabBase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabBase.setStatus("current")


class _SetConfCrontabActi_Type(Integer32):
    """Custom type setConfCrontabActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetConfCrontabActi_Type.__name__ = "Integer32"
_SetConfCrontabActi_Object = MibTableColumn
setConfCrontabActi = _SetConfCrontabActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 9),
    _SetConfCrontabActi_Type()
)
setConfCrontabActi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabActi.setStatus("current")


class _SetConfCrontabOwne_Type(DisplayString):
    """Custom type setConfCrontabOwne based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetConfCrontabOwne_Type.__name__ = "DisplayString"
_SetConfCrontabOwne_Object = MibTableColumn
setConfCrontabOwne = _SetConfCrontabOwne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 10),
    _SetConfCrontabOwne_Type()
)
setConfCrontabOwne.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabOwne.setStatus("current")


class _SetConfCrontabVari_Type(Integer32):
    """Custom type setConfCrontabVari based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetConfCrontabVari_Type.__name__ = "Integer32"
_SetConfCrontabVari_Object = MibTableColumn
setConfCrontabVari = _SetConfCrontabVari_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 20, 1, 11),
    _SetConfCrontabVari_Type()
)
setConfCrontabVari.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrontabVari.setStatus("current")
_SetConfAdminsTable_Object = MibTable
setConfAdminsTable = _SetConfAdminsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21)
)
if mibBuilder.loadTexts:
    setConfAdminsTable.setStatus("current")
_SetConfAdminsEntry_Object = MibTableRow
setConfAdminsEntry = _SetConfAdminsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1)
)
setConfAdminsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setConfAdminsAdm"),
)
if mibBuilder.loadTexts:
    setConfAdminsEntry.setStatus("current")


class _SetConfAdminsAdm_Type(DisplayString):
    """Custom type setConfAdminsAdm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetConfAdminsAdm_Type.__name__ = "DisplayString"
_SetConfAdminsAdm_Object = MibTableColumn
setConfAdminsAdm = _SetConfAdminsAdm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 1),
    _SetConfAdminsAdm_Type()
)
setConfAdminsAdm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminsAdm.setStatus("current")


class _SetConfAdminsPas_Type(DisplayString):
    """Custom type setConfAdminsPas based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetConfAdminsPas_Type.__name__ = "DisplayString"
_SetConfAdminsPas_Object = MibTableColumn
setConfAdminsPas = _SetConfAdminsPas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 2),
    _SetConfAdminsPas_Type()
)
setConfAdminsPas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminsPas.setStatus("current")


class _SetConfAdminsFun_Type(Bits):
    """Custom type setConfAdminsFun based on Bits"""
    namedValues = NamedValues(
        *(("basic-wizard", 31),
          ("device-search", 24),
          ("dynamic-dns-wizard", 17),
          ("internet-wizard", 29),
          ("lanlan-wizard", 26),
          ("provider-selection", 28),
          ("ras-wizard", 27),
          ("rollout-wizard", 18),
          ("security-wizard", 30),
          ("time-setting", 25))
    )

_SetConfAdminsFun_Type.__name__ = "Bits"
_SetConfAdminsFun_Object = MibTableColumn
setConfAdminsFun = _SetConfAdminsFun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 3),
    _SetConfAdminsFun_Type()
)
setConfAdminsFun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminsFun.setStatus("current")


class _SetConfAdminsAct_Type(Integer32):
    """Custom type setConfAdminsAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetConfAdminsAct_Type.__name__ = "Integer32"
_SetConfAdminsAct_Object = MibTableColumn
setConfAdminsAct = _SetConfAdminsAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 4),
    _SetConfAdminsAct_Type()
)
setConfAdminsAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminsAct.setStatus("current")


class _SetConfAdminsAcc_Type(Integer32):
    """Custom type setConfAdminsAcc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              8388608,
              8388864,
              16777216,
              16777472)
        )
    )
    namedValues = NamedValues(
        *(("admin-ro", 16777216),
          ("admin-ro-limit", 8388608),
          ("admin-rw", 16777472),
          ("admin-rw-limit", 8388864),
          ("none", 0),
          ("supervisor", -1))
    )


_SetConfAdminsAcc_Type.__name__ = "Integer32"
_SetConfAdminsAcc_Object = MibTableColumn
setConfAdminsAcc = _SetConfAdminsAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 21, 1, 5),
    _SetConfAdminsAcc_Type()
)
setConfAdminsAcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminsAcc.setStatus("current")
_SetConfTelnetp_Type = Integer32
_SetConfTelnetp_Object = MibScalar
setConfTelnetp = _SetConfTelnetp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 23),
    _SetConfTelnetp_Type()
)
setConfTelnetp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTelnetp.setStatus("current")
_SetConfTelnets_Type = Integer32
_SetConfTelnets_Object = MibScalar
setConfTelnets = _SetConfTelnets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 24),
    _SetConfTelnets_Type()
)
setConfTelnets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfTelnets.setStatus("current")
_SetConfSshport_Type = Integer32
_SetConfSshport_Object = MibScalar
setConfSshport = _SetConfSshport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 25),
    _SetConfSshport_Type()
)
setConfSshport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfSshport.setStatus("current")
_SetConfSshauthTable_Object = MibTable
setConfSshauthTable = _SetConfSshauthTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26)
)
if mibBuilder.loadTexts:
    setConfSshauthTable.setStatus("current")
_SetConfSshauthEntry_Object = MibTableRow
setConfSshauthEntry = _SetConfSshauthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1)
)
setConfSshauthEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setConfSshauthIfc"),
)
if mibBuilder.loadTexts:
    setConfSshauthEntry.setStatus("current")


class _SetConfSshauthIfc_Type(Integer32):
    """Custom type setConfSshauthIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lan", 1),
          ("wan", 2))
    )


_SetConfSshauthIfc_Type.__name__ = "Integer32"
_SetConfSshauthIfc_Object = MibTableColumn
setConfSshauthIfc = _SetConfSshauthIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1, 1),
    _SetConfSshauthIfc_Type()
)
setConfSshauthIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfSshauthIfc.setStatus("current")


class _SetConfSshauthMet_Type(Integer32):
    """Custom type setConfSshauthMet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("all", 255),
          ("password", 2),
          ("public-key", 1))
    )


_SetConfSshauthMet_Type.__name__ = "Integer32"
_SetConfSshauthMet_Object = MibTableColumn
setConfSshauthMet = _SetConfSshauthMet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 26, 1, 2),
    _SetConfSshauthMet_Type()
)
setConfSshauthMet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfSshauthMet.setStatus("current")
_SetConfPredefaTable_Object = MibTable
setConfPredefaTable = _SetConfPredefaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27)
)
if mibBuilder.loadTexts:
    setConfPredefaTable.setStatus("current")
_SetConfPredefaEntry_Object = MibTableRow
setConfPredefaEntry = _SetConfPredefaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27, 1)
)
setConfPredefaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setConfPredefaNam"),
)
if mibBuilder.loadTexts:
    setConfPredefaEntry.setStatus("current")


class _SetConfPredefaNam_Type(DisplayString):
    """Custom type setConfPredefaNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetConfPredefaNam_Type.__name__ = "DisplayString"
_SetConfPredefaNam_Object = MibTableColumn
setConfPredefaNam = _SetConfPredefaNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 27, 1, 1),
    _SetConfPredefaNam_Type()
)
setConfPredefaNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfPredefaNam.setStatus("current")
_SetConfUpdatec_ObjectIdentity = ObjectIdentity
setConfUpdatec = _SetConfUpdatec_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30)
)


class _SetConfUpdatecOperati_Type(Integer32):
    """Custom type setConfUpdatecOperati based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetConfUpdatecOperati_Type.__name__ = "Integer32"
_SetConfUpdatecOperati_Object = MibScalar
setConfUpdatecOperati = _SetConfUpdatecOperati_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 1),
    _SetConfUpdatecOperati_Type()
)
setConfUpdatecOperati.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfUpdatecOperati.setStatus("current")


class _SetConfUpdatecServern_Type(DisplayString):
    """Custom type setConfUpdatecServern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetConfUpdatecServern_Type.__name__ = "DisplayString"
_SetConfUpdatecServern_Object = MibScalar
setConfUpdatecServern = _SetConfUpdatecServern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 2),
    _SetConfUpdatecServern_Type()
)
setConfUpdatecServern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfUpdatecServern.setStatus("current")
_SetConfUpdatecServerp_Type = Integer32
_SetConfUpdatecServerp_Object = MibScalar
setConfUpdatecServerp = _SetConfUpdatecServerp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 3),
    _SetConfUpdatecServerp_Type()
)
setConfUpdatecServerp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfUpdatecServerp.setStatus("current")
_SetConfUpdatecRespons_Type = Integer32
_SetConfUpdatecRespons_Object = MibScalar
setConfUpdatecRespons = _SetConfUpdatecRespons_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 4),
    _SetConfUpdatecRespons_Type()
)
setConfUpdatecRespons.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfUpdatecRespons.setStatus("current")
_SetConfUpdatecRetryfa_Type = Integer32
_SetConfUpdatecRetryfa_Object = MibScalar
setConfUpdatecRetryfa = _SetConfUpdatecRetryfa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 5),
    _SetConfUpdatecRetryfa_Type()
)
setConfUpdatecRetryfa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfUpdatecRetryfa.setStatus("current")
_SetConfUpdatecRetryok_Type = Integer32
_SetConfUpdatecRetryok_Object = MibScalar
setConfUpdatecRetryok = _SetConfUpdatecRetryok_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 6),
    _SetConfUpdatecRetryok_Type()
)
setConfUpdatecRetryok.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfUpdatecRetryok.setStatus("current")


class _SetConfUpdatecLastfir_Type(DisplayString):
    """Custom type setConfUpdatecLastfir based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_SetConfUpdatecLastfir_Type.__name__ = "DisplayString"
_SetConfUpdatecLastfir_Object = MibScalar
setConfUpdatecLastfir = _SetConfUpdatecLastfir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 7),
    _SetConfUpdatecLastfir_Type()
)
setConfUpdatecLastfir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfUpdatecLastfir.setStatus("current")


class _SetConfUpdatecLastcon_Type(DisplayString):
    """Custom type setConfUpdatecLastcon based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_SetConfUpdatecLastcon_Type.__name__ = "DisplayString"
_SetConfUpdatecLastcon_Object = MibScalar
setConfUpdatecLastcon = _SetConfUpdatecLastcon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 30, 8),
    _SetConfUpdatecLastcon_Type()
)
setConfUpdatecLastcon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfUpdatecLastcon.setStatus("current")
_SetConfAntithe_ObjectIdentity = ObjectIdentity
setConfAntithe = _SetConfAntithe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31)
)


class _SetConfAntitheEna_Type(Integer32):
    """Custom type setConfAntitheEna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetConfAntitheEna_Type.__name__ = "Integer32"
_SetConfAntitheEna_Object = MibScalar
setConfAntitheEna = _SetConfAntitheEna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 1),
    _SetConfAntitheEna_Type()
)
setConfAntitheEna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAntitheEna.setStatus("current")


class _SetConfAntitheCal_Type(DisplayString):
    """Custom type setConfAntitheCal based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SetConfAntitheCal_Type.__name__ = "DisplayString"
_SetConfAntitheCal_Object = MibScalar
setConfAntitheCal = _SetConfAntitheCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 2),
    _SetConfAntitheCal_Type()
)
setConfAntitheCal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAntitheCal.setStatus("current")


class _SetConfAntitheOut_Type(DisplayString):
    """Custom type setConfAntitheOut based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SetConfAntitheOut_Type.__name__ = "DisplayString"
_SetConfAntitheOut_Object = MibScalar
setConfAntitheOut = _SetConfAntitheOut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 3),
    _SetConfAntitheOut_Type()
)
setConfAntitheOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAntitheOut.setStatus("current")


class _SetConfAntitheChe_Type(DisplayString):
    """Custom type setConfAntitheChe based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SetConfAntitheChe_Type.__name__ = "DisplayString"
_SetConfAntitheChe_Object = MibScalar
setConfAntitheChe = _SetConfAntitheChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 4),
    _SetConfAntitheChe_Type()
)
setConfAntitheChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAntitheChe.setStatus("current")


class _SetConfAntitheMet_Type(Integer32):
    """Custom type setConfAntitheMet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic-call", 0),
          ("facility", 1))
    )


_SetConfAntitheMet_Type.__name__ = "Integer32"
_SetConfAntitheMet_Object = MibScalar
setConfAntitheMet = _SetConfAntitheMet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 6),
    _SetConfAntitheMet_Type()
)
setConfAntitheMet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAntitheMet.setStatus("current")


class _SetConfAntitheIsd_Type(Integer32):
    """Custom type setConfAntitheIsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("s0-1", 1)
    )


_SetConfAntitheIsd_Type.__name__ = "Integer32"
_SetConfAntitheIsd_Object = MibScalar
setConfAntitheIsd = _SetConfAntitheIsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 31, 7),
    _SetConfAntitheIsd_Type()
)
setConfAntitheIsd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAntitheIsd.setStatus("current")


class _SetConfResetbu_Type(Integer32):
    """Custom type setConfResetbu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("boot-only", 1),
          ("ignore", 0),
          ("reset-or-boot", 2))
    )


_SetConfResetbu_Type.__name__ = "Integer32"
_SetConfResetbu_Object = MibScalar
setConfResetbu = _SetConfResetbu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 32),
    _SetConfResetbu_Type()
)
setConfResetbu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfResetbu.setStatus("current")
_SetConfOutband_Type = Integer32
_SetConfOutband_Object = MibScalar
setConfOutband = _SetConfOutband_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 33),
    _SetConfOutband_Type()
)
setConfOutband.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfOutband.setStatus("current")
_SetConfMonitor_ObjectIdentity = ObjectIdentity
setConfMonitor = _SetConfMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35)
)
_SetConfMonitorTracemask1_Type = Integer32
_SetConfMonitorTracemask1_Object = MibScalar
setConfMonitorTracemask1 = _SetConfMonitorTracemask1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35, 1),
    _SetConfMonitorTracemask1_Type()
)
setConfMonitorTracemask1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfMonitorTracemask1.setStatus("current")
_SetConfMonitorTracemask2_Type = Integer32
_SetConfMonitorTracemask2_Object = MibScalar
setConfMonitorTracemask2 = _SetConfMonitorTracemask2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 35, 2),
    _SetConfMonitorTracemask2_Type()
)
setConfMonitorTracemask2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfMonitorTracemask2.setStatus("current")


class _SetConfCrashme_Type(DisplayString):
    """Custom type setConfCrashme based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetConfCrashme_Type.__name__ = "DisplayString"
_SetConfCrashme_Object = MibScalar
setConfCrashme = _SetConfCrashme_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 40),
    _SetConfCrashme_Type()
)
setConfCrashme.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfCrashme.setStatus("current")


class _SetConfAdminge_Type(Integer32):
    """Custom type setConfAdminge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("female", 2),
          ("geek", 3),
          ("male", 1),
          ("unknown", 0))
    )


_SetConfAdminge_Type.__name__ = "Integer32"
_SetConfAdminge_Object = MibScalar
setConfAdminge = _SetConfAdminge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 41),
    _SetConfAdminge_Type()
)
setConfAdminge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAdminge.setStatus("current")


class _SetConfAsserta_Type(Integer32):
    """Custom type setConfAsserta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("log-only", 0),
          ("reboot", 1))
    )


_SetConfAsserta_Type.__name__ = "Integer32"
_SetConfAsserta_Object = MibScalar
setConfAsserta = _SetConfAsserta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 42),
    _SetConfAsserta_Type()
)
setConfAsserta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfAsserta.setStatus("current")
_SetConfFunctioTable_Object = MibTable
setConfFunctioTable = _SetConfFunctioTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43)
)
if mibBuilder.loadTexts:
    setConfFunctioTable.setStatus("current")
_SetConfFunctioEntry_Object = MibTableRow
setConfFunctioEntry = _SetConfFunctioEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1)
)
setConfFunctioEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setConfFunctioKey"),
)
if mibBuilder.loadTexts:
    setConfFunctioEntry.setStatus("current")


class _SetConfFunctioKey_Type(Integer32):
    """Custom type setConfFunctioKey based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("f1", 1),
          ("f10", 10),
          ("f11", 11),
          ("f12", 12),
          ("f2", 2),
          ("f3", 3),
          ("f4", 4),
          ("f5", 5),
          ("f6", 6),
          ("f7", 7),
          ("f8", 8),
          ("f9", 9))
    )


_SetConfFunctioKey_Type.__name__ = "Integer32"
_SetConfFunctioKey_Object = MibTableColumn
setConfFunctioKey = _SetConfFunctioKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1, 1),
    _SetConfFunctioKey_Type()
)
setConfFunctioKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfFunctioKey.setStatus("current")


class _SetConfFunctioMap_Type(DisplayString):
    """Custom type setConfFunctioMap based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 99),
    )


_SetConfFunctioMap_Type.__name__ = "DisplayString"
_SetConfFunctioMap_Object = MibTableColumn
setConfFunctioMap = _SetConfFunctioMap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 43, 1, 2),
    _SetConfFunctioMap_Type()
)
setConfFunctioMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfFunctioMap.setStatus("current")
_SetConfLl2m_ObjectIdentity = ObjectIdentity
setConfLl2m = _SetConfLl2m_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50)
)


class _SetConfLl2mOpe_Type(Integer32):
    """Custom type setConfLl2mOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetConfLl2mOpe_Type.__name__ = "Integer32"
_SetConfLl2mOpe_Object = MibScalar
setConfLl2mOpe = _SetConfLl2mOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50, 1),
    _SetConfLl2mOpe_Type()
)
setConfLl2mOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfLl2mOpe.setStatus("current")
_SetConfLl2mTim_Type = Integer32
_SetConfLl2mTim_Object = MibScalar
setConfLl2mTim = _SetConfLl2mTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 11, 50, 2),
    _SetConfLl2mTim_Type()
)
setConfLl2mTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfLl2mTim.setStatus("current")
_SetLanc_ObjectIdentity = ObjectIdentity
setLanc = _SetLanc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13)
)
_SetLancAccTable_Object = MibTable
setLancAccTable = _SetLancAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1)
)
if mibBuilder.loadTexts:
    setLancAccTable.setStatus("current")
_SetLancAccEntry_Object = MibTableRow
setLancAccEntry = _SetLancAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1)
)
setLancAccEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setLancAccIpa"),
    (0, "LANCOM-1711-MIB", "setLancAccIpn"),
    (0, "LANCOM-1711-MIB", "setLancAccRtg"),
)
if mibBuilder.loadTexts:
    setLancAccEntry.setStatus("current")
_SetLancAccIpa_Type = IpAddress
_SetLancAccIpa_Object = MibTableColumn
setLancAccIpa = _SetLancAccIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 1),
    _SetLancAccIpa_Type()
)
setLancAccIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancAccIpa.setStatus("current")
_SetLancAccIpn_Type = IpAddress
_SetLancAccIpn_Object = MibTableColumn
setLancAccIpn = _SetLancAccIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 2),
    _SetLancAccIpn_Type()
)
setLancAccIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancAccIpn.setStatus("current")


class _SetLancAccRtg_Type(Integer32):
    """Custom type setLancAccRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLancAccRtg_Type.__name__ = "Integer32"
_SetLancAccRtg_Object = MibTableColumn
setLancAccRtg = _SetLancAccRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 1, 1, 3),
    _SetLancAccRtg_Type()
)
setLancAccRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancAccRtg.setStatus("current")
_SetLancUdp_Type = Integer32
_SetLancUdp_Object = MibScalar
setLancUdp = _SetLancUdp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 3),
    _SetLancUdp_Type()
)
setLancUdp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancUdp.setStatus("current")
_SetLancIntTable_Object = MibTable
setLancIntTable = _SetLancIntTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6)
)
if mibBuilder.loadTexts:
    setLancIntTable.setStatus("current")
_SetLancIntEntry_Object = MibTableRow
setLancIntEntry = _SetLancIntEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1)
)
setLancIntEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setLancIntIfc"),
)
if mibBuilder.loadTexts:
    setLancIntEntry.setStatus("current")


class _SetLancIntIfc_Type(Integer32):
    """Custom type setLancIntIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("s0-1", 1)
    )


_SetLancIntIfc_Type.__name__ = "Integer32"
_SetLancIntIfc_Object = MibTableColumn
setLancIntIfc = _SetLancIntIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 1),
    _SetLancIntIfc_Type()
)
setLancIntIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLancIntIfc.setStatus("current")


class _SetLancIntOpe_Type(Integer32):
    """Custom type setLancIntOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dial-in-only", 3),
          ("dial-only", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetLancIntOpe_Type.__name__ = "Integer32"
_SetLancIntOpe_Object = MibTableColumn
setLancIntOpe = _SetLancIntOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 2),
    _SetLancIntOpe_Type()
)
setLancIntOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancIntOpe.setStatus("current")


class _SetLancIntEaz_Type(DisplayString):
    """Custom type setLancIntEaz based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetLancIntEaz_Type.__name__ = "DisplayString"
_SetLancIntEaz_Object = MibTableColumn
setLancIntEaz = _SetLancIntEaz_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 3),
    _SetLancIntEaz_Type()
)
setLancIntEaz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancIntEaz.setStatus("current")


class _SetLancIntFor_Type(Integer32):
    """Custom type setLancIntFor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLancIntFor_Type.__name__ = "Integer32"
_SetLancIntFor_Object = MibTableColumn
setLancIntFor = _SetLancIntFor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 5),
    _SetLancIntFor_Type()
)
setLancIntFor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancIntFor.setStatus("current")


class _SetLancIntMax_Type(Integer32):
    """Custom type setLancIntMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetLancIntMax_Type.__name__ = "Integer32"
_SetLancIntMax_Object = MibTableColumn
setLancIntMax = _SetLancIntMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 6, 1, 6),
    _SetLancIntMax_Type()
)
setLancIntMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancIntMax.setStatus("current")
_SetLancPriTable_Object = MibTable
setLancPriTable = _SetLancPriTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7)
)
if mibBuilder.loadTexts:
    setLancPriTable.setStatus("current")
_SetLancPriEntry_Object = MibTableRow
setLancPriEntry = _SetLancPriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1)
)
setLancPriEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setLancPriIfc"),
)
if mibBuilder.loadTexts:
    setLancPriEntry.setStatus("current")


class _SetLancPriIfc_Type(Integer32):
    """Custom type setLancPriIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("s0-1", 1)
    )


_SetLancPriIfc_Type.__name__ = "Integer32"
_SetLancPriIfc_Object = MibTableColumn
setLancPriIfc = _SetLancPriIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1, 1),
    _SetLancPriIfc_Type()
)
setLancPriIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLancPriIfc.setStatus("current")


class _SetLancPriPri_Type(Integer32):
    """Custom type setLancPriPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("p1", 0),
          ("p2", 1),
          ("p3", 2))
    )


_SetLancPriPri_Type.__name__ = "Integer32"
_SetLancPriPri_Object = MibTableColumn
setLancPriPri = _SetLancPriPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 13, 7, 1, 2),
    _SetLancPriPri_Type()
)
setLancPriPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLancPriPri.setStatus("current")
_SetTime_ObjectIdentity = ObjectIdentity
setTime = _SetTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14)
)


class _SetTimeFetch_Type(Integer32):
    """Custom type setTimeFetch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("isdn", 1),
          ("none", 0),
          ("ntp", 2))
    )


_SetTimeFetch_Type.__name__ = "Integer32"
_SetTimeFetch_Object = MibScalar
setTimeFetch = _SetTimeFetch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 1),
    _SetTimeFetch_Type()
)
setTimeFetch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeFetch.setStatus("current")
_SetTimeCurre_Type = DisplayString
_SetTimeCurre_Object = MibScalar
setTimeCurre = _SetTimeCurre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 2),
    _SetTimeCurre_Type()
)
setTimeCurre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTimeCurre.setStatus("current")


class _SetTimeTimec_Type(DisplayString):
    """Custom type setTimeTimec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_SetTimeTimec_Type.__name__ = "DisplayString"
_SetTimeTimec_Object = MibScalar
setTimeTimec = _SetTimeTimec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 3),
    _SetTimeTimec_Type()
)
setTimeTimec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeTimec.setStatus("current")
_SetTimeCalla_Type = Integer32
_SetTimeCalla_Object = MibScalar
setTimeCalla = _SetTimeCalla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 5),
    _SetTimeCalla_Type()
)
setTimeCalla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeCalla.setStatus("current")
_SetTimeUtcin_Type = Counter32
_SetTimeUtcin_Object = MibScalar
setTimeUtcin = _SetTimeUtcin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 7),
    _SetTimeUtcin_Type()
)
setTimeUtcin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTimeUtcin.setStatus("current")


class _SetTimeTimez_Type(Integer32):
    """Custom type setTimeTimez based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e0", 0),
          ("minus-1", 255),
          ("minus-10", 246),
          ("minus-11", 245),
          ("minus-12", 244),
          ("minus-2", 254),
          ("minus-3", 253),
          ("minus-4", 252),
          ("minus-5", 251),
          ("minus-6", 250),
          ("minus-7", 249),
          ("minus-8", 248),
          ("minus-9", 247),
          ("plus-1", 1),
          ("plus-10", 10),
          ("plus-11", 11),
          ("plus-12", 12),
          ("plus-13", 13),
          ("plus-14", 14),
          ("plus-2", 2),
          ("plus-3", 3),
          ("plus-4", 4),
          ("plus-5", 5),
          ("plus-6", 6),
          ("plus-7", 7),
          ("plus-8", 8),
          ("plus-9", 9))
    )


_SetTimeTimez_Type.__name__ = "Integer32"
_SetTimeTimez_Object = MibScalar
setTimeTimez = _SetTimeTimez_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 10),
    _SetTimeTimez_Type()
)
setTimeTimez.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeTimez.setStatus("current")


class _SetTimeDayli_Type(Integer32):
    """Custom type setTimeDayli based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("europe-eu", 2),
          ("no", 0),
          ("russia", 3),
          ("usa", 4),
          ("user-defined", 255),
          ("yes", 1))
    )


_SetTimeDayli_Type.__name__ = "Integer32"
_SetTimeDayli_Object = MibScalar
setTimeDayli = _SetTimeDayli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 11),
    _SetTimeDayli_Type()
)
setTimeDayli.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDayli.setStatus("current")
_SetTimeDstclTable_Object = MibTable
setTimeDstclTable = _SetTimeDstclTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12)
)
if mibBuilder.loadTexts:
    setTimeDstclTable.setStatus("current")
_SetTimeDstclEntry_Object = MibTableRow
setTimeDstclEntry = _SetTimeDstclEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1)
)
setTimeDstclEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setTimeDstclEve"),
)
if mibBuilder.loadTexts:
    setTimeDstclEntry.setStatus("current")


class _SetTimeDstclEve_Type(Integer32):
    """Custom type setTimeDstclEve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("end", 2),
          ("start", 1))
    )


_SetTimeDstclEve_Type.__name__ = "Integer32"
_SetTimeDstclEve_Object = MibTableColumn
setTimeDstclEve = _SetTimeDstclEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 1),
    _SetTimeDstclEve_Type()
)
setTimeDstclEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTimeDstclEve.setStatus("current")


class _SetTimeDstclInd_Type(Integer32):
    """Custom type setTimeDstclInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e2-last", 254),
          ("e3-last", 253),
          ("e4-last", 252),
          ("first", 1),
          ("fourth", 4),
          ("last", 255),
          ("second", 2),
          ("third", 3))
    )


_SetTimeDstclInd_Type.__name__ = "Integer32"
_SetTimeDstclInd_Object = MibTableColumn
setTimeDstclInd = _SetTimeDstclInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 2),
    _SetTimeDstclInd_Type()
)
setTimeDstclInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstclInd.setStatus("current")


class _SetTimeDstclDay_Type(Integer32):
    """Custom type setTimeDstclDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("friday", 5),
          ("monday", 1),
          ("saturday", 6),
          ("sunday", 0),
          ("thursday", 4),
          ("tuesday", 2),
          ("wednesday", 3))
    )


_SetTimeDstclDay_Type.__name__ = "Integer32"
_SetTimeDstclDay_Object = MibTableColumn
setTimeDstclDay = _SetTimeDstclDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 3),
    _SetTimeDstclDay_Type()
)
setTimeDstclDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstclDay.setStatus("current")


class _SetTimeDstclMon_Type(Integer32):
    """Custom type setTimeDstclMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("april", 4),
          ("august", 8),
          ("december", 12),
          ("february", 2),
          ("january", 1),
          ("july", 7),
          ("june", 6),
          ("march", 3),
          ("may", 5),
          ("november", 11),
          ("october", 10),
          ("september", 9))
    )


_SetTimeDstclMon_Type.__name__ = "Integer32"
_SetTimeDstclMon_Object = MibTableColumn
setTimeDstclMon = _SetTimeDstclMon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 4),
    _SetTimeDstclMon_Type()
)
setTimeDstclMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstclMon.setStatus("current")


class _SetTimeDstclHou_Type(Integer32):
    """Custom type setTimeDstclHou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetTimeDstclHou_Type.__name__ = "Integer32"
_SetTimeDstclHou_Object = MibTableColumn
setTimeDstclHou = _SetTimeDstclHou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 5),
    _SetTimeDstclHou_Type()
)
setTimeDstclHou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstclHou.setStatus("current")


class _SetTimeDstclMin_Type(Integer32):
    """Custom type setTimeDstclMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetTimeDstclMin_Type.__name__ = "Integer32"
_SetTimeDstclMin_Object = MibTableColumn
setTimeDstclMin = _SetTimeDstclMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 6),
    _SetTimeDstclMin_Type()
)
setTimeDstclMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstclMin.setStatus("current")


class _SetTimeDstclTim_Type(Integer32):
    """Custom type setTimeDstclTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("lst", 0),
          ("utc", 1))
    )


_SetTimeDstclTim_Type.__name__ = "Integer32"
_SetTimeDstclTim_Object = MibTableColumn
setTimeDstclTim = _SetTimeDstclTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 12, 1, 7),
    _SetTimeDstclTim_Type()
)
setTimeDstclTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstclTim.setStatus("current")
_SetTimeGetti_Type = DisplayString
_SetTimeGetti_Object = MibScalar
setTimeGetti = _SetTimeGetti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 14, 13),
    _SetTimeGetti_Type()
)
setTimeGetti.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeGetti.setStatus("current")
_SetLcr_ObjectIdentity = ObjectIdentity
setLcr = _SetLcr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15)
)


class _SetLcrRou_Type(Integer32):
    """Custom type setLcrRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLcrRou_Type.__name__ = "Integer32"
_SetLcrRou_Object = MibScalar
setLcrRou = _SetLcrRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 1),
    _SetLcrRou_Type()
)
setLcrRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrRou.setStatus("current")


class _SetLcrLan_Type(Integer32):
    """Custom type setLcrLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLcrLan_Type.__name__ = "Integer32"
_SetLcrLan_Object = MibScalar
setLcrLan = _SetLcrLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 2),
    _SetLcrLan_Type()
)
setLcrLan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrLan.setStatus("current")
_SetLcrTimTable_Object = MibTable
setLcrTimTable = _SetLcrTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4)
)
if mibBuilder.loadTexts:
    setLcrTimTable.setStatus("current")
_SetLcrTimEntry_Object = MibTableRow
setLcrTimEntry = _SetLcrTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1)
)
setLcrTimEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setLcrTimInd"),
)
if mibBuilder.loadTexts:
    setLcrTimEntry.setStatus("current")


class _SetLcrTimInd_Type(Integer32):
    """Custom type setLcrTimInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLcrTimInd_Type.__name__ = "Integer32"
_SetLcrTimInd_Object = MibTableColumn
setLcrTimInd = _SetLcrTimInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 1),
    _SetLcrTimInd_Type()
)
setLcrTimInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimInd.setStatus("current")


class _SetLcrTimPre_Type(DisplayString):
    """Custom type setLcrTimPre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_SetLcrTimPre_Type.__name__ = "DisplayString"
_SetLcrTimPre_Object = MibTableColumn
setLcrTimPre = _SetLcrTimPre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 2),
    _SetLcrTimPre_Type()
)
setLcrTimPre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimPre.setStatus("current")


class _SetLcrTimDay_Type(Bits):
    """Custom type setLcrTimDay based on Bits"""
    namedValues = NamedValues(
        *(("friday", 3),
          ("holiday", 0),
          ("monday", 7),
          ("saturday", 2),
          ("sunday", 1),
          ("thursday", 4),
          ("tuesday", 6),
          ("wednesday", 5))
    )

_SetLcrTimDay_Type.__name__ = "Bits"
_SetLcrTimDay_Object = MibTableColumn
setLcrTimDay = _SetLcrTimDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 3),
    _SetLcrTimDay_Type()
)
setLcrTimDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimDay.setStatus("current")


class _SetLcrTimSta_Type(DisplayString):
    """Custom type setLcrTimSta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetLcrTimSta_Type.__name__ = "DisplayString"
_SetLcrTimSta_Object = MibTableColumn
setLcrTimSta = _SetLcrTimSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 4),
    _SetLcrTimSta_Type()
)
setLcrTimSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimSta.setStatus("current")


class _SetLcrTimSto_Type(DisplayString):
    """Custom type setLcrTimSto based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetLcrTimSto_Type.__name__ = "DisplayString"
_SetLcrTimSto_Object = MibTableColumn
setLcrTimSto = _SetLcrTimSto_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 5),
    _SetLcrTimSto_Type()
)
setLcrTimSto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimSto.setStatus("current")


class _SetLcrTimNum_Type(DisplayString):
    """Custom type setLcrTimNum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetLcrTimNum_Type.__name__ = "DisplayString"
_SetLcrTimNum_Object = MibTableColumn
setLcrTimNum = _SetLcrTimNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 6),
    _SetLcrTimNum_Type()
)
setLcrTimNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimNum.setStatus("current")


class _SetLcrTimFal_Type(Integer32):
    """Custom type setLcrTimFal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLcrTimFal_Type.__name__ = "Integer32"
_SetLcrTimFal_Object = MibTableColumn
setLcrTimFal = _SetLcrTimFal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 4, 1, 7),
    _SetLcrTimFal_Type()
)
setLcrTimFal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimFal.setStatus("current")
_SetLcrHolTable_Object = MibTable
setLcrHolTable = _SetLcrHolTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5)
)
if mibBuilder.loadTexts:
    setLcrHolTable.setStatus("current")
_SetLcrHolEntry_Object = MibTableRow
setLcrHolEntry = _SetLcrHolEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1)
)
setLcrHolEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setLcrHolInd"),
)
if mibBuilder.loadTexts:
    setLcrHolEntry.setStatus("current")


class _SetLcrHolInd_Type(Integer32):
    """Custom type setLcrHolInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLcrHolInd_Type.__name__ = "Integer32"
_SetLcrHolInd_Object = MibTableColumn
setLcrHolInd = _SetLcrHolInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1, 1),
    _SetLcrHolInd_Type()
)
setLcrHolInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrHolInd.setStatus("current")


class _SetLcrHolDat_Type(DisplayString):
    """Custom type setLcrHolDat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 13),
    )


_SetLcrHolDat_Type.__name__ = "DisplayString"
_SetLcrHolDat_Object = MibTableColumn
setLcrHolDat = _SetLcrHolDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 15, 5, 1, 2),
    _SetLcrHolDat_Type()
)
setLcrHolDat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrHolDat.setStatus("current")
_SetNetb_ObjectIdentity = ObjectIdentity
setNetb = _SetNetb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16)
)


class _SetNetbOpe_Type(Integer32):
    """Custom type setNetbOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNetbOpe_Type.__name__ = "Integer32"
_SetNetbOpe_Object = MibScalar
setNetbOpe = _SetNetbOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 1),
    _SetNetbOpe_Type()
)
setNetbOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbOpe.setStatus("current")


class _SetNetbSco_Type(DisplayString):
    """Custom type setNetbSco based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetNetbSco_Type.__name__ = "DisplayString"
_SetNetbSco_Object = MibScalar
setNetbSco = _SetNetbSco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 2),
    _SetNetbSco_Type()
)
setNetbSco.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbSco.setStatus("current")
_SetNetbPeeTable_Object = MibTable
setNetbPeeTable = _SetNetbPeeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4)
)
if mibBuilder.loadTexts:
    setNetbPeeTable.setStatus("current")
_SetNetbPeeEntry_Object = MibTableRow
setNetbPeeEntry = _SetNetbPeeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1)
)
setNetbPeeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNetbPeeNam"),
)
if mibBuilder.loadTexts:
    setNetbPeeEntry.setStatus("current")


class _SetNetbPeeNam_Type(DisplayString):
    """Custom type setNetbPeeNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbPeeNam_Type.__name__ = "DisplayString"
_SetNetbPeeNam_Object = MibTableColumn
setNetbPeeNam = _SetNetbPeeNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1, 1),
    _SetNetbPeeNam_Type()
)
setNetbPeeNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbPeeNam.setStatus("current")


class _SetNetbPeeTyp_Type(Integer32):
    """Custom type setNetbPeeTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("router", 0),
          ("workstation", 1))
    )


_SetNetbPeeTyp_Type.__name__ = "Integer32"
_SetNetbPeeTyp_Object = MibTableColumn
setNetbPeeTyp = _SetNetbPeeTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 4, 1, 3),
    _SetNetbPeeTyp_Type()
)
setNetbPeeTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbPeeTyp.setStatus("current")
_SetNetbGroTable_Object = MibTable
setNetbGroTable = _SetNetbGroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5)
)
if mibBuilder.loadTexts:
    setNetbGroTable.setStatus("current")
_SetNetbGroEntry_Object = MibTableRow
setNetbGroEntry = _SetNetbGroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1)
)
setNetbGroEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNetbGroGro"),
    (0, "LANCOM-1711-MIB", "setNetbGroTyp"),
    (0, "LANCOM-1711-MIB", "setNetbGroIpa"),
    (0, "LANCOM-1711-MIB", "setNetbGroRtg"),
)
if mibBuilder.loadTexts:
    setNetbGroEntry.setStatus("current")


class _SetNetbGroGro_Type(DisplayString):
    """Custom type setNetbGroGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbGroGro_Type.__name__ = "DisplayString"
_SetNetbGroGro_Object = MibTableColumn
setNetbGroGro = _SetNetbGroGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 1),
    _SetNetbGroGro_Type()
)
setNetbGroGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroGro.setStatus("current")


class _SetNetbGroTyp_Type(DisplayString):
    """Custom type setNetbGroTyp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_SetNetbGroTyp_Type.__name__ = "DisplayString"
_SetNetbGroTyp_Object = MibTableColumn
setNetbGroTyp = _SetNetbGroTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 2),
    _SetNetbGroTyp_Type()
)
setNetbGroTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroTyp.setStatus("current")
_SetNetbGroIpa_Type = IpAddress
_SetNetbGroIpa_Object = MibTableColumn
setNetbGroIpa = _SetNetbGroIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 3),
    _SetNetbGroIpa_Type()
)
setNetbGroIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroIpa.setStatus("current")


class _SetNetbGroPee_Type(DisplayString):
    """Custom type setNetbGroPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbGroPee_Type.__name__ = "DisplayString"
_SetNetbGroPee_Object = MibTableColumn
setNetbGroPee = _SetNetbGroPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 4),
    _SetNetbGroPee_Type()
)
setNetbGroPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroPee.setStatus("current")


class _SetNetbGroTim_Type(Integer32):
    """Custom type setNetbGroTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbGroTim_Type.__name__ = "Integer32"
_SetNetbGroTim_Object = MibTableColumn
setNetbGroTim = _SetNetbGroTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 5),
    _SetNetbGroTim_Type()
)
setNetbGroTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroTim.setStatus("current")


class _SetNetbGroFla_Type(DisplayString):
    """Custom type setNetbGroFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbGroFla_Type.__name__ = "DisplayString"
_SetNetbGroFla_Object = MibTableColumn
setNetbGroFla = _SetNetbGroFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 6),
    _SetNetbGroFla_Type()
)
setNetbGroFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroFla.setStatus("current")


class _SetNetbGroNet_Type(DisplayString):
    """Custom type setNetbGroNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbGroNet_Type.__name__ = "DisplayString"
_SetNetbGroNet_Object = MibTableColumn
setNetbGroNet = _SetNetbGroNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 7),
    _SetNetbGroNet_Type()
)
setNetbGroNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroNet.setStatus("current")


class _SetNetbGroRtg_Type(Integer32):
    """Custom type setNetbGroRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbGroRtg_Type.__name__ = "Integer32"
_SetNetbGroRtg_Object = MibTableColumn
setNetbGroRtg = _SetNetbGroRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 5, 1, 8),
    _SetNetbGroRtg_Type()
)
setNetbGroRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbGroRtg.setStatus("current")
_SetNetbHosTable_Object = MibTable
setNetbHosTable = _SetNetbHosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6)
)
if mibBuilder.loadTexts:
    setNetbHosTable.setStatus("current")
_SetNetbHosEntry_Object = MibTableRow
setNetbHosEntry = _SetNetbHosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1)
)
setNetbHosEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNetbHosNam"),
    (0, "LANCOM-1711-MIB", "setNetbHosTyp"),
    (0, "LANCOM-1711-MIB", "setNetbHosIpa"),
    (0, "LANCOM-1711-MIB", "setNetbHosRtg"),
)
if mibBuilder.loadTexts:
    setNetbHosEntry.setStatus("current")


class _SetNetbHosNam_Type(DisplayString):
    """Custom type setNetbHosNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbHosNam_Type.__name__ = "DisplayString"
_SetNetbHosNam_Object = MibTableColumn
setNetbHosNam = _SetNetbHosNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 1),
    _SetNetbHosNam_Type()
)
setNetbHosNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosNam.setStatus("current")


class _SetNetbHosTyp_Type(DisplayString):
    """Custom type setNetbHosTyp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_SetNetbHosTyp_Type.__name__ = "DisplayString"
_SetNetbHosTyp_Object = MibTableColumn
setNetbHosTyp = _SetNetbHosTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 2),
    _SetNetbHosTyp_Type()
)
setNetbHosTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosTyp.setStatus("current")
_SetNetbHosIpa_Type = IpAddress
_SetNetbHosIpa_Object = MibTableColumn
setNetbHosIpa = _SetNetbHosIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 3),
    _SetNetbHosIpa_Type()
)
setNetbHosIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosIpa.setStatus("current")


class _SetNetbHosPee_Type(DisplayString):
    """Custom type setNetbHosPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbHosPee_Type.__name__ = "DisplayString"
_SetNetbHosPee_Object = MibTableColumn
setNetbHosPee = _SetNetbHosPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 4),
    _SetNetbHosPee_Type()
)
setNetbHosPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosPee.setStatus("current")


class _SetNetbHosTim_Type(Integer32):
    """Custom type setNetbHosTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbHosTim_Type.__name__ = "Integer32"
_SetNetbHosTim_Object = MibTableColumn
setNetbHosTim = _SetNetbHosTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 5),
    _SetNetbHosTim_Type()
)
setNetbHosTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosTim.setStatus("current")


class _SetNetbHosFla_Type(DisplayString):
    """Custom type setNetbHosFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbHosFla_Type.__name__ = "DisplayString"
_SetNetbHosFla_Object = MibTableColumn
setNetbHosFla = _SetNetbHosFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 6),
    _SetNetbHosFla_Type()
)
setNetbHosFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosFla.setStatus("current")


class _SetNetbHosNet_Type(DisplayString):
    """Custom type setNetbHosNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbHosNet_Type.__name__ = "DisplayString"
_SetNetbHosNet_Object = MibTableColumn
setNetbHosNet = _SetNetbHosNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 7),
    _SetNetbHosNet_Type()
)
setNetbHosNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosNet.setStatus("current")


class _SetNetbHosRtg_Type(Integer32):
    """Custom type setNetbHosRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbHosRtg_Type.__name__ = "Integer32"
_SetNetbHosRtg_Object = MibTableColumn
setNetbHosRtg = _SetNetbHosRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 6, 1, 8),
    _SetNetbHosRtg_Type()
)
setNetbHosRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbHosRtg.setStatus("current")
_SetNetbSerTable_Object = MibTable
setNetbSerTable = _SetNetbSerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7)
)
if mibBuilder.loadTexts:
    setNetbSerTable.setStatus("current")
_SetNetbSerEntry_Object = MibTableRow
setNetbSerEntry = _SetNetbSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1)
)
setNetbSerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNetbSerHos"),
    (0, "LANCOM-1711-MIB", "setNetbSerGro"),
    (0, "LANCOM-1711-MIB", "setNetbSerIpa"),
    (0, "LANCOM-1711-MIB", "setNetbSerRtg"),
)
if mibBuilder.loadTexts:
    setNetbSerEntry.setStatus("current")


class _SetNetbSerHos_Type(DisplayString):
    """Custom type setNetbSerHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbSerHos_Type.__name__ = "DisplayString"
_SetNetbSerHos_Object = MibTableColumn
setNetbSerHos = _SetNetbSerHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 1),
    _SetNetbSerHos_Type()
)
setNetbSerHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerHos.setStatus("current")


class _SetNetbSerGro_Type(DisplayString):
    """Custom type setNetbSerGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbSerGro_Type.__name__ = "DisplayString"
_SetNetbSerGro_Object = MibTableColumn
setNetbSerGro = _SetNetbSerGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 2),
    _SetNetbSerGro_Type()
)
setNetbSerGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerGro.setStatus("current")


class _SetNetbSerIpa_Type(DisplayString):
    """Custom type setNetbSerIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbSerIpa_Type.__name__ = "DisplayString"
_SetNetbSerIpa_Object = MibTableColumn
setNetbSerIpa = _SetNetbSerIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 4),
    _SetNetbSerIpa_Type()
)
setNetbSerIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerIpa.setStatus("current")


class _SetNetbSerOsv_Type(DisplayString):
    """Custom type setNetbSerOsv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbSerOsv_Type.__name__ = "DisplayString"
_SetNetbSerOsv_Object = MibTableColumn
setNetbSerOsv = _SetNetbSerOsv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 5),
    _SetNetbSerOsv_Type()
)
setNetbSerOsv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerOsv.setStatus("current")


class _SetNetbSerSmb_Type(DisplayString):
    """Custom type setNetbSerSmb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbSerSmb_Type.__name__ = "DisplayString"
_SetNetbSerSmb_Object = MibTableColumn
setNetbSerSmb = _SetNetbSerSmb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 6),
    _SetNetbSerSmb_Type()
)
setNetbSerSmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerSmb.setStatus("current")


class _SetNetbSerSer_Type(DisplayString):
    """Custom type setNetbSerSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetNetbSerSer_Type.__name__ = "DisplayString"
_SetNetbSerSer_Object = MibTableColumn
setNetbSerSer = _SetNetbSerSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 7),
    _SetNetbSerSer_Type()
)
setNetbSerSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerSer.setStatus("current")


class _SetNetbSerPee_Type(DisplayString):
    """Custom type setNetbSerPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbSerPee_Type.__name__ = "DisplayString"
_SetNetbSerPee_Object = MibTableColumn
setNetbSerPee = _SetNetbSerPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 8),
    _SetNetbSerPee_Type()
)
setNetbSerPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerPee.setStatus("current")


class _SetNetbSerTim_Type(Integer32):
    """Custom type setNetbSerTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbSerTim_Type.__name__ = "Integer32"
_SetNetbSerTim_Object = MibTableColumn
setNetbSerTim = _SetNetbSerTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 9),
    _SetNetbSerTim_Type()
)
setNetbSerTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerTim.setStatus("current")


class _SetNetbSerFla_Type(DisplayString):
    """Custom type setNetbSerFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbSerFla_Type.__name__ = "DisplayString"
_SetNetbSerFla_Object = MibTableColumn
setNetbSerFla = _SetNetbSerFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 10),
    _SetNetbSerFla_Type()
)
setNetbSerFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerFla.setStatus("current")


class _SetNetbSerNet_Type(DisplayString):
    """Custom type setNetbSerNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbSerNet_Type.__name__ = "DisplayString"
_SetNetbSerNet_Object = MibTableColumn
setNetbSerNet = _SetNetbSerNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 11),
    _SetNetbSerNet_Type()
)
setNetbSerNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerNet.setStatus("current")


class _SetNetbSerRtg_Type(Integer32):
    """Custom type setNetbSerRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbSerRtg_Type.__name__ = "Integer32"
_SetNetbSerRtg_Object = MibTableColumn
setNetbSerRtg = _SetNetbSerRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 7, 1, 12),
    _SetNetbSerRtg_Type()
)
setNetbSerRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbSerRtg.setStatus("current")


class _SetNetbWat_Type(Integer32):
    """Custom type setNetbWat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("route", 0),
          ("spoof", 1))
    )


_SetNetbWat_Type.__name__ = "Integer32"
_SetNetbWat_Object = MibScalar
setNetbWat = _SetNetbWat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 8),
    _SetNetbWat_Type()
)
setNetbWat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbWat.setStatus("current")


class _SetNetbUpd_Type(Integer32):
    """Custom type setNetbUpd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pback", 0),
          ("time", 2),
          ("trig", 1))
    )


_SetNetbUpd_Type.__name__ = "Integer32"
_SetNetbUpd_Object = MibScalar
setNetbUpd = _SetNetbUpd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 9),
    _SetNetbUpd_Type()
)
setNetbUpd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbUpd.setStatus("current")
_SetNetbWan_Type = Integer32
_SetNetbWan_Object = MibScalar
setNetbWan = _SetNetbWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 10),
    _SetNetbWan_Type()
)
setNetbWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbWan.setStatus("current")
_SetNetbLea_Type = Integer32
_SetNetbLea_Object = MibScalar
setNetbLea = _SetNetbLea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 11),
    _SetNetbLea_Type()
)
setNetbLea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbLea.setStatus("current")
_SetNetbNetTable_Object = MibTable
setNetbNetTable = _SetNetbNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12)
)
if mibBuilder.loadTexts:
    setNetbNetTable.setStatus("current")
_SetNetbNetEntry_Object = MibTableRow
setNetbNetEntry = _SetNetbNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1)
)
setNetbNetEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNetbNetNet"),
)
if mibBuilder.loadTexts:
    setNetbNetEntry.setStatus("current")


class _SetNetbNetNet_Type(DisplayString):
    """Custom type setNetbNetNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbNetNet_Type.__name__ = "DisplayString"
_SetNetbNetNet_Object = MibTableColumn
setNetbNetNet = _SetNetbNetNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 1),
    _SetNetbNetNet_Type()
)
setNetbNetNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbNetNet.setStatus("current")


class _SetNetbNetOpe_Type(Integer32):
    """Custom type setNetbNetOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNetbNetOpe_Type.__name__ = "Integer32"
_SetNetbNetOpe_Object = MibTableColumn
setNetbNetOpe = _SetNetbNetOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 2),
    _SetNetbNetOpe_Type()
)
setNetbNetOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbNetOpe.setStatus("current")


class _SetNetbNetNtd_Type(DisplayString):
    """Custom type setNetbNetNtd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbNetNtd_Type.__name__ = "DisplayString"
_SetNetbNetNtd_Object = MibTableColumn
setNetbNetNtd = _SetNetbNetNtd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 12, 1, 3),
    _SetNetbNetNtd_Type()
)
setNetbNetNtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbNetNtd.setStatus("current")
_SetNetbBroTable_Object = MibTable
setNetbBroTable = _SetNetbBroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13)
)
if mibBuilder.loadTexts:
    setNetbBroTable.setStatus("current")
_SetNetbBroEntry_Object = MibTableRow
setNetbBroEntry = _SetNetbBroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1)
)
setNetbBroEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNetbBroBro"),
    (0, "LANCOM-1711-MIB", "setNetbBroGro"),
    (0, "LANCOM-1711-MIB", "setNetbBroIpa"),
    (0, "LANCOM-1711-MIB", "setNetbBroRtg"),
)
if mibBuilder.loadTexts:
    setNetbBroEntry.setStatus("current")


class _SetNetbBroBro_Type(DisplayString):
    """Custom type setNetbBroBro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbBroBro_Type.__name__ = "DisplayString"
_SetNetbBroBro_Object = MibTableColumn
setNetbBroBro = _SetNetbBroBro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 1),
    _SetNetbBroBro_Type()
)
setNetbBroBro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroBro.setStatus("current")


class _SetNetbBroGro_Type(DisplayString):
    """Custom type setNetbBroGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbBroGro_Type.__name__ = "DisplayString"
_SetNetbBroGro_Object = MibTableColumn
setNetbBroGro = _SetNetbBroGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 2),
    _SetNetbBroGro_Type()
)
setNetbBroGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroGro.setStatus("current")


class _SetNetbBroIpa_Type(DisplayString):
    """Custom type setNetbBroIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbBroIpa_Type.__name__ = "DisplayString"
_SetNetbBroIpa_Object = MibTableColumn
setNetbBroIpa = _SetNetbBroIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 4),
    _SetNetbBroIpa_Type()
)
setNetbBroIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroIpa.setStatus("current")


class _SetNetbBroOsv_Type(DisplayString):
    """Custom type setNetbBroOsv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbBroOsv_Type.__name__ = "DisplayString"
_SetNetbBroOsv_Object = MibTableColumn
setNetbBroOsv = _SetNetbBroOsv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 5),
    _SetNetbBroOsv_Type()
)
setNetbBroOsv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroOsv.setStatus("current")


class _SetNetbBroSer_Type(DisplayString):
    """Custom type setNetbBroSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetNetbBroSer_Type.__name__ = "DisplayString"
_SetNetbBroSer_Object = MibTableColumn
setNetbBroSer = _SetNetbBroSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 7),
    _SetNetbBroSer_Type()
)
setNetbBroSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroSer.setStatus("current")


class _SetNetbBroPee_Type(DisplayString):
    """Custom type setNetbBroPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbBroPee_Type.__name__ = "DisplayString"
_SetNetbBroPee_Object = MibTableColumn
setNetbBroPee = _SetNetbBroPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 8),
    _SetNetbBroPee_Type()
)
setNetbBroPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroPee.setStatus("current")


class _SetNetbBroTim_Type(Integer32):
    """Custom type setNetbBroTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbBroTim_Type.__name__ = "Integer32"
_SetNetbBroTim_Object = MibTableColumn
setNetbBroTim = _SetNetbBroTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 9),
    _SetNetbBroTim_Type()
)
setNetbBroTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroTim.setStatus("current")


class _SetNetbBroFla_Type(DisplayString):
    """Custom type setNetbBroFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbBroFla_Type.__name__ = "DisplayString"
_SetNetbBroFla_Object = MibTableColumn
setNetbBroFla = _SetNetbBroFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 10),
    _SetNetbBroFla_Type()
)
setNetbBroFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroFla.setStatus("current")


class _SetNetbBroNet_Type(DisplayString):
    """Custom type setNetbBroNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbBroNet_Type.__name__ = "DisplayString"
_SetNetbBroNet_Object = MibTableColumn
setNetbBroNet = _SetNetbBroNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 11),
    _SetNetbBroNet_Type()
)
setNetbBroNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroNet.setStatus("current")


class _SetNetbBroRtg_Type(Integer32):
    """Custom type setNetbBroRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbBroRtg_Type.__name__ = "Integer32"
_SetNetbBroRtg_Object = MibTableColumn
setNetbBroRtg = _SetNetbBroRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 13, 1, 12),
    _SetNetbBroRtg_Type()
)
setNetbBroRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbBroRtg.setStatus("current")


class _SetNetbSup_Type(Integer32):
    """Custom type setNetbSup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNetbSup_Type.__name__ = "Integer32"
_SetNetbSup_Object = MibScalar
setNetbSup = _SetNetbSup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 16, 14),
    _SetNetbSup_Type()
)
setNetbSup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbSup.setStatus("current")
_SetDns_ObjectIdentity = ObjectIdentity
setDns = _SetDns_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17)
)


class _SetDnsOper_Type(Integer32):
    """Custom type setDnsOper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsOper_Type.__name__ = "Integer32"
_SetDnsOper_Object = MibScalar
setDnsOper = _SetDnsOper_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 1),
    _SetDnsOper_Type()
)
setDnsOper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsOper.setStatus("current")


class _SetDnsDoma_Type(DisplayString):
    """Custom type setDnsDoma based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDoma_Type.__name__ = "DisplayString"
_SetDnsDoma_Object = MibScalar
setDnsDoma = _SetDnsDoma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 2),
    _SetDnsDoma_Type()
)
setDnsDoma.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDoma.setStatus("current")


class _SetDnsDhcp_Type(Integer32):
    """Custom type setDnsDhcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsDhcp_Type.__name__ = "Integer32"
_SetDnsDhcp_Object = MibScalar
setDnsDhcp = _SetDnsDhcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 3),
    _SetDnsDhcp_Type()
)
setDnsDhcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDhcp.setStatus("current")


class _SetDnsNetb_Type(Integer32):
    """Custom type setDnsNetb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsNetb_Type.__name__ = "Integer32"
_SetDnsNetb_Object = MibScalar
setDnsNetb = _SetDnsNetb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 4),
    _SetDnsNetb_Type()
)
setDnsNetb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsNetb.setStatus("current")
_SetDnsDnslTable_Object = MibTable
setDnsDnslTable = _SetDnsDnslTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5)
)
if mibBuilder.loadTexts:
    setDnsDnslTable.setStatus("current")
_SetDnsDnslEntry_Object = MibTableRow
setDnsDnslEntry = _SetDnsDnslEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1)
)
setDnsDnslEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsDnslHos"),
)
if mibBuilder.loadTexts:
    setDnsDnslEntry.setStatus("current")


class _SetDnsDnslHos_Type(DisplayString):
    """Custom type setDnsDnslHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDnslHos_Type.__name__ = "DisplayString"
_SetDnsDnslHos_Object = MibTableColumn
setDnsDnslHos = _SetDnsDnslHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1, 1),
    _SetDnsDnslHos_Type()
)
setDnsDnslHos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnslHos.setStatus("current")
_SetDnsDnslIpa_Type = IpAddress
_SetDnsDnslIpa_Object = MibTableColumn
setDnsDnslIpa = _SetDnsDnslIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 5, 1, 2),
    _SetDnsDnslIpa_Type()
)
setDnsDnslIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnslIpa.setStatus("current")
_SetDnsFiltTable_Object = MibTable
setDnsFiltTable = _SetDnsFiltTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6)
)
if mibBuilder.loadTexts:
    setDnsFiltTable.setStatus("current")
_SetDnsFiltEntry_Object = MibTableRow
setDnsFiltEntry = _SetDnsFiltEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1)
)
setDnsFiltEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsFiltIdx"),
)
if mibBuilder.loadTexts:
    setDnsFiltEntry.setStatus("current")


class _SetDnsFiltIdx_Type(DisplayString):
    """Custom type setDnsFiltIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetDnsFiltIdx_Type.__name__ = "DisplayString"
_SetDnsFiltIdx_Object = MibTableColumn
setDnsFiltIdx = _SetDnsFiltIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 1),
    _SetDnsFiltIdx_Type()
)
setDnsFiltIdx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltIdx.setStatus("current")


class _SetDnsFiltDom_Type(DisplayString):
    """Custom type setDnsFiltDom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsFiltDom_Type.__name__ = "DisplayString"
_SetDnsFiltDom_Object = MibTableColumn
setDnsFiltDom = _SetDnsFiltDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 2),
    _SetDnsFiltDom_Type()
)
setDnsFiltDom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltDom.setStatus("current")
_SetDnsFiltIpa_Type = IpAddress
_SetDnsFiltIpa_Object = MibTableColumn
setDnsFiltIpa = _SetDnsFiltIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 3),
    _SetDnsFiltIpa_Type()
)
setDnsFiltIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltIpa.setStatus("current")
_SetDnsFiltNet_Type = IpAddress
_SetDnsFiltNet_Object = MibTableColumn
setDnsFiltNet = _SetDnsFiltNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 6, 1, 4),
    _SetDnsFiltNet_Type()
)
setDnsFiltNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltNet.setStatus("current")
_SetDnsLeas_Type = Integer32
_SetDnsLeas_Object = MibScalar
setDnsLeas = _SetDnsLeas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 7),
    _SetDnsLeas_Type()
)
setDnsLeas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsLeas.setStatus("current")
_SetDnsDyndTable_Object = MibTable
setDnsDyndTable = _SetDnsDyndTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8)
)
if mibBuilder.loadTexts:
    setDnsDyndTable.setStatus("current")
_SetDnsDyndEntry_Object = MibTableRow
setDnsDyndEntry = _SetDnsDyndEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1)
)
setDnsDyndEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsDyndHos"),
)
if mibBuilder.loadTexts:
    setDnsDyndEntry.setStatus("current")


class _SetDnsDyndHos_Type(DisplayString):
    """Custom type setDnsDyndHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDyndHos_Type.__name__ = "DisplayString"
_SetDnsDyndHos_Object = MibTableColumn
setDnsDyndHos = _SetDnsDyndHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 1),
    _SetDnsDyndHos_Type()
)
setDnsDyndHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDyndHos.setStatus("current")
_SetDnsDyndIpa_Type = IpAddress
_SetDnsDyndIpa_Object = MibTableColumn
setDnsDyndIpa = _SetDnsDyndIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 2),
    _SetDnsDyndIpa_Type()
)
setDnsDyndIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDyndIpa.setStatus("current")


class _SetDnsDyndTim_Type(Integer32):
    """Custom type setDnsDyndTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetDnsDyndTim_Type.__name__ = "Integer32"
_SetDnsDyndTim_Object = MibTableColumn
setDnsDyndTim = _SetDnsDyndTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 8, 1, 3),
    _SetDnsDyndTim_Type()
)
setDnsDyndTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDyndTim.setStatus("current")
_SetDnsDnsdTable_Object = MibTable
setDnsDnsdTable = _SetDnsDnsdTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9)
)
if mibBuilder.loadTexts:
    setDnsDnsdTable.setStatus("current")
_SetDnsDnsdEntry_Object = MibTableRow
setDnsDnsdEntry = _SetDnsDnsdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1)
)
setDnsDnsdEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsDnsdDom"),
)
if mibBuilder.loadTexts:
    setDnsDnsdEntry.setStatus("current")


class _SetDnsDnsdDom_Type(DisplayString):
    """Custom type setDnsDnsdDom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDnsdDom_Type.__name__ = "DisplayString"
_SetDnsDnsdDom_Object = MibTableColumn
setDnsDnsdDom = _SetDnsDnsdDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1, 1),
    _SetDnsDnsdDom_Type()
)
setDnsDnsdDom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnsdDom.setStatus("current")


class _SetDnsDnsdDes_Type(DisplayString):
    """Custom type setDnsDnsdDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetDnsDnsdDes_Type.__name__ = "DisplayString"
_SetDnsDnsdDes_Object = MibTableColumn
setDnsDnsdDes = _SetDnsDnsdDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 9, 1, 2),
    _SetDnsDnsdDes_Type()
)
setDnsDnsdDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnsdDes.setStatus("current")
_SetDnsServTable_Object = MibTable
setDnsServTable = _SetDnsServTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10)
)
if mibBuilder.loadTexts:
    setDnsServTable.setStatus("current")
_SetDnsServEntry_Object = MibTableRow
setDnsServEntry = _SetDnsServEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1)
)
setDnsServEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsServSer"),
)
if mibBuilder.loadTexts:
    setDnsServEntry.setStatus("current")


class _SetDnsServSer_Type(DisplayString):
    """Custom type setDnsServSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsServSer_Type.__name__ = "DisplayString"
_SetDnsServSer_Object = MibTableColumn
setDnsServSer = _SetDnsServSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 1),
    _SetDnsServSer_Type()
)
setDnsServSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsServSer.setStatus("current")


class _SetDnsServHos_Type(DisplayString):
    """Custom type setDnsServHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsServHos_Type.__name__ = "DisplayString"
_SetDnsServHos_Object = MibTableColumn
setDnsServHos = _SetDnsServHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 2),
    _SetDnsServHos_Type()
)
setDnsServHos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsServHos.setStatus("current")


class _SetDnsServPor_Type(Integer32):
    """Custom type setDnsServPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetDnsServPor_Type.__name__ = "Integer32"
_SetDnsServPor_Object = MibTableColumn
setDnsServPor = _SetDnsServPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 10, 1, 3),
    _SetDnsServPor_Type()
)
setDnsServPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsServPor.setStatus("current")
_SetDnsDynaTable_Object = MibTable
setDnsDynaTable = _SetDnsDynaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11)
)
if mibBuilder.loadTexts:
    setDnsDynaTable.setStatus("current")
_SetDnsDynaEntry_Object = MibTableRow
setDnsDynaEntry = _SetDnsDynaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1)
)
setDnsDynaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsDynaSer"),
)
if mibBuilder.loadTexts:
    setDnsDynaEntry.setStatus("current")


class _SetDnsDynaSer_Type(DisplayString):
    """Custom type setDnsDynaSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDynaSer_Type.__name__ = "DisplayString"
_SetDnsDynaSer_Object = MibTableColumn
setDnsDynaSer = _SetDnsDynaSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 1),
    _SetDnsDynaSer_Type()
)
setDnsDynaSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDynaSer.setStatus("current")


class _SetDnsDynaHos_Type(DisplayString):
    """Custom type setDnsDynaHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDynaHos_Type.__name__ = "DisplayString"
_SetDnsDynaHos_Object = MibTableColumn
setDnsDynaHos = _SetDnsDynaHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 2),
    _SetDnsDynaHos_Type()
)
setDnsDynaHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDynaHos.setStatus("current")


class _SetDnsDynaPor_Type(Integer32):
    """Custom type setDnsDynaPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetDnsDynaPor_Type.__name__ = "Integer32"
_SetDnsDynaPor_Object = MibTableColumn
setDnsDynaPor = _SetDnsDynaPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 11, 1, 3),
    _SetDnsDynaPor_Type()
)
setDnsDynaPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDynaPor.setStatus("current")


class _SetDnsReso_Type(Integer32):
    """Custom type setDnsReso based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsReso_Type.__name__ = "Integer32"
_SetDnsReso_Object = MibScalar
setDnsReso = _SetDnsReso_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 12),
    _SetDnsReso_Type()
)
setDnsReso.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsReso.setStatus("current")
_SetDnsSubdTable_Object = MibTable
setDnsSubdTable = _SetDnsSubdTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13)
)
if mibBuilder.loadTexts:
    setDnsSubdTable.setStatus("current")
_SetDnsSubdEntry_Object = MibTableRow
setDnsSubdEntry = _SetDnsSubdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1)
)
setDnsSubdEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setDnsSubdNet"),
)
if mibBuilder.loadTexts:
    setDnsSubdEntry.setStatus("current")


class _SetDnsSubdNet_Type(DisplayString):
    """Custom type setDnsSubdNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDnsSubdNet_Type.__name__ = "DisplayString"
_SetDnsSubdNet_Object = MibTableColumn
setDnsSubdNet = _SetDnsSubdNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1, 1),
    _SetDnsSubdNet_Type()
)
setDnsSubdNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsSubdNet.setStatus("current")


class _SetDnsSubdSub_Type(DisplayString):
    """Custom type setDnsSubdSub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsSubdSub_Type.__name__ = "DisplayString"
_SetDnsSubdSub_Object = MibTableColumn
setDnsSubdSub = _SetDnsSubdSub_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 17, 13, 1, 2),
    _SetDnsSubdSub_Type()
)
setDnsSubdSub.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsSubdSub.setStatus("current")
_SetAcco_ObjectIdentity = ObjectIdentity
setAcco = _SetAcco_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18)
)


class _SetAccoOpe_Type(Integer32):
    """Custom type setAccoOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetAccoOpe_Type.__name__ = "Integer32"
_SetAccoOpe_Object = MibScalar
setAccoOpe = _SetAccoOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 1),
    _SetAccoOpe_Type()
)
setAccoOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoOpe.setStatus("current")


class _SetAccoSav_Type(Integer32):
    """Custom type setAccoSav based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetAccoSav_Type.__name__ = "Integer32"
_SetAccoSav_Object = MibScalar
setAccoSav = _SetAccoSav_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 2),
    _SetAccoSav_Type()
)
setAccoSav.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoSav.setStatus("current")


class _SetAccoSor_Type(Integer32):
    """Custom type setAccoSor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("data", 1),
          ("time", 0))
    )


_SetAccoSor_Type.__name__ = "Integer32"
_SetAccoSor_Object = MibScalar
setAccoSor = _SetAccoSor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 3),
    _SetAccoSor_Type()
)
setAccoSor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoSor.setStatus("current")
_SetAccoCurTable_Object = MibTable
setAccoCurTable = _SetAccoCurTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4)
)
if mibBuilder.loadTexts:
    setAccoCurTable.setStatus("current")
_SetAccoCurEntry_Object = MibTableRow
setAccoCurEntry = _SetAccoCurEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1)
)
setAccoCurEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setAccoCurUsern"),
    (0, "LANCOM-1711-MIB", "setAccoCurMacad"),
    (0, "LANCOM-1711-MIB", "setAccoCurPeer"),
    (0, "LANCOM-1711-MIB", "setAccoCurConnt"),
)
if mibBuilder.loadTexts:
    setAccoCurEntry.setStatus("current")


class _SetAccoCurUsern_Type(DisplayString):
    """Custom type setAccoCurUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_SetAccoCurUsern_Type.__name__ = "DisplayString"
_SetAccoCurUsern_Object = MibTableColumn
setAccoCurUsern = _SetAccoCurUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 1),
    _SetAccoCurUsern_Type()
)
setAccoCurUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurUsern.setStatus("current")


class _SetAccoCurMacad_Type(DisplayString):
    """Custom type setAccoCurMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetAccoCurMacad_Type.__name__ = "DisplayString"
_SetAccoCurMacad_Object = MibTableColumn
setAccoCurMacad = _SetAccoCurMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 2),
    _SetAccoCurMacad_Type()
)
setAccoCurMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurMacad.setStatus("current")


class _SetAccoCurPeer_Type(DisplayString):
    """Custom type setAccoCurPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetAccoCurPeer_Type.__name__ = "DisplayString"
_SetAccoCurPeer_Object = MibTableColumn
setAccoCurPeer = _SetAccoCurPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 3),
    _SetAccoCurPeer_Type()
)
setAccoCurPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurPeer.setStatus("current")


class _SetAccoCurConnt_Type(Integer32):
    """Custom type setAccoCurConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_SetAccoCurConnt_Type.__name__ = "Integer32"
_SetAccoCurConnt_Object = MibTableColumn
setAccoCurConnt = _SetAccoCurConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 4),
    _SetAccoCurConnt_Type()
)
setAccoCurConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurConnt.setStatus("current")


class _SetAccoCurRxkby_Type(Integer32):
    """Custom type setAccoCurRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoCurRxkby_Type.__name__ = "Integer32"
_SetAccoCurRxkby_Object = MibTableColumn
setAccoCurRxkby = _SetAccoCurRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 5),
    _SetAccoCurRxkby_Type()
)
setAccoCurRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurRxkby.setStatus("current")


class _SetAccoCurTxkby_Type(Integer32):
    """Custom type setAccoCurTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoCurTxkby_Type.__name__ = "Integer32"
_SetAccoCurTxkby_Object = MibTableColumn
setAccoCurTxkby = _SetAccoCurTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 6),
    _SetAccoCurTxkby_Type()
)
setAccoCurTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurTxkby.setStatus("current")


class _SetAccoCurTotal_Type(Integer32):
    """Custom type setAccoCurTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoCurTotal_Type.__name__ = "Integer32"
_SetAccoCurTotal_Object = MibTableColumn
setAccoCurTotal = _SetAccoCurTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 8),
    _SetAccoCurTotal_Type()
)
setAccoCurTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurTotal.setStatus("current")


class _SetAccoCurConne_Type(Integer32):
    """Custom type setAccoCurConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoCurConne_Type.__name__ = "Integer32"
_SetAccoCurConne_Object = MibTableColumn
setAccoCurConne = _SetAccoCurConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 4, 1, 9),
    _SetAccoCurConne_Type()
)
setAccoCurConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoCurConne.setStatus("current")
_SetAccoAccTable_Object = MibTable
setAccoAccTable = _SetAccoAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5)
)
if mibBuilder.loadTexts:
    setAccoAccTable.setStatus("current")
_SetAccoAccEntry_Object = MibTableRow
setAccoAccEntry = _SetAccoAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1)
)
setAccoAccEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setAccoAccUsern"),
    (0, "LANCOM-1711-MIB", "setAccoAccMacad"),
    (0, "LANCOM-1711-MIB", "setAccoAccPeer"),
    (0, "LANCOM-1711-MIB", "setAccoAccConnt"),
)
if mibBuilder.loadTexts:
    setAccoAccEntry.setStatus("current")


class _SetAccoAccUsern_Type(DisplayString):
    """Custom type setAccoAccUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_SetAccoAccUsern_Type.__name__ = "DisplayString"
_SetAccoAccUsern_Object = MibTableColumn
setAccoAccUsern = _SetAccoAccUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 1),
    _SetAccoAccUsern_Type()
)
setAccoAccUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccUsern.setStatus("current")


class _SetAccoAccMacad_Type(DisplayString):
    """Custom type setAccoAccMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetAccoAccMacad_Type.__name__ = "DisplayString"
_SetAccoAccMacad_Object = MibTableColumn
setAccoAccMacad = _SetAccoAccMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 2),
    _SetAccoAccMacad_Type()
)
setAccoAccMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccMacad.setStatus("current")


class _SetAccoAccPeer_Type(DisplayString):
    """Custom type setAccoAccPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetAccoAccPeer_Type.__name__ = "DisplayString"
_SetAccoAccPeer_Object = MibTableColumn
setAccoAccPeer = _SetAccoAccPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 3),
    _SetAccoAccPeer_Type()
)
setAccoAccPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccPeer.setStatus("current")


class _SetAccoAccConnt_Type(Integer32):
    """Custom type setAccoAccConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_SetAccoAccConnt_Type.__name__ = "Integer32"
_SetAccoAccConnt_Object = MibTableColumn
setAccoAccConnt = _SetAccoAccConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 4),
    _SetAccoAccConnt_Type()
)
setAccoAccConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccConnt.setStatus("current")


class _SetAccoAccRxkby_Type(Integer32):
    """Custom type setAccoAccRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoAccRxkby_Type.__name__ = "Integer32"
_SetAccoAccRxkby_Object = MibTableColumn
setAccoAccRxkby = _SetAccoAccRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 5),
    _SetAccoAccRxkby_Type()
)
setAccoAccRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccRxkby.setStatus("current")


class _SetAccoAccTxkby_Type(Integer32):
    """Custom type setAccoAccTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoAccTxkby_Type.__name__ = "Integer32"
_SetAccoAccTxkby_Object = MibTableColumn
setAccoAccTxkby = _SetAccoAccTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 6),
    _SetAccoAccTxkby_Type()
)
setAccoAccTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccTxkby.setStatus("current")


class _SetAccoAccTotal_Type(Integer32):
    """Custom type setAccoAccTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoAccTotal_Type.__name__ = "Integer32"
_SetAccoAccTotal_Object = MibTableColumn
setAccoAccTotal = _SetAccoAccTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 8),
    _SetAccoAccTotal_Type()
)
setAccoAccTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccTotal.setStatus("current")


class _SetAccoAccConne_Type(Integer32):
    """Custom type setAccoAccConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoAccConne_Type.__name__ = "Integer32"
_SetAccoAccConne_Object = MibTableColumn
setAccoAccConne = _SetAccoAccConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 5, 1, 9),
    _SetAccoAccConne_Type()
)
setAccoAccConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoAccConne.setStatus("current")
_SetAccoDel_Type = DisplayString
_SetAccoDel_Object = MibScalar
setAccoDel = _SetAccoDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 6),
    _SetAccoDel_Type()
)
setAccoDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoDel.setStatus("current")
_SetAccoTimTable_Object = MibTable
setAccoTimTable = _SetAccoTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8)
)
if mibBuilder.loadTexts:
    setAccoTimTable.setStatus("current")
_SetAccoTimEntry_Object = MibTableRow
setAccoTimEntry = _SetAccoTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1)
)
setAccoTimEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setAccoTimInde"),
)
if mibBuilder.loadTexts:
    setAccoTimEntry.setStatus("current")


class _SetAccoTimInde_Type(Integer32):
    """Custom type setAccoTimInde based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccoTimInde_Type.__name__ = "Integer32"
_SetAccoTimInde_Object = MibTableColumn
setAccoTimInde = _SetAccoTimInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 1),
    _SetAccoTimInde_Type()
)
setAccoTimInde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoTimInde.setStatus("current")


class _SetAccoTimActi_Type(Integer32):
    """Custom type setAccoTimActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetAccoTimActi_Type.__name__ = "Integer32"
_SetAccoTimActi_Object = MibTableColumn
setAccoTimActi = _SetAccoTimActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 2),
    _SetAccoTimActi_Type()
)
setAccoTimActi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoTimActi.setStatus("current")


class _SetAccoTimType_Type(Integer32):
    """Custom type setAccoTimType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("daily", 2),
          ("monthly", 0),
          ("weekly", 1))
    )


_SetAccoTimType_Type.__name__ = "Integer32"
_SetAccoTimType_Object = MibTableColumn
setAccoTimType = _SetAccoTimType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 3),
    _SetAccoTimType_Type()
)
setAccoTimType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoTimType.setStatus("current")


class _SetAccoTimDay_Type(Integer32):
    """Custom type setAccoTimDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccoTimDay_Type.__name__ = "Integer32"
_SetAccoTimDay_Object = MibTableColumn
setAccoTimDay = _SetAccoTimDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 4),
    _SetAccoTimDay_Type()
)
setAccoTimDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoTimDay.setStatus("current")


class _SetAccoTimDayo_Type(Integer32):
    """Custom type setAccoTimDayo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("friday", 6),
          ("monday", 2),
          ("saturday", 7),
          ("sunday", 1),
          ("thursday", 5),
          ("tuesday", 3),
          ("unknown", 0),
          ("wednesday", 4))
    )


_SetAccoTimDayo_Type.__name__ = "Integer32"
_SetAccoTimDayo_Object = MibTableColumn
setAccoTimDayo = _SetAccoTimDayo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 5),
    _SetAccoTimDayo_Type()
)
setAccoTimDayo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoTimDayo.setStatus("current")


class _SetAccoTimHour_Type(Integer32):
    """Custom type setAccoTimHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccoTimHour_Type.__name__ = "Integer32"
_SetAccoTimHour_Object = MibTableColumn
setAccoTimHour = _SetAccoTimHour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 6),
    _SetAccoTimHour_Type()
)
setAccoTimHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoTimHour.setStatus("current")


class _SetAccoTimMinu_Type(Integer32):
    """Custom type setAccoTimMinu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccoTimMinu_Type.__name__ = "Integer32"
_SetAccoTimMinu_Object = MibTableColumn
setAccoTimMinu = _SetAccoTimMinu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 8, 1, 7),
    _SetAccoTimMinu_Type()
)
setAccoTimMinu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoTimMinu.setStatus("current")
_SetAccoLasTable_Object = MibTable
setAccoLasTable = _SetAccoLasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9)
)
if mibBuilder.loadTexts:
    setAccoLasTable.setStatus("current")
_SetAccoLasEntry_Object = MibTableRow
setAccoLasEntry = _SetAccoLasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1)
)
setAccoLasEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setAccoLasUsern"),
    (0, "LANCOM-1711-MIB", "setAccoLasMacad"),
    (0, "LANCOM-1711-MIB", "setAccoLasPeer"),
    (0, "LANCOM-1711-MIB", "setAccoLasConnt"),
)
if mibBuilder.loadTexts:
    setAccoLasEntry.setStatus("current")


class _SetAccoLasUsern_Type(DisplayString):
    """Custom type setAccoLasUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_SetAccoLasUsern_Type.__name__ = "DisplayString"
_SetAccoLasUsern_Object = MibTableColumn
setAccoLasUsern = _SetAccoLasUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 1),
    _SetAccoLasUsern_Type()
)
setAccoLasUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasUsern.setStatus("current")


class _SetAccoLasMacad_Type(DisplayString):
    """Custom type setAccoLasMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetAccoLasMacad_Type.__name__ = "DisplayString"
_SetAccoLasMacad_Object = MibTableColumn
setAccoLasMacad = _SetAccoLasMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 2),
    _SetAccoLasMacad_Type()
)
setAccoLasMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasMacad.setStatus("current")


class _SetAccoLasPeer_Type(DisplayString):
    """Custom type setAccoLasPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetAccoLasPeer_Type.__name__ = "DisplayString"
_SetAccoLasPeer_Object = MibTableColumn
setAccoLasPeer = _SetAccoLasPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 3),
    _SetAccoLasPeer_Type()
)
setAccoLasPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasPeer.setStatus("current")


class _SetAccoLasConnt_Type(Integer32):
    """Custom type setAccoLasConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_SetAccoLasConnt_Type.__name__ = "Integer32"
_SetAccoLasConnt_Object = MibTableColumn
setAccoLasConnt = _SetAccoLasConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 4),
    _SetAccoLasConnt_Type()
)
setAccoLasConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasConnt.setStatus("current")


class _SetAccoLasRxkby_Type(Integer32):
    """Custom type setAccoLasRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoLasRxkby_Type.__name__ = "Integer32"
_SetAccoLasRxkby_Object = MibTableColumn
setAccoLasRxkby = _SetAccoLasRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 5),
    _SetAccoLasRxkby_Type()
)
setAccoLasRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasRxkby.setStatus("current")


class _SetAccoLasTxkby_Type(Integer32):
    """Custom type setAccoLasTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoLasTxkby_Type.__name__ = "Integer32"
_SetAccoLasTxkby_Object = MibTableColumn
setAccoLasTxkby = _SetAccoLasTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 6),
    _SetAccoLasTxkby_Type()
)
setAccoLasTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasTxkby.setStatus("current")


class _SetAccoLasTotal_Type(Integer32):
    """Custom type setAccoLasTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoLasTotal_Type.__name__ = "Integer32"
_SetAccoLasTotal_Object = MibTableColumn
setAccoLasTotal = _SetAccoLasTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 8),
    _SetAccoLasTotal_Type()
)
setAccoLasTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasTotal.setStatus("current")


class _SetAccoLasConne_Type(Integer32):
    """Custom type setAccoLasConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccoLasConne_Type.__name__ = "Integer32"
_SetAccoLasConne_Object = MibTableColumn
setAccoLasConne = _SetAccoLasConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 9, 1, 9),
    _SetAccoLasConne_Type()
)
setAccoLasConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccoLasConne.setStatus("current")


class _SetAccoDis_Type(Integer32):
    """Custom type setAccoDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ip-address", 1),
          ("mac-address", 0))
    )


_SetAccoDis_Type.__name__ = "Integer32"
_SetAccoDis_Object = MibScalar
setAccoDis = _SetAccoDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 18, 10),
    _SetAccoDis_Type()
)
setAccoDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccoDis.setStatus("current")
_SetVpn_ObjectIdentity = ObjectIdentity
setVpn = _SetVpn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19)
)
_SetVpnIsakmp_ObjectIdentity = ObjectIdentity
setVpnIsakmp = _SetVpnIsakmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3)
)
_SetVpnIsakmpTimTable_Object = MibTable
setVpnIsakmpTimTable = _SetVpnIsakmpTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4)
)
if mibBuilder.loadTexts:
    setVpnIsakmpTimTable.setStatus("current")
_SetVpnIsakmpTimEntry_Object = MibTableRow
setVpnIsakmpTimEntry = _SetVpnIsakmpTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1)
)
setVpnIsakmpTimEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnIsakmpTimIdx"),
)
if mibBuilder.loadTexts:
    setVpnIsakmpTimEntry.setStatus("current")


class _SetVpnIsakmpTimRetrlim_Type(Integer32):
    """Custom type setVpnIsakmpTimRetrlim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnIsakmpTimRetrlim_Type.__name__ = "Integer32"
_SetVpnIsakmpTimRetrlim_Object = MibTableColumn
setVpnIsakmpTimRetrlim = _SetVpnIsakmpTimRetrlim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 1),
    _SetVpnIsakmpTimRetrlim_Type()
)
setVpnIsakmpTimRetrlim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnIsakmpTimRetrlim.setStatus("current")


class _SetVpnIsakmpTimRetrtim_Type(Integer32):
    """Custom type setVpnIsakmpTimRetrtim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnIsakmpTimRetrtim_Type.__name__ = "Integer32"
_SetVpnIsakmpTimRetrtim_Object = MibTableColumn
setVpnIsakmpTimRetrtim = _SetVpnIsakmpTimRetrtim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 2),
    _SetVpnIsakmpTimRetrtim_Type()
)
setVpnIsakmpTimRetrtim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnIsakmpTimRetrtim.setStatus("current")


class _SetVpnIsakmpTimRetrtimu_Type(Integer32):
    """Custom type setVpnIsakmpTimRetrtimu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnIsakmpTimRetrtimu_Type.__name__ = "Integer32"
_SetVpnIsakmpTimRetrtimu_Object = MibTableColumn
setVpnIsakmpTimRetrtimu = _SetVpnIsakmpTimRetrtimu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 3),
    _SetVpnIsakmpTimRetrtimu_Type()
)
setVpnIsakmpTimRetrtimu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnIsakmpTimRetrtimu.setStatus("current")


class _SetVpnIsakmpTimRetrtimm_Type(Integer32):
    """Custom type setVpnIsakmpTimRetrtimm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnIsakmpTimRetrtimm_Type.__name__ = "Integer32"
_SetVpnIsakmpTimRetrtimm_Object = MibTableColumn
setVpnIsakmpTimRetrtimm = _SetVpnIsakmpTimRetrtimm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 4),
    _SetVpnIsakmpTimRetrtimm_Type()
)
setVpnIsakmpTimRetrtimm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnIsakmpTimRetrtimm.setStatus("current")


class _SetVpnIsakmpTimExptim_Type(Integer32):
    """Custom type setVpnIsakmpTimExptim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnIsakmpTimExptim_Type.__name__ = "Integer32"
_SetVpnIsakmpTimExptim_Object = MibTableColumn
setVpnIsakmpTimExptim = _SetVpnIsakmpTimExptim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 5),
    _SetVpnIsakmpTimExptim_Type()
)
setVpnIsakmpTimExptim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnIsakmpTimExptim.setStatus("current")


class _SetVpnIsakmpTimIdx_Type(Integer32):
    """Custom type setVpnIsakmpTimIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetVpnIsakmpTimIdx_Type.__name__ = "Integer32"
_SetVpnIsakmpTimIdx_Object = MibTableColumn
setVpnIsakmpTimIdx = _SetVpnIsakmpTimIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 3, 4, 1, 6),
    _SetVpnIsakmpTimIdx_Type()
)
setVpnIsakmpTimIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setVpnIsakmpTimIdx.setStatus("current")
_SetVpnProposals_ObjectIdentity = ObjectIdentity
setVpnProposals = _SetVpnProposals_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4)
)
_SetVpnProposalsIkeproTable_Object = MibTable
setVpnProposalsIkeproTable = _SetVpnProposalsIkeproTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9)
)
if mibBuilder.loadTexts:
    setVpnProposalsIkeproTable.setStatus("current")
_SetVpnProposalsIkeproEntry_Object = MibTableRow
setVpnProposalsIkeproEntry = _SetVpnProposalsIkeproEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1)
)
setVpnProposalsIkeproEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnProposalsIkeproIkeproposall"),
)
if mibBuilder.loadTexts:
    setVpnProposalsIkeproEntry.setStatus("current")


class _SetVpnProposalsIkeproIkeproposall_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposall based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposall_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposall_Object = MibTableColumn
setVpnProposalsIkeproIkeproposall = _SetVpnProposalsIkeproIkeproposall_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 1),
    _SetVpnProposalsIkeproIkeproposall_Type()
)
setVpnProposalsIkeproIkeproposall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposall.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal1_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal1_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal1_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal1 = _SetVpnProposalsIkeproIkeproposal1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 2),
    _SetVpnProposalsIkeproIkeproposal1_Type()
)
setVpnProposalsIkeproIkeproposal1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal1.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal2_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal2_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal2_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal2 = _SetVpnProposalsIkeproIkeproposal2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 3),
    _SetVpnProposalsIkeproIkeproposal2_Type()
)
setVpnProposalsIkeproIkeproposal2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal2.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal3_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal3_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal3_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal3 = _SetVpnProposalsIkeproIkeproposal3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 4),
    _SetVpnProposalsIkeproIkeproposal3_Type()
)
setVpnProposalsIkeproIkeproposal3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal3.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal4_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal4_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal4_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal4 = _SetVpnProposalsIkeproIkeproposal4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 5),
    _SetVpnProposalsIkeproIkeproposal4_Type()
)
setVpnProposalsIkeproIkeproposal4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal4.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal5_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal5_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal5_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal5 = _SetVpnProposalsIkeproIkeproposal5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 6),
    _SetVpnProposalsIkeproIkeproposal5_Type()
)
setVpnProposalsIkeproIkeproposal5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal5.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal6_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal6_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal6_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal6 = _SetVpnProposalsIkeproIkeproposal6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 7),
    _SetVpnProposalsIkeproIkeproposal6_Type()
)
setVpnProposalsIkeproIkeproposal6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal6.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal7_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal7 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal7_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal7_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal7 = _SetVpnProposalsIkeproIkeproposal7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 8),
    _SetVpnProposalsIkeproIkeproposal7_Type()
)
setVpnProposalsIkeproIkeproposal7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal7.setStatus("current")


class _SetVpnProposalsIkeproIkeproposal8_Type(DisplayString):
    """Custom type setVpnProposalsIkeproIkeproposal8 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeproIkeproposal8_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeproIkeproposal8_Object = MibTableColumn
setVpnProposalsIkeproIkeproposal8 = _SetVpnProposalsIkeproIkeproposal8_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 9, 1, 9),
    _SetVpnProposalsIkeproIkeproposal8_Type()
)
setVpnProposalsIkeproIkeproposal8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeproIkeproposal8.setStatus("current")
_SetVpnProposalsIpsecpTable_Object = MibTable
setVpnProposalsIpsecpTable = _SetVpnProposalsIpsecpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10)
)
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpTable.setStatus("current")
_SetVpnProposalsIpsecpEntry_Object = MibTableRow
setVpnProposalsIpsecpEntry = _SetVpnProposalsIpsecpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1)
)
setVpnProposalsIpsecpEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnProposalsIpsecpIpsecproposall"),
)
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpEntry.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposall_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposall based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposall_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposall_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposall = _SetVpnProposalsIpsecpIpsecproposall_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 1),
    _SetVpnProposalsIpsecpIpsecproposall_Type()
)
setVpnProposalsIpsecpIpsecproposall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposall.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal1_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal1_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal1_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal1 = _SetVpnProposalsIpsecpIpsecproposal1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 2),
    _SetVpnProposalsIpsecpIpsecproposal1_Type()
)
setVpnProposalsIpsecpIpsecproposal1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal1.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal2_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal2_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal2_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal2 = _SetVpnProposalsIpsecpIpsecproposal2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 3),
    _SetVpnProposalsIpsecpIpsecproposal2_Type()
)
setVpnProposalsIpsecpIpsecproposal2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal2.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal3_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal3_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal3_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal3 = _SetVpnProposalsIpsecpIpsecproposal3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 4),
    _SetVpnProposalsIpsecpIpsecproposal3_Type()
)
setVpnProposalsIpsecpIpsecproposal3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal3.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal4_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal4_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal4_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal4 = _SetVpnProposalsIpsecpIpsecproposal4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 5),
    _SetVpnProposalsIpsecpIpsecproposal4_Type()
)
setVpnProposalsIpsecpIpsecproposal4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal4.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal5_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal5_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal5_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal5 = _SetVpnProposalsIpsecpIpsecproposal5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 6),
    _SetVpnProposalsIpsecpIpsecproposal5_Type()
)
setVpnProposalsIpsecpIpsecproposal5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal5.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal6_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal6_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal6_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal6 = _SetVpnProposalsIpsecpIpsecproposal6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 7),
    _SetVpnProposalsIpsecpIpsecproposal6_Type()
)
setVpnProposalsIpsecpIpsecproposal6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal6.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal7_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal7 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal7_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal7_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal7 = _SetVpnProposalsIpsecpIpsecproposal7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 8),
    _SetVpnProposalsIpsecpIpsecproposal7_Type()
)
setVpnProposalsIpsecpIpsecproposal7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal7.setStatus("current")


class _SetVpnProposalsIpsecpIpsecproposal8_Type(DisplayString):
    """Custom type setVpnProposalsIpsecpIpsecproposal8 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecpIpsecproposal8_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecpIpsecproposal8_Object = MibTableColumn
setVpnProposalsIpsecpIpsecproposal8 = _SetVpnProposalsIpsecpIpsecproposal8_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 10, 1, 9),
    _SetVpnProposalsIpsecpIpsecproposal8_Type()
)
setVpnProposalsIpsecpIpsecproposal8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecpIpsecproposal8.setStatus("current")
_SetVpnProposalsIkeTable_Object = MibTable
setVpnProposalsIkeTable = _SetVpnProposalsIkeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11)
)
if mibBuilder.loadTexts:
    setVpnProposalsIkeTable.setStatus("current")
_SetVpnProposalsIkeEntry_Object = MibTableRow
setVpnProposalsIkeEntry = _SetVpnProposalsIkeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1)
)
setVpnProposalsIkeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnProposalsIkeName"),
)
if mibBuilder.loadTexts:
    setVpnProposalsIkeEntry.setStatus("current")


class _SetVpnProposalsIkeName_Type(DisplayString):
    """Custom type setVpnProposalsIkeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIkeName_Type.__name__ = "DisplayString"
_SetVpnProposalsIkeName_Object = MibTableColumn
setVpnProposalsIkeName = _SetVpnProposalsIkeName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 1),
    _SetVpnProposalsIkeName_Type()
)
setVpnProposalsIkeName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeName.setStatus("current")


class _SetVpnProposalsIkeIkecrypta_Type(Integer32):
    """Custom type setVpnProposalsIkeIkecrypta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5,
              6,
              7,
              42)
        )
    )
    namedValues = NamedValues(
        *(("aes-cbc", 7),
          ("blowfish-cbc", 3),
          ("cast128-cbc", 6),
          ("des-cbc", 1),
          ("e3des-cbc", 5),
          ("null", 42))
    )


_SetVpnProposalsIkeIkecrypta_Type.__name__ = "Integer32"
_SetVpnProposalsIkeIkecrypta_Object = MibTableColumn
setVpnProposalsIkeIkecrypta = _SetVpnProposalsIkeIkecrypta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 2),
    _SetVpnProposalsIkeIkecrypta_Type()
)
setVpnProposalsIkeIkecrypta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeIkecrypta.setStatus("current")


class _SetVpnProposalsIkeIkecryptk_Type(Integer32):
    """Custom type setVpnProposalsIkeIkecryptk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnProposalsIkeIkecryptk_Type.__name__ = "Integer32"
_SetVpnProposalsIkeIkecryptk_Object = MibTableColumn
setVpnProposalsIkeIkecryptk = _SetVpnProposalsIkeIkecryptk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 3),
    _SetVpnProposalsIkeIkecryptk_Type()
)
setVpnProposalsIkeIkecryptk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeIkecryptk.setStatus("current")


class _SetVpnProposalsIkeIkeauthal_Type(Integer32):
    """Custom type setVpnProposalsIkeIkeauthal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 1),
          ("sha1", 2))
    )


_SetVpnProposalsIkeIkeauthal_Type.__name__ = "Integer32"
_SetVpnProposalsIkeIkeauthal_Object = MibTableColumn
setVpnProposalsIkeIkeauthal = _SetVpnProposalsIkeIkeauthal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 4),
    _SetVpnProposalsIkeIkeauthal_Type()
)
setVpnProposalsIkeIkeauthal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeIkeauthal.setStatus("current")


class _SetVpnProposalsIkeIkeauthmo_Type(Integer32):
    """Custom type setVpnProposalsIkeIkeauthmo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("preshared-key", 1),
          ("rsa-signature", 3))
    )


_SetVpnProposalsIkeIkeauthmo_Type.__name__ = "Integer32"
_SetVpnProposalsIkeIkeauthmo_Object = MibTableColumn
setVpnProposalsIkeIkeauthmo = _SetVpnProposalsIkeIkeauthmo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 5),
    _SetVpnProposalsIkeIkeauthmo_Type()
)
setVpnProposalsIkeIkeauthmo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeIkeauthmo.setStatus("current")


class _SetVpnProposalsIkeLifetimes_Type(Integer32):
    """Custom type setVpnProposalsIkeLifetimes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnProposalsIkeLifetimes_Type.__name__ = "Integer32"
_SetVpnProposalsIkeLifetimes_Object = MibTableColumn
setVpnProposalsIkeLifetimes = _SetVpnProposalsIkeLifetimes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 6),
    _SetVpnProposalsIkeLifetimes_Type()
)
setVpnProposalsIkeLifetimes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeLifetimes.setStatus("current")


class _SetVpnProposalsIkeLifetimek_Type(Integer32):
    """Custom type setVpnProposalsIkeLifetimek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnProposalsIkeLifetimek_Type.__name__ = "Integer32"
_SetVpnProposalsIkeLifetimek_Object = MibTableColumn
setVpnProposalsIkeLifetimek = _SetVpnProposalsIkeLifetimek_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 11, 1, 7),
    _SetVpnProposalsIkeLifetimek_Type()
)
setVpnProposalsIkeLifetimek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIkeLifetimek.setStatus("current")
_SetVpnProposalsIpsecTable_Object = MibTable
setVpnProposalsIpsecTable = _SetVpnProposalsIpsecTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12)
)
if mibBuilder.loadTexts:
    setVpnProposalsIpsecTable.setStatus("current")
_SetVpnProposalsIpsecEntry_Object = MibTableRow
setVpnProposalsIpsecEntry = _SetVpnProposalsIpsecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1)
)
setVpnProposalsIpsecEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnProposalsIpsecName"),
)
if mibBuilder.loadTexts:
    setVpnProposalsIpsecEntry.setStatus("current")


class _SetVpnProposalsIpsecName_Type(DisplayString):
    """Custom type setVpnProposalsIpsecName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnProposalsIpsecName_Type.__name__ = "DisplayString"
_SetVpnProposalsIpsecName_Object = MibTableColumn
setVpnProposalsIpsecName = _SetVpnProposalsIpsecName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 1),
    _SetVpnProposalsIpsecName_Type()
)
setVpnProposalsIpsecName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecName.setStatus("current")


class _SetVpnProposalsIpsecEncapsmod_Type(Integer32):
    """Custom type setVpnProposalsIpsecEncapsmod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              65001)
        )
    )
    namedValues = NamedValues(
        *(("mixed-lcos4", 65001),
          ("transport", 2),
          ("tunnel", 1))
    )


_SetVpnProposalsIpsecEncapsmod_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecEncapsmod_Object = MibTableColumn
setVpnProposalsIpsecEncapsmod = _SetVpnProposalsIpsecEncapsmod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 2),
    _SetVpnProposalsIpsecEncapsmod_Type()
)
setVpnProposalsIpsecEncapsmod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecEncapsmod.setStatus("current")


class _SetVpnProposalsIpsecEspcrypta_Type(Integer32):
    """Custom type setVpnProposalsIpsecEspcrypta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3,
              6,
              7,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("aes-cbc", 12),
          ("blowfish-cbc", 7),
          ("cast128-cbc", 6),
          ("des-cbc", 2),
          ("e3des-cbc", 3),
          ("none", 0),
          ("null", 11))
    )


_SetVpnProposalsIpsecEspcrypta_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecEspcrypta_Object = MibTableColumn
setVpnProposalsIpsecEspcrypta = _SetVpnProposalsIpsecEspcrypta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 3),
    _SetVpnProposalsIpsecEspcrypta_Type()
)
setVpnProposalsIpsecEspcrypta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecEspcrypta.setStatus("current")


class _SetVpnProposalsIpsecEspcryptk_Type(Integer32):
    """Custom type setVpnProposalsIpsecEspcryptk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnProposalsIpsecEspcryptk_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecEspcryptk_Object = MibTableColumn
setVpnProposalsIpsecEspcryptk = _SetVpnProposalsIpsecEspcryptk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 4),
    _SetVpnProposalsIpsecEspcryptk_Type()
)
setVpnProposalsIpsecEspcryptk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecEspcryptk.setStatus("current")


class _SetVpnProposalsIpsecEspauthal_Type(Integer32):
    """Custom type setVpnProposalsIpsecEspauthal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hmac-md5", 1),
          ("hmac-sha1", 2),
          ("none", 0))
    )


_SetVpnProposalsIpsecEspauthal_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecEspauthal_Object = MibTableColumn
setVpnProposalsIpsecEspauthal = _SetVpnProposalsIpsecEspauthal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 5),
    _SetVpnProposalsIpsecEspauthal_Type()
)
setVpnProposalsIpsecEspauthal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecEspauthal.setStatus("current")


class _SetVpnProposalsIpsecAhauthalg_Type(Integer32):
    """Custom type setVpnProposalsIpsecAhauthalg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hmac-md5", 1),
          ("hmac-sha1", 2),
          ("none", 0))
    )


_SetVpnProposalsIpsecAhauthalg_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecAhauthalg_Object = MibTableColumn
setVpnProposalsIpsecAhauthalg = _SetVpnProposalsIpsecAhauthalg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 6),
    _SetVpnProposalsIpsecAhauthalg_Type()
)
setVpnProposalsIpsecAhauthalg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecAhauthalg.setStatus("current")


class _SetVpnProposalsIpsecIpcompalg_Type(Integer32):
    """Custom type setVpnProposalsIpsecIpcompalg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("deflate", 2),
          ("lzs", 3),
          ("none", 0))
    )


_SetVpnProposalsIpsecIpcompalg_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecIpcompalg_Object = MibTableColumn
setVpnProposalsIpsecIpcompalg = _SetVpnProposalsIpsecIpcompalg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 7),
    _SetVpnProposalsIpsecIpcompalg_Type()
)
setVpnProposalsIpsecIpcompalg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecIpcompalg.setStatus("current")


class _SetVpnProposalsIpsecLifetimes_Type(Integer32):
    """Custom type setVpnProposalsIpsecLifetimes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnProposalsIpsecLifetimes_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecLifetimes_Object = MibTableColumn
setVpnProposalsIpsecLifetimes = _SetVpnProposalsIpsecLifetimes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 8),
    _SetVpnProposalsIpsecLifetimes_Type()
)
setVpnProposalsIpsecLifetimes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecLifetimes.setStatus("current")


class _SetVpnProposalsIpsecLifetimek_Type(Integer32):
    """Custom type setVpnProposalsIpsecLifetimek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnProposalsIpsecLifetimek_Type.__name__ = "Integer32"
_SetVpnProposalsIpsecLifetimek_Object = MibTableColumn
setVpnProposalsIpsecLifetimek = _SetVpnProposalsIpsecLifetimek_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 4, 12, 1, 9),
    _SetVpnProposalsIpsecLifetimek_Type()
)
setVpnProposalsIpsecLifetimek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnProposalsIpsecLifetimek.setStatus("current")
_SetVpnCertificate_ObjectIdentity = ObjectIdentity
setVpnCertificate = _SetVpnCertificate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5)
)
_SetVpnCertificateIkeTable_Object = MibTable
setVpnCertificateIkeTable = _SetVpnCertificateIkeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3)
)
if mibBuilder.loadTexts:
    setVpnCertificateIkeTable.setStatus("current")
_SetVpnCertificateIkeEntry_Object = MibTableRow
setVpnCertificateIkeEntry = _SetVpnCertificateIkeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1)
)
setVpnCertificateIkeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnCertificateIkeName"),
)
if mibBuilder.loadTexts:
    setVpnCertificateIkeEntry.setStatus("current")


class _SetVpnCertificateIkeName_Type(DisplayString):
    """Custom type setVpnCertificateIkeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVpnCertificateIkeName_Type.__name__ = "DisplayString"
_SetVpnCertificateIkeName_Object = MibTableColumn
setVpnCertificateIkeName = _SetVpnCertificateIkeName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 1),
    _SetVpnCertificateIkeName_Type()
)
setVpnCertificateIkeName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeName.setStatus("current")


class _SetVpnCertificateIkeRemoteiden_Type(DisplayString):
    """Custom type setVpnCertificateIkeRemoteiden based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 254),
    )


_SetVpnCertificateIkeRemoteiden_Type.__name__ = "DisplayString"
_SetVpnCertificateIkeRemoteiden_Object = MibTableColumn
setVpnCertificateIkeRemoteiden = _SetVpnCertificateIkeRemoteiden_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 2),
    _SetVpnCertificateIkeRemoteiden_Type()
)
setVpnCertificateIkeRemoteiden.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeRemoteiden.setStatus("current")


class _SetVpnCertificateIkeSharedsec_Type(DisplayString):
    """Custom type setVpnCertificateIkeSharedsec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetVpnCertificateIkeSharedsec_Type.__name__ = "DisplayString"
_SetVpnCertificateIkeSharedsec_Object = MibTableColumn
setVpnCertificateIkeSharedsec = _SetVpnCertificateIkeSharedsec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 3),
    _SetVpnCertificateIkeSharedsec_Type()
)
setVpnCertificateIkeSharedsec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeSharedsec.setStatus("current")


class _SetVpnCertificateIkeSharedsecf_Type(DisplayString):
    """Custom type setVpnCertificateIkeSharedsecf based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SetVpnCertificateIkeSharedsecf_Type.__name__ = "DisplayString"
_SetVpnCertificateIkeSharedsecf_Object = MibTableColumn
setVpnCertificateIkeSharedsecf = _SetVpnCertificateIkeSharedsecf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 4),
    _SetVpnCertificateIkeSharedsecf_Type()
)
setVpnCertificateIkeSharedsecf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeSharedsecf.setStatus("current")


class _SetVpnCertificateIkeRemoteidty_Type(Integer32):
    """Custom type setVpnCertificateIkeRemoteidty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              9,
              11)
        )
    )
    namedValues = NamedValues(
        *(("distinguished-name", 9),
          ("domain-name", 2),
          ("email-address", 3),
          ("ip-address", 1),
          ("key-id", 11),
          ("no-identity", 0))
    )


_SetVpnCertificateIkeRemoteidty_Type.__name__ = "Integer32"
_SetVpnCertificateIkeRemoteidty_Object = MibTableColumn
setVpnCertificateIkeRemoteidty = _SetVpnCertificateIkeRemoteidty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 5),
    _SetVpnCertificateIkeRemoteidty_Type()
)
setVpnCertificateIkeRemoteidty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeRemoteidty.setStatus("current")


class _SetVpnCertificateIkeLocalidtyp_Type(Integer32):
    """Custom type setVpnCertificateIkeLocalidtyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              9,
              11)
        )
    )
    namedValues = NamedValues(
        *(("distinguished-name", 9),
          ("domain-name", 2),
          ("email-address", 3),
          ("ip-address", 1),
          ("key-id", 11),
          ("no-identity", 0))
    )


_SetVpnCertificateIkeLocalidtyp_Type.__name__ = "Integer32"
_SetVpnCertificateIkeLocalidtyp_Object = MibTableColumn
setVpnCertificateIkeLocalidtyp = _SetVpnCertificateIkeLocalidtyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 6),
    _SetVpnCertificateIkeLocalidtyp_Type()
)
setVpnCertificateIkeLocalidtyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeLocalidtyp.setStatus("current")


class _SetVpnCertificateIkeLocalident_Type(DisplayString):
    """Custom type setVpnCertificateIkeLocalident based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 254),
    )


_SetVpnCertificateIkeLocalident_Type.__name__ = "DisplayString"
_SetVpnCertificateIkeLocalident_Object = MibTableColumn
setVpnCertificateIkeLocalident = _SetVpnCertificateIkeLocalident_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 5, 3, 1, 7),
    _SetVpnCertificateIkeLocalident_Type()
)
setVpnCertificateIkeLocalident.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnCertificateIkeLocalident.setStatus("current")
_SetVpnLayerTable_Object = MibTable
setVpnLayerTable = _SetVpnLayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7)
)
if mibBuilder.loadTexts:
    setVpnLayerTable.setStatus("current")
_SetVpnLayerEntry_Object = MibTableRow
setVpnLayerEntry = _SetVpnLayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1)
)
setVpnLayerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnLayerName"),
)
if mibBuilder.loadTexts:
    setVpnLayerEntry.setStatus("current")


class _SetVpnLayerName_Type(DisplayString):
    """Custom type setVpnLayerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVpnLayerName_Type.__name__ = "DisplayString"
_SetVpnLayerName_Object = MibTableColumn
setVpnLayerName = _SetVpnLayerName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 1),
    _SetVpnLayerName_Type()
)
setVpnLayerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLayerName.setStatus("current")


class _SetVpnLayerPfsg_Type(Integer32):
    """Custom type setVpnLayerPfsg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnLayerPfsg_Type.__name__ = "Integer32"
_SetVpnLayerPfsg_Object = MibTableColumn
setVpnLayerPfsg = _SetVpnLayerPfsg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 3),
    _SetVpnLayerPfsg_Type()
)
setVpnLayerPfsg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLayerPfsg.setStatus("current")


class _SetVpnLayerIkeg_Type(Integer32):
    """Custom type setVpnLayerIkeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnLayerIkeg_Type.__name__ = "Integer32"
_SetVpnLayerIkeg_Object = MibTableColumn
setVpnLayerIkeg = _SetVpnLayerIkeg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 4),
    _SetVpnLayerIkeg_Type()
)
setVpnLayerIkeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLayerIkeg.setStatus("current")


class _SetVpnLayerIkep_Type(DisplayString):
    """Custom type setVpnLayerIkep based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnLayerIkep_Type.__name__ = "DisplayString"
_SetVpnLayerIkep_Object = MibTableColumn
setVpnLayerIkep = _SetVpnLayerIkep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 5),
    _SetVpnLayerIkep_Type()
)
setVpnLayerIkep.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLayerIkep.setStatus("current")


class _SetVpnLayerIpse_Type(DisplayString):
    """Custom type setVpnLayerIpse based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnLayerIpse_Type.__name__ = "DisplayString"
_SetVpnLayerIpse_Object = MibTableColumn
setVpnLayerIpse = _SetVpnLayerIpse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 6),
    _SetVpnLayerIpse_Type()
)
setVpnLayerIpse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLayerIpse.setStatus("current")


class _SetVpnLayerIkek_Type(DisplayString):
    """Custom type setVpnLayerIkek based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVpnLayerIkek_Type.__name__ = "DisplayString"
_SetVpnLayerIkek_Object = MibTableColumn
setVpnLayerIkek = _SetVpnLayerIkek_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 7, 1, 7),
    _SetVpnLayerIkek_Type()
)
setVpnLayerIkek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLayerIkek.setStatus("current")


class _SetVpnOperating_Type(Integer32):
    """Custom type setVpnOperating based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 3),
          ("no", 0),
          ("yes", 1))
    )


_SetVpnOperating_Type.__name__ = "Integer32"
_SetVpnOperating_Object = MibScalar
setVpnOperating = _SetVpnOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 8),
    _SetVpnOperating_Type()
)
setVpnOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnOperating.setStatus("current")
_SetVpnVpnpeersTable_Object = MibTable
setVpnVpnpeersTable = _SetVpnVpnpeersTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9)
)
if mibBuilder.loadTexts:
    setVpnVpnpeersTable.setStatus("current")
_SetVpnVpnpeersEntry_Object = MibTableRow
setVpnVpnpeersEntry = _SetVpnVpnpeersEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1)
)
setVpnVpnpeersEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnVpnpeersPeer"),
)
if mibBuilder.loadTexts:
    setVpnVpnpeersEntry.setStatus("current")


class _SetVpnVpnpeersPeer_Type(DisplayString):
    """Custom type setVpnVpnpeersPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVpnVpnpeersPeer_Type.__name__ = "DisplayString"
_SetVpnVpnpeersPeer_Object = MibTableColumn
setVpnVpnpeersPeer = _SetVpnVpnpeersPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 1),
    _SetVpnVpnpeersPeer_Type()
)
setVpnVpnpeersPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersPeer.setStatus("current")
_SetVpnVpnpeersExtr_Type = IpAddress
_SetVpnVpnpeersExtr_Object = MibTableColumn
setVpnVpnpeersExtr = _SetVpnVpnpeersExtr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 2),
    _SetVpnVpnpeersExtr_Type()
)
setVpnVpnpeersExtr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersExtr.setStatus("current")


class _SetVpnVpnpeersLaye_Type(DisplayString):
    """Custom type setVpnVpnpeersLaye based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVpnVpnpeersLaye_Type.__name__ = "DisplayString"
_SetVpnVpnpeersLaye_Object = MibTableColumn
setVpnVpnpeersLaye = _SetVpnVpnpeersLaye_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 4),
    _SetVpnVpnpeersLaye_Type()
)
setVpnVpnpeersLaye.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersLaye.setStatus("current")


class _SetVpnVpnpeersDyna_Type(Integer32):
    """Custom type setVpnVpnpeersDyna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("b-channel", 1),
          ("d-channel", 2),
          ("icmp", 4),
          ("no", 0),
          ("udp", 8))
    )


_SetVpnVpnpeersDyna_Type.__name__ = "Integer32"
_SetVpnVpnpeersDyna_Object = MibTableColumn
setVpnVpnpeersDyna = _SetVpnVpnpeersDyna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 5),
    _SetVpnVpnpeersDyna_Type()
)
setVpnVpnpeersDyna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersDyna.setStatus("current")


class _SetVpnVpnpeersShti_Type(Integer32):
    """Custom type setVpnVpnpeersShti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnVpnpeersShti_Type.__name__ = "Integer32"
_SetVpnVpnpeersShti_Object = MibTableColumn
setVpnVpnpeersShti = _SetVpnVpnpeersShti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 6),
    _SetVpnVpnpeersShti_Type()
)
setVpnVpnpeersShti.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersShti.setStatus("current")


class _SetVpnVpnpeersIkee_Type(Integer32):
    """Custom type setVpnVpnpeersIkee based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("aggressive-mode", 1),
          ("main-mode", 0))
    )


_SetVpnVpnpeersIkee_Type.__name__ = "Integer32"
_SetVpnVpnpeersIkee_Object = MibTableColumn
setVpnVpnpeersIkee = _SetVpnVpnpeersIkee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 7),
    _SetVpnVpnpeersIkee_Type()
)
setVpnVpnpeersIkee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersIkee.setStatus("current")


class _SetVpnVpnpeersRemo_Type(DisplayString):
    """Custom type setVpnVpnpeersRemo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnVpnpeersRemo_Type.__name__ = "DisplayString"
_SetVpnVpnpeersRemo_Object = MibTableColumn
setVpnVpnpeersRemo = _SetVpnVpnpeersRemo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 8),
    _SetVpnVpnpeersRemo_Type()
)
setVpnVpnpeersRemo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersRemo.setStatus("current")


class _SetVpnVpnpeersRule_Type(Integer32):
    """Custom type setVpnVpnpeersRule based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("manually", 1),
          ("off", 2))
    )


_SetVpnVpnpeersRule_Type.__name__ = "Integer32"
_SetVpnVpnpeersRule_Object = MibTableColumn
setVpnVpnpeersRule = _SetVpnVpnpeersRule_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 9),
    _SetVpnVpnpeersRule_Type()
)
setVpnVpnpeersRule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersRule.setStatus("current")


class _SetVpnVpnpeersDpdi_Type(Integer32):
    """Custom type setVpnVpnpeersDpdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetVpnVpnpeersDpdi_Type.__name__ = "Integer32"
_SetVpnVpnpeersDpdi_Object = MibTableColumn
setVpnVpnpeersDpdi = _SetVpnVpnpeersDpdi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 10),
    _SetVpnVpnpeersDpdi_Type()
)
setVpnVpnpeersDpdi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersDpdi.setStatus("current")


class _SetVpnVpnpeersIkec_Type(Integer32):
    """Custom type setVpnVpnpeersIkec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("client", 1),
          ("off", 0),
          ("server", 2))
    )


_SetVpnVpnpeersIkec_Type.__name__ = "Integer32"
_SetVpnVpnpeersIkec_Object = MibTableColumn
setVpnVpnpeersIkec = _SetVpnVpnpeersIkec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 11),
    _SetVpnVpnpeersIkec_Type()
)
setVpnVpnpeersIkec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersIkec.setStatus("current")


class _SetVpnVpnpeersXaut_Type(Integer32):
    """Custom type setVpnVpnpeersXaut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("client", 1),
          ("off", 0),
          ("server", 2))
    )


_SetVpnVpnpeersXaut_Type.__name__ = "Integer32"
_SetVpnVpnpeersXaut_Object = MibTableColumn
setVpnVpnpeersXaut = _SetVpnVpnpeersXaut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 12),
    _SetVpnVpnpeersXaut_Type()
)
setVpnVpnpeersXaut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersXaut.setStatus("current")


class _SetVpnVpnpeersRtgt_Type(Integer32):
    """Custom type setVpnVpnpeersRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnVpnpeersRtgt_Type.__name__ = "Integer32"
_SetVpnVpnpeersRtgt_Object = MibTableColumn
setVpnVpnpeersRtgt = _SetVpnVpnpeersRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 9, 1, 15),
    _SetVpnVpnpeersRtgt_Type()
)
setVpnVpnpeersRtgt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnVpnpeersRtgt.setStatus("current")


class _SetVpnAggrmodepro_Type(DisplayString):
    """Custom type setVpnAggrmodepro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnAggrmodepro_Type.__name__ = "DisplayString"
_SetVpnAggrmodepro_Object = MibScalar
setVpnAggrmodepro = _SetVpnAggrmodepro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 10),
    _SetVpnAggrmodepro_Type()
)
setVpnAggrmodepro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAggrmodepro.setStatus("current")
_SetVpnAggrmodeike_Type = Integer32
_SetVpnAggrmodeike_Object = MibScalar
setVpnAggrmodeike = _SetVpnAggrmodeike_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 11),
    _SetVpnAggrmodeike_Type()
)
setVpnAggrmodeike.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAggrmodeike.setStatus("current")
_SetVpnAdditionalgTable_Object = MibTable
setVpnAdditionalgTable = _SetVpnAdditionalgTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12)
)
if mibBuilder.loadTexts:
    setVpnAdditionalgTable.setStatus("current")
_SetVpnAdditionalgEntry_Object = MibTableRow
setVpnAdditionalgEntry = _SetVpnAdditionalgEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1)
)
setVpnAdditionalgEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVpnAdditionalgPeer"),
)
if mibBuilder.loadTexts:
    setVpnAdditionalgEntry.setStatus("current")


class _SetVpnAdditionalgPeer_Type(DisplayString):
    """Custom type setVpnAdditionalgPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVpnAdditionalgPeer_Type.__name__ = "DisplayString"
_SetVpnAdditionalgPeer_Object = MibTableColumn
setVpnAdditionalgPeer = _SetVpnAdditionalgPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 1),
    _SetVpnAdditionalgPeer_Type()
)
setVpnAdditionalgPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgPeer.setStatus("current")


class _SetVpnAdditionalgRemotegateway1_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway1_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway1_Object = MibTableColumn
setVpnAdditionalgRemotegateway1 = _SetVpnAdditionalgRemotegateway1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 2),
    _SetVpnAdditionalgRemotegateway1_Type()
)
setVpnAdditionalgRemotegateway1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway1.setStatus("current")


class _SetVpnAdditionalgRemotegateway2_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway2_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway2_Object = MibTableColumn
setVpnAdditionalgRemotegateway2 = _SetVpnAdditionalgRemotegateway2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 3),
    _SetVpnAdditionalgRemotegateway2_Type()
)
setVpnAdditionalgRemotegateway2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway2.setStatus("current")


class _SetVpnAdditionalgRemotegateway3_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway3_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway3_Object = MibTableColumn
setVpnAdditionalgRemotegateway3 = _SetVpnAdditionalgRemotegateway3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 4),
    _SetVpnAdditionalgRemotegateway3_Type()
)
setVpnAdditionalgRemotegateway3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway3.setStatus("current")


class _SetVpnAdditionalgRemotegateway4_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway4_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway4_Object = MibTableColumn
setVpnAdditionalgRemotegateway4 = _SetVpnAdditionalgRemotegateway4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 5),
    _SetVpnAdditionalgRemotegateway4_Type()
)
setVpnAdditionalgRemotegateway4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway4.setStatus("current")


class _SetVpnAdditionalgRemotegateway5_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway5_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway5_Object = MibTableColumn
setVpnAdditionalgRemotegateway5 = _SetVpnAdditionalgRemotegateway5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 6),
    _SetVpnAdditionalgRemotegateway5_Type()
)
setVpnAdditionalgRemotegateway5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway5.setStatus("current")


class _SetVpnAdditionalgRemotegateway6_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway6_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway6_Object = MibTableColumn
setVpnAdditionalgRemotegateway6 = _SetVpnAdditionalgRemotegateway6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 7),
    _SetVpnAdditionalgRemotegateway6_Type()
)
setVpnAdditionalgRemotegateway6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway6.setStatus("current")


class _SetVpnAdditionalgRemotegateway7_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway7 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway7_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway7_Object = MibTableColumn
setVpnAdditionalgRemotegateway7 = _SetVpnAdditionalgRemotegateway7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 8),
    _SetVpnAdditionalgRemotegateway7_Type()
)
setVpnAdditionalgRemotegateway7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway7.setStatus("current")


class _SetVpnAdditionalgRemotegateway8_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway8 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway8_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway8_Object = MibTableColumn
setVpnAdditionalgRemotegateway8 = _SetVpnAdditionalgRemotegateway8_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 9),
    _SetVpnAdditionalgRemotegateway8_Type()
)
setVpnAdditionalgRemotegateway8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway8.setStatus("current")


class _SetVpnAdditionalgBeginwith_Type(Integer32):
    """Custom type setVpnAdditionalgBeginwith based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("first", 1),
          ("last-used", 0),
          ("random", 2))
    )


_SetVpnAdditionalgBeginwith_Type.__name__ = "Integer32"
_SetVpnAdditionalgBeginwith_Object = MibTableColumn
setVpnAdditionalgBeginwith = _SetVpnAdditionalgBeginwith_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 10),
    _SetVpnAdditionalgBeginwith_Type()
)
setVpnAdditionalgBeginwith.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgBeginwith.setStatus("current")


class _SetVpnAdditionalgRtgtag1_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag1_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag1_Object = MibTableColumn
setVpnAdditionalgRtgtag1 = _SetVpnAdditionalgRtgtag1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 11),
    _SetVpnAdditionalgRtgtag1_Type()
)
setVpnAdditionalgRtgtag1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag1.setStatus("current")


class _SetVpnAdditionalgRtgtag2_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag2_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag2_Object = MibTableColumn
setVpnAdditionalgRtgtag2 = _SetVpnAdditionalgRtgtag2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 12),
    _SetVpnAdditionalgRtgtag2_Type()
)
setVpnAdditionalgRtgtag2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag2.setStatus("current")


class _SetVpnAdditionalgRtgtag3_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag3_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag3_Object = MibTableColumn
setVpnAdditionalgRtgtag3 = _SetVpnAdditionalgRtgtag3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 13),
    _SetVpnAdditionalgRtgtag3_Type()
)
setVpnAdditionalgRtgtag3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag3.setStatus("current")


class _SetVpnAdditionalgRtgtag4_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag4_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag4_Object = MibTableColumn
setVpnAdditionalgRtgtag4 = _SetVpnAdditionalgRtgtag4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 14),
    _SetVpnAdditionalgRtgtag4_Type()
)
setVpnAdditionalgRtgtag4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag4.setStatus("current")


class _SetVpnAdditionalgRtgtag5_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag5_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag5_Object = MibTableColumn
setVpnAdditionalgRtgtag5 = _SetVpnAdditionalgRtgtag5_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 15),
    _SetVpnAdditionalgRtgtag5_Type()
)
setVpnAdditionalgRtgtag5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag5.setStatus("current")


class _SetVpnAdditionalgRtgtag6_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag6_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag6_Object = MibTableColumn
setVpnAdditionalgRtgtag6 = _SetVpnAdditionalgRtgtag6_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 16),
    _SetVpnAdditionalgRtgtag6_Type()
)
setVpnAdditionalgRtgtag6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag6.setStatus("current")


class _SetVpnAdditionalgRtgtag7_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag7_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag7_Object = MibTableColumn
setVpnAdditionalgRtgtag7 = _SetVpnAdditionalgRtgtag7_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 17),
    _SetVpnAdditionalgRtgtag7_Type()
)
setVpnAdditionalgRtgtag7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag7.setStatus("current")


class _SetVpnAdditionalgRtgtag8_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag8 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag8_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag8_Object = MibTableColumn
setVpnAdditionalgRtgtag8 = _SetVpnAdditionalgRtgtag8_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 18),
    _SetVpnAdditionalgRtgtag8_Type()
)
setVpnAdditionalgRtgtag8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag8.setStatus("current")


class _SetVpnAdditionalgRemotegateway9_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway9 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway9_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway9_Object = MibTableColumn
setVpnAdditionalgRemotegateway9 = _SetVpnAdditionalgRemotegateway9_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 19),
    _SetVpnAdditionalgRemotegateway9_Type()
)
setVpnAdditionalgRemotegateway9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway9.setStatus("current")


class _SetVpnAdditionalgRemotegateway10_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway10 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway10_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway10_Object = MibTableColumn
setVpnAdditionalgRemotegateway10 = _SetVpnAdditionalgRemotegateway10_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 20),
    _SetVpnAdditionalgRemotegateway10_Type()
)
setVpnAdditionalgRemotegateway10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway10.setStatus("current")


class _SetVpnAdditionalgRemotegateway11_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway11 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway11_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway11_Object = MibTableColumn
setVpnAdditionalgRemotegateway11 = _SetVpnAdditionalgRemotegateway11_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 21),
    _SetVpnAdditionalgRemotegateway11_Type()
)
setVpnAdditionalgRemotegateway11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway11.setStatus("current")


class _SetVpnAdditionalgRemotegateway12_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway12 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway12_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway12_Object = MibTableColumn
setVpnAdditionalgRemotegateway12 = _SetVpnAdditionalgRemotegateway12_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 22),
    _SetVpnAdditionalgRemotegateway12_Type()
)
setVpnAdditionalgRemotegateway12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway12.setStatus("current")


class _SetVpnAdditionalgRemotegateway13_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway13 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway13_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway13_Object = MibTableColumn
setVpnAdditionalgRemotegateway13 = _SetVpnAdditionalgRemotegateway13_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 23),
    _SetVpnAdditionalgRemotegateway13_Type()
)
setVpnAdditionalgRemotegateway13.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway13.setStatus("current")


class _SetVpnAdditionalgRemotegateway14_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway14 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway14_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway14_Object = MibTableColumn
setVpnAdditionalgRemotegateway14 = _SetVpnAdditionalgRemotegateway14_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 24),
    _SetVpnAdditionalgRemotegateway14_Type()
)
setVpnAdditionalgRemotegateway14.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway14.setStatus("current")


class _SetVpnAdditionalgRemotegateway15_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway15 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway15_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway15_Object = MibTableColumn
setVpnAdditionalgRemotegateway15 = _SetVpnAdditionalgRemotegateway15_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 25),
    _SetVpnAdditionalgRemotegateway15_Type()
)
setVpnAdditionalgRemotegateway15.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway15.setStatus("current")


class _SetVpnAdditionalgRemotegateway16_Type(DisplayString):
    """Custom type setVpnAdditionalgRemotegateway16 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetVpnAdditionalgRemotegateway16_Type.__name__ = "DisplayString"
_SetVpnAdditionalgRemotegateway16_Object = MibTableColumn
setVpnAdditionalgRemotegateway16 = _SetVpnAdditionalgRemotegateway16_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 26),
    _SetVpnAdditionalgRemotegateway16_Type()
)
setVpnAdditionalgRemotegateway16.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRemotegateway16.setStatus("current")


class _SetVpnAdditionalgRtgtag9_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag9 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag9_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag9_Object = MibTableColumn
setVpnAdditionalgRtgtag9 = _SetVpnAdditionalgRtgtag9_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 27),
    _SetVpnAdditionalgRtgtag9_Type()
)
setVpnAdditionalgRtgtag9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag9.setStatus("current")


class _SetVpnAdditionalgRtgtag10_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag10 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag10_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag10_Object = MibTableColumn
setVpnAdditionalgRtgtag10 = _SetVpnAdditionalgRtgtag10_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 28),
    _SetVpnAdditionalgRtgtag10_Type()
)
setVpnAdditionalgRtgtag10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag10.setStatus("current")


class _SetVpnAdditionalgRtgtag11_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag11 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag11_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag11_Object = MibTableColumn
setVpnAdditionalgRtgtag11 = _SetVpnAdditionalgRtgtag11_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 29),
    _SetVpnAdditionalgRtgtag11_Type()
)
setVpnAdditionalgRtgtag11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag11.setStatus("current")


class _SetVpnAdditionalgRtgtag12_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag12 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag12_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag12_Object = MibTableColumn
setVpnAdditionalgRtgtag12 = _SetVpnAdditionalgRtgtag12_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 30),
    _SetVpnAdditionalgRtgtag12_Type()
)
setVpnAdditionalgRtgtag12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag12.setStatus("current")


class _SetVpnAdditionalgRtgtag13_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag13 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag13_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag13_Object = MibTableColumn
setVpnAdditionalgRtgtag13 = _SetVpnAdditionalgRtgtag13_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 31),
    _SetVpnAdditionalgRtgtag13_Type()
)
setVpnAdditionalgRtgtag13.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag13.setStatus("current")


class _SetVpnAdditionalgRtgtag14_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag14 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag14_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag14_Object = MibTableColumn
setVpnAdditionalgRtgtag14 = _SetVpnAdditionalgRtgtag14_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 32),
    _SetVpnAdditionalgRtgtag14_Type()
)
setVpnAdditionalgRtgtag14.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag14.setStatus("current")


class _SetVpnAdditionalgRtgtag15_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag15 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag15_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag15_Object = MibTableColumn
setVpnAdditionalgRtgtag15 = _SetVpnAdditionalgRtgtag15_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 33),
    _SetVpnAdditionalgRtgtag15_Type()
)
setVpnAdditionalgRtgtag15.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag15.setStatus("current")


class _SetVpnAdditionalgRtgtag16_Type(Integer32):
    """Custom type setVpnAdditionalgRtgtag16 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVpnAdditionalgRtgtag16_Type.__name__ = "Integer32"
_SetVpnAdditionalgRtgtag16_Object = MibTableColumn
setVpnAdditionalgRtgtag16 = _SetVpnAdditionalgRtgtag16_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 12, 1, 34),
    _SetVpnAdditionalgRtgtag16_Type()
)
setVpnAdditionalgRtgtag16.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAdditionalgRtgtag16.setStatus("current")


class _SetVpnMainmodepro_Type(DisplayString):
    """Custom type setVpnMainmodepro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnMainmodepro_Type.__name__ = "DisplayString"
_SetVpnMainmodepro_Object = MibScalar
setVpnMainmodepro = _SetVpnMainmodepro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 13),
    _SetVpnMainmodepro_Type()
)
setVpnMainmodepro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnMainmodepro.setStatus("current")
_SetVpnMainmodeike_Type = Integer32
_SetVpnMainmodeike_Object = MibScalar
setVpnMainmodeike = _SetVpnMainmodeike_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 14),
    _SetVpnMainmodeike_Type()
)
setVpnMainmodeike.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnMainmodeike.setStatus("current")


class _SetVpnLegacydynvp_Type(Integer32):
    """Custom type setVpnLegacydynvp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVpnLegacydynvp_Type.__name__ = "Integer32"
_SetVpnLegacydynvp_Object = MibScalar
setVpnLegacydynvp = _SetVpnLegacydynvp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 15),
    _SetVpnLegacydynvp_Type()
)
setVpnLegacydynvp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnLegacydynvp.setStatus("current")


class _SetVpnNattoperati_Type(Integer32):
    """Custom type setVpnNattoperati based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVpnNattoperati_Type.__name__ = "Integer32"
_SetVpnNattoperati_Object = MibScalar
setVpnNattoperati = _SetVpnNattoperati_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 16),
    _SetVpnNattoperati_Type()
)
setVpnNattoperati.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnNattoperati.setStatus("current")


class _SetVpnSimplecertr_Type(Integer32):
    """Custom type setVpnSimplecertr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVpnSimplecertr_Type.__name__ = "Integer32"
_SetVpnSimplecertr_Object = MibScalar
setVpnSimplecertr = _SetVpnSimplecertr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 17),
    _SetVpnSimplecertr_Type()
)
setVpnSimplecertr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnSimplecertr.setStatus("current")


class _SetVpnQuickmodepr_Type(DisplayString):
    """Custom type setVpnQuickmodepr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetVpnQuickmodepr_Type.__name__ = "DisplayString"
_SetVpnQuickmodepr_Object = MibScalar
setVpnQuickmodepr = _SetVpnQuickmodepr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 19),
    _SetVpnQuickmodepr_Type()
)
setVpnQuickmodepr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnQuickmodepr.setStatus("current")
_SetVpnQuickmodepf_Type = Integer32
_SetVpnQuickmodepf_Object = MibScalar
setVpnQuickmodepf = _SetVpnQuickmodepf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 20),
    _SetVpnQuickmodepf_Type()
)
setVpnQuickmodepf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnQuickmodepf.setStatus("current")
_SetVpnQuickmodesh_Type = Integer32
_SetVpnQuickmodesh_Object = MibScalar
setVpnQuickmodesh = _SetVpnQuickmodesh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 21),
    _SetVpnQuickmodesh_Type()
)
setVpnQuickmodesh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnQuickmodesh.setStatus("current")


class _SetVpnAllowremote_Type(Integer32):
    """Custom type setVpnAllowremote based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVpnAllowremote_Type.__name__ = "Integer32"
_SetVpnAllowremote_Object = MibScalar
setVpnAllowremote = _SetVpnAllowremote_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 22),
    _SetVpnAllowremote_Type()
)
setVpnAllowremote.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnAllowremote.setStatus("current")


class _SetVpnEstablishsa_Type(Integer32):
    """Custom type setVpnEstablishsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("only-with-keepalive", 2),
          ("yes", 1))
    )


_SetVpnEstablishsa_Type.__name__ = "Integer32"
_SetVpnEstablishsa_Object = MibScalar
setVpnEstablishsa = _SetVpnEstablishsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 19, 23),
    _SetVpnEstablishsa_Type()
)
setVpnEstablishsa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVpnEstablishsa.setStatus("current")
_SetHttp_ObjectIdentity = ObjectIdentity
setHttp = _SetHttp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21)
)


class _SetHttpDoc_Type(DisplayString):
    """Custom type setHttpDoc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 99),
    )


_SetHttpDoc_Type.__name__ = "DisplayString"
_SetHttpDoc_Object = MibScalar
setHttpDoc = _SetHttpDoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 1),
    _SetHttpDoc_Type()
)
setHttpDoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpDoc.setStatus("current")


class _SetHttpUse_Type(Integer32):
    """Custom type setHttpUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetHttpUse_Type.__name__ = "Integer32"
_SetHttpUse_Object = MibScalar
setHttpUse = _SetHttpUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 2),
    _SetHttpUse_Type()
)
setHttpUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpUse.setStatus("current")


class _SetHttpFon_Type(DisplayString):
    """Custom type setHttpFon based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_SetHttpFon_Type.__name__ = "DisplayString"
_SetHttpFon_Object = MibScalar
setHttpFon = _SetHttpFon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 3),
    _SetHttpFon_Type()
)
setHttpFon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpFon.setStatus("current")


class _SetHttpErr_Type(Integer32):
    """Custom type setHttpErr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("nifty", 1),
          ("standard", 0))
    )


_SetHttpErr_Type.__name__ = "Integer32"
_SetHttpErr_Object = MibScalar
setHttpErr = _SetHttpErr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 6),
    _SetHttpErr_Type()
)
setHttpErr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpErr.setStatus("current")
_SetHttpPor_Type = Integer32
_SetHttpPor_Object = MibScalar
setHttpPor = _SetHttpPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 7),
    _SetHttpPor_Type()
)
setHttpPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpPor.setStatus("current")
_SetHttpSsl_Type = Integer32
_SetHttpSsl_Object = MibScalar
setHttpSsl = _SetHttpSsl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 8),
    _SetHttpSsl_Type()
)
setHttpSsl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpSsl.setStatus("current")
_SetHttpMax_Type = Integer32
_SetHttpMax_Object = MibScalar
setHttpMax = _SetHttpMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 9),
    _SetHttpMax_Type()
)
setHttpMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpMax.setStatus("current")
_SetHttpTun_Type = Integer32
_SetHttpTun_Object = MibScalar
setHttpTun = _SetHttpTun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 10),
    _SetHttpTun_Type()
)
setHttpTun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpTun.setStatus("current")
_SetHttpSes_Type = Integer32
_SetHttpSes_Object = MibScalar
setHttpSes = _SetHttpSes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 11),
    _SetHttpSes_Type()
)
setHttpSes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpSes.setStatus("current")


class _SetHttpSta_Type(Integer32):
    """Custom type setHttpSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("design-for-small-resolutions", 1),
          ("design-with-high-contrast", 2),
          ("normal-design", 0))
    )


_SetHttpSta_Type.__name__ = "Integer32"
_SetHttpSta_Object = MibScalar
setHttpSta = _SetHttpSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 13),
    _SetHttpSta_Type()
)
setHttpSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpSta.setStatus("current")
_SetHttpShoTable_Object = MibTable
setHttpShoTable = _SetHttpShoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14)
)
if mibBuilder.loadTexts:
    setHttpShoTable.setStatus("current")
_SetHttpShoEntry_Object = MibTableRow
setHttpShoEntry = _SetHttpShoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1)
)
setHttpShoEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setHttpShoDev"),
)
if mibBuilder.loadTexts:
    setHttpShoEntry.setStatus("current")


class _SetHttpShoDev_Type(Integer32):
    """Custom type setHttpShoDev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              14,
              15,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("cpu", 1),
          ("dhcp", 10),
          ("dns", 11),
          ("dsl-dslol", 15),
          ("ethernet-ports", 5),
          ("firewall", 9),
          ("ip-addresses", 19),
          ("isdn", 14),
          ("memory", 2),
          ("operating-time", 20),
          ("router", 8),
          ("time", 18),
          ("troughput-ethernet", 6),
          ("umts-modem-interface", 7),
          ("vpn", 12))
    )


_SetHttpShoDev_Type.__name__ = "Integer32"
_SetHttpShoDev_Object = MibTableColumn
setHttpShoDev = _SetHttpShoDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1, 1),
    _SetHttpShoDev_Type()
)
setHttpShoDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpShoDev.setStatus("current")


class _SetHttpShoPos_Type(Integer32):
    """Custom type setHttpShoPos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpShoPos_Type.__name__ = "Integer32"
_SetHttpShoPos_Object = MibTableColumn
setHttpShoPos = _SetHttpShoPos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 14, 1, 2),
    _SetHttpShoPos_Type()
)
setHttpShoPos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpShoPos.setStatus("current")


class _SetHttpHtt_Type(Integer32):
    """Custom type setHttpHtt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activated", 0),
          ("deactivated", 2),
          ("only-for-wan", 1))
    )


_SetHttpHtt_Type.__name__ = "Integer32"
_SetHttpHtt_Object = MibScalar
setHttpHtt = _SetHttpHtt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 15),
    _SetHttpHtt_Type()
)
setHttpHtt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpHtt.setStatus("current")
_SetHttpRol_ObjectIdentity = ObjectIdentity
setHttpRol = _SetHttpRol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20)
)


class _SetHttpRolOperating_Type(Integer32):
    """Custom type setHttpRolOperating based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetHttpRolOperating_Type.__name__ = "Integer32"
_SetHttpRolOperating_Object = MibScalar
setHttpRolOperating = _SetHttpRolOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 1),
    _SetHttpRolOperating_Type()
)
setHttpRolOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolOperating.setStatus("current")


class _SetHttpRolTitle_Type(DisplayString):
    """Custom type setHttpRolTitle based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetHttpRolTitle_Type.__name__ = "DisplayString"
_SetHttpRolTitle_Object = MibScalar
setHttpRolTitle = _SetHttpRolTitle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 2),
    _SetHttpRolTitle_Type()
)
setHttpRolTitle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolTitle.setStatus("current")
_SetHttpRolVariablesTable_Object = MibTable
setHttpRolVariablesTable = _SetHttpRolVariablesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3)
)
if mibBuilder.loadTexts:
    setHttpRolVariablesTable.setStatus("current")
_SetHttpRolVariablesEntry_Object = MibTableRow
setHttpRolVariablesEntry = _SetHttpRolVariablesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1)
)
setHttpRolVariablesEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setHttpRolVariablesInd"),
)
if mibBuilder.loadTexts:
    setHttpRolVariablesEntry.setStatus("current")


class _SetHttpRolVariablesInd_Type(Integer32):
    """Custom type setHttpRolVariablesInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolVariablesInd_Type.__name__ = "Integer32"
_SetHttpRolVariablesInd_Object = MibTableColumn
setHttpRolVariablesInd = _SetHttpRolVariablesInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 1),
    _SetHttpRolVariablesInd_Type()
)
setHttpRolVariablesInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesInd.setStatus("current")


class _SetHttpRolVariablesIde_Type(DisplayString):
    """Custom type setHttpRolVariablesIde based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetHttpRolVariablesIde_Type.__name__ = "DisplayString"
_SetHttpRolVariablesIde_Object = MibTableColumn
setHttpRolVariablesIde = _SetHttpRolVariablesIde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 2),
    _SetHttpRolVariablesIde_Type()
)
setHttpRolVariablesIde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesIde.setStatus("current")


class _SetHttpRolVariablesTit_Type(DisplayString):
    """Custom type setHttpRolVariablesTit based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetHttpRolVariablesTit_Type.__name__ = "DisplayString"
_SetHttpRolVariablesTit_Object = MibTableColumn
setHttpRolVariablesTit = _SetHttpRolVariablesTit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 3),
    _SetHttpRolVariablesTit_Type()
)
setHttpRolVariablesTit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesTit.setStatus("current")


class _SetHttpRolVariablesTyp_Type(Integer32):
    """Custom type setHttpRolVariablesTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("checkmark", 4),
          ("integer", 1),
          ("label", 0),
          ("password", 3),
          ("string", 2))
    )


_SetHttpRolVariablesTyp_Type.__name__ = "Integer32"
_SetHttpRolVariablesTyp_Object = MibTableColumn
setHttpRolVariablesTyp = _SetHttpRolVariablesTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 4),
    _SetHttpRolVariablesTyp_Type()
)
setHttpRolVariablesTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesTyp.setStatus("current")


class _SetHttpRolVariablesMin_Type(Integer32):
    """Custom type setHttpRolVariablesMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolVariablesMin_Type.__name__ = "Integer32"
_SetHttpRolVariablesMin_Object = MibTableColumn
setHttpRolVariablesMin = _SetHttpRolVariablesMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 5),
    _SetHttpRolVariablesMin_Type()
)
setHttpRolVariablesMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesMin.setStatus("current")


class _SetHttpRolVariablesMax_Type(Integer32):
    """Custom type setHttpRolVariablesMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolVariablesMax_Type.__name__ = "Integer32"
_SetHttpRolVariablesMax_Object = MibTableColumn
setHttpRolVariablesMax = _SetHttpRolVariablesMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 6),
    _SetHttpRolVariablesMax_Type()
)
setHttpRolVariablesMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesMax.setStatus("current")


class _SetHttpRolVariablesDef_Type(DisplayString):
    """Custom type setHttpRolVariablesDef based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetHttpRolVariablesDef_Type.__name__ = "DisplayString"
_SetHttpRolVariablesDef_Object = MibTableColumn
setHttpRolVariablesDef = _SetHttpRolVariablesDef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 3, 1, 7),
    _SetHttpRolVariablesDef_Type()
)
setHttpRolVariablesDef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesDef.setStatus("current")
_SetHttpRolActionsTable_Object = MibTable
setHttpRolActionsTable = _SetHttpRolActionsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4)
)
if mibBuilder.loadTexts:
    setHttpRolActionsTable.setStatus("current")
_SetHttpRolActionsEntry_Object = MibTableRow
setHttpRolActionsEntry = _SetHttpRolActionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1)
)
setHttpRolActionsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setHttpRolActionsInd"),
)
if mibBuilder.loadTexts:
    setHttpRolActionsEntry.setStatus("current")


class _SetHttpRolActionsInd_Type(Integer32):
    """Custom type setHttpRolActionsInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolActionsInd_Type.__name__ = "Integer32"
_SetHttpRolActionsInd_Object = MibTableColumn
setHttpRolActionsInd = _SetHttpRolActionsInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 1),
    _SetHttpRolActionsInd_Type()
)
setHttpRolActionsInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolActionsInd.setStatus("current")


class _SetHttpRolActionsAct_Type(DisplayString):
    """Custom type setHttpRolActionsAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetHttpRolActionsAct_Type.__name__ = "DisplayString"
_SetHttpRolActionsAct_Object = MibTableColumn
setHttpRolActionsAct = _SetHttpRolActionsAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 2),
    _SetHttpRolActionsAct_Type()
)
setHttpRolActionsAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolActionsAct.setStatus("current")


class _SetHttpRolActionsDes_Type(DisplayString):
    """Custom type setHttpRolActionsDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetHttpRolActionsDes_Type.__name__ = "DisplayString"
_SetHttpRolActionsDes_Object = MibTableColumn
setHttpRolActionsDes = _SetHttpRolActionsDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 4, 1, 3),
    _SetHttpRolActionsDes_Type()
)
setHttpRolActionsDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolActionsDes.setStatus("current")
_SetHttpRolRenumberv_Type = DisplayString
_SetHttpRolRenumberv_Object = MibScalar
setHttpRolRenumberv = _SetHttpRolRenumberv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 5),
    _SetHttpRolRenumberv_Type()
)
setHttpRolRenumberv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolRenumberv.setStatus("current")
_SetHttpRolRenumbera_Type = DisplayString
_SetHttpRolRenumbera_Object = MibScalar
setHttpRolRenumbera = _SetHttpRolRenumbera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 6),
    _SetHttpRolRenumbera_Type()
)
setHttpRolRenumbera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolRenumbera.setStatus("current")


class _SetHttpRolDisplayco_Type(Bits):
    """Custom type setHttpRolDisplayco based on Bits"""
    namedValues = NamedValues(
        *(("dsl", 28),
          ("isdn", 30),
          ("vpn", 29))
    )

_SetHttpRolDisplayco_Type.__name__ = "Bits"
_SetHttpRolDisplayco_Object = MibScalar
setHttpRolDisplayco = _SetHttpRolDisplayco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 21, 20, 7),
    _SetHttpRolDisplayco_Type()
)
setHttpRolDisplayco.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolDisplayco.setStatus("current")
_SetSysl_ObjectIdentity = ObjectIdentity
setSysl = _SetSysl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22)
)


class _SetSyslOpe_Type(Integer32):
    """Custom type setSyslOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetSyslOpe_Type.__name__ = "Integer32"
_SetSyslOpe_Object = MibScalar
setSyslOpe = _SetSyslOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 1),
    _SetSyslOpe_Type()
)
setSyslOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslOpe.setStatus("current")
_SetSyslSerTable_Object = MibTable
setSyslSerTable = _SetSyslSerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2)
)
if mibBuilder.loadTexts:
    setSyslSerTable.setStatus("current")
_SetSyslSerEntry_Object = MibTableRow
setSyslSerEntry = _SetSyslSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1)
)
setSyslSerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setSyslSerIdx"),
)
if mibBuilder.loadTexts:
    setSyslSerEntry.setStatus("current")


class _SetSyslSerIdx_Type(DisplayString):
    """Custom type setSyslSerIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetSyslSerIdx_Type.__name__ = "DisplayString"
_SetSyslSerIdx_Object = MibTableColumn
setSyslSerIdx = _SetSyslSerIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 1),
    _SetSyslSerIdx_Type()
)
setSyslSerIdx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslSerIdx.setStatus("current")
_SetSyslSerIpa_Type = IpAddress
_SetSyslSerIpa_Object = MibTableColumn
setSyslSerIpa = _SetSyslSerIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 2),
    _SetSyslSerIpa_Type()
)
setSyslSerIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslSerIpa.setStatus("current")


class _SetSyslSerSou_Type(Integer32):
    """Custom type setSyslSerSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetSyslSerSou_Type.__name__ = "Integer32"
_SetSyslSerSou_Object = MibTableColumn
setSyslSerSou = _SetSyslSerSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 3),
    _SetSyslSerSou_Type()
)
setSyslSerSou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslSerSou.setStatus("current")


class _SetSyslSerLev_Type(Integer32):
    """Custom type setSyslSerLev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetSyslSerLev_Type.__name__ = "Integer32"
_SetSyslSerLev_Object = MibTableColumn
setSyslSerLev = _SetSyslSerLev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 4),
    _SetSyslSerLev_Type()
)
setSyslSerLev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslSerLev.setStatus("current")


class _SetSyslSerLoo_Type(DisplayString):
    """Custom type setSyslSerLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetSyslSerLoo_Type.__name__ = "DisplayString"
_SetSyslSerLoo_Object = MibTableColumn
setSyslSerLoo = _SetSyslSerLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 2, 1, 6),
    _SetSyslSerLoo_Type()
)
setSyslSerLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslSerLoo.setStatus("current")
_SetSyslFacTable_Object = MibTable
setSyslFacTable = _SetSyslFacTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3)
)
if mibBuilder.loadTexts:
    setSyslFacTable.setStatus("current")
_SetSyslFacEntry_Object = MibTableRow
setSyslFacEntry = _SetSyslFacEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1)
)
setSyslFacEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setSyslFacSou"),
)
if mibBuilder.loadTexts:
    setSyslFacEntry.setStatus("current")


class _SetSyslFacSou_Type(Integer32):
    """Custom type setSyslFacSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128)
        )
    )
    namedValues = NamedValues(
        *(("accounting", 32),
          ("administration", 64),
          ("connections", 16),
          ("console-login", 8),
          ("login", 2),
          ("router", 128),
          ("system", 1),
          ("systemtime", 4))
    )


_SetSyslFacSou_Type.__name__ = "Integer32"
_SetSyslFacSou_Object = MibTableColumn
setSyslFacSou = _SetSyslFacSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1, 1),
    _SetSyslFacSou_Type()
)
setSyslFacSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSyslFacSou.setStatus("current")


class _SetSyslFacFac_Type(Integer32):
    """Custom type setSyslFacFac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("auth", 4),
          ("authpriv", 10),
          ("cron", 9),
          ("daemon", 3),
          ("kern", 0),
          ("local0", 16),
          ("local1", 17),
          ("local2", 18),
          ("local3", 19),
          ("local4", 20),
          ("local5", 21),
          ("local6", 22),
          ("local7", 23),
          ("lpr", 6),
          ("mail", 2),
          ("news", 7),
          ("syslog", 5),
          ("user", 1),
          ("uucp", 8))
    )


_SetSyslFacFac_Type.__name__ = "Integer32"
_SetSyslFacFac_Object = MibTableColumn
setSyslFacFac = _SetSyslFacFac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 3, 1, 2),
    _SetSyslFacFac_Type()
)
setSyslFacFac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslFacFac.setStatus("current")
_SetSyslPor_Type = Integer32
_SetSyslPor_Object = MibScalar
setSyslPor = _SetSyslPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 4),
    _SetSyslPor_Type()
)
setSyslPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslPor.setStatus("current")


class _SetSyslMes_Type(Integer32):
    """Custom type setSyslMes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("newest-on-top", 1),
          ("oldest-on-top", 0))
    )


_SetSyslMes_Type.__name__ = "Integer32"
_SetSyslMes_Object = MibScalar
setSyslMes = _SetSyslMes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 22, 5),
    _SetSyslMes_Type()
)
setSyslMes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSyslMes.setStatus("current")
_SetInte_ObjectIdentity = ObjectIdentity
setInte = _SetInte_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23)
)
_SetInteS0Table_Object = MibTable
setInteS0Table = _SetInteS0Table_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1)
)
if mibBuilder.loadTexts:
    setInteS0Table.setStatus("current")
_SetInteS0Entry_Object = MibTableRow
setInteS0Entry = _SetInteS0Entry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1)
)
setInteS0Entry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setInteS0Ifc"),
)
if mibBuilder.loadTexts:
    setInteS0Entry.setStatus("current")


class _SetInteS0Ifc_Type(Integer32):
    """Custom type setInteS0Ifc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_SetInteS0Ifc_Type.__name__ = "Integer32"
_SetInteS0Ifc_Object = MibTableColumn
setInteS0Ifc = _SetInteS0Ifc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 1),
    _SetInteS0Ifc_Type()
)
setInteS0Ifc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteS0Ifc.setStatus("current")


class _SetInteS0Prot_Type(Integer32):
    """Custom type setInteS0Prot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              16,
              255)
        )
    )
    namedValues = NamedValues(
        *(("auto", 255),
          ("dss1", 1),
          ("e1tr6", 2),
          ("grp0", 16),
          ("no", 0),
          ("p2p-dss1", 4))
    )


_SetInteS0Prot_Type.__name__ = "Integer32"
_SetInteS0Prot_Object = MibTableColumn
setInteS0Prot = _SetInteS0Prot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 2),
    _SetInteS0Prot_Type()
)
setInteS0Prot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteS0Prot.setStatus("current")


class _SetInteS0Llbc_Type(Integer32):
    """Custom type setInteS0Llbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("b1", 1),
          ("b2", 2),
          ("none", 0))
    )


_SetInteS0Llbc_Type.__name__ = "Integer32"
_SetInteS0Llbc_Object = MibTableColumn
setInteS0Llbc = _SetInteS0Llbc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 7),
    _SetInteS0Llbc_Type()
)
setInteS0Llbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteS0Llbc.setStatus("current")


class _SetInteS0Dial_Type(DisplayString):
    """Custom type setInteS0Dial based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetInteS0Dial_Type.__name__ = "DisplayString"
_SetInteS0Dial_Object = MibTableColumn
setInteS0Dial = _SetInteS0Dial_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 9),
    _SetInteS0Dial_Type()
)
setInteS0Dial.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteS0Dial.setStatus("current")


class _SetInteS0Maxi_Type(Integer32):
    """Custom type setInteS0Maxi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("one", 1),
          ("two", 0),
          ("zero", 2))
    )


_SetInteS0Maxi_Type.__name__ = "Integer32"
_SetInteS0Maxi_Object = MibTableColumn
setInteS0Maxi = _SetInteS0Maxi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 13),
    _SetInteS0Maxi_Type()
)
setInteS0Maxi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteS0Maxi.setStatus("current")


class _SetInteS0Maxo_Type(Integer32):
    """Custom type setInteS0Maxo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("one", 1),
          ("two", 0),
          ("zero", 2))
    )


_SetInteS0Maxo_Type.__name__ = "Integer32"
_SetInteS0Maxo_Object = MibTableColumn
setInteS0Maxo = _SetInteS0Maxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 14),
    _SetInteS0Maxo_Type()
)
setInteS0Maxo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteS0Maxo.setStatus("current")


class _SetInteS0Type_Type(Integer32):
    """Custom type setInteS0Type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteS0Type_Type.__name__ = "Integer32"
_SetInteS0Type_Object = MibTableColumn
setInteS0Type = _SetInteS0Type_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 1, 1, 15),
    _SetInteS0Type_Type()
)
setInteS0Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteS0Type.setStatus("current")
_SetInteDslTable_Object = MibTable
setInteDslTable = _SetInteDslTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4)
)
if mibBuilder.loadTexts:
    setInteDslTable.setStatus("current")
_SetInteDslEntry_Object = MibTableRow
setInteDslEntry = _SetInteDslEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1)
)
setInteDslEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setInteDslIfc"),
)
if mibBuilder.loadTexts:
    setInteDslEntry.setStatus("current")


class _SetInteDslIfc_Type(Integer32):
    """Custom type setInteDslIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_SetInteDslIfc_Type.__name__ = "Integer32"
_SetInteDslIfc_Object = MibTableColumn
setInteDslIfc = _SetInteDslIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 1),
    _SetInteDslIfc_Type()
)
setInteDslIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteDslIfc.setStatus("current")


class _SetInteDslOpe_Type(Integer32):
    """Custom type setInteDslOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 16))
    )


_SetInteDslOpe_Type.__name__ = "Integer32"
_SetInteDslOpe_Object = MibTableColumn
setInteDslOpe = _SetInteDslOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 2),
    _SetInteDslOpe_Type()
)
setInteDslOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteDslOpe.setStatus("current")


class _SetInteDslTyp_Type(Integer32):
    """Custom type setInteDslTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteDslTyp_Type.__name__ = "Integer32"
_SetInteDslTyp_Object = MibTableColumn
setInteDslTyp = _SetInteDslTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 15),
    _SetInteDslTyp_Type()
)
setInteDslTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteDslTyp.setStatus("current")


class _SetInteDslUps_Type(Integer32):
    """Custom type setInteDslUps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteDslUps_Type.__name__ = "Integer32"
_SetInteDslUps_Object = MibTableColumn
setInteDslUps = _SetInteDslUps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 16),
    _SetInteDslUps_Type()
)
setInteDslUps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteDslUps.setStatus("current")


class _SetInteDslExt_Type(Integer32):
    """Custom type setInteDslExt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteDslExt_Type.__name__ = "Integer32"
_SetInteDslExt_Object = MibTableColumn
setInteDslExt = _SetInteDslExt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 17),
    _SetInteDslExt_Type()
)
setInteDslExt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteDslExt.setStatus("current")


class _SetInteDslDow_Type(Integer32):
    """Custom type setInteDslDow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteDslDow_Type.__name__ = "Integer32"
_SetInteDslDow_Object = MibTableColumn
setInteDslDow = _SetInteDslDow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 4, 1, 18),
    _SetInteDslDow_Type()
)
setInteDslDow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteDslDow.setStatus("current")
_SetInteModemmTable_Object = MibTable
setInteModemmTable = _SetInteModemmTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7)
)
if mibBuilder.loadTexts:
    setInteModemmTable.setStatus("current")
_SetInteModemmEntry_Object = MibTableRow
setInteModemmEntry = _SetInteModemmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1)
)
setInteModemmEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setInteModemmIfc"),
)
if mibBuilder.loadTexts:
    setInteModemmEntry.setStatus("current")


class _SetInteModemmIfc_Type(Integer32):
    """Custom type setInteModemmIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("dsl-2", 2),
          ("dsl-3", 3),
          ("dsl-4", 4),
          ("ext", 6),
          ("s0-1", 5))
    )


_SetInteModemmIfc_Type.__name__ = "Integer32"
_SetInteModemmIfc_Object = MibTableColumn
setInteModemmIfc = _SetInteModemmIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 1),
    _SetInteModemmIfc_Type()
)
setInteModemmIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteModemmIfc.setStatus("current")


class _SetInteModemmOpe_Type(Integer32):
    """Custom type setInteModemmOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("modem", 1),
          ("no", 0),
          ("umts-gprs", 2))
    )


_SetInteModemmOpe_Type.__name__ = "Integer32"
_SetInteModemmOpe_Object = MibTableColumn
setInteModemmOpe = _SetInteModemmOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 2),
    _SetInteModemmOpe_Type()
)
setInteModemmOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemmOpe.setStatus("current")


class _SetInteModemmTyp_Type(Integer32):
    """Custom type setInteModemmTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteModemmTyp_Type.__name__ = "Integer32"
_SetInteModemmTyp_Object = MibTableColumn
setInteModemmTyp = _SetInteModemmTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 15),
    _SetInteModemmTyp_Type()
)
setInteModemmTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteModemmTyp.setStatus("current")


class _SetInteModemmDat_Type(Integer32):
    """Custom type setInteModemmDat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(19200,
              38400,
              57600,
              115200)
        )
    )
    namedValues = NamedValues(
        *(("e115200", 115200),
          ("e19200", 19200),
          ("e38400", 38400),
          ("e57600", 57600))
    )


_SetInteModemmDat_Type.__name__ = "Integer32"
_SetInteModemmDat_Object = MibTableColumn
setInteModemmDat = _SetInteModemmDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 21),
    _SetInteModemmDat_Type()
)
setInteModemmDat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemmDat.setStatus("current")


class _SetInteModemmPro_Type(DisplayString):
    """Custom type setInteModemmPro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetInteModemmPro_Type.__name__ = "DisplayString"
_SetInteModemmPro_Object = MibTableColumn
setInteModemmPro = _SetInteModemmPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 7, 1, 22),
    _SetInteModemmPro_Type()
)
setInteModemmPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemmPro.setStatus("current")
_SetInteEthernTable_Object = MibTable
setInteEthernTable = _SetInteEthernTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30)
)
if mibBuilder.loadTexts:
    setInteEthernTable.setStatus("current")
_SetInteEthernEntry_Object = MibTableRow
setInteEthernEntry = _SetInteEthernEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1)
)
setInteEthernEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setInteEthernPor"),
)
if mibBuilder.loadTexts:
    setInteEthernEntry.setStatus("current")


class _SetInteEthernPor_Type(Integer32):
    """Custom type setInteEthernPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("eth-1", 2),
          ("eth-2", 3),
          ("eth-3", 4),
          ("eth-4", 5),
          ("unknown", 0),
          ("wan", 1))
    )


_SetInteEthernPor_Type.__name__ = "Integer32"
_SetInteEthernPor_Object = MibTableColumn
setInteEthernPor = _SetInteEthernPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 1),
    _SetInteEthernPor_Type()
)
setInteEthernPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInteEthernPor.setStatus("current")


class _SetInteEthernCon_Type(Integer32):
    """Custom type setInteEthernCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("e100b-tx", 3),
          ("e10b-t", 1),
          ("fd100b-tx", 4),
          ("fd10b-tx", 2))
    )


_SetInteEthernCon_Type.__name__ = "Integer32"
_SetInteEthernCon_Object = MibTableColumn
setInteEthernCon = _SetInteEthernCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 2),
    _SetInteEthernCon_Type()
)
setInteEthernCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteEthernCon.setStatus("current")


class _SetInteEthernPri_Type(Integer32):
    """Custom type setInteEthernPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInteEthernPri_Type.__name__ = "Integer32"
_SetInteEthernPri_Object = MibTableColumn
setInteEthernPri = _SetInteEthernPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 3),
    _SetInteEthernPri_Type()
)
setInteEthernPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteEthernPri.setStatus("current")


class _SetInteEthernAss_Type(Integer32):
    """Custom type setInteEthernAss based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              512,
              513,
              514,
              515,
              65533,
              65534,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 512),
          ("dsl-2", 513),
          ("dsl-3", 514),
          ("dsl-4", 515),
          ("idle", 65533),
          ("lan-1", 0),
          ("lan-2", 1),
          ("lan-3", 2),
          ("lan-4", 3),
          ("monitor", 65534),
          ("power-down", 65535))
    )


_SetInteEthernAss_Type.__name__ = "Integer32"
_SetInteEthernAss_Object = MibTableColumn
setInteEthernAss = _SetInteEthernAss_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 4),
    _SetInteEthernAss_Type()
)
setInteEthernAss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteEthernAss.setStatus("current")


class _SetInteEthernMdi_Type(Integer32):
    """Custom type setInteEthernMdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_SetInteEthernMdi_Type.__name__ = "Integer32"
_SetInteEthernMdi_Object = MibTableColumn
setInteEthernMdi = _SetInteEthernMdi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 30, 1, 5),
    _SetInteEthernMdi_Type()
)
setInteEthernMdi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteEthernMdi.setStatus("current")
_SetInteModem_ObjectIdentity = ObjectIdentity
setInteModem = _SetInteModem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40)
)
_SetInteModemRingcou_Type = Integer32
_SetInteModemRingcou_Object = MibScalar
setInteModemRingcou = _SetInteModemRingcou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 1),
    _SetInteModemRingcou_Type()
)
setInteModemRingcou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemRingcou.setStatus("current")


class _SetInteModemEchooff_Type(DisplayString):
    """Custom type setInteModemEchooff based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInteModemEchooff_Type.__name__ = "DisplayString"
_SetInteModemEchooff_Object = MibScalar
setInteModemEchooff = _SetInteModemEchooff_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 2),
    _SetInteModemEchooff_Type()
)
setInteModemEchooff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemEchooff.setStatus("current")


class _SetInteModemResetco_Type(DisplayString):
    """Custom type setInteModemResetco based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInteModemResetco_Type.__name__ = "DisplayString"
_SetInteModemResetco_Object = MibScalar
setInteModemResetco = _SetInteModemResetco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 3),
    _SetInteModemResetco_Type()
)
setInteModemResetco.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemResetco.setStatus("current")


class _SetInteModemInitcom_Type(DisplayString):
    """Custom type setInteModemInitcom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInteModemInitcom_Type.__name__ = "DisplayString"
_SetInteModemInitcom_Object = MibScalar
setInteModemInitcom = _SetInteModemInitcom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 4),
    _SetInteModemInitcom_Type()
)
setInteModemInitcom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemInitcom.setStatus("current")


class _SetInteModemDialcom_Type(DisplayString):
    """Custom type setInteModemDialcom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetInteModemDialcom_Type.__name__ = "DisplayString"
_SetInteModemDialcom_Object = MibScalar
setInteModemDialcom = _SetInteModemDialcom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 5),
    _SetInteModemDialcom_Type()
)
setInteModemDialcom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemDialcom.setStatus("current")


class _SetInteModemRequest_Type(DisplayString):
    """Custom type setInteModemRequest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInteModemRequest_Type.__name__ = "DisplayString"
_SetInteModemRequest_Object = MibScalar
setInteModemRequest = _SetInteModemRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 6),
    _SetInteModemRequest_Type()
)
setInteModemRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemRequest.setStatus("current")


class _SetInteModemAnswerc_Type(DisplayString):
    """Custom type setInteModemAnswerc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInteModemAnswerc_Type.__name__ = "DisplayString"
_SetInteModemAnswerc_Object = MibScalar
setInteModemAnswerc = _SetInteModemAnswerc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 7),
    _SetInteModemAnswerc_Type()
)
setInteModemAnswerc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemAnswerc.setStatus("current")


class _SetInteModemDisconn_Type(DisplayString):
    """Custom type setInteModemDisconn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInteModemDisconn_Type.__name__ = "DisplayString"
_SetInteModemDisconn_Object = MibScalar
setInteModemDisconn = _SetInteModemDisconn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 8),
    _SetInteModemDisconn_Type()
)
setInteModemDisconn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemDisconn.setStatus("current")


class _SetInteModemEscapes_Type(DisplayString):
    """Custom type setInteModemEscapes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInteModemEscapes_Type.__name__ = "DisplayString"
_SetInteModemEscapes_Object = MibScalar
setInteModemEscapes = _SetInteModemEscapes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 9),
    _SetInteModemEscapes_Type()
)
setInteModemEscapes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemEscapes.setStatus("current")
_SetInteModemEscapep_Type = Integer32
_SetInteModemEscapep_Object = MibScalar
setInteModemEscapep = _SetInteModemEscapep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 10),
    _SetInteModemEscapep_Type()
)
setInteModemEscapep.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemEscapep.setStatus("current")


class _SetInteModemInitdia_Type(DisplayString):
    """Custom type setInteModemInitdia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInteModemInitdia_Type.__name__ = "DisplayString"
_SetInteModemInitdia_Object = MibScalar
setInteModemInitdia = _SetInteModemInitdia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 11),
    _SetInteModemInitdia_Type()
)
setInteModemInitdia.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemInitdia.setStatus("current")


class _SetInteModemInitans_Type(DisplayString):
    """Custom type setInteModemInitans based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInteModemInitans_Type.__name__ = "DisplayString"
_SetInteModemInitans_Object = MibScalar
setInteModemInitans = _SetInteModemInitans_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 12),
    _SetInteModemInitans_Type()
)
setInteModemInitans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemInitans.setStatus("current")
_SetInteModemCycleti_Type = Integer32
_SetInteModemCycleti_Object = MibScalar
setInteModemCycleti = _SetInteModemCycleti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 13),
    _SetInteModemCycleti_Type()
)
setInteModemCycleti.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemCycleti.setStatus("current")
_SetInteModemAtpollc_Type = Integer32
_SetInteModemAtpollc_Object = MibScalar
setInteModemAtpollc = _SetInteModemAtpollc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 40, 14),
    _SetInteModemAtpollc_Type()
)
setInteModemAtpollc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteModemAtpollc.setStatus("current")
_SetInteMobile_ObjectIdentity = ObjectIdentity
setInteMobile = _SetInteMobile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41)
)
_SetInteMobileProTable_Object = MibTable
setInteMobileProTable = _SetInteMobileProTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1)
)
if mibBuilder.loadTexts:
    setInteMobileProTable.setStatus("current")
_SetInteMobileProEntry_Object = MibTableRow
setInteMobileProEntry = _SetInteMobileProEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1)
)
setInteMobileProEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setInteMobileProProf"),
)
if mibBuilder.loadTexts:
    setInteMobileProEntry.setStatus("current")


class _SetInteMobileProProf_Type(DisplayString):
    """Custom type setInteMobileProProf based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetInteMobileProProf_Type.__name__ = "DisplayString"
_SetInteMobileProProf_Object = MibTableColumn
setInteMobileProProf = _SetInteMobileProProf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 1),
    _SetInteMobileProProf_Type()
)
setInteMobileProProf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProProf.setStatus("current")


class _SetInteMobileProPin_Type(DisplayString):
    """Custom type setInteMobileProPin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_SetInteMobileProPin_Type.__name__ = "DisplayString"
_SetInteMobileProPin_Object = MibTableColumn
setInteMobileProPin = _SetInteMobileProPin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 2),
    _SetInteMobileProPin_Type()
)
setInteMobileProPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProPin.setStatus("current")


class _SetInteMobileProApn_Type(DisplayString):
    """Custom type setInteMobileProApn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 47),
    )


_SetInteMobileProApn_Type.__name__ = "DisplayString"
_SetInteMobileProApn_Object = MibTableColumn
setInteMobileProApn = _SetInteMobileProApn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 3),
    _SetInteMobileProApn_Type()
)
setInteMobileProApn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProApn.setStatus("current")


class _SetInteMobileProNetw_Type(DisplayString):
    """Custom type setInteMobileProNetw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetInteMobileProNetw_Type.__name__ = "DisplayString"
_SetInteMobileProNetw_Object = MibTableColumn
setInteMobileProNetw = _SetInteMobileProNetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 4),
    _SetInteMobileProNetw_Type()
)
setInteMobileProNetw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProNetw.setStatus("current")


class _SetInteMobileProSele_Type(Integer32):
    """Custom type setInteMobileProSele based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("manual", 1))
    )


_SetInteMobileProSele_Type.__name__ = "Integer32"
_SetInteMobileProSele_Object = MibTableColumn
setInteMobileProSele = _SetInteMobileProSele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 5),
    _SetInteMobileProSele_Type()
)
setInteMobileProSele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProSele.setStatus("current")


class _SetInteMobileProMode_Type(Integer32):
    """Custom type setInteMobileProMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("gprs", 2),
          ("umts", 1))
    )


_SetInteMobileProMode_Type.__name__ = "Integer32"
_SetInteMobileProMode_Object = MibTableColumn
setInteMobileProMode = _SetInteMobileProMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 6),
    _SetInteMobileProMode_Type()
)
setInteMobileProMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProMode.setStatus("current")


class _SetInteMobileProQosd_Type(Integer32):
    """Custom type setInteMobileProQosd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteMobileProQosd_Type.__name__ = "Integer32"
_SetInteMobileProQosd_Object = MibTableColumn
setInteMobileProQosd = _SetInteMobileProQosd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 7),
    _SetInteMobileProQosd_Type()
)
setInteMobileProQosd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProQosd.setStatus("current")


class _SetInteMobileProQosu_Type(Integer32):
    """Custom type setInteMobileProQosu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInteMobileProQosu_Type.__name__ = "Integer32"
_SetInteMobileProQosu_Object = MibTableColumn
setInteMobileProQosu = _SetInteMobileProQosu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 1, 1, 8),
    _SetInteMobileProQosu_Type()
)
setInteMobileProQosu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileProQosu.setStatus("current")
_SetInteMobileSca_Type = DisplayString
_SetInteMobileSca_Object = MibScalar
setInteMobileSca = _SetInteMobileSca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 2),
    _SetInteMobileSca_Type()
)
setInteMobileSca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileSca.setStatus("current")
_SetInteMobileInp_Type = DisplayString
_SetInteMobileInp_Object = MibScalar
setInteMobileInp = _SetInteMobileInp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 3),
    _SetInteMobileInp_Type()
)
setInteMobileInp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileInp.setStatus("current")


class _SetInteMobileCon_Type(Integer32):
    """Custom type setInteMobileCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ppp", 1),
          ("ppp-plus-ip", 3))
    )


_SetInteMobileCon_Type.__name__ = "Integer32"
_SetInteMobileCon_Object = MibScalar
setInteMobileCon = _SetInteMobileCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 4),
    _SetInteMobileCon_Type()
)
setInteMobileCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileCon.setStatus("current")
_SetInteMobileTri_Type = Integer32
_SetInteMobileTri_Object = MibScalar
setInteMobileTri = _SetInteMobileTri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 5),
    _SetInteMobileTri_Type()
)
setInteMobileTri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileTri.setStatus("current")
_SetInteMobileHis_Type = Integer32
_SetInteMobileHis_Object = MibScalar
setInteMobileHis = _SetInteMobileHis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 6),
    _SetInteMobileHis_Type()
)
setInteMobileHis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileHis.setStatus("current")


class _SetInteMobileSys_Type(Integer32):
    """Custom type setInteMobileSys based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInteMobileSys_Type.__name__ = "Integer32"
_SetInteMobileSys_Object = MibScalar
setInteMobileSys = _SetInteMobileSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 23, 41, 7),
    _SetInteMobileSys_Type()
)
setInteMobileSys.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInteMobileSys.setStatus("current")
_SetRadi_ObjectIdentity = ObjectIdentity
setRadi = _SetRadi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25)
)
_SetRadiAutht_Type = Integer32
_SetRadiAutht_Object = MibScalar
setRadiAutht = _SetRadiAutht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 4),
    _SetRadiAutht_Type()
)
setRadiAutht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiAutht.setStatus("current")
_SetRadiAuthr_Type = Integer32
_SetRadiAuthr_Object = MibScalar
setRadiAuthr = _SetRadiAuthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 5),
    _SetRadiAuthr_Type()
)
setRadiAuthr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiAuthr.setStatus("current")


class _SetRadiBacku_Type(Integer32):
    """Custom type setRadiBacku based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("block", 0),
          ("cyclic", 1))
    )


_SetRadiBacku_Type.__name__ = "Integer32"
_SetRadiBacku_Object = MibScalar
setRadiBacku = _SetRadiBacku_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 25, 9),
    _SetRadiBacku_Type()
)
setRadiBacku.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiBacku.setStatus("current")
_SetNtp_ObjectIdentity = ObjectIdentity
setNtp = _SetNtp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26)
)


class _SetNtpSer_Type(Integer32):
    """Custom type setNtpSer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNtpSer_Type.__name__ = "Integer32"
_SetNtpSer_Object = MibScalar
setNtpSer = _SetNtpSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 2),
    _SetNtpSer_Type()
)
setNtpSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpSer.setStatus("current")


class _SetNtpBcm_Type(Integer32):
    """Custom type setNtpBcm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNtpBcm_Type.__name__ = "Integer32"
_SetNtpBcm_Object = MibScalar
setNtpBcm = _SetNtpBcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 3),
    _SetNtpBcm_Type()
)
setNtpBcm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpBcm.setStatus("current")
_SetNtpBci_Type = Integer32
_SetNtpBci_Object = MibScalar
setNtpBci = _SetNtpBci_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 4),
    _SetNtpBci_Type()
)
setNtpBci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpBci.setStatus("current")
_SetNtpRqi_Type = Integer32
_SetNtpRqi_Object = MibScalar
setNtpRqi = _SetNtpRqi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 7),
    _SetNtpRqi_Type()
)
setNtpRqi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqi.setStatus("current")
_SetNtpRqaTable_Object = MibTable
setNtpRqaTable = _SetNtpRqaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11)
)
if mibBuilder.loadTexts:
    setNtpRqaTable.setStatus("current")
_SetNtpRqaEntry_Object = MibTableRow
setNtpRqaEntry = _SetNtpRqaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1)
)
setNtpRqaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setNtpRqaRqa"),
)
if mibBuilder.loadTexts:
    setNtpRqaEntry.setStatus("current")


class _SetNtpRqaRqa_Type(DisplayString):
    """Custom type setNtpRqaRqa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetNtpRqaRqa_Type.__name__ = "DisplayString"
_SetNtpRqaRqa_Object = MibTableColumn
setNtpRqaRqa = _SetNtpRqaRqa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1, 1),
    _SetNtpRqaRqa_Type()
)
setNtpRqaRqa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqaRqa.setStatus("current")


class _SetNtpRqaLoo_Type(DisplayString):
    """Custom type setNtpRqaLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNtpRqaLoo_Type.__name__ = "DisplayString"
_SetNtpRqaLoo_Object = MibTableColumn
setNtpRqaLoo = _SetNtpRqaLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 11, 1, 2),
    _SetNtpRqaLoo_Type()
)
setNtpRqaLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqaLoo.setStatus("current")
_SetNtpRqt_Type = Integer32
_SetNtpRqt_Object = MibScalar
setNtpRqt = _SetNtpRqt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 26, 12),
    _SetNtpRqt_Type()
)
setNtpRqt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqt.setStatus("current")
_SetMail_ObjectIdentity = ObjectIdentity
setMail = _SetMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27)
)


class _SetMailSmtps_Type(DisplayString):
    """Custom type setMailSmtps based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetMailSmtps_Type.__name__ = "DisplayString"
_SetMailSmtps_Object = MibScalar
setMailSmtps = _SetMailSmtps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 1),
    _SetMailSmtps_Type()
)
setMailSmtps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailSmtps.setStatus("current")
_SetMailSmtpp_Type = Integer32
_SetMailSmtpp_Object = MibScalar
setMailSmtpp = _SetMailSmtpp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 2),
    _SetMailSmtpp_Type()
)
setMailSmtpp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailSmtpp.setStatus("current")


class _SetMailPop3s_Type(DisplayString):
    """Custom type setMailPop3s based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetMailPop3s_Type.__name__ = "DisplayString"
_SetMailPop3s_Object = MibScalar
setMailPop3s = _SetMailPop3s_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 3),
    _SetMailPop3s_Type()
)
setMailPop3s.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailPop3s.setStatus("current")
_SetMailPop3p_Type = Integer32
_SetMailPop3p_Object = MibScalar
setMailPop3p = _SetMailPop3p_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 4),
    _SetMailPop3p_Type()
)
setMailPop3p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailPop3p.setStatus("current")


class _SetMailUsern_Type(DisplayString):
    """Custom type setMailUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetMailUsern_Type.__name__ = "DisplayString"
_SetMailUsern_Object = MibScalar
setMailUsern = _SetMailUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 5),
    _SetMailUsern_Type()
)
setMailUsern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailUsern.setStatus("current")


class _SetMailPassw_Type(DisplayString):
    """Custom type setMailPassw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetMailPassw_Type.__name__ = "DisplayString"
_SetMailPassw_Object = MibScalar
setMailPassw = _SetMailPassw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 6),
    _SetMailPassw_Type()
)
setMailPassw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailPassw.setStatus("current")


class _SetMailEmail_Type(DisplayString):
    """Custom type setMailEmail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetMailEmail_Type.__name__ = "DisplayString"
_SetMailEmail_Object = MibScalar
setMailEmail = _SetMailEmail_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 7),
    _SetMailEmail_Type()
)
setMailEmail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailEmail.setStatus("current")
_SetMailSenda_Type = Integer32
_SetMailSenda_Object = MibScalar
setMailSenda = _SetMailSenda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 8),
    _SetMailSenda_Type()
)
setMailSenda.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailSenda.setStatus("current")
_SetMailHoldt_Type = Integer32
_SetMailHoldt_Object = MibScalar
setMailHoldt = _SetMailHoldt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 9),
    _SetMailHoldt_Type()
)
setMailHoldt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailHoldt.setStatus("current")
_SetMailBuffe_Type = Integer32
_SetMailBuffe_Object = MibScalar
setMailBuffe = _SetMailBuffe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 10),
    _SetMailBuffe_Type()
)
setMailBuffe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailBuffe.setStatus("current")


class _SetMailLoopb_Type(DisplayString):
    """Custom type setMailLoopb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetMailLoopb_Type.__name__ = "DisplayString"
_SetMailLoopb_Object = MibScalar
setMailLoopb = _SetMailLoopb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 27, 11),
    _SetMailLoopb_Type()
)
setMailLoopb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailLoopb.setStatus("current")
_SetPppo_ObjectIdentity = ObjectIdentity
setPppo = _SetPppo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31)
)


class _SetPppoOpe_Type(Integer32):
    """Custom type setPppoOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPppoOpe_Type.__name__ = "Integer32"
_SetPppoOpe_Object = MibScalar
setPppoOpe = _SetPppoOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 1),
    _SetPppoOpe_Type()
)
setPppoOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoOpe.setStatus("current")
_SetPppoNamTable_Object = MibTable
setPppoNamTable = _SetPppoNamTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2)
)
if mibBuilder.loadTexts:
    setPppoNamTable.setStatus("current")
_SetPppoNamEntry_Object = MibTableRow
setPppoNamEntry = _SetPppoNamEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1)
)
setPppoNamEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPppoNamPee"),
)
if mibBuilder.loadTexts:
    setPppoNamEntry.setStatus("current")


class _SetPppoNamPee_Type(DisplayString):
    """Custom type setPppoNamPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetPppoNamPee_Type.__name__ = "DisplayString"
_SetPppoNamPee_Object = MibTableColumn
setPppoNamPee = _SetPppoNamPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 1),
    _SetPppoNamPee_Type()
)
setPppoNamPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoNamPee.setStatus("current")


class _SetPppoNamSht_Type(Integer32):
    """Custom type setPppoNamSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPppoNamSht_Type.__name__ = "Integer32"
_SetPppoNamSht_Object = MibTableColumn
setPppoNamSht = _SetPppoNamSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 2),
    _SetPppoNamSht_Type()
)
setPppoNamSht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoNamSht.setStatus("current")


class _SetPppoNamMac_Type(DisplayString):
    """Custom type setPppoNamMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetPppoNamMac_Type.__name__ = "DisplayString"
_SetPppoNamMac_Object = MibTableColumn
setPppoNamMac = _SetPppoNamMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 2, 1, 3),
    _SetPppoNamMac_Type()
)
setPppoNamMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoNamMac.setStatus("current")


class _SetPppoSer_Type(DisplayString):
    """Custom type setPppoSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetPppoSer_Type.__name__ = "DisplayString"
_SetPppoSer_Object = MibScalar
setPppoSer = _SetPppoSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 3),
    _SetPppoSer_Type()
)
setPppoSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoSer.setStatus("current")
_SetPppoSes_Type = Integer32
_SetPppoSes_Object = MibScalar
setPppoSes = _SetPppoSes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 4),
    _SetPppoSes_Type()
)
setPppoSes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoSes.setStatus("current")
_SetPppoPorTable_Object = MibTable
setPppoPorTable = _SetPppoPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5)
)
if mibBuilder.loadTexts:
    setPppoPorTable.setStatus("current")
_SetPppoPorEntry_Object = MibTableRow
setPppoPorEntry = _SetPppoPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1)
)
setPppoPorEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPppoPorPor"),
)
if mibBuilder.loadTexts:
    setPppoPorEntry.setStatus("current")


class _SetPppoPorPor_Type(DisplayString):
    """Custom type setPppoPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_SetPppoPorPor_Type.__name__ = "DisplayString"
_SetPppoPorPor_Object = MibTableColumn
setPppoPorPor = _SetPppoPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1, 2),
    _SetPppoPorPor_Type()
)
setPppoPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPppoPorPor.setStatus("current")


class _SetPppoPorEna_Type(Integer32):
    """Custom type setPppoPorEna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPppoPorEna_Type.__name__ = "Integer32"
_SetPppoPorEna_Object = MibTableColumn
setPppoPorEna = _SetPppoPorEna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 31, 5, 1, 3),
    _SetPppoPorEna_Type()
)
setPppoPorEna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoPorEna.setStatus("current")
_SetVlan_ObjectIdentity = ObjectIdentity
setVlan = _SetVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32)
)
_SetVlanNetTable_Object = MibTable
setVlanNetTable = _SetVlanNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1)
)
if mibBuilder.loadTexts:
    setVlanNetTable.setStatus("current")
_SetVlanNetEntry_Object = MibTableRow
setVlanNetEntry = _SetVlanNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1)
)
setVlanNetEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVlanNetNam"),
)
if mibBuilder.loadTexts:
    setVlanNetEntry.setStatus("current")


class _SetVlanNetNam_Type(DisplayString):
    """Custom type setVlanNetNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVlanNetNam_Type.__name__ = "DisplayString"
_SetVlanNetNam_Object = MibTableColumn
setVlanNetNam = _SetVlanNetNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 1),
    _SetVlanNetNam_Type()
)
setVlanNetNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanNetNam.setStatus("current")


class _SetVlanNetVla_Type(Integer32):
    """Custom type setVlanNetVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVlanNetVla_Type.__name__ = "Integer32"
_SetVlanNetVla_Object = MibTableColumn
setVlanNetVla = _SetVlanNetVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 2),
    _SetVlanNetVla_Type()
)
setVlanNetVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanNetVla.setStatus("current")


class _SetVlanNetPor_Type(DisplayString):
    """Custom type setVlanNetPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetVlanNetPor_Type.__name__ = "DisplayString"
_SetVlanNetPor_Object = MibTableColumn
setVlanNetPor = _SetVlanNetPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 1, 1, 4),
    _SetVlanNetPor_Type()
)
setVlanNetPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanNetPor.setStatus("current")
_SetVlanPorTable_Object = MibTable
setVlanPorTable = _SetVlanPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2)
)
if mibBuilder.loadTexts:
    setVlanPorTable.setStatus("current")
_SetVlanPorEntry_Object = MibTableRow
setVlanPorEntry = _SetVlanPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1)
)
setVlanPorEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setVlanPorPort"),
)
if mibBuilder.loadTexts:
    setVlanPorEntry.setStatus("current")


class _SetVlanPorPort_Type(DisplayString):
    """Custom type setVlanPorPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetVlanPorPort_Type.__name__ = "DisplayString"
_SetVlanPorPort_Object = MibTableColumn
setVlanPorPort = _SetVlanPorPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 1),
    _SetVlanPorPort_Type()
)
setVlanPorPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setVlanPorPort.setStatus("current")


class _SetVlanPorAllow_Type(Integer32):
    """Custom type setVlanPorAllow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVlanPorAllow_Type.__name__ = "Integer32"
_SetVlanPorAllow_Object = MibTableColumn
setVlanPorAllow = _SetVlanPorAllow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 4),
    _SetVlanPorAllow_Type()
)
setVlanPorAllow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanPorAllow.setStatus("current")


class _SetVlanPorPortv_Type(Integer32):
    """Custom type setVlanPorPortv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVlanPorPortv_Type.__name__ = "Integer32"
_SetVlanPorPortv_Object = MibTableColumn
setVlanPorPortv = _SetVlanPorPortv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 5),
    _SetVlanPorPortv_Type()
)
setVlanPorPortv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanPorPortv.setStatus("current")


class _SetVlanPorTaggi_Type(Integer32):
    """Custom type setVlanPorTaggi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("always", 3),
          ("ingress-mixed", 0),
          ("mixed", 2),
          ("never", 1))
    )


_SetVlanPorTaggi_Type.__name__ = "Integer32"
_SetVlanPorTaggi_Object = MibTableColumn
setVlanPorTaggi = _SetVlanPorTaggi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 2, 1, 6),
    _SetVlanPorTaggi_Type()
)
setVlanPorTaggi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanPorTaggi.setStatus("current")


class _SetVlanOpe_Type(Integer32):
    """Custom type setVlanOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVlanOpe_Type.__name__ = "Integer32"
_SetVlanOpe_Object = MibScalar
setVlanOpe = _SetVlanOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 4),
    _SetVlanOpe_Type()
)
setVlanOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanOpe.setStatus("current")


class _SetVlanTag_Type(DisplayString):
    """Custom type setVlanTag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetVlanTag_Type.__name__ = "DisplayString"
_SetVlanTag_Object = MibScalar
setVlanTag = _SetVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 32, 5),
    _SetVlanTag_Type()
)
setVlanTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanTag.setStatus("current")
_SetPrin_ObjectIdentity = ObjectIdentity
setPrin = _SetPrin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34)
)
_SetPrinPriTable_Object = MibTable
setPrinPriTable = _SetPrinPriTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1)
)
if mibBuilder.loadTexts:
    setPrinPriTable.setStatus("current")
_SetPrinPriEntry_Object = MibTableRow
setPrinPriEntry = _SetPrinPriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1)
)
setPrinPriEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPrinPriPri"),
)
if mibBuilder.loadTexts:
    setPrinPriEntry.setStatus("current")


class _SetPrinPriPri_Type(DisplayString):
    """Custom type setPrinPriPri based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetPrinPriPri_Type.__name__ = "DisplayString"
_SetPrinPriPri_Object = MibTableColumn
setPrinPriPri = _SetPrinPriPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 1),
    _SetPrinPriPri_Type()
)
setPrinPriPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinPriPri.setStatus("current")


class _SetPrinPriRaw_Type(Integer32):
    """Custom type setPrinPriRaw based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPrinPriRaw_Type.__name__ = "Integer32"
_SetPrinPriRaw_Object = MibTableColumn
setPrinPriRaw = _SetPrinPriRaw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 2),
    _SetPrinPriRaw_Type()
)
setPrinPriRaw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinPriRaw.setStatus("current")


class _SetPrinPriLpd_Type(Integer32):
    """Custom type setPrinPriLpd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPrinPriLpd_Type.__name__ = "Integer32"
_SetPrinPriLpd_Object = MibTableColumn
setPrinPriLpd = _SetPrinPriLpd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 3),
    _SetPrinPriLpd_Type()
)
setPrinPriLpd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinPriLpd.setStatus("current")


class _SetPrinPriAct_Type(Integer32):
    """Custom type setPrinPriAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPrinPriAct_Type.__name__ = "Integer32"
_SetPrinPriAct_Object = MibTableColumn
setPrinPriAct = _SetPrinPriAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 4),
    _SetPrinPriAct_Type()
)
setPrinPriAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinPriAct.setStatus("current")


class _SetPrinPriBid_Type(Integer32):
    """Custom type setPrinPriBid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPrinPriBid_Type.__name__ = "Integer32"
_SetPrinPriBid_Object = MibTableColumn
setPrinPriBid = _SetPrinPriBid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 5),
    _SetPrinPriBid_Type()
)
setPrinPriBid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinPriBid.setStatus("current")


class _SetPrinPriRes_Type(Integer32):
    """Custom type setPrinPriRes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPrinPriRes_Type.__name__ = "Integer32"
_SetPrinPriRes_Object = MibTableColumn
setPrinPriRes = _SetPrinPriRes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 1, 1, 6),
    _SetPrinPriRes_Type()
)
setPrinPriRes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinPriRes.setStatus("current")
_SetPrinAccTable_Object = MibTable
setPrinAccTable = _SetPrinAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2)
)
if mibBuilder.loadTexts:
    setPrinAccTable.setStatus("current")
_SetPrinAccEntry_Object = MibTableRow
setPrinAccEntry = _SetPrinAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1)
)
setPrinAccEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPrinAccIpa"),
    (0, "LANCOM-1711-MIB", "setPrinAccIpn"),
    (0, "LANCOM-1711-MIB", "setPrinAccRtg"),
)
if mibBuilder.loadTexts:
    setPrinAccEntry.setStatus("current")
_SetPrinAccIpa_Type = IpAddress
_SetPrinAccIpa_Object = MibTableColumn
setPrinAccIpa = _SetPrinAccIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 1),
    _SetPrinAccIpa_Type()
)
setPrinAccIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinAccIpa.setStatus("current")
_SetPrinAccIpn_Type = IpAddress
_SetPrinAccIpn_Object = MibTableColumn
setPrinAccIpn = _SetPrinAccIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 2),
    _SetPrinAccIpn_Type()
)
setPrinAccIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinAccIpn.setStatus("current")


class _SetPrinAccRtg_Type(Integer32):
    """Custom type setPrinAccRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPrinAccRtg_Type.__name__ = "Integer32"
_SetPrinAccRtg_Object = MibTableColumn
setPrinAccRtg = _SetPrinAccRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 34, 2, 1, 3),
    _SetPrinAccRtg_Type()
)
setPrinAccRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPrinAccRtg.setStatus("current")
_SetEcho_ObjectIdentity = ObjectIdentity
setEcho = _SetEcho_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35)
)


class _SetEchoOpe_Type(Integer32):
    """Custom type setEchoOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetEchoOpe_Type.__name__ = "Integer32"
_SetEchoOpe_Object = MibScalar
setEchoOpe = _SetEchoOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 1),
    _SetEchoOpe_Type()
)
setEchoOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoOpe.setStatus("current")
_SetEchoAccTable_Object = MibTable
setEchoAccTable = _SetEchoAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2)
)
if mibBuilder.loadTexts:
    setEchoAccTable.setStatus("current")
_SetEchoAccEntry_Object = MibTableRow
setEchoAccEntry = _SetEchoAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1)
)
setEchoAccEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setEchoAccIpa"),
    (0, "LANCOM-1711-MIB", "setEchoAccNet"),
)
if mibBuilder.loadTexts:
    setEchoAccEntry.setStatus("current")
_SetEchoAccIpa_Type = IpAddress
_SetEchoAccIpa_Object = MibTableColumn
setEchoAccIpa = _SetEchoAccIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 1),
    _SetEchoAccIpa_Type()
)
setEchoAccIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoAccIpa.setStatus("current")
_SetEchoAccNet_Type = IpAddress
_SetEchoAccNet_Object = MibTableColumn
setEchoAccNet = _SetEchoAccNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 2),
    _SetEchoAccNet_Type()
)
setEchoAccNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoAccNet.setStatus("current")


class _SetEchoAccPro_Type(Integer32):
    """Custom type setEchoAccPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("tcp", 1),
          ("tcp-plus-udp", 3),
          ("udp", 2))
    )


_SetEchoAccPro_Type.__name__ = "Integer32"
_SetEchoAccPro_Object = MibTableColumn
setEchoAccPro = _SetEchoAccPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 3),
    _SetEchoAccPro_Type()
)
setEchoAccPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoAccPro.setStatus("current")


class _SetEchoAccAct_Type(Integer32):
    """Custom type setEchoAccAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetEchoAccAct_Type.__name__ = "Integer32"
_SetEchoAccAct_Object = MibTableColumn
setEchoAccAct = _SetEchoAccAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 4),
    _SetEchoAccAct_Type()
)
setEchoAccAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoAccAct.setStatus("current")


class _SetEchoAccCom_Type(DisplayString):
    """Custom type setEchoAccCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetEchoAccCom_Type.__name__ = "DisplayString"
_SetEchoAccCom_Object = MibTableColumn
setEchoAccCom = _SetEchoAccCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 2, 1, 5),
    _SetEchoAccCom_Type()
)
setEchoAccCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoAccCom.setStatus("current")
_SetEchoTcp_Type = Integer32
_SetEchoTcp_Object = MibScalar
setEchoTcp = _SetEchoTcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 35, 3),
    _SetEchoTcp_Type()
)
setEchoTcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchoTcp.setStatus("current")
_SetPerf_ObjectIdentity = ObjectIdentity
setPerf = _SetPerf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36)
)
_SetPerfRttmonaTable_Object = MibTable
setPerfRttmonaTable = _SetPerfRttmonaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2)
)
if mibBuilder.loadTexts:
    setPerfRttmonaTable.setStatus("current")
_SetPerfRttmonaEntry_Object = MibTableRow
setPerfRttmonaEntry = _SetPerfRttmonaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1)
)
setPerfRttmonaEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPerfRttmonaInd"),
)
if mibBuilder.loadTexts:
    setPerfRttmonaEntry.setStatus("current")


class _SetPerfRttmonaInd_Type(Integer32):
    """Custom type setPerfRttmonaInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonaInd_Type.__name__ = "Integer32"
_SetPerfRttmonaInd_Object = MibTableColumn
setPerfRttmonaInd = _SetPerfRttmonaInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 1),
    _SetPerfRttmonaInd_Type()
)
setPerfRttmonaInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonaInd.setStatus("current")


class _SetPerfRttmonaTyp_Type(Integer32):
    """Custom type setPerfRttmonaTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            9
        )
    )
    namedValues = NamedValues(
        ("jitter", 9)
    )


_SetPerfRttmonaTyp_Type.__name__ = "Integer32"
_SetPerfRttmonaTyp_Object = MibTableColumn
setPerfRttmonaTyp = _SetPerfRttmonaTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 4),
    _SetPerfRttmonaTyp_Type()
)
setPerfRttmonaTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonaTyp.setStatus("current")


class _SetPerfRttmonaFre_Type(Integer32):
    """Custom type setPerfRttmonaFre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonaFre_Type.__name__ = "Integer32"
_SetPerfRttmonaFre_Object = MibTableColumn
setPerfRttmonaFre = _SetPerfRttmonaFre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 6),
    _SetPerfRttmonaFre_Type()
)
setPerfRttmonaFre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonaFre.setStatus("current")


class _SetPerfRttmonaTim_Type(Integer32):
    """Custom type setPerfRttmonaTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonaTim_Type.__name__ = "Integer32"
_SetPerfRttmonaTim_Object = MibTableColumn
setPerfRttmonaTim = _SetPerfRttmonaTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 7),
    _SetPerfRttmonaTim_Type()
)
setPerfRttmonaTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonaTim.setStatus("current")


class _SetPerfRttmonaSta_Type(Integer32):
    """Custom type setPerfRttmonaSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("create", 5),
          ("destroy", 6),
          ("not-in-service", 2),
          ("not-ready", 3))
    )


_SetPerfRttmonaSta_Type.__name__ = "Integer32"
_SetPerfRttmonaSta_Object = MibTableColumn
setPerfRttmonaSta = _SetPerfRttmonaSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 2, 1, 9),
    _SetPerfRttmonaSta_Type()
)
setPerfRttmonaSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonaSta.setStatus("current")
_SetPerfRttmoneTable_Object = MibTable
setPerfRttmoneTable = _SetPerfRttmoneTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3)
)
if mibBuilder.loadTexts:
    setPerfRttmoneTable.setStatus("current")
_SetPerfRttmoneEntry_Object = MibTableRow
setPerfRttmoneEntry = _SetPerfRttmoneEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1)
)
setPerfRttmoneEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPerfRttmoneIndex"),
)
if mibBuilder.loadTexts:
    setPerfRttmoneEntry.setStatus("current")


class _SetPerfRttmoneProtocol_Type(Integer32):
    """Custom type setPerfRttmoneProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            3
        )
    )
    namedValues = NamedValues(
        ("echo", 3)
    )


_SetPerfRttmoneProtocol_Type.__name__ = "Integer32"
_SetPerfRttmoneProtocol_Object = MibTableColumn
setPerfRttmoneProtocol = _SetPerfRttmoneProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 1),
    _SetPerfRttmoneProtocol_Type()
)
setPerfRttmoneProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmoneProtocol.setStatus("current")
_SetPerfRttmoneDestinationa_Type = IpAddress
_SetPerfRttmoneDestinationa_Object = MibTableColumn
setPerfRttmoneDestinationa = _SetPerfRttmoneDestinationa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 2),
    _SetPerfRttmoneDestinationa_Type()
)
setPerfRttmoneDestinationa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmoneDestinationa.setStatus("current")


class _SetPerfRttmonePacketsize_Type(Integer32):
    """Custom type setPerfRttmonePacketsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPerfRttmonePacketsize_Type.__name__ = "Integer32"
_SetPerfRttmonePacketsize_Object = MibTableColumn
setPerfRttmonePacketsize = _SetPerfRttmonePacketsize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 3),
    _SetPerfRttmonePacketsize_Type()
)
setPerfRttmonePacketsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonePacketsize.setStatus("current")


class _SetPerfRttmoneDestinationp_Type(Integer32):
    """Custom type setPerfRttmoneDestinationp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPerfRttmoneDestinationp_Type.__name__ = "Integer32"
_SetPerfRttmoneDestinationp_Object = MibTableColumn
setPerfRttmoneDestinationp = _SetPerfRttmoneDestinationp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 5),
    _SetPerfRttmoneDestinationp_Type()
)
setPerfRttmoneDestinationp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmoneDestinationp.setStatus("current")


class _SetPerfRttmoneInterval_Type(Integer32):
    """Custom type setPerfRttmoneInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmoneInterval_Type.__name__ = "Integer32"
_SetPerfRttmoneInterval_Object = MibTableColumn
setPerfRttmoneInterval = _SetPerfRttmoneInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 17),
    _SetPerfRttmoneInterval_Type()
)
setPerfRttmoneInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmoneInterval.setStatus("current")


class _SetPerfRttmonePacketcount_Type(Integer32):
    """Custom type setPerfRttmonePacketcount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonePacketcount_Type.__name__ = "Integer32"
_SetPerfRttmonePacketcount_Object = MibTableColumn
setPerfRttmonePacketcount = _SetPerfRttmonePacketcount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 18),
    _SetPerfRttmonePacketcount_Type()
)
setPerfRttmonePacketcount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfRttmonePacketcount.setStatus("current")


class _SetPerfRttmoneIndex_Type(Integer32):
    """Custom type setPerfRttmoneIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmoneIndex_Type.__name__ = "Integer32"
_SetPerfRttmoneIndex_Object = MibTableColumn
setPerfRttmoneIndex = _SetPerfRttmoneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 3, 1, 255),
    _SetPerfRttmoneIndex_Type()
)
setPerfRttmoneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmoneIndex.setStatus("current")
_SetPerfRttmonsTable_Object = MibTable
setPerfRttmonsTable = _SetPerfRttmonsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4)
)
if mibBuilder.loadTexts:
    setPerfRttmonsTable.setStatus("current")
_SetPerfRttmonsEntry_Object = MibTableRow
setPerfRttmonsEntry = _SetPerfRttmonsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1)
)
setPerfRttmonsEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setPerfRttmonsIndex"),
)
if mibBuilder.loadTexts:
    setPerfRttmonsEntry.setStatus("current")


class _SetPerfRttmonsCompletions_Type(Integer32):
    """Custom type setPerfRttmonsCompletions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsCompletions_Type.__name__ = "Integer32"
_SetPerfRttmonsCompletions_Object = MibTableColumn
setPerfRttmonsCompletions = _SetPerfRttmonsCompletions_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 2),
    _SetPerfRttmonsCompletions_Type()
)
setPerfRttmonsCompletions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsCompletions.setStatus("current")


class _SetPerfRttmonsRttcount_Type(Integer32):
    """Custom type setPerfRttmonsRttcount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsRttcount_Type.__name__ = "Integer32"
_SetPerfRttmonsRttcount_Object = MibTableColumn
setPerfRttmonsRttcount = _SetPerfRttmonsRttcount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 4),
    _SetPerfRttmonsRttcount_Type()
)
setPerfRttmonsRttcount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsRttcount.setStatus("current")


class _SetPerfRttmonsRttsum_Type(Integer32):
    """Custom type setPerfRttmonsRttsum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsRttsum_Type.__name__ = "Integer32"
_SetPerfRttmonsRttsum_Object = MibTableColumn
setPerfRttmonsRttsum = _SetPerfRttmonsRttsum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 5),
    _SetPerfRttmonsRttsum_Type()
)
setPerfRttmonsRttsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsRttsum.setStatus("current")


class _SetPerfRttmonsRttmin_Type(Integer32):
    """Custom type setPerfRttmonsRttmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsRttmin_Type.__name__ = "Integer32"
_SetPerfRttmonsRttmin_Object = MibTableColumn
setPerfRttmonsRttmin = _SetPerfRttmonsRttmin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 8),
    _SetPerfRttmonsRttmin_Type()
)
setPerfRttmonsRttmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsRttmin.setStatus("current")


class _SetPerfRttmonsRttmax_Type(Integer32):
    """Custom type setPerfRttmonsRttmax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsRttmax_Type.__name__ = "Integer32"
_SetPerfRttmonsRttmax_Object = MibTableColumn
setPerfRttmonsRttmax = _SetPerfRttmonsRttmax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 9),
    _SetPerfRttmonsRttmax_Type()
)
setPerfRttmonsRttmax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsRttmax.setStatus("current")


class _SetPerfRttmonsJitterminpossd_Type(Integer32):
    """Custom type setPerfRttmonsJitterminpossd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJitterminpossd_Type.__name__ = "Integer32"
_SetPerfRttmonsJitterminpossd_Object = MibTableColumn
setPerfRttmonsJitterminpossd = _SetPerfRttmonsJitterminpossd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 10),
    _SetPerfRttmonsJitterminpossd_Type()
)
setPerfRttmonsJitterminpossd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJitterminpossd.setStatus("current")


class _SetPerfRttmonsJittermaxpossd_Type(Integer32):
    """Custom type setPerfRttmonsJittermaxpossd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittermaxpossd_Type.__name__ = "Integer32"
_SetPerfRttmonsJittermaxpossd_Object = MibTableColumn
setPerfRttmonsJittermaxpossd = _SetPerfRttmonsJittermaxpossd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 11),
    _SetPerfRttmonsJittermaxpossd_Type()
)
setPerfRttmonsJittermaxpossd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittermaxpossd.setStatus("current")


class _SetPerfRttmonsJittercountposs_Type(Integer32):
    """Custom type setPerfRttmonsJittercountposs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittercountposs_Type.__name__ = "Integer32"
_SetPerfRttmonsJittercountposs_Object = MibTableColumn
setPerfRttmonsJittercountposs = _SetPerfRttmonsJittercountposs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 12),
    _SetPerfRttmonsJittercountposs_Type()
)
setPerfRttmonsJittercountposs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittercountposs.setStatus("current")


class _SetPerfRttmonsJittersumpossd_Type(Integer32):
    """Custom type setPerfRttmonsJittersumpossd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittersumpossd_Type.__name__ = "Integer32"
_SetPerfRttmonsJittersumpossd_Object = MibTableColumn
setPerfRttmonsJittersumpossd = _SetPerfRttmonsJittersumpossd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 13),
    _SetPerfRttmonsJittersumpossd_Type()
)
setPerfRttmonsJittersumpossd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittersumpossd.setStatus("current")


class _SetPerfRttmonsJitterminposds_Type(Integer32):
    """Custom type setPerfRttmonsJitterminposds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJitterminposds_Type.__name__ = "Integer32"
_SetPerfRttmonsJitterminposds_Object = MibTableColumn
setPerfRttmonsJitterminposds = _SetPerfRttmonsJitterminposds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 16),
    _SetPerfRttmonsJitterminposds_Type()
)
setPerfRttmonsJitterminposds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJitterminposds.setStatus("current")


class _SetPerfRttmonsJittermaxposds_Type(Integer32):
    """Custom type setPerfRttmonsJittermaxposds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittermaxposds_Type.__name__ = "Integer32"
_SetPerfRttmonsJittermaxposds_Object = MibTableColumn
setPerfRttmonsJittermaxposds = _SetPerfRttmonsJittermaxposds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 17),
    _SetPerfRttmonsJittermaxposds_Type()
)
setPerfRttmonsJittermaxposds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittermaxposds.setStatus("current")


class _SetPerfRttmonsJittercountposd_Type(Integer32):
    """Custom type setPerfRttmonsJittercountposd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittercountposd_Type.__name__ = "Integer32"
_SetPerfRttmonsJittercountposd_Object = MibTableColumn
setPerfRttmonsJittercountposd = _SetPerfRttmonsJittercountposd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 18),
    _SetPerfRttmonsJittercountposd_Type()
)
setPerfRttmonsJittercountposd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittercountposd.setStatus("current")


class _SetPerfRttmonsJittersumposds_Type(Integer32):
    """Custom type setPerfRttmonsJittersumposds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittersumposds_Type.__name__ = "Integer32"
_SetPerfRttmonsJittersumposds_Object = MibTableColumn
setPerfRttmonsJittersumposds = _SetPerfRttmonsJittersumposds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 19),
    _SetPerfRttmonsJittersumposds_Type()
)
setPerfRttmonsJittersumposds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittersumposds.setStatus("current")


class _SetPerfRttmonsJitterminnegsd_Type(Integer32):
    """Custom type setPerfRttmonsJitterminnegsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJitterminnegsd_Type.__name__ = "Integer32"
_SetPerfRttmonsJitterminnegsd_Object = MibTableColumn
setPerfRttmonsJitterminnegsd = _SetPerfRttmonsJitterminnegsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 22),
    _SetPerfRttmonsJitterminnegsd_Type()
)
setPerfRttmonsJitterminnegsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJitterminnegsd.setStatus("current")


class _SetPerfRttmonsJittermaxnegsd_Type(Integer32):
    """Custom type setPerfRttmonsJittermaxnegsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittermaxnegsd_Type.__name__ = "Integer32"
_SetPerfRttmonsJittermaxnegsd_Object = MibTableColumn
setPerfRttmonsJittermaxnegsd = _SetPerfRttmonsJittermaxnegsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 23),
    _SetPerfRttmonsJittermaxnegsd_Type()
)
setPerfRttmonsJittermaxnegsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittermaxnegsd.setStatus("current")


class _SetPerfRttmonsJittercountnegs_Type(Integer32):
    """Custom type setPerfRttmonsJittercountnegs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittercountnegs_Type.__name__ = "Integer32"
_SetPerfRttmonsJittercountnegs_Object = MibTableColumn
setPerfRttmonsJittercountnegs = _SetPerfRttmonsJittercountnegs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 24),
    _SetPerfRttmonsJittercountnegs_Type()
)
setPerfRttmonsJittercountnegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittercountnegs.setStatus("current")


class _SetPerfRttmonsJittersumnegsd_Type(Integer32):
    """Custom type setPerfRttmonsJittersumnegsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittersumnegsd_Type.__name__ = "Integer32"
_SetPerfRttmonsJittersumnegsd_Object = MibTableColumn
setPerfRttmonsJittersumnegsd = _SetPerfRttmonsJittersumnegsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 25),
    _SetPerfRttmonsJittersumnegsd_Type()
)
setPerfRttmonsJittersumnegsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittersumnegsd.setStatus("current")


class _SetPerfRttmonsJitterminnegds_Type(Integer32):
    """Custom type setPerfRttmonsJitterminnegds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJitterminnegds_Type.__name__ = "Integer32"
_SetPerfRttmonsJitterminnegds_Object = MibTableColumn
setPerfRttmonsJitterminnegds = _SetPerfRttmonsJitterminnegds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 28),
    _SetPerfRttmonsJitterminnegds_Type()
)
setPerfRttmonsJitterminnegds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJitterminnegds.setStatus("current")


class _SetPerfRttmonsJittermaxnegds_Type(Integer32):
    """Custom type setPerfRttmonsJittermaxnegds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittermaxnegds_Type.__name__ = "Integer32"
_SetPerfRttmonsJittermaxnegds_Object = MibTableColumn
setPerfRttmonsJittermaxnegds = _SetPerfRttmonsJittermaxnegds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 29),
    _SetPerfRttmonsJittermaxnegds_Type()
)
setPerfRttmonsJittermaxnegds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittermaxnegds.setStatus("current")


class _SetPerfRttmonsJittercountnegd_Type(Integer32):
    """Custom type setPerfRttmonsJittercountnegd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittercountnegd_Type.__name__ = "Integer32"
_SetPerfRttmonsJittercountnegd_Object = MibTableColumn
setPerfRttmonsJittercountnegd = _SetPerfRttmonsJittercountnegd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 30),
    _SetPerfRttmonsJittercountnegd_Type()
)
setPerfRttmonsJittercountnegd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittercountnegd.setStatus("current")


class _SetPerfRttmonsJittersumnegds_Type(Integer32):
    """Custom type setPerfRttmonsJittersumnegds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsJittersumnegds_Type.__name__ = "Integer32"
_SetPerfRttmonsJittersumnegds_Object = MibTableColumn
setPerfRttmonsJittersumnegds = _SetPerfRttmonsJittersumnegds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 31),
    _SetPerfRttmonsJittersumnegds_Type()
)
setPerfRttmonsJittersumnegds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsJittersumnegds.setStatus("current")


class _SetPerfRttmonsPacketlosssd_Type(Integer32):
    """Custom type setPerfRttmonsPacketlosssd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsPacketlosssd_Type.__name__ = "Integer32"
_SetPerfRttmonsPacketlosssd_Object = MibTableColumn
setPerfRttmonsPacketlosssd = _SetPerfRttmonsPacketlosssd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 34),
    _SetPerfRttmonsPacketlosssd_Type()
)
setPerfRttmonsPacketlosssd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsPacketlosssd.setStatus("current")


class _SetPerfRttmonsPacketlossds_Type(Integer32):
    """Custom type setPerfRttmonsPacketlossds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsPacketlossds_Type.__name__ = "Integer32"
_SetPerfRttmonsPacketlossds_Object = MibTableColumn
setPerfRttmonsPacketlossds = _SetPerfRttmonsPacketlossds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 35),
    _SetPerfRttmonsPacketlossds_Type()
)
setPerfRttmonsPacketlossds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsPacketlossds.setStatus("current")


class _SetPerfRttmonsAveragejitter_Type(Integer32):
    """Custom type setPerfRttmonsAveragejitter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsAveragejitter_Type.__name__ = "Integer32"
_SetPerfRttmonsAveragejitter_Object = MibTableColumn
setPerfRttmonsAveragejitter = _SetPerfRttmonsAveragejitter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 62),
    _SetPerfRttmonsAveragejitter_Type()
)
setPerfRttmonsAveragejitter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsAveragejitter.setStatus("current")


class _SetPerfRttmonsAveragejittersd_Type(Integer32):
    """Custom type setPerfRttmonsAveragejittersd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsAveragejittersd_Type.__name__ = "Integer32"
_SetPerfRttmonsAveragejittersd_Object = MibTableColumn
setPerfRttmonsAveragejittersd = _SetPerfRttmonsAveragejittersd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 63),
    _SetPerfRttmonsAveragejittersd_Type()
)
setPerfRttmonsAveragejittersd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsAveragejittersd.setStatus("current")


class _SetPerfRttmonsAveragejitterds_Type(Integer32):
    """Custom type setPerfRttmonsAveragejitterds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsAveragejitterds_Type.__name__ = "Integer32"
_SetPerfRttmonsAveragejitterds_Object = MibTableColumn
setPerfRttmonsAveragejitterds = _SetPerfRttmonsAveragejitterds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 64),
    _SetPerfRttmonsAveragejitterds_Type()
)
setPerfRttmonsAveragejitterds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsAveragejitterds.setStatus("current")


class _SetPerfRttmonsIndex_Type(Integer32):
    """Custom type setPerfRttmonsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfRttmonsIndex_Type.__name__ = "Integer32"
_SetPerfRttmonsIndex_Object = MibTableColumn
setPerfRttmonsIndex = _SetPerfRttmonsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 36, 4, 1, 255),
    _SetPerfRttmonsIndex_Type()
)
setPerfRttmonsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfRttmonsIndex.setStatus("current")
_SetCert_ObjectIdentity = ObjectIdentity
setCert = _SetCert_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39)
)
_SetCertSce_ObjectIdentity = ObjectIdentity
setCertSce = _SetCertSce_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1)
)


class _SetCertSceSce_Type(Integer32):
    """Custom type setCertSceSce based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCertSceSce_Type.__name__ = "Integer32"
_SetCertSceSce_Object = MibScalar
setCertSceSce = _SetCertSceSce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 1),
    _SetCertSceSce_Type()
)
setCertSceSce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceSce.setStatus("current")
_SetCertSceDev_Type = Integer32
_SetCertSceDev_Object = MibScalar
setCertSceDev = _SetCertSceDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 2),
    _SetCertSceDev_Type()
)
setCertSceDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceDev.setStatus("current")
_SetCertSceCac_Type = Integer32
_SetCertSceCac_Object = MibScalar
setCertSceCac = _SetCertSceCac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 3),
    _SetCertSceCac_Type()
)
setCertSceCac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCac.setStatus("current")
_SetCertSceCasTable_Object = MibTable
setCertSceCasTable = _SetCertSceCasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6)
)
if mibBuilder.loadTexts:
    setCertSceCasTable.setStatus("current")
_SetCertSceCasEntry_Object = MibTableRow
setCertSceCasEntry = _SetCertSceCasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1)
)
setCertSceCasEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCertSceCasName"),
)
if mibBuilder.loadTexts:
    setCertSceCasEntry.setStatus("current")


class _SetCertSceCasName_Type(DisplayString):
    """Custom type setCertSceCasName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCertSceCasName_Type.__name__ = "DisplayString"
_SetCertSceCasName_Object = MibTableColumn
setCertSceCasName = _SetCertSceCasName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 1),
    _SetCertSceCasName_Type()
)
setCertSceCasName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasName.setStatus("current")


class _SetCertSceCasUrl_Type(DisplayString):
    """Custom type setCertSceCasUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCasUrl_Type.__name__ = "DisplayString"
_SetCertSceCasUrl_Object = MibTableColumn
setCertSceCasUrl = _SetCertSceCasUrl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 2),
    _SetCertSceCasUrl_Type()
)
setCertSceCasUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasUrl.setStatus("current")


class _SetCertSceCasDn_Type(DisplayString):
    """Custom type setCertSceCasDn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCasDn_Type.__name__ = "DisplayString"
_SetCertSceCasDn_Object = MibTableColumn
setCertSceCasDn = _SetCertSceCasDn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 3),
    _SetCertSceCasDn_Type()
)
setCertSceCasDn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasDn.setStatus("current")


class _SetCertSceCasEncalg_Type(Integer32):
    """Custom type setCertSceCasEncalg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aes128", 3),
          ("blowfish", 2),
          ("des", 0),
          ("e3des", 1))
    )


_SetCertSceCasEncalg_Type.__name__ = "Integer32"
_SetCertSceCasEncalg_Object = MibTableColumn
setCertSceCasEncalg = _SetCertSceCasEncalg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 4),
    _SetCertSceCasEncalg_Type()
)
setCertSceCasEncalg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasEncalg.setStatus("current")


class _SetCertSceCasIdentifier_Type(DisplayString):
    """Custom type setCertSceCasIdentifier based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCasIdentifier_Type.__name__ = "DisplayString"
_SetCertSceCasIdentifier_Object = MibTableColumn
setCertSceCasIdentifier = _SetCertSceCasIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 5),
    _SetCertSceCasIdentifier_Type()
)
setCertSceCasIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasIdentifier.setStatus("current")


class _SetCertSceCasCasignaturealg_Type(Integer32):
    """Custom type setCertSceCasCasignaturealg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("md5", 0),
          ("sha1", 1))
    )


_SetCertSceCasCasignaturealg_Type.__name__ = "Integer32"
_SetCertSceCasCasignaturealg_Object = MibTableColumn
setCertSceCasCasignaturealg = _SetCertSceCasCasignaturealg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 6),
    _SetCertSceCasCasignaturealg_Type()
)
setCertSceCasCasignaturealg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasCasignaturealg.setStatus("current")


class _SetCertSceCasRaautoapprove_Type(Integer32):
    """Custom type setCertSceCasRaautoapprove based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCertSceCasRaautoapprove_Type.__name__ = "Integer32"
_SetCertSceCasRaautoapprove_Object = MibTableColumn
setCertSceCasRaautoapprove = _SetCertSceCasRaautoapprove_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 7),
    _SetCertSceCasRaautoapprove_Type()
)
setCertSceCasRaautoapprove.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasRaautoapprove.setStatus("current")


class _SetCertSceCasCafingerprinta_Type(Integer32):
    """Custom type setCertSceCasCafingerprinta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 2),
          ("off", 0),
          ("sha1", 1))
    )


_SetCertSceCasCafingerprinta_Type.__name__ = "Integer32"
_SetCertSceCasCafingerprinta_Object = MibTableColumn
setCertSceCasCafingerprinta = _SetCertSceCasCafingerprinta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 8),
    _SetCertSceCasCafingerprinta_Type()
)
setCertSceCasCafingerprinta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasCafingerprinta.setStatus("current")


class _SetCertSceCasCafingerprint_Type(DisplayString):
    """Custom type setCertSceCasCafingerprint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 59),
    )


_SetCertSceCasCafingerprint_Type.__name__ = "DisplayString"
_SetCertSceCasCafingerprint_Object = MibTableColumn
setCertSceCasCafingerprint = _SetCertSceCasCafingerprint_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 9),
    _SetCertSceCasCafingerprint_Type()
)
setCertSceCasCafingerprint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasCafingerprint.setStatus("current")


class _SetCertSceCasApplication_Type(Integer32):
    """Custom type setCertSceCasApplication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("general", 2),
          ("vpn", 0))
    )


_SetCertSceCasApplication_Type.__name__ = "Integer32"
_SetCertSceCasApplication_Object = MibTableColumn
setCertSceCasApplication = _SetCertSceCasApplication_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 10),
    _SetCertSceCasApplication_Type()
)
setCertSceCasApplication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasApplication.setStatus("current")


class _SetCertSceCasLoopbackaddr_Type(DisplayString):
    """Custom type setCertSceCasLoopbackaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCertSceCasLoopbackaddr_Type.__name__ = "DisplayString"
_SetCertSceCasLoopbackaddr_Object = MibTableColumn
setCertSceCasLoopbackaddr = _SetCertSceCasLoopbackaddr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 6, 1, 11),
    _SetCertSceCasLoopbackaddr_Type()
)
setCertSceCasLoopbackaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCasLoopbackaddr.setStatus("current")
_SetCertSceCerTable_Object = MibTable
setCertSceCerTable = _SetCertSceCerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7)
)
if mibBuilder.loadTexts:
    setCertSceCerTable.setStatus("current")
_SetCertSceCerEntry_Object = MibTableRow
setCertSceCerEntry = _SetCertSceCerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1)
)
setCertSceCerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCertSceCerName"),
)
if mibBuilder.loadTexts:
    setCertSceCerEntry.setStatus("current")


class _SetCertSceCerName_Type(DisplayString):
    """Custom type setCertSceCerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCertSceCerName_Type.__name__ = "DisplayString"
_SetCertSceCerName_Object = MibTableColumn
setCertSceCerName = _SetCertSceCerName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 1),
    _SetCertSceCerName_Type()
)
setCertSceCerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerName.setStatus("current")


class _SetCertSceCerCadn_Type(DisplayString):
    """Custom type setCertSceCerCadn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCerCadn_Type.__name__ = "DisplayString"
_SetCertSceCerCadn_Object = MibTableColumn
setCertSceCerCadn = _SetCertSceCerCadn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 2),
    _SetCertSceCerCadn_Type()
)
setCertSceCerCadn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerCadn.setStatus("current")


class _SetCertSceCerSubject_Type(DisplayString):
    """Custom type setCertSceCerSubject based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCerSubject_Type.__name__ = "DisplayString"
_SetCertSceCerSubject_Object = MibTableColumn
setCertSceCerSubject = _SetCertSceCerSubject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 3),
    _SetCertSceCerSubject_Type()
)
setCertSceCerSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerSubject.setStatus("current")


class _SetCertSceCerChalleng_Type(DisplayString):
    """Custom type setCertSceCerChalleng based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCerChalleng_Type.__name__ = "DisplayString"
_SetCertSceCerChalleng_Object = MibTableColumn
setCertSceCerChalleng = _SetCertSceCerChalleng_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 4),
    _SetCertSceCerChalleng_Type()
)
setCertSceCerChalleng.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerChalleng.setStatus("current")


class _SetCertSceCerSubjecta_Type(DisplayString):
    """Custom type setCertSceCerSubjecta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCerSubjecta_Type.__name__ = "DisplayString"
_SetCertSceCerSubjecta_Object = MibTableColumn
setCertSceCerSubjecta = _SetCertSceCerSubjecta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 5),
    _SetCertSceCerSubjecta_Type()
)
setCertSceCerSubjecta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerSubjecta.setStatus("current")


class _SetCertSceCerKeyusage_Type(DisplayString):
    """Custom type setCertSceCerKeyusage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCerKeyusage_Type.__name__ = "DisplayString"
_SetCertSceCerKeyusage_Object = MibTableColumn
setCertSceCerKeyusage = _SetCertSceCerKeyusage_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 6),
    _SetCertSceCerKeyusage_Type()
)
setCertSceCerKeyusage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerKeyusage.setStatus("current")


class _SetCertSceCerDevicece_Type(Integer32):
    """Custom type setCertSceCerDevicece based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCertSceCerDevicece_Type.__name__ = "Integer32"
_SetCertSceCerDevicece_Object = MibTableColumn
setCertSceCerDevicece = _SetCertSceCerDevicece_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 7),
    _SetCertSceCerDevicece_Type()
)
setCertSceCerDevicece.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerDevicece.setStatus("current")


class _SetCertSceCerApplicat_Type(Integer32):
    """Custom type setCertSceCerApplicat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("vpn", 0)
    )


_SetCertSceCerApplicat_Type.__name__ = "Integer32"
_SetCertSceCerApplicat_Object = MibTableColumn
setCertSceCerApplicat = _SetCertSceCerApplicat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 8),
    _SetCertSceCerApplicat_Type()
)
setCertSceCerApplicat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerApplicat.setStatus("current")


class _SetCertSceCerExtended_Type(DisplayString):
    """Custom type setCertSceCerExtended based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertSceCerExtended_Type.__name__ = "DisplayString"
_SetCertSceCerExtended_Object = MibTableColumn
setCertSceCerExtended = _SetCertSceCerExtended_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 7, 1, 9),
    _SetCertSceCerExtended_Type()
)
setCertSceCerExtended.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCerExtended.setStatus("current")
_SetCertSceRei_Type = DisplayString
_SetCertSceRei_Object = MibScalar
setCertSceRei = _SetCertSceRei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 8),
    _SetCertSceRei_Type()
)
setCertSceRei.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceRei.setStatus("current")
_SetCertSceUpd_Type = DisplayString
_SetCertSceUpd_Object = MibScalar
setCertSceUpd = _SetCertSceUpd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 9),
    _SetCertSceUpd_Type()
)
setCertSceUpd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceUpd.setStatus("current")
_SetCertSceCle_Type = DisplayString
_SetCertSceCle_Object = MibScalar
setCertSceCle = _SetCertSceCle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 10),
    _SetCertSceCle_Type()
)
setCertSceCle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceCle.setStatus("current")
_SetCertSceRet_Type = Integer32
_SetCertSceRet_Object = MibScalar
setCertSceRet = _SetCertSceRet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 11),
    _SetCertSceRet_Type()
)
setCertSceRet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceRet.setStatus("current")
_SetCertSceChe_Type = Integer32
_SetCertSceChe_Object = MibScalar
setCertSceChe = _SetCertSceChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 1, 12),
    _SetCertSceChe_Type()
)
setCertSceChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertSceChe.setStatus("current")
_SetCertCrl_ObjectIdentity = ObjectIdentity
setCertCrl = _SetCertCrl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3)
)


class _SetCertCrlCrl_Type(Integer32):
    """Custom type setCertCrlCrl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCertCrlCrl_Type.__name__ = "Integer32"
_SetCertCrlCrl_Object = MibScalar
setCertCrlCrl = _SetCertCrlCrl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 1),
    _SetCertCrlCrl_Type()
)
setCertCrlCrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlCrl.setStatus("current")


class _SetCertCrlAlt_Type(DisplayString):
    """Custom type setCertCrlAlt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetCertCrlAlt_Type.__name__ = "DisplayString"
_SetCertCrlAlt_Object = MibScalar
setCertCrlAlt = _SetCertCrlAlt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 2),
    _SetCertCrlAlt_Type()
)
setCertCrlAlt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlAlt.setStatus("current")


class _SetCertCrlUse_Type(Integer32):
    """Custom type setCertCrlUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fallback", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetCertCrlUse_Type.__name__ = "Integer32"
_SetCertCrlUse_Object = MibScalar
setCertCrlUse = _SetCertCrlUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 3),
    _SetCertCrlUse_Type()
)
setCertCrlUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlUse.setStatus("current")
_SetCertCrlUpd_Type = Integer32
_SetCertCrlUpd_Object = MibScalar
setCertCrlUpd = _SetCertCrlUpd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 4),
    _SetCertCrlUpd_Type()
)
setCertCrlUpd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlUpd.setStatus("current")
_SetCertCrlPre_Type = Integer32
_SetCertCrlPre_Object = MibScalar
setCertCrlPre = _SetCertCrlPre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 5),
    _SetCertCrlPre_Type()
)
setCertCrlPre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlPre.setStatus("current")
_SetCertCrlVal_Type = Integer32
_SetCertCrlVal_Object = MibScalar
setCertCrlVal = _SetCertCrlVal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 6),
    _SetCertCrlVal_Type()
)
setCertCrlVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlVal.setStatus("current")
_SetCertCrlRef_Type = DisplayString
_SetCertCrlRef_Object = MibScalar
setCertCrlRef = _SetCertCrlRef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 39, 3, 7),
    _SetCertCrlRef_Type()
)
setCertCrlRef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertCrlRef.setStatus("current")
_SetComp_ObjectIdentity = ObjectIdentity
setComp = _SetComp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52)
)
_SetCompDevTable_Object = MibTable
setCompDevTable = _SetCompDevTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1)
)
if mibBuilder.loadTexts:
    setCompDevTable.setStatus("current")
_SetCompDevEntry_Object = MibTableRow
setCompDevEntry = _SetCompDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1)
)
setCompDevEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCompDevDev"),
)
if mibBuilder.loadTexts:
    setCompDevEntry.setStatus("current")


class _SetCompDevDev_Type(Integer32):
    """Custom type setCompDevDev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              17,
              23,
              26,
              30,
              31,
              33,
              34,
              35,
              39)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("e4g-systems-uxs1", 23),
          ("ftdi-8u232am", 35),
          ("huawei-e172-e220-e870", 31),
          ("novatel-merlin-mc950d", 26),
          ("option-icon", 17),
          ("outband", 1),
          ("prolific-2303", 34),
          ("sierra-aircard-875u", 30),
          ("sierra-compass-885", 39))
    )


_SetCompDevDev_Type.__name__ = "Integer32"
_SetCompDevDev_Object = MibTableColumn
setCompDevDev = _SetCompDevDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1, 1),
    _SetCompDevDev_Type()
)
setCompDevDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompDevDev.setStatus("current")


class _SetCompDevSer_Type(Integer32):
    """Custom type setCompDevSer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("com-port-server", 2),
          ("wan", 1))
    )


_SetCompDevSer_Type.__name__ = "Integer32"
_SetCompDevSer_Object = MibTableColumn
setCompDevSer = _SetCompDevSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 1, 1, 4),
    _SetCompDevSer_Type()
)
setCompDevSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompDevSer.setStatus("current")
_SetCompCom_ObjectIdentity = ObjectIdentity
setCompCom = _SetCompCom_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2)
)
_SetCompComOpeTable_Object = MibTable
setCompComOpeTable = _SetCompComOpeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1)
)
if mibBuilder.loadTexts:
    setCompComOpeTable.setStatus("current")
_SetCompComOpeEntry_Object = MibTableRow
setCompComOpeEntry = _SetCompComOpeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1)
)
setCompComOpeEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCompComOpeDev"),
    (0, "LANCOM-1711-MIB", "setCompComOpePor"),
)
if mibBuilder.loadTexts:
    setCompComOpeEntry.setStatus("current")


class _SetCompComOpeDev_Type(Integer32):
    """Custom type setCompComOpeDev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_SetCompComOpeDev_Type.__name__ = "Integer32"
_SetCompComOpeDev_Object = MibTableColumn
setCompComOpeDev = _SetCompComOpeDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 1),
    _SetCompComOpeDev_Type()
)
setCompComOpeDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComOpeDev.setStatus("current")


class _SetCompComOpePor_Type(Integer32):
    """Custom type setCompComOpePor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetCompComOpePor_Type.__name__ = "Integer32"
_SetCompComOpePor_Object = MibTableColumn
setCompComOpePor = _SetCompComOpePor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 2),
    _SetCompComOpePor_Type()
)
setCompComOpePor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComOpePor.setStatus("current")


class _SetCompComOpeOpe_Type(Integer32):
    """Custom type setCompComOpeOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCompComOpeOpe_Type.__name__ = "Integer32"
_SetCompComOpeOpe_Object = MibTableColumn
setCompComOpeOpe = _SetCompComOpeOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 1, 1, 4),
    _SetCompComOpeOpe_Type()
)
setCompComOpeOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComOpeOpe.setStatus("current")
_SetCompComComTable_Object = MibTable
setCompComComTable = _SetCompComComTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2)
)
if mibBuilder.loadTexts:
    setCompComComTable.setStatus("current")
_SetCompComComEntry_Object = MibTableRow
setCompComComEntry = _SetCompComComEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1)
)
setCompComComEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCompComComDevice"),
    (0, "LANCOM-1711-MIB", "setCompComComPortnu"),
)
if mibBuilder.loadTexts:
    setCompComComEntry.setStatus("current")


class _SetCompComComDevice_Type(Integer32):
    """Custom type setCompComComDevice based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_SetCompComComDevice_Type.__name__ = "Integer32"
_SetCompComComDevice_Object = MibTableColumn
setCompComComDevice = _SetCompComComDevice_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 1),
    _SetCompComComDevice_Type()
)
setCompComComDevice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComDevice.setStatus("current")


class _SetCompComComPortnu_Type(Integer32):
    """Custom type setCompComComPortnu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetCompComComPortnu_Type.__name__ = "Integer32"
_SetCompComComPortnu_Object = MibTableColumn
setCompComComPortnu = _SetCompComComPortnu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 2),
    _SetCompComComPortnu_Type()
)
setCompComComPortnu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComPortnu.setStatus("current")


class _SetCompComComBitrat_Type(Integer32):
    """Custom type setCompComComBitrat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(110,
              300,
              600,
              1200,
              2400,
              4800,
              9600,
              19200,
              38400,
              57600,
              115200,
              125000,
              230400)
        )
    )
    namedValues = NamedValues(
        *(("e110", 110),
          ("e115200", 115200),
          ("e1200", 1200),
          ("e125000", 125000),
          ("e19200", 19200),
          ("e230400", 230400),
          ("e2400", 2400),
          ("e300", 300),
          ("e38400", 38400),
          ("e4800", 4800),
          ("e57600", 57600),
          ("e600", 600),
          ("e9600", 9600))
    )


_SetCompComComBitrat_Type.__name__ = "Integer32"
_SetCompComComBitrat_Object = MibTableColumn
setCompComComBitrat = _SetCompComComBitrat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 4),
    _SetCompComComBitrat_Type()
)
setCompComComBitrat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComBitrat.setStatus("current")


class _SetCompComComDatabi_Type(Integer32):
    """Custom type setCompComComDatabi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("e7", 7),
          ("e8", 8))
    )


_SetCompComComDatabi_Type.__name__ = "Integer32"
_SetCompComComDatabi_Object = MibTableColumn
setCompComComDatabi = _SetCompComComDatabi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 5),
    _SetCompComComDatabi_Type()
)
setCompComComDatabi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComDatabi.setStatus("current")


class _SetCompComComParity_Type(Integer32):
    """Custom type setCompComComParity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("even", 3),
          ("none", 1),
          ("odd", 2))
    )


_SetCompComComParity_Type.__name__ = "Integer32"
_SetCompComComParity_Object = MibTableColumn
setCompComComParity = _SetCompComComParity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 6),
    _SetCompComComParity_Type()
)
setCompComComParity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComParity.setStatus("current")


class _SetCompComComStopbi_Type(Integer32):
    """Custom type setCompComComStopbi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("e1", 1),
          ("e2", 2))
    )


_SetCompComComStopbi_Type.__name__ = "Integer32"
_SetCompComComStopbi_Object = MibTableColumn
setCompComComStopbi = _SetCompComComStopbi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 7),
    _SetCompComComStopbi_Type()
)
setCompComComStopbi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComStopbi.setStatus("current")


class _SetCompComComHandsh_Type(Integer32):
    """Custom type setCompComComHandsh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("rts-cts", 1))
    )


_SetCompComComHandsh_Type.__name__ = "Integer32"
_SetCompComComHandsh_Object = MibTableColumn
setCompComComHandsh = _SetCompComComHandsh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 8),
    _SetCompComComHandsh_Type()
)
setCompComComHandsh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComHandsh.setStatus("current")


class _SetCompComComReadyc_Type(Integer32):
    """Custom type setCompComComReadyc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("data", 1),
          ("dtr", 0))
    )


_SetCompComComReadyc_Type.__name__ = "Integer32"
_SetCompComComReadyc_Object = MibTableColumn
setCompComComReadyc = _SetCompComComReadyc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 9),
    _SetCompComComReadyc_Type()
)
setCompComComReadyc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComReadyc.setStatus("current")


class _SetCompComComReadyd_Type(Integer32):
    """Custom type setCompComComReadyd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCompComComReadyd_Type.__name__ = "Integer32"
_SetCompComComReadyd_Object = MibTableColumn
setCompComComReadyd = _SetCompComComReadyd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 2, 1, 10),
    _SetCompComComReadyd_Type()
)
setCompComComReadyd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComComReadyd.setStatus("current")
_SetCompComNetTable_Object = MibTable
setCompComNetTable = _SetCompComNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3)
)
if mibBuilder.loadTexts:
    setCompComNetTable.setStatus("current")
_SetCompComNetEntry_Object = MibTableRow
setCompComNetEntry = _SetCompComNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1)
)
setCompComNetEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCompComNetDevicety"),
    (0, "LANCOM-1711-MIB", "setCompComNetPortnumb"),
)
if mibBuilder.loadTexts:
    setCompComNetEntry.setStatus("current")


class _SetCompComNetDevicety_Type(Integer32):
    """Custom type setCompComNetDevicety based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("ftdi-8u232am", 35),
          ("outband", 1),
          ("prolific-2303", 34))
    )


_SetCompComNetDevicety_Type.__name__ = "Integer32"
_SetCompComNetDevicety_Object = MibTableColumn
setCompComNetDevicety = _SetCompComNetDevicety_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 1),
    _SetCompComNetDevicety_Type()
)
setCompComNetDevicety.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetDevicety.setStatus("current")


class _SetCompComNetPortnumb_Type(Integer32):
    """Custom type setCompComNetPortnumb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetCompComNetPortnumb_Type.__name__ = "Integer32"
_SetCompComNetPortnumb_Object = MibTableColumn
setCompComNetPortnumb = _SetCompComNetPortnumb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 2),
    _SetCompComNetPortnumb_Type()
)
setCompComNetPortnumb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetPortnumb.setStatus("current")


class _SetCompComNetTcpmode_Type(Integer32):
    """Custom type setCompComNetTcpmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("client", 1),
          ("server", 0))
    )


_SetCompComNetTcpmode_Type.__name__ = "Integer32"
_SetCompComNetTcpmode_Object = MibTableColumn
setCompComNetTcpmode = _SetCompComNetTcpmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 4),
    _SetCompComNetTcpmode_Type()
)
setCompComNetTcpmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetTcpmode.setStatus("current")


class _SetCompComNetListenpo_Type(Integer32):
    """Custom type setCompComNetListenpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetCompComNetListenpo_Type.__name__ = "Integer32"
_SetCompComNetListenpo_Object = MibTableColumn
setCompComNetListenpo = _SetCompComNetListenpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 5),
    _SetCompComNetListenpo_Type()
)
setCompComNetListenpo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetListenpo.setStatus("current")


class _SetCompComNetConnecth_Type(DisplayString):
    """Custom type setCompComNetConnecth based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_SetCompComNetConnecth_Type.__name__ = "DisplayString"
_SetCompComNetConnecth_Object = MibTableColumn
setCompComNetConnecth = _SetCompComNetConnecth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 6),
    _SetCompComNetConnecth_Type()
)
setCompComNetConnecth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetConnecth.setStatus("current")


class _SetCompComNetConnectp_Type(Integer32):
    """Custom type setCompComNetConnectp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetCompComNetConnectp_Type.__name__ = "Integer32"
_SetCompComNetConnectp_Object = MibTableColumn
setCompComNetConnectp = _SetCompComNetConnectp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 7),
    _SetCompComNetConnectp_Type()
)
setCompComNetConnectp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetConnectp.setStatus("current")


class _SetCompComNetLoopback_Type(DisplayString):
    """Custom type setCompComNetLoopback based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCompComNetLoopback_Type.__name__ = "DisplayString"
_SetCompComNetLoopback_Object = MibTableColumn
setCompComNetLoopback = _SetCompComNetLoopback_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 8),
    _SetCompComNetLoopback_Type()
)
setCompComNetLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetLoopback.setStatus("current")


class _SetCompComNetRfc2217e_Type(Integer32):
    """Custom type setCompComNetRfc2217e based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCompComNetRfc2217e_Type.__name__ = "Integer32"
_SetCompComNetRfc2217e_Object = MibTableColumn
setCompComNetRfc2217e = _SetCompComNetRfc2217e_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 9),
    _SetCompComNetRfc2217e_Type()
)
setCompComNetRfc2217e.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetRfc2217e.setStatus("current")


class _SetCompComNetNewlinec_Type(Integer32):
    """Custom type setCompComNetNewlinec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cr", 1),
          ("crlf", 0),
          ("lf", 2))
    )


_SetCompComNetNewlinec_Type.__name__ = "Integer32"
_SetCompComNetNewlinec_Object = MibTableColumn
setCompComNetNewlinec = _SetCompComNetNewlinec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 2, 3, 1, 10),
    _SetCompComNetNewlinec_Type()
)
setCompComNetNewlinec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompComNetNewlinec.setStatus("current")
_SetCompWan_ObjectIdentity = ObjectIdentity
setCompWan = _SetCompWan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3)
)
_SetCompWanDevTable_Object = MibTable
setCompWanDevTable = _SetCompWanDevTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1)
)
if mibBuilder.loadTexts:
    setCompWanDevTable.setStatus("current")
_SetCompWanDevEntry_Object = MibTableRow
setCompWanDevEntry = _SetCompWanDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1)
)
setCompWanDevEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setCompWanDevDev"),
)
if mibBuilder.loadTexts:
    setCompWanDevEntry.setStatus("current")


class _SetCompWanDevDev_Type(Integer32):
    """Custom type setCompWanDevDev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              17,
              23,
              26,
              30,
              31,
              33,
              34,
              35,
              39)
        )
    )
    namedValues = NamedValues(
        *(("belkin-f5u103", 33),
          ("e4g-systems-uxs1", 23),
          ("ftdi-8u232am", 35),
          ("huawei-e172-e220-e870", 31),
          ("novatel-merlin-mc950d", 26),
          ("option-icon", 17),
          ("outband-modem", 2),
          ("prolific-2303", 34),
          ("sierra-aircard-875u", 30),
          ("sierra-compass-885", 39))
    )


_SetCompWanDevDev_Type.__name__ = "Integer32"
_SetCompWanDevDev_Object = MibTableColumn
setCompWanDevDev = _SetCompWanDevDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1, 1),
    _SetCompWanDevDev_Type()
)
setCompWanDevDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompWanDevDev.setStatus("current")


class _SetCompWanDevOpe_Type(Integer32):
    """Custom type setCompWanDevOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCompWanDevOpe_Type.__name__ = "Integer32"
_SetCompWanDevOpe_Object = MibTableColumn
setCompWanDevOpe = _SetCompWanDevOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 52, 3, 1, 1, 3),
    _SetCompWanDevOpe_Type()
)
setCompWanDevOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCompWanDevOpe.setStatus("current")
_SetTaca_ObjectIdentity = ObjectIdentity
setTaca = _SetTaca_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54)
)


class _SetTacaAuthentication_Type(Integer32):
    """Custom type setTacaAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 0))
    )


_SetTacaAuthentication_Type.__name__ = "Integer32"
_SetTacaAuthentication_Object = MibScalar
setTacaAuthentication = _SetTacaAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 1),
    _SetTacaAuthentication_Type()
)
setTacaAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaAuthentication.setStatus("current")


class _SetTacaAuthorisation_Type(Integer32):
    """Custom type setTacaAuthorisation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 0))
    )


_SetTacaAuthorisation_Type.__name__ = "Integer32"
_SetTacaAuthorisation_Object = MibScalar
setTacaAuthorisation = _SetTacaAuthorisation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 2),
    _SetTacaAuthorisation_Type()
)
setTacaAuthorisation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaAuthorisation.setStatus("current")


class _SetTacaAccounting_Type(Integer32):
    """Custom type setTacaAccounting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 0))
    )


_SetTacaAccounting_Type.__name__ = "Integer32"
_SetTacaAccounting_Object = MibScalar
setTacaAccounting = _SetTacaAccounting_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 3),
    _SetTacaAccounting_Type()
)
setTacaAccounting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaAccounting.setStatus("current")


class _SetTacaSharedsecret_Type(DisplayString):
    """Custom type setTacaSharedsecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetTacaSharedsecret_Type.__name__ = "DisplayString"
_SetTacaSharedsecret_Object = MibScalar
setTacaSharedsecret = _SetTacaSharedsecret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 6),
    _SetTacaSharedsecret_Type()
)
setTacaSharedsecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaSharedsecret.setStatus("current")


class _SetTacaEncryption_Type(Integer32):
    """Custom type setTacaEncryption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 0))
    )


_SetTacaEncryption_Type.__name__ = "Integer32"
_SetTacaEncryption_Object = MibScalar
setTacaEncryption = _SetTacaEncryption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 7),
    _SetTacaEncryption_Type()
)
setTacaEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaEncryption.setStatus("current")
_SetTacaServerTable_Object = MibTable
setTacaServerTable = _SetTacaServerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9)
)
if mibBuilder.loadTexts:
    setTacaServerTable.setStatus("current")
_SetTacaServerEntry_Object = MibTableRow
setTacaServerEntry = _SetTacaServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1)
)
setTacaServerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "setTacaServerSer"),
)
if mibBuilder.loadTexts:
    setTacaServerEntry.setStatus("current")


class _SetTacaServerSer_Type(DisplayString):
    """Custom type setTacaServerSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetTacaServerSer_Type.__name__ = "DisplayString"
_SetTacaServerSer_Object = MibTableColumn
setTacaServerSer = _SetTacaServerSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 1),
    _SetTacaServerSer_Type()
)
setTacaServerSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaServerSer.setStatus("current")


class _SetTacaServerLoo_Type(DisplayString):
    """Custom type setTacaServerLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetTacaServerLoo_Type.__name__ = "DisplayString"
_SetTacaServerLoo_Object = MibTableColumn
setTacaServerLoo = _SetTacaServerLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 2),
    _SetTacaServerLoo_Type()
)
setTacaServerLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaServerLoo.setStatus("current")


class _SetTacaServerCom_Type(Integer32):
    """Custom type setTacaServerCom based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 0))
    )


_SetTacaServerCom_Type.__name__ = "Integer32"
_SetTacaServerCom_Object = MibTableColumn
setTacaServerCom = _SetTacaServerCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 9, 1, 3),
    _SetTacaServerCom_Type()
)
setTacaServerCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaServerCom.setStatus("current")


class _SetTacaFallbacktolocalus_Type(Integer32):
    """Custom type setTacaFallbacktolocalus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("allowed", 0),
          ("prohibited", 1))
    )


_SetTacaFallbacktolocalus_Type.__name__ = "Integer32"
_SetTacaFallbacktolocalus_Object = MibScalar
setTacaFallbacktolocalus = _SetTacaFallbacktolocalus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 10),
    _SetTacaFallbacktolocalus_Type()
)
setTacaFallbacktolocalus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaFallbacktolocalus.setStatus("current")


class _SetTacaSnmpgetrequestsau_Type(Integer32):
    """Custom type setTacaSnmpgetrequestsau based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("none", 2),
          ("only-for-setup-tree", 0))
    )


_SetTacaSnmpgetrequestsau_Type.__name__ = "Integer32"
_SetTacaSnmpgetrequestsau_Object = MibScalar
setTacaSnmpgetrequestsau = _SetTacaSnmpgetrequestsau_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 11),
    _SetTacaSnmpgetrequestsau_Type()
)
setTacaSnmpgetrequestsau.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaSnmpgetrequestsau.setStatus("current")


class _SetTacaSnmpgetrequestsac_Type(Integer32):
    """Custom type setTacaSnmpgetrequestsac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("none", 2),
          ("only-for-setup-tree", 0))
    )


_SetTacaSnmpgetrequestsac_Type.__name__ = "Integer32"
_SetTacaSnmpgetrequestsac_Object = MibScalar
setTacaSnmpgetrequestsac = _SetTacaSnmpgetrequestsac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 2, 54, 12),
    _SetTacaSnmpgetrequestsac_Type()
)
setTacaSnmpgetrequestsac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTacaSnmpgetrequestsac.setStatus("current")
_Fir_ObjectIdentity = ObjectIdentity
fir = _Fir_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3)
)
_FirVerTable_Object = MibTable
firVerTable = _FirVerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1)
)
if mibBuilder.loadTexts:
    firVerTable.setStatus("current")
_FirVerEntry_Object = MibTableRow
firVerEntry = _FirVerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1)
)
firVerEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "firVerIfc"),
)
if mibBuilder.loadTexts:
    firVerEntry.setStatus("current")


class _FirVerIfc_Type(Integer32):
    """Custom type firVerIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ifc", 1)
    )


_FirVerIfc_Type.__name__ = "Integer32"
_FirVerIfc_Object = MibTableColumn
firVerIfc = _FirVerIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 1),
    _FirVerIfc_Type()
)
firVerIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerIfc.setStatus("current")


class _FirVerMod_Type(DisplayString):
    """Custom type firVerMod based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_FirVerMod_Type.__name__ = "DisplayString"
_FirVerMod_Object = MibTableColumn
firVerMod = _FirVerMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 2),
    _FirVerMod_Type()
)
firVerMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerMod.setStatus("current")


class _FirVerVer_Type(DisplayString):
    """Custom type firVerVer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_FirVerVer_Type.__name__ = "DisplayString"
_FirVerVer_Object = MibTableColumn
firVerVer = _FirVerVer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 3),
    _FirVerVer_Type()
)
firVerVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerVer.setStatus("current")


class _FirVerSer_Type(DisplayString):
    """Custom type firVerSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_FirVerSer_Type.__name__ = "DisplayString"
_FirVerSer_Object = MibTableColumn
firVerSer = _FirVerSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 1, 1, 4),
    _FirVerSer_Type()
)
firVerSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerSer.setStatus("current")
_FirTabTable_Object = MibTable
firTabTable = _FirTabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2)
)
if mibBuilder.loadTexts:
    firTabTable.setStatus("current")
_FirTabEntry_Object = MibTableRow
firTabEntry = _FirTabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1)
)
firTabEntry.setIndexNames(
    (0, "LANCOM-1711-MIB", "firTabPos"),
)
if mibBuilder.loadTexts:
    firTabEntry.setStatus("current")


class _FirTabPos_Type(Integer32):
    """Custom type firTabPos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FirTabPos_Type.__name__ = "Integer32"
_FirTabPos_Object = MibTableColumn
firTabPos = _FirTabPos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 1),
    _FirTabPos_Type()
)
firTabPos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabPos.setStatus("current")


class _FirTabSta_Type(Integer32):
    """Custom type firTabSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 0),
          ("loader", 2),
          ("minimal-plus-active", 5),
          ("minimal-plus-inactive", 4))
    )


_FirTabSta_Type.__name__ = "Integer32"
_FirTabSta_Object = MibTableColumn
firTabSta = _FirTabSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 2),
    _FirTabSta_Type()
)
firTabSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firTabSta.setStatus("current")


class _FirTabVer_Type(DisplayString):
    """Custom type firTabVer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_FirTabVer_Type.__name__ = "DisplayString"
_FirTabVer_Object = MibTableColumn
firTabVer = _FirTabVer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 3),
    _FirTabVer_Type()
)
firTabVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabVer.setStatus("current")


class _FirTabDat_Type(DisplayString):
    """Custom type firTabDat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_FirTabDat_Type.__name__ = "DisplayString"
_FirTabDat_Object = MibTableColumn
firTabDat = _FirTabDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 4),
    _FirTabDat_Type()
)
firTabDat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabDat.setStatus("current")


class _FirTabSiz_Type(Integer32):
    """Custom type firTabSiz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_FirTabSiz_Type.__name__ = "Integer32"
_FirTabSiz_Object = MibTableColumn
firTabSiz = _FirTabSiz_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 5),
    _FirTabSiz_Type()
)
firTabSiz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabSiz.setStatus("current")


class _FirTabInd_Type(Integer32):
    """Custom type firTabInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_FirTabInd_Type.__name__ = "Integer32"
_FirTabInd_Object = MibTableColumn
firTabInd = _FirTabInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 2, 1, 6),
    _FirTabInd_Type()
)
firTabInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabInd.setStatus("current")


class _FirMod_Type(Integer32):
    """Custom type firMod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("immediate", 0),
          ("login", 1),
          ("manual", 2))
    )


_FirMod_Type.__name__ = "Integer32"
_FirMod_Object = MibScalar
firMod = _FirMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 3),
    _FirMod_Type()
)
firMod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firMod.setStatus("current")
_FirTim_Type = Integer32
_FirTim_Object = MibScalar
firTim = _FirTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 4),
    _FirTim_Type()
)
firTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firTim.setStatus("current")


class _FirFea_Type(DisplayString):
    """Custom type firFea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_FirFea_Type.__name__ = "DisplayString"
_FirFea_Object = MibScalar
firFea = _FirFea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 3, 7),
    _FirFea_Type()
)
firFea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firFea.setStatus("current")
_Oth_ObjectIdentity = ObjectIdentity
oth = _Oth_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4)
)
_OthMan_ObjectIdentity = ObjectIdentity
othMan = _OthMan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1)
)
_OthManCon_Type = DisplayString
_OthManCon_Object = MibScalar
othManCon = _OthManCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1, 1),
    _OthManCon_Type()
)
othManCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othManCon.setStatus("current")
_OthManDis_Type = DisplayString
_OthManDis_Object = MibScalar
othManDis = _OthManDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 1, 2),
    _OthManDis_Type()
)
othManDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othManDis.setStatus("current")
_OthBoo_Type = DisplayString
_OthBoo_Object = MibScalar
othBoo = _OthBoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 2),
    _OthBoo_Type()
)
othBoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othBoo.setStatus("current")
_OthCol_Type = DisplayString
_OthCol_Object = MibScalar
othCol = _OthCol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 4, 5),
    _OthCol_Type()
)
othCol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othCol.setStatus("current")

# Managed Objects groups


# Notification objects

trpStatChan = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 1)
)
trpStatChan.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staWanConnectio"),
        ("LANCOM-1711-MIB", "staChanState"),
        ("LANCOM-1711-MIB", "staChanApp"),
        ("LANCOM-1711-MIB", "staChanMode"),
        ("LANCOM-1711-MIB", "staChanCause"),
        ("LANCOM-1711-MIB", "staChanNumbe"),
        ("LANCOM-1711-MIB", "staChanSubad"),
        ("LANCOM-1711-MIB", "staChanCharg"),
        ("LANCOM-1711-MIB", "staChanExtra"),
        ("LANCOM-1711-MIB", "staChanConnt"),
        ("LANCOM-1711-MIB", "staChanConns"),
        ("LANCOM-1711-MIB", "staChanIsdnd"),
        ("LANCOM-1711-MIB", "staChanPhcha"),
        ("LANCOM-1711-MIB", "staChanPptpc"),
        ("LANCOM-1711-MIB", "staChanVpnco"))
)
if mibBuilder.loadTexts:
    trpStatChan.setStatus(
        "current"
    )

trpFwUplStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 4)
)
trpFwUplStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpFwUplStart.setStatus(
        "current"
    )

trpUplSucc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5)
)
trpUplSucc.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo1"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplSucc.setStatus(
        "current"
    )

trpUplFailTo = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 6)
)
trpUplFailTo.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo1"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplFailTo.setStatus(
        "current"
    )

trpUplFailIncl = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 7)
)
trpUplFailIncl.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo1"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplFailIncl.setStatus(
        "current"
    )

trpUplFailBadDev = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 8)
)
trpUplFailBadDev.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo1"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplFailBadDev.setStatus(
        "current"
    )

trpLogin = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 9)
)
trpLogin.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpLogin.setStatus(
        "current"
    )

trpLogout = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 10)
)
trpLogout.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpLogout.setStatus(
        "current"
    )

trpCnfUplStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 11)
)
trpCnfUplStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpCnfUplStart.setStatus(
        "current"
    )

trpCnfDnlStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 12)
)
trpCnfDnlStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpCnfDnlStart.setStatus(
        "current"
    )

trpCnfDnlSucc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 13)
)
trpCnfDnlSucc.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo1"),
        ("LANCOM-1711-MIB", "staConfEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpCnfDnlSucc.setStatus(
        "current"
    )

trpIpFwFlt = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 26)
)
trpIpFwFlt.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staIproLogtablSyst"),
        ("LANCOM-1711-MIB", "staIproLogtablSrca"),
        ("LANCOM-1711-MIB", "staIproLogtablDsta"),
        ("LANCOM-1711-MIB", "staIproLogtablProt"),
        ("LANCOM-1711-MIB", "staIproLogtablSrcp"),
        ("LANCOM-1711-MIB", "staIproLogtablDstp"),
        ("LANCOM-1711-MIB", "staIproLogtablFilt"),
        ("LANCOM-1711-MIB", "staIproLogtablLimi"),
        ("LANCOM-1711-MIB", "staIproLogtablThre"),
        ("LANCOM-1711-MIB", "staIproLogtablActi"))
)
if mibBuilder.loadTexts:
    trpIpFwFlt.setStatus(
        "current"
    )

trpVPNConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 27)
)
trpVPNConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staVpnTunnel"),
        ("LANCOM-1711-MIB", "staVpnConnectPeer"),
        ("LANCOM-1711-MIB", "staVpnConnectState"),
        ("LANCOM-1711-MIB", "staVpnConnectLaster"),
        ("LANCOM-1711-MIB", "staVpnConnectMode"),
        ("LANCOM-1711-MIB", "staVpnConnectShtime"),
        ("LANCOM-1711-MIB", "staVpnConnectPhysco"),
        ("LANCOM-1711-MIB", "staVpnConnectB1dt"),
        ("LANCOM-1711-MIB", "staVpnConnectRemote"),
        ("LANCOM-1711-MIB", "staVpnConnectNatdet"),
        ("LANCOM-1711-MIB", "staVpnConnectCrypta"),
        ("LANCOM-1711-MIB", "staVpnConnectCryptl"),
        ("LANCOM-1711-MIB", "staVpnConnectHashal"),
        ("LANCOM-1711-MIB", "staVpnConnectHashle"),
        ("LANCOM-1711-MIB", "staVpnConnectHmacal"),
        ("LANCOM-1711-MIB", "staVpnConnectHmacle"),
        ("LANCOM-1711-MIB", "staVpnConnectCompra"),
        ("LANCOM-1711-MIB", "staVpnConnectClient"))
)
if mibBuilder.loadTexts:
    trpVPNConn.setStatus(
        "current"
    )

trpPptpConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 28)
)
trpPptpConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staPptpTun"),
        ("LANCOM-1711-MIB", "staPptpConChann"),
        ("LANCOM-1711-MIB", "staPptpConState"),
        ("LANCOM-1711-MIB", "staPptpConMode"),
        ("LANCOM-1711-MIB", "staPptpConShtim"),
        ("LANCOM-1711-MIB", "staPptpConPhysc"),
        ("LANCOM-1711-MIB", "staPptpConPeera"),
        ("LANCOM-1711-MIB", "staPptpConIpadd"),
        ("LANCOM-1711-MIB", "staPptpConDnsde"),
        ("LANCOM-1711-MIB", "staPptpConNbnsd"),
        ("LANCOM-1711-MIB", "staPptpConLaste"),
        ("LANCOM-1711-MIB", "staPptpConDnsba"),
        ("LANCOM-1711-MIB", "staPptpConNbnsb"))
)
if mibBuilder.loadTexts:
    trpPptpConn.setStatus(
        "current"
    )

trpErrLogin = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 29)
)
trpErrLogin.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staConfEventlogSyste"),
        ("LANCOM-1711-MIB", "staConfEventlogEvent"),
        ("LANCOM-1711-MIB", "staConfEventlogAcces"),
        ("LANCOM-1711-MIB", "staConfEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpErrLogin.setStatus(
        "current"
    )

trpLdblConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 38)
)
trpLdblConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staIproLoadbalConPee"),
        ("LANCOM-1711-MIB", "staIproLoadbalConBun"),
        ("LANCOM-1711-MIB", "staIproLoadbalConSta"))
)
if mibBuilder.loadTexts:
    trpLdblConn.setStatus(
        "current"
    )

trpPPPoESConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 39)
)
trpPPPoESConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staPppoNum"),
        ("LANCOM-1711-MIB", "staPppoConCha"),
        ("LANCOM-1711-MIB", "staPppoConMac"),
        ("LANCOM-1711-MIB", "staPppoConSta"),
        ("LANCOM-1711-MIB", "staPppoConLas"),
        ("LANCOM-1711-MIB", "staPppoConSht"),
        ("LANCOM-1711-MIB", "staPppoConPee"))
)
if mibBuilder.loadTexts:
    trpPPPoESConn.setStatus(
        "current"
    )

trpVrrp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 41)
)
trpVrrp.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staIproVrrpEveSys"),
        ("LANCOM-1711-MIB", "staIproVrrpEveSrc"),
        ("LANCOM-1711-MIB", "staIproVrrpEveVri"),
        ("LANCOM-1711-MIB", "staIproVrrpEveEve"),
        ("LANCOM-1711-MIB", "staIproVrrpEveInf"))
)
if mibBuilder.loadTexts:
    trpVrrp.setStatus(
        "current"
    )

trpHTTP_Tunnel_Open = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 2000)
)
trpHTTP_Tunnel_Open.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveIndex"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveRemotea"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveRemotep"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalho"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalpo"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveIdletim"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveLocalrt"))
)
if mibBuilder.loadTexts:
    trpHTTP_Tunnel_Open.setStatus(
        "current"
    )

trpHTTP_Tunnel_Close = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 2001)
)
trpHTTP_Tunnel_Close.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"),
        ("LANCOM-1711-MIB", "staTcpiHttpActiveIndex"))
)
if mibBuilder.loadTexts:
    trpHTTP_Tunnel_Close.setStatus(
        "current"
    )

trpLAN_Overtemp_Throttle = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5002)
)
trpLAN_Overtemp_Throttle.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"))
)
if mibBuilder.loadTexts:
    trpLAN_Overtemp_Throttle.setStatus(
        "current"
    )

trpLAN_Overtemp_Throttle_End = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5003)
)
trpLAN_Overtemp_Throttle_End.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"))
)
if mibBuilder.loadTexts:
    trpLAN_Overtemp_Throttle_End.setStatus(
        "current"
    )

trpLAN_Overtemp_Throttle_Recommend = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 500, 2, 1712, 0, 0, 5004)
)
trpLAN_Overtemp_Throttle_Recommend.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-1711-MIB", "staSnmpEveCou"))
)
if mibBuilder.loadTexts:
    trpLAN_Overtemp_Throttle_Recommend.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "LANCOM-1711-MIB",
    **{"lancom-1711-plus": lancom_1711_plus,
       "trapgrp": trapgrp,
       "traps": traps,
       "trpStatChan": trpStatChan,
       "trpFwUplStart": trpFwUplStart,
       "trpUplSucc": trpUplSucc,
       "trpUplFailTo": trpUplFailTo,
       "trpUplFailIncl": trpUplFailIncl,
       "trpUplFailBadDev": trpUplFailBadDev,
       "trpLogin": trpLogin,
       "trpLogout": trpLogout,
       "trpCnfUplStart": trpCnfUplStart,
       "trpCnfDnlStart": trpCnfDnlStart,
       "trpCnfDnlSucc": trpCnfDnlSucc,
       "trpIpFwFlt": trpIpFwFlt,
       "trpVPNConn": trpVPNConn,
       "trpPptpConn": trpPptpConn,
       "trpErrLogin": trpErrLogin,
       "trpLdblConn": trpLdblConn,
       "trpPPPoESConn": trpPPPoESConn,
       "trpVrrp": trpVrrp,
       "trpHTTP-Tunnel-Open": trpHTTP_Tunnel_Open,
       "trpHTTP-Tunnel-Close": trpHTTP_Tunnel_Close,
       "trpLAN-Overtemp-Throttle": trpLAN_Overtemp_Throttle,
       "trpLAN-Overtemp-Throttle-End": trpLAN_Overtemp_Throttle_End,
       "trpLAN-Overtemp-Throttle-Recommend": trpLAN_Overtemp_Throttle_Recommend,
       "sta": sta,
       "staOper": staOper,
       "staWan": staWan,
       "staWanBytetransTable": staWanBytetransTable,
       "staWanBytetransEntry": staWanBytetransEntry,
       "staWanBytetransIfc": staWanBytetransIfc,
       "staWanBytetransCrx": staWanBytetransCrx,
       "staWanBytetransRxb": staWanBytetransRxb,
       "staWanBytetransTxb": staWanBytetransTxb,
       "staWanBytetransCtx": staWanBytetransCtx,
       "staWanPackettraTable": staWanPackettraTable,
       "staWanPackettraEntry": staWanPackettraEntry,
       "staWanPackettraIfc": staWanPackettraIfc,
       "staWanPackettraRx": staWanPackettraRx,
       "staWanPackettraTxt": staWanPackettraTxt,
       "staWanPackettraTxn": staWanPackettraTxn,
       "staWanPackettraTxr": staWanPackettraTxr,
       "staWanPackettraTxu": staWanPackettraTxu,
       "staWanErrorsTable": staWanErrorsTable,
       "staWanErrorsEntry": staWanErrorsEntry,
       "staWanErrorsIfc": staWanErrorsIfc,
       "staWanErrorsRxl1": staWanErrorsRxl1,
       "staWanErrorsRxl2": staWanErrorsRxl2,
       "staWanErrorsRxl3": staWanErrorsRxl3,
       "staWanErrorsStac": staWanErrorsStac,
       "staWanErrorsTxer": staWanErrorsTxer,
       "staWanWantxdisc": staWanWantxdisc,
       "staWanWanheappa": staWanWanheappa,
       "staWanWanqueuep": staWanWanqueuep,
       "staWanWanqueuee": staWanWanqueuee,
       "staWanThroughpuTable": staWanThroughpuTable,
       "staWanThroughpuEntry": staWanThroughpuEntry,
       "staWanThroughpuIfc": staWanThroughpuIfc,
       "staWanThroughpuRxsc": staWanThroughpuRxsc,
       "staWanThroughpuTxsc": staWanThroughpuTxsc,
       "staWanThroughpuRxsa": staWanThroughpuRxsa,
       "staWanThroughpuTxsa": staWanThroughpuTxsa,
       "staWanDeleteval": staWanDeleteval,
       "staWanConnectio": staWanConnectio,
       "staWanMtuTable": staWanMtuTable,
       "staWanMtuEntry": staWanMtuEntry,
       "staWanMtuPee": staWanMtuPee,
       "staWanMtuMtu": staWanMtuMtu,
       "staWanActions": staWanActions,
       "staWanActionsActTable": staWanActionsActTable,
       "staWanActionsActEntry": staWanActionsActEntry,
       "staWanActionsActTim": staWanActionsActTim,
       "staWanActionsActAct": staWanActionsActAct,
       "staWanActionsActRes": staWanActionsActRes,
       "staWanActionsLocTable": staWanActionsLocTable,
       "staWanActionsLocEntry": staWanActionsLocEntry,
       "staWanActionsLocInd": staWanActionsLocInd,
       "staWanActionsLocRem": staWanActionsLocRem,
       "staWanWanqueuem": staWanWanqueuem,
       "staLan": staLan,
       "staLanLanh": staLanLanh,
       "staLanDele": staLanDele,
       "staLanInteTable": staLanInteTable,
       "staLanInteEntry": staLanInteEntry,
       "staLanInteIfc": staLanInteIfc,
       "staLanInteQue": staLanInteQue,
       "staLanByteTable": staLanByteTable,
       "staLanByteEntry": staLanByteEntry,
       "staLanByteIfc": staLanByteIfc,
       "staLanByteTxbyte": staLanByteTxbyte,
       "staLanByteRxbyte": staLanByteRxbyte,
       "staLanByteThroug": staLanByteThroug,
       "staLanByteMaxthr": staLanByteMaxthr,
       "staLanByteBytest": staLanByteBytest,
       "staLanByteBytesm": staLanByteBytesm,
       "staLanPackTable": staLanPackTable,
       "staLanPackEntry": staLanPackEntry,
       "staLanPackIfc": staLanPackIfc,
       "staLanPackRxp": staLanPackRxp,
       "staLanPackTxp": staLanPackTxp,
       "staLanPackRxb": staLanPackRxb,
       "staLanPackRxm": staLanPackRxm,
       "staLanPackRxu": staLanPackRxu,
       "staLanPackTxb": staLanPackTxb,
       "staLanPackTxm": staLanPackTxm,
       "staLanPackTxu": staLanPackTxu,
       "staLanErroTable": staLanErroTable,
       "staLanErroEntry": staLanErroEntry,
       "staLanErroIfc": staLanErroIfc,
       "staLanErroRxerro": staLanErroRxerro,
       "staLanErroTxerro": staLanErroTxerro,
       "staLanErroStacke": staLanErroStacke,
       "staLanErroNicerr": staLanErroNicerr,
       "staLanErroQueuee": staLanErroQueuee,
       "staLanErroRxcrce": staLanErroRxcrce,
       "staLanErroCollis": staLanErroCollis,
       "staLanErroSingle": staLanErroSingle,
       "staLanErroMultip": staLanErroMultip,
       "staLanErroLateco": staLanErroLateco,
       "staLanErroExcess": staLanErroExcess,
       "staLanErroRxalig": staLanErroRxalig,
       "staLanErroRxtoos": staLanErroRxtoos,
       "staLanErroRxtool": staLanErroRxtool,
       "staLanErroTxcarr": staLanErroTxcarr,
       "staLanErroTxdefe": staLanErroTxdefe,
       "staLanLanq": staLanLanq,
       "staPpp": staPpp,
       "staPppPppTable": staPppPppTable,
       "staPppPppEntry": staPppPppEntry,
       "staPppPppIfc": staPppPppIfc,
       "staPppPppPha": staPppPppPha,
       "staPppPppLcp": staPppPppLcp,
       "staPppPppIpc": staPppPppIpc,
       "staPppPppCcp": staPppPppCcp,
       "staPppPppBac": staPppPppBac,
       "staPppLcp": staPppLcp,
       "staPppLcpRxerrors": staPppLcpRxerrors,
       "staPppLcpRxdiscarded": staPppLcpRxdiscarded,
       "staPppLcpRxconfigrequ": staPppLcpRxconfigrequ,
       "staPppLcpRxconfigack": staPppLcpRxconfigack,
       "staPppLcpRxconfignak": staPppLcpRxconfignak,
       "staPppLcpRxconfigreje": staPppLcpRxconfigreje,
       "staPppLcpRxterminater": staPppLcpRxterminater,
       "staPppLcpRxterminatea": staPppLcpRxterminatea,
       "staPppLcpRxcodereject": staPppLcpRxcodereject,
       "staPppLcpRxprotocolre": staPppLcpRxprotocolre,
       "staPppLcpRxechoreques": staPppLcpRxechoreques,
       "staPppLcpRxechoreply": staPppLcpRxechoreply,
       "staPppLcpRxdiscardreq": staPppLcpRxdiscardreq,
       "staPppLcpTxconfigrequ": staPppLcpTxconfigrequ,
       "staPppLcpTxconfigack": staPppLcpTxconfigack,
       "staPppLcpTxconfignak": staPppLcpTxconfignak,
       "staPppLcpTxconfigreje": staPppLcpTxconfigreje,
       "staPppLcpTxterminater": staPppLcpTxterminater,
       "staPppLcpTxterminatea": staPppLcpTxterminatea,
       "staPppLcpTxcodereject": staPppLcpTxcodereject,
       "staPppLcpTxprotocolre": staPppLcpTxprotocolre,
       "staPppLcpTxechoreques": staPppLcpTxechoreques,
       "staPppLcpTxechoreply": staPppLcpTxechoreply,
       "staPppLcpTxdiscardreq": staPppLcpTxdiscardreq,
       "staPppLcpDeletevalues": staPppLcpDeletevalues,
       "staPppPap": staPppPap,
       "staPppPapRxdis": staPppPapRxdis,
       "staPppPapRxreq": staPppPapRxreq,
       "staPppPapRxsuc": staPppPapRxsuc,
       "staPppPapRxfai": staPppPapRxfai,
       "staPppPapTxret": staPppPapTxret,
       "staPppPapTxreq": staPppPapTxreq,
       "staPppPapTxsuc": staPppPapTxsuc,
       "staPppPapTxfai": staPppPapTxfai,
       "staPppPapDelet": staPppPapDelet,
       "staPppCha": staPppCha,
       "staPppChaRxdis": staPppChaRxdis,
       "staPppChaRxcha": staPppChaRxcha,
       "staPppChaRxres": staPppChaRxres,
       "staPppChaRxsuc": staPppChaRxsuc,
       "staPppChaRxfai": staPppChaRxfai,
       "staPppChaTxret": staPppChaTxret,
       "staPppChaTxcha": staPppChaTxcha,
       "staPppChaTxres": staPppChaTxres,
       "staPppChaTxsuc": staPppChaTxsuc,
       "staPppChaTxfai": staPppChaTxfai,
       "staPppChaDelet": staPppChaDelet,
       "staPppIpc": staPppIpc,
       "staPppIpcRxdiscarded": staPppIpcRxdiscarded,
       "staPppIpcRxconfigrequ": staPppIpcRxconfigrequ,
       "staPppIpcRxconfigack": staPppIpcRxconfigack,
       "staPppIpcRxconfignak": staPppIpcRxconfignak,
       "staPppIpcRxconfigreje": staPppIpcRxconfigreje,
       "staPppIpcRxterminater": staPppIpcRxterminater,
       "staPppIpcRxterminatea": staPppIpcRxterminatea,
       "staPppIpcRxcodereject": staPppIpcRxcodereject,
       "staPppIpcTxconfigrequ": staPppIpcTxconfigrequ,
       "staPppIpcTxconfigack": staPppIpcTxconfigack,
       "staPppIpcTxconfignak": staPppIpcTxconfignak,
       "staPppIpcTxconfigreje": staPppIpcTxconfigreje,
       "staPppIpcTxterminater": staPppIpcTxterminater,
       "staPppIpcTxterminatea": staPppIpcTxterminatea,
       "staPppIpcTxcodereject": staPppIpcTxcodereject,
       "staPppIpcDeletevalues": staPppIpcDeletevalues,
       "staPppCbc": staPppCbc,
       "staPppCbcRxdis": staPppCbcRxdis,
       "staPppCbcRxreq": staPppCbcRxreq,
       "staPppCbcRxres": staPppCbcRxres,
       "staPppCbcRxack": staPppCbcRxack,
       "staPppCbcTxreq": staPppCbcTxreq,
       "staPppCbcTxres": staPppCbcTxres,
       "staPppCbcTxack": staPppCbcTxack,
       "staPppCbcDelet": staPppCbcDelet,
       "staPppRxo": staPppRxo,
       "staPppRxoLcpTable": staPppRxoLcpTable,
       "staPppRxoLcpEntry": staPppRxoLcpEntry,
       "staPppRxoLcpIfc": staPppRxoLcpIfc,
       "staPppRxoLcpMru": staPppRxoLcpMru,
       "staPppRxoLcpAcc": staPppRxoLcpAcc,
       "staPppRxoLcpAut": staPppRxoLcpAut,
       "staPppRxoLcpCal": staPppRxoLcpCal,
       "staPppRxoLcpMag": staPppRxoLcpMag,
       "staPppRxoLcpPfc": staPppRxoLcpPfc,
       "staPppRxoLcpAcf": staPppRxoLcpAcf,
       "staPppRxoIpcTable": staPppRxoIpcTable,
       "staPppRxoIpcEntry": staPppRxoIpcEntry,
       "staPppRxoIpcIfc": staPppRxoIpcIfc,
       "staPppRxoIpcIpadd": staPppRxoIpcIpadd,
       "staPppRxoIpcDnsde": staPppRxoIpcDnsde,
       "staPppRxoIpcNbnsd": staPppRxoIpcNbnsd,
       "staPppRxoIpcDnsba": staPppRxoIpcDnsba,
       "staPppRxoIpcNbnsb": staPppRxoIpcNbnsb,
       "staPppTxo": staPppTxo,
       "staPppTxoLcpTable": staPppTxoLcpTable,
       "staPppTxoLcpEntry": staPppTxoLcpEntry,
       "staPppTxoLcpIfc": staPppTxoLcpIfc,
       "staPppTxoLcpMru": staPppTxoLcpMru,
       "staPppTxoLcpAcc": staPppTxoLcpAcc,
       "staPppTxoLcpAut": staPppTxoLcpAut,
       "staPppTxoLcpCal": staPppTxoLcpCal,
       "staPppTxoLcpMag": staPppTxoLcpMag,
       "staPppTxoLcpPfc": staPppTxoLcpPfc,
       "staPppTxoLcpAcf": staPppTxoLcpAcf,
       "staPppTxoIpcTable": staPppTxoIpcTable,
       "staPppTxoIpcEntry": staPppTxoIpcEntry,
       "staPppTxoIpcIfc": staPppTxoIpcIfc,
       "staPppTxoIpcIpadd": staPppTxoIpcIpadd,
       "staPppTxoIpcDnsde": staPppTxoIpcDnsde,
       "staPppTxoIpcNbnsd": staPppTxoIpcNbnsd,
       "staPppTxoIpcDnsba": staPppTxoIpcDnsba,
       "staPppTxoIpcNbnsb": staPppTxoIpcNbnsb,
       "staPppCcp": staPppCcp,
       "staPppCcpRxdiscarded": staPppCcpRxdiscarded,
       "staPppCcpRxconfigrequ": staPppCcpRxconfigrequ,
       "staPppCcpRxconfigack": staPppCcpRxconfigack,
       "staPppCcpRxconfignak": staPppCcpRxconfignak,
       "staPppCcpRxconfigreje": staPppCcpRxconfigreje,
       "staPppCcpRxterminater": staPppCcpRxterminater,
       "staPppCcpRxterminatea": staPppCcpRxterminatea,
       "staPppCcpRxcodereject": staPppCcpRxcodereject,
       "staPppCcpRxresetreque": staPppCcpRxresetreque,
       "staPppCcpRxresetack": staPppCcpRxresetack,
       "staPppCcpTxconfigrequ": staPppCcpTxconfigrequ,
       "staPppCcpTxconfigack": staPppCcpTxconfigack,
       "staPppCcpTxconfignak": staPppCcpTxconfignak,
       "staPppCcpTxconfigreje": staPppCcpTxconfigreje,
       "staPppCcpTxterminater": staPppCcpTxterminater,
       "staPppCcpTxterminatea": staPppCcpTxterminatea,
       "staPppCcpTxcodereject": staPppCcpTxcodereject,
       "staPppCcpTxresetreque": staPppCcpTxresetreque,
       "staPppCcpTxresetack": staPppCcpTxresetack,
       "staPppCcpDeletevalues": staPppCcpDeletevalues,
       "staPppCcpCompressione": staPppCcpCompressione,
       "staPppMl": staPppMl,
       "staPppMlBundlec": staPppMlBundlec,
       "staPppMlRxseqlo": staPppMlRxseqlo,
       "staPppMlRxseqre": staPppMlRxseqre,
       "staPppMlRxmrrue": staPppMlRxmrrue,
       "staPppMlRxheade": staPppMlRxheade,
       "staPppMlRxdisca": staPppMlRxdisca,
       "staPppMlRxfrags": staPppMlRxfrags,
       "staPppMlRxfragm": staPppMlRxfragm,
       "staPppMlRxfrage": staPppMlRxfrage,
       "staPppMlRxnotfr": staPppMlRxnotfr,
       "staPppMlDeletev": staPppMlDeletev,
       "staPppBac": staPppBac,
       "staPppBacRxerrors": staPppBacRxerrors,
       "staPppBacRxdiscarded": staPppBacRxdiscarded,
       "staPppBacRxcallrequest": staPppBacRxcallrequest,
       "staPppBacRxcallrespons": staPppBacRxcallrespons,
       "staPppBacRxcallbackreq": staPppBacRxcallbackreq,
       "staPppBacRxcallbackres": staPppBacRxcallbackres,
       "staPppBacRxlinkdropreq": staPppBacRxlinkdropreq,
       "staPppBacRxlinkdropres": staPppBacRxlinkdropres,
       "staPppBacRxstatusindic": staPppBacRxstatusindic,
       "staPppBacRxstatusrespo": staPppBacRxstatusrespo,
       "staPppBacTxcallrequest": staPppBacTxcallrequest,
       "staPppBacTxcallrespons": staPppBacTxcallrespons,
       "staPppBacTxcallbackreq": staPppBacTxcallbackreq,
       "staPppBacTxcallbackres": staPppBacTxcallbackres,
       "staPppBacTxlinkdropreq": staPppBacTxlinkdropreq,
       "staPppBacTxlinkdropres": staPppBacTxlinkdropres,
       "staPppBacTxstatusindic": staPppBacTxstatusindic,
       "staPppBacTxstatusrespo": staPppBacTxstatusrespo,
       "staPppBacDeletevalues": staPppBacDeletevalues,
       "staPppDel": staPppDel,
       "staTcpi": staTcpi,
       "staTcpiArp": staTcpiArp,
       "staTcpiArpLanr": staTcpiArpLanr,
       "staTcpiArpLant": staTcpiArpLant,
       "staTcpiArpLane": staTcpiArpLane,
       "staTcpiArpWanr": staTcpiArpWanr,
       "staTcpiArpWant": staTcpiArpWant,
       "staTcpiArpWane": staTcpiArpWane,
       "staTcpiArpTablTable": staTcpiArpTablTable,
       "staTcpiArpTablEntry": staTcpiArpTablEntry,
       "staTcpiArpTablIpa": staTcpiArpTablIpa,
       "staTcpiArpTablMac": staTcpiArpTablMac,
       "staTcpiArpTablLas": staTcpiArpTablLas,
       "staTcpiArpTablCon": staTcpiArpTablCon,
       "staTcpiArpTablEth": staTcpiArpTablEth,
       "staTcpiArpTablPee": staTcpiArpTablPee,
       "staTcpiArpTablVla": staTcpiArpTablVla,
       "staTcpiArpDele": staTcpiArpDele,
       "staTcpiIp": staTcpiIp,
       "staTcpiIpLanrx": staTcpiIpLanrx,
       "staTcpiIpLantx": staTcpiIpLantx,
       "staTcpiIpLanchecksumerrors": staTcpiIpLanchecksumerrors,
       "staTcpiIpLanserviceerrors": staTcpiIpLanserviceerrors,
       "staTcpiIpWanrx": staTcpiIpWanrx,
       "staTcpiIpWantx": staTcpiIpWantx,
       "staTcpiIpWanchecksumerrors": staTcpiIpWanchecksumerrors,
       "staTcpiIpWanserviceerrors": staTcpiIpWanserviceerrors,
       "staTcpiIpWanrxdisconnect": staTcpiIpWanrxdisconnect,
       "staTcpiIpLanfragmentationer": staTcpiIpLanfragmentationer,
       "staTcpiIpWanfragmentationer": staTcpiIpWanfragmentationer,
       "staTcpiIpDeletevalues": staTcpiIpDeletevalues,
       "staTcpiIpLanfragmentations": staTcpiIpLanfragmentations,
       "staTcpiIpLanfragmentationsf": staTcpiIpLanfragmentationsf,
       "staTcpiIpWanfragmentations": staTcpiIpWanfragmentations,
       "staTcpiIpWanfragmentationsf": staTcpiIpWanfragmentationsf,
       "staTcpiIpLooperror": staTcpiIpLooperror,
       "staTcpiIcmp": staTcpiIcmp,
       "staTcpiIcmpLanr": staTcpiIcmpLanr,
       "staTcpiIcmpLant": staTcpiIcmpLant,
       "staTcpiIcmpLanc": staTcpiIcmpLanc,
       "staTcpiIcmpLans": staTcpiIcmpLans,
       "staTcpiIcmpWanr": staTcpiIcmpWanr,
       "staTcpiIcmpWant": staTcpiIcmpWant,
       "staTcpiIcmpWanc": staTcpiIcmpWanc,
       "staTcpiIcmpWans": staTcpiIcmpWans,
       "staTcpiIcmpDele": staTcpiIcmpDele,
       "staTcpiTftp": staTcpiTftp,
       "staTcpiTftpLanrx": staTcpiTftpLanrx,
       "staTcpiTftpLanrxr": staTcpiTftpLanrxr,
       "staTcpiTftpLanrxw": staTcpiTftpLanrxw,
       "staTcpiTftpLanrxd": staTcpiTftpLanrxd,
       "staTcpiTftpLanrxa": staTcpiTftpLanrxa,
       "staTcpiTftpLanrxo": staTcpiTftpLanrxo,
       "staTcpiTftpLanrxe": staTcpiTftpLanrxe,
       "staTcpiTftpLanrxb": staTcpiTftpLanrxb,
       "staTcpiTftpLantx": staTcpiTftpLantx,
       "staTcpiTftpLantxd": staTcpiTftpLantxd,
       "staTcpiTftpLantxa": staTcpiTftpLantxa,
       "staTcpiTftpLantxo": staTcpiTftpLantxo,
       "staTcpiTftpLantxe": staTcpiTftpLantxe,
       "staTcpiTftpLantxr": staTcpiTftpLantxr,
       "staTcpiTftpLancon": staTcpiTftpLancon,
       "staTcpiTftpWanrx": staTcpiTftpWanrx,
       "staTcpiTftpWanrxr": staTcpiTftpWanrxr,
       "staTcpiTftpWanrxw": staTcpiTftpWanrxw,
       "staTcpiTftpWanrxd": staTcpiTftpWanrxd,
       "staTcpiTftpWanrxa": staTcpiTftpWanrxa,
       "staTcpiTftpWanrxo": staTcpiTftpWanrxo,
       "staTcpiTftpWanrxe": staTcpiTftpWanrxe,
       "staTcpiTftpWanrxb": staTcpiTftpWanrxb,
       "staTcpiTftpWantx": staTcpiTftpWantx,
       "staTcpiTftpWantxd": staTcpiTftpWantxd,
       "staTcpiTftpWantxa": staTcpiTftpWantxa,
       "staTcpiTftpWantxo": staTcpiTftpWantxo,
       "staTcpiTftpWantxe": staTcpiTftpWantxe,
       "staTcpiTftpWantxr": staTcpiTftpWantxr,
       "staTcpiTftpWancon": staTcpiTftpWancon,
       "staTcpiTftpDelete": staTcpiTftpDelete,
       "staTcpiTcp": staTcpiTcp,
       "staTcpiTcpLanrx": staTcpiTcpLanrx,
       "staTcpiTcpLantx": staTcpiTcpLantx,
       "staTcpiTcpLantxr": staTcpiTcpLantxr,
       "staTcpiTcpLanche": staTcpiTcpLanche,
       "staTcpiTcpLanser": staTcpiTcpLanser,
       "staTcpiTcpLancon": staTcpiTcpLancon,
       "staTcpiTcpWanrx": staTcpiTcpWanrx,
       "staTcpiTcpWantx": staTcpiTcpWantx,
       "staTcpiTcpWantxr": staTcpiTcpWantxr,
       "staTcpiTcpWanche": staTcpiTcpWanche,
       "staTcpiTcpWanser": staTcpiTcpWanser,
       "staTcpiTcpWancon": staTcpiTcpWancon,
       "staTcpiTcpDelete": staTcpiTcpDelete,
       "staTcpiDhcp": staTcpiDhcp,
       "staTcpiDhcpLanrx": staTcpiDhcpLanrx,
       "staTcpiDhcpLantx": staTcpiDhcpLantx,
       "staTcpiDhcpWanrx": staTcpiDhcpWanrx,
       "staTcpiDhcpDisca": staTcpiDhcpDisca,
       "staTcpiDhcpRxdis": staTcpiDhcpRxdis,
       "staTcpiDhcpRxreq": staTcpiDhcpRxreq,
       "staTcpiDhcpRxdec": staTcpiDhcpRxdec,
       "staTcpiDhcpRxinf": staTcpiDhcpRxinf,
       "staTcpiDhcpRxrel": staTcpiDhcpRxrel,
       "staTcpiDhcpTxoff": staTcpiDhcpTxoff,
       "staTcpiDhcpTxack": staTcpiDhcpTxack,
       "staTcpiDhcpTxnak": staTcpiDhcpTxnak,
       "staTcpiDhcpServe": staTcpiDhcpServe,
       "staTcpiDhcpAssig": staTcpiDhcpAssig,
       "staTcpiDhcpMacco": staTcpiDhcpMacco,
       "staTcpiDhcpDhcptTable": staTcpiDhcpDhcptTable,
       "staTcpiDhcpDhcptEntry": staTcpiDhcpDhcptEntry,
       "staTcpiDhcpDhcptIpa": staTcpiDhcpDhcptIpa,
       "staTcpiDhcpDhcptMac": staTcpiDhcpDhcptMac,
       "staTcpiDhcpDhcptTim": staTcpiDhcpDhcptTim,
       "staTcpiDhcpDhcptHos": staTcpiDhcpDhcptHos,
       "staTcpiDhcpDhcptTyp": staTcpiDhcpDhcptTyp,
       "staTcpiDhcpDhcptLan": staTcpiDhcpDhcptLan,
       "staTcpiDhcpDhcptEth": staTcpiDhcpDhcptEth,
       "staTcpiDhcpDhcptVla": staTcpiDhcpDhcptVla,
       "staTcpiDhcpDhcptNet": staTcpiDhcpDhcptNet,
       "staTcpiDhcpDelet": staTcpiDhcpDelet,
       "staTcpiDhcpWantx": staTcpiDhcpWantx,
       "staTcpiDhcpNetwoTable": staTcpiDhcpNetwoTable,
       "staTcpiDhcpNetwoEntry": staTcpiDhcpNetwoEntry,
       "staTcpiDhcpNetwoNetworknam": staTcpiDhcpNetwoNetworknam,
       "staTcpiDhcpNetwoStartaddre": staTcpiDhcpNetwoStartaddre,
       "staTcpiDhcpNetwoEndaddress": staTcpiDhcpNetwoEndaddress,
       "staTcpiDhcpNetwoNetmask": staTcpiDhcpNetwoNetmask,
       "staTcpiDhcpNetwoBroadcasta": staTcpiDhcpNetwoBroadcasta,
       "staTcpiDhcpNetwoGatewayadd": staTcpiDhcpNetwoGatewayadd,
       "staTcpiDhcpNetwoDnsdefault": staTcpiDhcpNetwoDnsdefault,
       "staTcpiDhcpNetwoDnsbackup": staTcpiDhcpNetwoDnsbackup,
       "staTcpiDhcpNetwoNbnsdefaul": staTcpiDhcpNetwoNbnsdefaul,
       "staTcpiDhcpNetwoNbnsbackup": staTcpiDhcpNetwoNbnsbackup,
       "staTcpiDhcpNetwoServerflag": staTcpiDhcpNetwoServerflag,
       "staTcpiDhcpNetwoBroadcastb": staTcpiDhcpNetwoBroadcastb,
       "staTcpiDhcpNetwoServerid": staTcpiDhcpNetwoServerid,
       "staTcpiDhcpNetwoLanifc": staTcpiDhcpNetwoLanifc,
       "staTcpiDhcpNetwoVlanid": staTcpiDhcpNetwoVlanid,
       "staTcpiDhcpNetwoMasterserv": staTcpiDhcpNetwoMasterserv,
       "staTcpiDhcpNetwoCache": staTcpiDhcpNetwoCache,
       "staTcpiDhcpNetwoAdaption": staTcpiDhcpNetwoAdaption,
       "staTcpiDele": staTcpiDele,
       "staTcpiNetb": staTcpiNetb,
       "staTcpiNetbLanrx": staTcpiNetbLanrx,
       "staTcpiNetbLantx": staTcpiNetbLantx,
       "staTcpiNetbWanrx": staTcpiNetbWanrx,
       "staTcpiNetbWantx": staTcpiNetbWantx,
       "staTcpiNetbRegist": staTcpiNetbRegist,
       "staTcpiNetbConfli": staTcpiNetbConfli,
       "staTcpiNetbReleas": staTcpiNetbReleas,
       "staTcpiNetbRefres": staTcpiNetbRefres,
       "staTcpiNetbTimeou": staTcpiNetbTimeou,
       "staTcpiNetbHosts": staTcpiNetbHosts,
       "staTcpiNetbGroups": staTcpiNetbGroups,
       "staTcpiNetbBnodes": staTcpiNetbBnodes,
       "staTcpiNetbPnodes": staTcpiNetbPnodes,
       "staTcpiNetbMnodes": staTcpiNetbMnodes,
       "staTcpiNetbWnodes": staTcpiNetbWnodes,
       "staTcpiNetbPeersTable": staTcpiNetbPeersTable,
       "staTcpiNetbPeersEntry": staTcpiNetbPeersEntry,
       "staTcpiNetbPeersNam": staTcpiNetbPeersNam,
       "staTcpiNetbPeersTyp": staTcpiNetbPeersTyp,
       "staTcpiNetbPeersBac": staTcpiNetbPeersBac,
       "staTcpiNetbPeersTim": staTcpiNetbPeersTim,
       "staTcpiNetbDelete": staTcpiNetbDelete,
       "staTcpiNetbNetworTable": staTcpiNetbNetworTable,
       "staTcpiNetbNetworEntry": staTcpiNetbNetworEntry,
       "staTcpiNetbNetworNet": staTcpiNetbNetworNet,
       "staTcpiNetbNetworNtd": staTcpiNetbNetworNtd,
       "staTcpiNetbNetworRtg": staTcpiNetbNetworRtg,
       "staTcpiNetbNetworInt": staTcpiNetbNetworInt,
       "staTcpiNetbNetworVla": staTcpiNetbNetworVla,
       "staTcpiNetbGrouplTable": staTcpiNetbGrouplTable,
       "staTcpiNetbGrouplEntry": staTcpiNetbGrouplEntry,
       "staTcpiNetbGrouplGro": staTcpiNetbGrouplGro,
       "staTcpiNetbGrouplTyp": staTcpiNetbGrouplTyp,
       "staTcpiNetbGrouplIpa": staTcpiNetbGrouplIpa,
       "staTcpiNetbGrouplPee": staTcpiNetbGrouplPee,
       "staTcpiNetbGrouplTim": staTcpiNetbGrouplTim,
       "staTcpiNetbGrouplFla": staTcpiNetbGrouplFla,
       "staTcpiNetbGrouplNet": staTcpiNetbGrouplNet,
       "staTcpiNetbGrouplRtg": staTcpiNetbGrouplRtg,
       "staTcpiNetbHostliTable": staTcpiNetbHostliTable,
       "staTcpiNetbHostliEntry": staTcpiNetbHostliEntry,
       "staTcpiNetbHostliNam": staTcpiNetbHostliNam,
       "staTcpiNetbHostliTyp": staTcpiNetbHostliTyp,
       "staTcpiNetbHostliIpa": staTcpiNetbHostliIpa,
       "staTcpiNetbHostliPee": staTcpiNetbHostliPee,
       "staTcpiNetbHostliTim": staTcpiNetbHostliTim,
       "staTcpiNetbHostliFla": staTcpiNetbHostliFla,
       "staTcpiNetbHostliNet": staTcpiNetbHostliNet,
       "staTcpiNetbHostliRtg": staTcpiNetbHostliRtg,
       "staTcpiNetbServerTable": staTcpiNetbServerTable,
       "staTcpiNetbServerEntry": staTcpiNetbServerEntry,
       "staTcpiNetbServerHos": staTcpiNetbServerHos,
       "staTcpiNetbServerGro": staTcpiNetbServerGro,
       "staTcpiNetbServerIpa": staTcpiNetbServerIpa,
       "staTcpiNetbServerOsv": staTcpiNetbServerOsv,
       "staTcpiNetbServerSmb": staTcpiNetbServerSmb,
       "staTcpiNetbServerSer": staTcpiNetbServerSer,
       "staTcpiNetbServerPee": staTcpiNetbServerPee,
       "staTcpiNetbServerTim": staTcpiNetbServerTim,
       "staTcpiNetbServerFla": staTcpiNetbServerFla,
       "staTcpiNetbServerNet": staTcpiNetbServerNet,
       "staTcpiNetbServerRtg": staTcpiNetbServerRtg,
       "staTcpiNetbBrowseTable": staTcpiNetbBrowseTable,
       "staTcpiNetbBrowseEntry": staTcpiNetbBrowseEntry,
       "staTcpiNetbBrowseBro": staTcpiNetbBrowseBro,
       "staTcpiNetbBrowseGro": staTcpiNetbBrowseGro,
       "staTcpiNetbBrowseIpa": staTcpiNetbBrowseIpa,
       "staTcpiNetbBrowseOsv": staTcpiNetbBrowseOsv,
       "staTcpiNetbBrowseSer": staTcpiNetbBrowseSer,
       "staTcpiNetbBrowsePee": staTcpiNetbBrowsePee,
       "staTcpiNetbBrowseTim": staTcpiNetbBrowseTim,
       "staTcpiNetbBrowseFla": staTcpiNetbBrowseFla,
       "staTcpiNetbBrowseNet": staTcpiNetbBrowseNet,
       "staTcpiNetbBrowseRtg": staTcpiNetbBrowseRtg,
       "staTcpiDns": staTcpiDns,
       "staTcpiDnsLanr": staTcpiDnsLanr,
       "staTcpiDnsLant": staTcpiDnsLant,
       "staTcpiDnsWanr": staTcpiDnsWanr,
       "staTcpiDnsWant": staTcpiDnsWant,
       "staTcpiDnsForw": staTcpiDnsForw,
       "staTcpiDnsErro": staTcpiDnsErro,
       "staTcpiDnsDnsa": staTcpiDnsDnsa,
       "staTcpiDnsDhcp": staTcpiDnsDhcp,
       "staTcpiDnsNetb": staTcpiDnsNetb,
       "staTcpiDnsFilt": staTcpiDnsFilt,
       "staTcpiDnsHitlTable": staTcpiDnsHitlTable,
       "staTcpiDnsHitlEntry": staTcpiDnsHitlEntry,
       "staTcpiDnsHitlDom": staTcpiDnsHitlDom,
       "staTcpiDnsHitlReq": staTcpiDnsHitlReq,
       "staTcpiDnsHitlTim": staTcpiDnsHitlTim,
       "staTcpiDnsHitlIpa": staTcpiDnsHitlIpa,
       "staTcpiDnsDele": staTcpiDnsDele,
       "staTcpiHttp": staTcpiHttp,
       "staTcpiHttpHttpac": staTcpiHttpHttpac,
       "staTcpiHttpHttpno": staTcpiHttpHttpno,
       "staTcpiHttpHttpau": staTcpiHttpHttpau,
       "staTcpiHttpHttppr": staTcpiHttpHttppr,
       "staTcpiHttpDelete": staTcpiHttpDelete,
       "staTcpiHttpHttpsa": staTcpiHttpHttpsa,
       "staTcpiHttpAgentlTable": staTcpiHttpAgentlTable,
       "staTcpiHttpAgentlEntry": staTcpiHttpAgentlEntry,
       "staTcpiHttpAgentlAge": staTcpiHttpAgentlAge,
       "staTcpiHttpAgentlAcc": staTcpiHttpAgentlAcc,
       "staTcpiHttpActiveTable": staTcpiHttpActiveTable,
       "staTcpiHttpActiveEntry": staTcpiHttpActiveEntry,
       "staTcpiHttpActiveIndex": staTcpiHttpActiveIndex,
       "staTcpiHttpActiveRemotea": staTcpiHttpActiveRemotea,
       "staTcpiHttpActiveRemotep": staTcpiHttpActiveRemotep,
       "staTcpiHttpActiveLocalho": staTcpiHttpActiveLocalho,
       "staTcpiHttpActiveLocalpo": staTcpiHttpActiveLocalpo,
       "staTcpiHttpActiveIdletim": staTcpiHttpActiveIdletim,
       "staTcpiHttpActiveLocalrt": staTcpiHttpActiveLocalrt,
       "staTcpiHttpActiveNumconn": staTcpiHttpActiveNumconn,
       "staTcpiSysl": staTcpiSysl,
       "staTcpiSyslLasTable": staTcpiSyslLasTable,
       "staTcpiSyslLasEntry": staTcpiSyslLasEntry,
       "staTcpiSyslLasIdx": staTcpiSyslLasIdx,
       "staTcpiSyslLasTim": staTcpiSyslLasTim,
       "staTcpiSyslLasSou": staTcpiSyslLasSou,
       "staTcpiSyslLasLev": staTcpiSyslLasLev,
       "staTcpiSyslLasMes": staTcpiSyslLasMes,
       "staTcpiSyslDel": staTcpiSyslDel,
       "staTcpiRadi": staTcpiRadi,
       "staTcpiRadiInvalidau": staTcpiRadiInvalidau,
       "staTcpiRadiAuthenticTable": staTcpiRadiAuthenticTable,
       "staTcpiRadiAuthenticEntry": staTcpiRadiAuthenticEntry,
       "staTcpiRadiAuthenticIpaddress": staTcpiRadiAuthenticIpaddress,
       "staTcpiRadiAuthenticPort": staTcpiRadiAuthenticPort,
       "staTcpiRadiAuthenticLastreque": staTcpiRadiAuthenticLastreque,
       "staTcpiRadiAuthenticRoundtrip": staTcpiRadiAuthenticRoundtrip,
       "staTcpiRadiAuthenticAccessreq": staTcpiRadiAuthenticAccessreq,
       "staTcpiRadiAuthenticAccessret": staTcpiRadiAuthenticAccessret,
       "staTcpiRadiAuthenticAccessacc": staTcpiRadiAuthenticAccessacc,
       "staTcpiRadiAuthenticAccessrej": staTcpiRadiAuthenticAccessrej,
       "staTcpiRadiAuthenticAccesscha": staTcpiRadiAuthenticAccesscha,
       "staTcpiRadiAuthenticMalformed": staTcpiRadiAuthenticMalformed,
       "staTcpiRadiAuthenticBadauthen": staTcpiRadiAuthenticBadauthen,
       "staTcpiRadiAuthenticPendingre": staTcpiRadiAuthenticPendingre,
       "staTcpiRadiAuthenticTimeouts": staTcpiRadiAuthenticTimeouts,
       "staTcpiRadiAuthenticUnknownty": staTcpiRadiAuthenticUnknownty,
       "staTcpiRadiAuthenticDropped": staTcpiRadiAuthenticDropped,
       "staTcpiRadiInvalidac": staTcpiRadiInvalidac,
       "staTcpiRadiAccountinTable": staTcpiRadiAccountinTable,
       "staTcpiRadiAccountinEntry": staTcpiRadiAccountinEntry,
       "staTcpiRadiAccountinIpaddress": staTcpiRadiAccountinIpaddress,
       "staTcpiRadiAccountinPort": staTcpiRadiAccountinPort,
       "staTcpiRadiAccountinLastrequest": staTcpiRadiAccountinLastrequest,
       "staTcpiRadiAccountinRoundtriptime": staTcpiRadiAccountinRoundtriptime,
       "staTcpiRadiAccountinAccountingreq": staTcpiRadiAccountinAccountingreq,
       "staTcpiRadiAccountinAccountingret": staTcpiRadiAccountinAccountingret,
       "staTcpiRadiAccountinAccountingres": staTcpiRadiAccountinAccountingres,
       "staTcpiRadiAccountinMalformedacco": staTcpiRadiAccountinMalformedacco,
       "staTcpiRadiAccountinBadauthentica": staTcpiRadiAccountinBadauthentica,
       "staTcpiRadiAccountinPendingreques": staTcpiRadiAccountinPendingreques,
       "staTcpiRadiAccountinTimeouts": staTcpiRadiAccountinTimeouts,
       "staTcpiRadiAccountinUnknowntypes": staTcpiRadiAccountinUnknowntypes,
       "staTcpiRadiAccountinDropped": staTcpiRadiAccountinDropped,
       "staTcpiNetwTable": staTcpiNetwTable,
       "staTcpiNetwEntry": staTcpiNetwEntry,
       "staTcpiNetwNet": staTcpiNetwNet,
       "staTcpiNetwIpa": staTcpiNetwIpa,
       "staTcpiNetwIpn": staTcpiNetwIpn,
       "staTcpiNetwVla": staTcpiNetwVla,
       "staTcpiNetwInt": staTcpiNetwInt,
       "staTcpiNetwSrc": staTcpiNetwSrc,
       "staTcpiNetwTyp": staTcpiNetwTyp,
       "staTcpiNetwRtg": staTcpiNetwRtg,
       "staIpro": staIpro,
       "staIproLanrx": staIproLanrx,
       "staIproLantx": staIproLantx,
       "staIproLanloca": staIproLanloca,
       "staIproLannetw": staIproLannetw,
       "staIproLanrout": staIproLanrout,
       "staIproLanttle": staIproLanttle,
       "staIproLanfilt": staIproLanfilt,
       "staIproLandisc": staIproLandisc,
       "staIproWanrx": staIproWanrx,
       "staIproWantx": staIproWantx,
       "staIproWannetw": staIproWannetw,
       "staIproWanttle": staIproWanttle,
       "staIproWanfilt": staIproWanfilt,
       "staIproWandisc": staIproWandisc,
       "staIproWantype": staIproWantype,
       "staIproArperro": staIproArperro,
       "staIproEstabliTable": staIproEstabliTable,
       "staIproEstabliEntry": staIproEstabliEntry,
       "staIproEstabliTim": staIproEstabliTim,
       "staIproEstabliDes": staIproEstabliDes,
       "staIproEstabliSrc": staIproEstabliSrc,
       "staIproEstabliPro": staIproEstabliPro,
       "staIproEstabliDpo": staIproEstabliDpo,
       "staIproEstabliSou": staIproEstabliSou,
       "staIproEstabliCou": staIproEstabliCou,
       "staIproProtocoTable": staIproProtocoTable,
       "staIproProtocoEntry": staIproProtocoEntry,
       "staIproProtocoPro": staIproProtocoPro,
       "staIproProtocoLan": staIproProtocoLan,
       "staIproProtocoWan": staIproProtocoWan,
       "staIproRip": staIproRip,
       "staIproRipRx": staIproRipRx,
       "staIproRipRequ": staIproRipRequ,
       "staIproRipResp": staIproRipResp,
       "staIproRipDisc": staIproRipDisc,
       "staIproRipErro": staIproRipErro,
       "staIproRipEntr": staIproRipEntr,
       "staIproRipTx": staIproRipTx,
       "staIproRipIpriTable": staIproRipIpriTable,
       "staIproRipIpriEntry": staIproRipIpriEntry,
       "staIproRipIpriIpa": staIproRipIpriIpa,
       "staIproRipIpriIpn": staIproRipIpriIpn,
       "staIproRipIpriTim": staIproRipIpriTim,
       "staIproRipIpriDis": staIproRipIpriDis,
       "staIproRipIpriGat": staIproRipIpriGat,
       "staIproRipIpriRtg": staIproRipIpriRtg,
       "staIproRipIpriPee": staIproRipIpriPee,
       "staIproRipIpriPor": staIproRipIpriPor,
       "staIproRipIpriVla": staIproRipIpriVla,
       "staIproRipIpriNet": staIproRipIpriNet,
       "staIproRipDele": staIproRipDele,
       "staIproRipLansTable": staIproRipLansTable,
       "staIproRipLansEntry": staIproRipLansEntry,
       "staIproRipLansNetw": staIproRipLansNetw,
       "staIproRipLansRipt": staIproRipLansRipt,
       "staIproRipLansRipa": staIproRipLansRipa,
       "staIproRipLansProp": staIproRipLansProp,
       "staIproRipLansDftr": staIproRipLansDftr,
       "staIproRipLansRtgt": staIproRipLansRtgt,
       "staIproRipLansPort": staIproRipLansPort,
       "staIproRipLansVlan": staIproRipLansVlan,
       "staIproRipLansPois": staIproRipLansPois,
       "staIproRipLansRxfi": staIproRipLansRxfi,
       "staIproRipLansTxfi": staIproRipLansTxfi,
       "staIproRipLansRips": staIproRipLansRips,
       "staIproRipWansTable": staIproRipWansTable,
       "staIproRipWansEntry": staIproRipWansEntry,
       "staIproRipWansPeer": staIproRipWansPeer,
       "staIproRipWansRipt": staIproRipWansRipt,
       "staIproRipWansRipa": staIproRipWansRipa,
       "staIproRipWansMasq": staIproRipWansMasq,
       "staIproRipWansDftr": staIproRipWansDftr,
       "staIproRipWansRtgt": staIproRipWansRtgt,
       "staIproRipWansPois": staIproRipWansPois,
       "staIproRipWansRfc2": staIproRipWansRfc2,
       "staIproRipWansGate": staIproRipWansGate,
       "staIproRipWansRxfi": staIproRipWansRxfi,
       "staIproRipWansTxfi": staIproRipWansTxfi,
       "staIproRipWansRips": staIproRipWansRips,
       "staIproRipVrrpTable": staIproRipVrrpTable,
       "staIproRipVrrpEntry": staIproRipVrrpEntry,
       "staIproRipVrrpNet": staIproRipVrrpNet,
       "staIproRipVrrpRip": staIproRipVrrpRip,
       "staIproRipVrrpRou": staIproRipVrrpRou,
       "staIproRipDynlTable": staIproRipDynlTable,
       "staIproRipDynlEntry": staIproRipDynlEntry,
       "staIproRipDynlGate": staIproRipDynlGate,
       "staIproRipDynlRipt": staIproRipDynlRipt,
       "staIproRipDynlRipa": staIproRipDynlRipa,
       "staIproRipDynlPois": staIproRipDynlPois,
       "staIproRipDynlDftr": staIproRipDynlDftr,
       "staIproRipDynlRtgt": staIproRipDynlRtgt,
       "staIproRipDynlPort": staIproRipDynlPort,
       "staIproRipDynlVlan": staIproRipDynlVlan,
       "staIproRipDynlRxfi": staIproRipDynlRxfi,
       "staIproRipDynlTxfi": staIproRipDynlTxfi,
       "staIproRipDynlRips": staIproRipDynlRips,
       "staIproRipDynwTable": staIproRipDynwTable,
       "staIproRipDynwEntry": staIproRipDynwEntry,
       "staIproRipDynwPeer": staIproRipDynwPeer,
       "staIproRipDynwRipt": staIproRipDynwRipt,
       "staIproRipDynwRipa": staIproRipDynwRipa,
       "staIproRipDynwMasq": staIproRipDynwMasq,
       "staIproRipDynwDftr": staIproRipDynwDftr,
       "staIproRipDynwRtgt": staIproRipDynwRtgt,
       "staIproRipDynwPois": staIproRipDynwPois,
       "staIproRipDynwRfc2": staIproRipDynwRfc2,
       "staIproRipDynwGate": staIproRipDynwGate,
       "staIproRipDynwRxfi": staIproRipDynwRxfi,
       "staIproRipDynwTxfi": staIproRipDynwTxfi,
       "staIproRipDynwRips": staIproRipDynwRips,
       "staIproRipFiltTable": staIproRipFiltTable,
       "staIproRipFiltEntry": staIproRipFiltEntry,
       "staIproRipFiltIdx": staIproRipFiltIdx,
       "staIproRipFiltTyp": staIproRipFiltTyp,
       "staIproRipFiltNam": staIproRipFiltNam,
       "staIproRipFiltIpa": staIproRipFiltIpa,
       "staIproRipFiltIpn": staIproRipFiltIpn,
       "staIproRipWildTable": staIproRipWildTable,
       "staIproRipWildEntry": staIproRipWildEntry,
       "staIproRipWildPeer": staIproRipWildPeer,
       "staIproRipWildRipt": staIproRipWildRipt,
       "staIproRipWildRipa": staIproRipWildRipa,
       "staIproRipWildMasq": staIproRipWildMasq,
       "staIproRipWildDftr": staIproRipWildDftr,
       "staIproRipWildRtgt": staIproRipWildRtgt,
       "staIproRipWildPois": staIproRipWildPois,
       "staIproRipWildRfc2": staIproRipWildRfc2,
       "staIproRipWildGate": staIproRipWildGate,
       "staIproRipWildRxfi": staIproRipWildRxfi,
       "staIproRipWildTxfi": staIproRipWildTxfi,
       "staIproRipWildRips": staIproRipWildRips,
       "staIproDeletev": staIproDeletev,
       "staIproServiceTable": staIproServiceTable,
       "staIproServiceEntry": staIproServiceEntry,
       "staIproServiceService": staIproServiceService,
       "staIproServicePacketrx": staIproServicePacketrx,
       "staIproServicePackettx": staIproServicePackettx,
       "staIproServicePacketre": staIproServicePacketre,
       "staIproServiceKbytesrx": staIproServiceKbytesrx,
       "staIproServiceKbytestx": staIproServiceKbytestx,
       "staIproServiceKbytesre": staIproServiceKbytesre,
       "staIproFilterlTable": staIproFilterlTable,
       "staIproFilterlEntry": staIproFilterlEntry,
       "staIproFilterlIdx": staIproFilterlIdx,
       "staIproFilterlProt": staIproFilterlProt,
       "staIproFilterlSrca": staIproFilterlSrca,
       "staIproFilterlSrcn": staIproFilterlSrcn,
       "staIproFilterlSst": staIproFilterlSst,
       "staIproFilterlSend": staIproFilterlSend,
       "staIproFilterlDsta": staIproFilterlDsta,
       "staIproFilterlDstn": staIproFilterlDstn,
       "staIproFilterlDst": staIproFilterlDst,
       "staIproFilterlDend": staIproFilterlDend,
       "staIproFilterlActi": staIproFilterlActi,
       "staIproFilterlSrcm": staIproFilterlSrcm,
       "staIproFilterlDstm": staIproFilterlDstm,
       "staIproFilterlLink": staIproFilterlLink,
       "staIproFilterlPrio": staIproFilterlPrio,
       "staIproFilterlRtgt": staIproFilterlRtgt,
       "staIproConnectTable": staIproConnectTable,
       "staIproConnectEntry": staIproConnectEntry,
       "staIproConnectSrca": staIproConnectSrca,
       "staIproConnectDsta": staIproConnectDsta,
       "staIproConnectProt": staIproConnectProt,
       "staIproConnectSrcp": staIproConnectSrcp,
       "staIproConnectDstp": staIproConnectDstp,
       "staIproConnectTime": staIproConnectTime,
       "staIproConnectFlag": staIproConnectFlag,
       "staIproConnectFilt": staIproConnectFilt,
       "staIproConnectSrcr": staIproConnectSrcr,
       "staIproConnectDest": staIproConnectDest,
       "staIproConnectRtgt": staIproConnectRtgt,
       "staIproHostbloTable": staIproHostbloTable,
       "staIproHostbloEntry": staIproHostbloEntry,
       "staIproHostbloSrc": staIproHostbloSrc,
       "staIproHostbloTim": staIproHostbloTim,
       "staIproHostbloFil": staIproHostbloFil,
       "staIproPortbloTable": staIproPortbloTable,
       "staIproPortbloEntry": staIproPortbloEntry,
       "staIproPortbloDsta": staIproPortbloDsta,
       "staIproPortbloProt": staIproPortbloProt,
       "staIproPortbloDstp": staIproPortbloDstp,
       "staIproPortbloTime": staIproPortbloTime,
       "staIproPortbloFilt": staIproPortbloFilt,
       "staIproLogtablTable": staIproLogtablTable,
       "staIproLogtablEntry": staIproLogtablEntry,
       "staIproLogtablIdx": staIproLogtablIdx,
       "staIproLogtablSyst": staIproLogtablSyst,
       "staIproLogtablSrca": staIproLogtablSrca,
       "staIproLogtablDsta": staIproLogtablDsta,
       "staIproLogtablProt": staIproLogtablProt,
       "staIproLogtablSrcp": staIproLogtablSrcp,
       "staIproLogtablDstp": staIproLogtablDstp,
       "staIproLogtablFilt": staIproLogtablFilt,
       "staIproLogtablLimi": staIproLogtablLimi,
       "staIproLogtablThre": staIproLogtablThre,
       "staIproLogtablActi": staIproLogtablActi,
       "staIproHoconnlTable": staIproHoconnlTable,
       "staIproHoconnlEntry": staIproHoconnlEntry,
       "staIproHoconnlDst": staIproHoconnlDst,
       "staIproHoconnlNum": staIproHoconnlNum,
       "staIproHoconnlTim": staIproHoconnlTim,
       "staIproQosTable": staIproQosTable,
       "staIproQosEntry": staIproQosEntry,
       "staIproQosIfc": staIproQosIfc,
       "staIproQosPeer": staIproQosPeer,
       "staIproQosDowns": staIproQosDowns,
       "staIproQosRxres": staIproQosRxres,
       "staIproQosRxblo": staIproQosRxblo,
       "staIproQosFragm": staIproQosFragm,
       "staIproQosPmtus": staIproQosPmtus,
       "staIproQosUpstr": staIproQosUpstr,
       "staIproQosTxres": staIproQosTxres,
       "staIproQosTxblo": staIproQosTxblo,
       "staIproQosRxreq": staIproQosRxreq,
       "staIproQosTxreq": staIproQosTxreq,
       "staIproQosTxfav": staIproQosTxfav,
       "staIproOpenporTable": staIproOpenporTable,
       "staIproOpenporEntry": staIproOpenporEntry,
       "staIproOpenporSrca": staIproOpenporSrca,
       "staIproOpenporDsta": staIproOpenporDsta,
       "staIproOpenporProt": staIproOpenporProt,
       "staIproOpenporDstp": staIproOpenporDstp,
       "staIproOpenporTime": staIproOpenporTime,
       "staIproOpenporFilt": staIproOpenporFilt,
       "staIproOpenporSrcr": staIproOpenporSrcr,
       "staIproActiproTable": staIproActiproTable,
       "staIproActiproEntry": staIproActiproEntry,
       "staIproActiproIpa": staIproActiproIpa,
       "staIproActiproIpn": staIproActiproIpn,
       "staIproActiproRtg": staIproActiproRtg,
       "staIproActiproGat": staIproActiproGat,
       "staIproActiproPee": staIproActiproPee,
       "staIproActiproDis": staIproActiproDis,
       "staIproActiproMas": staIproActiproMas,
       "staIproActiproTyp": staIproActiproTyp,
       "staIproL4error": staIproL4error,
       "staIproLoadbal": staIproLoadbal,
       "staIproLoadbalOpe": staIproLoadbalOpe,
       "staIproLoadbalConTable": staIproLoadbalConTable,
       "staIproLoadbalConEntry": staIproLoadbalConEntry,
       "staIproLoadbalConPee": staIproLoadbalConPee,
       "staIproLoadbalConBun": staIproLoadbalConBun,
       "staIproLoadbalConSta": staIproLoadbalConSta,
       "staIproLoadbalConTcp": staIproLoadbalConTcp,
       "staIproLoadbalConPpt": staIproLoadbalConPpt,
       "staIproLoadbalConVpn": staIproLoadbalConVpn,
       "staIproVrrp": staIproVrrp,
       "staIproVrrpRx": staIproVrrpRx,
       "staIproVrrpTx": staIproVrrpTx,
       "staIproVrrpErr": staIproVrrpErr,
       "staIproVrrpDro": staIproVrrpDro,
       "staIproVrrpOpe": staIproVrrpOpe,
       "staIproVrrpInt": staIproVrrpInt,
       "staIproVrrpVirTable": staIproVrrpVirTable,
       "staIproVrrpVirEntry": staIproVrrpVirEntry,
       "staIproVrrpVirRou": staIproVrrpVirRou,
       "staIproVrrpVirVir": staIproVrrpVirVir,
       "staIproVrrpVirPri": staIproVrrpVirPri,
       "staIproVrrpVirBpr": staIproVrrpVirBpr,
       "staIproVrrpVirPee": staIproVrrpVirPee,
       "staIproVrrpVirSta": staIproVrrpVirSta,
       "staIproVrrpVirBac": staIproVrrpVirBac,
       "staIproVrrpVirMas": staIproVrrpVirMas,
       "staIproVrrpVirPor": staIproVrrpVirPor,
       "staIproVrrpVirVla": staIproVrrpVirVla,
       "staIproVrrpVirNet": staIproVrrpVirNet,
       "staIproVrrpMacTable": staIproVrrpMacTable,
       "staIproVrrpMacEntry": staIproVrrpMacEntry,
       "staIproVrrpMacVir": staIproVrrpMacVir,
       "staIproVrrpMacMac": staIproVrrpMacMac,
       "staIproVrrpMacRou": staIproVrrpMacRou,
       "staIproVrrpEveTable": staIproVrrpEveTable,
       "staIproVrrpEveEntry": staIproVrrpEveEntry,
       "staIproVrrpEveIdx": staIproVrrpEveIdx,
       "staIproVrrpEveSys": staIproVrrpEveSys,
       "staIproVrrpEveSrc": staIproVrrpEveSrc,
       "staIproVrrpEveVri": staIproVrrpEveVri,
       "staIproVrrpEveEve": staIproVrrpEveEve,
       "staIproVrrpEveInf": staIproVrrpEveInf,
       "staIproVrrpDel": staIproVrrpDel,
       "staIproRules": staIproRules,
       "staIproFilter": staIproFilter,
       "staConf": staConf,
       "staConfLanactiv": staConfLanactiv,
       "staConfLantotal": staConfLantotal,
       "staConfWanactiv": staConfWanactiv,
       "staConfWantotal": staConfWantotal,
       "staConfOutbanda": staConfOutbanda,
       "staConfOutbandt": staConfOutbandt,
       "staConfOutbandb": staConfOutbandb,
       "staConfLoginerr": staConfLoginerr,
       "staConfLoginloc": staConfLoginloc,
       "staConfLoginrej": staConfLoginrej,
       "staConfDeleteva": staConfDeleteva,
       "staConfEventlogTable": staConfEventlogTable,
       "staConfEventlogEntry": staConfEventlogEntry,
       "staConfEventlogIdx": staConfEventlogIdx,
       "staConfEventlogEvent": staConfEventlogEvent,
       "staConfEventlogAcces": staConfEventlogAcces,
       "staConfEventlogIpadd": staConfEventlogIpadd,
       "staConfEventlogInfo1": staConfEventlogInfo1,
       "staConfEventlogInfo2": staConfEventlogInfo2,
       "staConfEventlogSyste": staConfEventlogSyste,
       "staConfStartsca": staConfStartsca,
       "staConfScanresuTable": staConfScanresuTable,
       "staConfScanresuEntry": staConfScanresuEntry,
       "staConfScanresuIpadd": staConfScanresuIpadd,
       "staConfScanresuName": staConfScanresuName,
       "staConfScanresuDevic": staConfScanresuDevic,
       "staConfScanresuVersi": staConfScanresuVersi,
       "staConfScanresuState": staConfScanresuState,
       "staConfScanresuCapip": staConfScanresuCapip,
       "staConfScanresuHttpp": staConfScanresuHttpp,
       "staConfScanresuHttps": staConfScanresuHttps,
       "staConfScanresuRtgta": staConfScanresuRtgta,
       "staConfAntithef": staConfAntithef,
       "staConfAntithefState": staConfAntithefState,
       "staConfAntithefSendi": staConfAntithefSendi,
       "staConfAntithefWaiti": staConfAntithefWaiti,
       "staConfAntithefLasts": staConfAntithefLasts,
       "staConfAntithefCalla": staConfAntithefCalla,
       "staConfAntithefLaste": staConfAntithefLaste,
       "staConfAntithefIncom": staConfAntithefIncom,
       "staConfAntithefMetho": staConfAntithefMetho,
       "staConfFeaturesTable": staConfFeaturesTable,
       "staConfFeaturesEntry": staConfFeaturesEntry,
       "staConfFeaturesFea": staConfFeaturesFea,
       "staConfFeaturesExp": staConfFeaturesExp,
       "staConfLl2m": staConfLl2m,
       "staConfLl2mRxpa": staConfLl2mRxpa,
       "staConfLl2mRxbr": staConfLl2mRxbr,
       "staConfLl2mRxmu": staConfLl2mRxmu,
       "staConfLl2mRxun": staConfLl2mRxun,
       "staConfLl2mRxdi": staConfLl2mRxdi,
       "staConfLl2mRxma": staConfLl2mRxma,
       "staConfLl2mServ": staConfLl2mServ,
       "staConfLl2mServRxp": staConfLl2mServRxp,
       "staConfLl2mServRxb": staConfLl2mServRxb,
       "staConfLl2mServRxm": staConfLl2mServRxm,
       "staConfLl2mServRxu": staConfLl2mServRxu,
       "staConfLl2mServRxd": staConfLl2mServRxd,
       "staConfLl2mServDel": staConfLl2mServDel,
       "staConfLl2mClie": staConfLl2mClie,
       "staConfLl2mClieRxp": staConfLl2mClieRxp,
       "staConfLl2mClieRxb": staConfLl2mClieRxb,
       "staConfLl2mClieRxm": staConfLl2mClieRxm,
       "staConfLl2mClieRxu": staConfLl2mClieRxu,
       "staConfLl2mClieRxd": staConfLl2mClieRxd,
       "staConfLl2mClieDel": staConfLl2mClieDel,
       "staConfLl2mDele": staConfLl2mDele,
       "staQueu": staQueu,
       "staQueuLanheap": staQueuLanheap,
       "staQueuQueuepa": staQueuQueuepa,
       "staQueuWanheap": staQueuWanheap,
       "staQueuWanqueu": staQueuWanqueu,
       "staQueuArpquer": staQueuArpquer,
       "staQueuArpqueu": staQueuArpqueu,
       "staQueuIpqueue": staQueuIpqueue,
       "staQueuIpurgen": staQueuIpurgen,
       "staQueuIcmpque": staQueuIcmpque,
       "staQueuTcpqueu": staQueuTcpqueu,
       "staQueuTftpser": staQueuTftpser,
       "staQueuSnmpque": staQueuSnmpque,
       "staQueuProthea": staQueuProthea,
       "staQueuDhcpser": staQueuDhcpser,
       "staQueuDhcpcli": staQueuDhcpcli,
       "staQueuIprripq": staQueuIprripq,
       "staQueuDnstxqu": staQueuDnstxqu,
       "staQueuDnsrxqu": staQueuDnsrxqu,
       "staConnTable": staConnTable,
       "staConnEntry": staConnEntry,
       "staConnIfc": staConnIfc,
       "staConnConn": staConnConn,
       "staConnActi": staConnActi,
       "staConnPass": staConnPass,
       "staConnErro": staConnErro,
       "staConnCont": staConnCont,
       "staConnChar": staConnChar,
       "staInfoTable": staInfoTable,
       "staInfoEntry": staInfoEntry,
       "staInfoIfc": staInfoIfc,
       "staInfoSta": staInfoSta,
       "staInfoMod": staInfoMod,
       "staInfoDia": staInfoDia,
       "staInfoPee": staInfoPee,
       "staInfoB1d": staInfoB1d,
       "staInfoB2d": staInfoB2d,
       "staLayeTable": staLayeTable,
       "staLayeEntry": staLayeEntry,
       "staLayeIfc": staLayeIfc,
       "staLayeWanl": staLayeWanl,
       "staLayeEnca": staLayeEnca,
       "staLayeLay3": staLayeLay3,
       "staLayeLay2": staLayeLay2,
       "staLayeL2op": staLayeL2op,
       "staLayeLay1": staLayeLay1,
       "staLayeL1pa": staLayeL1pa,
       "staCallTable": staCallTable,
       "staCallEntry": staCallEntry,
       "staCallSys": staCallSys,
       "staCallIfc": staCallIfc,
       "staCallCli": staCallCli,
       "staCallDia": staCallDia,
       "staCallCap": staCallCap,
       "staCallBch": staCallBch,
       "staCallCou": staCallCou,
       "staRemoTable": staRemoTable,
       "staRemoEntry": staRemoEntry,
       "staRemoConns": staRemoConns,
       "staRemoRemot": staRemoRemot,
       "staRemoMode": staRemoMode,
       "staRemoIfc": staRemoIfc,
       "staRemoConnt": staRemoConnt,
       "staRemoCharg": staRemoCharg,
       "staRemoCount": staRemoCount,
       "staCurr": staCurr,
       "staTime": staTime,
       "staTimeCur": staTimeCur,
       "staTimeSou": staTimeSou,
       "staTimeSet": staTimeSet,
       "staTimeIsd": staTimeIsd,
       "staTimeIsdConne": staTimeIsdConne,
       "staTimeIsdInfor": staTimeIsdInfor,
       "staTimeIsdInfoe": staTimeIsdInfoe,
       "staTimeIsdUnits": staTimeIsdUnits,
       "staTimeIsdDelet": staTimeIsdDelet,
       "staTimeUtc": staTimeUtc,
       "staTimeTim": staTimeTim,
       "staTimeDay": staTimeDay,
       "staTimeDstTable": staTimeDstTable,
       "staTimeDstEntry": staTimeDstEntry,
       "staTimeDstEve": staTimeDstEve,
       "staTimeDstInd": staTimeDstInd,
       "staTimeDstDay": staTimeDstDay,
       "staTimeDstMon": staTimeDstMon,
       "staTimeDstHou": staTimeDstHou,
       "staTimeDstMin": staTimeDstMin,
       "staTimeDstTim": staTimeDstTim,
       "staLcr": staLcr,
       "staLcrTot": staLcrTot,
       "staLcrFou": staLcrFou,
       "staLcrNot": staLcrNot,
       "staLcrMis": staLcrMis,
       "staLcrProTable": staLcrProTable,
       "staLcrProEntry": staLcrProEntry,
       "staLcrProPro": staLcrProPro,
       "staLcrProFai": staLcrProFai,
       "staLcrProSuc": staLcrProSuc,
       "staLcrDel": staLcrDel,
       "staChar": staChar,
       "staCharSpareds": staCharSpareds,
       "staCharTimetabTable": staCharTimetabTable,
       "staCharTimetabEntry": staCharTimetabEntry,
       "staCharTimetabIfc": staCharTimetabIfc,
       "staCharTimetabBudgetmi": staCharTimetabBudgetmi,
       "staCharTimetabSparemin": staCharTimetabSparemin,
       "staCharTimetabMinutesa": staCharTimetabMinutesa,
       "staCharTimetabMinutesp": staCharTimetabMinutesp,
       "staCharDeletev": staCharDeletev,
       "staCharSpareun": staCharSpareun,
       "staCharTablebuTable": staCharTablebuTable,
       "staCharTablebuEntry": staCharTablebuEntry,
       "staCharTablebuIfc": staCharTablebuIfc,
       "staCharTablebuBud": staCharTablebuBud,
       "staCharTablebuSpa": staCharTablebuSpa,
       "staCharTablebuTot": staCharTablebuTot,
       "staCharSpareda": staCharSpareda,
       "staCharRouteru": staCharRouteru,
       "staCharTotalun": staCharTotalun,
       "staCharRouterd": staCharRouterd,
       "staCharSparedi": staCharSparedi,
       "staCharRouteri": staCharRouteri,
       "staDsl": staDsl,
       "staDslIntTable": staDslIntTable,
       "staDslIntEntry": staDslIntEntry,
       "staDslIntIfc": staDslIntIfc,
       "staDslIntLin": staDslIntLin,
       "staDslBytTable": staDslBytTable,
       "staDslBytEntry": staDslBytEntry,
       "staDslBytIfc": staDslBytIfc,
       "staDslBytTxb": staDslBytTxb,
       "staDslBytRxb": staDslBytRxb,
       "staDslPacTable": staDslPacTable,
       "staDslPacEntry": staDslPacEntry,
       "staDslPacIfc": staDslPacIfc,
       "staDslPacRxp": staDslPacRxp,
       "staDslPacTxp": staDslPacTxp,
       "staDslPacRxb": staDslPacRxb,
       "staDslPacRxm": staDslPacRxm,
       "staDslPacRxu": staDslPacRxu,
       "staDslPacTxb": staDslPacTxb,
       "staDslPacTxm": staDslPacTxm,
       "staDslPacTxu": staDslPacTxu,
       "staDslErrTable": staDslErrTable,
       "staDslErrEntry": staDslErrEntry,
       "staDslErrIfc": staDslErrIfc,
       "staDslErrRxerro": staDslErrRxerro,
       "staDslErrTxerro": staDslErrTxerro,
       "staDslErrStacke": staDslErrStacke,
       "staDslErrNicerr": staDslErrNicerr,
       "staDslErrQueuee": staDslErrQueuee,
       "staDslErrRxcrce": staDslErrRxcrce,
       "staDslErrCollis": staDslErrCollis,
       "staDslErrSingle": staDslErrSingle,
       "staDslErrMultip": staDslErrMultip,
       "staDslErrLateco": staDslErrLateco,
       "staDslErrExcess": staDslErrExcess,
       "staDslErrRxalig": staDslErrRxalig,
       "staDslErrRxtoos": staDslErrRxtoos,
       "staDslErrRxtool": staDslErrRxtool,
       "staDslErrTxcarr": staDslErrTxcarr,
       "staDslErrTxdefe": staDslErrTxdefe,
       "staDslPpp": staDslPpp,
       "staDslPppTxpadi": staDslPppTxpadi,
       "staDslPppRxpado": staDslPppRxpado,
       "staDslPppTxpadr": staDslPppTxpadr,
       "staDslPppRxpads": staDslPppRxpads,
       "staDslPppTxpadt": staDslPppTxpadt,
       "staDslPppRxpadt": staDslPppRxpadt,
       "staDslPppTxprot": staDslPppTxprot,
       "staDslPppRxprot": staDslPppRxprot,
       "staDslPppTxdata": staDslPppTxdata,
       "staDslPppRxdata": staDslPppRxdata,
       "staDslPppRxbad": staDslPppRxbad,
       "staDslPppAcname": staDslPppAcname,
       "staDslPppServic": staDslPppServic,
       "staDslPppDelete": staDslPppDelete,
       "staDslDel": staDslDel,
       "staVpn": staVpn,
       "staVpnPeers": staVpnPeers,
       "staVpnRules": staVpnRules,
       "staVpnTunnel": staVpnTunnel,
       "staVpnIkesas": staVpnIkesas,
       "staVpnEspsas": staVpnEspsas,
       "staVpnAhsas": staVpnAhsas,
       "staVpnIkeTable": staVpnIkeTable,
       "staVpnIkeEntry": staVpnIkeEntry,
       "staVpnIkeIdx": staVpnIkeIdx,
       "staVpnIkePeer": staVpnIkePeer,
       "staVpnIkeDesta": staVpnIkeDesta,
       "staVpnIkeSrcad": staVpnIkeSrcad,
       "staVpnIkeCrypt": staVpnIkeCrypt,
       "staVpnIkeHasha": staVpnIkeHasha,
       "staVpnIkeAge": staVpnIkeAge,
       "staVpnIkeIniti": staVpnIkeIniti,
       "staVpnIkeSofts": staVpnIkeSofts,
       "staVpnIkeMaxse": staVpnIkeMaxse,
       "staVpnIkeKbyte": staVpnIkeKbyte,
       "staVpnIkeSoftk": staVpnIkeSoftk,
       "staVpnIkeMaxkb": staVpnIkeMaxkb,
       "staVpnIkeIkeau": staVpnIkeIkeau,
       "staVpnIkeDstpo": staVpnIkeDstpo,
       "staVpnIkeSrcpo": staVpnIkeSrcpo,
       "staVpnEspTable": staVpnEspTable,
       "staVpnEspEntry": staVpnEspEntry,
       "staVpnEspIdx": staVpnEspIdx,
       "staVpnEspPeer": staVpnEspPeer,
       "staVpnEspDesta": staVpnEspDesta,
       "staVpnEspSrcad": staVpnEspSrcad,
       "staVpnEspMode": staVpnEspMode,
       "staVpnEspCrypt": staVpnEspCrypt,
       "staVpnEspHasha": staVpnEspHasha,
       "staVpnEspSpi": staVpnEspSpi,
       "staVpnEspAge": staVpnEspAge,
       "staVpnEspSofts": staVpnEspSofts,
       "staVpnEspMaxse": staVpnEspMaxse,
       "staVpnEspKbyte": staVpnEspKbyte,
       "staVpnEspSoftk": staVpnEspSoftk,
       "staVpnEspMaxkb": staVpnEspMaxkb,
       "staVpnAhTable": staVpnAhTable,
       "staVpnAhEntry": staVpnAhEntry,
       "staVpnAhIdx": staVpnAhIdx,
       "staVpnAhPeer": staVpnAhPeer,
       "staVpnAhDesta": staVpnAhDesta,
       "staVpnAhSrcad": staVpnAhSrcad,
       "staVpnAhMode": staVpnAhMode,
       "staVpnAhCrypt": staVpnAhCrypt,
       "staVpnAhHasha": staVpnAhHasha,
       "staVpnAhSpi": staVpnAhSpi,
       "staVpnAhAge": staVpnAhAge,
       "staVpnAhSofts": staVpnAhSofts,
       "staVpnAhMaxse": staVpnAhMaxse,
       "staVpnAhKbyte": staVpnAhKbyte,
       "staVpnAhSoftk": staVpnAhSoftk,
       "staVpnAhMaxkb": staVpnAhMaxkb,
       "staVpnDeletev": staVpnDeletev,
       "staVpnIpcomps": staVpnIpcomps,
       "staVpnIpcompTable": staVpnIpcompTable,
       "staVpnIpcompEntry": staVpnIpcompEntry,
       "staVpnIpcompIdx": staVpnIpcompIdx,
       "staVpnIpcompPeer": staVpnIpcompPeer,
       "staVpnIpcompDesta": staVpnIpcompDesta,
       "staVpnIpcompSrcad": staVpnIpcompSrcad,
       "staVpnIpcompMode": staVpnIpcompMode,
       "staVpnIpcompCrypt": staVpnIpcompCrypt,
       "staVpnIpcompHasha": staVpnIpcompHasha,
       "staVpnIpcompSpi": staVpnIpcompSpi,
       "staVpnIpcompAge": staVpnIpcompAge,
       "staVpnIpcompSofts": staVpnIpcompSofts,
       "staVpnIpcompMaxse": staVpnIpcompMaxse,
       "staVpnIpcompKbyte": staVpnIpcompKbyte,
       "staVpnIpcompSoftk": staVpnIpcompSoftk,
       "staVpnIpcompMaxkb": staVpnIpcompMaxkb,
       "staVpnConnectTable": staVpnConnectTable,
       "staVpnConnectEntry": staVpnConnectEntry,
       "staVpnConnectPeer": staVpnConnectPeer,
       "staVpnConnectPhysco": staVpnConnectPhysco,
       "staVpnConnectRemote": staVpnConnectRemote,
       "staVpnConnectCrypta": staVpnConnectCrypta,
       "staVpnConnectCryptl": staVpnConnectCryptl,
       "staVpnConnectHashal": staVpnConnectHashal,
       "staVpnConnectHashle": staVpnConnectHashle,
       "staVpnConnectHmacal": staVpnConnectHmacal,
       "staVpnConnectHmacle": staVpnConnectHmacle,
       "staVpnConnectCompra": staVpnConnectCompra,
       "staVpnConnectState": staVpnConnectState,
       "staVpnConnectMode": staVpnConnectMode,
       "staVpnConnectShtime": staVpnConnectShtime,
       "staVpnConnectB1dt": staVpnConnectB1dt,
       "staVpnConnectLaster": staVpnConnectLaster,
       "staVpnConnectClient": staVpnConnectClient,
       "staVpnConnectNatdet": staVpnConnectNatdet,
       "staVpnConnectConnti": staVpnConnectConnti,
       "staPptp": staPptp,
       "staPptpRxp": staPptpRxp,
       "staPptpTxp": staPptpTxp,
       "staPptpEch": staPptpEch,
       "staPptpAck": staPptpAck,
       "staPptpDro": staPptpDro,
       "staPptpRxe": staPptpRxe,
       "staPptpTcp": staPptpTcp,
       "staPptpCal": staPptpCal,
       "staPptpConTable": staPptpConTable,
       "staPptpConEntry": staPptpConEntry,
       "staPptpConChann": staPptpConChann,
       "staPptpConState": staPptpConState,
       "staPptpConMode": staPptpConMode,
       "staPptpConShtim": staPptpConShtim,
       "staPptpConPhysc": staPptpConPhysc,
       "staPptpConPeera": staPptpConPeera,
       "staPptpConIpadd": staPptpConIpadd,
       "staPptpConDnsde": staPptpConDnsde,
       "staPptpConNbnsd": staPptpConNbnsd,
       "staPptpConLaste": staPptpConLaste,
       "staPptpConDnsba": staPptpConDnsba,
       "staPptpConNbnsb": staPptpConNbnsb,
       "staPptpConConnt": staPptpConConnt,
       "staPptpConGatew": staPptpConGatew,
       "staPptpTun": staPptpTun,
       "staPptpDel": staPptpDel,
       "staPptpFlo": staPptpFlo,
       "staDhcp": staDhcp,
       "staDhcpWanTable": staDhcpWanTable,
       "staDhcpWanEntry": staDhcpWanEntry,
       "staDhcpWanIfc": staDhcpWanIfc,
       "staDhcpWanIpadd": staDhcpWanIpadd,
       "staDhcpWanIpnet": staDhcpWanIpnet,
       "staDhcpWanGatew": staDhcpWanGatew,
       "staDhcpWanDnsde": staDhcpWanDnsde,
       "staDhcpWanDnsba": staDhcpWanDnsba,
       "staDhcpWanNbnsd": staDhcpWanNbnsd,
       "staDhcpWanNbnsb": staDhcpWanNbnsb,
       "staDhcpWanDhcps": staDhcpWanDhcps,
       "staDhcpWanDomai": staDhcpWanDomai,
       "staDhcpLanTable": staDhcpLanTable,
       "staDhcpLanEntry": staDhcpLanEntry,
       "staDhcpLanIfc": staDhcpLanIfc,
       "staDhcpLanIpadd": staDhcpLanIpadd,
       "staDhcpLanIpnet": staDhcpLanIpnet,
       "staDhcpLanGatew": staDhcpLanGatew,
       "staDhcpLanDnsde": staDhcpLanDnsde,
       "staDhcpLanDnsba": staDhcpLanDnsba,
       "staDhcpLanNbnsd": staDhcpLanNbnsd,
       "staDhcpLanNbnsb": staDhcpLanNbnsb,
       "staDhcpLanDhcps": staDhcpLanDhcps,
       "staDhcpLanDomai": staDhcpLanDomai,
       "staIsdn": staIsdn,
       "staIsdnLin": staIsdnLin,
       "staIsdnLinS0Table": staIsdnLinS0Table,
       "staIsdnLinS0Entry": staIsdnLinS0Entry,
       "staIsdnLinS0Ifc": staIsdnLinS0Ifc,
       "staIsdnLinS0Ope": staIsdnLinS0Ope,
       "staIsdnFra": staIsdnFra,
       "staIsdnFraS0Table": staIsdnFraS0Table,
       "staIsdnFraS0Entry": staIsdnFraS0Entry,
       "staIsdnFraS0Ifc": staIsdnFraS0Ifc,
       "staIsdnFraS0Sta": staIsdnFraS0Sta,
       "staIsdnFraS0B1f": staIsdnFraS0B1f,
       "staIsdnFraS0B2f": staIsdnFraS0B2f,
       "staIsdnSig": staIsdnSig,
       "staIsdnSigLay": staIsdnSigLay,
       "staIsdnSigLayLapTable": staIsdnSigLayLapTable,
       "staIsdnSigLayLapEntry": staIsdnSigLayLapEntry,
       "staIsdnSigLayLapCha": staIsdnSigLayLapCha,
       "staIsdnSigLayLapTei": staIsdnSigLayLapTei,
       "staIsdnSigLayLapL2a": staIsdnSigLayLapL2a,
       "staIsdnSigLayLapCon": staIsdnSigLayLapCon,
       "staIsdnSigMan": staIsdnSigMan,
       "staIsdnSigManDinTable": staIsdnSigManDinTable,
       "staIsdnSigManDinEntry": staIsdnSigManDinEntry,
       "staIsdnSigManDinCha": staIsdnSigManDinCha,
       "staIsdnSigManDinPro": staIsdnSigManDinPro,
       "staIsdnSigManDinLay": staIsdnSigManDinLay,
       "staIsdnSigManDinTei": staIsdnSigManDinTei,
       "staIsdnSigManDinS0a": staIsdnSigManDinS0a,
       "staIsdnSigManErrTable": staIsdnSigManErrTable,
       "staIsdnSigManErrEntry": staIsdnSigManErrEntry,
       "staIsdnSigManErrIfc": staIsdnSigManErrIfc,
       "staIsdnSigManErrA": staIsdnSigManErrA,
       "staIsdnSigManErrB": staIsdnSigManErrB,
       "staIsdnSigManErrC": staIsdnSigManErrC,
       "staIsdnSigManErrD": staIsdnSigManErrD,
       "staIsdnSigManErrE": staIsdnSigManErrE,
       "staIsdnSigManErrF": staIsdnSigManErrF,
       "staIsdnSigManErrG": staIsdnSigManErrG,
       "staIsdnSigManErrH": staIsdnSigManErrH,
       "staIsdnSigManErrI": staIsdnSigManErrI,
       "staIsdnSigManErrJ": staIsdnSigManErrJ,
       "staIsdnSigManErrK": staIsdnSigManErrK,
       "staIsdnSigManErrL": staIsdnSigManErrL,
       "staIsdnSigManErrM": staIsdnSigManErrM,
       "staIsdnSigManErrN": staIsdnSigManErrN,
       "staIsdnSigManErrO": staIsdnSigManErrO,
       "staIsdnDel": staIsdnDel,
       "staSnmp": staSnmp,
       "staSnmpEveTable": staSnmpEveTable,
       "staSnmpEveEntry": staSnmpEveEntry,
       "staSnmpEveTra": staSnmpEveTra,
       "staSnmpEveVen": staSnmpEveVen,
       "staSnmpEveCou": staSnmpEveCou,
       "staMail": staMail,
       "staMailBuf": staMailBuf,
       "staMailSen": staMailSen,
       "staMailDis": staMailDis,
       "staMailCle": staMailCle,
       "staMailDel": staMailDel,
       "staHard": staHard,
       "staHardCput": staHardCput,
       "staHardCpuc": staHardCpuc,
       "staHardCpul": staHardCpul,
       "staHardTota": staHardTota,
       "staHardFree": staHardFree,
       "staHardMode": staHardMode,
       "staHardSeri": staHardSeri,
       "staHardBoar": staHardBoar,
       "staHardSwve": staHardSwve,
       "staHardEthe": staHardEthe,
       "staHardVpnh": staHardVpnh,
       "staChanTable": staChanTable,
       "staChanEntry": staChanEntry,
       "staChanChan": staChanChan,
       "staChanPlci": staChanPlci,
       "staChanBus": staChanBus,
       "staChanState": staChanState,
       "staChanApp": staChanApp,
       "staChanMode": staChanMode,
       "staChanCause": staChanCause,
       "staChanNumbe": staChanNumbe,
       "staChanSubad": staChanSubad,
       "staChanCharg": staChanCharg,
       "staChanExtra": staChanExtra,
       "staChanConnt": staChanConnt,
       "staChanConns": staChanConns,
       "staChanIsdnd": staChanIsdnd,
       "staChanPhcha": staChanPhcha,
       "staChanPptpc": staChanPptpc,
       "staChanVpnco": staChanVpnco,
       "staMode": staMode,
       "staModeModeminfo": staModeModeminfo,
       "staModeConnectinfo": staModeConnectinfo,
       "staModeState": staModeState,
       "staModeOperating": staModeOperating,
       "staModeDatarate": staModeDatarate,
       "staModeSignaldbm": staModeSignaldbm,
       "staModeRegistration": staModeRegistration,
       "staModeNetwork": staModeNetwork,
       "staModeNetworklistTable": staModeNetworklistTable,
       "staModeNetworklistEntry": staModeNetworklistEntry,
       "staModeNetworklistNet": staModeNetworklistNet,
       "staModeNetworklistSta": staModeNetworklistSta,
       "staModeNetworklistMod": staModeNetworklistMod,
       "staModeNetworklistNum": staModeNetworklistNum,
       "staModeScannetworks": staModeScannetworks,
       "staModeInputpuk": staModeInputpuk,
       "staModeMode": staModeMode,
       "staModePort": staModePort,
       "staModeDroppedtxpacke": staModeDroppedtxpacke,
       "staModeHardwareresets": staModeHardwareresets,
       "staModeHistoryTable": staModeHistoryTable,
       "staModeHistoryEntry": staModeHistoryEntry,
       "staModeHistoryInd": staModeHistoryInd,
       "staModeHistoryTim": staModeHistoryTim,
       "staModeHistorySig": staModeHistorySig,
       "staModeHistoryNet": staModeHistoryNet,
       "staModeHistoryMod": staModeHistoryMod,
       "staModeHistoryReg": staModeHistoryReg,
       "staModeTemperaturesta": staModeTemperaturesta,
       "staModeTemperaturedeg": staModeTemperaturedeg,
       "staModeSupplyvoltages": staModeSupplyvoltages,
       "staModeSupplyvoltagem": staModeSupplyvoltagem,
       "staModePinstatus": staModePinstatus,
       "staModeRxtimeouts": staModeRxtimeouts,
       "staModeSimidiccid": staModeSimidiccid,
       "staFile": staFile,
       "staFileConTable": staFileConTable,
       "staFileConEntry": staFileConEntry,
       "staFileConNam": staFileConNam,
       "staFileConSiz": staFileConSiz,
       "staEthe": staEthe,
       "staEthePortsTable": staEthePortsTable,
       "staEthePortsEntry": staEthePortsEntry,
       "staEthePortsPor": staEthePortsPor,
       "staEthePortsLin": staEthePortsLin,
       "staEthePortsCon": staEthePortsCon,
       "staEthePortsMdi": staEthePortsMdi,
       "staEthePortsAss": staEthePortsAss,
       "staEthePortsFlo": staEthePortsFlo,
       "staEthePortsPri": staEthePortsPri,
       "staEthePortsAut": staEthePortsAut,
       "staEtheCabletest": staEtheCabletest,
       "staEtheCabletestrTable": staEtheCabletestrTable,
       "staEtheCabletestrEntry": staEtheCabletestrEntry,
       "staEtheCabletestrIfc": staEtheCabletestrIfc,
       "staEtheCabletestrRxs": staEtheCabletestrRxs,
       "staEtheCabletestrRxd": staEtheCabletestrRxd,
       "staEtheCabletestrTxs": staEtheCabletestrTxs,
       "staEtheCabletestrTxd": staEtheCabletestrTxd,
       "staPppo": staPppo,
       "staPppoRxp": staPppoRxp,
       "staPppoTxp": staPppoTxp,
       "staPppoDro": staPppoDro,
       "staPppoRxe": staPppoRxe,
       "staPppoSes": staPppoSes,
       "staPppoConTable": staPppoConTable,
       "staPppoConEntry": staPppoConEntry,
       "staPppoConCha": staPppoConCha,
       "staPppoConMac": staPppoConMac,
       "staPppoConSta": staPppoConSta,
       "staPppoConLas": staPppoConLas,
       "staPppoConSht": staPppoConSht,
       "staPppoConPee": staPppoConPee,
       "staPppoConCon": staPppoConCon,
       "staPppoNum": staPppoNum,
       "staPppoDel": staPppoDel,
       "staUsb": staUsb,
       "staUsbDevTable": staUsbDevTable,
       "staUsbDevEntry": staUsbDevEntry,
       "staUsbDevBus": staUsbDevBus,
       "staUsbDevAddress": staUsbDevAddress,
       "staUsbDevVendor": staUsbDevVendor,
       "staUsbDevVendorid": staUsbDevVendorid,
       "staUsbDevProduct": staUsbDevProduct,
       "staUsbDevProducti": staUsbDevProducti,
       "staUsbDevDepth": staUsbDevDepth,
       "staUsbDevSpeed": staUsbDevSpeed,
       "staUsbDevInterfac": staUsbDevInterfac,
       "staUsbDevPower": staUsbDevPower,
       "staUsbDevDriver": staUsbDevDriver,
       "staUsbDevParent": staUsbDevParent,
       "staUsbRei": staUsbRei,
       "staAcco": staAcco,
       "staAccoCurTable": staAccoCurTable,
       "staAccoCurEntry": staAccoCurEntry,
       "staAccoCurUsern": staAccoCurUsern,
       "staAccoCurMacad": staAccoCurMacad,
       "staAccoCurPeer": staAccoCurPeer,
       "staAccoCurConnt": staAccoCurConnt,
       "staAccoCurRxkby": staAccoCurRxkby,
       "staAccoCurTxkby": staAccoCurTxkby,
       "staAccoCurTotal": staAccoCurTotal,
       "staAccoCurConne": staAccoCurConne,
       "staAccoAccTable": staAccoAccTable,
       "staAccoAccEntry": staAccoAccEntry,
       "staAccoAccUsern": staAccoAccUsern,
       "staAccoAccMacad": staAccoAccMacad,
       "staAccoAccPeer": staAccoAccPeer,
       "staAccoAccConnt": staAccoAccConnt,
       "staAccoAccRxkby": staAccoAccRxkby,
       "staAccoAccTxkby": staAccoAccTxkby,
       "staAccoAccTotal": staAccoAccTotal,
       "staAccoAccConne": staAccoAccConne,
       "staAccoLasTable": staAccoLasTable,
       "staAccoLasEntry": staAccoLasEntry,
       "staAccoLasUsern": staAccoLasUsern,
       "staAccoLasMacad": staAccoLasMacad,
       "staAccoLasPeer": staAccoLasPeer,
       "staAccoLasConnt": staAccoLasConnt,
       "staAccoLasRxkby": staAccoLasRxkby,
       "staAccoLasTxkby": staAccoLasTxkby,
       "staAccoLasTotal": staAccoLasTotal,
       "staAccoLasConne": staAccoLasConne,
       "staAccoDel": staAccoDel,
       "staAccoTimTable": staAccoTimTable,
       "staAccoTimEntry": staAccoTimEntry,
       "staAccoTimSys": staAccoTimSys,
       "staCert": staCert,
       "staCertSce": staCertSce,
       "staCertSceNumca": staCertSceNumca,
       "staCertSceNumra": staCertSceNumra,
       "staCertSceNumce": staCertSceNumce,
       "staCertSceCasTable": staCertSceCasTable,
       "staCertSceCasEntry": staCertSceCasEntry,
       "staCertSceCasIdx": staCertSceCasIdx,
       "staCertSceCasName": staCertSceCasName,
       "staCertSceCasExpire": staCertSceCasExpire,
       "staCertSceCasIssued": staCertSceCasIssued,
       "staCertSceCasKeyusa": staCertSceCasKeyusa,
       "staCertSceCasIssuer": staCertSceCasIssuer,
       "staCertSceCasSubjec": staCertSceCasSubjec,
       "staCertSceCasStatus": staCertSceCasStatus,
       "staCertSceCasIkecer": staCertSceCasIkecer,
       "staCertSceCasMd5fin": staCertSceCasMd5fin,
       "staCertSceCasSha1fi": staCertSceCasSha1fi,
       "staCertSceCasExpsnm": staCertSceCasExpsnm,
       "staCertSceCasIsssnm": staCertSceCasIsssnm,
       "staCertSceRasTable": staCertSceRasTable,
       "staCertSceRasEntry": staCertSceRasEntry,
       "staCertSceRasIdx": staCertSceRasIdx,
       "staCertSceRasName": staCertSceRasName,
       "staCertSceRasExpire": staCertSceRasExpire,
       "staCertSceRasIssued": staCertSceRasIssued,
       "staCertSceRasKeyusa": staCertSceRasKeyusa,
       "staCertSceRasIssuer": staCertSceRasIssuer,
       "staCertSceRasSubjec": staCertSceRasSubjec,
       "staCertSceRasStatus": staCertSceRasStatus,
       "staCertSceRasExpsnm": staCertSceRasExpsnm,
       "staCertSceRasIsssnm": staCertSceRasIsssnm,
       "staCertSceCertsTable": staCertSceCertsTable,
       "staCertSceCertsEntry": staCertSceCertsEntry,
       "staCertSceCertsIdx": staCertSceCertsIdx,
       "staCertSceCertsName": staCertSceCertsName,
       "staCertSceCertsExpires": staCertSceCertsExpires,
       "staCertSceCertsIssued": staCertSceCertsIssued,
       "staCertSceCertsKeyusage": staCertSceCertsKeyusage,
       "staCertSceCertsSubjecta": staCertSceCertsSubjecta,
       "staCertSceCertsIssuer": staCertSceCertsIssuer,
       "staCertSceCertsSubject": staCertSceCertsSubject,
       "staCertSceCertsStatus": staCertSceCertsStatus,
       "staCertSceCertsExpsnmp": staCertSceCertsExpsnmp,
       "staCertSceCertsIsssnmp": staCertSceCertsIsssnmp,
       "staCertSceCertsExtended": staCertSceCertsExtended,
       "staCertSceDelet": staCertSceDelet,
       "staCertCrl": staCertCrl,
       "staCertCrlNum": staCertCrlNum,
       "staCertCrlCrlTable": staCertCrlCrlTable,
       "staCertCrlCrlEntry": staCertCrlCrlEntry,
       "staCertCrlCrlIdx": staCertCrlCrlIdx,
       "staCertCrlCrlExpire": staCertCrlCrlExpire,
       "staCertCrlCrlIssued": staCertCrlCrlIssued,
       "staCertCrlCrlIssuer": staCertCrlCrlIssuer,
       "staCertCrlCrlDistri": staCertCrlCrlDistri,
       "staCertCrlCrlStatus": staCertCrlCrlStatus,
       "staCertCrlCrlExpsnm": staCertCrlCrlExpsnm,
       "staCertCrlCrlIsssnm": staCertCrlCrlIsssnm,
       "staVlan": staVlan,
       "staVlanNetTable": staVlanNetTable,
       "staVlanNetEntry": staVlanNetEntry,
       "staVlanNetVla": staVlanNetVla,
       "staVlanNetPor": staVlanNetPor,
       "staVlanPorTable": staVlanPorTable,
       "staVlanPorEntry": staVlanPorEntry,
       "staVlanPorPor": staVlanPorPor,
       "staVlanPorTag": staVlanPorTag,
       "staVlanOpe": staVlanOpe,
       "staComp": staComp,
       "staCompDevTable": staCompDevTable,
       "staCompDevEntry": staCompDevEntry,
       "staCompDevIndex": staCompDevIndex,
       "staCompDevDevicet": staCompDevDevicet,
       "staCompDevBus": staCompDevBus,
       "staCompDevDevice": staCompDevDevice,
       "staCompDevVendor": staCompDevVendor,
       "staCompDevUsbdriv": staCompDevUsbdriv,
       "staCompDevState": staCompDevState,
       "staCompDevFirmwar": staCompDevFirmwar,
       "staCompDevService": staCompDevService,
       "staCompDevFullnam": staCompDevFullnam,
       "staCompCom": staCompCom,
       "staCompComNetworksTable": staCompComNetworksTable,
       "staCompComNetworksEntry": staCompComNetworksEntry,
       "staCompComNetworksDevicet": staCompComNetworksDevicet,
       "staCompComNetworksPortnum": staCompComNetworksPortnum,
       "staCompComNetworksConnect": staCompComNetworksConnect,
       "staCompComNetworksLasterr": staCompComNetworksLasterr,
       "staCompComNetworksRemotea": staCompComNetworksRemotea,
       "staCompComNetworksLocalpo": staCompComNetworksLocalpo,
       "staCompComNetworksRemotep": staCompComNetworksRemotep,
       "staCompComNetworksFullnam": staCompComNetworksFullnam,
       "staCompComComportsTable": staCompComComportsTable,
       "staCompComComportsEntry": staCompComComportsEntry,
       "staCompComComportsDev": staCompComComportsDev,
       "staCompComComportsPor": staCompComComportsPor,
       "staCompComComportsInt": staCompComComportsInt,
       "staCompComComportsBit": staCompComComportsBit,
       "staCompComComportsDat": staCompComComportsDat,
       "staCompComComportsPar": staCompComComportsPar,
       "staCompComComportsSto": staCompComComportsSto,
       "staCompComComportsHan": staCompComComportsHan,
       "staCompComComportsFul": staCompComComportsFul,
       "staCompComBytecounTable": staCompComBytecounTable,
       "staCompComBytecounEntry": staCompComBytecounEntry,
       "staCompComBytecounDevicety": staCompComBytecounDevicety,
       "staCompComBytecounPortnumb": staCompComBytecounPortnumb,
       "staCompComBytecounSerialtx": staCompComBytecounSerialtx,
       "staCompComBytecounSerialrx": staCompComBytecounSerialrx,
       "staCompComBytecounNetworkt": staCompComBytecounNetworkt,
       "staCompComBytecounNetworkr": staCompComBytecounNetworkr,
       "staCompComBytecounFullname": staCompComBytecounFullname,
       "staCompComComporteTable": staCompComComporteTable,
       "staCompComComporteEntry": staCompComComporteEntry,
       "staCompComComporteDev": staCompComComporteDev,
       "staCompComComportePor": staCompComComportePor,
       "staCompComComportePar": staCompComComportePar,
       "staCompComComporteFra": staCompComComporteFra,
       "staCompComComporteFul": staCompComComporteFul,
       "staCompComConnectiTable": staCompComConnectiTable,
       "staCompComConnectiEntry": staCompComConnectiEntry,
       "staCompComConnectiDevicet": staCompComConnectiDevicet,
       "staCompComConnectiPortnum": staCompComConnectiPortnum,
       "staCompComConnectiServerg": staCompComConnectiServerg,
       "staCompComConnectiServerr": staCompComConnectiServerr,
       "staCompComConnectiClients": staCompComConnectiClients,
       "staCompComConnectiClientd": staCompComConnectiClientd,
       "staCompComConnectiClientt": staCompComConnectiClientt,
       "staCompComConnectiClientr": staCompComConnectiClientr,
       "staCompComConnectiFullnam": staCompComConnectiFullnam,
       "staCompComDeleteva": staCompComDeleteva,
       "staTaca": staTaca,
       "staTacaAuthe": staTacaAuthe,
       "staTacaAutho": staTacaAutho,
       "staTacaDelet": staTacaDelet,
       "staDele": staDele,
       "set": set,
       "setName": setName,
       "setWan": setWan,
       "setWanDialuppTable": setWanDialuppTable,
       "setWanDialuppEntry": setWanDialuppEntry,
       "setWanDialuppPee": setWanDialuppPee,
       "setWanDialuppDia": setWanDialuppDia,
       "setWanDialuppB1d": setWanDialuppB1d,
       "setWanDialuppB2d": setWanDialuppB2d,
       "setWanDialuppWan": setWanDialuppWan,
       "setWanDialuppCal": setWanDialuppCal,
       "setWanRoundroTable": setWanRoundroTable,
       "setWanRoundroEntry": setWanRoundroEntry,
       "setWanRoundroPee": setWanRoundroPee,
       "setWanRoundroRou": setWanRoundroRou,
       "setWanRoundroHea": setWanRoundroHea,
       "setWanLayerTable": setWanLayerTable,
       "setWanLayerEntry": setWanLayerEntry,
       "setWanLayerWanl": setWanLayerWanl,
       "setWanLayerEnca": setWanLayerEnca,
       "setWanLayerLay3": setWanLayerLay3,
       "setWanLayerLay2": setWanLayerLay2,
       "setWanLayerL2op": setWanLayerL2op,
       "setWanLayerLay1": setWanLayerLay1,
       "setWanPppTable": setWanPppTable,
       "setWanPppEntry": setWanPppEntry,
       "setWanPppPeer": setWanPppPeer,
       "setWanPppAuthentreq": setWanPppAuthentreq,
       "setWanPppKey": setWanPppKey,
       "setWanPppTime": setWanPppTime,
       "setWanPppTry": setWanPppTry,
       "setWanPppUsername": setWanPppUsername,
       "setWanPppConf": setWanPppConf,
       "setWanPppFail": setWanPppFail,
       "setWanPppTerm": setWanPppTerm,
       "setWanPppRights": setWanPppRights,
       "setWanPppAuthentres": setWanPppAuthentres,
       "setWanIncominTable": setWanIncominTable,
       "setWanIncominEntry": setWanIncominEntry,
       "setWanIncominDia": setWanIncominDia,
       "setWanIncominPee": setWanIncominPee,
       "setWanDialpre": setWanDialpre,
       "setWanScriptsTable": setWanScriptsTable,
       "setWanScriptsEntry": setWanScriptsEntry,
       "setWanScriptsPee": setWanScriptsPee,
       "setWanScriptsScr": setWanScriptsScr,
       "setWanProtect": setWanProtect,
       "setWanCallbac": setWanCallbac,
       "setWanRouteriTable": setWanRouteriTable,
       "setWanRouteriEntry": setWanRouteriEntry,
       "setWanRouteriIfc": setWanRouteriIfc,
       "setWanRouteriMsn": setWanRouteriMsn,
       "setWanRouteriCli": setWanRouteriCli,
       "setWanRouteriYc": setWanRouteriYc,
       "setWanRouteriAcc": setWanRouteriAcc,
       "setWanRouteriTyp": setWanRouteriTyp,
       "setWanManuald": setWanManuald,
       "setWanManualdCon": setWanManualdCon,
       "setWanManualdDis": setWanManualdDis,
       "setWanBackupd": setWanBackupd,
       "setWanDslbroaTable": setWanDslbroaTable,
       "setWanDslbroaEntry": setWanDslbroaEntry,
       "setWanDslbroaPee": setWanDslbroaPee,
       "setWanDslbroaSht": setWanDslbroaSht,
       "setWanDslbroaAcn": setWanDslbroaAcn,
       "setWanDslbroaSer": setWanDslbroaSer,
       "setWanDslbroaWan": setWanDslbroaWan,
       "setWanDslbroaUse": setWanDslbroaUse,
       "setWanDslbroaDsl": setWanDslbroaDsl,
       "setWanDslbroaMac": setWanDslbroaMac,
       "setWanDslbroaVla": setWanDslbroaVla,
       "setWanIplistTable": setWanIplistTable,
       "setWanIplistEntry": setWanIplistEntry,
       "setWanIplistPeer": setWanIplistPeer,
       "setWanIplistIpadd": setWanIplistIpadd,
       "setWanIplistIpnet": setWanIplistIpnet,
       "setWanIplistGatew": setWanIplistGatew,
       "setWanIplistDnsde": setWanIplistDnsde,
       "setWanIplistDnsba": setWanIplistDnsba,
       "setWanIplistNbnsd": setWanIplistNbnsd,
       "setWanIplistNbnsb": setWanIplistNbnsb,
       "setWanIplistMasqi": setWanIplistMasqi,
       "setWanPptppeeTable": setWanPptppeeTable,
       "setWanPptppeeEntry": setWanPptppeeEntry,
       "setWanPptppeePee": setWanPptppeePee,
       "setWanPptppeeIpa": setWanPptppeeIpa,
       "setWanPptppeePor": setWanPptppeePor,
       "setWanPptppeeSht": setWanPptppeeSht,
       "setWanPptppeeRtg": setWanPptppeeRtg,
       "setWanRadius": setWanRadius,
       "setWanRadiusOperat": setWanRadiusOperat,
       "setWanRadiusServer": setWanRadiusServer,
       "setWanRadiusAuthpo": setWanRadiusAuthpo,
       "setWanRadiusSecret": setWanRadiusSecret,
       "setWanRadiusPppope": setWanRadiusPppope,
       "setWanRadiusClipop": setWanRadiusClipop,
       "setWanRadiusClippa": setWanRadiusClippa,
       "setWanRadiusLoopba": setWanRadiusLoopba,
       "setWanRadiusProtoc": setWanRadiusProtoc,
       "setWanRadiusAuthpr": setWanRadiusAuthpr,
       "setWanPollingTable": setWanPollingTable,
       "setWanPollingEntry": setWanPollingEntry,
       "setWanPollingPeer": setWanPollingPeer,
       "setWanPollingIpaddress1": setWanPollingIpaddress1,
       "setWanPollingTime": setWanPollingTime,
       "setWanPollingTry": setWanPollingTry,
       "setWanPollingIpaddress2": setWanPollingIpaddress2,
       "setWanPollingIpaddress3": setWanPollingIpaddress3,
       "setWanPollingIpaddress4": setWanPollingIpaddress4,
       "setWanPollingLoopbackad": setWanPollingLoopbackad,
       "setWanBackuppTable": setWanBackuppTable,
       "setWanBackuppEntry": setWanBackuppEntry,
       "setWanBackuppPee": setWanBackuppPee,
       "setWanBackuppAlt": setWanBackuppAlt,
       "setWanBackuppHea": setWanBackuppHea,
       "setWanActiontTable": setWanActiontTable,
       "setWanActiontEntry": setWanActiontEntry,
       "setWanActiontIndex": setWanActiontIndex,
       "setWanActiontHostn": setWanActiontHostn,
       "setWanActiontPeer": setWanActiontPeer,
       "setWanActiontLockt": setWanActiontLockt,
       "setWanActiontCondi": setWanActiontCondi,
       "setWanActiontActio": setWanActiontActio,
       "setWanActiontCheck": setWanActiontCheck,
       "setWanActiontActiv": setWanActiontActiv,
       "setWanActiontOwner": setWanActiontOwner,
       "setWanMtulistTable": setWanMtulistTable,
       "setWanMtulistEntry": setWanMtulistEntry,
       "setWanMtulistPee": setWanMtulistPee,
       "setWanMtulistMtu": setWanMtulistMtu,
       "setChar": setChar,
       "setCharBudgetu": setCharBudgetu,
       "setCharDaysper": setCharDaysper,
       "setCharSpareun": setCharSpareun,
       "setCharRouteru": setCharRouteru,
       "setCharTablebuTable": setCharTablebuTable,
       "setCharTablebuEntry": setCharTablebuEntry,
       "setCharTablebuIfc": setCharTablebuIfc,
       "setCharTablebuBud": setCharTablebuBud,
       "setCharTablebuSpa": setCharTablebuSpa,
       "setCharTablebuTot": setCharTablebuTot,
       "setCharTotalun": setCharTotalun,
       "setCharTimetabTable": setCharTimetabTable,
       "setCharTimetabEntry": setCharTimetabEntry,
       "setCharTimetabIfc": setCharTimetabIfc,
       "setCharTimetabBudgetmi": setCharTimetabBudgetmi,
       "setCharTimetabSparemin": setCharTimetabSparemin,
       "setCharTimetabMinutesa": setCharTimetabMinutesa,
       "setCharTimetabMinutesp": setCharTimetabMinutesp,
       "setCharDslbroa": setCharDslbroa,
       "setCharSpareds": setCharSpareds,
       "setCharRouterd": setCharRouterd,
       "setCharAdditio": setCharAdditio,
       "setCharActivat": setCharActivat,
       "setCharDialupm": setCharDialupm,
       "setCharSparedi": setCharSparedi,
       "setCharRouteri": setCharRouteri,
       "setCharResetbu": setCharResetbu,
       "setLan": setLan,
       "setLanMacadd": setLanMacadd,
       "setLanSpareh": setLanSpareh,
       "setLanTracem": setLanTracem,
       "setLanTracel": setLanTracel,
       "setTcpi": setTcpi,
       "setTcpiOpera": setTcpiOpera,
       "setTcpiAccesTable": setTcpiAccesTable,
       "setTcpiAccesEntry": setTcpiAccesEntry,
       "setTcpiAccesIpa": setTcpiAccesIpa,
       "setTcpiAccesIpn": setTcpiAccesIpn,
       "setTcpiAccesRtg": setTcpiAccesRtg,
       "setTcpiDnsde": setTcpiDnsde,
       "setTcpiDnsba": setTcpiDnsba,
       "setTcpiNbnsd": setTcpiNbnsd,
       "setTcpiNbnsb": setTcpiNbnsb,
       "setTcpiArpag": setTcpiArpag,
       "setTcpiArptaTable": setTcpiArptaTable,
       "setTcpiArptaEntry": setTcpiArptaEntry,
       "setTcpiArptaIpa": setTcpiArptaIpa,
       "setTcpiArptaMac": setTcpiArptaMac,
       "setTcpiArptaLas": setTcpiArptaLas,
       "setTcpiArptaCon": setTcpiArptaCon,
       "setTcpiArptaEth": setTcpiArptaEth,
       "setTcpiArptaPee": setTcpiArptaPee,
       "setTcpiArptaVla": setTcpiArptaVla,
       "setTcpiLoopbTable": setTcpiLoopbTable,
       "setTcpiLoopbEntry": setTcpiLoopbEntry,
       "setTcpiLoopbLoo": setTcpiLoopbLoo,
       "setTcpiLoopbNam": setTcpiLoopbNam,
       "setTcpiLoopbRtg": setTcpiLoopbRtg,
       "setTcpiNonlo": setTcpiNonlo,
       "setTcpiAlive": setTcpiAlive,
       "setTcpiAliveTarget": setTcpiAliveTarget,
       "setTcpiAliveTestin": setTcpiAliveTestin,
       "setTcpiAliveRetryc": setTcpiAliveRetryc,
       "setTcpiAliveRetryi": setTcpiAliveRetryi,
       "setTcpiAliveFailli": setTcpiAliveFailli,
       "setTcpiAliveBootty": setTcpiAliveBootty,
       "setTcpiIcmpo": setTcpiIcmpo,
       "setTcpiNetwoTable": setTcpiNetwoTable,
       "setTcpiNetwoEntry": setTcpiNetwoEntry,
       "setTcpiNetwoNet": setTcpiNetwoNet,
       "setTcpiNetwoIpa": setTcpiNetwoIpa,
       "setTcpiNetwoIpn": setTcpiNetwoIpn,
       "setTcpiNetwoVla": setTcpiNetwoVla,
       "setTcpiNetwoInt": setTcpiNetwoInt,
       "setTcpiNetwoSrc": setTcpiNetwoSrc,
       "setTcpiNetwoTyp": setTcpiNetwoTyp,
       "setTcpiNetwoRtg": setTcpiNetwoRtg,
       "setTcpiNetwoCom": setTcpiNetwoCom,
       "setIpro": setIpro,
       "setIproOpe": setIproOpe,
       "setIproIprTable": setIproIprTable,
       "setIproIprEntry": setIproIprEntry,
       "setIproIprIpa": setIproIprIpa,
       "setIproIprIpn": setIproIprIpn,
       "setIproIprPee": setIproIprPee,
       "setIproIprDis": setIproIprDis,
       "setIproIprMas": setIproIprMas,
       "setIproIprAct": setIproIprAct,
       "setIproIprCom": setIproIprCom,
       "setIproIprRtg": setIproIprRtg,
       "setIproPro": setIproPro,
       "setIproSen": setIproSen,
       "setIproRou": setIproRou,
       "setIproRouRou": setIproRouRou,
       "setIproRouIcm": setIproRouIcm,
       "setIproRouSyn": setIproRouSyn,
       "setIproRouL2l": setIproRouL2l,
       "setIproRouL3l": setIproRouL3l,
       "setIproRip": setIproRip,
       "setIproRipR1m": setIproRipR1m,
       "setIproRipIprTable": setIproRipIprTable,
       "setIproRipIprEntry": setIproRipIprEntry,
       "setIproRipIprIpa": setIproRipIprIpa,
       "setIproRipIprIpn": setIproRipIprIpn,
       "setIproRipIprTim": setIproRipIprTim,
       "setIproRipIprDis": setIproRipIprDis,
       "setIproRipIprGat": setIproRipIprGat,
       "setIproRipIprRtg": setIproRipIprRtg,
       "setIproRipIprPee": setIproRipIprPee,
       "setIproRipIprPor": setIproRipIprPor,
       "setIproRipIprVla": setIproRipIprVla,
       "setIproRipIprNet": setIproRipIprNet,
       "setIproRipWanTable": setIproRipWanTable,
       "setIproRipWanEntry": setIproRipWanEntry,
       "setIproRipWanPeer": setIproRipWanPeer,
       "setIproRipWanRipt": setIproRipWanRipt,
       "setIproRipWanRipa": setIproRipWanRipa,
       "setIproRipWanMasq": setIproRipWanMasq,
       "setIproRipWanDftr": setIproRipWanDftr,
       "setIproRipWanRtgt": setIproRipWanRtgt,
       "setIproRipWanPois": setIproRipWanPois,
       "setIproRipWanRfc2": setIproRipWanRfc2,
       "setIproRipWanGate": setIproRipWanGate,
       "setIproRipWanRxfi": setIproRipWanRxfi,
       "setIproRipWanTxfi": setIproRipWanTxfi,
       "setIproRipWanRips": setIproRipWanRips,
       "setIproRipLanTable": setIproRipLanTable,
       "setIproRipLanEntry": setIproRipLanEntry,
       "setIproRipLanNetw": setIproRipLanNetw,
       "setIproRipLanRipt": setIproRipLanRipt,
       "setIproRipLanRipa": setIproRipLanRipa,
       "setIproRipLanProp": setIproRipLanProp,
       "setIproRipLanDftr": setIproRipLanDftr,
       "setIproRipLanRtgt": setIproRipLanRtgt,
       "setIproRipLanPois": setIproRipLanPois,
       "setIproRipLanRxfi": setIproRipLanRxfi,
       "setIproRipLanTxfi": setIproRipLanTxfi,
       "setIproRipLanRips": setIproRipLanRips,
       "setIproRipPar": setIproRipPar,
       "setIproRipParUpda": setIproRipParUpda,
       "setIproRipParHold": setIproRipParHold,
       "setIproRipParInva": setIproRipParInva,
       "setIproRipParFlus": setIproRipParFlus,
       "setIproRipParUpdd": setIproRipParUpdd,
       "setIproRipParMaxh": setIproRipParMaxh,
       "setIproRipParRout": setIproRipParRout,
       "setIproRipFilTable": setIproRipFilTable,
       "setIproRipFilEntry": setIproRipFilEntry,
       "setIproRipFilNam": setIproRipFilNam,
       "setIproRipFilFil": setIproRipFilFil,
       "setIpro1nn": setIpro1nn,
       "setIpro1nnTcpagings": setIpro1nnTcpagings,
       "setIpro1nnUdpagings": setIpro1nnUdpagings,
       "setIpro1nnIcmpaging": setIpro1nnIcmpaging,
       "setIpro1nnServicetaTable": setIpro1nnServicetaTable,
       "setIpro1nnServicetaEntry": setIpro1nnServicetaEntry,
       "setIpro1nnServicetaDportf": setIpro1nnServicetaDportf,
       "setIpro1nnServicetaIntran": setIpro1nnServicetaIntran,
       "setIpro1nnServicetaDportt": setIpro1nnServicetaDportt,
       "setIpro1nnServicetaMappor": setIpro1nnServicetaMappor,
       "setIpro1nnServicetaActive": setIpro1nnServicetaActive,
       "setIpro1nnServicetaCommen": setIpro1nnServicetaCommen,
       "setIpro1nnServicetaPeer": setIpro1nnServicetaPeer,
       "setIpro1nnServicetaProtoc": setIpro1nnServicetaProtoc,
       "setIpro1nnServicetaWanadd": setIpro1nnServicetaWanadd,
       "setIpro1nnTable1nnaTable": setIpro1nnTable1nnaTable,
       "setIpro1nnTable1nnaEntry": setIpro1nnTable1nnaEntry,
       "setIpro1nnTable1nnaInt": setIpro1nnTable1nnaInt,
       "setIpro1nnTable1nnaSou": setIpro1nnTable1nnaSou,
       "setIpro1nnTable1nnaPro": setIpro1nnTable1nnaPro,
       "setIpro1nnTable1nnaTim": setIpro1nnTable1nnaTim,
       "setIpro1nnTable1nnaHan": setIpro1nnTable1nnaHan,
       "setIpro1nnTable1nnaRem": setIpro1nnTable1nnaRem,
       "setIpro1nnFragments": setIpro1nnFragments,
       "setIpro1nnFragmenta": setIpro1nnFragmenta,
       "setIpro1nnIpsecagin": setIpro1nnIpsecagin,
       "setIpro1nnIpsectablTable": setIpro1nnIpsectablTable,
       "setIpro1nnIpsectablEntry": setIpro1nnIpsectablEntry,
       "setIpro1nnIpsectablRemotea": setIpro1nnIpsectablRemotea,
       "setIpro1nnIpsectablLocalad": setIpro1nnIpsectablLocalad,
       "setIpro1nnIpsectablRchi": setIpro1nnIpsectablRchi,
       "setIpro1nnIpsectablRclo": setIpro1nnIpsectablRclo,
       "setIpro1nnIpsectablLchi": setIpro1nnIpsectablLchi,
       "setIpro1nnIpsectablLclo": setIpro1nnIpsectablLclo,
       "setIpro1nnIpsectablRemotes": setIpro1nnIpsectablRemotes,
       "setIpro1nnIpsectablLocalsp": setIpro1nnIpsectablLocalsp,
       "setIpro1nnIpsectablTimeout": setIpro1nnIpsectablTimeout,
       "setIpro1nnIpsectablFlags": setIpro1nnIpsectablFlags,
       "setIpro1nnIpsectablCo": setIpro1nnIpsectablCo,
       "setIpro1nnIpsectablNl": setIpro1nnIpsectablNl,
       "setIpro1nnIpsectablNr": setIpro1nnIpsectablNr,
       "setIpro1nnIpsectablDp": setIpro1nnIpsectablDp,
       "setIpro1nnIdspoofin": setIpro1nnIdspoofin,
       "setIproFir": setIproFir,
       "setIproFirObjecTable": setIproFirObjecTable,
       "setIproFirObjecEntry": setIproFirObjecEntry,
       "setIproFirObjecNam": setIproFirObjecNam,
       "setIproFirObjecDes": setIproFirObjecDes,
       "setIproFirRulesTable": setIproFirRulesTable,
       "setIproFirRulesEntry": setIproFirRulesEntry,
       "setIproFirRulesNam": setIproFirRulesNam,
       "setIproFirRulesPro": setIproFirRulesPro,
       "setIproFirRulesSou": setIproFirRulesSou,
       "setIproFirRulesDes": setIproFirRulesDes,
       "setIproFirRulesAct": setIproFirRulesAct,
       "setIproFirRulesLin": setIproFirRulesLin,
       "setIproFirRulesPri": setIproFirRulesPri,
       "setIproFirRulesFir": setIproFirRulesFir,
       "setIproFirRulesVpn": setIproFirRulesVpn,
       "setIproFirRulesSta": setIproFirRulesSta,
       "setIproFirRulesCom": setIproFirRulesCom,
       "setIproFirRulesRtg": setIproFirRulesRtg,
       "setIproFirFilteTable": setIproFirFilteTable,
       "setIproFirFilteEntry": setIproFirFilteEntry,
       "setIproFirFilteIdx": setIproFirFilteIdx,
       "setIproFirFilteProt": setIproFirFilteProt,
       "setIproFirFilteSrca": setIproFirFilteSrca,
       "setIproFirFilteSrcn": setIproFirFilteSrcn,
       "setIproFirFilteSst": setIproFirFilteSst,
       "setIproFirFilteSend": setIproFirFilteSend,
       "setIproFirFilteDsta": setIproFirFilteDsta,
       "setIproFirFilteDstn": setIproFirFilteDstn,
       "setIproFirFilteDst": setIproFirFilteDst,
       "setIproFirFilteDend": setIproFirFilteDend,
       "setIproFirFilteActi": setIproFirFilteActi,
       "setIproFirFilteSrcm": setIproFirFilteSrcm,
       "setIproFirFilteDstm": setIproFirFilteDstm,
       "setIproFirFilteLink": setIproFirFilteLink,
       "setIproFirFiltePrio": setIproFirFiltePrio,
       "setIproFirFilteRtgt": setIproFirFilteRtgt,
       "setIproFirActioTable": setIproFirActioTable,
       "setIproFirActioEntry": setIproFirActioEntry,
       "setIproFirActioNam": setIproFirActioNam,
       "setIproFirActioDes": setIproFirActioDes,
       "setIproFirConneTable": setIproFirConneTable,
       "setIproFirConneEntry": setIproFirConneEntry,
       "setIproFirConneSrca": setIproFirConneSrca,
       "setIproFirConneDsta": setIproFirConneDsta,
       "setIproFirConneProt": setIproFirConneProt,
       "setIproFirConneSrcp": setIproFirConneSrcp,
       "setIproFirConneDstp": setIproFirConneDstp,
       "setIproFirConneTime": setIproFirConneTime,
       "setIproFirConneFlag": setIproFirConneFlag,
       "setIproFirConneFilt": setIproFirConneFilt,
       "setIproFirConneSrcr": setIproFirConneSrcr,
       "setIproFirConneDest": setIproFirConneDest,
       "setIproFirConneRtgt": setIproFirConneRtgt,
       "setIproFirHostbTable": setIproFirHostbTable,
       "setIproFirHostbEntry": setIproFirHostbEntry,
       "setIproFirHostbSrc": setIproFirHostbSrc,
       "setIproFirHostbTim": setIproFirHostbTim,
       "setIproFirHostbFil": setIproFirHostbFil,
       "setIproFirPortbTable": setIproFirPortbTable,
       "setIproFirPortbEntry": setIproFirPortbEntry,
       "setIproFirPortbDsta": setIproFirPortbDsta,
       "setIproFirPortbProt": setIproFirPortbProt,
       "setIproFirPortbDstp": setIproFirPortbDstp,
       "setIproFirPortbTime": setIproFirPortbTime,
       "setIproFirPortbFilt": setIproFirPortbFilt,
       "setIproFirMaxha": setIproFirMaxha,
       "setIproFirDosac": setIproFirDosac,
       "setIproFirAdmin": setIproFirAdmin,
       "setIproFirOpera": setIproFirOpera,
       "setIproFirPorts": setIproFirPorts,
       "setIproFirIdsac": setIproFirIdsac,
       "setIproFirPingb": setIproFirPingb,
       "setIproFirSteal": setIproFirSteal,
       "setIproFirAuthp": setIproFirAuthp,
       "setIproFirDenys": setIproFirDenys,
       "setIproFirOpenpTable": setIproFirOpenpTable,
       "setIproFirOpenpEntry": setIproFirOpenpEntry,
       "setIproFirOpenpSrca": setIproFirOpenpSrca,
       "setIproFirOpenpDsta": setIproFirOpenpDsta,
       "setIproFirOpenpProt": setIproFirOpenpProt,
       "setIproFirOpenpDstp": setIproFirOpenpDstp,
       "setIproFirOpenpTime": setIproFirOpenpTime,
       "setIproFirOpenpFilt": setIproFirOpenpFilt,
       "setIproFirOpenpSrcr": setIproFirOpenpSrcr,
       "setIproFirAppli": setIproFirAppli,
       "setIproFirAppliFtp": setIproFirAppliFtp,
       "setIproFirAppliFtpFtp": setIproFirAppliFtpFtp,
       "setIproFirAppliFtpAct": setIproFirAppliFtpAct,
       "setIproFirAppliFtpMin": setIproFirAppliFtpMin,
       "setIproFirAppliFtpChe": setIproFirAppliFtpChe,
       "setIproFirAppliFtpFxp": setIproFirAppliFtpFxp,
       "setIproFirAppliIrc": setIproFirAppliIrc,
       "setIproFirAppliIrcIrc": setIproFirAppliIrcIrc,
       "setIproFirAppliIrcDdc": setIproFirAppliIrcDdc,
       "setIproFirAppliIrcMin": setIproFirAppliIrcMin,
       "setIproFirAppliIrcChe": setIproFirAppliIrcChe,
       "setIproFirAppliApp": setIproFirAppliApp,
       "setIproSta": setIproSta,
       "setIproEnd": setIproEnd,
       "setIproDefTable": setIproDefTable,
       "setIproDefEntry": setIproDefEntry,
       "setIproDefInd": setIproDefInd,
       "setIproDefDay": setIproDefDay,
       "setIproDefSta": setIproDefSta,
       "setIproDefSto": setIproDefSto,
       "setIproDefPee": setIproDefPee,
       "setIproUsa": setIproUsa,
       "setIproNnnTable": setIproNnnTable,
       "setIproNnnEntry": setIproNnnEntry,
       "setIproNnnIdx": setIproNnnIdx,
       "setIproNnnSrca": setIproNnnSrca,
       "setIproNnnSrcm": setIproNnnSrcm,
       "setIproNnnDsts": setIproNnnDsts,
       "setIproNnnMapp": setIproNnnMapp,
       "setIproLoa": setIproLoa,
       "setIproLoaOpe": setIproLoaOpe,
       "setIproLoaBunTable": setIproLoaBunTable,
       "setIproLoaBunEntry": setIproLoaBunEntry,
       "setIproLoaBunPeer": setIproLoaBunPeer,
       "setIproLoaBunBundlepeer1": setIproLoaBunBundlepeer1,
       "setIproLoaBunBundlepeer2": setIproLoaBunBundlepeer2,
       "setIproLoaBunBundlepeer3": setIproLoaBunBundlepeer3,
       "setIproLoaBunBundlepeer4": setIproLoaBunBundlepeer4,
       "setIproVrr": setIproVrr,
       "setIproVrrOpe": setIproVrrOpe,
       "setIproVrrVrrTable": setIproVrrVrrTable,
       "setIproVrrVrrEntry": setIproVrrVrrEntry,
       "setIproVrrVrrRou": setIproVrrVrrRou,
       "setIproVrrVrrVir": setIproVrrVrrVir,
       "setIproVrrVrrPri": setIproVrrVrrPri,
       "setIproVrrVrrBpr": setIproVrrVrrBpr,
       "setIproVrrVrrPee": setIproVrrVrrPee,
       "setIproVrrVrrCom": setIproVrrVrrCom,
       "setIproVrrRec": setIproVrrRec,
       "setIproVrrAdv": setIproVrrAdv,
       "setIproVrrInt": setIproVrrInt,
       "setIproWan": setIproWan,
       "setIproTagTable": setIproTagTable,
       "setIproTagEntry": setIproTagEntry,
       "setIproTagPee": setIproTagPee,
       "setIproTagRtg": setIproTagRtg,
       "setIproTagSta": setIproTagSta,
       "setIproTagEnd": setIproTagEnd,
       "setSnmp": setSnmp,
       "setSnmpSendtrap": setSnmpSendtrap,
       "setSnmpIptrapsTable": setSnmpIptrapsTable,
       "setSnmpIptrapsEntry": setSnmpIptrapsEntry,
       "setSnmpIptrapsTra": setSnmpIptrapsTra,
       "setSnmpIptrapsLoo": setSnmpIptrapsLoo,
       "setSnmpIptrapsVer": setSnmpIptrapsVer,
       "setSnmpAdminist": setSnmpAdminist,
       "setSnmpLocation": setSnmpLocation,
       "setSnmpRegister": setSnmpRegister,
       "setSnmpDeletemo": setSnmpDeletemo,
       "setSnmpMonitortTable": setSnmpMonitortTable,
       "setSnmpMonitortEntry": setSnmpMonitortEntry,
       "setSnmpMonitortIpa": setSnmpMonitortIpa,
       "setSnmpMonitortPor": setSnmpMonitortPor,
       "setSnmpMonitortTim": setSnmpMonitortTim,
       "setSnmpMonitortMac": setSnmpMonitortMac,
       "setSnmpMonitortPee": setSnmpMonitortPee,
       "setSnmpMonitortLoo": setSnmpMonitortLoo,
       "setSnmpMonitortVla": setSnmpMonitortVla,
       "setSnmpMonitortLan": setSnmpMonitortLan,
       "setSnmpMonitortEth": setSnmpMonitortEth,
       "setSnmpPassword": setSnmpPassword,
       "setSnmpComment1": setSnmpComment1,
       "setSnmpComment2": setSnmpComment2,
       "setSnmpComment3": setSnmpComment3,
       "setSnmpComment4": setSnmpComment4,
       "setSnmpReadonly": setSnmpReadonly,
       "setDhcp": setDhcp,
       "setDhcpMax": setDhcpMax,
       "setDhcpDef": setDhcpDef,
       "setDhcpDhcTable": setDhcpDhcTable,
       "setDhcpDhcEntry": setDhcpDhcEntry,
       "setDhcpDhcIpa": setDhcpDhcIpa,
       "setDhcpDhcMac": setDhcpDhcMac,
       "setDhcpDhcTim": setDhcpDhcTim,
       "setDhcpDhcHos": setDhcpDhcHos,
       "setDhcpDhcTyp": setDhcpDhcTyp,
       "setDhcpDhcLan": setDhcpDhcLan,
       "setDhcpDhcEth": setDhcpDhcEth,
       "setDhcpDhcVla": setDhcpDhcVla,
       "setDhcpDhcNet": setDhcpDhcNet,
       "setDhcpHosTable": setDhcpHosTable,
       "setDhcpHosEntry": setDhcpHosEntry,
       "setDhcpHosMac": setDhcpHosMac,
       "setDhcpHosIpa": setDhcpHosIpa,
       "setDhcpHosHos": setDhcpHosHos,
       "setDhcpHosIma": setDhcpHosIma,
       "setDhcpHosNet": setDhcpHosNet,
       "setDhcpAliTable": setDhcpAliTable,
       "setDhcpAliEntry": setDhcpAliEntry,
       "setDhcpAliImagea": setDhcpAliImagea,
       "setDhcpAliImagef": setDhcpAliImagef,
       "setDhcpAliImages": setDhcpAliImages,
       "setDhcpPorTable": setDhcpPorTable,
       "setDhcpPorEntry": setDhcpPorEntry,
       "setDhcpPorPor": setDhcpPorPor,
       "setDhcpPorEna": setDhcpPorEna,
       "setDhcpUse": setDhcpUse,
       "setDhcpNetTable": setDhcpNetTable,
       "setDhcpNetEntry": setDhcpNetEntry,
       "setDhcpNetNetworknam": setDhcpNetNetworknam,
       "setDhcpNetStartaddre": setDhcpNetStartaddre,
       "setDhcpNetEndaddress": setDhcpNetEndaddress,
       "setDhcpNetNetmask": setDhcpNetNetmask,
       "setDhcpNetBroadcasta": setDhcpNetBroadcasta,
       "setDhcpNetGatewayadd": setDhcpNetGatewayadd,
       "setDhcpNetDnsdefault": setDhcpNetDnsdefault,
       "setDhcpNetDnsbackup": setDhcpNetDnsbackup,
       "setDhcpNetNbnsdefaul": setDhcpNetNbnsdefaul,
       "setDhcpNetNbnsbackup": setDhcpNetNbnsbackup,
       "setDhcpNetOperating": setDhcpNetOperating,
       "setDhcpNetBroadcastb": setDhcpNetBroadcastb,
       "setDhcpNetMasterserv": setDhcpNetMasterserv,
       "setDhcpNetCache": setDhcpNetCache,
       "setDhcpNetAdaption": setDhcpNetAdaption,
       "setDhcpAddTable": setDhcpAddTable,
       "setDhcpAddEntry": setDhcpAddEntry,
       "setDhcpAddOptionn": setDhcpAddOptionn,
       "setDhcpAddNetwork": setDhcpAddNetwork,
       "setDhcpAddOptionv": setDhcpAddOptionv,
       "setDhcpAddOptiont": setDhcpAddOptiont,
       "setConf": setConf,
       "setConfLan": setConfLan,
       "setConfWan": setConfWan,
       "setConfPasswor": setConfPasswor,
       "setConfMaximum": setConfMaximum,
       "setConfConfiga": setConfConfiga,
       "setConfLanguag": setConfLanguag,
       "setConfLoginer": setConfLoginer,
       "setConfLockmin": setConfLockmin,
       "setConfAdminea": setConfAdminea,
       "setConfTftpcli": setConfTftpcli,
       "setConfTftpcliConfigadd": setConfTftpcliConfigadd,
       "setConfTftpcliConfigfil": setConfTftpcliConfigfil,
       "setConfTftpcliFirmwarea": setConfTftpcliFirmwarea,
       "setConfTftpcliFirmwaref": setConfTftpcliFirmwaref,
       "setConfTftpcliBytesperh": setConfTftpcliBytesperh,
       "setConfTftpcliScriptadd": setConfTftpcliScriptadd,
       "setConfTftpcliScriptfil": setConfTftpcliScriptfil,
       "setConfAccesstTable": setConfAccesstTable,
       "setConfAccesstEntry": setConfAccesstEntry,
       "setConfAccesstIfc": setConfAccesstIfc,
       "setConfAccesstTelnet": setConfAccesstTelnet,
       "setConfAccesstTftp": setConfAccesstTftp,
       "setConfAccesstHttp": setConfAccesstHttp,
       "setConfAccesstSnmp": setConfAccesstSnmp,
       "setConfAccesstHttps": setConfAccesstHttps,
       "setConfAccesstTelnets": setConfAccesstTelnets,
       "setConfAccesstSsh": setConfAccesstSsh,
       "setConfScreenh": setConfScreenh,
       "setConfPrompt": setConfPrompt,
       "setConfLedtest": setConfLedtest,
       "setConfCrontabTable": setConfCrontabTable,
       "setConfCrontabEntry": setConfCrontabEntry,
       "setConfCrontabInde": setConfCrontabInde,
       "setConfCrontabMinu": setConfCrontabMinu,
       "setConfCrontabHour": setConfCrontabHour,
       "setConfCrontabDayo": setConfCrontabDayo,
       "setConfCrontabDay": setConfCrontabDay,
       "setConfCrontabMont": setConfCrontabMont,
       "setConfCrontabComm": setConfCrontabComm,
       "setConfCrontabBase": setConfCrontabBase,
       "setConfCrontabActi": setConfCrontabActi,
       "setConfCrontabOwne": setConfCrontabOwne,
       "setConfCrontabVari": setConfCrontabVari,
       "setConfAdminsTable": setConfAdminsTable,
       "setConfAdminsEntry": setConfAdminsEntry,
       "setConfAdminsAdm": setConfAdminsAdm,
       "setConfAdminsPas": setConfAdminsPas,
       "setConfAdminsFun": setConfAdminsFun,
       "setConfAdminsAct": setConfAdminsAct,
       "setConfAdminsAcc": setConfAdminsAcc,
       "setConfTelnetp": setConfTelnetp,
       "setConfTelnets": setConfTelnets,
       "setConfSshport": setConfSshport,
       "setConfSshauthTable": setConfSshauthTable,
       "setConfSshauthEntry": setConfSshauthEntry,
       "setConfSshauthIfc": setConfSshauthIfc,
       "setConfSshauthMet": setConfSshauthMet,
       "setConfPredefaTable": setConfPredefaTable,
       "setConfPredefaEntry": setConfPredefaEntry,
       "setConfPredefaNam": setConfPredefaNam,
       "setConfUpdatec": setConfUpdatec,
       "setConfUpdatecOperati": setConfUpdatecOperati,
       "setConfUpdatecServern": setConfUpdatecServern,
       "setConfUpdatecServerp": setConfUpdatecServerp,
       "setConfUpdatecRespons": setConfUpdatecRespons,
       "setConfUpdatecRetryfa": setConfUpdatecRetryfa,
       "setConfUpdatecRetryok": setConfUpdatecRetryok,
       "setConfUpdatecLastfir": setConfUpdatecLastfir,
       "setConfUpdatecLastcon": setConfUpdatecLastcon,
       "setConfAntithe": setConfAntithe,
       "setConfAntitheEna": setConfAntitheEna,
       "setConfAntitheCal": setConfAntitheCal,
       "setConfAntitheOut": setConfAntitheOut,
       "setConfAntitheChe": setConfAntitheChe,
       "setConfAntitheMet": setConfAntitheMet,
       "setConfAntitheIsd": setConfAntitheIsd,
       "setConfResetbu": setConfResetbu,
       "setConfOutband": setConfOutband,
       "setConfMonitor": setConfMonitor,
       "setConfMonitorTracemask1": setConfMonitorTracemask1,
       "setConfMonitorTracemask2": setConfMonitorTracemask2,
       "setConfCrashme": setConfCrashme,
       "setConfAdminge": setConfAdminge,
       "setConfAsserta": setConfAsserta,
       "setConfFunctioTable": setConfFunctioTable,
       "setConfFunctioEntry": setConfFunctioEntry,
       "setConfFunctioKey": setConfFunctioKey,
       "setConfFunctioMap": setConfFunctioMap,
       "setConfLl2m": setConfLl2m,
       "setConfLl2mOpe": setConfLl2mOpe,
       "setConfLl2mTim": setConfLl2mTim,
       "setLanc": setLanc,
       "setLancAccTable": setLancAccTable,
       "setLancAccEntry": setLancAccEntry,
       "setLancAccIpa": setLancAccIpa,
       "setLancAccIpn": setLancAccIpn,
       "setLancAccRtg": setLancAccRtg,
       "setLancUdp": setLancUdp,
       "setLancIntTable": setLancIntTable,
       "setLancIntEntry": setLancIntEntry,
       "setLancIntIfc": setLancIntIfc,
       "setLancIntOpe": setLancIntOpe,
       "setLancIntEaz": setLancIntEaz,
       "setLancIntFor": setLancIntFor,
       "setLancIntMax": setLancIntMax,
       "setLancPriTable": setLancPriTable,
       "setLancPriEntry": setLancPriEntry,
       "setLancPriIfc": setLancPriIfc,
       "setLancPriPri": setLancPriPri,
       "setTime": setTime,
       "setTimeFetch": setTimeFetch,
       "setTimeCurre": setTimeCurre,
       "setTimeTimec": setTimeTimec,
       "setTimeCalla": setTimeCalla,
       "setTimeUtcin": setTimeUtcin,
       "setTimeTimez": setTimeTimez,
       "setTimeDayli": setTimeDayli,
       "setTimeDstclTable": setTimeDstclTable,
       "setTimeDstclEntry": setTimeDstclEntry,
       "setTimeDstclEve": setTimeDstclEve,
       "setTimeDstclInd": setTimeDstclInd,
       "setTimeDstclDay": setTimeDstclDay,
       "setTimeDstclMon": setTimeDstclMon,
       "setTimeDstclHou": setTimeDstclHou,
       "setTimeDstclMin": setTimeDstclMin,
       "setTimeDstclTim": setTimeDstclTim,
       "setTimeGetti": setTimeGetti,
       "setLcr": setLcr,
       "setLcrRou": setLcrRou,
       "setLcrLan": setLcrLan,
       "setLcrTimTable": setLcrTimTable,
       "setLcrTimEntry": setLcrTimEntry,
       "setLcrTimInd": setLcrTimInd,
       "setLcrTimPre": setLcrTimPre,
       "setLcrTimDay": setLcrTimDay,
       "setLcrTimSta": setLcrTimSta,
       "setLcrTimSto": setLcrTimSto,
       "setLcrTimNum": setLcrTimNum,
       "setLcrTimFal": setLcrTimFal,
       "setLcrHolTable": setLcrHolTable,
       "setLcrHolEntry": setLcrHolEntry,
       "setLcrHolInd": setLcrHolInd,
       "setLcrHolDat": setLcrHolDat,
       "setNetb": setNetb,
       "setNetbOpe": setNetbOpe,
       "setNetbSco": setNetbSco,
       "setNetbPeeTable": setNetbPeeTable,
       "setNetbPeeEntry": setNetbPeeEntry,
       "setNetbPeeNam": setNetbPeeNam,
       "setNetbPeeTyp": setNetbPeeTyp,
       "setNetbGroTable": setNetbGroTable,
       "setNetbGroEntry": setNetbGroEntry,
       "setNetbGroGro": setNetbGroGro,
       "setNetbGroTyp": setNetbGroTyp,
       "setNetbGroIpa": setNetbGroIpa,
       "setNetbGroPee": setNetbGroPee,
       "setNetbGroTim": setNetbGroTim,
       "setNetbGroFla": setNetbGroFla,
       "setNetbGroNet": setNetbGroNet,
       "setNetbGroRtg": setNetbGroRtg,
       "setNetbHosTable": setNetbHosTable,
       "setNetbHosEntry": setNetbHosEntry,
       "setNetbHosNam": setNetbHosNam,
       "setNetbHosTyp": setNetbHosTyp,
       "setNetbHosIpa": setNetbHosIpa,
       "setNetbHosPee": setNetbHosPee,
       "setNetbHosTim": setNetbHosTim,
       "setNetbHosFla": setNetbHosFla,
       "setNetbHosNet": setNetbHosNet,
       "setNetbHosRtg": setNetbHosRtg,
       "setNetbSerTable": setNetbSerTable,
       "setNetbSerEntry": setNetbSerEntry,
       "setNetbSerHos": setNetbSerHos,
       "setNetbSerGro": setNetbSerGro,
       "setNetbSerIpa": setNetbSerIpa,
       "setNetbSerOsv": setNetbSerOsv,
       "setNetbSerSmb": setNetbSerSmb,
       "setNetbSerSer": setNetbSerSer,
       "setNetbSerPee": setNetbSerPee,
       "setNetbSerTim": setNetbSerTim,
       "setNetbSerFla": setNetbSerFla,
       "setNetbSerNet": setNetbSerNet,
       "setNetbSerRtg": setNetbSerRtg,
       "setNetbWat": setNetbWat,
       "setNetbUpd": setNetbUpd,
       "setNetbWan": setNetbWan,
       "setNetbLea": setNetbLea,
       "setNetbNetTable": setNetbNetTable,
       "setNetbNetEntry": setNetbNetEntry,
       "setNetbNetNet": setNetbNetNet,
       "setNetbNetOpe": setNetbNetOpe,
       "setNetbNetNtd": setNetbNetNtd,
       "setNetbBroTable": setNetbBroTable,
       "setNetbBroEntry": setNetbBroEntry,
       "setNetbBroBro": setNetbBroBro,
       "setNetbBroGro": setNetbBroGro,
       "setNetbBroIpa": setNetbBroIpa,
       "setNetbBroOsv": setNetbBroOsv,
       "setNetbBroSer": setNetbBroSer,
       "setNetbBroPee": setNetbBroPee,
       "setNetbBroTim": setNetbBroTim,
       "setNetbBroFla": setNetbBroFla,
       "setNetbBroNet": setNetbBroNet,
       "setNetbBroRtg": setNetbBroRtg,
       "setNetbSup": setNetbSup,
       "setDns": setDns,
       "setDnsOper": setDnsOper,
       "setDnsDoma": setDnsDoma,
       "setDnsDhcp": setDnsDhcp,
       "setDnsNetb": setDnsNetb,
       "setDnsDnslTable": setDnsDnslTable,
       "setDnsDnslEntry": setDnsDnslEntry,
       "setDnsDnslHos": setDnsDnslHos,
       "setDnsDnslIpa": setDnsDnslIpa,
       "setDnsFiltTable": setDnsFiltTable,
       "setDnsFiltEntry": setDnsFiltEntry,
       "setDnsFiltIdx": setDnsFiltIdx,
       "setDnsFiltDom": setDnsFiltDom,
       "setDnsFiltIpa": setDnsFiltIpa,
       "setDnsFiltNet": setDnsFiltNet,
       "setDnsLeas": setDnsLeas,
       "setDnsDyndTable": setDnsDyndTable,
       "setDnsDyndEntry": setDnsDyndEntry,
       "setDnsDyndHos": setDnsDyndHos,
       "setDnsDyndIpa": setDnsDyndIpa,
       "setDnsDyndTim": setDnsDyndTim,
       "setDnsDnsdTable": setDnsDnsdTable,
       "setDnsDnsdEntry": setDnsDnsdEntry,
       "setDnsDnsdDom": setDnsDnsdDom,
       "setDnsDnsdDes": setDnsDnsdDes,
       "setDnsServTable": setDnsServTable,
       "setDnsServEntry": setDnsServEntry,
       "setDnsServSer": setDnsServSer,
       "setDnsServHos": setDnsServHos,
       "setDnsServPor": setDnsServPor,
       "setDnsDynaTable": setDnsDynaTable,
       "setDnsDynaEntry": setDnsDynaEntry,
       "setDnsDynaSer": setDnsDynaSer,
       "setDnsDynaHos": setDnsDynaHos,
       "setDnsDynaPor": setDnsDynaPor,
       "setDnsReso": setDnsReso,
       "setDnsSubdTable": setDnsSubdTable,
       "setDnsSubdEntry": setDnsSubdEntry,
       "setDnsSubdNet": setDnsSubdNet,
       "setDnsSubdSub": setDnsSubdSub,
       "setAcco": setAcco,
       "setAccoOpe": setAccoOpe,
       "setAccoSav": setAccoSav,
       "setAccoSor": setAccoSor,
       "setAccoCurTable": setAccoCurTable,
       "setAccoCurEntry": setAccoCurEntry,
       "setAccoCurUsern": setAccoCurUsern,
       "setAccoCurMacad": setAccoCurMacad,
       "setAccoCurPeer": setAccoCurPeer,
       "setAccoCurConnt": setAccoCurConnt,
       "setAccoCurRxkby": setAccoCurRxkby,
       "setAccoCurTxkby": setAccoCurTxkby,
       "setAccoCurTotal": setAccoCurTotal,
       "setAccoCurConne": setAccoCurConne,
       "setAccoAccTable": setAccoAccTable,
       "setAccoAccEntry": setAccoAccEntry,
       "setAccoAccUsern": setAccoAccUsern,
       "setAccoAccMacad": setAccoAccMacad,
       "setAccoAccPeer": setAccoAccPeer,
       "setAccoAccConnt": setAccoAccConnt,
       "setAccoAccRxkby": setAccoAccRxkby,
       "setAccoAccTxkby": setAccoAccTxkby,
       "setAccoAccTotal": setAccoAccTotal,
       "setAccoAccConne": setAccoAccConne,
       "setAccoDel": setAccoDel,
       "setAccoTimTable": setAccoTimTable,
       "setAccoTimEntry": setAccoTimEntry,
       "setAccoTimInde": setAccoTimInde,
       "setAccoTimActi": setAccoTimActi,
       "setAccoTimType": setAccoTimType,
       "setAccoTimDay": setAccoTimDay,
       "setAccoTimDayo": setAccoTimDayo,
       "setAccoTimHour": setAccoTimHour,
       "setAccoTimMinu": setAccoTimMinu,
       "setAccoLasTable": setAccoLasTable,
       "setAccoLasEntry": setAccoLasEntry,
       "setAccoLasUsern": setAccoLasUsern,
       "setAccoLasMacad": setAccoLasMacad,
       "setAccoLasPeer": setAccoLasPeer,
       "setAccoLasConnt": setAccoLasConnt,
       "setAccoLasRxkby": setAccoLasRxkby,
       "setAccoLasTxkby": setAccoLasTxkby,
       "setAccoLasTotal": setAccoLasTotal,
       "setAccoLasConne": setAccoLasConne,
       "setAccoDis": setAccoDis,
       "setVpn": setVpn,
       "setVpnIsakmp": setVpnIsakmp,
       "setVpnIsakmpTimTable": setVpnIsakmpTimTable,
       "setVpnIsakmpTimEntry": setVpnIsakmpTimEntry,
       "setVpnIsakmpTimRetrlim": setVpnIsakmpTimRetrlim,
       "setVpnIsakmpTimRetrtim": setVpnIsakmpTimRetrtim,
       "setVpnIsakmpTimRetrtimu": setVpnIsakmpTimRetrtimu,
       "setVpnIsakmpTimRetrtimm": setVpnIsakmpTimRetrtimm,
       "setVpnIsakmpTimExptim": setVpnIsakmpTimExptim,
       "setVpnIsakmpTimIdx": setVpnIsakmpTimIdx,
       "setVpnProposals": setVpnProposals,
       "setVpnProposalsIkeproTable": setVpnProposalsIkeproTable,
       "setVpnProposalsIkeproEntry": setVpnProposalsIkeproEntry,
       "setVpnProposalsIkeproIkeproposall": setVpnProposalsIkeproIkeproposall,
       "setVpnProposalsIkeproIkeproposal1": setVpnProposalsIkeproIkeproposal1,
       "setVpnProposalsIkeproIkeproposal2": setVpnProposalsIkeproIkeproposal2,
       "setVpnProposalsIkeproIkeproposal3": setVpnProposalsIkeproIkeproposal3,
       "setVpnProposalsIkeproIkeproposal4": setVpnProposalsIkeproIkeproposal4,
       "setVpnProposalsIkeproIkeproposal5": setVpnProposalsIkeproIkeproposal5,
       "setVpnProposalsIkeproIkeproposal6": setVpnProposalsIkeproIkeproposal6,
       "setVpnProposalsIkeproIkeproposal7": setVpnProposalsIkeproIkeproposal7,
       "setVpnProposalsIkeproIkeproposal8": setVpnProposalsIkeproIkeproposal8,
       "setVpnProposalsIpsecpTable": setVpnProposalsIpsecpTable,
       "setVpnProposalsIpsecpEntry": setVpnProposalsIpsecpEntry,
       "setVpnProposalsIpsecpIpsecproposall": setVpnProposalsIpsecpIpsecproposall,
       "setVpnProposalsIpsecpIpsecproposal1": setVpnProposalsIpsecpIpsecproposal1,
       "setVpnProposalsIpsecpIpsecproposal2": setVpnProposalsIpsecpIpsecproposal2,
       "setVpnProposalsIpsecpIpsecproposal3": setVpnProposalsIpsecpIpsecproposal3,
       "setVpnProposalsIpsecpIpsecproposal4": setVpnProposalsIpsecpIpsecproposal4,
       "setVpnProposalsIpsecpIpsecproposal5": setVpnProposalsIpsecpIpsecproposal5,
       "setVpnProposalsIpsecpIpsecproposal6": setVpnProposalsIpsecpIpsecproposal6,
       "setVpnProposalsIpsecpIpsecproposal7": setVpnProposalsIpsecpIpsecproposal7,
       "setVpnProposalsIpsecpIpsecproposal8": setVpnProposalsIpsecpIpsecproposal8,
       "setVpnProposalsIkeTable": setVpnProposalsIkeTable,
       "setVpnProposalsIkeEntry": setVpnProposalsIkeEntry,
       "setVpnProposalsIkeName": setVpnProposalsIkeName,
       "setVpnProposalsIkeIkecrypta": setVpnProposalsIkeIkecrypta,
       "setVpnProposalsIkeIkecryptk": setVpnProposalsIkeIkecryptk,
       "setVpnProposalsIkeIkeauthal": setVpnProposalsIkeIkeauthal,
       "setVpnProposalsIkeIkeauthmo": setVpnProposalsIkeIkeauthmo,
       "setVpnProposalsIkeLifetimes": setVpnProposalsIkeLifetimes,
       "setVpnProposalsIkeLifetimek": setVpnProposalsIkeLifetimek,
       "setVpnProposalsIpsecTable": setVpnProposalsIpsecTable,
       "setVpnProposalsIpsecEntry": setVpnProposalsIpsecEntry,
       "setVpnProposalsIpsecName": setVpnProposalsIpsecName,
       "setVpnProposalsIpsecEncapsmod": setVpnProposalsIpsecEncapsmod,
       "setVpnProposalsIpsecEspcrypta": setVpnProposalsIpsecEspcrypta,
       "setVpnProposalsIpsecEspcryptk": setVpnProposalsIpsecEspcryptk,
       "setVpnProposalsIpsecEspauthal": setVpnProposalsIpsecEspauthal,
       "setVpnProposalsIpsecAhauthalg": setVpnProposalsIpsecAhauthalg,
       "setVpnProposalsIpsecIpcompalg": setVpnProposalsIpsecIpcompalg,
       "setVpnProposalsIpsecLifetimes": setVpnProposalsIpsecLifetimes,
       "setVpnProposalsIpsecLifetimek": setVpnProposalsIpsecLifetimek,
       "setVpnCertificate": setVpnCertificate,
       "setVpnCertificateIkeTable": setVpnCertificateIkeTable,
       "setVpnCertificateIkeEntry": setVpnCertificateIkeEntry,
       "setVpnCertificateIkeName": setVpnCertificateIkeName,
       "setVpnCertificateIkeRemoteiden": setVpnCertificateIkeRemoteiden,
       "setVpnCertificateIkeSharedsec": setVpnCertificateIkeSharedsec,
       "setVpnCertificateIkeSharedsecf": setVpnCertificateIkeSharedsecf,
       "setVpnCertificateIkeRemoteidty": setVpnCertificateIkeRemoteidty,
       "setVpnCertificateIkeLocalidtyp": setVpnCertificateIkeLocalidtyp,
       "setVpnCertificateIkeLocalident": setVpnCertificateIkeLocalident,
       "setVpnLayerTable": setVpnLayerTable,
       "setVpnLayerEntry": setVpnLayerEntry,
       "setVpnLayerName": setVpnLayerName,
       "setVpnLayerPfsg": setVpnLayerPfsg,
       "setVpnLayerIkeg": setVpnLayerIkeg,
       "setVpnLayerIkep": setVpnLayerIkep,
       "setVpnLayerIpse": setVpnLayerIpse,
       "setVpnLayerIkek": setVpnLayerIkek,
       "setVpnOperating": setVpnOperating,
       "setVpnVpnpeersTable": setVpnVpnpeersTable,
       "setVpnVpnpeersEntry": setVpnVpnpeersEntry,
       "setVpnVpnpeersPeer": setVpnVpnpeersPeer,
       "setVpnVpnpeersExtr": setVpnVpnpeersExtr,
       "setVpnVpnpeersLaye": setVpnVpnpeersLaye,
       "setVpnVpnpeersDyna": setVpnVpnpeersDyna,
       "setVpnVpnpeersShti": setVpnVpnpeersShti,
       "setVpnVpnpeersIkee": setVpnVpnpeersIkee,
       "setVpnVpnpeersRemo": setVpnVpnpeersRemo,
       "setVpnVpnpeersRule": setVpnVpnpeersRule,
       "setVpnVpnpeersDpdi": setVpnVpnpeersDpdi,
       "setVpnVpnpeersIkec": setVpnVpnpeersIkec,
       "setVpnVpnpeersXaut": setVpnVpnpeersXaut,
       "setVpnVpnpeersRtgt": setVpnVpnpeersRtgt,
       "setVpnAggrmodepro": setVpnAggrmodepro,
       "setVpnAggrmodeike": setVpnAggrmodeike,
       "setVpnAdditionalgTable": setVpnAdditionalgTable,
       "setVpnAdditionalgEntry": setVpnAdditionalgEntry,
       "setVpnAdditionalgPeer": setVpnAdditionalgPeer,
       "setVpnAdditionalgRemotegateway1": setVpnAdditionalgRemotegateway1,
       "setVpnAdditionalgRemotegateway2": setVpnAdditionalgRemotegateway2,
       "setVpnAdditionalgRemotegateway3": setVpnAdditionalgRemotegateway3,
       "setVpnAdditionalgRemotegateway4": setVpnAdditionalgRemotegateway4,
       "setVpnAdditionalgRemotegateway5": setVpnAdditionalgRemotegateway5,
       "setVpnAdditionalgRemotegateway6": setVpnAdditionalgRemotegateway6,
       "setVpnAdditionalgRemotegateway7": setVpnAdditionalgRemotegateway7,
       "setVpnAdditionalgRemotegateway8": setVpnAdditionalgRemotegateway8,
       "setVpnAdditionalgBeginwith": setVpnAdditionalgBeginwith,
       "setVpnAdditionalgRtgtag1": setVpnAdditionalgRtgtag1,
       "setVpnAdditionalgRtgtag2": setVpnAdditionalgRtgtag2,
       "setVpnAdditionalgRtgtag3": setVpnAdditionalgRtgtag3,
       "setVpnAdditionalgRtgtag4": setVpnAdditionalgRtgtag4,
       "setVpnAdditionalgRtgtag5": setVpnAdditionalgRtgtag5,
       "setVpnAdditionalgRtgtag6": setVpnAdditionalgRtgtag6,
       "setVpnAdditionalgRtgtag7": setVpnAdditionalgRtgtag7,
       "setVpnAdditionalgRtgtag8": setVpnAdditionalgRtgtag8,
       "setVpnAdditionalgRemotegateway9": setVpnAdditionalgRemotegateway9,
       "setVpnAdditionalgRemotegateway10": setVpnAdditionalgRemotegateway10,
       "setVpnAdditionalgRemotegateway11": setVpnAdditionalgRemotegateway11,
       "setVpnAdditionalgRemotegateway12": setVpnAdditionalgRemotegateway12,
       "setVpnAdditionalgRemotegateway13": setVpnAdditionalgRemotegateway13,
       "setVpnAdditionalgRemotegateway14": setVpnAdditionalgRemotegateway14,
       "setVpnAdditionalgRemotegateway15": setVpnAdditionalgRemotegateway15,
       "setVpnAdditionalgRemotegateway16": setVpnAdditionalgRemotegateway16,
       "setVpnAdditionalgRtgtag9": setVpnAdditionalgRtgtag9,
       "setVpnAdditionalgRtgtag10": setVpnAdditionalgRtgtag10,
       "setVpnAdditionalgRtgtag11": setVpnAdditionalgRtgtag11,
       "setVpnAdditionalgRtgtag12": setVpnAdditionalgRtgtag12,
       "setVpnAdditionalgRtgtag13": setVpnAdditionalgRtgtag13,
       "setVpnAdditionalgRtgtag14": setVpnAdditionalgRtgtag14,
       "setVpnAdditionalgRtgtag15": setVpnAdditionalgRtgtag15,
       "setVpnAdditionalgRtgtag16": setVpnAdditionalgRtgtag16,
       "setVpnMainmodepro": setVpnMainmodepro,
       "setVpnMainmodeike": setVpnMainmodeike,
       "setVpnLegacydynvp": setVpnLegacydynvp,
       "setVpnNattoperati": setVpnNattoperati,
       "setVpnSimplecertr": setVpnSimplecertr,
       "setVpnQuickmodepr": setVpnQuickmodepr,
       "setVpnQuickmodepf": setVpnQuickmodepf,
       "setVpnQuickmodesh": setVpnQuickmodesh,
       "setVpnAllowremote": setVpnAllowremote,
       "setVpnEstablishsa": setVpnEstablishsa,
       "setHttp": setHttp,
       "setHttpDoc": setHttpDoc,
       "setHttpUse": setHttpUse,
       "setHttpFon": setHttpFon,
       "setHttpErr": setHttpErr,
       "setHttpPor": setHttpPor,
       "setHttpSsl": setHttpSsl,
       "setHttpMax": setHttpMax,
       "setHttpTun": setHttpTun,
       "setHttpSes": setHttpSes,
       "setHttpSta": setHttpSta,
       "setHttpShoTable": setHttpShoTable,
       "setHttpShoEntry": setHttpShoEntry,
       "setHttpShoDev": setHttpShoDev,
       "setHttpShoPos": setHttpShoPos,
       "setHttpHtt": setHttpHtt,
       "setHttpRol": setHttpRol,
       "setHttpRolOperating": setHttpRolOperating,
       "setHttpRolTitle": setHttpRolTitle,
       "setHttpRolVariablesTable": setHttpRolVariablesTable,
       "setHttpRolVariablesEntry": setHttpRolVariablesEntry,
       "setHttpRolVariablesInd": setHttpRolVariablesInd,
       "setHttpRolVariablesIde": setHttpRolVariablesIde,
       "setHttpRolVariablesTit": setHttpRolVariablesTit,
       "setHttpRolVariablesTyp": setHttpRolVariablesTyp,
       "setHttpRolVariablesMin": setHttpRolVariablesMin,
       "setHttpRolVariablesMax": setHttpRolVariablesMax,
       "setHttpRolVariablesDef": setHttpRolVariablesDef,
       "setHttpRolActionsTable": setHttpRolActionsTable,
       "setHttpRolActionsEntry": setHttpRolActionsEntry,
       "setHttpRolActionsInd": setHttpRolActionsInd,
       "setHttpRolActionsAct": setHttpRolActionsAct,
       "setHttpRolActionsDes": setHttpRolActionsDes,
       "setHttpRolRenumberv": setHttpRolRenumberv,
       "setHttpRolRenumbera": setHttpRolRenumbera,
       "setHttpRolDisplayco": setHttpRolDisplayco,
       "setSysl": setSysl,
       "setSyslOpe": setSyslOpe,
       "setSyslSerTable": setSyslSerTable,
       "setSyslSerEntry": setSyslSerEntry,
       "setSyslSerIdx": setSyslSerIdx,
       "setSyslSerIpa": setSyslSerIpa,
       "setSyslSerSou": setSyslSerSou,
       "setSyslSerLev": setSyslSerLev,
       "setSyslSerLoo": setSyslSerLoo,
       "setSyslFacTable": setSyslFacTable,
       "setSyslFacEntry": setSyslFacEntry,
       "setSyslFacSou": setSyslFacSou,
       "setSyslFacFac": setSyslFacFac,
       "setSyslPor": setSyslPor,
       "setSyslMes": setSyslMes,
       "setInte": setInte,
       "setInteS0Table": setInteS0Table,
       "setInteS0Entry": setInteS0Entry,
       "setInteS0Ifc": setInteS0Ifc,
       "setInteS0Prot": setInteS0Prot,
       "setInteS0Llbc": setInteS0Llbc,
       "setInteS0Dial": setInteS0Dial,
       "setInteS0Maxi": setInteS0Maxi,
       "setInteS0Maxo": setInteS0Maxo,
       "setInteS0Type": setInteS0Type,
       "setInteDslTable": setInteDslTable,
       "setInteDslEntry": setInteDslEntry,
       "setInteDslIfc": setInteDslIfc,
       "setInteDslOpe": setInteDslOpe,
       "setInteDslTyp": setInteDslTyp,
       "setInteDslUps": setInteDslUps,
       "setInteDslExt": setInteDslExt,
       "setInteDslDow": setInteDslDow,
       "setInteModemmTable": setInteModemmTable,
       "setInteModemmEntry": setInteModemmEntry,
       "setInteModemmIfc": setInteModemmIfc,
       "setInteModemmOpe": setInteModemmOpe,
       "setInteModemmTyp": setInteModemmTyp,
       "setInteModemmDat": setInteModemmDat,
       "setInteModemmPro": setInteModemmPro,
       "setInteEthernTable": setInteEthernTable,
       "setInteEthernEntry": setInteEthernEntry,
       "setInteEthernPor": setInteEthernPor,
       "setInteEthernCon": setInteEthernCon,
       "setInteEthernPri": setInteEthernPri,
       "setInteEthernAss": setInteEthernAss,
       "setInteEthernMdi": setInteEthernMdi,
       "setInteModem": setInteModem,
       "setInteModemRingcou": setInteModemRingcou,
       "setInteModemEchooff": setInteModemEchooff,
       "setInteModemResetco": setInteModemResetco,
       "setInteModemInitcom": setInteModemInitcom,
       "setInteModemDialcom": setInteModemDialcom,
       "setInteModemRequest": setInteModemRequest,
       "setInteModemAnswerc": setInteModemAnswerc,
       "setInteModemDisconn": setInteModemDisconn,
       "setInteModemEscapes": setInteModemEscapes,
       "setInteModemEscapep": setInteModemEscapep,
       "setInteModemInitdia": setInteModemInitdia,
       "setInteModemInitans": setInteModemInitans,
       "setInteModemCycleti": setInteModemCycleti,
       "setInteModemAtpollc": setInteModemAtpollc,
       "setInteMobile": setInteMobile,
       "setInteMobileProTable": setInteMobileProTable,
       "setInteMobileProEntry": setInteMobileProEntry,
       "setInteMobileProProf": setInteMobileProProf,
       "setInteMobileProPin": setInteMobileProPin,
       "setInteMobileProApn": setInteMobileProApn,
       "setInteMobileProNetw": setInteMobileProNetw,
       "setInteMobileProSele": setInteMobileProSele,
       "setInteMobileProMode": setInteMobileProMode,
       "setInteMobileProQosd": setInteMobileProQosd,
       "setInteMobileProQosu": setInteMobileProQosu,
       "setInteMobileSca": setInteMobileSca,
       "setInteMobileInp": setInteMobileInp,
       "setInteMobileCon": setInteMobileCon,
       "setInteMobileTri": setInteMobileTri,
       "setInteMobileHis": setInteMobileHis,
       "setInteMobileSys": setInteMobileSys,
       "setRadi": setRadi,
       "setRadiAutht": setRadiAutht,
       "setRadiAuthr": setRadiAuthr,
       "setRadiBacku": setRadiBacku,
       "setNtp": setNtp,
       "setNtpSer": setNtpSer,
       "setNtpBcm": setNtpBcm,
       "setNtpBci": setNtpBci,
       "setNtpRqi": setNtpRqi,
       "setNtpRqaTable": setNtpRqaTable,
       "setNtpRqaEntry": setNtpRqaEntry,
       "setNtpRqaRqa": setNtpRqaRqa,
       "setNtpRqaLoo": setNtpRqaLoo,
       "setNtpRqt": setNtpRqt,
       "setMail": setMail,
       "setMailSmtps": setMailSmtps,
       "setMailSmtpp": setMailSmtpp,
       "setMailPop3s": setMailPop3s,
       "setMailPop3p": setMailPop3p,
       "setMailUsern": setMailUsern,
       "setMailPassw": setMailPassw,
       "setMailEmail": setMailEmail,
       "setMailSenda": setMailSenda,
       "setMailHoldt": setMailHoldt,
       "setMailBuffe": setMailBuffe,
       "setMailLoopb": setMailLoopb,
       "setPppo": setPppo,
       "setPppoOpe": setPppoOpe,
       "setPppoNamTable": setPppoNamTable,
       "setPppoNamEntry": setPppoNamEntry,
       "setPppoNamPee": setPppoNamPee,
       "setPppoNamSht": setPppoNamSht,
       "setPppoNamMac": setPppoNamMac,
       "setPppoSer": setPppoSer,
       "setPppoSes": setPppoSes,
       "setPppoPorTable": setPppoPorTable,
       "setPppoPorEntry": setPppoPorEntry,
       "setPppoPorPor": setPppoPorPor,
       "setPppoPorEna": setPppoPorEna,
       "setVlan": setVlan,
       "setVlanNetTable": setVlanNetTable,
       "setVlanNetEntry": setVlanNetEntry,
       "setVlanNetNam": setVlanNetNam,
       "setVlanNetVla": setVlanNetVla,
       "setVlanNetPor": setVlanNetPor,
       "setVlanPorTable": setVlanPorTable,
       "setVlanPorEntry": setVlanPorEntry,
       "setVlanPorPort": setVlanPorPort,
       "setVlanPorAllow": setVlanPorAllow,
       "setVlanPorPortv": setVlanPorPortv,
       "setVlanPorTaggi": setVlanPorTaggi,
       "setVlanOpe": setVlanOpe,
       "setVlanTag": setVlanTag,
       "setPrin": setPrin,
       "setPrinPriTable": setPrinPriTable,
       "setPrinPriEntry": setPrinPriEntry,
       "setPrinPriPri": setPrinPriPri,
       "setPrinPriRaw": setPrinPriRaw,
       "setPrinPriLpd": setPrinPriLpd,
       "setPrinPriAct": setPrinPriAct,
       "setPrinPriBid": setPrinPriBid,
       "setPrinPriRes": setPrinPriRes,
       "setPrinAccTable": setPrinAccTable,
       "setPrinAccEntry": setPrinAccEntry,
       "setPrinAccIpa": setPrinAccIpa,
       "setPrinAccIpn": setPrinAccIpn,
       "setPrinAccRtg": setPrinAccRtg,
       "setEcho": setEcho,
       "setEchoOpe": setEchoOpe,
       "setEchoAccTable": setEchoAccTable,
       "setEchoAccEntry": setEchoAccEntry,
       "setEchoAccIpa": setEchoAccIpa,
       "setEchoAccNet": setEchoAccNet,
       "setEchoAccPro": setEchoAccPro,
       "setEchoAccAct": setEchoAccAct,
       "setEchoAccCom": setEchoAccCom,
       "setEchoTcp": setEchoTcp,
       "setPerf": setPerf,
       "setPerfRttmonaTable": setPerfRttmonaTable,
       "setPerfRttmonaEntry": setPerfRttmonaEntry,
       "setPerfRttmonaInd": setPerfRttmonaInd,
       "setPerfRttmonaTyp": setPerfRttmonaTyp,
       "setPerfRttmonaFre": setPerfRttmonaFre,
       "setPerfRttmonaTim": setPerfRttmonaTim,
       "setPerfRttmonaSta": setPerfRttmonaSta,
       "setPerfRttmoneTable": setPerfRttmoneTable,
       "setPerfRttmoneEntry": setPerfRttmoneEntry,
       "setPerfRttmoneProtocol": setPerfRttmoneProtocol,
       "setPerfRttmoneDestinationa": setPerfRttmoneDestinationa,
       "setPerfRttmonePacketsize": setPerfRttmonePacketsize,
       "setPerfRttmoneDestinationp": setPerfRttmoneDestinationp,
       "setPerfRttmoneInterval": setPerfRttmoneInterval,
       "setPerfRttmonePacketcount": setPerfRttmonePacketcount,
       "setPerfRttmoneIndex": setPerfRttmoneIndex,
       "setPerfRttmonsTable": setPerfRttmonsTable,
       "setPerfRttmonsEntry": setPerfRttmonsEntry,
       "setPerfRttmonsCompletions": setPerfRttmonsCompletions,
       "setPerfRttmonsRttcount": setPerfRttmonsRttcount,
       "setPerfRttmonsRttsum": setPerfRttmonsRttsum,
       "setPerfRttmonsRttmin": setPerfRttmonsRttmin,
       "setPerfRttmonsRttmax": setPerfRttmonsRttmax,
       "setPerfRttmonsJitterminpossd": setPerfRttmonsJitterminpossd,
       "setPerfRttmonsJittermaxpossd": setPerfRttmonsJittermaxpossd,
       "setPerfRttmonsJittercountposs": setPerfRttmonsJittercountposs,
       "setPerfRttmonsJittersumpossd": setPerfRttmonsJittersumpossd,
       "setPerfRttmonsJitterminposds": setPerfRttmonsJitterminposds,
       "setPerfRttmonsJittermaxposds": setPerfRttmonsJittermaxposds,
       "setPerfRttmonsJittercountposd": setPerfRttmonsJittercountposd,
       "setPerfRttmonsJittersumposds": setPerfRttmonsJittersumposds,
       "setPerfRttmonsJitterminnegsd": setPerfRttmonsJitterminnegsd,
       "setPerfRttmonsJittermaxnegsd": setPerfRttmonsJittermaxnegsd,
       "setPerfRttmonsJittercountnegs": setPerfRttmonsJittercountnegs,
       "setPerfRttmonsJittersumnegsd": setPerfRttmonsJittersumnegsd,
       "setPerfRttmonsJitterminnegds": setPerfRttmonsJitterminnegds,
       "setPerfRttmonsJittermaxnegds": setPerfRttmonsJittermaxnegds,
       "setPerfRttmonsJittercountnegd": setPerfRttmonsJittercountnegd,
       "setPerfRttmonsJittersumnegds": setPerfRttmonsJittersumnegds,
       "setPerfRttmonsPacketlosssd": setPerfRttmonsPacketlosssd,
       "setPerfRttmonsPacketlossds": setPerfRttmonsPacketlossds,
       "setPerfRttmonsAveragejitter": setPerfRttmonsAveragejitter,
       "setPerfRttmonsAveragejittersd": setPerfRttmonsAveragejittersd,
       "setPerfRttmonsAveragejitterds": setPerfRttmonsAveragejitterds,
       "setPerfRttmonsIndex": setPerfRttmonsIndex,
       "setCert": setCert,
       "setCertSce": setCertSce,
       "setCertSceSce": setCertSceSce,
       "setCertSceDev": setCertSceDev,
       "setCertSceCac": setCertSceCac,
       "setCertSceCasTable": setCertSceCasTable,
       "setCertSceCasEntry": setCertSceCasEntry,
       "setCertSceCasName": setCertSceCasName,
       "setCertSceCasUrl": setCertSceCasUrl,
       "setCertSceCasDn": setCertSceCasDn,
       "setCertSceCasEncalg": setCertSceCasEncalg,
       "setCertSceCasIdentifier": setCertSceCasIdentifier,
       "setCertSceCasCasignaturealg": setCertSceCasCasignaturealg,
       "setCertSceCasRaautoapprove": setCertSceCasRaautoapprove,
       "setCertSceCasCafingerprinta": setCertSceCasCafingerprinta,
       "setCertSceCasCafingerprint": setCertSceCasCafingerprint,
       "setCertSceCasApplication": setCertSceCasApplication,
       "setCertSceCasLoopbackaddr": setCertSceCasLoopbackaddr,
       "setCertSceCerTable": setCertSceCerTable,
       "setCertSceCerEntry": setCertSceCerEntry,
       "setCertSceCerName": setCertSceCerName,
       "setCertSceCerCadn": setCertSceCerCadn,
       "setCertSceCerSubject": setCertSceCerSubject,
       "setCertSceCerChalleng": setCertSceCerChalleng,
       "setCertSceCerSubjecta": setCertSceCerSubjecta,
       "setCertSceCerKeyusage": setCertSceCerKeyusage,
       "setCertSceCerDevicece": setCertSceCerDevicece,
       "setCertSceCerApplicat": setCertSceCerApplicat,
       "setCertSceCerExtended": setCertSceCerExtended,
       "setCertSceRei": setCertSceRei,
       "setCertSceUpd": setCertSceUpd,
       "setCertSceCle": setCertSceCle,
       "setCertSceRet": setCertSceRet,
       "setCertSceChe": setCertSceChe,
       "setCertCrl": setCertCrl,
       "setCertCrlCrl": setCertCrlCrl,
       "setCertCrlAlt": setCertCrlAlt,
       "setCertCrlUse": setCertCrlUse,
       "setCertCrlUpd": setCertCrlUpd,
       "setCertCrlPre": setCertCrlPre,
       "setCertCrlVal": setCertCrlVal,
       "setCertCrlRef": setCertCrlRef,
       "setComp": setComp,
       "setCompDevTable": setCompDevTable,
       "setCompDevEntry": setCompDevEntry,
       "setCompDevDev": setCompDevDev,
       "setCompDevSer": setCompDevSer,
       "setCompCom": setCompCom,
       "setCompComOpeTable": setCompComOpeTable,
       "setCompComOpeEntry": setCompComOpeEntry,
       "setCompComOpeDev": setCompComOpeDev,
       "setCompComOpePor": setCompComOpePor,
       "setCompComOpeOpe": setCompComOpeOpe,
       "setCompComComTable": setCompComComTable,
       "setCompComComEntry": setCompComComEntry,
       "setCompComComDevice": setCompComComDevice,
       "setCompComComPortnu": setCompComComPortnu,
       "setCompComComBitrat": setCompComComBitrat,
       "setCompComComDatabi": setCompComComDatabi,
       "setCompComComParity": setCompComComParity,
       "setCompComComStopbi": setCompComComStopbi,
       "setCompComComHandsh": setCompComComHandsh,
       "setCompComComReadyc": setCompComComReadyc,
       "setCompComComReadyd": setCompComComReadyd,
       "setCompComNetTable": setCompComNetTable,
       "setCompComNetEntry": setCompComNetEntry,
       "setCompComNetDevicety": setCompComNetDevicety,
       "setCompComNetPortnumb": setCompComNetPortnumb,
       "setCompComNetTcpmode": setCompComNetTcpmode,
       "setCompComNetListenpo": setCompComNetListenpo,
       "setCompComNetConnecth": setCompComNetConnecth,
       "setCompComNetConnectp": setCompComNetConnectp,
       "setCompComNetLoopback": setCompComNetLoopback,
       "setCompComNetRfc2217e": setCompComNetRfc2217e,
       "setCompComNetNewlinec": setCompComNetNewlinec,
       "setCompWan": setCompWan,
       "setCompWanDevTable": setCompWanDevTable,
       "setCompWanDevEntry": setCompWanDevEntry,
       "setCompWanDevDev": setCompWanDevDev,
       "setCompWanDevOpe": setCompWanDevOpe,
       "setTaca": setTaca,
       "setTacaAuthentication": setTacaAuthentication,
       "setTacaAuthorisation": setTacaAuthorisation,
       "setTacaAccounting": setTacaAccounting,
       "setTacaSharedsecret": setTacaSharedsecret,
       "setTacaEncryption": setTacaEncryption,
       "setTacaServerTable": setTacaServerTable,
       "setTacaServerEntry": setTacaServerEntry,
       "setTacaServerSer": setTacaServerSer,
       "setTacaServerLoo": setTacaServerLoo,
       "setTacaServerCom": setTacaServerCom,
       "setTacaFallbacktolocalus": setTacaFallbacktolocalus,
       "setTacaSnmpgetrequestsau": setTacaSnmpgetrequestsau,
       "setTacaSnmpgetrequestsac": setTacaSnmpgetrequestsac,
       "fir": fir,
       "firVerTable": firVerTable,
       "firVerEntry": firVerEntry,
       "firVerIfc": firVerIfc,
       "firVerMod": firVerMod,
       "firVerVer": firVerVer,
       "firVerSer": firVerSer,
       "firTabTable": firTabTable,
       "firTabEntry": firTabEntry,
       "firTabPos": firTabPos,
       "firTabSta": firTabSta,
       "firTabVer": firTabVer,
       "firTabDat": firTabDat,
       "firTabSiz": firTabSiz,
       "firTabInd": firTabInd,
       "firMod": firMod,
       "firTim": firTim,
       "firFea": firFea,
       "oth": oth,
       "othMan": othMan,
       "othManCon": othManCon,
       "othManDis": othManDis,
       "othBoo": othBoo,
       "othCol": othCol}
)
