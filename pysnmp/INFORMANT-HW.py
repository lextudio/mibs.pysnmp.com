# SNMP MIB module (INFORMANT-HW) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/INFORMANT-HW
# Produced by pysmi-1.5.4 at Mon Oct 14 22:09:13 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DateAndTime,
 DisplayString,
 TextualConvention,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "TextualConvention",
    "TruthValue")

(WtcsDisplayString,
 informant) = mibBuilder.importSymbols(
    "WTCS",
    "WtcsDisplayString",
    "informant")


# MODULE-IDENTITY

wmiHardware = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21)
)
wmiHardware.setRevisions(
        ("2007-05-24 23:24",
         "2004-11-03 21:35")
)


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_WmiCoolingDevice_ObjectIdentity = ObjectIdentity
wmiCoolingDevice = _WmiCoolingDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1)
)
if mibBuilder.loadTexts:
    wmiCoolingDevice.setStatus("current")
_Win32FanTable_Object = MibTable
win32FanTable = _Win32FanTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1)
)
if mibBuilder.loadTexts:
    win32FanTable.setStatus("current")
_Win32FanEntry_Object = MibTableRow
win32FanEntry = _Win32FanEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1)
)
win32FanEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwfanIndex"),
)
if mibBuilder.loadTexts:
    win32FanEntry.setStatus("current")


class _HwfanIndex_Type(Integer32):
    """Custom type hwfanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwfanIndex_Type.__name__ = "Integer32"
_HwfanIndex_Object = MibTableColumn
hwfanIndex = _HwfanIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 1),
    _HwfanIndex_Type()
)
hwfanIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanIndex.setStatus("current")
_HwfanActiveCooling_Type = TruthValue
_HwfanActiveCooling_Object = MibTableColumn
hwfanActiveCooling = _HwfanActiveCooling_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 2),
    _HwfanActiveCooling_Type()
)
hwfanActiveCooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanActiveCooling.setStatus("current")


class _HwfanAvailability_Type(Integer32):
    """Custom type hwfanAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwfanAvailability_Type.__name__ = "Integer32"
_HwfanAvailability_Object = MibTableColumn
hwfanAvailability = _HwfanAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 3),
    _HwfanAvailability_Type()
)
hwfanAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanAvailability.setStatus("current")
_HwfanCaption_Type = WtcsDisplayString
_HwfanCaption_Object = MibTableColumn
hwfanCaption = _HwfanCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 4),
    _HwfanCaption_Type()
)
hwfanCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanCaption.setStatus("current")


class _HwfanConfigManagerErrorCode_Type(Integer32):
    """Custom type hwfanConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwfanConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwfanConfigManagerErrorCode_Object = MibTableColumn
hwfanConfigManagerErrorCode = _HwfanConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 5),
    _HwfanConfigManagerErrorCode_Type()
)
hwfanConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanConfigManagerErrorCode.setStatus("current")
_HwfanConfigManagerUserConfig_Type = TruthValue
_HwfanConfigManagerUserConfig_Object = MibTableColumn
hwfanConfigManagerUserConfig = _HwfanConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 6),
    _HwfanConfigManagerUserConfig_Type()
)
hwfanConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanConfigManagerUserConfig.setStatus("current")


class _HwfanCreationClassName_Type(WtcsDisplayString):
    """Custom type hwfanCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwfanCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwfanCreationClassName_Object = MibTableColumn
hwfanCreationClassName = _HwfanCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 7),
    _HwfanCreationClassName_Type()
)
hwfanCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanCreationClassName.setStatus("current")
_HwfanDescription_Type = WtcsDisplayString
_HwfanDescription_Object = MibTableColumn
hwfanDescription = _HwfanDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 8),
    _HwfanDescription_Type()
)
hwfanDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanDescription.setStatus("current")
_HwfanDesiredSpeed_Type = Gauge32
_HwfanDesiredSpeed_Object = MibTableColumn
hwfanDesiredSpeed = _HwfanDesiredSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 9),
    _HwfanDesiredSpeed_Type()
)
hwfanDesiredSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanDesiredSpeed.setStatus("current")
_HwfanDeviceID_Type = WtcsDisplayString
_HwfanDeviceID_Object = MibTableColumn
hwfanDeviceID = _HwfanDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 10),
    _HwfanDeviceID_Type()
)
hwfanDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanDeviceID.setStatus("current")
_HwfanErrorCleared_Type = TruthValue
_HwfanErrorCleared_Object = MibTableColumn
hwfanErrorCleared = _HwfanErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 11),
    _HwfanErrorCleared_Type()
)
hwfanErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanErrorCleared.setStatus("current")
_HwfanErrorDescription_Type = WtcsDisplayString
_HwfanErrorDescription_Object = MibTableColumn
hwfanErrorDescription = _HwfanErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 12),
    _HwfanErrorDescription_Type()
)
hwfanErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanErrorDescription.setStatus("current")
_HwfanInstallDate_Type = DateAndTime
_HwfanInstallDate_Object = MibTableColumn
hwfanInstallDate = _HwfanInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 13),
    _HwfanInstallDate_Type()
)
hwfanInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanInstallDate.setStatus("current")
_HwfanLastErrorCode_Type = Gauge32
_HwfanLastErrorCode_Object = MibTableColumn
hwfanLastErrorCode = _HwfanLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 14),
    _HwfanLastErrorCode_Type()
)
hwfanLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanLastErrorCode.setStatus("current")
_HwfanName_Type = WtcsDisplayString
_HwfanName_Object = MibTableColumn
hwfanName = _HwfanName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 15),
    _HwfanName_Type()
)
hwfanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanName.setStatus("current")
_HwfanPNPDeviceID_Type = WtcsDisplayString
_HwfanPNPDeviceID_Object = MibTableColumn
hwfanPNPDeviceID = _HwfanPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 16),
    _HwfanPNPDeviceID_Type()
)
hwfanPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanPNPDeviceID.setStatus("current")
_HwfanPowerManagementCapabilities_Type = WtcsDisplayString
_HwfanPowerManagementCapabilities_Object = MibTableColumn
hwfanPowerManagementCapabilities = _HwfanPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 17),
    _HwfanPowerManagementCapabilities_Type()
)
hwfanPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanPowerManagementCapabilities.setStatus("current")
_HwfanPowerManagementSupported_Type = TruthValue
_HwfanPowerManagementSupported_Object = MibTableColumn
hwfanPowerManagementSupported = _HwfanPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 18),
    _HwfanPowerManagementSupported_Type()
)
hwfanPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanPowerManagementSupported.setStatus("current")


class _HwfanStatus_Type(Integer32):
    """Custom type hwfanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwfanStatus_Type.__name__ = "Integer32"
_HwfanStatus_Object = MibTableColumn
hwfanStatus = _HwfanStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 19),
    _HwfanStatus_Type()
)
hwfanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanStatus.setStatus("current")


class _HwfanStatusInfo_Type(Integer32):
    """Custom type hwfanStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwfanStatusInfo_Type.__name__ = "Integer32"
_HwfanStatusInfo_Object = MibTableColumn
hwfanStatusInfo = _HwfanStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 20),
    _HwfanStatusInfo_Type()
)
hwfanStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanStatusInfo.setStatus("current")
_HwfanSystemCreationClassName_Type = WtcsDisplayString
_HwfanSystemCreationClassName_Object = MibTableColumn
hwfanSystemCreationClassName = _HwfanSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 21),
    _HwfanSystemCreationClassName_Type()
)
hwfanSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanSystemCreationClassName.setStatus("current")
_HwfanSystemName_Type = WtcsDisplayString
_HwfanSystemName_Object = MibTableColumn
hwfanSystemName = _HwfanSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 22),
    _HwfanSystemName_Type()
)
hwfanSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanSystemName.setStatus("current")
_HwfanVariableSpeed_Type = TruthValue
_HwfanVariableSpeed_Object = MibTableColumn
hwfanVariableSpeed = _HwfanVariableSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 1, 1, 23),
    _HwfanVariableSpeed_Type()
)
hwfanVariableSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfanVariableSpeed.setStatus("current")
_Win32HeatPipeTable_Object = MibTable
win32HeatPipeTable = _Win32HeatPipeTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2)
)
if mibBuilder.loadTexts:
    win32HeatPipeTable.setStatus("current")
_Win32HeatPipeEntry_Object = MibTableRow
win32HeatPipeEntry = _Win32HeatPipeEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1)
)
win32HeatPipeEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwhpIndex"),
)
if mibBuilder.loadTexts:
    win32HeatPipeEntry.setStatus("current")


class _HwhpIndex_Type(Integer32):
    """Custom type hwhpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwhpIndex_Type.__name__ = "Integer32"
_HwhpIndex_Object = MibTableColumn
hwhpIndex = _HwhpIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 1),
    _HwhpIndex_Type()
)
hwhpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpIndex.setStatus("current")
_HwhpActiveCooling_Type = TruthValue
_HwhpActiveCooling_Object = MibTableColumn
hwhpActiveCooling = _HwhpActiveCooling_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 2),
    _HwhpActiveCooling_Type()
)
hwhpActiveCooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpActiveCooling.setStatus("current")


class _HwhpAvailability_Type(Integer32):
    """Custom type hwhpAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwhpAvailability_Type.__name__ = "Integer32"
_HwhpAvailability_Object = MibTableColumn
hwhpAvailability = _HwhpAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 3),
    _HwhpAvailability_Type()
)
hwhpAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpAvailability.setStatus("current")
_HwhpCaption_Type = WtcsDisplayString
_HwhpCaption_Object = MibTableColumn
hwhpCaption = _HwhpCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 4),
    _HwhpCaption_Type()
)
hwhpCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpCaption.setStatus("current")


class _HwhpConfigManagerErrorCode_Type(Integer32):
    """Custom type hwhpConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwhpConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwhpConfigManagerErrorCode_Object = MibTableColumn
hwhpConfigManagerErrorCode = _HwhpConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 5),
    _HwhpConfigManagerErrorCode_Type()
)
hwhpConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpConfigManagerErrorCode.setStatus("current")
_HwhpConfigManagerUserConfig_Type = TruthValue
_HwhpConfigManagerUserConfig_Object = MibTableColumn
hwhpConfigManagerUserConfig = _HwhpConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 6),
    _HwhpConfigManagerUserConfig_Type()
)
hwhpConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpConfigManagerUserConfig.setStatus("current")


class _HwhpCreationClassName_Type(WtcsDisplayString):
    """Custom type hwhpCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwhpCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwhpCreationClassName_Object = MibTableColumn
hwhpCreationClassName = _HwhpCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 7),
    _HwhpCreationClassName_Type()
)
hwhpCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpCreationClassName.setStatus("current")
_HwhpDescription_Type = WtcsDisplayString
_HwhpDescription_Object = MibTableColumn
hwhpDescription = _HwhpDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 8),
    _HwhpDescription_Type()
)
hwhpDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpDescription.setStatus("current")
_HwhpDeviceID_Type = WtcsDisplayString
_HwhpDeviceID_Object = MibTableColumn
hwhpDeviceID = _HwhpDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 9),
    _HwhpDeviceID_Type()
)
hwhpDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpDeviceID.setStatus("current")
_HwhpErrorCleared_Type = TruthValue
_HwhpErrorCleared_Object = MibTableColumn
hwhpErrorCleared = _HwhpErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 10),
    _HwhpErrorCleared_Type()
)
hwhpErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpErrorCleared.setStatus("current")
_HwhpErrorDescription_Type = WtcsDisplayString
_HwhpErrorDescription_Object = MibTableColumn
hwhpErrorDescription = _HwhpErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 11),
    _HwhpErrorDescription_Type()
)
hwhpErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpErrorDescription.setStatus("current")
_HwhpInstallDate_Type = DateAndTime
_HwhpInstallDate_Object = MibTableColumn
hwhpInstallDate = _HwhpInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 12),
    _HwhpInstallDate_Type()
)
hwhpInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpInstallDate.setStatus("current")
_HwhpLastErrorCode_Type = Gauge32
_HwhpLastErrorCode_Object = MibTableColumn
hwhpLastErrorCode = _HwhpLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 13),
    _HwhpLastErrorCode_Type()
)
hwhpLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpLastErrorCode.setStatus("current")
_HwhpName_Type = WtcsDisplayString
_HwhpName_Object = MibTableColumn
hwhpName = _HwhpName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 14),
    _HwhpName_Type()
)
hwhpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpName.setStatus("current")
_HwhpPNPDeviceID_Type = WtcsDisplayString
_HwhpPNPDeviceID_Object = MibTableColumn
hwhpPNPDeviceID = _HwhpPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 15),
    _HwhpPNPDeviceID_Type()
)
hwhpPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpPNPDeviceID.setStatus("current")
_HwhpPowerManagementCapabilities_Type = WtcsDisplayString
_HwhpPowerManagementCapabilities_Object = MibTableColumn
hwhpPowerManagementCapabilities = _HwhpPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 16),
    _HwhpPowerManagementCapabilities_Type()
)
hwhpPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpPowerManagementCapabilities.setStatus("current")
_HwhpPowerManagementSupported_Type = TruthValue
_HwhpPowerManagementSupported_Object = MibTableColumn
hwhpPowerManagementSupported = _HwhpPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 17),
    _HwhpPowerManagementSupported_Type()
)
hwhpPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpPowerManagementSupported.setStatus("current")


class _HwhpStatus_Type(Integer32):
    """Custom type hwhpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwhpStatus_Type.__name__ = "Integer32"
_HwhpStatus_Object = MibTableColumn
hwhpStatus = _HwhpStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 18),
    _HwhpStatus_Type()
)
hwhpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpStatus.setStatus("current")


class _HwhpStatusInfo_Type(Integer32):
    """Custom type hwhpStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwhpStatusInfo_Type.__name__ = "Integer32"
_HwhpStatusInfo_Object = MibTableColumn
hwhpStatusInfo = _HwhpStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 19),
    _HwhpStatusInfo_Type()
)
hwhpStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpStatusInfo.setStatus("current")
_HwhpSystemCreationClassName_Type = WtcsDisplayString
_HwhpSystemCreationClassName_Object = MibTableColumn
hwhpSystemCreationClassName = _HwhpSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 20),
    _HwhpSystemCreationClassName_Type()
)
hwhpSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpSystemCreationClassName.setStatus("current")
_HwhpSystemName_Type = WtcsDisplayString
_HwhpSystemName_Object = MibTableColumn
hwhpSystemName = _HwhpSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 2, 1, 21),
    _HwhpSystemName_Type()
)
hwhpSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwhpSystemName.setStatus("current")
_Win32RefrigerationTable_Object = MibTable
win32RefrigerationTable = _Win32RefrigerationTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3)
)
if mibBuilder.loadTexts:
    win32RefrigerationTable.setStatus("current")
_Win32RefrigerationEntry_Object = MibTableRow
win32RefrigerationEntry = _Win32RefrigerationEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1)
)
win32RefrigerationEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwrfgIndex"),
)
if mibBuilder.loadTexts:
    win32RefrigerationEntry.setStatus("current")


class _HwrfgIndex_Type(Integer32):
    """Custom type hwrfgIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwrfgIndex_Type.__name__ = "Integer32"
_HwrfgIndex_Object = MibTableColumn
hwrfgIndex = _HwrfgIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 1),
    _HwrfgIndex_Type()
)
hwrfgIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgIndex.setStatus("current")
_HwrfgActiveCooling_Type = TruthValue
_HwrfgActiveCooling_Object = MibTableColumn
hwrfgActiveCooling = _HwrfgActiveCooling_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 2),
    _HwrfgActiveCooling_Type()
)
hwrfgActiveCooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgActiveCooling.setStatus("current")


class _HwrfgAvailability_Type(Integer32):
    """Custom type hwrfgAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwrfgAvailability_Type.__name__ = "Integer32"
_HwrfgAvailability_Object = MibTableColumn
hwrfgAvailability = _HwrfgAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 3),
    _HwrfgAvailability_Type()
)
hwrfgAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgAvailability.setStatus("current")


class _HwrfgCaption_Type(WtcsDisplayString):
    """Custom type hwrfgCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwrfgCaption_Type.__name__ = "WtcsDisplayString"
_HwrfgCaption_Object = MibTableColumn
hwrfgCaption = _HwrfgCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 4),
    _HwrfgCaption_Type()
)
hwrfgCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgCaption.setStatus("current")


class _HwrfgConfigManagerErrorCode_Type(Integer32):
    """Custom type hwrfgConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwrfgConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwrfgConfigManagerErrorCode_Object = MibTableColumn
hwrfgConfigManagerErrorCode = _HwrfgConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 5),
    _HwrfgConfigManagerErrorCode_Type()
)
hwrfgConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgConfigManagerErrorCode.setStatus("current")
_HwrfgConfigManagerUserConfig_Type = TruthValue
_HwrfgConfigManagerUserConfig_Object = MibTableColumn
hwrfgConfigManagerUserConfig = _HwrfgConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 6),
    _HwrfgConfigManagerUserConfig_Type()
)
hwrfgConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgConfigManagerUserConfig.setStatus("current")


class _HwrfgCreationClassName_Type(WtcsDisplayString):
    """Custom type hwrfgCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwrfgCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwrfgCreationClassName_Object = MibTableColumn
hwrfgCreationClassName = _HwrfgCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 7),
    _HwrfgCreationClassName_Type()
)
hwrfgCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgCreationClassName.setStatus("current")
_HwrfgDescription_Type = WtcsDisplayString
_HwrfgDescription_Object = MibTableColumn
hwrfgDescription = _HwrfgDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 8),
    _HwrfgDescription_Type()
)
hwrfgDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgDescription.setStatus("current")
_HwrfgDeviceID_Type = WtcsDisplayString
_HwrfgDeviceID_Object = MibTableColumn
hwrfgDeviceID = _HwrfgDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 9),
    _HwrfgDeviceID_Type()
)
hwrfgDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgDeviceID.setStatus("current")
_HwrfgErrorCleared_Type = TruthValue
_HwrfgErrorCleared_Object = MibTableColumn
hwrfgErrorCleared = _HwrfgErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 10),
    _HwrfgErrorCleared_Type()
)
hwrfgErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgErrorCleared.setStatus("current")
_HwrfgErrorDescription_Type = WtcsDisplayString
_HwrfgErrorDescription_Object = MibTableColumn
hwrfgErrorDescription = _HwrfgErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 11),
    _HwrfgErrorDescription_Type()
)
hwrfgErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgErrorDescription.setStatus("current")
_HwrfgInstallDate_Type = DateAndTime
_HwrfgInstallDate_Object = MibTableColumn
hwrfgInstallDate = _HwrfgInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 12),
    _HwrfgInstallDate_Type()
)
hwrfgInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgInstallDate.setStatus("current")
_HwrfgLastErrorCode_Type = Gauge32
_HwrfgLastErrorCode_Object = MibTableColumn
hwrfgLastErrorCode = _HwrfgLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 13),
    _HwrfgLastErrorCode_Type()
)
hwrfgLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgLastErrorCode.setStatus("current")
_HwrfgName_Type = WtcsDisplayString
_HwrfgName_Object = MibTableColumn
hwrfgName = _HwrfgName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 14),
    _HwrfgName_Type()
)
hwrfgName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgName.setStatus("current")
_HwrfgPNPDeviceID_Type = WtcsDisplayString
_HwrfgPNPDeviceID_Object = MibTableColumn
hwrfgPNPDeviceID = _HwrfgPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 15),
    _HwrfgPNPDeviceID_Type()
)
hwrfgPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgPNPDeviceID.setStatus("current")
_HwrfgPowerManagementCapabilities_Type = WtcsDisplayString
_HwrfgPowerManagementCapabilities_Object = MibTableColumn
hwrfgPowerManagementCapabilities = _HwrfgPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 16),
    _HwrfgPowerManagementCapabilities_Type()
)
hwrfgPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgPowerManagementCapabilities.setStatus("current")
_HwrfgPowerManagementSupported_Type = TruthValue
_HwrfgPowerManagementSupported_Object = MibTableColumn
hwrfgPowerManagementSupported = _HwrfgPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 17),
    _HwrfgPowerManagementSupported_Type()
)
hwrfgPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgPowerManagementSupported.setStatus("current")


class _HwrfgStatus_Type(Integer32):
    """Custom type hwrfgStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwrfgStatus_Type.__name__ = "Integer32"
_HwrfgStatus_Object = MibTableColumn
hwrfgStatus = _HwrfgStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 18),
    _HwrfgStatus_Type()
)
hwrfgStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgStatus.setStatus("current")


class _HwrfgStatusInfo_Type(Integer32):
    """Custom type hwrfgStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwrfgStatusInfo_Type.__name__ = "Integer32"
_HwrfgStatusInfo_Object = MibTableColumn
hwrfgStatusInfo = _HwrfgStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 19),
    _HwrfgStatusInfo_Type()
)
hwrfgStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgStatusInfo.setStatus("current")
_HwrfgSystemCreationClassName_Type = WtcsDisplayString
_HwrfgSystemCreationClassName_Object = MibTableColumn
hwrfgSystemCreationClassName = _HwrfgSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 20),
    _HwrfgSystemCreationClassName_Type()
)
hwrfgSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgSystemCreationClassName.setStatus("current")
_HwrfgSystemName_Type = WtcsDisplayString
_HwrfgSystemName_Object = MibTableColumn
hwrfgSystemName = _HwrfgSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 3, 1, 21),
    _HwrfgSystemName_Type()
)
hwrfgSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwrfgSystemName.setStatus("current")
_Win32TemperatureProbeTable_Object = MibTable
win32TemperatureProbeTable = _Win32TemperatureProbeTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4)
)
if mibBuilder.loadTexts:
    win32TemperatureProbeTable.setStatus("current")
_Win32TemperatureProbeEntry_Object = MibTableRow
win32TemperatureProbeEntry = _Win32TemperatureProbeEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1)
)
win32TemperatureProbeEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwtmpIndex"),
)
if mibBuilder.loadTexts:
    win32TemperatureProbeEntry.setStatus("current")


class _HwtmpIndex_Type(Integer32):
    """Custom type hwtmpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwtmpIndex_Type.__name__ = "Integer32"
_HwtmpIndex_Object = MibTableColumn
hwtmpIndex = _HwtmpIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 1),
    _HwtmpIndex_Type()
)
hwtmpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpIndex.setStatus("current")
_HwtmpAccuracy_Type = Integer32
_HwtmpAccuracy_Object = MibTableColumn
hwtmpAccuracy = _HwtmpAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 2),
    _HwtmpAccuracy_Type()
)
hwtmpAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpAccuracy.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpAccuracy.setUnits("Hundredths of Percent")


class _HwtmpAvailability_Type(Integer32):
    """Custom type hwtmpAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwtmpAvailability_Type.__name__ = "Integer32"
_HwtmpAvailability_Object = MibTableColumn
hwtmpAvailability = _HwtmpAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 3),
    _HwtmpAvailability_Type()
)
hwtmpAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpAvailability.setStatus("current")


class _HwtmpCaption_Type(WtcsDisplayString):
    """Custom type hwtmpCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwtmpCaption_Type.__name__ = "WtcsDisplayString"
_HwtmpCaption_Object = MibTableColumn
hwtmpCaption = _HwtmpCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 4),
    _HwtmpCaption_Type()
)
hwtmpCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpCaption.setStatus("current")


class _HwtmpConfigManagerErrorCode_Type(Integer32):
    """Custom type hwtmpConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwtmpConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwtmpConfigManagerErrorCode_Object = MibTableColumn
hwtmpConfigManagerErrorCode = _HwtmpConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 5),
    _HwtmpConfigManagerErrorCode_Type()
)
hwtmpConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpConfigManagerErrorCode.setStatus("current")
_HwtmpConfigManagerUserConfig_Type = TruthValue
_HwtmpConfigManagerUserConfig_Object = MibTableColumn
hwtmpConfigManagerUserConfig = _HwtmpConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 6),
    _HwtmpConfigManagerUserConfig_Type()
)
hwtmpConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpConfigManagerUserConfig.setStatus("current")
_HwtmpCreationClassName_Type = WtcsDisplayString
_HwtmpCreationClassName_Object = MibTableColumn
hwtmpCreationClassName = _HwtmpCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 7),
    _HwtmpCreationClassName_Type()
)
hwtmpCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpCreationClassName.setStatus("current")
_HwtmpCurrentReading_Type = Integer32
_HwtmpCurrentReading_Object = MibTableColumn
hwtmpCurrentReading = _HwtmpCurrentReading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 8),
    _HwtmpCurrentReading_Type()
)
hwtmpCurrentReading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpCurrentReading.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpCurrentReading.setUnits("Tenths of degrees centigrade")
_HwtmpDescription_Type = WtcsDisplayString
_HwtmpDescription_Object = MibTableColumn
hwtmpDescription = _HwtmpDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 9),
    _HwtmpDescription_Type()
)
hwtmpDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpDescription.setStatus("current")
_HwtmpDeviceID_Type = WtcsDisplayString
_HwtmpDeviceID_Object = MibTableColumn
hwtmpDeviceID = _HwtmpDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 10),
    _HwtmpDeviceID_Type()
)
hwtmpDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpDeviceID.setStatus("current")
_HwtmpErrorCleared_Type = TruthValue
_HwtmpErrorCleared_Object = MibTableColumn
hwtmpErrorCleared = _HwtmpErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 11),
    _HwtmpErrorCleared_Type()
)
hwtmpErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpErrorCleared.setStatus("current")
_HwtmpErrorDescription_Type = WtcsDisplayString
_HwtmpErrorDescription_Object = MibTableColumn
hwtmpErrorDescription = _HwtmpErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 12),
    _HwtmpErrorDescription_Type()
)
hwtmpErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpErrorDescription.setStatus("current")
_HwtmpInstallDate_Type = DateAndTime
_HwtmpInstallDate_Object = MibTableColumn
hwtmpInstallDate = _HwtmpInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 13),
    _HwtmpInstallDate_Type()
)
hwtmpInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpInstallDate.setStatus("current")
_HwtmpIsLinear_Type = TruthValue
_HwtmpIsLinear_Object = MibTableColumn
hwtmpIsLinear = _HwtmpIsLinear_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 14),
    _HwtmpIsLinear_Type()
)
hwtmpIsLinear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpIsLinear.setStatus("current")
_HwtmpLastErrorCode_Type = Gauge32
_HwtmpLastErrorCode_Object = MibTableColumn
hwtmpLastErrorCode = _HwtmpLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 15),
    _HwtmpLastErrorCode_Type()
)
hwtmpLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpLastErrorCode.setStatus("current")
_HwtmpLowerThresholdCritical_Type = Integer32
_HwtmpLowerThresholdCritical_Object = MibTableColumn
hwtmpLowerThresholdCritical = _HwtmpLowerThresholdCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 16),
    _HwtmpLowerThresholdCritical_Type()
)
hwtmpLowerThresholdCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpLowerThresholdCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpLowerThresholdCritical.setUnits("Tenths of degrees Centigrade")
_HwtmpLowerThresholdFatal_Type = Integer32
_HwtmpLowerThresholdFatal_Object = MibTableColumn
hwtmpLowerThresholdFatal = _HwtmpLowerThresholdFatal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 17),
    _HwtmpLowerThresholdFatal_Type()
)
hwtmpLowerThresholdFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpLowerThresholdFatal.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpLowerThresholdFatal.setUnits("Tenths of degrees Centigrade")
_HwtmpLowerThresholdNonCritical_Type = Integer32
_HwtmpLowerThresholdNonCritical_Object = MibTableColumn
hwtmpLowerThresholdNonCritical = _HwtmpLowerThresholdNonCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 18),
    _HwtmpLowerThresholdNonCritical_Type()
)
hwtmpLowerThresholdNonCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpLowerThresholdNonCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpLowerThresholdNonCritical.setUnits("Tenths of degrees Centigrade")
_HwtmpMaxReadable_Type = Integer32
_HwtmpMaxReadable_Object = MibTableColumn
hwtmpMaxReadable = _HwtmpMaxReadable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 19),
    _HwtmpMaxReadable_Type()
)
hwtmpMaxReadable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpMaxReadable.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpMaxReadable.setUnits("Tenths of degrees Centigrade")
_HwtmpMinReadable_Type = Integer32
_HwtmpMinReadable_Object = MibTableColumn
hwtmpMinReadable = _HwtmpMinReadable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 20),
    _HwtmpMinReadable_Type()
)
hwtmpMinReadable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpMinReadable.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpMinReadable.setUnits("Tenths of degrees Centigrade")
_HwtmpName_Type = WtcsDisplayString
_HwtmpName_Object = MibTableColumn
hwtmpName = _HwtmpName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 21),
    _HwtmpName_Type()
)
hwtmpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpName.setStatus("current")
_HwtmpNominalReading_Type = Integer32
_HwtmpNominalReading_Object = MibTableColumn
hwtmpNominalReading = _HwtmpNominalReading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 22),
    _HwtmpNominalReading_Type()
)
hwtmpNominalReading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpNominalReading.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpNominalReading.setUnits("Tenths of degrees Centigrade")
_HwtmpNormalMax_Type = Integer32
_HwtmpNormalMax_Object = MibTableColumn
hwtmpNormalMax = _HwtmpNormalMax_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 23),
    _HwtmpNormalMax_Type()
)
hwtmpNormalMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpNormalMax.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpNormalMax.setUnits("Tenths of degrees Centigrade")
_HwtmpNormalMin_Type = Integer32
_HwtmpNormalMin_Object = MibTableColumn
hwtmpNormalMin = _HwtmpNormalMin_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 24),
    _HwtmpNormalMin_Type()
)
hwtmpNormalMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpNormalMin.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpNormalMin.setUnits("Tenths of degrees Centigrade")
_HwtmpPNPDeviceID_Type = WtcsDisplayString
_HwtmpPNPDeviceID_Object = MibTableColumn
hwtmpPNPDeviceID = _HwtmpPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 25),
    _HwtmpPNPDeviceID_Type()
)
hwtmpPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpPNPDeviceID.setStatus("current")
_HwtmpPowerManagementCapabilities_Type = WtcsDisplayString
_HwtmpPowerManagementCapabilities_Object = MibTableColumn
hwtmpPowerManagementCapabilities = _HwtmpPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 26),
    _HwtmpPowerManagementCapabilities_Type()
)
hwtmpPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpPowerManagementCapabilities.setStatus("current")
_HwtmpPowerManagementSupported_Type = TruthValue
_HwtmpPowerManagementSupported_Object = MibTableColumn
hwtmpPowerManagementSupported = _HwtmpPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 27),
    _HwtmpPowerManagementSupported_Type()
)
hwtmpPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpPowerManagementSupported.setStatus("current")
_HwtmpResolution_Type = Gauge32
_HwtmpResolution_Object = MibTableColumn
hwtmpResolution = _HwtmpResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 28),
    _HwtmpResolution_Type()
)
hwtmpResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpResolution.setUnits("Hundredths of degrees Centigrade")


class _HwtmpStatus_Type(Integer32):
    """Custom type hwtmpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwtmpStatus_Type.__name__ = "Integer32"
_HwtmpStatus_Object = MibTableColumn
hwtmpStatus = _HwtmpStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 29),
    _HwtmpStatus_Type()
)
hwtmpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpStatus.setStatus("current")


class _HwtmpStatusInfo_Type(Integer32):
    """Custom type hwtmpStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwtmpStatusInfo_Type.__name__ = "Integer32"
_HwtmpStatusInfo_Object = MibTableColumn
hwtmpStatusInfo = _HwtmpStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 30),
    _HwtmpStatusInfo_Type()
)
hwtmpStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpStatusInfo.setStatus("current")
_HwtmpSystemCreationClassName_Type = WtcsDisplayString
_HwtmpSystemCreationClassName_Object = MibTableColumn
hwtmpSystemCreationClassName = _HwtmpSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 31),
    _HwtmpSystemCreationClassName_Type()
)
hwtmpSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpSystemCreationClassName.setStatus("current")
_HwtmpSystemName_Type = WtcsDisplayString
_HwtmpSystemName_Object = MibTableColumn
hwtmpSystemName = _HwtmpSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 32),
    _HwtmpSystemName_Type()
)
hwtmpSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpSystemName.setStatus("current")
_HwtmpTolerance_Type = Integer32
_HwtmpTolerance_Object = MibTableColumn
hwtmpTolerance = _HwtmpTolerance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 33),
    _HwtmpTolerance_Type()
)
hwtmpTolerance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpTolerance.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpTolerance.setUnits("Tenths of degrees Centigrade")
_HwtmpUpperThresholdCritical_Type = Integer32
_HwtmpUpperThresholdCritical_Object = MibTableColumn
hwtmpUpperThresholdCritical = _HwtmpUpperThresholdCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 34),
    _HwtmpUpperThresholdCritical_Type()
)
hwtmpUpperThresholdCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpUpperThresholdCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpUpperThresholdCritical.setUnits("Tenths of degrees Centigrade")
_HwtmpUpperThresholdFatal_Type = Integer32
_HwtmpUpperThresholdFatal_Object = MibTableColumn
hwtmpUpperThresholdFatal = _HwtmpUpperThresholdFatal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 35),
    _HwtmpUpperThresholdFatal_Type()
)
hwtmpUpperThresholdFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpUpperThresholdFatal.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpUpperThresholdFatal.setUnits("Tenths of degrees Centigrade")
_HwtmpUpperThresholdNonCritical_Type = Integer32
_HwtmpUpperThresholdNonCritical_Object = MibTableColumn
hwtmpUpperThresholdNonCritical = _HwtmpUpperThresholdNonCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 1, 4, 1, 36),
    _HwtmpUpperThresholdNonCritical_Type()
)
hwtmpUpperThresholdNonCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtmpUpperThresholdNonCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwtmpUpperThresholdNonCritical.setUnits("Tenths of degrees Centigrade")
_WmiInputDevice_ObjectIdentity = ObjectIdentity
wmiInputDevice = _WmiInputDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2)
)
if mibBuilder.loadTexts:
    wmiInputDevice.setStatus("current")
_Win32KeyboardTable_Object = MibTable
win32KeyboardTable = _Win32KeyboardTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1)
)
if mibBuilder.loadTexts:
    win32KeyboardTable.setStatus("current")
_Win32KeyboardEntry_Object = MibTableRow
win32KeyboardEntry = _Win32KeyboardEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1)
)
win32KeyboardEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwkbIndex"),
)
if mibBuilder.loadTexts:
    win32KeyboardEntry.setStatus("current")


class _HwkbIndex_Type(Integer32):
    """Custom type hwkbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwkbIndex_Type.__name__ = "Integer32"
_HwkbIndex_Object = MibTableColumn
hwkbIndex = _HwkbIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 1),
    _HwkbIndex_Type()
)
hwkbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbIndex.setStatus("current")


class _HwkbAvailability_Type(Integer32):
    """Custom type hwkbAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwkbAvailability_Type.__name__ = "Integer32"
_HwkbAvailability_Object = MibTableColumn
hwkbAvailability = _HwkbAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 2),
    _HwkbAvailability_Type()
)
hwkbAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbAvailability.setStatus("current")
_HwkbCaption_Type = WtcsDisplayString
_HwkbCaption_Object = MibTableColumn
hwkbCaption = _HwkbCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 3),
    _HwkbCaption_Type()
)
hwkbCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbCaption.setStatus("current")


class _HwkbConfigManagerErrorCode_Type(Integer32):
    """Custom type hwkbConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwkbConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwkbConfigManagerErrorCode_Object = MibTableColumn
hwkbConfigManagerErrorCode = _HwkbConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 4),
    _HwkbConfigManagerErrorCode_Type()
)
hwkbConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbConfigManagerErrorCode.setStatus("current")
_HwkbConfigManagerUserConfig_Type = TruthValue
_HwkbConfigManagerUserConfig_Object = MibTableColumn
hwkbConfigManagerUserConfig = _HwkbConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 5),
    _HwkbConfigManagerUserConfig_Type()
)
hwkbConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbConfigManagerUserConfig.setStatus("current")


class _HwkbCreationClassName_Type(WtcsDisplayString):
    """Custom type hwkbCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwkbCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwkbCreationClassName_Object = MibTableColumn
hwkbCreationClassName = _HwkbCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 6),
    _HwkbCreationClassName_Type()
)
hwkbCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbCreationClassName.setStatus("current")
_HwkbDescription_Type = WtcsDisplayString
_HwkbDescription_Object = MibTableColumn
hwkbDescription = _HwkbDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 7),
    _HwkbDescription_Type()
)
hwkbDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbDescription.setStatus("current")
_HwkbDeviceID_Type = WtcsDisplayString
_HwkbDeviceID_Object = MibTableColumn
hwkbDeviceID = _HwkbDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 8),
    _HwkbDeviceID_Type()
)
hwkbDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbDeviceID.setStatus("current")
_HwkbErrorCleared_Type = TruthValue
_HwkbErrorCleared_Object = MibTableColumn
hwkbErrorCleared = _HwkbErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 9),
    _HwkbErrorCleared_Type()
)
hwkbErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbErrorCleared.setStatus("current")
_HwkbErrorDescription_Type = WtcsDisplayString
_HwkbErrorDescription_Object = MibTableColumn
hwkbErrorDescription = _HwkbErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 10),
    _HwkbErrorDescription_Type()
)
hwkbErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbErrorDescription.setStatus("current")
_HwkbInstallDate_Type = DateAndTime
_HwkbInstallDate_Object = MibTableColumn
hwkbInstallDate = _HwkbInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 11),
    _HwkbInstallDate_Type()
)
hwkbInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbInstallDate.setStatus("current")
_HwkbIsLocked_Type = TruthValue
_HwkbIsLocked_Object = MibTableColumn
hwkbIsLocked = _HwkbIsLocked_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 12),
    _HwkbIsLocked_Type()
)
hwkbIsLocked.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbIsLocked.setStatus("current")
_HwkbLastErrorCode_Type = Gauge32
_HwkbLastErrorCode_Object = MibTableColumn
hwkbLastErrorCode = _HwkbLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 13),
    _HwkbLastErrorCode_Type()
)
hwkbLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbLastErrorCode.setStatus("current")
_HwkbLayout_Type = WtcsDisplayString
_HwkbLayout_Object = MibTableColumn
hwkbLayout = _HwkbLayout_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 14),
    _HwkbLayout_Type()
)
hwkbLayout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbLayout.setStatus("current")
_HwkbName_Type = WtcsDisplayString
_HwkbName_Object = MibTableColumn
hwkbName = _HwkbName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 15),
    _HwkbName_Type()
)
hwkbName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbName.setStatus("current")
_HwkbNumberOfFunctionKeys_Type = Integer32
_HwkbNumberOfFunctionKeys_Object = MibTableColumn
hwkbNumberOfFunctionKeys = _HwkbNumberOfFunctionKeys_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 16),
    _HwkbNumberOfFunctionKeys_Type()
)
hwkbNumberOfFunctionKeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbNumberOfFunctionKeys.setStatus("current")


class _HwkbPassword_Type(Integer32):
    """Custom type hwkbPassword based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 4),
          ("notImplemented", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwkbPassword_Type.__name__ = "Integer32"
_HwkbPassword_Object = MibTableColumn
hwkbPassword = _HwkbPassword_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 17),
    _HwkbPassword_Type()
)
hwkbPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbPassword.setStatus("current")
_HwkbPNPDeviceID_Type = WtcsDisplayString
_HwkbPNPDeviceID_Object = MibTableColumn
hwkbPNPDeviceID = _HwkbPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 18),
    _HwkbPNPDeviceID_Type()
)
hwkbPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbPNPDeviceID.setStatus("current")
_HwkbPowerManagementCapabilities_Type = WtcsDisplayString
_HwkbPowerManagementCapabilities_Object = MibTableColumn
hwkbPowerManagementCapabilities = _HwkbPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 19),
    _HwkbPowerManagementCapabilities_Type()
)
hwkbPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbPowerManagementCapabilities.setStatus("current")
_HwkbPowerManagementSupported_Type = TruthValue
_HwkbPowerManagementSupported_Object = MibTableColumn
hwkbPowerManagementSupported = _HwkbPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 20),
    _HwkbPowerManagementSupported_Type()
)
hwkbPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbPowerManagementSupported.setStatus("current")


class _HwkbStatus_Type(Integer32):
    """Custom type hwkbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwkbStatus_Type.__name__ = "Integer32"
_HwkbStatus_Object = MibTableColumn
hwkbStatus = _HwkbStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 21),
    _HwkbStatus_Type()
)
hwkbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbStatus.setStatus("current")


class _HwkbStatusInfo_Type(Integer32):
    """Custom type hwkbStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwkbStatusInfo_Type.__name__ = "Integer32"
_HwkbStatusInfo_Object = MibTableColumn
hwkbStatusInfo = _HwkbStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 22),
    _HwkbStatusInfo_Type()
)
hwkbStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbStatusInfo.setStatus("current")
_HwkbSystemCreationClassName_Type = WtcsDisplayString
_HwkbSystemCreationClassName_Object = MibTableColumn
hwkbSystemCreationClassName = _HwkbSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 23),
    _HwkbSystemCreationClassName_Type()
)
hwkbSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbSystemCreationClassName.setStatus("current")
_HwkbSystemName_Type = WtcsDisplayString
_HwkbSystemName_Object = MibTableColumn
hwkbSystemName = _HwkbSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 1, 1, 24),
    _HwkbSystemName_Type()
)
hwkbSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwkbSystemName.setStatus("current")
_Win32PointingDeviceTable_Object = MibTable
win32PointingDeviceTable = _Win32PointingDeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2)
)
if mibBuilder.loadTexts:
    win32PointingDeviceTable.setStatus("current")
_Win32PointingDeviceEntry_Object = MibTableRow
win32PointingDeviceEntry = _Win32PointingDeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1)
)
win32PointingDeviceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwptIndex"),
)
if mibBuilder.loadTexts:
    win32PointingDeviceEntry.setStatus("current")


class _HwptIndex_Type(Integer32):
    """Custom type hwptIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwptIndex_Type.__name__ = "Integer32"
_HwptIndex_Object = MibTableColumn
hwptIndex = _HwptIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 1),
    _HwptIndex_Type()
)
hwptIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptIndex.setStatus("current")


class _HwptAvailability_Type(Integer32):
    """Custom type hwptAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwptAvailability_Type.__name__ = "Integer32"
_HwptAvailability_Object = MibTableColumn
hwptAvailability = _HwptAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 2),
    _HwptAvailability_Type()
)
hwptAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptAvailability.setStatus("current")
_HwptCaption_Type = WtcsDisplayString
_HwptCaption_Object = MibTableColumn
hwptCaption = _HwptCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 3),
    _HwptCaption_Type()
)
hwptCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptCaption.setStatus("current")


class _HwptConfigManagerErrorCode_Type(Integer32):
    """Custom type hwptConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwptConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwptConfigManagerErrorCode_Object = MibTableColumn
hwptConfigManagerErrorCode = _HwptConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 4),
    _HwptConfigManagerErrorCode_Type()
)
hwptConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptConfigManagerErrorCode.setStatus("current")
_HwptConfigManagerUserConfig_Type = TruthValue
_HwptConfigManagerUserConfig_Object = MibTableColumn
hwptConfigManagerUserConfig = _HwptConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 5),
    _HwptConfigManagerUserConfig_Type()
)
hwptConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptConfigManagerUserConfig.setStatus("current")
_HwptCreationClassName_Type = WtcsDisplayString
_HwptCreationClassName_Object = MibTableColumn
hwptCreationClassName = _HwptCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 6),
    _HwptCreationClassName_Type()
)
hwptCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptCreationClassName.setStatus("current")
_HwptDescription_Type = WtcsDisplayString
_HwptDescription_Object = MibTableColumn
hwptDescription = _HwptDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 7),
    _HwptDescription_Type()
)
hwptDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptDescription.setStatus("current")
_HwptDeviceID_Type = WtcsDisplayString
_HwptDeviceID_Object = MibTableColumn
hwptDeviceID = _HwptDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 8),
    _HwptDeviceID_Type()
)
hwptDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptDeviceID.setStatus("current")


class _HwptDeviceInterface_Type(Integer32):
    """Custom type hwptDeviceInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              160,
              161,
              162)
        )
    )
    namedValues = NamedValues(
        *(("appleDesktopBus", 8),
          ("busMouse", 7),
          ("busMouseDB9", 160),
          ("busMouseMicroDIN", 161),
          ("hpHIL", 6),
          ("infrared", 5),
          ("other", 1),
          ("ps2", 4),
          ("serial", 3),
          ("unknown", 2),
          ("usb", 162))
    )


_HwptDeviceInterface_Type.__name__ = "Integer32"
_HwptDeviceInterface_Object = MibTableColumn
hwptDeviceInterface = _HwptDeviceInterface_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 9),
    _HwptDeviceInterface_Type()
)
hwptDeviceInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptDeviceInterface.setStatus("current")
_HwptDoubleSpeedThreshold_Type = Gauge32
_HwptDoubleSpeedThreshold_Object = MibTableColumn
hwptDoubleSpeedThreshold = _HwptDoubleSpeedThreshold_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 10),
    _HwptDoubleSpeedThreshold_Type()
)
hwptDoubleSpeedThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptDoubleSpeedThreshold.setStatus("current")
if mibBuilder.loadTexts:
    hwptDoubleSpeedThreshold.setUnits("Mickeys")
_HwptErrorCleared_Type = TruthValue
_HwptErrorCleared_Object = MibTableColumn
hwptErrorCleared = _HwptErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 11),
    _HwptErrorCleared_Type()
)
hwptErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptErrorCleared.setStatus("current")
_HwptErrorDescription_Type = WtcsDisplayString
_HwptErrorDescription_Object = MibTableColumn
hwptErrorDescription = _HwptErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 12),
    _HwptErrorDescription_Type()
)
hwptErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptErrorDescription.setStatus("current")


class _HwptHandedness_Type(Integer32):
    """Custom type hwptHandedness based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("leftHandedOperation", 3),
          ("notApplicable", 1),
          ("rightHandedOperation", 2),
          ("unknown", 0))
    )


_HwptHandedness_Type.__name__ = "Integer32"
_HwptHandedness_Object = MibTableColumn
hwptHandedness = _HwptHandedness_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 13),
    _HwptHandedness_Type()
)
hwptHandedness.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptHandedness.setStatus("current")
_HwptHardwareType_Type = WtcsDisplayString
_HwptHardwareType_Object = MibTableColumn
hwptHardwareType = _HwptHardwareType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 14),
    _HwptHardwareType_Type()
)
hwptHardwareType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptHardwareType.setStatus("current")
_HwptInfFileName_Type = WtcsDisplayString
_HwptInfFileName_Object = MibTableColumn
hwptInfFileName = _HwptInfFileName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 15),
    _HwptInfFileName_Type()
)
hwptInfFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptInfFileName.setStatus("current")
_HwptInfSection_Type = WtcsDisplayString
_HwptInfSection_Object = MibTableColumn
hwptInfSection = _HwptInfSection_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 16),
    _HwptInfSection_Type()
)
hwptInfSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptInfSection.setStatus("current")
_HwptInstallDate_Type = DateAndTime
_HwptInstallDate_Object = MibTableColumn
hwptInstallDate = _HwptInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 17),
    _HwptInstallDate_Type()
)
hwptInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptInstallDate.setStatus("current")
_HwptIsLocked_Type = TruthValue
_HwptIsLocked_Object = MibTableColumn
hwptIsLocked = _HwptIsLocked_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 18),
    _HwptIsLocked_Type()
)
hwptIsLocked.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptIsLocked.setStatus("current")
_HwptLastErrorCode_Type = Gauge32
_HwptLastErrorCode_Object = MibTableColumn
hwptLastErrorCode = _HwptLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 19),
    _HwptLastErrorCode_Type()
)
hwptLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptLastErrorCode.setStatus("current")
_HwptManufacturer_Type = WtcsDisplayString
_HwptManufacturer_Object = MibTableColumn
hwptManufacturer = _HwptManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 20),
    _HwptManufacturer_Type()
)
hwptManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptManufacturer.setStatus("current")
_HwptName_Type = WtcsDisplayString
_HwptName_Object = MibTableColumn
hwptName = _HwptName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 21),
    _HwptName_Type()
)
hwptName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptName.setStatus("current")


class _HwptNumberOfButtons_Type(Integer32):
    """Custom type hwptNumberOfButtons based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwptNumberOfButtons_Type.__name__ = "Integer32"
_HwptNumberOfButtons_Object = MibTableColumn
hwptNumberOfButtons = _HwptNumberOfButtons_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 22),
    _HwptNumberOfButtons_Type()
)
hwptNumberOfButtons.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptNumberOfButtons.setStatus("current")
_HwptPNPDeviceID_Type = WtcsDisplayString
_HwptPNPDeviceID_Object = MibTableColumn
hwptPNPDeviceID = _HwptPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 23),
    _HwptPNPDeviceID_Type()
)
hwptPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptPNPDeviceID.setStatus("current")


class _HwptPointingType_Type(Integer32):
    """Custom type hwptPointingType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("glidePoint", 6),
          ("mouse", 3),
          ("mouseOpticalSensor", 9),
          ("other", 1),
          ("touchPad", 7),
          ("touchScreen", 8),
          ("trackBall", 4),
          ("trackPoint", 5),
          ("unknown", 2))
    )


_HwptPointingType_Type.__name__ = "Integer32"
_HwptPointingType_Object = MibTableColumn
hwptPointingType = _HwptPointingType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 24),
    _HwptPointingType_Type()
)
hwptPointingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptPointingType.setStatus("current")
_HwptPowerManagementCapabilities_Type = WtcsDisplayString
_HwptPowerManagementCapabilities_Object = MibTableColumn
hwptPowerManagementCapabilities = _HwptPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 25),
    _HwptPowerManagementCapabilities_Type()
)
hwptPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptPowerManagementCapabilities.setStatus("current")
_HwptPowerManagementSupported_Type = TruthValue
_HwptPowerManagementSupported_Object = MibTableColumn
hwptPowerManagementSupported = _HwptPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 26),
    _HwptPowerManagementSupported_Type()
)
hwptPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptPowerManagementSupported.setStatus("current")
_HwptQuadSpeedThreshold_Type = Gauge32
_HwptQuadSpeedThreshold_Object = MibTableColumn
hwptQuadSpeedThreshold = _HwptQuadSpeedThreshold_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 27),
    _HwptQuadSpeedThreshold_Type()
)
hwptQuadSpeedThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptQuadSpeedThreshold.setStatus("current")
if mibBuilder.loadTexts:
    hwptQuadSpeedThreshold.setUnits("Mickeys")
_HwptResolution_Type = Gauge32
_HwptResolution_Object = MibTableColumn
hwptResolution = _HwptResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 28),
    _HwptResolution_Type()
)
hwptResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptResolution.setStatus("current")
_HwptSampleRate_Type = Gauge32
_HwptSampleRate_Object = MibTableColumn
hwptSampleRate = _HwptSampleRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 29),
    _HwptSampleRate_Type()
)
hwptSampleRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptSampleRate.setStatus("current")
if mibBuilder.loadTexts:
    hwptSampleRate.setUnits("Hertz")


class _HwptStatus_Type(Integer32):
    """Custom type hwptStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwptStatus_Type.__name__ = "Integer32"
_HwptStatus_Object = MibTableColumn
hwptStatus = _HwptStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 30),
    _HwptStatus_Type()
)
hwptStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptStatus.setStatus("current")


class _HwptStatusInfo_Type(Integer32):
    """Custom type hwptStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwptStatusInfo_Type.__name__ = "Integer32"
_HwptStatusInfo_Object = MibTableColumn
hwptStatusInfo = _HwptStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 31),
    _HwptStatusInfo_Type()
)
hwptStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptStatusInfo.setStatus("current")
_HwptSynch_Type = Gauge32
_HwptSynch_Object = MibTableColumn
hwptSynch = _HwptSynch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 32),
    _HwptSynch_Type()
)
hwptSynch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptSynch.setStatus("current")
if mibBuilder.loadTexts:
    hwptSynch.setUnits("100 Nanoseconds")
_HwptSystemCreationClassName_Type = WtcsDisplayString
_HwptSystemCreationClassName_Object = MibTableColumn
hwptSystemCreationClassName = _HwptSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 33),
    _HwptSystemCreationClassName_Type()
)
hwptSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptSystemCreationClassName.setStatus("current")
_HwptSystemName_Type = WtcsDisplayString
_HwptSystemName_Object = MibTableColumn
hwptSystemName = _HwptSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 2, 2, 1, 34),
    _HwptSystemName_Type()
)
hwptSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwptSystemName.setStatus("current")
_WmiMassStorage_ObjectIdentity = ObjectIdentity
wmiMassStorage = _WmiMassStorage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3)
)
if mibBuilder.loadTexts:
    wmiMassStorage.setStatus("current")
_Win32AutochkSettingTable_Object = MibTable
win32AutochkSettingTable = _Win32AutochkSettingTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2)
)
if mibBuilder.loadTexts:
    win32AutochkSettingTable.setStatus("current")
_Win32AutochkSettingEntry_Object = MibTableRow
win32AutochkSettingEntry = _Win32AutochkSettingEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1)
)
win32AutochkSettingEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwasIndex"),
)
if mibBuilder.loadTexts:
    win32AutochkSettingEntry.setStatus("current")


class _HwasIndex_Type(Integer32):
    """Custom type hwasIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwasIndex_Type.__name__ = "Integer32"
_HwasIndex_Object = MibTableColumn
hwasIndex = _HwasIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 1),
    _HwasIndex_Type()
)
hwasIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwasIndex.setStatus("current")


class _HwasCaption_Type(WtcsDisplayString):
    """Custom type hwasCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwasCaption_Type.__name__ = "WtcsDisplayString"
_HwasCaption_Object = MibTableColumn
hwasCaption = _HwasCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 2),
    _HwasCaption_Type()
)
hwasCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwasCaption.setStatus("current")
_HwasDescription_Type = WtcsDisplayString
_HwasDescription_Object = MibTableColumn
hwasDescription = _HwasDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 3),
    _HwasDescription_Type()
)
hwasDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwasDescription.setStatus("current")


class _HwasSettingID_Type(WtcsDisplayString):
    """Custom type hwasSettingID based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwasSettingID_Type.__name__ = "WtcsDisplayString"
_HwasSettingID_Object = MibTableColumn
hwasSettingID = _HwasSettingID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 4),
    _HwasSettingID_Type()
)
hwasSettingID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwasSettingID.setStatus("current")
_HwasUserInputDelay_Type = Gauge32
_HwasUserInputDelay_Object = MibTableColumn
hwasUserInputDelay = _HwasUserInputDelay_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 2, 1, 5),
    _HwasUserInputDelay_Type()
)
hwasUserInputDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwasUserInputDelay.setStatus("current")
if mibBuilder.loadTexts:
    hwasUserInputDelay.setUnits("Seconds")
_Win32CDROMDriveTable_Object = MibTable
win32CDROMDriveTable = _Win32CDROMDriveTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8)
)
if mibBuilder.loadTexts:
    win32CDROMDriveTable.setStatus("current")
_Win32CDROMDriveEntry_Object = MibTableRow
win32CDROMDriveEntry = _Win32CDROMDriveEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1)
)
win32CDROMDriveEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwcdIndex"),
)
if mibBuilder.loadTexts:
    win32CDROMDriveEntry.setStatus("current")


class _HwcdIndex_Type(Integer32):
    """Custom type hwcdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwcdIndex_Type.__name__ = "Integer32"
_HwcdIndex_Object = MibTableColumn
hwcdIndex = _HwcdIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 1),
    _HwcdIndex_Type()
)
hwcdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdIndex.setStatus("current")


class _HwcdAvailability_Type(Integer32):
    """Custom type hwcdAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwcdAvailability_Type.__name__ = "Integer32"
_HwcdAvailability_Object = MibTableColumn
hwcdAvailability = _HwcdAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 2),
    _HwcdAvailability_Type()
)
hwcdAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdAvailability.setStatus("current")
_HwcdCapabilities_Type = WtcsDisplayString
_HwcdCapabilities_Object = MibTableColumn
hwcdCapabilities = _HwcdCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 3),
    _HwcdCapabilities_Type()
)
hwcdCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdCapabilities.setStatus("current")
_HwcdCapabilityDescriptions_Type = WtcsDisplayString
_HwcdCapabilityDescriptions_Object = MibTableColumn
hwcdCapabilityDescriptions = _HwcdCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 4),
    _HwcdCapabilityDescriptions_Type()
)
hwcdCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdCapabilityDescriptions.setStatus("current")
_HwcdCaption_Type = WtcsDisplayString
_HwcdCaption_Object = MibTableColumn
hwcdCaption = _HwcdCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 5),
    _HwcdCaption_Type()
)
hwcdCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdCaption.setStatus("current")
_HwcdCompressionMethod_Type = WtcsDisplayString
_HwcdCompressionMethod_Object = MibTableColumn
hwcdCompressionMethod = _HwcdCompressionMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 6),
    _HwcdCompressionMethod_Type()
)
hwcdCompressionMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdCompressionMethod.setStatus("current")


class _HwcdConfigManagerErrorCode_Type(Integer32):
    """Custom type hwcdConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwcdConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwcdConfigManagerErrorCode_Object = MibTableColumn
hwcdConfigManagerErrorCode = _HwcdConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 7),
    _HwcdConfigManagerErrorCode_Type()
)
hwcdConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdConfigManagerErrorCode.setStatus("current")
_HwcdConfigManagerUserConfig_Type = TruthValue
_HwcdConfigManagerUserConfig_Object = MibTableColumn
hwcdConfigManagerUserConfig = _HwcdConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 8),
    _HwcdConfigManagerUserConfig_Type()
)
hwcdConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdConfigManagerUserConfig.setStatus("current")
_HwcdCreationClassName_Type = WtcsDisplayString
_HwcdCreationClassName_Object = MibTableColumn
hwcdCreationClassName = _HwcdCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 9),
    _HwcdCreationClassName_Type()
)
hwcdCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdCreationClassName.setStatus("current")
_HwcdDefaultBlockSize_Type = Gauge32
_HwcdDefaultBlockSize_Object = MibTableColumn
hwcdDefaultBlockSize = _HwcdDefaultBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 10),
    _HwcdDefaultBlockSize_Type()
)
hwcdDefaultBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdDefaultBlockSize.setStatus("current")
_HwcdDescription_Type = WtcsDisplayString
_HwcdDescription_Object = MibTableColumn
hwcdDescription = _HwcdDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 11),
    _HwcdDescription_Type()
)
hwcdDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdDescription.setStatus("current")
_HwcdDeviceID_Type = WtcsDisplayString
_HwcdDeviceID_Object = MibTableColumn
hwcdDeviceID = _HwcdDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 12),
    _HwcdDeviceID_Type()
)
hwcdDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdDeviceID.setStatus("current")
_HwcdDrive_Type = WtcsDisplayString
_HwcdDrive_Object = MibTableColumn
hwcdDrive = _HwcdDrive_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 13),
    _HwcdDrive_Type()
)
hwcdDrive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdDrive.setStatus("current")
_HwcdDriveIntegrity_Type = TruthValue
_HwcdDriveIntegrity_Object = MibTableColumn
hwcdDriveIntegrity = _HwcdDriveIntegrity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 14),
    _HwcdDriveIntegrity_Type()
)
hwcdDriveIntegrity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdDriveIntegrity.setStatus("current")
_HwcdErrorCleared_Type = TruthValue
_HwcdErrorCleared_Object = MibTableColumn
hwcdErrorCleared = _HwcdErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 15),
    _HwcdErrorCleared_Type()
)
hwcdErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdErrorCleared.setStatus("current")
_HwcdErrorDescription_Type = WtcsDisplayString
_HwcdErrorDescription_Object = MibTableColumn
hwcdErrorDescription = _HwcdErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 16),
    _HwcdErrorDescription_Type()
)
hwcdErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdErrorDescription.setStatus("current")
_HwcdErrorMethodology_Type = WtcsDisplayString
_HwcdErrorMethodology_Object = MibTableColumn
hwcdErrorMethodology = _HwcdErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 17),
    _HwcdErrorMethodology_Type()
)
hwcdErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdErrorMethodology.setStatus("current")
_HwcdFileSystemFlags_Type = Integer32
_HwcdFileSystemFlags_Object = MibTableColumn
hwcdFileSystemFlags = _HwcdFileSystemFlags_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 18),
    _HwcdFileSystemFlags_Type()
)
hwcdFileSystemFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdFileSystemFlags.setStatus("current")


class _HwcdFileSystemFlagsEx_Type(Integer32):
    """Custom type hwcdFileSystemFlagsEx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              16384,
              32768,
              65536,
              131072,
              262144)
        )
    )
    namedValues = NamedValues(
        *(("casePRESERVEDNAMES", 2),
          ("caseSENSITIVESEARCH", 1),
          ("fileCOMPRESSION", 16),
          ("persistentACLS", 8),
          ("supportsENCRYPTION", 131072),
          ("supportsLONGNAMES", 16384),
          ("supportsNAMEDSTREAMS", 262144),
          ("supportsOBJECTIDS", 65536),
          ("supportsREMOTESTORAGE", 256),
          ("supportsREPARSEPOINTS", 128),
          ("supportsSPARSEFILES", 64),
          ("unicodeONDISK", 4),
          ("volumeISCOMPRESSED", 32768),
          ("volumeQUOTAS", 32))
    )


_HwcdFileSystemFlagsEx_Type.__name__ = "Integer32"
_HwcdFileSystemFlagsEx_Object = MibTableColumn
hwcdFileSystemFlagsEx = _HwcdFileSystemFlagsEx_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 19),
    _HwcdFileSystemFlagsEx_Type()
)
hwcdFileSystemFlagsEx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdFileSystemFlagsEx.setStatus("current")
_HwcdId_Type = WtcsDisplayString
_HwcdId_Object = MibTableColumn
hwcdId = _HwcdId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 20),
    _HwcdId_Type()
)
hwcdId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdId.setStatus("current")
_HwcdInstallDate_Type = DateAndTime
_HwcdInstallDate_Object = MibTableColumn
hwcdInstallDate = _HwcdInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 21),
    _HwcdInstallDate_Type()
)
hwcdInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdInstallDate.setStatus("current")
_HwcdLastErrorCode_Type = Gauge32
_HwcdLastErrorCode_Object = MibTableColumn
hwcdLastErrorCode = _HwcdLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 22),
    _HwcdLastErrorCode_Type()
)
hwcdLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdLastErrorCode.setStatus("current")
_HwcdManufacturer_Type = WtcsDisplayString
_HwcdManufacturer_Object = MibTableColumn
hwcdManufacturer = _HwcdManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 23),
    _HwcdManufacturer_Type()
)
hwcdManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdManufacturer.setStatus("current")
_HwcdMaxBlockSize_Type = Gauge32
_HwcdMaxBlockSize_Object = MibTableColumn
hwcdMaxBlockSize = _HwcdMaxBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 24),
    _HwcdMaxBlockSize_Type()
)
hwcdMaxBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMaxBlockSize.setStatus("current")
_HwcdMaximumComponentLength_Type = Gauge32
_HwcdMaximumComponentLength_Object = MibTableColumn
hwcdMaximumComponentLength = _HwcdMaximumComponentLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 25),
    _HwcdMaximumComponentLength_Type()
)
hwcdMaximumComponentLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMaximumComponentLength.setStatus("current")
_HwcdMaxMediaSize_Type = Gauge32
_HwcdMaxMediaSize_Object = MibTableColumn
hwcdMaxMediaSize = _HwcdMaxMediaSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 26),
    _HwcdMaxMediaSize_Type()
)
hwcdMaxMediaSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMaxMediaSize.setStatus("current")
_HwcdMediaLoaded_Type = TruthValue
_HwcdMediaLoaded_Object = MibTableColumn
hwcdMediaLoaded = _HwcdMediaLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 27),
    _HwcdMediaLoaded_Type()
)
hwcdMediaLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMediaLoaded.setStatus("current")


class _HwcdMediaType_Type(Integer32):
    """Custom type hwcdMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cdrom", 4),
          ("randomAccess", 1),
          ("removableMedia", 3),
          ("supportsWriting", 2))
    )


_HwcdMediaType_Type.__name__ = "Integer32"
_HwcdMediaType_Object = MibTableColumn
hwcdMediaType = _HwcdMediaType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 28),
    _HwcdMediaType_Type()
)
hwcdMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMediaType.setStatus("current")
_HwcdMfrAssignedRevisionLevel_Type = WtcsDisplayString
_HwcdMfrAssignedRevisionLevel_Object = MibTableColumn
hwcdMfrAssignedRevisionLevel = _HwcdMfrAssignedRevisionLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 29),
    _HwcdMfrAssignedRevisionLevel_Type()
)
hwcdMfrAssignedRevisionLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMfrAssignedRevisionLevel.setStatus("current")
_HwcdMinBlockSize_Type = Gauge32
_HwcdMinBlockSize_Object = MibTableColumn
hwcdMinBlockSize = _HwcdMinBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 30),
    _HwcdMinBlockSize_Type()
)
hwcdMinBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdMinBlockSize.setStatus("current")
_HwcdName_Type = WtcsDisplayString
_HwcdName_Object = MibTableColumn
hwcdName = _HwcdName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 31),
    _HwcdName_Type()
)
hwcdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdName.setStatus("current")
_HwcdNeedsCleaning_Type = TruthValue
_HwcdNeedsCleaning_Object = MibTableColumn
hwcdNeedsCleaning = _HwcdNeedsCleaning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 32),
    _HwcdNeedsCleaning_Type()
)
hwcdNeedsCleaning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdNeedsCleaning.setStatus("current")
_HwcdNumberOfMediaSupported_Type = Gauge32
_HwcdNumberOfMediaSupported_Object = MibTableColumn
hwcdNumberOfMediaSupported = _HwcdNumberOfMediaSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 33),
    _HwcdNumberOfMediaSupported_Type()
)
hwcdNumberOfMediaSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdNumberOfMediaSupported.setStatus("current")
_HwcdPNPDeviceID_Type = WtcsDisplayString
_HwcdPNPDeviceID_Object = MibTableColumn
hwcdPNPDeviceID = _HwcdPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 34),
    _HwcdPNPDeviceID_Type()
)
hwcdPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdPNPDeviceID.setStatus("current")
_HwcdPowerManagementCapabilities_Type = WtcsDisplayString
_HwcdPowerManagementCapabilities_Object = MibTableColumn
hwcdPowerManagementCapabilities = _HwcdPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 35),
    _HwcdPowerManagementCapabilities_Type()
)
hwcdPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdPowerManagementCapabilities.setStatus("current")
_HwcdPowerManagementSupported_Type = TruthValue
_HwcdPowerManagementSupported_Object = MibTableColumn
hwcdPowerManagementSupported = _HwcdPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 36),
    _HwcdPowerManagementSupported_Type()
)
hwcdPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdPowerManagementSupported.setStatus("current")
_HwcdRevisionLevel_Type = WtcsDisplayString
_HwcdRevisionLevel_Object = MibTableColumn
hwcdRevisionLevel = _HwcdRevisionLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 37),
    _HwcdRevisionLevel_Type()
)
hwcdRevisionLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdRevisionLevel.setStatus("current")
_HwcdSCSIBus_Type = Gauge32
_HwcdSCSIBus_Object = MibTableColumn
hwcdSCSIBus = _HwcdSCSIBus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 38),
    _HwcdSCSIBus_Type()
)
hwcdSCSIBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSCSIBus.setStatus("current")
_HwcdSCSILogicalUnit_Type = Integer32
_HwcdSCSILogicalUnit_Object = MibTableColumn
hwcdSCSILogicalUnit = _HwcdSCSILogicalUnit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 39),
    _HwcdSCSILogicalUnit_Type()
)
hwcdSCSILogicalUnit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSCSILogicalUnit.setStatus("current")
_HwcdSCSIPort_Type = Integer32
_HwcdSCSIPort_Object = MibTableColumn
hwcdSCSIPort = _HwcdSCSIPort_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 40),
    _HwcdSCSIPort_Type()
)
hwcdSCSIPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSCSIPort.setStatus("current")
_HwcdSCSITargetId_Type = Integer32
_HwcdSCSITargetId_Object = MibTableColumn
hwcdSCSITargetId = _HwcdSCSITargetId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 41),
    _HwcdSCSITargetId_Type()
)
hwcdSCSITargetId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSCSITargetId.setStatus("current")
_HwcdSize_Type = Gauge32
_HwcdSize_Object = MibTableColumn
hwcdSize = _HwcdSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 42),
    _HwcdSize_Type()
)
hwcdSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSize.setStatus("current")
if mibBuilder.loadTexts:
    hwcdSize.setUnits("Bytes")


class _HwcdStatus_Type(Integer32):
    """Custom type hwcdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwcdStatus_Type.__name__ = "Integer32"
_HwcdStatus_Object = MibTableColumn
hwcdStatus = _HwcdStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 43),
    _HwcdStatus_Type()
)
hwcdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdStatus.setStatus("current")


class _HwcdStatusInfo_Type(Integer32):
    """Custom type hwcdStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwcdStatusInfo_Type.__name__ = "Integer32"
_HwcdStatusInfo_Object = MibTableColumn
hwcdStatusInfo = _HwcdStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 44),
    _HwcdStatusInfo_Type()
)
hwcdStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdStatusInfo.setStatus("current")
_HwcdSystemCreationClassName_Type = WtcsDisplayString
_HwcdSystemCreationClassName_Object = MibTableColumn
hwcdSystemCreationClassName = _HwcdSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 45),
    _HwcdSystemCreationClassName_Type()
)
hwcdSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSystemCreationClassName.setStatus("current")
_HwcdSystemName_Type = WtcsDisplayString
_HwcdSystemName_Object = MibTableColumn
hwcdSystemName = _HwcdSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 46),
    _HwcdSystemName_Type()
)
hwcdSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdSystemName.setStatus("current")
_HwcdTransferRate_Type = Integer32
_HwcdTransferRate_Object = MibTableColumn
hwcdTransferRate = _HwcdTransferRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 47),
    _HwcdTransferRate_Type()
)
hwcdTransferRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdTransferRate.setStatus("current")
if mibBuilder.loadTexts:
    hwcdTransferRate.setUnits("KiloBytes per Second")
_HwcdVolumeName_Type = WtcsDisplayString
_HwcdVolumeName_Object = MibTableColumn
hwcdVolumeName = _HwcdVolumeName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 48),
    _HwcdVolumeName_Type()
)
hwcdVolumeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdVolumeName.setStatus("current")
_HwcdVolumeSerialNumber_Type = WtcsDisplayString
_HwcdVolumeSerialNumber_Object = MibTableColumn
hwcdVolumeSerialNumber = _HwcdVolumeSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 8, 1, 49),
    _HwcdVolumeSerialNumber_Type()
)
hwcdVolumeSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcdVolumeSerialNumber.setStatus("current")
_Win32DiskDriveTable_Object = MibTable
win32DiskDriveTable = _Win32DiskDriveTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12)
)
if mibBuilder.loadTexts:
    win32DiskDriveTable.setStatus("current")
_Win32DiskDriveEntry_Object = MibTableRow
win32DiskDriveEntry = _Win32DiskDriveEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1)
)
win32DiskDriveEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwddIndex"),
)
if mibBuilder.loadTexts:
    win32DiskDriveEntry.setStatus("current")


class _HwddIndex_Type(Integer32):
    """Custom type hwddIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwddIndex_Type.__name__ = "Integer32"
_HwddIndex_Object = MibTableColumn
hwddIndex = _HwddIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 1),
    _HwddIndex_Type()
)
hwddIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddIndex.setStatus("current")


class _HwddAvailability_Type(Integer32):
    """Custom type hwddAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwddAvailability_Type.__name__ = "Integer32"
_HwddAvailability_Object = MibTableColumn
hwddAvailability = _HwddAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 2),
    _HwddAvailability_Type()
)
hwddAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddAvailability.setStatus("current")
_HwddBytesPerSector_Type = Gauge32
_HwddBytesPerSector_Object = MibTableColumn
hwddBytesPerSector = _HwddBytesPerSector_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 3),
    _HwddBytesPerSector_Type()
)
hwddBytesPerSector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddBytesPerSector.setStatus("current")
if mibBuilder.loadTexts:
    hwddBytesPerSector.setUnits("Bytes")
_HwddCapabilities_Type = WtcsDisplayString
_HwddCapabilities_Object = MibTableColumn
hwddCapabilities = _HwddCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 4),
    _HwddCapabilities_Type()
)
hwddCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddCapabilities.setStatus("current")
_HwddCapabilityDescriptions_Type = WtcsDisplayString
_HwddCapabilityDescriptions_Object = MibTableColumn
hwddCapabilityDescriptions = _HwddCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 5),
    _HwddCapabilityDescriptions_Type()
)
hwddCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddCapabilityDescriptions.setStatus("current")
_HwddCaption_Type = WtcsDisplayString
_HwddCaption_Object = MibTableColumn
hwddCaption = _HwddCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 6),
    _HwddCaption_Type()
)
hwddCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddCaption.setStatus("current")
_HwddCompressionMethod_Type = WtcsDisplayString
_HwddCompressionMethod_Object = MibTableColumn
hwddCompressionMethod = _HwddCompressionMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 7),
    _HwddCompressionMethod_Type()
)
hwddCompressionMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddCompressionMethod.setStatus("current")


class _HwddConfigManagerErrorCode_Type(Integer32):
    """Custom type hwddConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwddConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwddConfigManagerErrorCode_Object = MibTableColumn
hwddConfigManagerErrorCode = _HwddConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 8),
    _HwddConfigManagerErrorCode_Type()
)
hwddConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddConfigManagerErrorCode.setStatus("current")
_HwddConfigManagerUserConfig_Type = TruthValue
_HwddConfigManagerUserConfig_Object = MibTableColumn
hwddConfigManagerUserConfig = _HwddConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 9),
    _HwddConfigManagerUserConfig_Type()
)
hwddConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddConfigManagerUserConfig.setStatus("current")
_HwddCreationClassName_Type = WtcsDisplayString
_HwddCreationClassName_Object = MibTableColumn
hwddCreationClassName = _HwddCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 10),
    _HwddCreationClassName_Type()
)
hwddCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddCreationClassName.setStatus("current")
_HwddDefaultBlockSize_Type = Gauge32
_HwddDefaultBlockSize_Object = MibTableColumn
hwddDefaultBlockSize = _HwddDefaultBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 11),
    _HwddDefaultBlockSize_Type()
)
hwddDefaultBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddDefaultBlockSize.setStatus("current")
_HwddDescription_Type = WtcsDisplayString
_HwddDescription_Object = MibTableColumn
hwddDescription = _HwddDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 12),
    _HwddDescription_Type()
)
hwddDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddDescription.setStatus("current")
_HwddDeviceID_Type = WtcsDisplayString
_HwddDeviceID_Object = MibTableColumn
hwddDeviceID = _HwddDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 13),
    _HwddDeviceID_Type()
)
hwddDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddDeviceID.setStatus("current")
_HwddErrorCleared_Type = TruthValue
_HwddErrorCleared_Object = MibTableColumn
hwddErrorCleared = _HwddErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 14),
    _HwddErrorCleared_Type()
)
hwddErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddErrorCleared.setStatus("current")
_HwddErrorDescription_Type = WtcsDisplayString
_HwddErrorDescription_Object = MibTableColumn
hwddErrorDescription = _HwddErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 15),
    _HwddErrorDescription_Type()
)
hwddErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddErrorDescription.setStatus("current")
_HwddErrorMethodology_Type = WtcsDisplayString
_HwddErrorMethodology_Object = MibTableColumn
hwddErrorMethodology = _HwddErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 16),
    _HwddErrorMethodology_Type()
)
hwddErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddErrorMethodology.setStatus("current")
_HwddPhysicalIndex_Type = Gauge32
_HwddPhysicalIndex_Object = MibTableColumn
hwddPhysicalIndex = _HwddPhysicalIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 17),
    _HwddPhysicalIndex_Type()
)
hwddPhysicalIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddPhysicalIndex.setStatus("current")
_HwddInstallDate_Type = DateAndTime
_HwddInstallDate_Object = MibTableColumn
hwddInstallDate = _HwddInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 18),
    _HwddInstallDate_Type()
)
hwddInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddInstallDate.setStatus("current")
_HwddInterfaceType_Type = WtcsDisplayString
_HwddInterfaceType_Object = MibTableColumn
hwddInterfaceType = _HwddInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 19),
    _HwddInterfaceType_Type()
)
hwddInterfaceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddInterfaceType.setStatus("current")
_HwddLastErrorCode_Type = Gauge32
_HwddLastErrorCode_Object = MibTableColumn
hwddLastErrorCode = _HwddLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 20),
    _HwddLastErrorCode_Type()
)
hwddLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddLastErrorCode.setStatus("current")
_HwddManufacturer_Type = WtcsDisplayString
_HwddManufacturer_Object = MibTableColumn
hwddManufacturer = _HwddManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 21),
    _HwddManufacturer_Type()
)
hwddManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddManufacturer.setStatus("current")
_HwddMaxBlockSize_Type = Gauge32
_HwddMaxBlockSize_Object = MibTableColumn
hwddMaxBlockSize = _HwddMaxBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 22),
    _HwddMaxBlockSize_Type()
)
hwddMaxBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddMaxBlockSize.setStatus("current")
_HwddMaxMediaSize_Type = Gauge32
_HwddMaxMediaSize_Object = MibTableColumn
hwddMaxMediaSize = _HwddMaxMediaSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 23),
    _HwddMaxMediaSize_Type()
)
hwddMaxMediaSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddMaxMediaSize.setStatus("current")
_HwddMediaLoaded_Type = TruthValue
_HwddMediaLoaded_Object = MibTableColumn
hwddMediaLoaded = _HwddMediaLoaded_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 24),
    _HwddMediaLoaded_Type()
)
hwddMediaLoaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddMediaLoaded.setStatus("current")
_HwddMediaType_Type = WtcsDisplayString
_HwddMediaType_Object = MibTableColumn
hwddMediaType = _HwddMediaType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 25),
    _HwddMediaType_Type()
)
hwddMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddMediaType.setStatus("current")
_HwddMinBlockSize_Type = Gauge32
_HwddMinBlockSize_Object = MibTableColumn
hwddMinBlockSize = _HwddMinBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 26),
    _HwddMinBlockSize_Type()
)
hwddMinBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddMinBlockSize.setStatus("current")
_HwddModel_Type = WtcsDisplayString
_HwddModel_Object = MibTableColumn
hwddModel = _HwddModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 27),
    _HwddModel_Type()
)
hwddModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddModel.setStatus("current")
_HwddName_Type = WtcsDisplayString
_HwddName_Object = MibTableColumn
hwddName = _HwddName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 28),
    _HwddName_Type()
)
hwddName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddName.setStatus("current")
_HwddNeedsCleaning_Type = TruthValue
_HwddNeedsCleaning_Object = MibTableColumn
hwddNeedsCleaning = _HwddNeedsCleaning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 29),
    _HwddNeedsCleaning_Type()
)
hwddNeedsCleaning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddNeedsCleaning.setStatus("current")
_HwddNumberOfMediaSupported_Type = Gauge32
_HwddNumberOfMediaSupported_Object = MibTableColumn
hwddNumberOfMediaSupported = _HwddNumberOfMediaSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 30),
    _HwddNumberOfMediaSupported_Type()
)
hwddNumberOfMediaSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddNumberOfMediaSupported.setStatus("current")
_HwddPartitions_Type = Gauge32
_HwddPartitions_Object = MibTableColumn
hwddPartitions = _HwddPartitions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 31),
    _HwddPartitions_Type()
)
hwddPartitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddPartitions.setStatus("current")
_HwddPNPDeviceID_Type = WtcsDisplayString
_HwddPNPDeviceID_Object = MibTableColumn
hwddPNPDeviceID = _HwddPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 32),
    _HwddPNPDeviceID_Type()
)
hwddPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddPNPDeviceID.setStatus("current")
_HwddPowerManagementCapabilities_Type = WtcsDisplayString
_HwddPowerManagementCapabilities_Object = MibTableColumn
hwddPowerManagementCapabilities = _HwddPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 33),
    _HwddPowerManagementCapabilities_Type()
)
hwddPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddPowerManagementCapabilities.setStatus("current")
_HwddPowerManagementSupported_Type = TruthValue
_HwddPowerManagementSupported_Object = MibTableColumn
hwddPowerManagementSupported = _HwddPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 34),
    _HwddPowerManagementSupported_Type()
)
hwddPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddPowerManagementSupported.setStatus("current")
_HwddSCSIBus_Type = Gauge32
_HwddSCSIBus_Object = MibTableColumn
hwddSCSIBus = _HwddSCSIBus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 35),
    _HwddSCSIBus_Type()
)
hwddSCSIBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSCSIBus.setStatus("current")
_HwddSCSILogicalUnit_Type = Integer32
_HwddSCSILogicalUnit_Object = MibTableColumn
hwddSCSILogicalUnit = _HwddSCSILogicalUnit_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 36),
    _HwddSCSILogicalUnit_Type()
)
hwddSCSILogicalUnit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSCSILogicalUnit.setStatus("current")
_HwddSCSIPort_Type = Integer32
_HwddSCSIPort_Object = MibTableColumn
hwddSCSIPort = _HwddSCSIPort_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 37),
    _HwddSCSIPort_Type()
)
hwddSCSIPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSCSIPort.setStatus("current")
_HwddSCSITargetId_Type = Integer32
_HwddSCSITargetId_Object = MibTableColumn
hwddSCSITargetId = _HwddSCSITargetId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 38),
    _HwddSCSITargetId_Type()
)
hwddSCSITargetId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSCSITargetId.setStatus("current")
_HwddSectorsPerTrack_Type = Gauge32
_HwddSectorsPerTrack_Object = MibTableColumn
hwddSectorsPerTrack = _HwddSectorsPerTrack_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 39),
    _HwddSectorsPerTrack_Type()
)
hwddSectorsPerTrack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSectorsPerTrack.setStatus("current")
_HwddSignature_Type = Gauge32
_HwddSignature_Object = MibTableColumn
hwddSignature = _HwddSignature_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 40),
    _HwddSignature_Type()
)
hwddSignature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSignature.setStatus("current")
_HwddSize_Type = WtcsDisplayString
_HwddSize_Object = MibTableColumn
hwddSize = _HwddSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 41),
    _HwddSize_Type()
)
hwddSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSize.setStatus("current")
if mibBuilder.loadTexts:
    hwddSize.setUnits("Bytes")


class _HwddStatus_Type(Integer32):
    """Custom type hwddStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwddStatus_Type.__name__ = "Integer32"
_HwddStatus_Object = MibTableColumn
hwddStatus = _HwddStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 42),
    _HwddStatus_Type()
)
hwddStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddStatus.setStatus("current")


class _HwddStatusInfo_Type(Integer32):
    """Custom type hwddStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwddStatusInfo_Type.__name__ = "Integer32"
_HwddStatusInfo_Object = MibTableColumn
hwddStatusInfo = _HwddStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 43),
    _HwddStatusInfo_Type()
)
hwddStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddStatusInfo.setStatus("current")
_HwddSystemCreationClassName_Type = WtcsDisplayString
_HwddSystemCreationClassName_Object = MibTableColumn
hwddSystemCreationClassName = _HwddSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 44),
    _HwddSystemCreationClassName_Type()
)
hwddSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSystemCreationClassName.setStatus("current")
_HwddSystemName_Type = WtcsDisplayString
_HwddSystemName_Object = MibTableColumn
hwddSystemName = _HwddSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 45),
    _HwddSystemName_Type()
)
hwddSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddSystemName.setStatus("current")
_HwddTotalCylinders_Type = Gauge32
_HwddTotalCylinders_Object = MibTableColumn
hwddTotalCylinders = _HwddTotalCylinders_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 46),
    _HwddTotalCylinders_Type()
)
hwddTotalCylinders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddTotalCylinders.setStatus("current")
_HwddTotalHeads_Type = Gauge32
_HwddTotalHeads_Object = MibTableColumn
hwddTotalHeads = _HwddTotalHeads_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 47),
    _HwddTotalHeads_Type()
)
hwddTotalHeads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddTotalHeads.setStatus("current")
_HwddTotalSectors_Type = Gauge32
_HwddTotalSectors_Object = MibTableColumn
hwddTotalSectors = _HwddTotalSectors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 48),
    _HwddTotalSectors_Type()
)
hwddTotalSectors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddTotalSectors.setStatus("current")
_HwddTotalTracks_Type = Gauge32
_HwddTotalTracks_Object = MibTableColumn
hwddTotalTracks = _HwddTotalTracks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 49),
    _HwddTotalTracks_Type()
)
hwddTotalTracks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddTotalTracks.setStatus("current")
_HwddTracksPerCylinder_Type = Gauge32
_HwddTracksPerCylinder_Object = MibTableColumn
hwddTracksPerCylinder = _HwddTracksPerCylinder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 12, 1, 50),
    _HwddTracksPerCylinder_Type()
)
hwddTracksPerCylinder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwddTracksPerCylinder.setStatus("current")
_Win32FloppyDriveTable_Object = MibTable
win32FloppyDriveTable = _Win32FloppyDriveTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18)
)
if mibBuilder.loadTexts:
    win32FloppyDriveTable.setStatus("current")
_Win32FloppyDriveEntry_Object = MibTableRow
win32FloppyDriveEntry = _Win32FloppyDriveEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1)
)
win32FloppyDriveEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwfdIndex"),
)
if mibBuilder.loadTexts:
    win32FloppyDriveEntry.setStatus("current")


class _HwfdIndex_Type(Integer32):
    """Custom type hwfdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwfdIndex_Type.__name__ = "Integer32"
_HwfdIndex_Object = MibTableColumn
hwfdIndex = _HwfdIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 1),
    _HwfdIndex_Type()
)
hwfdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdIndex.setStatus("current")


class _HwfdAvailability_Type(Integer32):
    """Custom type hwfdAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwfdAvailability_Type.__name__ = "Integer32"
_HwfdAvailability_Object = MibTableColumn
hwfdAvailability = _HwfdAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 2),
    _HwfdAvailability_Type()
)
hwfdAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdAvailability.setStatus("current")
_HwfdCapabilities_Type = WtcsDisplayString
_HwfdCapabilities_Object = MibTableColumn
hwfdCapabilities = _HwfdCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 3),
    _HwfdCapabilities_Type()
)
hwfdCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdCapabilities.setStatus("current")
_HwfdCapabilityDescriptions_Type = WtcsDisplayString
_HwfdCapabilityDescriptions_Object = MibTableColumn
hwfdCapabilityDescriptions = _HwfdCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 4),
    _HwfdCapabilityDescriptions_Type()
)
hwfdCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdCapabilityDescriptions.setStatus("current")
_HwfdCaption_Type = WtcsDisplayString
_HwfdCaption_Object = MibTableColumn
hwfdCaption = _HwfdCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 5),
    _HwfdCaption_Type()
)
hwfdCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdCaption.setStatus("current")
_HwfdCompressionMethod_Type = WtcsDisplayString
_HwfdCompressionMethod_Object = MibTableColumn
hwfdCompressionMethod = _HwfdCompressionMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 6),
    _HwfdCompressionMethod_Type()
)
hwfdCompressionMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdCompressionMethod.setStatus("current")


class _HwfdConfigManagerErrorCode_Type(Integer32):
    """Custom type hwfdConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwfdConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwfdConfigManagerErrorCode_Object = MibTableColumn
hwfdConfigManagerErrorCode = _HwfdConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 7),
    _HwfdConfigManagerErrorCode_Type()
)
hwfdConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdConfigManagerErrorCode.setStatus("current")
_HwfdConfigManagerUserConfig_Type = TruthValue
_HwfdConfigManagerUserConfig_Object = MibTableColumn
hwfdConfigManagerUserConfig = _HwfdConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 8),
    _HwfdConfigManagerUserConfig_Type()
)
hwfdConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdConfigManagerUserConfig.setStatus("current")
_HwfdCreationClassName_Type = WtcsDisplayString
_HwfdCreationClassName_Object = MibTableColumn
hwfdCreationClassName = _HwfdCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 9),
    _HwfdCreationClassName_Type()
)
hwfdCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdCreationClassName.setStatus("current")
_HwfdDefaultBlockSize_Type = Gauge32
_HwfdDefaultBlockSize_Object = MibTableColumn
hwfdDefaultBlockSize = _HwfdDefaultBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 10),
    _HwfdDefaultBlockSize_Type()
)
hwfdDefaultBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdDefaultBlockSize.setStatus("current")
_HwfdDescription_Type = WtcsDisplayString
_HwfdDescription_Object = MibTableColumn
hwfdDescription = _HwfdDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 11),
    _HwfdDescription_Type()
)
hwfdDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdDescription.setStatus("current")
_HwfdDeviceID_Type = WtcsDisplayString
_HwfdDeviceID_Object = MibTableColumn
hwfdDeviceID = _HwfdDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 12),
    _HwfdDeviceID_Type()
)
hwfdDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdDeviceID.setStatus("current")
_HwfdErrorCleared_Type = TruthValue
_HwfdErrorCleared_Object = MibTableColumn
hwfdErrorCleared = _HwfdErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 13),
    _HwfdErrorCleared_Type()
)
hwfdErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdErrorCleared.setStatus("current")
_HwfdErrorDescription_Type = WtcsDisplayString
_HwfdErrorDescription_Object = MibTableColumn
hwfdErrorDescription = _HwfdErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 14),
    _HwfdErrorDescription_Type()
)
hwfdErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdErrorDescription.setStatus("current")
_HwfdErrorMethodology_Type = WtcsDisplayString
_HwfdErrorMethodology_Object = MibTableColumn
hwfdErrorMethodology = _HwfdErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 15),
    _HwfdErrorMethodology_Type()
)
hwfdErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdErrorMethodology.setStatus("current")
_HwfdInstallDate_Type = DateAndTime
_HwfdInstallDate_Object = MibTableColumn
hwfdInstallDate = _HwfdInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 16),
    _HwfdInstallDate_Type()
)
hwfdInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdInstallDate.setStatus("current")
_HwfdLastErrorCode_Type = Gauge32
_HwfdLastErrorCode_Object = MibTableColumn
hwfdLastErrorCode = _HwfdLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 17),
    _HwfdLastErrorCode_Type()
)
hwfdLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdLastErrorCode.setStatus("current")
_HwfdManufacturer_Type = WtcsDisplayString
_HwfdManufacturer_Object = MibTableColumn
hwfdManufacturer = _HwfdManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 18),
    _HwfdManufacturer_Type()
)
hwfdManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdManufacturer.setStatus("current")
_HwfdMaxBlockSize_Type = Gauge32
_HwfdMaxBlockSize_Object = MibTableColumn
hwfdMaxBlockSize = _HwfdMaxBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 19),
    _HwfdMaxBlockSize_Type()
)
hwfdMaxBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdMaxBlockSize.setStatus("current")
_HwfdMaxMediaSize_Type = Gauge32
_HwfdMaxMediaSize_Object = MibTableColumn
hwfdMaxMediaSize = _HwfdMaxMediaSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 20),
    _HwfdMaxMediaSize_Type()
)
hwfdMaxMediaSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdMaxMediaSize.setStatus("current")
_HwfdMinBlockSize_Type = Gauge32
_HwfdMinBlockSize_Object = MibTableColumn
hwfdMinBlockSize = _HwfdMinBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 21),
    _HwfdMinBlockSize_Type()
)
hwfdMinBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdMinBlockSize.setStatus("current")
_HwfdName_Type = WtcsDisplayString
_HwfdName_Object = MibTableColumn
hwfdName = _HwfdName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 22),
    _HwfdName_Type()
)
hwfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdName.setStatus("current")
_HwfdNeedsCleaning_Type = TruthValue
_HwfdNeedsCleaning_Object = MibTableColumn
hwfdNeedsCleaning = _HwfdNeedsCleaning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 23),
    _HwfdNeedsCleaning_Type()
)
hwfdNeedsCleaning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdNeedsCleaning.setStatus("current")
_HwfdNumberOfMediaSupported_Type = Gauge32
_HwfdNumberOfMediaSupported_Object = MibTableColumn
hwfdNumberOfMediaSupported = _HwfdNumberOfMediaSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 24),
    _HwfdNumberOfMediaSupported_Type()
)
hwfdNumberOfMediaSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdNumberOfMediaSupported.setStatus("current")
_HwfdPNPDeviceID_Type = WtcsDisplayString
_HwfdPNPDeviceID_Object = MibTableColumn
hwfdPNPDeviceID = _HwfdPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 25),
    _HwfdPNPDeviceID_Type()
)
hwfdPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdPNPDeviceID.setStatus("current")
_HwfdPowerManagementCapabilities_Type = WtcsDisplayString
_HwfdPowerManagementCapabilities_Object = MibTableColumn
hwfdPowerManagementCapabilities = _HwfdPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 26),
    _HwfdPowerManagementCapabilities_Type()
)
hwfdPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdPowerManagementCapabilities.setStatus("current")
_HwfdPowerManagementSupported_Type = TruthValue
_HwfdPowerManagementSupported_Object = MibTableColumn
hwfdPowerManagementSupported = _HwfdPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 27),
    _HwfdPowerManagementSupported_Type()
)
hwfdPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdPowerManagementSupported.setStatus("current")


class _HwfdStatus_Type(Integer32):
    """Custom type hwfdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwfdStatus_Type.__name__ = "Integer32"
_HwfdStatus_Object = MibTableColumn
hwfdStatus = _HwfdStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 28),
    _HwfdStatus_Type()
)
hwfdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdStatus.setStatus("current")


class _HwfdStatusInfo_Type(Integer32):
    """Custom type hwfdStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwfdStatusInfo_Type.__name__ = "Integer32"
_HwfdStatusInfo_Object = MibTableColumn
hwfdStatusInfo = _HwfdStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 29),
    _HwfdStatusInfo_Type()
)
hwfdStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdStatusInfo.setStatus("current")
_HwfdSystemCreationClassName_Type = WtcsDisplayString
_HwfdSystemCreationClassName_Object = MibTableColumn
hwfdSystemCreationClassName = _HwfdSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 30),
    _HwfdSystemCreationClassName_Type()
)
hwfdSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdSystemCreationClassName.setStatus("current")
_HwfdSystemName_Type = WtcsDisplayString
_HwfdSystemName_Object = MibTableColumn
hwfdSystemName = _HwfdSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 18, 1, 31),
    _HwfdSystemName_Type()
)
hwfdSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfdSystemName.setStatus("current")
_Win32PhysicalMediaTable_Object = MibTable
win32PhysicalMediaTable = _Win32PhysicalMediaTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32)
)
if mibBuilder.loadTexts:
    win32PhysicalMediaTable.setStatus("current")
_Win32PhysicalMediaEntry_Object = MibTableRow
win32PhysicalMediaEntry = _Win32PhysicalMediaEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1)
)
win32PhysicalMediaEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpmdIndex"),
)
if mibBuilder.loadTexts:
    win32PhysicalMediaEntry.setStatus("current")


class _HwpmdIndex_Type(Integer32):
    """Custom type hwpmdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpmdIndex_Type.__name__ = "Integer32"
_HwpmdIndex_Object = MibTableColumn
hwpmdIndex = _HwpmdIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 1),
    _HwpmdIndex_Type()
)
hwpmdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdIndex.setStatus("current")
_HwpmdCapacity_Type = Gauge32
_HwpmdCapacity_Object = MibTableColumn
hwpmdCapacity = _HwpmdCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 2),
    _HwpmdCapacity_Type()
)
hwpmdCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdCapacity.setStatus("current")
_HwpmdCaption_Type = WtcsDisplayString
_HwpmdCaption_Object = MibTableColumn
hwpmdCaption = _HwpmdCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 3),
    _HwpmdCaption_Type()
)
hwpmdCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdCaption.setStatus("current")
_HwpmdCleanerMedia_Type = TruthValue
_HwpmdCleanerMedia_Object = MibTableColumn
hwpmdCleanerMedia = _HwpmdCleanerMedia_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 4),
    _HwpmdCleanerMedia_Type()
)
hwpmdCleanerMedia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdCleanerMedia.setStatus("current")
_HwpmdCreationClassName_Type = WtcsDisplayString
_HwpmdCreationClassName_Object = MibTableColumn
hwpmdCreationClassName = _HwpmdCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 5),
    _HwpmdCreationClassName_Type()
)
hwpmdCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdCreationClassName.setStatus("current")
_HwpmdDescription_Type = WtcsDisplayString
_HwpmdDescription_Object = MibTableColumn
hwpmdDescription = _HwpmdDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 6),
    _HwpmdDescription_Type()
)
hwpmdDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdDescription.setStatus("current")
_HwpmdHotSwappable_Type = TruthValue
_HwpmdHotSwappable_Object = MibTableColumn
hwpmdHotSwappable = _HwpmdHotSwappable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 7),
    _HwpmdHotSwappable_Type()
)
hwpmdHotSwappable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdHotSwappable.setStatus("current")
_HwpmdInstallDate_Type = DateAndTime
_HwpmdInstallDate_Object = MibTableColumn
hwpmdInstallDate = _HwpmdInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 8),
    _HwpmdInstallDate_Type()
)
hwpmdInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdInstallDate.setStatus("current")
_HwpmdManufacturer_Type = WtcsDisplayString
_HwpmdManufacturer_Object = MibTableColumn
hwpmdManufacturer = _HwpmdManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 9),
    _HwpmdManufacturer_Type()
)
hwpmdManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdManufacturer.setStatus("current")
_HwpmdMediaDescription_Type = WtcsDisplayString
_HwpmdMediaDescription_Object = MibTableColumn
hwpmdMediaDescription = _HwpmdMediaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 10),
    _HwpmdMediaDescription_Type()
)
hwpmdMediaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdMediaDescription.setStatus("current")


class _HwpmdMediaType_Type(Integer32):
    """Custom type hwpmdMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66)
        )
    )
    namedValues = NamedValues(
        *(("ablativeWriteOnce", 49),
          ("aitCartridge", 4),
          ("cartridgeDisk", 11),
          ("cd", 35),
          ("cdDA", 34),
          ("cdI", 18),
          ("cdROM", 16),
          ("cdROMXA", 17),
          ("cdRW", 33),
          ("cdRecordable", 19),
          ("clikDisk", 32),
          ("d2Tape", 63),
          ("datCartridge", 6),
          ("divx", 27),
          ("dltCartridge", 9),
          ("dtfCartridge", 5),
          ("dvd", 22),
          ("dvd10", 41),
          ("dvd18", 42),
          ("dvd5", 39),
          ("dvd9", 40),
          ("dvdAudio", 38),
          ("dvdRAM", 24),
          ("dvdROM", 25),
          ("dvdRWminus", 37),
          ("dvdRWplus", 23),
          ("dvdRecordable", 36),
          ("dvdVideo", 26),
          ("floppyDiskette", 28),
          ("halfInchMagneticTapeCartridge", 10),
          ("hardCopy", 31),
          ("hardDisk", 29),
          ("jazDisk", 12),
          ("ltoAccelis", 57),
          ("ltoUltrium", 56),
          ("magnetoOptical", 21),
          ("magnetoOpticalRewriteable", 43),
          ("magnetoOpticalRewriteableLIMDOW", 45),
          ("magnetoOpticalWriteOnce", 44),
          ("magstar3590", 61),
          ("magstarMP", 62),
          ("memoryCard", 30),
          ("miniQic", 51),
          ("n18TrackTape", 59),
          ("n19mmTapeCartridge", 8),
          ("n36TrackTape", 60),
          ("n8mmAdvancedMetalEvaporate", 54),
          ("n8mmMetalParticle", 53),
          ("n8mmTapeCartridge", 7),
          ("n9TrackeTape", 58),
          ("nctp", 55),
          ("nearFieldRecording", 50),
          ("other", 1),
          ("phaseChangeDualRewriteable", 48),
          ("phaseChangeRewriteable", 47),
          ("phaseChangeWriteOnce", 46),
          ("qicCartridge", 3),
          ("syQuestDisk", 14),
          ("tapeCartridge", 2),
          ("tapeDSTLarge", 66),
          ("tapeDSTMedium", 65),
          ("tapeDSTSmall", 64),
          ("travan", 52),
          ("unknown", 0),
          ("winchesterRemovableDisk", 15),
          ("worm", 20),
          ("zipDisk", 13))
    )


_HwpmdMediaType_Type.__name__ = "Integer32"
_HwpmdMediaType_Object = MibTableColumn
hwpmdMediaType = _HwpmdMediaType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 11),
    _HwpmdMediaType_Type()
)
hwpmdMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdMediaType.setStatus("current")
_HwpmdModel_Type = WtcsDisplayString
_HwpmdModel_Object = MibTableColumn
hwpmdModel = _HwpmdModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 12),
    _HwpmdModel_Type()
)
hwpmdModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdModel.setStatus("current")
_HwpmdName_Type = WtcsDisplayString
_HwpmdName_Object = MibTableColumn
hwpmdName = _HwpmdName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 13),
    _HwpmdName_Type()
)
hwpmdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdName.setStatus("current")
_HwpmdOtherIdentifyingInfo_Type = WtcsDisplayString
_HwpmdOtherIdentifyingInfo_Object = MibTableColumn
hwpmdOtherIdentifyingInfo = _HwpmdOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 14),
    _HwpmdOtherIdentifyingInfo_Type()
)
hwpmdOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdOtherIdentifyingInfo.setStatus("current")
_HwpmdPartNumber_Type = WtcsDisplayString
_HwpmdPartNumber_Object = MibTableColumn
hwpmdPartNumber = _HwpmdPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 15),
    _HwpmdPartNumber_Type()
)
hwpmdPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdPartNumber.setStatus("current")
_HwpmdPoweredOn_Type = TruthValue
_HwpmdPoweredOn_Object = MibTableColumn
hwpmdPoweredOn = _HwpmdPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 16),
    _HwpmdPoweredOn_Type()
)
hwpmdPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdPoweredOn.setStatus("current")
_HwpmdRemovable_Type = TruthValue
_HwpmdRemovable_Object = MibTableColumn
hwpmdRemovable = _HwpmdRemovable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 17),
    _HwpmdRemovable_Type()
)
hwpmdRemovable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdRemovable.setStatus("current")
_HwpmdReplaceable_Type = TruthValue
_HwpmdReplaceable_Object = MibTableColumn
hwpmdReplaceable = _HwpmdReplaceable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 18),
    _HwpmdReplaceable_Type()
)
hwpmdReplaceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdReplaceable.setStatus("current")
_HwpmdSerialNumber_Type = WtcsDisplayString
_HwpmdSerialNumber_Object = MibTableColumn
hwpmdSerialNumber = _HwpmdSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 19),
    _HwpmdSerialNumber_Type()
)
hwpmdSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdSerialNumber.setStatus("current")
_HwpmdSKU_Type = WtcsDisplayString
_HwpmdSKU_Object = MibTableColumn
hwpmdSKU = _HwpmdSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 20),
    _HwpmdSKU_Type()
)
hwpmdSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdSKU.setStatus("current")


class _HwpmdStatus_Type(Integer32):
    """Custom type hwpmdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpmdStatus_Type.__name__ = "Integer32"
_HwpmdStatus_Object = MibTableColumn
hwpmdStatus = _HwpmdStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 21),
    _HwpmdStatus_Type()
)
hwpmdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdStatus.setStatus("current")


class _HwpmdTag_Type(WtcsDisplayString):
    """Custom type hwpmdTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpmdTag_Type.__name__ = "WtcsDisplayString"
_HwpmdTag_Object = MibTableColumn
hwpmdTag = _HwpmdTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 22),
    _HwpmdTag_Type()
)
hwpmdTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdTag.setStatus("current")
_HwpmdVersion_Type = WtcsDisplayString
_HwpmdVersion_Object = MibTableColumn
hwpmdVersion = _HwpmdVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 23),
    _HwpmdVersion_Type()
)
hwpmdVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdVersion.setStatus("current")
_HwpmdWriteProtectOn_Type = TruthValue
_HwpmdWriteProtectOn_Object = MibTableColumn
hwpmdWriteProtectOn = _HwpmdWriteProtectOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 32, 1, 24),
    _HwpmdWriteProtectOn_Type()
)
hwpmdWriteProtectOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmdWriteProtectOn.setStatus("current")
_Win32TapeDriveTable_Object = MibTable
win32TapeDriveTable = _Win32TapeDriveTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56)
)
if mibBuilder.loadTexts:
    win32TapeDriveTable.setStatus("current")
_Win32TapeDriveEntry_Object = MibTableRow
win32TapeDriveEntry = _Win32TapeDriveEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1)
)
win32TapeDriveEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwtdIndex"),
)
if mibBuilder.loadTexts:
    win32TapeDriveEntry.setStatus("current")


class _HwtdIndex_Type(Integer32):
    """Custom type hwtdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwtdIndex_Type.__name__ = "Integer32"
_HwtdIndex_Object = MibTableColumn
hwtdIndex = _HwtdIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 1),
    _HwtdIndex_Type()
)
hwtdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdIndex.setStatus("current")


class _HwtdAvailability_Type(Integer32):
    """Custom type hwtdAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwtdAvailability_Type.__name__ = "Integer32"
_HwtdAvailability_Object = MibTableColumn
hwtdAvailability = _HwtdAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 2),
    _HwtdAvailability_Type()
)
hwtdAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdAvailability.setStatus("current")
_HwtdCapabilities_Type = WtcsDisplayString
_HwtdCapabilities_Object = MibTableColumn
hwtdCapabilities = _HwtdCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 3),
    _HwtdCapabilities_Type()
)
hwtdCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdCapabilities.setStatus("current")
_HwtdCapabilityDescriptions_Type = WtcsDisplayString
_HwtdCapabilityDescriptions_Object = MibTableColumn
hwtdCapabilityDescriptions = _HwtdCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 4),
    _HwtdCapabilityDescriptions_Type()
)
hwtdCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdCapabilityDescriptions.setStatus("current")


class _HwtdCaption_Type(WtcsDisplayString):
    """Custom type hwtdCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwtdCaption_Type.__name__ = "WtcsDisplayString"
_HwtdCaption_Object = MibTableColumn
hwtdCaption = _HwtdCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 5),
    _HwtdCaption_Type()
)
hwtdCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdCaption.setStatus("current")


class _HwtdCompression_Type(Integer32):
    """Custom type hwtdCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_HwtdCompression_Type.__name__ = "Integer32"
_HwtdCompression_Object = MibTableColumn
hwtdCompression = _HwtdCompression_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 6),
    _HwtdCompression_Type()
)
hwtdCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdCompression.setStatus("current")
_HwtdCompressionMethod_Type = WtcsDisplayString
_HwtdCompressionMethod_Object = MibTableColumn
hwtdCompressionMethod = _HwtdCompressionMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 7),
    _HwtdCompressionMethod_Type()
)
hwtdCompressionMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdCompressionMethod.setStatus("current")


class _HwtdConfigManagerErrorCode_Type(Integer32):
    """Custom type hwtdConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwtdConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwtdConfigManagerErrorCode_Object = MibTableColumn
hwtdConfigManagerErrorCode = _HwtdConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 8),
    _HwtdConfigManagerErrorCode_Type()
)
hwtdConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdConfigManagerErrorCode.setStatus("current")
_HwtdConfigManagerUserConfig_Type = TruthValue
_HwtdConfigManagerUserConfig_Object = MibTableColumn
hwtdConfigManagerUserConfig = _HwtdConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 9),
    _HwtdConfigManagerUserConfig_Type()
)
hwtdConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdConfigManagerUserConfig.setStatus("current")
_HwtdCreationClassName_Type = WtcsDisplayString
_HwtdCreationClassName_Object = MibTableColumn
hwtdCreationClassName = _HwtdCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 10),
    _HwtdCreationClassName_Type()
)
hwtdCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdCreationClassName.setStatus("current")
_HwtdDefaultBlockSize_Type = Gauge32
_HwtdDefaultBlockSize_Object = MibTableColumn
hwtdDefaultBlockSize = _HwtdDefaultBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 11),
    _HwtdDefaultBlockSize_Type()
)
hwtdDefaultBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdDefaultBlockSize.setStatus("current")
_HwtdDescription_Type = WtcsDisplayString
_HwtdDescription_Object = MibTableColumn
hwtdDescription = _HwtdDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 12),
    _HwtdDescription_Type()
)
hwtdDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdDescription.setStatus("current")
_HwtdDeviceID_Type = WtcsDisplayString
_HwtdDeviceID_Object = MibTableColumn
hwtdDeviceID = _HwtdDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 13),
    _HwtdDeviceID_Type()
)
hwtdDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdDeviceID.setStatus("current")


class _HwtdECC_Type(Integer32):
    """Custom type hwtdECC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_HwtdECC_Type.__name__ = "Integer32"
_HwtdECC_Object = MibTableColumn
hwtdECC = _HwtdECC_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 14),
    _HwtdECC_Type()
)
hwtdECC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdECC.setStatus("current")
_HwtdEOTWarningZoneSize_Type = Gauge32
_HwtdEOTWarningZoneSize_Object = MibTableColumn
hwtdEOTWarningZoneSize = _HwtdEOTWarningZoneSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 15),
    _HwtdEOTWarningZoneSize_Type()
)
hwtdEOTWarningZoneSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdEOTWarningZoneSize.setStatus("current")
_HwtdErrorCleared_Type = TruthValue
_HwtdErrorCleared_Object = MibTableColumn
hwtdErrorCleared = _HwtdErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 16),
    _HwtdErrorCleared_Type()
)
hwtdErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdErrorCleared.setStatus("current")
_HwtdErrorDescription_Type = WtcsDisplayString
_HwtdErrorDescription_Object = MibTableColumn
hwtdErrorDescription = _HwtdErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 17),
    _HwtdErrorDescription_Type()
)
hwtdErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdErrorDescription.setStatus("current")
_HwtdErrorMethodology_Type = WtcsDisplayString
_HwtdErrorMethodology_Object = MibTableColumn
hwtdErrorMethodology = _HwtdErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 18),
    _HwtdErrorMethodology_Type()
)
hwtdErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdErrorMethodology.setStatus("current")
_HwtdFeaturesHigh_Type = Gauge32
_HwtdFeaturesHigh_Object = MibTableColumn
hwtdFeaturesHigh = _HwtdFeaturesHigh_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 19),
    _HwtdFeaturesHigh_Type()
)
hwtdFeaturesHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdFeaturesHigh.setStatus("current")
_HwtdFeaturesLow_Type = Gauge32
_HwtdFeaturesLow_Object = MibTableColumn
hwtdFeaturesLow = _HwtdFeaturesLow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 20),
    _HwtdFeaturesLow_Type()
)
hwtdFeaturesLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdFeaturesLow.setStatus("current")
_HwtdId_Type = WtcsDisplayString
_HwtdId_Object = MibTableColumn
hwtdId = _HwtdId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 21),
    _HwtdId_Type()
)
hwtdId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdId.setStatus("current")
_HwtdInstallDate_Type = DateAndTime
_HwtdInstallDate_Object = MibTableColumn
hwtdInstallDate = _HwtdInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 22),
    _HwtdInstallDate_Type()
)
hwtdInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdInstallDate.setStatus("current")
_HwtdLastErrorCode_Type = Gauge32
_HwtdLastErrorCode_Object = MibTableColumn
hwtdLastErrorCode = _HwtdLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 23),
    _HwtdLastErrorCode_Type()
)
hwtdLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdLastErrorCode.setStatus("current")
_HwtdManufacturer_Type = WtcsDisplayString
_HwtdManufacturer_Object = MibTableColumn
hwtdManufacturer = _HwtdManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 24),
    _HwtdManufacturer_Type()
)
hwtdManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdManufacturer.setStatus("current")
_HwtdMaxBlockSize_Type = Gauge32
_HwtdMaxBlockSize_Object = MibTableColumn
hwtdMaxBlockSize = _HwtdMaxBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 25),
    _HwtdMaxBlockSize_Type()
)
hwtdMaxBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdMaxBlockSize.setStatus("current")
_HwtdMaxMediaSize_Type = Gauge32
_HwtdMaxMediaSize_Object = MibTableColumn
hwtdMaxMediaSize = _HwtdMaxMediaSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 26),
    _HwtdMaxMediaSize_Type()
)
hwtdMaxMediaSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdMaxMediaSize.setStatus("current")
_HwtdMaxPartitionCount_Type = Gauge32
_HwtdMaxPartitionCount_Object = MibTableColumn
hwtdMaxPartitionCount = _HwtdMaxPartitionCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 27),
    _HwtdMaxPartitionCount_Type()
)
hwtdMaxPartitionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdMaxPartitionCount.setStatus("current")
_HwtdMediaType_Type = WtcsDisplayString
_HwtdMediaType_Object = MibTableColumn
hwtdMediaType = _HwtdMediaType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 28),
    _HwtdMediaType_Type()
)
hwtdMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdMediaType.setStatus("current")
_HwtdMinBlockSize_Type = Gauge32
_HwtdMinBlockSize_Object = MibTableColumn
hwtdMinBlockSize = _HwtdMinBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 29),
    _HwtdMinBlockSize_Type()
)
hwtdMinBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdMinBlockSize.setStatus("current")
_HwtdName_Type = WtcsDisplayString
_HwtdName_Object = MibTableColumn
hwtdName = _HwtdName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 30),
    _HwtdName_Type()
)
hwtdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdName.setStatus("current")
_HwtdNeedsCleaning_Type = TruthValue
_HwtdNeedsCleaning_Object = MibTableColumn
hwtdNeedsCleaning = _HwtdNeedsCleaning_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 31),
    _HwtdNeedsCleaning_Type()
)
hwtdNeedsCleaning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdNeedsCleaning.setStatus("current")
_HwtdNumberOfMediaSupported_Type = Gauge32
_HwtdNumberOfMediaSupported_Object = MibTableColumn
hwtdNumberOfMediaSupported = _HwtdNumberOfMediaSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 32),
    _HwtdNumberOfMediaSupported_Type()
)
hwtdNumberOfMediaSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdNumberOfMediaSupported.setStatus("current")
_HwtdPadding_Type = Gauge32
_HwtdPadding_Object = MibTableColumn
hwtdPadding = _HwtdPadding_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 33),
    _HwtdPadding_Type()
)
hwtdPadding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdPadding.setStatus("current")
if mibBuilder.loadTexts:
    hwtdPadding.setUnits("Bytes")
_HwtdPNPDeviceID_Type = WtcsDisplayString
_HwtdPNPDeviceID_Object = MibTableColumn
hwtdPNPDeviceID = _HwtdPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 34),
    _HwtdPNPDeviceID_Type()
)
hwtdPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdPNPDeviceID.setStatus("current")
_HwtdPowerManagementCapabilities_Type = WtcsDisplayString
_HwtdPowerManagementCapabilities_Object = MibTableColumn
hwtdPowerManagementCapabilities = _HwtdPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 35),
    _HwtdPowerManagementCapabilities_Type()
)
hwtdPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdPowerManagementCapabilities.setStatus("current")
_HwtdPowerManagementSupported_Type = TruthValue
_HwtdPowerManagementSupported_Object = MibTableColumn
hwtdPowerManagementSupported = _HwtdPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 36),
    _HwtdPowerManagementSupported_Type()
)
hwtdPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdPowerManagementSupported.setStatus("current")


class _HwtdReportSetMarks_Type(Integer32):
    """Custom type hwtdReportSetMarks based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_HwtdReportSetMarks_Type.__name__ = "Integer32"
_HwtdReportSetMarks_Object = MibTableColumn
hwtdReportSetMarks = _HwtdReportSetMarks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 37),
    _HwtdReportSetMarks_Type()
)
hwtdReportSetMarks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdReportSetMarks.setStatus("current")


class _HwtdStatus_Type(Integer32):
    """Custom type hwtdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwtdStatus_Type.__name__ = "Integer32"
_HwtdStatus_Object = MibTableColumn
hwtdStatus = _HwtdStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 38),
    _HwtdStatus_Type()
)
hwtdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdStatus.setStatus("current")


class _HwtdStatusInfo_Type(Integer32):
    """Custom type hwtdStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwtdStatusInfo_Type.__name__ = "Integer32"
_HwtdStatusInfo_Object = MibTableColumn
hwtdStatusInfo = _HwtdStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 39),
    _HwtdStatusInfo_Type()
)
hwtdStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdStatusInfo.setStatus("current")
_HwtdSystemCreationClassName_Type = WtcsDisplayString
_HwtdSystemCreationClassName_Object = MibTableColumn
hwtdSystemCreationClassName = _HwtdSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 40),
    _HwtdSystemCreationClassName_Type()
)
hwtdSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdSystemCreationClassName.setStatus("current")
_HwtdSystemName_Type = WtcsDisplayString
_HwtdSystemName_Object = MibTableColumn
hwtdSystemName = _HwtdSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 3, 56, 1, 41),
    _HwtdSystemName_Type()
)
hwtdSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtdSystemName.setStatus("current")
_WmiMotherboardControllerPort_ObjectIdentity = ObjectIdentity
wmiMotherboardControllerPort = _WmiMotherboardControllerPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4)
)
if mibBuilder.loadTexts:
    wmiMotherboardControllerPort.setStatus("current")
_Win321394ControllerTable_Object = MibTable
win321394ControllerTable = _Win321394ControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1)
)
if mibBuilder.loadTexts:
    win321394ControllerTable.setStatus("current")
_Win321394ControllerEntry_Object = MibTableRow
win321394ControllerEntry = _Win321394ControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1)
)
win321394ControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hw1394Index"),
)
if mibBuilder.loadTexts:
    win321394ControllerEntry.setStatus("current")


class _Hw1394Index_Type(Integer32):
    """Custom type hw1394Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_Hw1394Index_Type.__name__ = "Integer32"
_Hw1394Index_Object = MibTableColumn
hw1394Index = _Hw1394Index_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 1),
    _Hw1394Index_Type()
)
hw1394Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Index.setStatus("current")


class _Hw1394Availability_Type(Integer32):
    """Custom type hw1394Availability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notInstalled", 11),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_Hw1394Availability_Type.__name__ = "Integer32"
_Hw1394Availability_Object = MibTableColumn
hw1394Availability = _Hw1394Availability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 2),
    _Hw1394Availability_Type()
)
hw1394Availability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Availability.setStatus("current")
_Hw1394Caption_Type = WtcsDisplayString
_Hw1394Caption_Object = MibTableColumn
hw1394Caption = _Hw1394Caption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 3),
    _Hw1394Caption_Type()
)
hw1394Caption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Caption.setStatus("current")


class _Hw1394ConfigManagerErrorCode_Type(Integer32):
    """Custom type hw1394ConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_Hw1394ConfigManagerErrorCode_Type.__name__ = "Integer32"
_Hw1394ConfigManagerErrorCode_Object = MibTableColumn
hw1394ConfigManagerErrorCode = _Hw1394ConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 4),
    _Hw1394ConfigManagerErrorCode_Type()
)
hw1394ConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394ConfigManagerErrorCode.setStatus("current")
_Hw1394ConfigManagerUserConfig_Type = TruthValue
_Hw1394ConfigManagerUserConfig_Object = MibTableColumn
hw1394ConfigManagerUserConfig = _Hw1394ConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 5),
    _Hw1394ConfigManagerUserConfig_Type()
)
hw1394ConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394ConfigManagerUserConfig.setStatus("current")
_Hw1394CreationClassName_Type = WtcsDisplayString
_Hw1394CreationClassName_Object = MibTableColumn
hw1394CreationClassName = _Hw1394CreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 6),
    _Hw1394CreationClassName_Type()
)
hw1394CreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394CreationClassName.setStatus("current")
_Hw1394Description_Type = WtcsDisplayString
_Hw1394Description_Object = MibTableColumn
hw1394Description = _Hw1394Description_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 7),
    _Hw1394Description_Type()
)
hw1394Description.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Description.setStatus("current")
_Hw1394DeviceID_Type = WtcsDisplayString
_Hw1394DeviceID_Object = MibTableColumn
hw1394DeviceID = _Hw1394DeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 8),
    _Hw1394DeviceID_Type()
)
hw1394DeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394DeviceID.setStatus("current")
_Hw1394ErrorCleared_Type = TruthValue
_Hw1394ErrorCleared_Object = MibTableColumn
hw1394ErrorCleared = _Hw1394ErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 9),
    _Hw1394ErrorCleared_Type()
)
hw1394ErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394ErrorCleared.setStatus("current")
_Hw1394ErrorDescription_Type = WtcsDisplayString
_Hw1394ErrorDescription_Object = MibTableColumn
hw1394ErrorDescription = _Hw1394ErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 10),
    _Hw1394ErrorDescription_Type()
)
hw1394ErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394ErrorDescription.setStatus("current")
_Hw1394InstallDate_Type = DateAndTime
_Hw1394InstallDate_Object = MibTableColumn
hw1394InstallDate = _Hw1394InstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 11),
    _Hw1394InstallDate_Type()
)
hw1394InstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394InstallDate.setStatus("current")
_Hw1394LastErrorCode_Type = Gauge32
_Hw1394LastErrorCode_Object = MibTableColumn
hw1394LastErrorCode = _Hw1394LastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 12),
    _Hw1394LastErrorCode_Type()
)
hw1394LastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394LastErrorCode.setStatus("current")
_Hw1394Manufacturer_Type = WtcsDisplayString
_Hw1394Manufacturer_Object = MibTableColumn
hw1394Manufacturer = _Hw1394Manufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 13),
    _Hw1394Manufacturer_Type()
)
hw1394Manufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Manufacturer.setStatus("current")
_Hw1394MaxNumberControlled_Type = Gauge32
_Hw1394MaxNumberControlled_Object = MibTableColumn
hw1394MaxNumberControlled = _Hw1394MaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 14),
    _Hw1394MaxNumberControlled_Type()
)
hw1394MaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394MaxNumberControlled.setStatus("current")
_Hw1394Name_Type = WtcsDisplayString
_Hw1394Name_Object = MibTableColumn
hw1394Name = _Hw1394Name_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 15),
    _Hw1394Name_Type()
)
hw1394Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Name.setStatus("current")
_Hw1394PNPDeviceID_Type = WtcsDisplayString
_Hw1394PNPDeviceID_Object = MibTableColumn
hw1394PNPDeviceID = _Hw1394PNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 16),
    _Hw1394PNPDeviceID_Type()
)
hw1394PNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394PNPDeviceID.setStatus("current")
_Hw1394PowerManagementCapability_Type = WtcsDisplayString
_Hw1394PowerManagementCapability_Object = MibTableColumn
hw1394PowerManagementCapability = _Hw1394PowerManagementCapability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 17),
    _Hw1394PowerManagementCapability_Type()
)
hw1394PowerManagementCapability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394PowerManagementCapability.setStatus("current")
_Hw1394PowerManagementSupported_Type = TruthValue
_Hw1394PowerManagementSupported_Object = MibTableColumn
hw1394PowerManagementSupported = _Hw1394PowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 18),
    _Hw1394PowerManagementSupported_Type()
)
hw1394PowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394PowerManagementSupported.setStatus("current")


class _Hw1394ProtocolSupported_Type(Integer32):
    """Custom type hw1394ProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("agp", 43),
          ("ansiX3T95FDDI", 34),
          ("ataATAPI", 6),
          ("cmd", 38),
          ("diagnostic", 19),
          ("dssi", 40),
          ("eisa", 3),
          ("enhancedATAIDE", 42),
          ("escon", 18),
          ("esdi", 36),
          ("fastInfrared", 45),
          ("flexibleDiskette", 7),
          ("hippi", 22),
          ("i2C", 20),
          ("ide", 37),
          ("ieee488", 26),
          ("ieee8023100BASEVG", 32),
          ("ieee802310BASE2", 29),
          ("ieee802310BASE5", 28),
          ("ieee802310BROAD36", 31),
          ("ieee80231BASE5", 30),
          ("ieee8025TokenRing", 33),
          ("ipi", 25),
          ("irBus", 47),
          ("isa", 4),
          ("mca", 35),
          ("multiBus", 23),
          ("n1496", 8),
          ("other", 1),
          ("parallelProtocol", 17),
          ("pci", 5),
          ("pcmcia", 15),
          ("power", 21),
          ("qic2", 41),
          ("rs232", 27),
          ("scsiFibreChannelProtocol", 10),
          ("scsiParallelInterface", 9),
          ("scsiSerialBusProtocol", 11),
          ("scsiSerialBusProtocol2", 12),
          ("scsiSerialStorageArchitecture", 13),
          ("serialInfrared", 46),
          ("st506", 39),
          ("twoWayInfrared", 44),
          ("universalSerialBus", 16),
          ("unknown", 2),
          ("vesa", 14),
          ("vme", 24))
    )


_Hw1394ProtocolSupported_Type.__name__ = "Integer32"
_Hw1394ProtocolSupported_Object = MibTableColumn
hw1394ProtocolSupported = _Hw1394ProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 19),
    _Hw1394ProtocolSupported_Type()
)
hw1394ProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394ProtocolSupported.setStatus("current")


class _Hw1394Status_Type(Integer32):
    """Custom type hw1394Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_Hw1394Status_Type.__name__ = "Integer32"
_Hw1394Status_Object = MibTableColumn
hw1394Status = _Hw1394Status_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 20),
    _Hw1394Status_Type()
)
hw1394Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394Status.setStatus("current")


class _Hw1394StatusInfo_Type(Integer32):
    """Custom type hw1394StatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_Hw1394StatusInfo_Type.__name__ = "Integer32"
_Hw1394StatusInfo_Object = MibTableColumn
hw1394StatusInfo = _Hw1394StatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 21),
    _Hw1394StatusInfo_Type()
)
hw1394StatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394StatusInfo.setStatus("current")
_Hw1394SystemCreationClassName_Type = WtcsDisplayString
_Hw1394SystemCreationClassName_Object = MibTableColumn
hw1394SystemCreationClassName = _Hw1394SystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 22),
    _Hw1394SystemCreationClassName_Type()
)
hw1394SystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394SystemCreationClassName.setStatus("current")
_Hw1394SystemName_Type = WtcsDisplayString
_Hw1394SystemName_Object = MibTableColumn
hw1394SystemName = _Hw1394SystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 23),
    _Hw1394SystemName_Type()
)
hw1394SystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394SystemName.setStatus("current")
_Hw1394TimeOfLastReset_Type = DateAndTime
_Hw1394TimeOfLastReset_Object = MibTableColumn
hw1394TimeOfLastReset = _Hw1394TimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 1, 1, 24),
    _Hw1394TimeOfLastReset_Type()
)
hw1394TimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hw1394TimeOfLastReset.setStatus("current")
_Win32BaseBoardTable_Object = MibTable
win32BaseBoardTable = _Win32BaseBoardTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2)
)
if mibBuilder.loadTexts:
    win32BaseBoardTable.setStatus("current")
_Win32BaseBoardEntry_Object = MibTableRow
win32BaseBoardEntry = _Win32BaseBoardEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1)
)
win32BaseBoardEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwbbIndex"),
)
if mibBuilder.loadTexts:
    win32BaseBoardEntry.setStatus("current")


class _HwbbIndex_Type(Integer32):
    """Custom type hwbbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwbbIndex_Type.__name__ = "Integer32"
_HwbbIndex_Object = MibTableColumn
hwbbIndex = _HwbbIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 1),
    _HwbbIndex_Type()
)
hwbbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbIndex.setStatus("current")
_HwbbCaption_Type = WtcsDisplayString
_HwbbCaption_Object = MibTableColumn
hwbbCaption = _HwbbCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 2),
    _HwbbCaption_Type()
)
hwbbCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbCaption.setStatus("current")
_HwbbConfigOptions_Type = WtcsDisplayString
_HwbbConfigOptions_Object = MibTableColumn
hwbbConfigOptions = _HwbbConfigOptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 3),
    _HwbbConfigOptions_Type()
)
hwbbConfigOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbConfigOptions.setStatus("current")


class _HwbbCreationClassName_Type(WtcsDisplayString):
    """Custom type hwbbCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwbbCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwbbCreationClassName_Object = MibTableColumn
hwbbCreationClassName = _HwbbCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 4),
    _HwbbCreationClassName_Type()
)
hwbbCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbCreationClassName.setStatus("current")
_HwbbDepth_Type = Integer32
_HwbbDepth_Object = MibTableColumn
hwbbDepth = _HwbbDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 5),
    _HwbbDepth_Type()
)
hwbbDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbDepth.setStatus("current")
_HwbbDescription_Type = WtcsDisplayString
_HwbbDescription_Object = MibTableColumn
hwbbDescription = _HwbbDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 6),
    _HwbbDescription_Type()
)
hwbbDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbDescription.setStatus("current")
_HwbbHeight_Type = Integer32
_HwbbHeight_Object = MibTableColumn
hwbbHeight = _HwbbHeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 7),
    _HwbbHeight_Type()
)
hwbbHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbHeight.setStatus("current")
_HwbbHostingBoard_Type = TruthValue
_HwbbHostingBoard_Object = MibTableColumn
hwbbHostingBoard = _HwbbHostingBoard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 8),
    _HwbbHostingBoard_Type()
)
hwbbHostingBoard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbHostingBoard.setStatus("current")
_HwbbHotSwappable_Type = TruthValue
_HwbbHotSwappable_Object = MibTableColumn
hwbbHotSwappable = _HwbbHotSwappable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 9),
    _HwbbHotSwappable_Type()
)
hwbbHotSwappable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbHotSwappable.setStatus("current")
_HwbbInstallDate_Type = DateAndTime
_HwbbInstallDate_Object = MibTableColumn
hwbbInstallDate = _HwbbInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 10),
    _HwbbInstallDate_Type()
)
hwbbInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbInstallDate.setStatus("current")
_HwbbManufacturer_Type = WtcsDisplayString
_HwbbManufacturer_Object = MibTableColumn
hwbbManufacturer = _HwbbManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 11),
    _HwbbManufacturer_Type()
)
hwbbManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbManufacturer.setStatus("current")
_HwbbModel_Type = WtcsDisplayString
_HwbbModel_Object = MibTableColumn
hwbbModel = _HwbbModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 12),
    _HwbbModel_Type()
)
hwbbModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbModel.setStatus("current")
_HwbbName_Type = WtcsDisplayString
_HwbbName_Object = MibTableColumn
hwbbName = _HwbbName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 13),
    _HwbbName_Type()
)
hwbbName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbName.setStatus("current")
_HwbbOtherIdentifyingInfo_Type = WtcsDisplayString
_HwbbOtherIdentifyingInfo_Object = MibTableColumn
hwbbOtherIdentifyingInfo = _HwbbOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 14),
    _HwbbOtherIdentifyingInfo_Type()
)
hwbbOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbOtherIdentifyingInfo.setStatus("current")
_HwbbPartNumber_Type = WtcsDisplayString
_HwbbPartNumber_Object = MibTableColumn
hwbbPartNumber = _HwbbPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 15),
    _HwbbPartNumber_Type()
)
hwbbPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbPartNumber.setStatus("current")
_HwbbPoweredOn_Type = TruthValue
_HwbbPoweredOn_Object = MibTableColumn
hwbbPoweredOn = _HwbbPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 16),
    _HwbbPoweredOn_Type()
)
hwbbPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbPoweredOn.setStatus("current")
_HwbbProduct_Type = WtcsDisplayString
_HwbbProduct_Object = MibTableColumn
hwbbProduct = _HwbbProduct_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 17),
    _HwbbProduct_Type()
)
hwbbProduct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbProduct.setStatus("current")
_HwbbRemovable_Type = TruthValue
_HwbbRemovable_Object = MibTableColumn
hwbbRemovable = _HwbbRemovable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 18),
    _HwbbRemovable_Type()
)
hwbbRemovable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbRemovable.setStatus("current")
_HwbbReplaceable_Type = TruthValue
_HwbbReplaceable_Object = MibTableColumn
hwbbReplaceable = _HwbbReplaceable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 19),
    _HwbbReplaceable_Type()
)
hwbbReplaceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbReplaceable.setStatus("current")
_HwbbRequirementsDescription_Type = WtcsDisplayString
_HwbbRequirementsDescription_Object = MibTableColumn
hwbbRequirementsDescription = _HwbbRequirementsDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 20),
    _HwbbRequirementsDescription_Type()
)
hwbbRequirementsDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbRequirementsDescription.setStatus("current")
_HwbbRequiresDaughterBoard_Type = TruthValue
_HwbbRequiresDaughterBoard_Object = MibTableColumn
hwbbRequiresDaughterBoard = _HwbbRequiresDaughterBoard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 21),
    _HwbbRequiresDaughterBoard_Type()
)
hwbbRequiresDaughterBoard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbRequiresDaughterBoard.setStatus("current")
_HwbbSerialNumber_Type = WtcsDisplayString
_HwbbSerialNumber_Object = MibTableColumn
hwbbSerialNumber = _HwbbSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 22),
    _HwbbSerialNumber_Type()
)
hwbbSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbSerialNumber.setStatus("current")
_HwbbSKU_Type = WtcsDisplayString
_HwbbSKU_Object = MibTableColumn
hwbbSKU = _HwbbSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 23),
    _HwbbSKU_Type()
)
hwbbSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbSKU.setStatus("current")
_HwbbSlotLayout_Type = WtcsDisplayString
_HwbbSlotLayout_Object = MibTableColumn
hwbbSlotLayout = _HwbbSlotLayout_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 24),
    _HwbbSlotLayout_Type()
)
hwbbSlotLayout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbSlotLayout.setStatus("current")
_HwbbSpecialRequirements_Type = TruthValue
_HwbbSpecialRequirements_Object = MibTableColumn
hwbbSpecialRequirements = _HwbbSpecialRequirements_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 25),
    _HwbbSpecialRequirements_Type()
)
hwbbSpecialRequirements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbSpecialRequirements.setStatus("current")


class _HwbbStatus_Type(Integer32):
    """Custom type hwbbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwbbStatus_Type.__name__ = "Integer32"
_HwbbStatus_Object = MibTableColumn
hwbbStatus = _HwbbStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 26),
    _HwbbStatus_Type()
)
hwbbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbStatus.setStatus("current")


class _HwbbTag_Type(WtcsDisplayString):
    """Custom type hwbbTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwbbTag_Type.__name__ = "WtcsDisplayString"
_HwbbTag_Object = MibTableColumn
hwbbTag = _HwbbTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 27),
    _HwbbTag_Type()
)
hwbbTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbTag.setStatus("current")
_HwbbVersion_Type = WtcsDisplayString
_HwbbVersion_Object = MibTableColumn
hwbbVersion = _HwbbVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 28),
    _HwbbVersion_Type()
)
hwbbVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbVersion.setStatus("current")
_HwbbWeight_Type = Integer32
_HwbbWeight_Object = MibTableColumn
hwbbWeight = _HwbbWeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 29),
    _HwbbWeight_Type()
)
hwbbWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbWeight.setStatus("current")
_HwbbWidth_Type = Integer32
_HwbbWidth_Object = MibTableColumn
hwbbWidth = _HwbbWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 2, 1, 30),
    _HwbbWidth_Type()
)
hwbbWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbbWidth.setStatus("current")
_Win32BIOSTable_Object = MibTable
win32BIOSTable = _Win32BIOSTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3)
)
if mibBuilder.loadTexts:
    win32BIOSTable.setStatus("current")
_Win32BIOSEntry_Object = MibTableRow
win32BIOSEntry = _Win32BIOSEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1)
)
win32BIOSEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwbiIndex"),
)
if mibBuilder.loadTexts:
    win32BIOSEntry.setStatus("current")


class _HwbiIndex_Type(Integer32):
    """Custom type hwbiIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwbiIndex_Type.__name__ = "Integer32"
_HwbiIndex_Object = MibTableColumn
hwbiIndex = _HwbiIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 1),
    _HwbiIndex_Type()
)
hwbiIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiIndex.setStatus("current")
_HwbiBiosCharacteristics_Type = WtcsDisplayString
_HwbiBiosCharacteristics_Object = MibTableColumn
hwbiBiosCharacteristics = _HwbiBiosCharacteristics_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 2),
    _HwbiBiosCharacteristics_Type()
)
hwbiBiosCharacteristics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiBiosCharacteristics.setStatus("current")
_HwbiBIOSVersion_Type = WtcsDisplayString
_HwbiBIOSVersion_Object = MibTableColumn
hwbiBIOSVersion = _HwbiBIOSVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 3),
    _HwbiBIOSVersion_Type()
)
hwbiBIOSVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiBIOSVersion.setStatus("current")
_HwbiBuildNumber_Type = WtcsDisplayString
_HwbiBuildNumber_Object = MibTableColumn
hwbiBuildNumber = _HwbiBuildNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 4),
    _HwbiBuildNumber_Type()
)
hwbiBuildNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiBuildNumber.setStatus("current")
_HwbiCaption_Type = WtcsDisplayString
_HwbiCaption_Object = MibTableColumn
hwbiCaption = _HwbiCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 5),
    _HwbiCaption_Type()
)
hwbiCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiCaption.setStatus("current")


class _HwbiCodeSet_Type(WtcsDisplayString):
    """Custom type hwbiCodeSet based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwbiCodeSet_Type.__name__ = "WtcsDisplayString"
_HwbiCodeSet_Object = MibTableColumn
hwbiCodeSet = _HwbiCodeSet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 6),
    _HwbiCodeSet_Type()
)
hwbiCodeSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiCodeSet.setStatus("current")
_HwbiCurrentLanguage_Type = WtcsDisplayString
_HwbiCurrentLanguage_Object = MibTableColumn
hwbiCurrentLanguage = _HwbiCurrentLanguage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 7),
    _HwbiCurrentLanguage_Type()
)
hwbiCurrentLanguage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiCurrentLanguage.setStatus("current")
_HwbiDescription_Type = WtcsDisplayString
_HwbiDescription_Object = MibTableColumn
hwbiDescription = _HwbiDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 8),
    _HwbiDescription_Type()
)
hwbiDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiDescription.setStatus("current")


class _HwbiIdentificationCode_Type(WtcsDisplayString):
    """Custom type hwbiIdentificationCode based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwbiIdentificationCode_Type.__name__ = "WtcsDisplayString"
_HwbiIdentificationCode_Object = MibTableColumn
hwbiIdentificationCode = _HwbiIdentificationCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 9),
    _HwbiIdentificationCode_Type()
)
hwbiIdentificationCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiIdentificationCode.setStatus("current")
_HwbiInstallableLanguages_Type = Integer32
_HwbiInstallableLanguages_Object = MibTableColumn
hwbiInstallableLanguages = _HwbiInstallableLanguages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 10),
    _HwbiInstallableLanguages_Type()
)
hwbiInstallableLanguages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiInstallableLanguages.setStatus("current")
_HwbiInstallDate_Type = DateAndTime
_HwbiInstallDate_Object = MibTableColumn
hwbiInstallDate = _HwbiInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 11),
    _HwbiInstallDate_Type()
)
hwbiInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiInstallDate.setStatus("current")


class _HwbiLanguageEdition_Type(WtcsDisplayString):
    """Custom type hwbiLanguageEdition based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_HwbiLanguageEdition_Type.__name__ = "WtcsDisplayString"
_HwbiLanguageEdition_Object = MibTableColumn
hwbiLanguageEdition = _HwbiLanguageEdition_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 12),
    _HwbiLanguageEdition_Type()
)
hwbiLanguageEdition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiLanguageEdition.setStatus("current")
_HwbiListOfLanguages_Type = WtcsDisplayString
_HwbiListOfLanguages_Object = MibTableColumn
hwbiListOfLanguages = _HwbiListOfLanguages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 13),
    _HwbiListOfLanguages_Type()
)
hwbiListOfLanguages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiListOfLanguages.setStatus("current")
_HwbiManufacturer_Type = WtcsDisplayString
_HwbiManufacturer_Object = MibTableColumn
hwbiManufacturer = _HwbiManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 14),
    _HwbiManufacturer_Type()
)
hwbiManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiManufacturer.setStatus("current")


class _HwbiName_Type(WtcsDisplayString):
    """Custom type hwbiName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwbiName_Type.__name__ = "WtcsDisplayString"
_HwbiName_Object = MibTableColumn
hwbiName = _HwbiName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 15),
    _HwbiName_Type()
)
hwbiName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiName.setStatus("current")


class _HwbiOtherTargetOS_Type(WtcsDisplayString):
    """Custom type hwbiOtherTargetOS based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwbiOtherTargetOS_Type.__name__ = "WtcsDisplayString"
_HwbiOtherTargetOS_Object = MibTableColumn
hwbiOtherTargetOS = _HwbiOtherTargetOS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 16),
    _HwbiOtherTargetOS_Type()
)
hwbiOtherTargetOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiOtherTargetOS.setStatus("current")
_HwbiPrimaryBIOS_Type = TruthValue
_HwbiPrimaryBIOS_Object = MibTableColumn
hwbiPrimaryBIOS = _HwbiPrimaryBIOS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 17),
    _HwbiPrimaryBIOS_Type()
)
hwbiPrimaryBIOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiPrimaryBIOS.setStatus("current")
_HwbiReleaseDate_Type = DateAndTime
_HwbiReleaseDate_Object = MibTableColumn
hwbiReleaseDate = _HwbiReleaseDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 18),
    _HwbiReleaseDate_Type()
)
hwbiReleaseDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiReleaseDate.setStatus("current")
_HwbiSerialNumber_Type = WtcsDisplayString
_HwbiSerialNumber_Object = MibTableColumn
hwbiSerialNumber = _HwbiSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 19),
    _HwbiSerialNumber_Type()
)
hwbiSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSerialNumber.setStatus("current")
_HwbiSMBIOSBIOSVersion_Type = WtcsDisplayString
_HwbiSMBIOSBIOSVersion_Object = MibTableColumn
hwbiSMBIOSBIOSVersion = _HwbiSMBIOSBIOSVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 20),
    _HwbiSMBIOSBIOSVersion_Type()
)
hwbiSMBIOSBIOSVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSMBIOSBIOSVersion.setStatus("current")
_HwbiSMBIOSMajorVersion_Type = Integer32
_HwbiSMBIOSMajorVersion_Object = MibTableColumn
hwbiSMBIOSMajorVersion = _HwbiSMBIOSMajorVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 21),
    _HwbiSMBIOSMajorVersion_Type()
)
hwbiSMBIOSMajorVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSMBIOSMajorVersion.setStatus("current")
_HwbiSMBIOSMinorVersion_Type = Integer32
_HwbiSMBIOSMinorVersion_Object = MibTableColumn
hwbiSMBIOSMinorVersion = _HwbiSMBIOSMinorVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 22),
    _HwbiSMBIOSMinorVersion_Type()
)
hwbiSMBIOSMinorVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSMBIOSMinorVersion.setStatus("current")
_HwbiSMBIOSPresent_Type = TruthValue
_HwbiSMBIOSPresent_Object = MibTableColumn
hwbiSMBIOSPresent = _HwbiSMBIOSPresent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 23),
    _HwbiSMBIOSPresent_Type()
)
hwbiSMBIOSPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSMBIOSPresent.setStatus("current")
_HwbiSoftwareElementID_Type = WtcsDisplayString
_HwbiSoftwareElementID_Object = MibTableColumn
hwbiSoftwareElementID = _HwbiSoftwareElementID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 24),
    _HwbiSoftwareElementID_Type()
)
hwbiSoftwareElementID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSoftwareElementID.setStatus("current")


class _HwbiSoftwareElementState_Type(Integer32):
    """Custom type hwbiSoftwareElementState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("deployable", 0),
          ("executable", 2),
          ("installable", 1),
          ("running", 3))
    )


_HwbiSoftwareElementState_Type.__name__ = "Integer32"
_HwbiSoftwareElementState_Object = MibTableColumn
hwbiSoftwareElementState = _HwbiSoftwareElementState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 25),
    _HwbiSoftwareElementState_Type()
)
hwbiSoftwareElementState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiSoftwareElementState.setStatus("current")


class _HwbiStatus_Type(Integer32):
    """Custom type hwbiStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwbiStatus_Type.__name__ = "Integer32"
_HwbiStatus_Object = MibTableColumn
hwbiStatus = _HwbiStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 26),
    _HwbiStatus_Type()
)
hwbiStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiStatus.setStatus("current")


class _HwbiTargetOperatingSystem_Type(Integer32):
    """Custom type hwbiTargetOperatingSystem based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("aix", 9),
          ("aseries", 32),
          ("attunix", 3),
          ("beOS", 53),
          ("bs2000", 35),
          ("bsdunix", 41),
          ("dcOS", 23),
          ("decnt", 5),
          ("dedicated", 59),
          ("dgux", 4),
          ("digitalUnix", 6),
          ("epoc", 49),
          ("freeBSD", 42),
          ("gnuHurd", 44),
          ("hpMPE", 54),
          ("hpux", 8),
          ("inferno", 47),
          ("interactiveUNIX", 40),
          ("irix", 28),
          ("ixWorks", 50),
          ("javaVM", 13),
          ("linux", 36),
          ("lynx", 37),
          ("machKernel", 46),
          ("macos", 2),
          ("miNT", 52),
          ("msdos", 14),
          ("mvs", 10),
          ("ncr3000", 20),
          ("netBSD", 43),
          ("netWare", 21),
          ("nextStep", 55),
          ("openVMS", 7),
          ("os2", 12),
          ("os400", 11),
          ("os9", 45),
          ("osf", 22),
          ("other", 1),
          ("palmPilot", 56),
          ("qnx", 48),
          ("reliantUNIX", 24),
          ("rhapsody", 57),
          ("scoOpenServer", 26),
          ("scoUnixWare", 25),
          ("sequent", 27),
          ("solaris", 29),
          ("sunOS", 30),
          ("tandemNSK", 33),
          ("tandemNT", 34),
          ("tpf", 61),
          ("u6000", 31),
          ("unknown", 0),
          ("vmESA", 39),
          ("vse", 60),
          ("vxWorks", 51),
          ("win3x", 15),
          ("win95", 16),
          ("win98", 17),
          ("wince", 19),
          ("windows2000", 58),
          ("winnt", 18),
          ("xenix", 38))
    )


_HwbiTargetOperatingSystem_Type.__name__ = "Integer32"
_HwbiTargetOperatingSystem_Object = MibTableColumn
hwbiTargetOperatingSystem = _HwbiTargetOperatingSystem_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 27),
    _HwbiTargetOperatingSystem_Type()
)
hwbiTargetOperatingSystem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiTargetOperatingSystem.setStatus("current")


class _HwbiVersion_Type(WtcsDisplayString):
    """Custom type hwbiVersion based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwbiVersion_Type.__name__ = "WtcsDisplayString"
_HwbiVersion_Object = MibTableColumn
hwbiVersion = _HwbiVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 3, 1, 28),
    _HwbiVersion_Type()
)
hwbiVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbiVersion.setStatus("current")
_Win32BusTable_Object = MibTable
win32BusTable = _Win32BusTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4)
)
if mibBuilder.loadTexts:
    win32BusTable.setStatus("current")
_Win32BusEntry_Object = MibTableRow
win32BusEntry = _Win32BusEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1)
)
win32BusEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwbuIndex"),
)
if mibBuilder.loadTexts:
    win32BusEntry.setStatus("current")


class _HwbuIndex_Type(Integer32):
    """Custom type hwbuIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwbuIndex_Type.__name__ = "Integer32"
_HwbuIndex_Object = MibTableColumn
hwbuIndex = _HwbuIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 1),
    _HwbuIndex_Type()
)
hwbuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuIndex.setStatus("current")


class _HwbuAvailability_Type(Integer32):
    """Custom type hwbuAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwbuAvailability_Type.__name__ = "Integer32"
_HwbuAvailability_Object = MibTableColumn
hwbuAvailability = _HwbuAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 2),
    _HwbuAvailability_Type()
)
hwbuAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuAvailability.setStatus("current")
_HwbuBusNum_Type = Gauge32
_HwbuBusNum_Object = MibTableColumn
hwbuBusNum = _HwbuBusNum_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 3),
    _HwbuBusNum_Type()
)
hwbuBusNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuBusNum.setStatus("current")


class _HwbuBusType_Type(Integer32):
    """Custom type hwbuBusType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("cBus", 9),
          ("eisa", 2),
          ("internal", 0),
          ("internalPowerBus", 13),
          ("internalProcessor", 12),
          ("isa", 1),
          ("maximumInterfaceType", 16),
          ("microChannel", 3),
          ("mpiBus", 10),
          ("mpsaBus", 11),
          ("nuBus", 7),
          ("pciBus", 5),
          ("pcmciaBus", 8),
          ("pnpBus", 15),
          ("pnpISABus", 14),
          ("turboChannel", 4),
          ("vmeBus", 6))
    )


_HwbuBusType_Type.__name__ = "Integer32"
_HwbuBusType_Object = MibTableColumn
hwbuBusType = _HwbuBusType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 4),
    _HwbuBusType_Type()
)
hwbuBusType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuBusType.setStatus("current")
_HwbuCaption_Type = WtcsDisplayString
_HwbuCaption_Object = MibTableColumn
hwbuCaption = _HwbuCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 5),
    _HwbuCaption_Type()
)
hwbuCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuCaption.setStatus("current")


class _HwbuConfigManagerErrorCode_Type(Integer32):
    """Custom type hwbuConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwbuConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwbuConfigManagerErrorCode_Object = MibTableColumn
hwbuConfigManagerErrorCode = _HwbuConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 6),
    _HwbuConfigManagerErrorCode_Type()
)
hwbuConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuConfigManagerErrorCode.setStatus("current")
_HwbuConfigManagerUserConfig_Type = TruthValue
_HwbuConfigManagerUserConfig_Object = MibTableColumn
hwbuConfigManagerUserConfig = _HwbuConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 7),
    _HwbuConfigManagerUserConfig_Type()
)
hwbuConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuConfigManagerUserConfig.setStatus("current")


class _HwbuCreationClassName_Type(WtcsDisplayString):
    """Custom type hwbuCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwbuCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwbuCreationClassName_Object = MibTableColumn
hwbuCreationClassName = _HwbuCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 8),
    _HwbuCreationClassName_Type()
)
hwbuCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuCreationClassName.setStatus("current")
_HwbuDescription_Type = WtcsDisplayString
_HwbuDescription_Object = MibTableColumn
hwbuDescription = _HwbuDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 9),
    _HwbuDescription_Type()
)
hwbuDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuDescription.setStatus("current")
_HwbuDeviceID_Type = WtcsDisplayString
_HwbuDeviceID_Object = MibTableColumn
hwbuDeviceID = _HwbuDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 10),
    _HwbuDeviceID_Type()
)
hwbuDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuDeviceID.setStatus("current")
_HwbuErrorCleared_Type = TruthValue
_HwbuErrorCleared_Object = MibTableColumn
hwbuErrorCleared = _HwbuErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 11),
    _HwbuErrorCleared_Type()
)
hwbuErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuErrorCleared.setStatus("current")
_HwbuErrorDescription_Type = WtcsDisplayString
_HwbuErrorDescription_Object = MibTableColumn
hwbuErrorDescription = _HwbuErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 12),
    _HwbuErrorDescription_Type()
)
hwbuErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuErrorDescription.setStatus("current")
_HwbuInstallDate_Type = DateAndTime
_HwbuInstallDate_Object = MibTableColumn
hwbuInstallDate = _HwbuInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 13),
    _HwbuInstallDate_Type()
)
hwbuInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuInstallDate.setStatus("current")
_HwbuLastErrorCode_Type = Gauge32
_HwbuLastErrorCode_Object = MibTableColumn
hwbuLastErrorCode = _HwbuLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 14),
    _HwbuLastErrorCode_Type()
)
hwbuLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuLastErrorCode.setStatus("current")
_HwbuName_Type = WtcsDisplayString
_HwbuName_Object = MibTableColumn
hwbuName = _HwbuName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 15),
    _HwbuName_Type()
)
hwbuName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuName.setStatus("current")
_HwbuPNPDeviceID_Type = WtcsDisplayString
_HwbuPNPDeviceID_Object = MibTableColumn
hwbuPNPDeviceID = _HwbuPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 16),
    _HwbuPNPDeviceID_Type()
)
hwbuPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuPNPDeviceID.setStatus("current")
_HwbuPowerManagementCapabilities_Type = WtcsDisplayString
_HwbuPowerManagementCapabilities_Object = MibTableColumn
hwbuPowerManagementCapabilities = _HwbuPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 17),
    _HwbuPowerManagementCapabilities_Type()
)
hwbuPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuPowerManagementCapabilities.setStatus("current")
_HwbuPowerManagementSupported_Type = TruthValue
_HwbuPowerManagementSupported_Object = MibTableColumn
hwbuPowerManagementSupported = _HwbuPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 18),
    _HwbuPowerManagementSupported_Type()
)
hwbuPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuPowerManagementSupported.setStatus("current")


class _HwbuStatus_Type(Integer32):
    """Custom type hwbuStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwbuStatus_Type.__name__ = "Integer32"
_HwbuStatus_Object = MibTableColumn
hwbuStatus = _HwbuStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 19),
    _HwbuStatus_Type()
)
hwbuStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuStatus.setStatus("current")


class _HwbuStatusInfo_Type(Integer32):
    """Custom type hwbuStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwbuStatusInfo_Type.__name__ = "Integer32"
_HwbuStatusInfo_Object = MibTableColumn
hwbuStatusInfo = _HwbuStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 20),
    _HwbuStatusInfo_Type()
)
hwbuStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuStatusInfo.setStatus("current")
_HwbuSystemCreationClassName_Type = WtcsDisplayString
_HwbuSystemCreationClassName_Object = MibTableColumn
hwbuSystemCreationClassName = _HwbuSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 21),
    _HwbuSystemCreationClassName_Type()
)
hwbuSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuSystemCreationClassName.setStatus("current")
_HwbuSystemName_Type = WtcsDisplayString
_HwbuSystemName_Object = MibTableColumn
hwbuSystemName = _HwbuSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 4, 1, 22),
    _HwbuSystemName_Type()
)
hwbuSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbuSystemName.setStatus("current")
_Win32CacheMemoryTable_Object = MibTable
win32CacheMemoryTable = _Win32CacheMemoryTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5)
)
if mibBuilder.loadTexts:
    win32CacheMemoryTable.setStatus("current")
_Win32CacheMemoryEntry_Object = MibTableRow
win32CacheMemoryEntry = _Win32CacheMemoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1)
)
win32CacheMemoryEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwcmIndex"),
)
if mibBuilder.loadTexts:
    win32CacheMemoryEntry.setStatus("current")


class _HwcmIndex_Type(Integer32):
    """Custom type hwcmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwcmIndex_Type.__name__ = "Integer32"
_HwcmIndex_Object = MibTableColumn
hwcmIndex = _HwcmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 1),
    _HwcmIndex_Type()
)
hwcmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmIndex.setStatus("current")


class _HwcmAccess_Type(Integer32):
    """Custom type hwcmAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("readWriteSupported", 3),
          ("readable", 1),
          ("unknown", 0),
          ("writable", 2),
          ("writeOnce", 4))
    )


_HwcmAccess_Type.__name__ = "Integer32"
_HwcmAccess_Object = MibTableColumn
hwcmAccess = _HwcmAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 2),
    _HwcmAccess_Type()
)
hwcmAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmAccess.setStatus("current")
_HwcmAdditionalErrorData_Type = WtcsDisplayString
_HwcmAdditionalErrorData_Object = MibTableColumn
hwcmAdditionalErrorData = _HwcmAdditionalErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 3),
    _HwcmAdditionalErrorData_Type()
)
hwcmAdditionalErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmAdditionalErrorData.setStatus("current")


class _HwcmAssociativity_Type(Integer32):
    """Custom type hwcmAssociativity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("directMapped", 3),
          ("fullyAssociative", 6),
          ("n16waySetAssociative", 8),
          ("n2waySetAssociative", 4),
          ("n4waySetAssociative", 5),
          ("n8waySetAssociative", 7),
          ("other", 1),
          ("unknown", 2))
    )


_HwcmAssociativity_Type.__name__ = "Integer32"
_HwcmAssociativity_Object = MibTableColumn
hwcmAssociativity = _HwcmAssociativity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 4),
    _HwcmAssociativity_Type()
)
hwcmAssociativity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmAssociativity.setStatus("current")


class _HwcmAvailability_Type(Integer32):
    """Custom type hwcmAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwcmAvailability_Type.__name__ = "Integer32"
_HwcmAvailability_Object = MibTableColumn
hwcmAvailability = _HwcmAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 5),
    _HwcmAvailability_Type()
)
hwcmAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmAvailability.setStatus("current")
_HwcmBlockSize_Type = Gauge32
_HwcmBlockSize_Object = MibTableColumn
hwcmBlockSize = _HwcmBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 6),
    _HwcmBlockSize_Type()
)
hwcmBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmBlockSize.setStatus("current")
_HwcmCacheSpeed_Type = Gauge32
_HwcmCacheSpeed_Object = MibTableColumn
hwcmCacheSpeed = _HwcmCacheSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 7),
    _HwcmCacheSpeed_Type()
)
hwcmCacheSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmCacheSpeed.setStatus("current")
if mibBuilder.loadTexts:
    hwcmCacheSpeed.setUnits("NanoSeconds")


class _HwcmCacheType_Type(Integer32):
    """Custom type hwcmCacheType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("data", 4),
          ("instruction", 3),
          ("other", 1),
          ("unified", 5),
          ("unknown", 2))
    )


_HwcmCacheType_Type.__name__ = "Integer32"
_HwcmCacheType_Object = MibTableColumn
hwcmCacheType = _HwcmCacheType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 8),
    _HwcmCacheType_Type()
)
hwcmCacheType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmCacheType.setStatus("current")
_HwcmCaption_Type = WtcsDisplayString
_HwcmCaption_Object = MibTableColumn
hwcmCaption = _HwcmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 9),
    _HwcmCaption_Type()
)
hwcmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmCaption.setStatus("current")


class _HwcmConfigManagerErrorCode_Type(Integer32):
    """Custom type hwcmConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwcmConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwcmConfigManagerErrorCode_Object = MibTableColumn
hwcmConfigManagerErrorCode = _HwcmConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 10),
    _HwcmConfigManagerErrorCode_Type()
)
hwcmConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmConfigManagerErrorCode.setStatus("current")
_HwcmConfigManagerUserConfig_Type = TruthValue
_HwcmConfigManagerUserConfig_Object = MibTableColumn
hwcmConfigManagerUserConfig = _HwcmConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 11),
    _HwcmConfigManagerUserConfig_Type()
)
hwcmConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmConfigManagerUserConfig.setStatus("current")
_HwcmCorrectableError_Type = TruthValue
_HwcmCorrectableError_Object = MibTableColumn
hwcmCorrectableError = _HwcmCorrectableError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 12),
    _HwcmCorrectableError_Type()
)
hwcmCorrectableError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmCorrectableError.setStatus("current")


class _HwcmCreationClassName_Type(WtcsDisplayString):
    """Custom type hwcmCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwcmCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwcmCreationClassName_Object = MibTableColumn
hwcmCreationClassName = _HwcmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 13),
    _HwcmCreationClassName_Type()
)
hwcmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmCreationClassName.setStatus("current")
_HwcmCurrentSRAM_Type = WtcsDisplayString
_HwcmCurrentSRAM_Object = MibTableColumn
hwcmCurrentSRAM = _HwcmCurrentSRAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 14),
    _HwcmCurrentSRAM_Type()
)
hwcmCurrentSRAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmCurrentSRAM.setStatus("current")
_HwcmDescription_Type = WtcsDisplayString
_HwcmDescription_Object = MibTableColumn
hwcmDescription = _HwcmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 15),
    _HwcmDescription_Type()
)
hwcmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmDescription.setStatus("current")
_HwcmDeviceID_Type = WtcsDisplayString
_HwcmDeviceID_Object = MibTableColumn
hwcmDeviceID = _HwcmDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 16),
    _HwcmDeviceID_Type()
)
hwcmDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmDeviceID.setStatus("current")
_HwcmEndingAddress_Type = Gauge32
_HwcmEndingAddress_Object = MibTableColumn
hwcmEndingAddress = _HwcmEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 17),
    _HwcmEndingAddress_Type()
)
hwcmEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmEndingAddress.setStatus("current")


class _HwcmErrorAccess_Type(Integer32):
    """Custom type hwcmErrorAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("partialWrite", 5),
          ("read", 3),
          ("unknown", 2),
          ("write", 4))
    )


_HwcmErrorAccess_Type.__name__ = "Integer32"
_HwcmErrorAccess_Object = MibTableColumn
hwcmErrorAccess = _HwcmErrorAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 18),
    _HwcmErrorAccess_Type()
)
hwcmErrorAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorAccess.setStatus("current")
_HwcmErrorAddress_Type = Gauge32
_HwcmErrorAddress_Object = MibTableColumn
hwcmErrorAddress = _HwcmErrorAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 19),
    _HwcmErrorAddress_Type()
)
hwcmErrorAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorAddress.setStatus("current")
_HwcmErrorCleared_Type = TruthValue
_HwcmErrorCleared_Object = MibTableColumn
hwcmErrorCleared = _HwcmErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 20),
    _HwcmErrorCleared_Type()
)
hwcmErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorCleared.setStatus("current")


class _HwcmErrorCorrectType_Type(Integer32):
    """Custom type hwcmErrorCorrectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("multibitECC", 6),
          ("none", 3),
          ("other", 1),
          ("parity", 4),
          ("reserved", 0),
          ("singlebitECC", 5),
          ("unknown", 2))
    )


_HwcmErrorCorrectType_Type.__name__ = "Integer32"
_HwcmErrorCorrectType_Object = MibTableColumn
hwcmErrorCorrectType = _HwcmErrorCorrectType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 21),
    _HwcmErrorCorrectType_Type()
)
hwcmErrorCorrectType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorCorrectType.setStatus("current")
_HwcmErrorData_Type = WtcsDisplayString
_HwcmErrorData_Object = MibTableColumn
hwcmErrorData = _HwcmErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 22),
    _HwcmErrorData_Type()
)
hwcmErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorData.setStatus("current")


class _HwcmErrorDataOrder_Type(Integer32):
    """Custom type hwcmErrorDataOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("leastSignificantByteFirst", 1),
          ("mostSignificantByteFirst", 2),
          ("unknown", 0))
    )


_HwcmErrorDataOrder_Type.__name__ = "Integer32"
_HwcmErrorDataOrder_Object = MibTableColumn
hwcmErrorDataOrder = _HwcmErrorDataOrder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 23),
    _HwcmErrorDataOrder_Type()
)
hwcmErrorDataOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorDataOrder.setStatus("current")
_HwcmErrorDescription_Type = WtcsDisplayString
_HwcmErrorDescription_Object = MibTableColumn
hwcmErrorDescription = _HwcmErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 24),
    _HwcmErrorDescription_Type()
)
hwcmErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorDescription.setStatus("current")


class _HwcmErrorInfo_Type(Integer32):
    """Custom type hwcmErrorInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("badRead", 4),
          ("checksumError", 10),
          ("crcError", 11),
          ("doubleBitError", 7),
          ("multiBitError", 8),
          ("nibbleError", 9),
          ("ok", 3),
          ("other", 1),
          ("parityError", 5),
          ("singleBitError", 6),
          ("unknown", 2))
    )


_HwcmErrorInfo_Type.__name__ = "Integer32"
_HwcmErrorInfo_Object = MibTableColumn
hwcmErrorInfo = _HwcmErrorInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 25),
    _HwcmErrorInfo_Type()
)
hwcmErrorInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorInfo.setStatus("current")
_HwcmErrorMethodology_Type = WtcsDisplayString
_HwcmErrorMethodology_Object = MibTableColumn
hwcmErrorMethodology = _HwcmErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 26),
    _HwcmErrorMethodology_Type()
)
hwcmErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorMethodology.setStatus("current")
_HwcmErrorResolution_Type = Gauge32
_HwcmErrorResolution_Object = MibTableColumn
hwcmErrorResolution = _HwcmErrorResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 27),
    _HwcmErrorResolution_Type()
)
hwcmErrorResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorResolution.setStatus("current")
_HwcmErrorTime_Type = DateAndTime
_HwcmErrorTime_Object = MibTableColumn
hwcmErrorTime = _HwcmErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 28),
    _HwcmErrorTime_Type()
)
hwcmErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorTime.setStatus("current")
_HwcmErrorTransferSize_Type = Gauge32
_HwcmErrorTransferSize_Object = MibTableColumn
hwcmErrorTransferSize = _HwcmErrorTransferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 29),
    _HwcmErrorTransferSize_Type()
)
hwcmErrorTransferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmErrorTransferSize.setStatus("current")
_HwcmFlushTimer_Type = Gauge32
_HwcmFlushTimer_Object = MibTableColumn
hwcmFlushTimer = _HwcmFlushTimer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 30),
    _HwcmFlushTimer_Type()
)
hwcmFlushTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmFlushTimer.setStatus("current")
_HwcmInstallDate_Type = DateAndTime
_HwcmInstallDate_Object = MibTableColumn
hwcmInstallDate = _HwcmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 31),
    _HwcmInstallDate_Type()
)
hwcmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmInstallDate.setStatus("current")
_HwcmInstalledSize_Type = Gauge32
_HwcmInstalledSize_Object = MibTableColumn
hwcmInstalledSize = _HwcmInstalledSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 32),
    _HwcmInstalledSize_Type()
)
hwcmInstalledSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmInstalledSize.setStatus("current")
if mibBuilder.loadTexts:
    hwcmInstalledSize.setUnits("Kilobytes")
_HwcmLastErrorCode_Type = Gauge32
_HwcmLastErrorCode_Object = MibTableColumn
hwcmLastErrorCode = _HwcmLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 33),
    _HwcmLastErrorCode_Type()
)
hwcmLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmLastErrorCode.setStatus("current")


class _HwcmLevel_Type(Integer32):
    """Custom type hwcmLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 6),
          ("other", 1),
          ("primary", 3),
          ("secondary", 4),
          ("tertiary", 5),
          ("unknown", 2))
    )


_HwcmLevel_Type.__name__ = "Integer32"
_HwcmLevel_Object = MibTableColumn
hwcmLevel = _HwcmLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 34),
    _HwcmLevel_Type()
)
hwcmLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmLevel.setStatus("current")
_HwcmLineSize_Type = Gauge32
_HwcmLineSize_Object = MibTableColumn
hwcmLineSize = _HwcmLineSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 35),
    _HwcmLineSize_Type()
)
hwcmLineSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmLineSize.setStatus("current")


class _HwcmLocation_Type(Integer32):
    """Custom type hwcmLocation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("external", 1),
          ("internal", 0),
          ("reserved", 2),
          ("unknown", 3))
    )


_HwcmLocation_Type.__name__ = "Integer32"
_HwcmLocation_Object = MibTableColumn
hwcmLocation = _HwcmLocation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 36),
    _HwcmLocation_Type()
)
hwcmLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmLocation.setStatus("current")
_HwcmMaxCacheSize_Type = Gauge32
_HwcmMaxCacheSize_Object = MibTableColumn
hwcmMaxCacheSize = _HwcmMaxCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 37),
    _HwcmMaxCacheSize_Type()
)
hwcmMaxCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmMaxCacheSize.setStatus("current")
if mibBuilder.loadTexts:
    hwcmMaxCacheSize.setUnits("Kilobytes")
_HwcmName_Type = WtcsDisplayString
_HwcmName_Object = MibTableColumn
hwcmName = _HwcmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 38),
    _HwcmName_Type()
)
hwcmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmName.setStatus("current")
_HwcmNumberOfBlocks_Type = Gauge32
_HwcmNumberOfBlocks_Object = MibTableColumn
hwcmNumberOfBlocks = _HwcmNumberOfBlocks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 39),
    _HwcmNumberOfBlocks_Type()
)
hwcmNumberOfBlocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmNumberOfBlocks.setStatus("current")
_HwcmOtherErrorDescription_Type = WtcsDisplayString
_HwcmOtherErrorDescription_Object = MibTableColumn
hwcmOtherErrorDescription = _HwcmOtherErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 40),
    _HwcmOtherErrorDescription_Type()
)
hwcmOtherErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmOtherErrorDescription.setStatus("current")
_HwcmPNPDeviceID_Type = WtcsDisplayString
_HwcmPNPDeviceID_Object = MibTableColumn
hwcmPNPDeviceID = _HwcmPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 41),
    _HwcmPNPDeviceID_Type()
)
hwcmPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmPNPDeviceID.setStatus("current")
_HwcmPowerManagementCapabilities_Type = WtcsDisplayString
_HwcmPowerManagementCapabilities_Object = MibTableColumn
hwcmPowerManagementCapabilities = _HwcmPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 42),
    _HwcmPowerManagementCapabilities_Type()
)
hwcmPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmPowerManagementCapabilities.setStatus("current")
_HwcmPowerManagementSupported_Type = TruthValue
_HwcmPowerManagementSupported_Object = MibTableColumn
hwcmPowerManagementSupported = _HwcmPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 43),
    _HwcmPowerManagementSupported_Type()
)
hwcmPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmPowerManagementSupported.setStatus("current")
_HwcmPurpose_Type = WtcsDisplayString
_HwcmPurpose_Object = MibTableColumn
hwcmPurpose = _HwcmPurpose_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 44),
    _HwcmPurpose_Type()
)
hwcmPurpose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmPurpose.setStatus("current")


class _HwcmReadPolicy_Type(Integer32):
    """Custom type hwcmReadPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("determinationPerIO", 6),
          ("other", 1),
          ("read", 3),
          ("readAhead", 4),
          ("readAndReadAhead", 5),
          ("unknown", 2))
    )


_HwcmReadPolicy_Type.__name__ = "Integer32"
_HwcmReadPolicy_Object = MibTableColumn
hwcmReadPolicy = _HwcmReadPolicy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 45),
    _HwcmReadPolicy_Type()
)
hwcmReadPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmReadPolicy.setStatus("current")


class _HwcmReplacementPolicy_Type(Integer32):
    """Custom type hwcmReplacementPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("firstInFirstOut", 4),
          ("lastInFirstOut", 5),
          ("leastFrequentlyUsed", 6),
          ("leastRecentlyUsed", 3),
          ("mostFrequentlyUsed", 7),
          ("osDependentAlgorithms", 8),
          ("other", 1),
          ("unknown", 2))
    )


_HwcmReplacementPolicy_Type.__name__ = "Integer32"
_HwcmReplacementPolicy_Object = MibTableColumn
hwcmReplacementPolicy = _HwcmReplacementPolicy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 46),
    _HwcmReplacementPolicy_Type()
)
hwcmReplacementPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmReplacementPolicy.setStatus("current")
_HwcmStartingAddress_Type = Gauge32
_HwcmStartingAddress_Object = MibTableColumn
hwcmStartingAddress = _HwcmStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 47),
    _HwcmStartingAddress_Type()
)
hwcmStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmStartingAddress.setStatus("current")


class _HwcmStatus_Type(Integer32):
    """Custom type hwcmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwcmStatus_Type.__name__ = "Integer32"
_HwcmStatus_Object = MibTableColumn
hwcmStatus = _HwcmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 48),
    _HwcmStatus_Type()
)
hwcmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmStatus.setStatus("current")


class _HwcmStatusInfo_Type(Integer32):
    """Custom type hwcmStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwcmStatusInfo_Type.__name__ = "Integer32"
_HwcmStatusInfo_Object = MibTableColumn
hwcmStatusInfo = _HwcmStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 49),
    _HwcmStatusInfo_Type()
)
hwcmStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmStatusInfo.setStatus("current")
_HwcmSupportedSRAM_Type = WtcsDisplayString
_HwcmSupportedSRAM_Object = MibTableColumn
hwcmSupportedSRAM = _HwcmSupportedSRAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 50),
    _HwcmSupportedSRAM_Type()
)
hwcmSupportedSRAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmSupportedSRAM.setStatus("current")
_HwcmSystemCreationClassName_Type = WtcsDisplayString
_HwcmSystemCreationClassName_Object = MibTableColumn
hwcmSystemCreationClassName = _HwcmSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 51),
    _HwcmSystemCreationClassName_Type()
)
hwcmSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmSystemCreationClassName.setStatus("current")
_HwcmSystemLevelAddress_Type = TruthValue
_HwcmSystemLevelAddress_Object = MibTableColumn
hwcmSystemLevelAddress = _HwcmSystemLevelAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 52),
    _HwcmSystemLevelAddress_Type()
)
hwcmSystemLevelAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmSystemLevelAddress.setStatus("current")
_HwcmSystemName_Type = WtcsDisplayString
_HwcmSystemName_Object = MibTableColumn
hwcmSystemName = _HwcmSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 53),
    _HwcmSystemName_Type()
)
hwcmSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmSystemName.setStatus("current")


class _HwcmWritePolicy_Type(Integer32):
    """Custom type hwcmWritePolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("determinationPerIO", 6),
          ("other", 1),
          ("unknown", 2),
          ("variesWithAddress", 5),
          ("writeBack", 3),
          ("writeThrough", 4))
    )


_HwcmWritePolicy_Type.__name__ = "Integer32"
_HwcmWritePolicy_Object = MibTableColumn
hwcmWritePolicy = _HwcmWritePolicy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 5, 1, 54),
    _HwcmWritePolicy_Type()
)
hwcmWritePolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcmWritePolicy.setStatus("current")
_Win32DeviceMemoryAddressTable_Object = MibTable
win32DeviceMemoryAddressTable = _Win32DeviceMemoryAddressTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6)
)
if mibBuilder.loadTexts:
    win32DeviceMemoryAddressTable.setStatus("current")
_Win32DeviceMemoryAddressEntry_Object = MibTableRow
win32DeviceMemoryAddressEntry = _Win32DeviceMemoryAddressEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1)
)
win32DeviceMemoryAddressEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwdaIndex"),
)
if mibBuilder.loadTexts:
    win32DeviceMemoryAddressEntry.setStatus("current")


class _HwdaIndex_Type(Integer32):
    """Custom type hwdaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwdaIndex_Type.__name__ = "Integer32"
_HwdaIndex_Object = MibTableColumn
hwdaIndex = _HwdaIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 1),
    _HwdaIndex_Type()
)
hwdaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaIndex.setStatus("current")
_HwdaCaption_Type = WtcsDisplayString
_HwdaCaption_Object = MibTableColumn
hwdaCaption = _HwdaCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 2),
    _HwdaCaption_Type()
)
hwdaCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaCaption.setStatus("current")


class _HwdaCreationClassName_Type(WtcsDisplayString):
    """Custom type hwdaCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwdaCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwdaCreationClassName_Object = MibTableColumn
hwdaCreationClassName = _HwdaCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 3),
    _HwdaCreationClassName_Type()
)
hwdaCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaCreationClassName.setStatus("current")
_HwdaCSCreationClassName_Type = WtcsDisplayString
_HwdaCSCreationClassName_Object = MibTableColumn
hwdaCSCreationClassName = _HwdaCSCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 4),
    _HwdaCSCreationClassName_Type()
)
hwdaCSCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaCSCreationClassName.setStatus("current")
_HwdaCSName_Type = WtcsDisplayString
_HwdaCSName_Object = MibTableColumn
hwdaCSName = _HwdaCSName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 5),
    _HwdaCSName_Type()
)
hwdaCSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaCSName.setStatus("current")
_HwdaDescription_Type = WtcsDisplayString
_HwdaDescription_Object = MibTableColumn
hwdaDescription = _HwdaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 6),
    _HwdaDescription_Type()
)
hwdaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaDescription.setStatus("current")
_HwdaEndingAddress_Type = Gauge32
_HwdaEndingAddress_Object = MibTableColumn
hwdaEndingAddress = _HwdaEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 7),
    _HwdaEndingAddress_Type()
)
hwdaEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaEndingAddress.setStatus("current")
_HwdaInstallDate_Type = DateAndTime
_HwdaInstallDate_Object = MibTableColumn
hwdaInstallDate = _HwdaInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 8),
    _HwdaInstallDate_Type()
)
hwdaInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaInstallDate.setStatus("current")


class _HwdaMemoryType_Type(Integer32):
    """Custom type hwdaMemoryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("prefetchable", 4),
          ("readOnly", 2),
          ("readWrite", 1),
          ("writeOnly", 3))
    )


_HwdaMemoryType_Type.__name__ = "Integer32"
_HwdaMemoryType_Object = MibTableColumn
hwdaMemoryType = _HwdaMemoryType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 9),
    _HwdaMemoryType_Type()
)
hwdaMemoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaMemoryType.setStatus("current")
_HwdaName_Type = WtcsDisplayString
_HwdaName_Object = MibTableColumn
hwdaName = _HwdaName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 10),
    _HwdaName_Type()
)
hwdaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaName.setStatus("current")
_HwdaStartingAddress_Type = Gauge32
_HwdaStartingAddress_Object = MibTableColumn
hwdaStartingAddress = _HwdaStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 11),
    _HwdaStartingAddress_Type()
)
hwdaStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaStartingAddress.setStatus("current")


class _HwdaStatus_Type(Integer32):
    """Custom type hwdaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwdaStatus_Type.__name__ = "Integer32"
_HwdaStatus_Object = MibTableColumn
hwdaStatus = _HwdaStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 6, 1, 12),
    _HwdaStatus_Type()
)
hwdaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdaStatus.setStatus("current")
_Win32DMAChannelTable_Object = MibTable
win32DMAChannelTable = _Win32DMAChannelTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7)
)
if mibBuilder.loadTexts:
    win32DMAChannelTable.setStatus("current")
_Win32DMAChannelEntry_Object = MibTableRow
win32DMAChannelEntry = _Win32DMAChannelEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1)
)
win32DMAChannelEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwdmaIndex"),
)
if mibBuilder.loadTexts:
    win32DMAChannelEntry.setStatus("current")


class _HwdmaIndex_Type(Integer32):
    """Custom type hwdmaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwdmaIndex_Type.__name__ = "Integer32"
_HwdmaIndex_Object = MibTableColumn
hwdmaIndex = _HwdmaIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 1),
    _HwdmaIndex_Type()
)
hwdmaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaIndex.setStatus("current")
_HwdmaAddressSize_Type = Integer32
_HwdmaAddressSize_Object = MibTableColumn
hwdmaAddressSize = _HwdmaAddressSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 2),
    _HwdmaAddressSize_Type()
)
hwdmaAddressSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaAddressSize.setStatus("current")


class _HwdmaAvailability_Type(Integer32):
    """Custom type hwdmaAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("available", 3),
          ("inUseAndAvailableShareable", 5),
          ("inUseNotAvailable", 4),
          ("other", 1),
          ("unknown", 2))
    )


_HwdmaAvailability_Type.__name__ = "Integer32"
_HwdmaAvailability_Object = MibTableColumn
hwdmaAvailability = _HwdmaAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 3),
    _HwdmaAvailability_Type()
)
hwdmaAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaAvailability.setStatus("current")
_HwdmaBurstMode_Type = TruthValue
_HwdmaBurstMode_Object = MibTableColumn
hwdmaBurstMode = _HwdmaBurstMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 4),
    _HwdmaBurstMode_Type()
)
hwdmaBurstMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaBurstMode.setStatus("current")


class _HwdmaByteMode_Type(Integer32):
    """Custom type hwdmaByteMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("doesNotExecuteIncountByByteMode", 3),
          ("executeIncountByByteMode", 4),
          ("other", 1),
          ("unknown", 2))
    )


_HwdmaByteMode_Type.__name__ = "Integer32"
_HwdmaByteMode_Object = MibTableColumn
hwdmaByteMode = _HwdmaByteMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 5),
    _HwdmaByteMode_Type()
)
hwdmaByteMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaByteMode.setStatus("current")
_HwdmaCaption_Type = WtcsDisplayString
_HwdmaCaption_Object = MibTableColumn
hwdmaCaption = _HwdmaCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 6),
    _HwdmaCaption_Type()
)
hwdmaCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaCaption.setStatus("current")


class _HwdmaChannelTiming_Type(Integer32):
    """Custom type hwdmaChannelTiming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("isaCompatible", 3),
          ("other", 1),
          ("typeA", 4),
          ("typeB", 5),
          ("typeF", 6),
          ("unknown", 2))
    )


_HwdmaChannelTiming_Type.__name__ = "Integer32"
_HwdmaChannelTiming_Object = MibTableColumn
hwdmaChannelTiming = _HwdmaChannelTiming_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 7),
    _HwdmaChannelTiming_Type()
)
hwdmaChannelTiming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaChannelTiming.setStatus("current")
_HwdmaCreationClassName_Type = WtcsDisplayString
_HwdmaCreationClassName_Object = MibTableColumn
hwdmaCreationClassName = _HwdmaCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 8),
    _HwdmaCreationClassName_Type()
)
hwdmaCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaCreationClassName.setStatus("current")
_HwdmaCSCreationClassName_Type = WtcsDisplayString
_HwdmaCSCreationClassName_Object = MibTableColumn
hwdmaCSCreationClassName = _HwdmaCSCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 9),
    _HwdmaCSCreationClassName_Type()
)
hwdmaCSCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaCSCreationClassName.setStatus("current")
_HwdmaCSName_Type = WtcsDisplayString
_HwdmaCSName_Object = MibTableColumn
hwdmaCSName = _HwdmaCSName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 10),
    _HwdmaCSName_Type()
)
hwdmaCSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaCSName.setStatus("current")
_HwdmaDescription_Type = WtcsDisplayString
_HwdmaDescription_Object = MibTableColumn
hwdmaDescription = _HwdmaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 11),
    _HwdmaDescription_Type()
)
hwdmaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaDescription.setStatus("current")
_HwdmaDMAChannel_Type = Gauge32
_HwdmaDMAChannel_Object = MibTableColumn
hwdmaDMAChannel = _HwdmaDMAChannel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 12),
    _HwdmaDMAChannel_Type()
)
hwdmaDMAChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaDMAChannel.setStatus("current")
_HwdmaInstallDate_Type = DateAndTime
_HwdmaInstallDate_Object = MibTableColumn
hwdmaInstallDate = _HwdmaInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 13),
    _HwdmaInstallDate_Type()
)
hwdmaInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaInstallDate.setStatus("current")
_HwdmaMaxTransferSize_Type = Gauge32
_HwdmaMaxTransferSize_Object = MibTableColumn
hwdmaMaxTransferSize = _HwdmaMaxTransferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 14),
    _HwdmaMaxTransferSize_Type()
)
hwdmaMaxTransferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaMaxTransferSize.setStatus("current")
_HwdmaName_Type = WtcsDisplayString
_HwdmaName_Object = MibTableColumn
hwdmaName = _HwdmaName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 15),
    _HwdmaName_Type()
)
hwdmaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaName.setStatus("current")
_HwdmaPort_Type = Gauge32
_HwdmaPort_Object = MibTableColumn
hwdmaPort = _HwdmaPort_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 16),
    _HwdmaPort_Type()
)
hwdmaPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaPort.setStatus("current")


class _HwdmaStatus_Type(Integer32):
    """Custom type hwdmaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwdmaStatus_Type.__name__ = "Integer32"
_HwdmaStatus_Object = MibTableColumn
hwdmaStatus = _HwdmaStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 17),
    _HwdmaStatus_Type()
)
hwdmaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaStatus.setStatus("current")
_HwdmaTransferWidths_Type = WtcsDisplayString
_HwdmaTransferWidths_Object = MibTableColumn
hwdmaTransferWidths = _HwdmaTransferWidths_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 18),
    _HwdmaTransferWidths_Type()
)
hwdmaTransferWidths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaTransferWidths.setStatus("current")


class _HwdmaTypeCTiming_Type(Integer32):
    """Custom type hwdmaTypeCTiming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("isaCompatible", 3),
          ("notSupported", 4),
          ("other", 1),
          ("supported", 5),
          ("unknown", 2))
    )


_HwdmaTypeCTiming_Type.__name__ = "Integer32"
_HwdmaTypeCTiming_Object = MibTableColumn
hwdmaTypeCTiming = _HwdmaTypeCTiming_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 19),
    _HwdmaTypeCTiming_Type()
)
hwdmaTypeCTiming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaTypeCTiming.setStatus("current")


class _HwdmaWordMode_Type(Integer32):
    """Custom type hwdmaWordMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("doesNotExecuteIncountByWordMode", 3),
          ("executeIncountByWordMode", 4),
          ("other", 1),
          ("unknown", 2))
    )


_HwdmaWordMode_Type.__name__ = "Integer32"
_HwdmaWordMode_Object = MibTableColumn
hwdmaWordMode = _HwdmaWordMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 7, 1, 20),
    _HwdmaWordMode_Type()
)
hwdmaWordMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmaWordMode.setStatus("current")
_Win32FloppyControllerTable_Object = MibTable
win32FloppyControllerTable = _Win32FloppyControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8)
)
if mibBuilder.loadTexts:
    win32FloppyControllerTable.setStatus("current")
_Win32FloppyControllerEntry_Object = MibTableRow
win32FloppyControllerEntry = _Win32FloppyControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1)
)
win32FloppyControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwfcIndex"),
)
if mibBuilder.loadTexts:
    win32FloppyControllerEntry.setStatus("current")


class _HwfcIndex_Type(Integer32):
    """Custom type hwfcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwfcIndex_Type.__name__ = "Integer32"
_HwfcIndex_Object = MibTableColumn
hwfcIndex = _HwfcIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 1),
    _HwfcIndex_Type()
)
hwfcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcIndex.setStatus("current")


class _HwfcAvailability_Type(Integer32):
    """Custom type hwfcAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwfcAvailability_Type.__name__ = "Integer32"
_HwfcAvailability_Object = MibTableColumn
hwfcAvailability = _HwfcAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 2),
    _HwfcAvailability_Type()
)
hwfcAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcAvailability.setStatus("current")
_HwfcCaption_Type = WtcsDisplayString
_HwfcCaption_Object = MibTableColumn
hwfcCaption = _HwfcCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 3),
    _HwfcCaption_Type()
)
hwfcCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcCaption.setStatus("current")


class _HwfcConfigManagerErrorCode_Type(Integer32):
    """Custom type hwfcConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwfcConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwfcConfigManagerErrorCode_Object = MibTableColumn
hwfcConfigManagerErrorCode = _HwfcConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 4),
    _HwfcConfigManagerErrorCode_Type()
)
hwfcConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcConfigManagerErrorCode.setStatus("current")
_HwfcConfigManagerUserConfig_Type = TruthValue
_HwfcConfigManagerUserConfig_Object = MibTableColumn
hwfcConfigManagerUserConfig = _HwfcConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 5),
    _HwfcConfigManagerUserConfig_Type()
)
hwfcConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcConfigManagerUserConfig.setStatus("current")
_HwfcCreationClassName_Type = WtcsDisplayString
_HwfcCreationClassName_Object = MibTableColumn
hwfcCreationClassName = _HwfcCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 6),
    _HwfcCreationClassName_Type()
)
hwfcCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcCreationClassName.setStatus("current")
_HwfcDescription_Type = WtcsDisplayString
_HwfcDescription_Object = MibTableColumn
hwfcDescription = _HwfcDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 7),
    _HwfcDescription_Type()
)
hwfcDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcDescription.setStatus("current")
_HwfcDeviceID_Type = WtcsDisplayString
_HwfcDeviceID_Object = MibTableColumn
hwfcDeviceID = _HwfcDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 8),
    _HwfcDeviceID_Type()
)
hwfcDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcDeviceID.setStatus("current")
_HwfcErrorCleared_Type = TruthValue
_HwfcErrorCleared_Object = MibTableColumn
hwfcErrorCleared = _HwfcErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 9),
    _HwfcErrorCleared_Type()
)
hwfcErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcErrorCleared.setStatus("current")
_HwfcErrorDescription_Type = WtcsDisplayString
_HwfcErrorDescription_Object = MibTableColumn
hwfcErrorDescription = _HwfcErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 10),
    _HwfcErrorDescription_Type()
)
hwfcErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcErrorDescription.setStatus("current")
_HwfcInstallDate_Type = DateAndTime
_HwfcInstallDate_Object = MibTableColumn
hwfcInstallDate = _HwfcInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 11),
    _HwfcInstallDate_Type()
)
hwfcInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcInstallDate.setStatus("current")
_HwfcLastErrorCode_Type = Gauge32
_HwfcLastErrorCode_Object = MibTableColumn
hwfcLastErrorCode = _HwfcLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 12),
    _HwfcLastErrorCode_Type()
)
hwfcLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcLastErrorCode.setStatus("current")
_HwfcManufacturer_Type = WtcsDisplayString
_HwfcManufacturer_Object = MibTableColumn
hwfcManufacturer = _HwfcManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 13),
    _HwfcManufacturer_Type()
)
hwfcManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcManufacturer.setStatus("current")
_HwfcMaxNumberControlled_Type = Gauge32
_HwfcMaxNumberControlled_Object = MibTableColumn
hwfcMaxNumberControlled = _HwfcMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 14),
    _HwfcMaxNumberControlled_Type()
)
hwfcMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcMaxNumberControlled.setStatus("current")
_HwfcName_Type = WtcsDisplayString
_HwfcName_Object = MibTableColumn
hwfcName = _HwfcName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 15),
    _HwfcName_Type()
)
hwfcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcName.setStatus("current")
_HwfcPNPDeviceID_Type = WtcsDisplayString
_HwfcPNPDeviceID_Object = MibTableColumn
hwfcPNPDeviceID = _HwfcPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 16),
    _HwfcPNPDeviceID_Type()
)
hwfcPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcPNPDeviceID.setStatus("current")
_HwfcPowerManagementCapabilities_Type = WtcsDisplayString
_HwfcPowerManagementCapabilities_Object = MibTableColumn
hwfcPowerManagementCapabilities = _HwfcPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 17),
    _HwfcPowerManagementCapabilities_Type()
)
hwfcPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcPowerManagementCapabilities.setStatus("current")
_HwfcPowerManagementSupported_Type = TruthValue
_HwfcPowerManagementSupported_Object = MibTableColumn
hwfcPowerManagementSupported = _HwfcPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 18),
    _HwfcPowerManagementSupported_Type()
)
hwfcPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcPowerManagementSupported.setStatus("current")


class _HwfcProtocolSupported_Type(Integer32):
    """Custom type hwfcProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("agp", 43),
          ("ansiX3T95FDDI", 34),
          ("ataATAPI", 6),
          ("cmd", 38),
          ("diagnostic", 19),
          ("dssi", 40),
          ("eisa", 3),
          ("enhancedATAIDE", 42),
          ("escon", 18),
          ("esdi", 36),
          ("fastInfrared", 45),
          ("flexibleDiskette", 7),
          ("hippi", 22),
          ("i2C", 20),
          ("ide", 37),
          ("ieee488", 26),
          ("ieee8023100BASEVG", 32),
          ("ieee802310BASE2", 29),
          ("ieee802310BASE5", 28),
          ("ieee802310BROAD36", 31),
          ("ieee80231BASES", 30),
          ("ieee8025TokenRing", 33),
          ("ipi", 25),
          ("irBus", 47),
          ("isa", 4),
          ("mca", 35),
          ("multiBus", 23),
          ("n1496", 8),
          ("other", 1),
          ("parallelProtocol", 17),
          ("pci", 5),
          ("pcmcia", 15),
          ("power", 21),
          ("qic2", 41),
          ("rs232", 27),
          ("scsiFibreChannelProtocol", 10),
          ("scsiParallelInterface", 9),
          ("scsiSerialBusProtocol", 11),
          ("scsiSerialBusProtocol2", 12),
          ("scsiSerialStorageArchitecture", 13),
          ("serialInfrared", 46),
          ("st506", 39),
          ("twowayInfrared", 44),
          ("universalSerialBus", 16),
          ("unknown", 2),
          ("vesa", 14),
          ("vme", 24))
    )


_HwfcProtocolSupported_Type.__name__ = "Integer32"
_HwfcProtocolSupported_Object = MibTableColumn
hwfcProtocolSupported = _HwfcProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 19),
    _HwfcProtocolSupported_Type()
)
hwfcProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcProtocolSupported.setStatus("current")


class _HwfcStatus_Type(Integer32):
    """Custom type hwfcStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwfcStatus_Type.__name__ = "Integer32"
_HwfcStatus_Object = MibTableColumn
hwfcStatus = _HwfcStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 20),
    _HwfcStatus_Type()
)
hwfcStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcStatus.setStatus("current")


class _HwfcStatusInfo_Type(Integer32):
    """Custom type hwfcStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwfcStatusInfo_Type.__name__ = "Integer32"
_HwfcStatusInfo_Object = MibTableColumn
hwfcStatusInfo = _HwfcStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 21),
    _HwfcStatusInfo_Type()
)
hwfcStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcStatusInfo.setStatus("current")
_HwfcSystemCreationClassName_Type = WtcsDisplayString
_HwfcSystemCreationClassName_Object = MibTableColumn
hwfcSystemCreationClassName = _HwfcSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 22),
    _HwfcSystemCreationClassName_Type()
)
hwfcSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcSystemCreationClassName.setStatus("current")
_HwfcSystemName_Type = WtcsDisplayString
_HwfcSystemName_Object = MibTableColumn
hwfcSystemName = _HwfcSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 23),
    _HwfcSystemName_Type()
)
hwfcSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcSystemName.setStatus("current")
_HwfcTimeOfLastReset_Type = DateAndTime
_HwfcTimeOfLastReset_Object = MibTableColumn
hwfcTimeOfLastReset = _HwfcTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 8, 1, 24),
    _HwfcTimeOfLastReset_Type()
)
hwfcTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwfcTimeOfLastReset.setStatus("current")
_Win32IDEControllerTable_Object = MibTable
win32IDEControllerTable = _Win32IDEControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9)
)
if mibBuilder.loadTexts:
    win32IDEControllerTable.setStatus("current")
_Win32IDEControllerEntry_Object = MibTableRow
win32IDEControllerEntry = _Win32IDEControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1)
)
win32IDEControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwideIndex"),
)
if mibBuilder.loadTexts:
    win32IDEControllerEntry.setStatus("current")


class _HwideIndex_Type(Integer32):
    """Custom type hwideIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwideIndex_Type.__name__ = "Integer32"
_HwideIndex_Object = MibTableColumn
hwideIndex = _HwideIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 1),
    _HwideIndex_Type()
)
hwideIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideIndex.setStatus("current")


class _HwideAvailability_Type(Integer32):
    """Custom type hwideAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwideAvailability_Type.__name__ = "Integer32"
_HwideAvailability_Object = MibTableColumn
hwideAvailability = _HwideAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 2),
    _HwideAvailability_Type()
)
hwideAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideAvailability.setStatus("current")
_HwideCaption_Type = WtcsDisplayString
_HwideCaption_Object = MibTableColumn
hwideCaption = _HwideCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 3),
    _HwideCaption_Type()
)
hwideCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideCaption.setStatus("current")


class _HwideConfigManagerErrorCode_Type(Integer32):
    """Custom type hwideConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwideConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwideConfigManagerErrorCode_Object = MibTableColumn
hwideConfigManagerErrorCode = _HwideConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 4),
    _HwideConfigManagerErrorCode_Type()
)
hwideConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideConfigManagerErrorCode.setStatus("current")
_HwideConfigManagerUserConfig_Type = TruthValue
_HwideConfigManagerUserConfig_Object = MibTableColumn
hwideConfigManagerUserConfig = _HwideConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 5),
    _HwideConfigManagerUserConfig_Type()
)
hwideConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideConfigManagerUserConfig.setStatus("current")


class _HwideCreationClassName_Type(WtcsDisplayString):
    """Custom type hwideCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwideCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwideCreationClassName_Object = MibTableColumn
hwideCreationClassName = _HwideCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 6),
    _HwideCreationClassName_Type()
)
hwideCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideCreationClassName.setStatus("current")
_HwideDescription_Type = WtcsDisplayString
_HwideDescription_Object = MibTableColumn
hwideDescription = _HwideDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 7),
    _HwideDescription_Type()
)
hwideDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideDescription.setStatus("current")
_HwideDeviceID_Type = WtcsDisplayString
_HwideDeviceID_Object = MibTableColumn
hwideDeviceID = _HwideDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 8),
    _HwideDeviceID_Type()
)
hwideDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideDeviceID.setStatus("current")
_HwideErrorCleared_Type = TruthValue
_HwideErrorCleared_Object = MibTableColumn
hwideErrorCleared = _HwideErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 9),
    _HwideErrorCleared_Type()
)
hwideErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideErrorCleared.setStatus("current")
_HwideErrorDescription_Type = WtcsDisplayString
_HwideErrorDescription_Object = MibTableColumn
hwideErrorDescription = _HwideErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 10),
    _HwideErrorDescription_Type()
)
hwideErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideErrorDescription.setStatus("current")
_HwideInstallDate_Type = DateAndTime
_HwideInstallDate_Object = MibTableColumn
hwideInstallDate = _HwideInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 11),
    _HwideInstallDate_Type()
)
hwideInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideInstallDate.setStatus("current")
_HwideLastErrorCode_Type = Gauge32
_HwideLastErrorCode_Object = MibTableColumn
hwideLastErrorCode = _HwideLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 12),
    _HwideLastErrorCode_Type()
)
hwideLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideLastErrorCode.setStatus("current")
_HwideManufacturer_Type = WtcsDisplayString
_HwideManufacturer_Object = MibTableColumn
hwideManufacturer = _HwideManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 13),
    _HwideManufacturer_Type()
)
hwideManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideManufacturer.setStatus("current")
_HwideMaxNumberControlled_Type = Gauge32
_HwideMaxNumberControlled_Object = MibTableColumn
hwideMaxNumberControlled = _HwideMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 14),
    _HwideMaxNumberControlled_Type()
)
hwideMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideMaxNumberControlled.setStatus("current")
_HwideName_Type = WtcsDisplayString
_HwideName_Object = MibTableColumn
hwideName = _HwideName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 15),
    _HwideName_Type()
)
hwideName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideName.setStatus("current")
_HwidePNPDeviceID_Type = WtcsDisplayString
_HwidePNPDeviceID_Object = MibTableColumn
hwidePNPDeviceID = _HwidePNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 16),
    _HwidePNPDeviceID_Type()
)
hwidePNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidePNPDeviceID.setStatus("current")
_HwidePowerManagementCapabilities_Type = WtcsDisplayString
_HwidePowerManagementCapabilities_Object = MibTableColumn
hwidePowerManagementCapabilities = _HwidePowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 17),
    _HwidePowerManagementCapabilities_Type()
)
hwidePowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidePowerManagementCapabilities.setStatus("current")
_HwidePowerManagementSupported_Type = TruthValue
_HwidePowerManagementSupported_Object = MibTableColumn
hwidePowerManagementSupported = _HwidePowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 18),
    _HwidePowerManagementSupported_Type()
)
hwidePowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidePowerManagementSupported.setStatus("current")


class _HwideProtocolSupported_Type(Integer32):
    """Custom type hwideProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("agp", 43),
          ("ansiX3T95FDDI", 34),
          ("ataATAPI", 6),
          ("cmd", 38),
          ("diagnostic", 19),
          ("dssi", 40),
          ("eisa", 3),
          ("enhancedATAIDE", 42),
          ("escon", 18),
          ("esdi", 36),
          ("fastInfrared", 45),
          ("flexibleDiskette", 7),
          ("hippi", 22),
          ("i2C", 20),
          ("ide", 37),
          ("ieee488", 26),
          ("ieee8023100BASEVG", 32),
          ("ieee802310BASE2", 29),
          ("ieee802310BASE5", 28),
          ("ieee802310BROAD36", 31),
          ("ieee80231BASE5", 30),
          ("ieee8025TokenRing", 33),
          ("ipi", 25),
          ("irBus", 47),
          ("isa", 4),
          ("mca", 35),
          ("multiBus", 23),
          ("n1496", 8),
          ("other", 1),
          ("parallelProtocol", 17),
          ("pci", 5),
          ("pcmcia", 15),
          ("power", 21),
          ("qic2", 41),
          ("rs232", 27),
          ("scsiFibreChannelProtocol", 10),
          ("scsiParallelInterface", 9),
          ("scsiSerialBusProtocol", 11),
          ("scsiSerialBusProtocol1394", 12),
          ("scsiSerialStorageArchitecture", 13),
          ("serialInfrared", 46),
          ("st506", 39),
          ("twowayInfrared", 44),
          ("universalSerialBus", 16),
          ("unknown", 2),
          ("vesa", 14),
          ("vme", 24))
    )


_HwideProtocolSupported_Type.__name__ = "Integer32"
_HwideProtocolSupported_Object = MibTableColumn
hwideProtocolSupported = _HwideProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 19),
    _HwideProtocolSupported_Type()
)
hwideProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideProtocolSupported.setStatus("current")


class _HwideStatus_Type(Integer32):
    """Custom type hwideStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwideStatus_Type.__name__ = "Integer32"
_HwideStatus_Object = MibTableColumn
hwideStatus = _HwideStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 20),
    _HwideStatus_Type()
)
hwideStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideStatus.setStatus("current")


class _HwideStatusInfo_Type(Integer32):
    """Custom type hwideStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwideStatusInfo_Type.__name__ = "Integer32"
_HwideStatusInfo_Object = MibTableColumn
hwideStatusInfo = _HwideStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 21),
    _HwideStatusInfo_Type()
)
hwideStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideStatusInfo.setStatus("current")
_HwideSystemCreationClassName_Type = WtcsDisplayString
_HwideSystemCreationClassName_Object = MibTableColumn
hwideSystemCreationClassName = _HwideSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 22),
    _HwideSystemCreationClassName_Type()
)
hwideSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideSystemCreationClassName.setStatus("current")
_HwideSystemName_Type = WtcsDisplayString
_HwideSystemName_Object = MibTableColumn
hwideSystemName = _HwideSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 23),
    _HwideSystemName_Type()
)
hwideSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideSystemName.setStatus("current")
_HwideTimeOfLastReset_Type = DateAndTime
_HwideTimeOfLastReset_Object = MibTableColumn
hwideTimeOfLastReset = _HwideTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 9, 1, 24),
    _HwideTimeOfLastReset_Type()
)
hwideTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwideTimeOfLastReset.setStatus("current")
_Win32InfraredDeviceTable_Object = MibTable
win32InfraredDeviceTable = _Win32InfraredDeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10)
)
if mibBuilder.loadTexts:
    win32InfraredDeviceTable.setStatus("current")
_Win32InfraredDeviceEntry_Object = MibTableRow
win32InfraredDeviceEntry = _Win32InfraredDeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1)
)
win32InfraredDeviceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwidIndex"),
)
if mibBuilder.loadTexts:
    win32InfraredDeviceEntry.setStatus("current")


class _HwidIndex_Type(Integer32):
    """Custom type hwidIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwidIndex_Type.__name__ = "Integer32"
_HwidIndex_Object = MibTableColumn
hwidIndex = _HwidIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 1),
    _HwidIndex_Type()
)
hwidIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidIndex.setStatus("current")


class _HwidAvailability_Type(Integer32):
    """Custom type hwidAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwidAvailability_Type.__name__ = "Integer32"
_HwidAvailability_Object = MibTableColumn
hwidAvailability = _HwidAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 2),
    _HwidAvailability_Type()
)
hwidAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidAvailability.setStatus("current")
_HwidCaption_Type = WtcsDisplayString
_HwidCaption_Object = MibTableColumn
hwidCaption = _HwidCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 3),
    _HwidCaption_Type()
)
hwidCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidCaption.setStatus("current")


class _HwidConfigManagerErrorCode_Type(Integer32):
    """Custom type hwidConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwidConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwidConfigManagerErrorCode_Object = MibTableColumn
hwidConfigManagerErrorCode = _HwidConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 4),
    _HwidConfigManagerErrorCode_Type()
)
hwidConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidConfigManagerErrorCode.setStatus("current")
_HwidConfigManagerUserConfig_Type = TruthValue
_HwidConfigManagerUserConfig_Object = MibTableColumn
hwidConfigManagerUserConfig = _HwidConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 5),
    _HwidConfigManagerUserConfig_Type()
)
hwidConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidConfigManagerUserConfig.setStatus("current")


class _HwidCreationClassName_Type(WtcsDisplayString):
    """Custom type hwidCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwidCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwidCreationClassName_Object = MibTableColumn
hwidCreationClassName = _HwidCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 6),
    _HwidCreationClassName_Type()
)
hwidCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidCreationClassName.setStatus("current")
_HwidDescription_Type = WtcsDisplayString
_HwidDescription_Object = MibTableColumn
hwidDescription = _HwidDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 7),
    _HwidDescription_Type()
)
hwidDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidDescription.setStatus("current")
_HwidDeviceID_Type = WtcsDisplayString
_HwidDeviceID_Object = MibTableColumn
hwidDeviceID = _HwidDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 8),
    _HwidDeviceID_Type()
)
hwidDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidDeviceID.setStatus("current")
_HwidErrorCleared_Type = TruthValue
_HwidErrorCleared_Object = MibTableColumn
hwidErrorCleared = _HwidErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 9),
    _HwidErrorCleared_Type()
)
hwidErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidErrorCleared.setStatus("current")
_HwidErrorDescription_Type = WtcsDisplayString
_HwidErrorDescription_Object = MibTableColumn
hwidErrorDescription = _HwidErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 10),
    _HwidErrorDescription_Type()
)
hwidErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidErrorDescription.setStatus("current")
_HwidInstallDate_Type = DateAndTime
_HwidInstallDate_Object = MibTableColumn
hwidInstallDate = _HwidInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 11),
    _HwidInstallDate_Type()
)
hwidInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidInstallDate.setStatus("current")
_HwidLastErrorCode_Type = Gauge32
_HwidLastErrorCode_Object = MibTableColumn
hwidLastErrorCode = _HwidLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 12),
    _HwidLastErrorCode_Type()
)
hwidLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidLastErrorCode.setStatus("current")
_HwidManufacturer_Type = WtcsDisplayString
_HwidManufacturer_Object = MibTableColumn
hwidManufacturer = _HwidManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 13),
    _HwidManufacturer_Type()
)
hwidManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidManufacturer.setStatus("current")
_HwidMaxNumberControlled_Type = Gauge32
_HwidMaxNumberControlled_Object = MibTableColumn
hwidMaxNumberControlled = _HwidMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 14),
    _HwidMaxNumberControlled_Type()
)
hwidMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidMaxNumberControlled.setStatus("current")
_HwidName_Type = WtcsDisplayString
_HwidName_Object = MibTableColumn
hwidName = _HwidName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 15),
    _HwidName_Type()
)
hwidName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidName.setStatus("current")
_HwidPNPDeviceID_Type = WtcsDisplayString
_HwidPNPDeviceID_Object = MibTableColumn
hwidPNPDeviceID = _HwidPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 16),
    _HwidPNPDeviceID_Type()
)
hwidPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidPNPDeviceID.setStatus("current")
_HwidPowerManagementCapabilities_Type = WtcsDisplayString
_HwidPowerManagementCapabilities_Object = MibTableColumn
hwidPowerManagementCapabilities = _HwidPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 17),
    _HwidPowerManagementCapabilities_Type()
)
hwidPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidPowerManagementCapabilities.setStatus("current")
_HwidPowerManagementSupported_Type = TruthValue
_HwidPowerManagementSupported_Object = MibTableColumn
hwidPowerManagementSupported = _HwidPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 18),
    _HwidPowerManagementSupported_Type()
)
hwidPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidPowerManagementSupported.setStatus("current")


class _HwidProtocolSupported_Type(Integer32):
    """Custom type hwidProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("agp", 43),
          ("ansiX3T95FDDI", 34),
          ("ataATAPI", 6),
          ("cmd", 38),
          ("diagnostic", 19),
          ("dssi", 40),
          ("eisa", 3),
          ("enhancedATAIDE", 42),
          ("escon", 18),
          ("esdi", 36),
          ("fastInfrared", 45),
          ("flexibleDiskette", 7),
          ("hippi", 22),
          ("i2C", 20),
          ("ide", 37),
          ("ieee488", 26),
          ("ieee8023100BASEVG", 32),
          ("ieee802310BASE2", 29),
          ("ieee802310BASE5", 28),
          ("ieee802310BROAD36", 31),
          ("ieee80231BASE5", 30),
          ("ieee8025TokenRing", 33),
          ("ipi", 25),
          ("irBus", 47),
          ("isa", 4),
          ("mca", 35),
          ("multiBus", 23),
          ("n1496", 8),
          ("other", 1),
          ("parallelProtocol", 17),
          ("pci", 5),
          ("pcmcia", 15),
          ("power", 21),
          ("qic2", 41),
          ("rs232", 27),
          ("scsiFibreChannelProtocol", 10),
          ("scsiParallelInterface", 9),
          ("scsiSerialBusProtocol", 11),
          ("scsiSerialBusProtocol1394", 12),
          ("scsiSerialStorageArchitecture", 13),
          ("serialInfrared", 46),
          ("st506", 39),
          ("twowayInfrared", 44),
          ("universalSerialBus", 16),
          ("unknown", 2),
          ("vesa", 14),
          ("vme", 24))
    )


_HwidProtocolSupported_Type.__name__ = "Integer32"
_HwidProtocolSupported_Object = MibTableColumn
hwidProtocolSupported = _HwidProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 19),
    _HwidProtocolSupported_Type()
)
hwidProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidProtocolSupported.setStatus("current")


class _HwidStatus_Type(Integer32):
    """Custom type hwidStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwidStatus_Type.__name__ = "Integer32"
_HwidStatus_Object = MibTableColumn
hwidStatus = _HwidStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 20),
    _HwidStatus_Type()
)
hwidStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidStatus.setStatus("current")


class _HwidStatusInfo_Type(Integer32):
    """Custom type hwidStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwidStatusInfo_Type.__name__ = "Integer32"
_HwidStatusInfo_Object = MibTableColumn
hwidStatusInfo = _HwidStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 21),
    _HwidStatusInfo_Type()
)
hwidStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidStatusInfo.setStatus("current")
_HwidSystemCreationClassName_Type = WtcsDisplayString
_HwidSystemCreationClassName_Object = MibTableColumn
hwidSystemCreationClassName = _HwidSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 22),
    _HwidSystemCreationClassName_Type()
)
hwidSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidSystemCreationClassName.setStatus("current")
_HwidSystemName_Type = WtcsDisplayString
_HwidSystemName_Object = MibTableColumn
hwidSystemName = _HwidSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 23),
    _HwidSystemName_Type()
)
hwidSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidSystemName.setStatus("current")
_HwidTimeOfLastReset_Type = DateAndTime
_HwidTimeOfLastReset_Object = MibTableColumn
hwidTimeOfLastReset = _HwidTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 10, 1, 24),
    _HwidTimeOfLastReset_Type()
)
hwidTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwidTimeOfLastReset.setStatus("current")
_Win32IRQResourceTable_Object = MibTable
win32IRQResourceTable = _Win32IRQResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11)
)
if mibBuilder.loadTexts:
    win32IRQResourceTable.setStatus("current")
_Win32IRQResourceEntry_Object = MibTableRow
win32IRQResourceEntry = _Win32IRQResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1)
)
win32IRQResourceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwirqIndex"),
)
if mibBuilder.loadTexts:
    win32IRQResourceEntry.setStatus("current")


class _HwirqIndex_Type(Integer32):
    """Custom type hwirqIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwirqIndex_Type.__name__ = "Integer32"
_HwirqIndex_Object = MibTableColumn
hwirqIndex = _HwirqIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 1),
    _HwirqIndex_Type()
)
hwirqIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqIndex.setStatus("current")


class _HwirqAvailability_Type(Integer32):
    """Custom type hwirqAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("available", 2),
          ("inUseAndAvailableShareable", 4),
          ("inUseNotAvailable", 3),
          ("other", 0),
          ("unknown", 1))
    )


_HwirqAvailability_Type.__name__ = "Integer32"
_HwirqAvailability_Object = MibTableColumn
hwirqAvailability = _HwirqAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 2),
    _HwirqAvailability_Type()
)
hwirqAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqAvailability.setStatus("current")
_HwirqCaption_Type = WtcsDisplayString
_HwirqCaption_Object = MibTableColumn
hwirqCaption = _HwirqCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 3),
    _HwirqCaption_Type()
)
hwirqCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqCaption.setStatus("current")


class _HwirqCreationClassName_Type(WtcsDisplayString):
    """Custom type hwirqCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwirqCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwirqCreationClassName_Object = MibTableColumn
hwirqCreationClassName = _HwirqCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 4),
    _HwirqCreationClassName_Type()
)
hwirqCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqCreationClassName.setStatus("current")
_HwirqCSCreationClassName_Type = WtcsDisplayString
_HwirqCSCreationClassName_Object = MibTableColumn
hwirqCSCreationClassName = _HwirqCSCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 5),
    _HwirqCSCreationClassName_Type()
)
hwirqCSCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqCSCreationClassName.setStatus("current")
_HwirqCSName_Type = WtcsDisplayString
_HwirqCSName_Object = MibTableColumn
hwirqCSName = _HwirqCSName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 6),
    _HwirqCSName_Type()
)
hwirqCSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqCSName.setStatus("current")
_HwirqDescription_Type = WtcsDisplayString
_HwirqDescription_Object = MibTableColumn
hwirqDescription = _HwirqDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 7),
    _HwirqDescription_Type()
)
hwirqDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqDescription.setStatus("current")
_HwirqHardware_Type = TruthValue
_HwirqHardware_Object = MibTableColumn
hwirqHardware = _HwirqHardware_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 8),
    _HwirqHardware_Type()
)
hwirqHardware.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqHardware.setStatus("current")
_HwirqInstallDate_Type = DateAndTime
_HwirqInstallDate_Object = MibTableColumn
hwirqInstallDate = _HwirqInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 9),
    _HwirqInstallDate_Type()
)
hwirqInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqInstallDate.setStatus("current")
_HwirqIRQNumber_Type = Gauge32
_HwirqIRQNumber_Object = MibTableColumn
hwirqIRQNumber = _HwirqIRQNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 10),
    _HwirqIRQNumber_Type()
)
hwirqIRQNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqIRQNumber.setStatus("current")
_HwirqName_Type = WtcsDisplayString
_HwirqName_Object = MibTableColumn
hwirqName = _HwirqName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 11),
    _HwirqName_Type()
)
hwirqName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqName.setStatus("current")
_HwirqShareable_Type = TruthValue
_HwirqShareable_Object = MibTableColumn
hwirqShareable = _HwirqShareable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 12),
    _HwirqShareable_Type()
)
hwirqShareable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqShareable.setStatus("current")


class _HwirqStatus_Type(Integer32):
    """Custom type hwirqStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwirqStatus_Type.__name__ = "Integer32"
_HwirqStatus_Object = MibTableColumn
hwirqStatus = _HwirqStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 13),
    _HwirqStatus_Type()
)
hwirqStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqStatus.setStatus("current")


class _HwirqTriggerLevel_Type(Integer32):
    """Custom type hwirqTriggerLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activeHigh", 4),
          ("activeLow", 3),
          ("other", 1),
          ("unknown", 2))
    )


_HwirqTriggerLevel_Type.__name__ = "Integer32"
_HwirqTriggerLevel_Object = MibTableColumn
hwirqTriggerLevel = _HwirqTriggerLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 14),
    _HwirqTriggerLevel_Type()
)
hwirqTriggerLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqTriggerLevel.setStatus("current")


class _HwirqTriggerType_Type(Integer32):
    """Custom type hwirqTriggerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("edge", 4),
          ("level", 3),
          ("other", 1),
          ("unknown", 2))
    )


_HwirqTriggerType_Type.__name__ = "Integer32"
_HwirqTriggerType_Object = MibTableColumn
hwirqTriggerType = _HwirqTriggerType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 15),
    _HwirqTriggerType_Type()
)
hwirqTriggerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqTriggerType.setStatus("current")
_HwirqVector_Type = Gauge32
_HwirqVector_Object = MibTableColumn
hwirqVector = _HwirqVector_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 11, 1, 16),
    _HwirqVector_Type()
)
hwirqVector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwirqVector.setStatus("current")
_Win32MemoryArrayTable_Object = MibTable
win32MemoryArrayTable = _Win32MemoryArrayTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12)
)
if mibBuilder.loadTexts:
    win32MemoryArrayTable.setStatus("current")
_Win32MemoryArrayEntry_Object = MibTableRow
win32MemoryArrayEntry = _Win32MemoryArrayEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1)
)
win32MemoryArrayEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwmaIndex"),
)
if mibBuilder.loadTexts:
    win32MemoryArrayEntry.setStatus("current")


class _HwmaIndex_Type(Integer32):
    """Custom type hwmaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwmaIndex_Type.__name__ = "Integer32"
_HwmaIndex_Object = MibTableColumn
hwmaIndex = _HwmaIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 1),
    _HwmaIndex_Type()
)
hwmaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaIndex.setStatus("current")


class _HwmaAccess_Type(Integer32):
    """Custom type hwmaAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("readWriteSupported", 3),
          ("readable", 1),
          ("unknown", 0),
          ("writable", 2),
          ("writeOnce", 4))
    )


_HwmaAccess_Type.__name__ = "Integer32"
_HwmaAccess_Object = MibTableColumn
hwmaAccess = _HwmaAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 2),
    _HwmaAccess_Type()
)
hwmaAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaAccess.setStatus("current")
_HwmaAdditionalErrorData_Type = WtcsDisplayString
_HwmaAdditionalErrorData_Object = MibTableColumn
hwmaAdditionalErrorData = _HwmaAdditionalErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 3),
    _HwmaAdditionalErrorData_Type()
)
hwmaAdditionalErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaAdditionalErrorData.setStatus("current")


class _HwmaAvailability_Type(Integer32):
    """Custom type hwmaAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwmaAvailability_Type.__name__ = "Integer32"
_HwmaAvailability_Object = MibTableColumn
hwmaAvailability = _HwmaAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 4),
    _HwmaAvailability_Type()
)
hwmaAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaAvailability.setStatus("current")
_HwmaBlockSize_Type = Gauge32
_HwmaBlockSize_Object = MibTableColumn
hwmaBlockSize = _HwmaBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 5),
    _HwmaBlockSize_Type()
)
hwmaBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaBlockSize.setStatus("current")
_HwmaCaption_Type = WtcsDisplayString
_HwmaCaption_Object = MibTableColumn
hwmaCaption = _HwmaCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 6),
    _HwmaCaption_Type()
)
hwmaCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaCaption.setStatus("current")


class _HwmaConfigManagerErrorCode_Type(Integer32):
    """Custom type hwmaConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwmaConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwmaConfigManagerErrorCode_Object = MibTableColumn
hwmaConfigManagerErrorCode = _HwmaConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 7),
    _HwmaConfigManagerErrorCode_Type()
)
hwmaConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaConfigManagerErrorCode.setStatus("current")
_HwmaConfigManagerUserConfig_Type = TruthValue
_HwmaConfigManagerUserConfig_Object = MibTableColumn
hwmaConfigManagerUserConfig = _HwmaConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 8),
    _HwmaConfigManagerUserConfig_Type()
)
hwmaConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaConfigManagerUserConfig.setStatus("current")
_HwmaCorrectableError_Type = TruthValue
_HwmaCorrectableError_Object = MibTableColumn
hwmaCorrectableError = _HwmaCorrectableError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 9),
    _HwmaCorrectableError_Type()
)
hwmaCorrectableError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaCorrectableError.setStatus("current")


class _HwmaCreationClassName_Type(WtcsDisplayString):
    """Custom type hwmaCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwmaCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwmaCreationClassName_Object = MibTableColumn
hwmaCreationClassName = _HwmaCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 10),
    _HwmaCreationClassName_Type()
)
hwmaCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaCreationClassName.setStatus("current")
_HwmaDescription_Type = WtcsDisplayString
_HwmaDescription_Object = MibTableColumn
hwmaDescription = _HwmaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 11),
    _HwmaDescription_Type()
)
hwmaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaDescription.setStatus("current")
_HwmaDeviceID_Type = WtcsDisplayString
_HwmaDeviceID_Object = MibTableColumn
hwmaDeviceID = _HwmaDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 12),
    _HwmaDeviceID_Type()
)
hwmaDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaDeviceID.setStatus("current")
_HwmaEndingAddress_Type = Gauge32
_HwmaEndingAddress_Object = MibTableColumn
hwmaEndingAddress = _HwmaEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 13),
    _HwmaEndingAddress_Type()
)
hwmaEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaEndingAddress.setStatus("current")


class _HwmaErrorAccess_Type(Integer32):
    """Custom type hwmaErrorAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("partialWrite", 5),
          ("read", 3),
          ("unknown", 2),
          ("write", 4))
    )


_HwmaErrorAccess_Type.__name__ = "Integer32"
_HwmaErrorAccess_Object = MibTableColumn
hwmaErrorAccess = _HwmaErrorAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 14),
    _HwmaErrorAccess_Type()
)
hwmaErrorAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorAccess.setStatus("current")
_HwmaErrorAddress_Type = Gauge32
_HwmaErrorAddress_Object = MibTableColumn
hwmaErrorAddress = _HwmaErrorAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 15),
    _HwmaErrorAddress_Type()
)
hwmaErrorAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorAddress.setStatus("current")
_HwmaErrorCleared_Type = TruthValue
_HwmaErrorCleared_Object = MibTableColumn
hwmaErrorCleared = _HwmaErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 16),
    _HwmaErrorCleared_Type()
)
hwmaErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorCleared.setStatus("current")
_HwmaErrorData_Type = WtcsDisplayString
_HwmaErrorData_Object = MibTableColumn
hwmaErrorData = _HwmaErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 17),
    _HwmaErrorData_Type()
)
hwmaErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorData.setStatus("current")


class _HwmaErrorDataOrder_Type(Integer32):
    """Custom type hwmaErrorDataOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("leastSignificantByteFirst", 1),
          ("mostSignificantByteFirst", 2),
          ("unknown", 0))
    )


_HwmaErrorDataOrder_Type.__name__ = "Integer32"
_HwmaErrorDataOrder_Object = MibTableColumn
hwmaErrorDataOrder = _HwmaErrorDataOrder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 18),
    _HwmaErrorDataOrder_Type()
)
hwmaErrorDataOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorDataOrder.setStatus("current")
_HwmaErrorDescription_Type = WtcsDisplayString
_HwmaErrorDescription_Object = MibTableColumn
hwmaErrorDescription = _HwmaErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 19),
    _HwmaErrorDescription_Type()
)
hwmaErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorDescription.setStatus("current")


class _HwmaErrorGranularity_Type(Integer32):
    """Custom type hwmaErrorGranularity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("deviceLevel", 3),
          ("memoryPartitionLevel", 4),
          ("other", 1),
          ("unknown", 2))
    )


_HwmaErrorGranularity_Type.__name__ = "Integer32"
_HwmaErrorGranularity_Object = MibTableColumn
hwmaErrorGranularity = _HwmaErrorGranularity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 20),
    _HwmaErrorGranularity_Type()
)
hwmaErrorGranularity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorGranularity.setStatus("current")


class _HwmaErrorInfo_Type(Integer32):
    """Custom type hwmaErrorInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("badRead", 4),
          ("checksumError", 10),
          ("correctedError", 13),
          ("correctedSinglebitError", 12),
          ("crcError", 11),
          ("doubleBitError", 7),
          ("multiBitError", 8),
          ("nibbleError", 9),
          ("ok", 3),
          ("other", 1),
          ("parityError", 5),
          ("singleBitError", 6),
          ("uncorrectableError", 14),
          ("unknown", 2))
    )


_HwmaErrorInfo_Type.__name__ = "Integer32"
_HwmaErrorInfo_Object = MibTableColumn
hwmaErrorInfo = _HwmaErrorInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 21),
    _HwmaErrorInfo_Type()
)
hwmaErrorInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorInfo.setStatus("current")


class _HwmaErrorMethodology_Type(Integer32):
    """Custom type hwmaErrorMethodology based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("crc", 7),
          ("multiBitECC", 6),
          ("none", 3),
          ("other", 1),
          ("parity", 4),
          ("singleBitECC", 5),
          ("unknown", 2))
    )


_HwmaErrorMethodology_Type.__name__ = "Integer32"
_HwmaErrorMethodology_Object = MibTableColumn
hwmaErrorMethodology = _HwmaErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 22),
    _HwmaErrorMethodology_Type()
)
hwmaErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorMethodology.setStatus("current")
_HwmaErrorResolution_Type = Gauge32
_HwmaErrorResolution_Object = MibTableColumn
hwmaErrorResolution = _HwmaErrorResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 23),
    _HwmaErrorResolution_Type()
)
hwmaErrorResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorResolution.setStatus("current")
_HwmaErrorTime_Type = DateAndTime
_HwmaErrorTime_Object = MibTableColumn
hwmaErrorTime = _HwmaErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 24),
    _HwmaErrorTime_Type()
)
hwmaErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorTime.setStatus("current")
_HwmaErrorTransferSize_Type = Gauge32
_HwmaErrorTransferSize_Object = MibTableColumn
hwmaErrorTransferSize = _HwmaErrorTransferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 25),
    _HwmaErrorTransferSize_Type()
)
hwmaErrorTransferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaErrorTransferSize.setStatus("current")
_HwmaInstallDate_Type = DateAndTime
_HwmaInstallDate_Object = MibTableColumn
hwmaInstallDate = _HwmaInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 26),
    _HwmaInstallDate_Type()
)
hwmaInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaInstallDate.setStatus("current")
_HwmaLastErrorCode_Type = Gauge32
_HwmaLastErrorCode_Object = MibTableColumn
hwmaLastErrorCode = _HwmaLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 27),
    _HwmaLastErrorCode_Type()
)
hwmaLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaLastErrorCode.setStatus("current")
_HwmaName_Type = WtcsDisplayString
_HwmaName_Object = MibTableColumn
hwmaName = _HwmaName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 28),
    _HwmaName_Type()
)
hwmaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaName.setStatus("current")
_HwmaNumberOfBlocks_Type = Gauge32
_HwmaNumberOfBlocks_Object = MibTableColumn
hwmaNumberOfBlocks = _HwmaNumberOfBlocks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 29),
    _HwmaNumberOfBlocks_Type()
)
hwmaNumberOfBlocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaNumberOfBlocks.setStatus("current")
_HwmaOtherErrorDescription_Type = WtcsDisplayString
_HwmaOtherErrorDescription_Object = MibTableColumn
hwmaOtherErrorDescription = _HwmaOtherErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 30),
    _HwmaOtherErrorDescription_Type()
)
hwmaOtherErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaOtherErrorDescription.setStatus("current")
_HwmaPNPDeviceID_Type = WtcsDisplayString
_HwmaPNPDeviceID_Object = MibTableColumn
hwmaPNPDeviceID = _HwmaPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 31),
    _HwmaPNPDeviceID_Type()
)
hwmaPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaPNPDeviceID.setStatus("current")
_HwmaPowerManagementCapabilities_Type = WtcsDisplayString
_HwmaPowerManagementCapabilities_Object = MibTableColumn
hwmaPowerManagementCapabilities = _HwmaPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 32),
    _HwmaPowerManagementCapabilities_Type()
)
hwmaPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaPowerManagementCapabilities.setStatus("current")
_HwmaPowerManagementSupported_Type = TruthValue
_HwmaPowerManagementSupported_Object = MibTableColumn
hwmaPowerManagementSupported = _HwmaPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 33),
    _HwmaPowerManagementSupported_Type()
)
hwmaPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaPowerManagementSupported.setStatus("current")
_HwmaPurpose_Type = WtcsDisplayString
_HwmaPurpose_Object = MibTableColumn
hwmaPurpose = _HwmaPurpose_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 34),
    _HwmaPurpose_Type()
)
hwmaPurpose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaPurpose.setStatus("current")
_HwmaStartingAddress_Type = Gauge32
_HwmaStartingAddress_Object = MibTableColumn
hwmaStartingAddress = _HwmaStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 35),
    _HwmaStartingAddress_Type()
)
hwmaStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaStartingAddress.setStatus("current")


class _HwmaStatus_Type(Integer32):
    """Custom type hwmaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwmaStatus_Type.__name__ = "Integer32"
_HwmaStatus_Object = MibTableColumn
hwmaStatus = _HwmaStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 36),
    _HwmaStatus_Type()
)
hwmaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaStatus.setStatus("current")


class _HwmaStatusInfo_Type(Integer32):
    """Custom type hwmaStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwmaStatusInfo_Type.__name__ = "Integer32"
_HwmaStatusInfo_Object = MibTableColumn
hwmaStatusInfo = _HwmaStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 37),
    _HwmaStatusInfo_Type()
)
hwmaStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaStatusInfo.setStatus("current")
_HwmaSystemCreationClassName_Type = WtcsDisplayString
_HwmaSystemCreationClassName_Object = MibTableColumn
hwmaSystemCreationClassName = _HwmaSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 38),
    _HwmaSystemCreationClassName_Type()
)
hwmaSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaSystemCreationClassName.setStatus("current")
_HwmaSystemLevelAddress_Type = TruthValue
_HwmaSystemLevelAddress_Object = MibTableColumn
hwmaSystemLevelAddress = _HwmaSystemLevelAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 39),
    _HwmaSystemLevelAddress_Type()
)
hwmaSystemLevelAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaSystemLevelAddress.setStatus("current")
_HwmaSystemName_Type = WtcsDisplayString
_HwmaSystemName_Object = MibTableColumn
hwmaSystemName = _HwmaSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 12, 1, 40),
    _HwmaSystemName_Type()
)
hwmaSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmaSystemName.setStatus("current")
_Win32MemoryDeviceTable_Object = MibTable
win32MemoryDeviceTable = _Win32MemoryDeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13)
)
if mibBuilder.loadTexts:
    win32MemoryDeviceTable.setStatus("current")
_Win32MemoryDeviceEntry_Object = MibTableRow
win32MemoryDeviceEntry = _Win32MemoryDeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1)
)
win32MemoryDeviceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwmmIndex"),
)
if mibBuilder.loadTexts:
    win32MemoryDeviceEntry.setStatus("current")


class _HwmmIndex_Type(Integer32):
    """Custom type hwmmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwmmIndex_Type.__name__ = "Integer32"
_HwmmIndex_Object = MibTableColumn
hwmmIndex = _HwmmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 1),
    _HwmmIndex_Type()
)
hwmmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmIndex.setStatus("current")


class _HwmmAccess_Type(Integer32):
    """Custom type hwmmAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("readWriteSupported", 3),
          ("readable", 1),
          ("unknown", 0),
          ("writable", 2),
          ("writeOnce", 4))
    )


_HwmmAccess_Type.__name__ = "Integer32"
_HwmmAccess_Object = MibTableColumn
hwmmAccess = _HwmmAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 2),
    _HwmmAccess_Type()
)
hwmmAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmAccess.setStatus("current")
_HwmmAdditionalErrorData_Type = WtcsDisplayString
_HwmmAdditionalErrorData_Object = MibTableColumn
hwmmAdditionalErrorData = _HwmmAdditionalErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 3),
    _HwmmAdditionalErrorData_Type()
)
hwmmAdditionalErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmAdditionalErrorData.setStatus("current")


class _HwmmAvailability_Type(Integer32):
    """Custom type hwmmAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwmmAvailability_Type.__name__ = "Integer32"
_HwmmAvailability_Object = MibTableColumn
hwmmAvailability = _HwmmAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 4),
    _HwmmAvailability_Type()
)
hwmmAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmAvailability.setStatus("current")
_HwmmBlockSize_Type = Gauge32
_HwmmBlockSize_Object = MibTableColumn
hwmmBlockSize = _HwmmBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 5),
    _HwmmBlockSize_Type()
)
hwmmBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmBlockSize.setStatus("current")
_HwmmCaption_Type = WtcsDisplayString
_HwmmCaption_Object = MibTableColumn
hwmmCaption = _HwmmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 6),
    _HwmmCaption_Type()
)
hwmmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmCaption.setStatus("current")


class _HwmmConfigManagerErrorCode_Type(Integer32):
    """Custom type hwmmConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwmmConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwmmConfigManagerErrorCode_Object = MibTableColumn
hwmmConfigManagerErrorCode = _HwmmConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 7),
    _HwmmConfigManagerErrorCode_Type()
)
hwmmConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmConfigManagerErrorCode.setStatus("current")
_HwmmConfigManagerUserConfig_Type = TruthValue
_HwmmConfigManagerUserConfig_Object = MibTableColumn
hwmmConfigManagerUserConfig = _HwmmConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 8),
    _HwmmConfigManagerUserConfig_Type()
)
hwmmConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmConfigManagerUserConfig.setStatus("current")
_HwmmCorrectableError_Type = TruthValue
_HwmmCorrectableError_Object = MibTableColumn
hwmmCorrectableError = _HwmmCorrectableError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 9),
    _HwmmCorrectableError_Type()
)
hwmmCorrectableError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmCorrectableError.setStatus("current")


class _HwmmCreationClassName_Type(WtcsDisplayString):
    """Custom type hwmmCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwmmCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwmmCreationClassName_Object = MibTableColumn
hwmmCreationClassName = _HwmmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 10),
    _HwmmCreationClassName_Type()
)
hwmmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmCreationClassName.setStatus("current")
_HwmmDescription_Type = WtcsDisplayString
_HwmmDescription_Object = MibTableColumn
hwmmDescription = _HwmmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 11),
    _HwmmDescription_Type()
)
hwmmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmDescription.setStatus("current")
_HwmmDeviceID_Type = WtcsDisplayString
_HwmmDeviceID_Object = MibTableColumn
hwmmDeviceID = _HwmmDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 12),
    _HwmmDeviceID_Type()
)
hwmmDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmDeviceID.setStatus("current")
_HwmmEndingAddress_Type = Gauge32
_HwmmEndingAddress_Object = MibTableColumn
hwmmEndingAddress = _HwmmEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 13),
    _HwmmEndingAddress_Type()
)
hwmmEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmEndingAddress.setStatus("current")


class _HwmmErrorAccess_Type(Integer32):
    """Custom type hwmmErrorAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("partialWrite", 5),
          ("read", 3),
          ("unknown", 2),
          ("write", 4))
    )


_HwmmErrorAccess_Type.__name__ = "Integer32"
_HwmmErrorAccess_Object = MibTableColumn
hwmmErrorAccess = _HwmmErrorAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 14),
    _HwmmErrorAccess_Type()
)
hwmmErrorAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorAccess.setStatus("current")
_HwmmErrorAddress_Type = Gauge32
_HwmmErrorAddress_Object = MibTableColumn
hwmmErrorAddress = _HwmmErrorAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 15),
    _HwmmErrorAddress_Type()
)
hwmmErrorAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorAddress.setStatus("current")
_HwmmErrorCleared_Type = TruthValue
_HwmmErrorCleared_Object = MibTableColumn
hwmmErrorCleared = _HwmmErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 16),
    _HwmmErrorCleared_Type()
)
hwmmErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorCleared.setStatus("current")
_HwmmErrorData_Type = WtcsDisplayString
_HwmmErrorData_Object = MibTableColumn
hwmmErrorData = _HwmmErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 17),
    _HwmmErrorData_Type()
)
hwmmErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorData.setStatus("current")


class _HwmmErrorDataOrder_Type(Integer32):
    """Custom type hwmmErrorDataOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("leastSignificantByteFirst", 1),
          ("mostSignificantByteFirst", 2),
          ("unknown", 0))
    )


_HwmmErrorDataOrder_Type.__name__ = "Integer32"
_HwmmErrorDataOrder_Object = MibTableColumn
hwmmErrorDataOrder = _HwmmErrorDataOrder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 18),
    _HwmmErrorDataOrder_Type()
)
hwmmErrorDataOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorDataOrder.setStatus("current")
_HwmmErrorDescription_Type = WtcsDisplayString
_HwmmErrorDescription_Object = MibTableColumn
hwmmErrorDescription = _HwmmErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 19),
    _HwmmErrorDescription_Type()
)
hwmmErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorDescription.setStatus("current")


class _HwmmErrorGranularity_Type(Integer32):
    """Custom type hwmmErrorGranularity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("deviceLevel", 3),
          ("memoryPartitionLevel", 4),
          ("other", 1),
          ("unknown", 2))
    )


_HwmmErrorGranularity_Type.__name__ = "Integer32"
_HwmmErrorGranularity_Object = MibTableColumn
hwmmErrorGranularity = _HwmmErrorGranularity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 20),
    _HwmmErrorGranularity_Type()
)
hwmmErrorGranularity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorGranularity.setStatus("current")


class _HwmmErrorInfo_Type(Integer32):
    """Custom type hwmmErrorInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("badRead", 4),
          ("checksumError", 10),
          ("correctedError", 13),
          ("correctedSinglebitError", 12),
          ("crcError", 11),
          ("doubleBitError", 7),
          ("multiBitError", 8),
          ("nibbleError", 9),
          ("ok", 3),
          ("other", 1),
          ("parityError", 5),
          ("singleBitError", 6),
          ("uncorrectableError", 14),
          ("unknown", 2))
    )


_HwmmErrorInfo_Type.__name__ = "Integer32"
_HwmmErrorInfo_Object = MibTableColumn
hwmmErrorInfo = _HwmmErrorInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 21),
    _HwmmErrorInfo_Type()
)
hwmmErrorInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorInfo.setStatus("current")


class _HwmmErrorMethodology_Type(Integer32):
    """Custom type hwmmErrorMethodology based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("crc", 7),
          ("multiBitECC", 6),
          ("name", 3),
          ("other", 1),
          ("parity", 4),
          ("singleBitECC", 5),
          ("unknown", 2))
    )


_HwmmErrorMethodology_Type.__name__ = "Integer32"
_HwmmErrorMethodology_Object = MibTableColumn
hwmmErrorMethodology = _HwmmErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 22),
    _HwmmErrorMethodology_Type()
)
hwmmErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorMethodology.setStatus("current")
_HwmmErrorResolution_Type = Gauge32
_HwmmErrorResolution_Object = MibTableColumn
hwmmErrorResolution = _HwmmErrorResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 23),
    _HwmmErrorResolution_Type()
)
hwmmErrorResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorResolution.setStatus("current")
_HwmmErrorTime_Type = DateAndTime
_HwmmErrorTime_Object = MibTableColumn
hwmmErrorTime = _HwmmErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 24),
    _HwmmErrorTime_Type()
)
hwmmErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorTime.setStatus("current")
_HwmmErrorTransferSize_Type = Gauge32
_HwmmErrorTransferSize_Object = MibTableColumn
hwmmErrorTransferSize = _HwmmErrorTransferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 25),
    _HwmmErrorTransferSize_Type()
)
hwmmErrorTransferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmErrorTransferSize.setStatus("current")
_HwmmInstallDate_Type = DateAndTime
_HwmmInstallDate_Object = MibTableColumn
hwmmInstallDate = _HwmmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 26),
    _HwmmInstallDate_Type()
)
hwmmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmInstallDate.setStatus("current")
_HwmmLastErrorCode_Type = Gauge32
_HwmmLastErrorCode_Object = MibTableColumn
hwmmLastErrorCode = _HwmmLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 27),
    _HwmmLastErrorCode_Type()
)
hwmmLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmLastErrorCode.setStatus("current")
_HwmmName_Type = WtcsDisplayString
_HwmmName_Object = MibTableColumn
hwmmName = _HwmmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 28),
    _HwmmName_Type()
)
hwmmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmName.setStatus("current")
_HwmmNumberOfBlocks_Type = Gauge32
_HwmmNumberOfBlocks_Object = MibTableColumn
hwmmNumberOfBlocks = _HwmmNumberOfBlocks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 29),
    _HwmmNumberOfBlocks_Type()
)
hwmmNumberOfBlocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmNumberOfBlocks.setStatus("current")
_HwmmOtherErrorDescription_Type = WtcsDisplayString
_HwmmOtherErrorDescription_Object = MibTableColumn
hwmmOtherErrorDescription = _HwmmOtherErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 30),
    _HwmmOtherErrorDescription_Type()
)
hwmmOtherErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmOtherErrorDescription.setStatus("current")
_HwmmPNPDeviceID_Type = WtcsDisplayString
_HwmmPNPDeviceID_Object = MibTableColumn
hwmmPNPDeviceID = _HwmmPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 31),
    _HwmmPNPDeviceID_Type()
)
hwmmPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmPNPDeviceID.setStatus("current")
_HwmmPowerManagementCapabilities_Type = WtcsDisplayString
_HwmmPowerManagementCapabilities_Object = MibTableColumn
hwmmPowerManagementCapabilities = _HwmmPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 32),
    _HwmmPowerManagementCapabilities_Type()
)
hwmmPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmPowerManagementCapabilities.setStatus("current")
_HwmmPowerManagementSupported_Type = TruthValue
_HwmmPowerManagementSupported_Object = MibTableColumn
hwmmPowerManagementSupported = _HwmmPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 33),
    _HwmmPowerManagementSupported_Type()
)
hwmmPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmPowerManagementSupported.setStatus("current")
_HwmmPurpose_Type = WtcsDisplayString
_HwmmPurpose_Object = MibTableColumn
hwmmPurpose = _HwmmPurpose_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 34),
    _HwmmPurpose_Type()
)
hwmmPurpose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmPurpose.setStatus("current")
_HwmmStartingAddress_Type = Gauge32
_HwmmStartingAddress_Object = MibTableColumn
hwmmStartingAddress = _HwmmStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 35),
    _HwmmStartingAddress_Type()
)
hwmmStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmStartingAddress.setStatus("current")


class _HwmmStatus_Type(Integer32):
    """Custom type hwmmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwmmStatus_Type.__name__ = "Integer32"
_HwmmStatus_Object = MibTableColumn
hwmmStatus = _HwmmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 36),
    _HwmmStatus_Type()
)
hwmmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmStatus.setStatus("current")


class _HwmmStatusInfo_Type(Integer32):
    """Custom type hwmmStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwmmStatusInfo_Type.__name__ = "Integer32"
_HwmmStatusInfo_Object = MibTableColumn
hwmmStatusInfo = _HwmmStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 37),
    _HwmmStatusInfo_Type()
)
hwmmStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmStatusInfo.setStatus("current")
_HwmmSystemCreationClassName_Type = WtcsDisplayString
_HwmmSystemCreationClassName_Object = MibTableColumn
hwmmSystemCreationClassName = _HwmmSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 38),
    _HwmmSystemCreationClassName_Type()
)
hwmmSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmSystemCreationClassName.setStatus("current")
_HwmmSystemLevelAddress_Type = TruthValue
_HwmmSystemLevelAddress_Object = MibTableColumn
hwmmSystemLevelAddress = _HwmmSystemLevelAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 39),
    _HwmmSystemLevelAddress_Type()
)
hwmmSystemLevelAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmSystemLevelAddress.setStatus("current")
_HwmmSystemName_Type = WtcsDisplayString
_HwmmSystemName_Object = MibTableColumn
hwmmSystemName = _HwmmSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 13, 1, 40),
    _HwmmSystemName_Type()
)
hwmmSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmmSystemName.setStatus("current")
_Win32MotherboardDeviceTable_Object = MibTable
win32MotherboardDeviceTable = _Win32MotherboardDeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14)
)
if mibBuilder.loadTexts:
    win32MotherboardDeviceTable.setStatus("current")
_Win32MotherboardDeviceEntry_Object = MibTableRow
win32MotherboardDeviceEntry = _Win32MotherboardDeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1)
)
win32MotherboardDeviceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwmbIndex"),
)
if mibBuilder.loadTexts:
    win32MotherboardDeviceEntry.setStatus("current")


class _HwmbIndex_Type(Integer32):
    """Custom type hwmbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwmbIndex_Type.__name__ = "Integer32"
_HwmbIndex_Object = MibTableColumn
hwmbIndex = _HwmbIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 1),
    _HwmbIndex_Type()
)
hwmbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbIndex.setStatus("current")


class _HwmbAvailability_Type(Integer32):
    """Custom type hwmbAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwmbAvailability_Type.__name__ = "Integer32"
_HwmbAvailability_Object = MibTableColumn
hwmbAvailability = _HwmbAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 2),
    _HwmbAvailability_Type()
)
hwmbAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbAvailability.setStatus("current")
_HwmbCaption_Type = WtcsDisplayString
_HwmbCaption_Object = MibTableColumn
hwmbCaption = _HwmbCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 3),
    _HwmbCaption_Type()
)
hwmbCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbCaption.setStatus("current")


class _HwmbConfigManagerErrorCode_Type(Integer32):
    """Custom type hwmbConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwmbConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwmbConfigManagerErrorCode_Object = MibTableColumn
hwmbConfigManagerErrorCode = _HwmbConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 4),
    _HwmbConfigManagerErrorCode_Type()
)
hwmbConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbConfigManagerErrorCode.setStatus("current")
_HwmbConfigManagerUserConfig_Type = TruthValue
_HwmbConfigManagerUserConfig_Object = MibTableColumn
hwmbConfigManagerUserConfig = _HwmbConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 5),
    _HwmbConfigManagerUserConfig_Type()
)
hwmbConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbConfigManagerUserConfig.setStatus("current")


class _HwmbCreationClassName_Type(WtcsDisplayString):
    """Custom type hwmbCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwmbCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwmbCreationClassName_Object = MibTableColumn
hwmbCreationClassName = _HwmbCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 6),
    _HwmbCreationClassName_Type()
)
hwmbCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbCreationClassName.setStatus("current")
_HwmbDescription_Type = WtcsDisplayString
_HwmbDescription_Object = MibTableColumn
hwmbDescription = _HwmbDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 7),
    _HwmbDescription_Type()
)
hwmbDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbDescription.setStatus("current")
_HwmbDeviceID_Type = WtcsDisplayString
_HwmbDeviceID_Object = MibTableColumn
hwmbDeviceID = _HwmbDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 8),
    _HwmbDeviceID_Type()
)
hwmbDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbDeviceID.setStatus("current")
_HwmbErrorCleared_Type = TruthValue
_HwmbErrorCleared_Object = MibTableColumn
hwmbErrorCleared = _HwmbErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 9),
    _HwmbErrorCleared_Type()
)
hwmbErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbErrorCleared.setStatus("current")
_HwmbErrorDescription_Type = WtcsDisplayString
_HwmbErrorDescription_Object = MibTableColumn
hwmbErrorDescription = _HwmbErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 10),
    _HwmbErrorDescription_Type()
)
hwmbErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbErrorDescription.setStatus("current")
_HwmbInstallDate_Type = DateAndTime
_HwmbInstallDate_Object = MibTableColumn
hwmbInstallDate = _HwmbInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 11),
    _HwmbInstallDate_Type()
)
hwmbInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbInstallDate.setStatus("current")
_HwmbLastErrorCode_Type = Gauge32
_HwmbLastErrorCode_Object = MibTableColumn
hwmbLastErrorCode = _HwmbLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 12),
    _HwmbLastErrorCode_Type()
)
hwmbLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbLastErrorCode.setStatus("current")
_HwmbName_Type = WtcsDisplayString
_HwmbName_Object = MibTableColumn
hwmbName = _HwmbName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 13),
    _HwmbName_Type()
)
hwmbName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbName.setStatus("current")
_HwmbPNPDeviceID_Type = WtcsDisplayString
_HwmbPNPDeviceID_Object = MibTableColumn
hwmbPNPDeviceID = _HwmbPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 14),
    _HwmbPNPDeviceID_Type()
)
hwmbPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbPNPDeviceID.setStatus("current")
_HwmbPowerManagementCapabilities_Type = WtcsDisplayString
_HwmbPowerManagementCapabilities_Object = MibTableColumn
hwmbPowerManagementCapabilities = _HwmbPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 15),
    _HwmbPowerManagementCapabilities_Type()
)
hwmbPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbPowerManagementCapabilities.setStatus("current")
_HwmbPowerManagementSupported_Type = TruthValue
_HwmbPowerManagementSupported_Object = MibTableColumn
hwmbPowerManagementSupported = _HwmbPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 16),
    _HwmbPowerManagementSupported_Type()
)
hwmbPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbPowerManagementSupported.setStatus("current")
_HwmbPrimaryBusType_Type = WtcsDisplayString
_HwmbPrimaryBusType_Object = MibTableColumn
hwmbPrimaryBusType = _HwmbPrimaryBusType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 17),
    _HwmbPrimaryBusType_Type()
)
hwmbPrimaryBusType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbPrimaryBusType.setStatus("current")
_HwmbRevisionNumber_Type = WtcsDisplayString
_HwmbRevisionNumber_Object = MibTableColumn
hwmbRevisionNumber = _HwmbRevisionNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 18),
    _HwmbRevisionNumber_Type()
)
hwmbRevisionNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbRevisionNumber.setStatus("current")
_HwmbSecondaryBusType_Type = WtcsDisplayString
_HwmbSecondaryBusType_Object = MibTableColumn
hwmbSecondaryBusType = _HwmbSecondaryBusType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 19),
    _HwmbSecondaryBusType_Type()
)
hwmbSecondaryBusType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbSecondaryBusType.setStatus("current")


class _HwmbStatus_Type(Integer32):
    """Custom type hwmbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwmbStatus_Type.__name__ = "Integer32"
_HwmbStatus_Object = MibTableColumn
hwmbStatus = _HwmbStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 20),
    _HwmbStatus_Type()
)
hwmbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbStatus.setStatus("current")


class _HwmbStatusInfo_Type(Integer32):
    """Custom type hwmbStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwmbStatusInfo_Type.__name__ = "Integer32"
_HwmbStatusInfo_Object = MibTableColumn
hwmbStatusInfo = _HwmbStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 21),
    _HwmbStatusInfo_Type()
)
hwmbStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbStatusInfo.setStatus("current")
_HwmbSystemCreationClassName_Type = WtcsDisplayString
_HwmbSystemCreationClassName_Object = MibTableColumn
hwmbSystemCreationClassName = _HwmbSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 22),
    _HwmbSystemCreationClassName_Type()
)
hwmbSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbSystemCreationClassName.setStatus("current")
_HwmbSystemName_Type = WtcsDisplayString
_HwmbSystemName_Object = MibTableColumn
hwmbSystemName = _HwmbSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 14, 1, 23),
    _HwmbSystemName_Type()
)
hwmbSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwmbSystemName.setStatus("current")
_Win32OnBoardDeviceTable_Object = MibTable
win32OnBoardDeviceTable = _Win32OnBoardDeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15)
)
if mibBuilder.loadTexts:
    win32OnBoardDeviceTable.setStatus("current")
_Win32OnBoardDeviceEntry_Object = MibTableRow
win32OnBoardDeviceEntry = _Win32OnBoardDeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1)
)
win32OnBoardDeviceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwobIndex"),
)
if mibBuilder.loadTexts:
    win32OnBoardDeviceEntry.setStatus("current")


class _HwobIndex_Type(Integer32):
    """Custom type hwobIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwobIndex_Type.__name__ = "Integer32"
_HwobIndex_Object = MibTableColumn
hwobIndex = _HwobIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 1),
    _HwobIndex_Type()
)
hwobIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobIndex.setStatus("current")
_HwobCaption_Type = WtcsDisplayString
_HwobCaption_Object = MibTableColumn
hwobCaption = _HwobCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 2),
    _HwobCaption_Type()
)
hwobCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobCaption.setStatus("current")


class _HwobCreationClassName_Type(WtcsDisplayString):
    """Custom type hwobCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwobCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwobCreationClassName_Object = MibTableColumn
hwobCreationClassName = _HwobCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 3),
    _HwobCreationClassName_Type()
)
hwobCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobCreationClassName.setStatus("current")
_HwobDescription_Type = WtcsDisplayString
_HwobDescription_Object = MibTableColumn
hwobDescription = _HwobDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 4),
    _HwobDescription_Type()
)
hwobDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobDescription.setStatus("current")


class _HwobDeviceType_Type(Integer32):
    """Custom type hwobDeviceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 5),
          ("other", 1),
          ("scsiController", 4),
          ("sound", 7),
          ("tokenRing", 6),
          ("unknown", 2),
          ("video", 3))
    )


_HwobDeviceType_Type.__name__ = "Integer32"
_HwobDeviceType_Object = MibTableColumn
hwobDeviceType = _HwobDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 5),
    _HwobDeviceType_Type()
)
hwobDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobDeviceType.setStatus("current")
_HwobEnabled_Type = TruthValue
_HwobEnabled_Object = MibTableColumn
hwobEnabled = _HwobEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 6),
    _HwobEnabled_Type()
)
hwobEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobEnabled.setStatus("current")
_HwobHotSwappable_Type = TruthValue
_HwobHotSwappable_Object = MibTableColumn
hwobHotSwappable = _HwobHotSwappable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 7),
    _HwobHotSwappable_Type()
)
hwobHotSwappable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobHotSwappable.setStatus("current")
_HwobInstallDate_Type = DateAndTime
_HwobInstallDate_Object = MibTableColumn
hwobInstallDate = _HwobInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 8),
    _HwobInstallDate_Type()
)
hwobInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobInstallDate.setStatus("current")
_HwobManufacturer_Type = WtcsDisplayString
_HwobManufacturer_Object = MibTableColumn
hwobManufacturer = _HwobManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 9),
    _HwobManufacturer_Type()
)
hwobManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobManufacturer.setStatus("current")
_HwobModel_Type = WtcsDisplayString
_HwobModel_Object = MibTableColumn
hwobModel = _HwobModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 10),
    _HwobModel_Type()
)
hwobModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobModel.setStatus("current")
_HwobName_Type = WtcsDisplayString
_HwobName_Object = MibTableColumn
hwobName = _HwobName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 11),
    _HwobName_Type()
)
hwobName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobName.setStatus("current")
_HwobOtherIdentifyingInfo_Type = WtcsDisplayString
_HwobOtherIdentifyingInfo_Object = MibTableColumn
hwobOtherIdentifyingInfo = _HwobOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 12),
    _HwobOtherIdentifyingInfo_Type()
)
hwobOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobOtherIdentifyingInfo.setStatus("current")
_HwobPartNumber_Type = WtcsDisplayString
_HwobPartNumber_Object = MibTableColumn
hwobPartNumber = _HwobPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 13),
    _HwobPartNumber_Type()
)
hwobPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobPartNumber.setStatus("current")
_HwobPoweredOn_Type = TruthValue
_HwobPoweredOn_Object = MibTableColumn
hwobPoweredOn = _HwobPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 14),
    _HwobPoweredOn_Type()
)
hwobPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobPoweredOn.setStatus("current")
_HwobRemovable_Type = TruthValue
_HwobRemovable_Object = MibTableColumn
hwobRemovable = _HwobRemovable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 15),
    _HwobRemovable_Type()
)
hwobRemovable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobRemovable.setStatus("current")
_HwobReplaceable_Type = TruthValue
_HwobReplaceable_Object = MibTableColumn
hwobReplaceable = _HwobReplaceable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 16),
    _HwobReplaceable_Type()
)
hwobReplaceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobReplaceable.setStatus("current")
_HwobSerialNumber_Type = WtcsDisplayString
_HwobSerialNumber_Object = MibTableColumn
hwobSerialNumber = _HwobSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 17),
    _HwobSerialNumber_Type()
)
hwobSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobSerialNumber.setStatus("current")
_HwobSKU_Type = WtcsDisplayString
_HwobSKU_Object = MibTableColumn
hwobSKU = _HwobSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 18),
    _HwobSKU_Type()
)
hwobSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobSKU.setStatus("current")


class _HwobStatus_Type(Integer32):
    """Custom type hwobStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwobStatus_Type.__name__ = "Integer32"
_HwobStatus_Object = MibTableColumn
hwobStatus = _HwobStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 19),
    _HwobStatus_Type()
)
hwobStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobStatus.setStatus("current")


class _HwobTag_Type(WtcsDisplayString):
    """Custom type hwobTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwobTag_Type.__name__ = "WtcsDisplayString"
_HwobTag_Object = MibTableColumn
hwobTag = _HwobTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 20),
    _HwobTag_Type()
)
hwobTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobTag.setStatus("current")
_HwobVersion_Type = WtcsDisplayString
_HwobVersion_Object = MibTableColumn
hwobVersion = _HwobVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 15, 1, 21),
    _HwobVersion_Type()
)
hwobVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwobVersion.setStatus("current")
_Win32ParallelPortTable_Object = MibTable
win32ParallelPortTable = _Win32ParallelPortTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16)
)
if mibBuilder.loadTexts:
    win32ParallelPortTable.setStatus("current")
_Win32ParallelPortEntry_Object = MibTableRow
win32ParallelPortEntry = _Win32ParallelPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1)
)
win32ParallelPortEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwppIndex"),
)
if mibBuilder.loadTexts:
    win32ParallelPortEntry.setStatus("current")


class _HwppIndex_Type(Integer32):
    """Custom type hwppIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwppIndex_Type.__name__ = "Integer32"
_HwppIndex_Object = MibTableColumn
hwppIndex = _HwppIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 1),
    _HwppIndex_Type()
)
hwppIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppIndex.setStatus("current")


class _HwppAvailability_Type(Integer32):
    """Custom type hwppAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwppAvailability_Type.__name__ = "Integer32"
_HwppAvailability_Object = MibTableColumn
hwppAvailability = _HwppAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 2),
    _HwppAvailability_Type()
)
hwppAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppAvailability.setStatus("current")
_HwppCapabilities_Type = WtcsDisplayString
_HwppCapabilities_Object = MibTableColumn
hwppCapabilities = _HwppCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 3),
    _HwppCapabilities_Type()
)
hwppCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppCapabilities.setStatus("current")
_HwppCapabilityDescriptions_Type = WtcsDisplayString
_HwppCapabilityDescriptions_Object = MibTableColumn
hwppCapabilityDescriptions = _HwppCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 4),
    _HwppCapabilityDescriptions_Type()
)
hwppCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppCapabilityDescriptions.setStatus("current")
_HwppCaption_Type = WtcsDisplayString
_HwppCaption_Object = MibTableColumn
hwppCaption = _HwppCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 5),
    _HwppCaption_Type()
)
hwppCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppCaption.setStatus("current")


class _HwppConfigManagerErrorCode_Type(Integer32):
    """Custom type hwppConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwppConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwppConfigManagerErrorCode_Object = MibTableColumn
hwppConfigManagerErrorCode = _HwppConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 6),
    _HwppConfigManagerErrorCode_Type()
)
hwppConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppConfigManagerErrorCode.setStatus("current")
_HwppConfigManagerUserConfig_Type = TruthValue
_HwppConfigManagerUserConfig_Object = MibTableColumn
hwppConfigManagerUserConfig = _HwppConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 7),
    _HwppConfigManagerUserConfig_Type()
)
hwppConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppConfigManagerUserConfig.setStatus("current")
_HwppCreationClassName_Type = WtcsDisplayString
_HwppCreationClassName_Object = MibTableColumn
hwppCreationClassName = _HwppCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 8),
    _HwppCreationClassName_Type()
)
hwppCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppCreationClassName.setStatus("current")
_HwppDescription_Type = WtcsDisplayString
_HwppDescription_Object = MibTableColumn
hwppDescription = _HwppDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 9),
    _HwppDescription_Type()
)
hwppDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppDescription.setStatus("current")
_HwppDeviceID_Type = WtcsDisplayString
_HwppDeviceID_Object = MibTableColumn
hwppDeviceID = _HwppDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 10),
    _HwppDeviceID_Type()
)
hwppDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppDeviceID.setStatus("current")
_HwppDMASupport_Type = TruthValue
_HwppDMASupport_Object = MibTableColumn
hwppDMASupport = _HwppDMASupport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 11),
    _HwppDMASupport_Type()
)
hwppDMASupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppDMASupport.setStatus("current")
_HwppErrorCleared_Type = TruthValue
_HwppErrorCleared_Object = MibTableColumn
hwppErrorCleared = _HwppErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 12),
    _HwppErrorCleared_Type()
)
hwppErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppErrorCleared.setStatus("current")
_HwppErrorDescription_Type = WtcsDisplayString
_HwppErrorDescription_Object = MibTableColumn
hwppErrorDescription = _HwppErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 13),
    _HwppErrorDescription_Type()
)
hwppErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppErrorDescription.setStatus("current")
_HwppInstallDate_Type = DateAndTime
_HwppInstallDate_Object = MibTableColumn
hwppInstallDate = _HwppInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 14),
    _HwppInstallDate_Type()
)
hwppInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppInstallDate.setStatus("current")
_HwppLastErrorCode_Type = Gauge32
_HwppLastErrorCode_Object = MibTableColumn
hwppLastErrorCode = _HwppLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 15),
    _HwppLastErrorCode_Type()
)
hwppLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppLastErrorCode.setStatus("current")
_HwppMaxNumberControlled_Type = Gauge32
_HwppMaxNumberControlled_Object = MibTableColumn
hwppMaxNumberControlled = _HwppMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 16),
    _HwppMaxNumberControlled_Type()
)
hwppMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppMaxNumberControlled.setStatus("current")
_HwppName_Type = WtcsDisplayString
_HwppName_Object = MibTableColumn
hwppName = _HwppName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 17),
    _HwppName_Type()
)
hwppName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppName.setStatus("current")
_HwppOSAutoDiscovered_Type = TruthValue
_HwppOSAutoDiscovered_Object = MibTableColumn
hwppOSAutoDiscovered = _HwppOSAutoDiscovered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 18),
    _HwppOSAutoDiscovered_Type()
)
hwppOSAutoDiscovered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppOSAutoDiscovered.setStatus("current")
_HwppPNPDeviceID_Type = WtcsDisplayString
_HwppPNPDeviceID_Object = MibTableColumn
hwppPNPDeviceID = _HwppPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 19),
    _HwppPNPDeviceID_Type()
)
hwppPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppPNPDeviceID.setStatus("current")
_HwppPowerManagementCapabilities_Type = WtcsDisplayString
_HwppPowerManagementCapabilities_Object = MibTableColumn
hwppPowerManagementCapabilities = _HwppPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 20),
    _HwppPowerManagementCapabilities_Type()
)
hwppPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppPowerManagementCapabilities.setStatus("current")
_HwppPowerManagementSupported_Type = TruthValue
_HwppPowerManagementSupported_Object = MibTableColumn
hwppPowerManagementSupported = _HwppPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 21),
    _HwppPowerManagementSupported_Type()
)
hwppPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppPowerManagementSupported.setStatus("current")


class _HwppProtocolSupported_Type(Integer32):
    """Custom type hwppProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("agp", 43),
          ("ansiX3T95FDDI", 34),
          ("ataATAPI", 6),
          ("cmd", 38),
          ("diagnostic", 19),
          ("dssi", 40),
          ("eisa", 3),
          ("enhancedATAIDE", 42),
          ("escon", 18),
          ("esdi", 36),
          ("fastInfrared", 45),
          ("flexibleDiskette", 7),
          ("hippi", 22),
          ("i2C", 20),
          ("ide", 37),
          ("ieee488", 26),
          ("ieee8023100BASEVG", 32),
          ("ieee802310BASE2", 29),
          ("ieee802310BASE5", 28),
          ("ieee802310BROAD36", 31),
          ("ieee80231BASES", 30),
          ("ieee8025TokenRing", 33),
          ("ipi", 25),
          ("irBus", 47),
          ("isa", 4),
          ("mca", 35),
          ("multiBus", 23),
          ("n1496", 8),
          ("other", 1),
          ("parallelProtocol", 17),
          ("pci", 5),
          ("pcmcia", 15),
          ("power", 21),
          ("qic2", 41),
          ("rs232", 27),
          ("scsiFibreChannelProtocol", 10),
          ("scsiParallelInterface", 9),
          ("scsiSerialBusProtocol", 11),
          ("scsiSerialBusProtocol1394", 12),
          ("scsiSerialStorageArchitecture", 13),
          ("serialInfrared", 46),
          ("st506", 39),
          ("twowayInfrared", 44),
          ("universalSerialBus", 16),
          ("unknown", 2),
          ("vesa", 14),
          ("vme", 24))
    )


_HwppProtocolSupported_Type.__name__ = "Integer32"
_HwppProtocolSupported_Object = MibTableColumn
hwppProtocolSupported = _HwppProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 22),
    _HwppProtocolSupported_Type()
)
hwppProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppProtocolSupported.setStatus("current")


class _HwppStatus_Type(Integer32):
    """Custom type hwppStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwppStatus_Type.__name__ = "Integer32"
_HwppStatus_Object = MibTableColumn
hwppStatus = _HwppStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 23),
    _HwppStatus_Type()
)
hwppStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppStatus.setStatus("current")


class _HwppStatusInfo_Type(Integer32):
    """Custom type hwppStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwppStatusInfo_Type.__name__ = "Integer32"
_HwppStatusInfo_Object = MibTableColumn
hwppStatusInfo = _HwppStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 24),
    _HwppStatusInfo_Type()
)
hwppStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppStatusInfo.setStatus("current")
_HwppSystemCreationClassName_Type = WtcsDisplayString
_HwppSystemCreationClassName_Object = MibTableColumn
hwppSystemCreationClassName = _HwppSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 25),
    _HwppSystemCreationClassName_Type()
)
hwppSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppSystemCreationClassName.setStatus("current")
_HwppSystemName_Type = WtcsDisplayString
_HwppSystemName_Object = MibTableColumn
hwppSystemName = _HwppSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 26),
    _HwppSystemName_Type()
)
hwppSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppSystemName.setStatus("current")
_HwppTimeOfLastReset_Type = DateAndTime
_HwppTimeOfLastReset_Object = MibTableColumn
hwppTimeOfLastReset = _HwppTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 16, 1, 27),
    _HwppTimeOfLastReset_Type()
)
hwppTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwppTimeOfLastReset.setStatus("current")
_Win32PCMCIAControllerTable_Object = MibTable
win32PCMCIAControllerTable = _Win32PCMCIAControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17)
)
if mibBuilder.loadTexts:
    win32PCMCIAControllerTable.setStatus("current")
_Win32PCMCIAControllerEntry_Object = MibTableRow
win32PCMCIAControllerEntry = _Win32PCMCIAControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1)
)
win32PCMCIAControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpcmIndex"),
)
if mibBuilder.loadTexts:
    win32PCMCIAControllerEntry.setStatus("current")


class _HwpcmIndex_Type(Integer32):
    """Custom type hwpcmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpcmIndex_Type.__name__ = "Integer32"
_HwpcmIndex_Object = MibTableColumn
hwpcmIndex = _HwpcmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 1),
    _HwpcmIndex_Type()
)
hwpcmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmIndex.setStatus("current")


class _HwpcmAvailability_Type(Integer32):
    """Custom type hwpcmAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwpcmAvailability_Type.__name__ = "Integer32"
_HwpcmAvailability_Object = MibTableColumn
hwpcmAvailability = _HwpcmAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 2),
    _HwpcmAvailability_Type()
)
hwpcmAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmAvailability.setStatus("current")
_HwpcmCaption_Type = WtcsDisplayString
_HwpcmCaption_Object = MibTableColumn
hwpcmCaption = _HwpcmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 3),
    _HwpcmCaption_Type()
)
hwpcmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmCaption.setStatus("current")


class _HwpcmConfigManagerErrorCode_Type(Integer32):
    """Custom type hwpcmConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwpcmConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwpcmConfigManagerErrorCode_Object = MibTableColumn
hwpcmConfigManagerErrorCode = _HwpcmConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 4),
    _HwpcmConfigManagerErrorCode_Type()
)
hwpcmConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmConfigManagerErrorCode.setStatus("current")
_HwpcmConfigManagerUserConfig_Type = TruthValue
_HwpcmConfigManagerUserConfig_Object = MibTableColumn
hwpcmConfigManagerUserConfig = _HwpcmConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 5),
    _HwpcmConfigManagerUserConfig_Type()
)
hwpcmConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmConfigManagerUserConfig.setStatus("current")


class _HwpcmCreationClassName_Type(WtcsDisplayString):
    """Custom type hwpcmCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpcmCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwpcmCreationClassName_Object = MibTableColumn
hwpcmCreationClassName = _HwpcmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 6),
    _HwpcmCreationClassName_Type()
)
hwpcmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmCreationClassName.setStatus("current")
_HwpcmDescription_Type = WtcsDisplayString
_HwpcmDescription_Object = MibTableColumn
hwpcmDescription = _HwpcmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 7),
    _HwpcmDescription_Type()
)
hwpcmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmDescription.setStatus("current")
_HwpcmDeviceID_Type = WtcsDisplayString
_HwpcmDeviceID_Object = MibTableColumn
hwpcmDeviceID = _HwpcmDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 8),
    _HwpcmDeviceID_Type()
)
hwpcmDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmDeviceID.setStatus("current")
_HwpcmErrorCleared_Type = TruthValue
_HwpcmErrorCleared_Object = MibTableColumn
hwpcmErrorCleared = _HwpcmErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 9),
    _HwpcmErrorCleared_Type()
)
hwpcmErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmErrorCleared.setStatus("current")
_HwpcmErrorDescription_Type = WtcsDisplayString
_HwpcmErrorDescription_Object = MibTableColumn
hwpcmErrorDescription = _HwpcmErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 10),
    _HwpcmErrorDescription_Type()
)
hwpcmErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmErrorDescription.setStatus("current")
_HwpcmInstallDate_Type = DateAndTime
_HwpcmInstallDate_Object = MibTableColumn
hwpcmInstallDate = _HwpcmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 11),
    _HwpcmInstallDate_Type()
)
hwpcmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmInstallDate.setStatus("current")
_HwpcmLastErrorCode_Type = Gauge32
_HwpcmLastErrorCode_Object = MibTableColumn
hwpcmLastErrorCode = _HwpcmLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 12),
    _HwpcmLastErrorCode_Type()
)
hwpcmLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmLastErrorCode.setStatus("current")
_HwpcmManufacturer_Type = WtcsDisplayString
_HwpcmManufacturer_Object = MibTableColumn
hwpcmManufacturer = _HwpcmManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 13),
    _HwpcmManufacturer_Type()
)
hwpcmManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmManufacturer.setStatus("current")
_HwpcmMaxNumberControlled_Type = Gauge32
_HwpcmMaxNumberControlled_Object = MibTableColumn
hwpcmMaxNumberControlled = _HwpcmMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 14),
    _HwpcmMaxNumberControlled_Type()
)
hwpcmMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmMaxNumberControlled.setStatus("current")
_HwpcmName_Type = WtcsDisplayString
_HwpcmName_Object = MibTableColumn
hwpcmName = _HwpcmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 15),
    _HwpcmName_Type()
)
hwpcmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmName.setStatus("current")
_HwpcmPNPDeviceID_Type = WtcsDisplayString
_HwpcmPNPDeviceID_Object = MibTableColumn
hwpcmPNPDeviceID = _HwpcmPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 16),
    _HwpcmPNPDeviceID_Type()
)
hwpcmPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmPNPDeviceID.setStatus("current")
_HwpcmPowerManagementCapabilities_Type = WtcsDisplayString
_HwpcmPowerManagementCapabilities_Object = MibTableColumn
hwpcmPowerManagementCapabilities = _HwpcmPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 17),
    _HwpcmPowerManagementCapabilities_Type()
)
hwpcmPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmPowerManagementCapabilities.setStatus("current")
_HwpcmPowerManagementSupported_Type = TruthValue
_HwpcmPowerManagementSupported_Object = MibTableColumn
hwpcmPowerManagementSupported = _HwpcmPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 18),
    _HwpcmPowerManagementSupported_Type()
)
hwpcmPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmPowerManagementSupported.setStatus("current")


class _HwpcmProtocolSupported_Type(Integer32):
    """Custom type hwpcmProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("agp", 43),
          ("ansiX3T95FDDI", 34),
          ("ataATAPI", 6),
          ("cmd", 38),
          ("diagnostic", 19),
          ("dssi", 40),
          ("eisa", 3),
          ("enhancedATAIDE", 42),
          ("escon", 18),
          ("esdi", 36),
          ("fastInfrared", 45),
          ("flexibleDiskette", 7),
          ("hippi", 22),
          ("i2C", 20),
          ("ide", 37),
          ("ieee488", 26),
          ("ieee8023100BASEVG", 32),
          ("ieee802310BASE2", 29),
          ("ieee802310BASE5", 28),
          ("ieee802310BROAD36", 31),
          ("ieee80231BASE5", 30),
          ("ieee8025TokenRing", 33),
          ("ipi", 25),
          ("irBus", 47),
          ("isa", 4),
          ("mca", 35),
          ("multiBus", 23),
          ("n1496", 8),
          ("other", 1),
          ("parallelProtocol", 17),
          ("pci", 5),
          ("pcmcia", 15),
          ("power", 21),
          ("qic2", 41),
          ("rs232", 27),
          ("scsiFibreChannelProtocol", 10),
          ("scsiParallelInterface", 9),
          ("scsiSerialBusProtocol", 11),
          ("scsiSerialBusProtocol1394", 12),
          ("scsiSerialStorageArchitecture", 13),
          ("serialInfrared", 46),
          ("st506", 39),
          ("twoWayInfrared", 44),
          ("universalSerialBus", 16),
          ("unknown", 2),
          ("vesa", 14),
          ("vme", 24))
    )


_HwpcmProtocolSupported_Type.__name__ = "Integer32"
_HwpcmProtocolSupported_Object = MibTableColumn
hwpcmProtocolSupported = _HwpcmProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 19),
    _HwpcmProtocolSupported_Type()
)
hwpcmProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmProtocolSupported.setStatus("current")


class _HwpcmStatus_Type(Integer32):
    """Custom type hwpcmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpcmStatus_Type.__name__ = "Integer32"
_HwpcmStatus_Object = MibTableColumn
hwpcmStatus = _HwpcmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 20),
    _HwpcmStatus_Type()
)
hwpcmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmStatus.setStatus("current")


class _HwpcmStatusInfo_Type(Integer32):
    """Custom type hwpcmStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwpcmStatusInfo_Type.__name__ = "Integer32"
_HwpcmStatusInfo_Object = MibTableColumn
hwpcmStatusInfo = _HwpcmStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 21),
    _HwpcmStatusInfo_Type()
)
hwpcmStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmStatusInfo.setStatus("current")
_HwpcmSystemCreationClassName_Type = WtcsDisplayString
_HwpcmSystemCreationClassName_Object = MibTableColumn
hwpcmSystemCreationClassName = _HwpcmSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 22),
    _HwpcmSystemCreationClassName_Type()
)
hwpcmSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmSystemCreationClassName.setStatus("current")
_HwpcmSystemName_Type = WtcsDisplayString
_HwpcmSystemName_Object = MibTableColumn
hwpcmSystemName = _HwpcmSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 23),
    _HwpcmSystemName_Type()
)
hwpcmSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmSystemName.setStatus("current")
_HwpcmTimeOfLastReset_Type = DateAndTime
_HwpcmTimeOfLastReset_Object = MibTableColumn
hwpcmTimeOfLastReset = _HwpcmTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 17, 1, 24),
    _HwpcmTimeOfLastReset_Type()
)
hwpcmTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcmTimeOfLastReset.setStatus("current")
_Win32PhysicalMemoryTable_Object = MibTable
win32PhysicalMemoryTable = _Win32PhysicalMemoryTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18)
)
if mibBuilder.loadTexts:
    win32PhysicalMemoryTable.setStatus("current")
_Win32PhysicalMemoryEntry_Object = MibTableRow
win32PhysicalMemoryEntry = _Win32PhysicalMemoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1)
)
win32PhysicalMemoryEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpmmIndex"),
)
if mibBuilder.loadTexts:
    win32PhysicalMemoryEntry.setStatus("current")


class _HwpmmIndex_Type(Integer32):
    """Custom type hwpmmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpmmIndex_Type.__name__ = "Integer32"
_HwpmmIndex_Object = MibTableColumn
hwpmmIndex = _HwpmmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 1),
    _HwpmmIndex_Type()
)
hwpmmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmIndex.setStatus("current")
_HwpmmBankLabel_Type = WtcsDisplayString
_HwpmmBankLabel_Object = MibTableColumn
hwpmmBankLabel = _HwpmmBankLabel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 2),
    _HwpmmBankLabel_Type()
)
hwpmmBankLabel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmBankLabel.setStatus("current")
_HwpmmCapacity_Type = Gauge32
_HwpmmCapacity_Object = MibTableColumn
hwpmmCapacity = _HwpmmCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 3),
    _HwpmmCapacity_Type()
)
hwpmmCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmCapacity.setStatus("current")
_HwpmmCaption_Type = WtcsDisplayString
_HwpmmCaption_Object = MibTableColumn
hwpmmCaption = _HwpmmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 4),
    _HwpmmCaption_Type()
)
hwpmmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmCaption.setStatus("current")


class _HwpmmCreationClassName_Type(WtcsDisplayString):
    """Custom type hwpmmCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpmmCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwpmmCreationClassName_Object = MibTableColumn
hwpmmCreationClassName = _HwpmmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 5),
    _HwpmmCreationClassName_Type()
)
hwpmmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmCreationClassName.setStatus("current")
_HwpmmDataWidth_Type = Integer32
_HwpmmDataWidth_Object = MibTableColumn
hwpmmDataWidth = _HwpmmDataWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 6),
    _HwpmmDataWidth_Type()
)
hwpmmDataWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmDataWidth.setStatus("current")
_HwpmmDescription_Type = WtcsDisplayString
_HwpmmDescription_Object = MibTableColumn
hwpmmDescription = _HwpmmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 7),
    _HwpmmDescription_Type()
)
hwpmmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmDescription.setStatus("current")
_HwpmmDeviceLocator_Type = WtcsDisplayString
_HwpmmDeviceLocator_Object = MibTableColumn
hwpmmDeviceLocator = _HwpmmDeviceLocator_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 8),
    _HwpmmDeviceLocator_Type()
)
hwpmmDeviceLocator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmDeviceLocator.setStatus("current")


class _HwpmmFormFactor_Type(Integer32):
    """Custom type hwpmmFormFactor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("bga", 21),
          ("dimm", 8),
          ("dip", 3),
          ("fpbga", 22),
          ("lcc", 19),
          ("lga", 23),
          ("other", 1),
          ("pga", 10),
          ("plcc", 20),
          ("proprietary", 6),
          ("qfp", 16),
          ("rimm", 11),
          ("simm", 7),
          ("sip", 2),
          ("smd", 14),
          ("sodimm", 12),
          ("soic", 18),
          ("soj", 5),
          ("srimm", 13),
          ("ssmp", 15),
          ("tqfp", 17),
          ("tsop", 9),
          ("unknown", 0),
          ("zip", 4))
    )


_HwpmmFormFactor_Type.__name__ = "Integer32"
_HwpmmFormFactor_Object = MibTableColumn
hwpmmFormFactor = _HwpmmFormFactor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 9),
    _HwpmmFormFactor_Type()
)
hwpmmFormFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmFormFactor.setStatus("current")
_HwpmmHotSwappable_Type = TruthValue
_HwpmmHotSwappable_Object = MibTableColumn
hwpmmHotSwappable = _HwpmmHotSwappable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 10),
    _HwpmmHotSwappable_Type()
)
hwpmmHotSwappable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmHotSwappable.setStatus("current")
_HwpmmInstallDate_Type = DateAndTime
_HwpmmInstallDate_Object = MibTableColumn
hwpmmInstallDate = _HwpmmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 11),
    _HwpmmInstallDate_Type()
)
hwpmmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmInstallDate.setStatus("current")
_HwpmmInterleaveDataDepth_Type = Integer32
_HwpmmInterleaveDataDepth_Object = MibTableColumn
hwpmmInterleaveDataDepth = _HwpmmInterleaveDataDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 12),
    _HwpmmInterleaveDataDepth_Type()
)
hwpmmInterleaveDataDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmInterleaveDataDepth.setStatus("current")


class _HwpmmInterleavePosition_Type(Integer32):
    """Custom type hwpmmInterleavePosition based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("firstPosition", 1),
          ("noninterleaved", 0),
          ("secondPosition", 2))
    )


_HwpmmInterleavePosition_Type.__name__ = "Integer32"
_HwpmmInterleavePosition_Object = MibTableColumn
hwpmmInterleavePosition = _HwpmmInterleavePosition_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 13),
    _HwpmmInterleavePosition_Type()
)
hwpmmInterleavePosition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmInterleavePosition.setStatus("current")
_HwpmmManufacturer_Type = WtcsDisplayString
_HwpmmManufacturer_Object = MibTableColumn
hwpmmManufacturer = _HwpmmManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 14),
    _HwpmmManufacturer_Type()
)
hwpmmManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmManufacturer.setStatus("current")


class _HwpmmMemoryType_Type(Integer32):
    """Custom type hwpmmMemoryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("cacheDRAM", 4),
          ("cdram", 15),
          ("ddr", 20),
          ("dram", 2),
          ("edo", 5),
          ("edram", 6),
          ("eeprom", 12),
          ("eprom", 14),
          ("feprom", 13),
          ("flash", 11),
          ("n3DRAM", 16),
          ("other", 1),
          ("ram", 9),
          ("rdram", 19),
          ("rom", 10),
          ("sdram", 17),
          ("sgram", 18),
          ("sram", 8),
          ("synchronousDRAM", 3),
          ("unknown", 0),
          ("vram", 7))
    )


_HwpmmMemoryType_Type.__name__ = "Integer32"
_HwpmmMemoryType_Object = MibTableColumn
hwpmmMemoryType = _HwpmmMemoryType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 15),
    _HwpmmMemoryType_Type()
)
hwpmmMemoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmMemoryType.setStatus("current")
_HwpmmModel_Type = WtcsDisplayString
_HwpmmModel_Object = MibTableColumn
hwpmmModel = _HwpmmModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 16),
    _HwpmmModel_Type()
)
hwpmmModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmModel.setStatus("current")
_HwpmmName_Type = WtcsDisplayString
_HwpmmName_Object = MibTableColumn
hwpmmName = _HwpmmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 17),
    _HwpmmName_Type()
)
hwpmmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmName.setStatus("current")
_HwpmmOtherIdentifyingInfo_Type = WtcsDisplayString
_HwpmmOtherIdentifyingInfo_Object = MibTableColumn
hwpmmOtherIdentifyingInfo = _HwpmmOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 18),
    _HwpmmOtherIdentifyingInfo_Type()
)
hwpmmOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmOtherIdentifyingInfo.setStatus("current")
_HwpmmPartNumber_Type = WtcsDisplayString
_HwpmmPartNumber_Object = MibTableColumn
hwpmmPartNumber = _HwpmmPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 19),
    _HwpmmPartNumber_Type()
)
hwpmmPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmPartNumber.setStatus("current")
_HwpmmPositionInRow_Type = Gauge32
_HwpmmPositionInRow_Object = MibTableColumn
hwpmmPositionInRow = _HwpmmPositionInRow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 20),
    _HwpmmPositionInRow_Type()
)
hwpmmPositionInRow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmPositionInRow.setStatus("current")
_HwpmmPoweredOn_Type = TruthValue
_HwpmmPoweredOn_Object = MibTableColumn
hwpmmPoweredOn = _HwpmmPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 21),
    _HwpmmPoweredOn_Type()
)
hwpmmPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmPoweredOn.setStatus("current")
_HwpmmRemovable_Type = TruthValue
_HwpmmRemovable_Object = MibTableColumn
hwpmmRemovable = _HwpmmRemovable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 22),
    _HwpmmRemovable_Type()
)
hwpmmRemovable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmRemovable.setStatus("current")
_HwpmmReplaceable_Type = TruthValue
_HwpmmReplaceable_Object = MibTableColumn
hwpmmReplaceable = _HwpmmReplaceable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 23),
    _HwpmmReplaceable_Type()
)
hwpmmReplaceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmReplaceable.setStatus("current")
_HwpmmSerialNumber_Type = WtcsDisplayString
_HwpmmSerialNumber_Object = MibTableColumn
hwpmmSerialNumber = _HwpmmSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 24),
    _HwpmmSerialNumber_Type()
)
hwpmmSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmSerialNumber.setStatus("current")
_HwpmmSKU_Type = WtcsDisplayString
_HwpmmSKU_Object = MibTableColumn
hwpmmSKU = _HwpmmSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 25),
    _HwpmmSKU_Type()
)
hwpmmSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmSKU.setStatus("current")
_HwpmmSpeed_Type = Gauge32
_HwpmmSpeed_Object = MibTableColumn
hwpmmSpeed = _HwpmmSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 26),
    _HwpmmSpeed_Type()
)
hwpmmSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmSpeed.setStatus("current")


class _HwpmmStatus_Type(Integer32):
    """Custom type hwpmmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpmmStatus_Type.__name__ = "Integer32"
_HwpmmStatus_Object = MibTableColumn
hwpmmStatus = _HwpmmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 27),
    _HwpmmStatus_Type()
)
hwpmmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmStatus.setStatus("current")


class _HwpmmTag_Type(WtcsDisplayString):
    """Custom type hwpmmTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpmmTag_Type.__name__ = "WtcsDisplayString"
_HwpmmTag_Object = MibTableColumn
hwpmmTag = _HwpmmTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 28),
    _HwpmmTag_Type()
)
hwpmmTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmTag.setStatus("current")
_HwpmmTotalWidth_Type = Integer32
_HwpmmTotalWidth_Object = MibTableColumn
hwpmmTotalWidth = _HwpmmTotalWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 29),
    _HwpmmTotalWidth_Type()
)
hwpmmTotalWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmTotalWidth.setStatus("current")


class _HwpmmTypeDetail_Type(Integer32):
    """Custom type hwpmmTypeDetail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096)
        )
    )
    namedValues = NamedValues(
        *(("cacheDRAM", 2048),
          ("cmos", 256),
          ("edo", 512),
          ("fastpaged", 8),
          ("nonvolatile", 4096),
          ("other", 2),
          ("pseudostatic", 32),
          ("rambus", 64),
          ("reserved", 1),
          ("staticColumn", 16),
          ("synchronous", 128),
          ("unknown", 4),
          ("windowDRAM", 1024))
    )


_HwpmmTypeDetail_Type.__name__ = "Integer32"
_HwpmmTypeDetail_Object = MibTableColumn
hwpmmTypeDetail = _HwpmmTypeDetail_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 30),
    _HwpmmTypeDetail_Type()
)
hwpmmTypeDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmTypeDetail.setStatus("current")
_HwpmmVersion_Type = WtcsDisplayString
_HwpmmVersion_Object = MibTableColumn
hwpmmVersion = _HwpmmVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 18, 1, 31),
    _HwpmmVersion_Type()
)
hwpmmVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmmVersion.setStatus("current")
_Win32PhysicalMemoryArrayTable_Object = MibTable
win32PhysicalMemoryArrayTable = _Win32PhysicalMemoryArrayTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19)
)
if mibBuilder.loadTexts:
    win32PhysicalMemoryArrayTable.setStatus("current")
_Win32PhysicalMemoryArrayEntry_Object = MibTableRow
win32PhysicalMemoryArrayEntry = _Win32PhysicalMemoryArrayEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1)
)
win32PhysicalMemoryArrayEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpmaIndex"),
)
if mibBuilder.loadTexts:
    win32PhysicalMemoryArrayEntry.setStatus("current")


class _HwpmaIndex_Type(Integer32):
    """Custom type hwpmaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpmaIndex_Type.__name__ = "Integer32"
_HwpmaIndex_Object = MibTableColumn
hwpmaIndex = _HwpmaIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 1),
    _HwpmaIndex_Type()
)
hwpmaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaIndex.setStatus("current")
_HwpmaCaption_Type = WtcsDisplayString
_HwpmaCaption_Object = MibTableColumn
hwpmaCaption = _HwpmaCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 2),
    _HwpmaCaption_Type()
)
hwpmaCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaCaption.setStatus("current")


class _HwpmaCreationClassName_Type(WtcsDisplayString):
    """Custom type hwpmaCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpmaCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwpmaCreationClassName_Object = MibTableColumn
hwpmaCreationClassName = _HwpmaCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 3),
    _HwpmaCreationClassName_Type()
)
hwpmaCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaCreationClassName.setStatus("current")
_HwpmaDepth_Type = Integer32
_HwpmaDepth_Object = MibTableColumn
hwpmaDepth = _HwpmaDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 4),
    _HwpmaDepth_Type()
)
hwpmaDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaDepth.setStatus("current")
_HwpmaDescription_Type = WtcsDisplayString
_HwpmaDescription_Object = MibTableColumn
hwpmaDescription = _HwpmaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 5),
    _HwpmaDescription_Type()
)
hwpmaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaDescription.setStatus("current")
_HwpmaHeight_Type = Integer32
_HwpmaHeight_Object = MibTableColumn
hwpmaHeight = _HwpmaHeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 6),
    _HwpmaHeight_Type()
)
hwpmaHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaHeight.setStatus("current")
_HwpmaHotSwappable_Type = TruthValue
_HwpmaHotSwappable_Object = MibTableColumn
hwpmaHotSwappable = _HwpmaHotSwappable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 7),
    _HwpmaHotSwappable_Type()
)
hwpmaHotSwappable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaHotSwappable.setStatus("current")
_HwpmaInstallDate_Type = DateAndTime
_HwpmaInstallDate_Object = MibTableColumn
hwpmaInstallDate = _HwpmaInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 8),
    _HwpmaInstallDate_Type()
)
hwpmaInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaInstallDate.setStatus("current")


class _HwpmaLocation_Type(Integer32):
    """Custom type hwpmaLocation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("eisaAddonCard", 5),
          ("isaAddonCard", 4),
          ("mcaAddonCard", 7),
          ("nuBus", 10),
          ("other", 1),
          ("pc98C20AddonCard", 11),
          ("pc98C24AddonCard", 12),
          ("pc98EAddonCard", 13),
          ("pc98LocalBusAddonCard", 14),
          ("pciAddonCard", 6),
          ("pcmciaAddonCard", 8),
          ("proprietaryAddonCard", 9),
          ("reserved", 0),
          ("systemBoardOrMotherboard", 3),
          ("unknown", 2))
    )


_HwpmaLocation_Type.__name__ = "Integer32"
_HwpmaLocation_Object = MibTableColumn
hwpmaLocation = _HwpmaLocation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 9),
    _HwpmaLocation_Type()
)
hwpmaLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaLocation.setStatus("current")
_HwpmaManufacturer_Type = WtcsDisplayString
_HwpmaManufacturer_Object = MibTableColumn
hwpmaManufacturer = _HwpmaManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 10),
    _HwpmaManufacturer_Type()
)
hwpmaManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaManufacturer.setStatus("current")
_HwpmaMaxCapacity_Type = Gauge32
_HwpmaMaxCapacity_Object = MibTableColumn
hwpmaMaxCapacity = _HwpmaMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 11),
    _HwpmaMaxCapacity_Type()
)
hwpmaMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaMaxCapacity.setStatus("current")
if mibBuilder.loadTexts:
    hwpmaMaxCapacity.setUnits("Kilobytes")
_HwpmaMemoryDevices_Type = Integer32
_HwpmaMemoryDevices_Object = MibTableColumn
hwpmaMemoryDevices = _HwpmaMemoryDevices_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 12),
    _HwpmaMemoryDevices_Type()
)
hwpmaMemoryDevices.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaMemoryDevices.setStatus("current")


class _HwpmaMemoryErrorCorrection_Type(Integer32):
    """Custom type hwpmaMemoryErrorCorrection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("crc", 7),
          ("multibitECC", 6),
          ("none", 3),
          ("other", 1),
          ("parity", 4),
          ("reserved", 0),
          ("singlebitECC", 5),
          ("unknown", 2))
    )


_HwpmaMemoryErrorCorrection_Type.__name__ = "Integer32"
_HwpmaMemoryErrorCorrection_Object = MibTableColumn
hwpmaMemoryErrorCorrection = _HwpmaMemoryErrorCorrection_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 13),
    _HwpmaMemoryErrorCorrection_Type()
)
hwpmaMemoryErrorCorrection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaMemoryErrorCorrection.setStatus("current")
_HwpmaModel_Type = WtcsDisplayString
_HwpmaModel_Object = MibTableColumn
hwpmaModel = _HwpmaModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 14),
    _HwpmaModel_Type()
)
hwpmaModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaModel.setStatus("current")
_HwpmaName_Type = WtcsDisplayString
_HwpmaName_Object = MibTableColumn
hwpmaName = _HwpmaName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 15),
    _HwpmaName_Type()
)
hwpmaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaName.setStatus("current")
_HwpmaOtherIdentifyingInfo_Type = WtcsDisplayString
_HwpmaOtherIdentifyingInfo_Object = MibTableColumn
hwpmaOtherIdentifyingInfo = _HwpmaOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 16),
    _HwpmaOtherIdentifyingInfo_Type()
)
hwpmaOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaOtherIdentifyingInfo.setStatus("current")
_HwpmaPartNumber_Type = WtcsDisplayString
_HwpmaPartNumber_Object = MibTableColumn
hwpmaPartNumber = _HwpmaPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 17),
    _HwpmaPartNumber_Type()
)
hwpmaPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaPartNumber.setStatus("current")
_HwpmaPoweredOn_Type = TruthValue
_HwpmaPoweredOn_Object = MibTableColumn
hwpmaPoweredOn = _HwpmaPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 18),
    _HwpmaPoweredOn_Type()
)
hwpmaPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaPoweredOn.setStatus("current")
_HwpmaRemovable_Type = TruthValue
_HwpmaRemovable_Object = MibTableColumn
hwpmaRemovable = _HwpmaRemovable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 19),
    _HwpmaRemovable_Type()
)
hwpmaRemovable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaRemovable.setStatus("current")
_HwpmaReplaceable_Type = TruthValue
_HwpmaReplaceable_Object = MibTableColumn
hwpmaReplaceable = _HwpmaReplaceable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 20),
    _HwpmaReplaceable_Type()
)
hwpmaReplaceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaReplaceable.setStatus("current")
_HwpmaSerialNumber_Type = WtcsDisplayString
_HwpmaSerialNumber_Object = MibTableColumn
hwpmaSerialNumber = _HwpmaSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 21),
    _HwpmaSerialNumber_Type()
)
hwpmaSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaSerialNumber.setStatus("current")
_HwpmaSKU_Type = WtcsDisplayString
_HwpmaSKU_Object = MibTableColumn
hwpmaSKU = _HwpmaSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 22),
    _HwpmaSKU_Type()
)
hwpmaSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaSKU.setStatus("current")


class _HwpmaStatus_Type(Integer32):
    """Custom type hwpmaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpmaStatus_Type.__name__ = "Integer32"
_HwpmaStatus_Object = MibTableColumn
hwpmaStatus = _HwpmaStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 23),
    _HwpmaStatus_Type()
)
hwpmaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaStatus.setStatus("current")


class _HwpmaTag_Type(WtcsDisplayString):
    """Custom type hwpmaTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpmaTag_Type.__name__ = "WtcsDisplayString"
_HwpmaTag_Object = MibTableColumn
hwpmaTag = _HwpmaTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 24),
    _HwpmaTag_Type()
)
hwpmaTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaTag.setStatus("current")


class _HwpmaUse_Type(Integer32):
    """Custom type hwpmaUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("cacheMemory", 7),
          ("flashMemory", 5),
          ("nonvolatileRAM", 6),
          ("other", 1),
          ("reserved", 0),
          ("systemMemory", 3),
          ("unknown", 2),
          ("videoMemory", 4))
    )


_HwpmaUse_Type.__name__ = "Integer32"
_HwpmaUse_Object = MibTableColumn
hwpmaUse = _HwpmaUse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 25),
    _HwpmaUse_Type()
)
hwpmaUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaUse.setStatus("current")
_HwpmaVersion_Type = WtcsDisplayString
_HwpmaVersion_Object = MibTableColumn
hwpmaVersion = _HwpmaVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 26),
    _HwpmaVersion_Type()
)
hwpmaVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaVersion.setStatus("current")
_HwpmaWeight_Type = Integer32
_HwpmaWeight_Object = MibTableColumn
hwpmaWeight = _HwpmaWeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 27),
    _HwpmaWeight_Type()
)
hwpmaWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaWeight.setStatus("current")
_HwpmaWidth_Type = Integer32
_HwpmaWidth_Object = MibTableColumn
hwpmaWidth = _HwpmaWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 19, 1, 28),
    _HwpmaWidth_Type()
)
hwpmaWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmaWidth.setStatus("current")
_Win32PnPEntityTable_Object = MibTable
win32PnPEntityTable = _Win32PnPEntityTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20)
)
if mibBuilder.loadTexts:
    win32PnPEntityTable.setStatus("current")
_Win32PnPEntityEntry_Object = MibTableRow
win32PnPEntityEntry = _Win32PnPEntityEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1)
)
win32PnPEntityEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpnpIndex"),
)
if mibBuilder.loadTexts:
    win32PnPEntityEntry.setStatus("current")


class _HwpnpIndex_Type(Integer32):
    """Custom type hwpnpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpnpIndex_Type.__name__ = "Integer32"
_HwpnpIndex_Object = MibTableColumn
hwpnpIndex = _HwpnpIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 1),
    _HwpnpIndex_Type()
)
hwpnpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpIndex.setStatus("current")


class _HwpnpAvailability_Type(Integer32):
    """Custom type hwpnpAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwpnpAvailability_Type.__name__ = "Integer32"
_HwpnpAvailability_Object = MibTableColumn
hwpnpAvailability = _HwpnpAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 2),
    _HwpnpAvailability_Type()
)
hwpnpAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpAvailability.setStatus("current")
_HwpnpCaption_Type = WtcsDisplayString
_HwpnpCaption_Object = MibTableColumn
hwpnpCaption = _HwpnpCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 3),
    _HwpnpCaption_Type()
)
hwpnpCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpCaption.setStatus("current")
_HwpnpClassGuid_Type = WtcsDisplayString
_HwpnpClassGuid_Object = MibTableColumn
hwpnpClassGuid = _HwpnpClassGuid_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 4),
    _HwpnpClassGuid_Type()
)
hwpnpClassGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpClassGuid.setStatus("current")


class _HwpnpConfigManagerErrorCode_Type(Integer32):
    """Custom type hwpnpConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwpnpConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwpnpConfigManagerErrorCode_Object = MibTableColumn
hwpnpConfigManagerErrorCode = _HwpnpConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 5),
    _HwpnpConfigManagerErrorCode_Type()
)
hwpnpConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpConfigManagerErrorCode.setStatus("current")
_HwpnpConfigManagerUserConfig_Type = TruthValue
_HwpnpConfigManagerUserConfig_Object = MibTableColumn
hwpnpConfigManagerUserConfig = _HwpnpConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 6),
    _HwpnpConfigManagerUserConfig_Type()
)
hwpnpConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpConfigManagerUserConfig.setStatus("current")
_HwpnpCreationClassName_Type = WtcsDisplayString
_HwpnpCreationClassName_Object = MibTableColumn
hwpnpCreationClassName = _HwpnpCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 7),
    _HwpnpCreationClassName_Type()
)
hwpnpCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpCreationClassName.setStatus("current")
_HwpnpDescription_Type = WtcsDisplayString
_HwpnpDescription_Object = MibTableColumn
hwpnpDescription = _HwpnpDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 8),
    _HwpnpDescription_Type()
)
hwpnpDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpDescription.setStatus("current")
_HwpnpDeviceID_Type = WtcsDisplayString
_HwpnpDeviceID_Object = MibTableColumn
hwpnpDeviceID = _HwpnpDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 9),
    _HwpnpDeviceID_Type()
)
hwpnpDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpDeviceID.setStatus("current")
_HwpnpErrorCleared_Type = TruthValue
_HwpnpErrorCleared_Object = MibTableColumn
hwpnpErrorCleared = _HwpnpErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 10),
    _HwpnpErrorCleared_Type()
)
hwpnpErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpErrorCleared.setStatus("current")
_HwpnpErrorDescription_Type = WtcsDisplayString
_HwpnpErrorDescription_Object = MibTableColumn
hwpnpErrorDescription = _HwpnpErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 11),
    _HwpnpErrorDescription_Type()
)
hwpnpErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpErrorDescription.setStatus("current")
_HwpnpInstallDate_Type = DateAndTime
_HwpnpInstallDate_Object = MibTableColumn
hwpnpInstallDate = _HwpnpInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 12),
    _HwpnpInstallDate_Type()
)
hwpnpInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpInstallDate.setStatus("current")
_HwpnpLastErrorCode_Type = Gauge32
_HwpnpLastErrorCode_Object = MibTableColumn
hwpnpLastErrorCode = _HwpnpLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 13),
    _HwpnpLastErrorCode_Type()
)
hwpnpLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpLastErrorCode.setStatus("current")
_HwpnpManufacturer_Type = WtcsDisplayString
_HwpnpManufacturer_Object = MibTableColumn
hwpnpManufacturer = _HwpnpManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 14),
    _HwpnpManufacturer_Type()
)
hwpnpManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpManufacturer.setStatus("current")
_HwpnpName_Type = WtcsDisplayString
_HwpnpName_Object = MibTableColumn
hwpnpName = _HwpnpName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 15),
    _HwpnpName_Type()
)
hwpnpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpName.setStatus("current")
_HwpnpPNPDeviceID_Type = WtcsDisplayString
_HwpnpPNPDeviceID_Object = MibTableColumn
hwpnpPNPDeviceID = _HwpnpPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 16),
    _HwpnpPNPDeviceID_Type()
)
hwpnpPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpPNPDeviceID.setStatus("current")
_HwpnpPowerManagementCapabilities_Type = WtcsDisplayString
_HwpnpPowerManagementCapabilities_Object = MibTableColumn
hwpnpPowerManagementCapabilities = _HwpnpPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 17),
    _HwpnpPowerManagementCapabilities_Type()
)
hwpnpPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpPowerManagementCapabilities.setStatus("current")
_HwpnpPowerManagementSupported_Type = TruthValue
_HwpnpPowerManagementSupported_Object = MibTableColumn
hwpnpPowerManagementSupported = _HwpnpPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 18),
    _HwpnpPowerManagementSupported_Type()
)
hwpnpPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpPowerManagementSupported.setStatus("current")
_HwpnpService_Type = WtcsDisplayString
_HwpnpService_Object = MibTableColumn
hwpnpService = _HwpnpService_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 19),
    _HwpnpService_Type()
)
hwpnpService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpService.setStatus("current")


class _HwpnpStatus_Type(Integer32):
    """Custom type hwpnpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpnpStatus_Type.__name__ = "Integer32"
_HwpnpStatus_Object = MibTableColumn
hwpnpStatus = _HwpnpStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 20),
    _HwpnpStatus_Type()
)
hwpnpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpStatus.setStatus("current")


class _HwpnpStatusInfo_Type(Integer32):
    """Custom type hwpnpStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwpnpStatusInfo_Type.__name__ = "Integer32"
_HwpnpStatusInfo_Object = MibTableColumn
hwpnpStatusInfo = _HwpnpStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 21),
    _HwpnpStatusInfo_Type()
)
hwpnpStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpStatusInfo.setStatus("current")
_HwpnpSystemCreationClassName_Type = WtcsDisplayString
_HwpnpSystemCreationClassName_Object = MibTableColumn
hwpnpSystemCreationClassName = _HwpnpSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 22),
    _HwpnpSystemCreationClassName_Type()
)
hwpnpSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpSystemCreationClassName.setStatus("current")
_HwpnpSystemName_Type = WtcsDisplayString
_HwpnpSystemName_Object = MibTableColumn
hwpnpSystemName = _HwpnpSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 20, 1, 23),
    _HwpnpSystemName_Type()
)
hwpnpSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpnpSystemName.setStatus("current")
_Win32PnPSignedDriverTable_Object = MibTable
win32PnPSignedDriverTable = _Win32PnPSignedDriverTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21)
)
if mibBuilder.loadTexts:
    win32PnPSignedDriverTable.setStatus("current")
_Win32PnPSignedDriverEntry_Object = MibTableRow
win32PnPSignedDriverEntry = _Win32PnPSignedDriverEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1)
)
win32PnPSignedDriverEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpsdIndex"),
)
if mibBuilder.loadTexts:
    win32PnPSignedDriverEntry.setStatus("current")


class _HwpsdIndex_Type(Integer32):
    """Custom type hwpsdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpsdIndex_Type.__name__ = "Integer32"
_HwpsdIndex_Object = MibTableColumn
hwpsdIndex = _HwpsdIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 1),
    _HwpsdIndex_Type()
)
hwpsdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdIndex.setStatus("current")
_HwpsdClassGuid_Type = WtcsDisplayString
_HwpsdClassGuid_Object = MibTableColumn
hwpsdClassGuid = _HwpsdClassGuid_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 2),
    _HwpsdClassGuid_Type()
)
hwpsdClassGuid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdClassGuid.setStatus("current")
_HwpsdCompatID_Type = WtcsDisplayString
_HwpsdCompatID_Object = MibTableColumn
hwpsdCompatID = _HwpsdCompatID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 3),
    _HwpsdCompatID_Type()
)
hwpsdCompatID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdCompatID.setStatus("current")
_HwpsdDescription_Type = WtcsDisplayString
_HwpsdDescription_Object = MibTableColumn
hwpsdDescription = _HwpsdDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 4),
    _HwpsdDescription_Type()
)
hwpsdDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDescription.setStatus("current")
_HwpsdDeviceClass_Type = WtcsDisplayString
_HwpsdDeviceClass_Object = MibTableColumn
hwpsdDeviceClass = _HwpsdDeviceClass_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 5),
    _HwpsdDeviceClass_Type()
)
hwpsdDeviceClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDeviceClass.setStatus("current")
_HwpsdDeviceID_Type = WtcsDisplayString
_HwpsdDeviceID_Object = MibTableColumn
hwpsdDeviceID = _HwpsdDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 6),
    _HwpsdDeviceID_Type()
)
hwpsdDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDeviceID.setStatus("current")
_HwpsdDeviceName_Type = WtcsDisplayString
_HwpsdDeviceName_Object = MibTableColumn
hwpsdDeviceName = _HwpsdDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 7),
    _HwpsdDeviceName_Type()
)
hwpsdDeviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDeviceName.setStatus("current")
_HwpsdDevLoader_Type = WtcsDisplayString
_HwpsdDevLoader_Object = MibTableColumn
hwpsdDevLoader = _HwpsdDevLoader_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 8),
    _HwpsdDevLoader_Type()
)
hwpsdDevLoader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDevLoader.setStatus("current")
_HwpsdDriverDate_Type = WtcsDisplayString
_HwpsdDriverDate_Object = MibTableColumn
hwpsdDriverDate = _HwpsdDriverDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 9),
    _HwpsdDriverDate_Type()
)
hwpsdDriverDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDriverDate.setStatus("current")
_HwpsdDriverName_Type = WtcsDisplayString
_HwpsdDriverName_Object = MibTableColumn
hwpsdDriverName = _HwpsdDriverName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 10),
    _HwpsdDriverName_Type()
)
hwpsdDriverName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDriverName.setStatus("current")
_HwpsdDriverVersion_Type = WtcsDisplayString
_HwpsdDriverVersion_Object = MibTableColumn
hwpsdDriverVersion = _HwpsdDriverVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 11),
    _HwpsdDriverVersion_Type()
)
hwpsdDriverVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdDriverVersion.setStatus("current")
_HwpsdFriendlyName_Type = WtcsDisplayString
_HwpsdFriendlyName_Object = MibTableColumn
hwpsdFriendlyName = _HwpsdFriendlyName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 12),
    _HwpsdFriendlyName_Type()
)
hwpsdFriendlyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdFriendlyName.setStatus("current")
_HwpsdHardWareID_Type = WtcsDisplayString
_HwpsdHardWareID_Object = MibTableColumn
hwpsdHardWareID = _HwpsdHardWareID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 13),
    _HwpsdHardWareID_Type()
)
hwpsdHardWareID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdHardWareID.setStatus("current")
_HwpsdInfName_Type = WtcsDisplayString
_HwpsdInfName_Object = MibTableColumn
hwpsdInfName = _HwpsdInfName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 14),
    _HwpsdInfName_Type()
)
hwpsdInfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdInfName.setStatus("current")
_HwpsdInstallDate_Type = DateAndTime
_HwpsdInstallDate_Object = MibTableColumn
hwpsdInstallDate = _HwpsdInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 15),
    _HwpsdInstallDate_Type()
)
hwpsdInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdInstallDate.setStatus("current")
_HwpsdIsSigned_Type = TruthValue
_HwpsdIsSigned_Object = MibTableColumn
hwpsdIsSigned = _HwpsdIsSigned_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 16),
    _HwpsdIsSigned_Type()
)
hwpsdIsSigned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdIsSigned.setStatus("current")
_HwpsdLocation_Type = WtcsDisplayString
_HwpsdLocation_Object = MibTableColumn
hwpsdLocation = _HwpsdLocation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 17),
    _HwpsdLocation_Type()
)
hwpsdLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdLocation.setStatus("current")
_HwpsdManufacturer_Type = WtcsDisplayString
_HwpsdManufacturer_Object = MibTableColumn
hwpsdManufacturer = _HwpsdManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 18),
    _HwpsdManufacturer_Type()
)
hwpsdManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdManufacturer.setStatus("current")
_HwpsdName_Type = WtcsDisplayString
_HwpsdName_Object = MibTableColumn
hwpsdName = _HwpsdName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 19),
    _HwpsdName_Type()
)
hwpsdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdName.setStatus("current")
_HwpsdPDO_Type = WtcsDisplayString
_HwpsdPDO_Object = MibTableColumn
hwpsdPDO = _HwpsdPDO_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 20),
    _HwpsdPDO_Type()
)
hwpsdPDO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdPDO.setStatus("current")
_HwpsdProviderName_Type = WtcsDisplayString
_HwpsdProviderName_Object = MibTableColumn
hwpsdProviderName = _HwpsdProviderName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 21),
    _HwpsdProviderName_Type()
)
hwpsdProviderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdProviderName.setStatus("current")
_HwpsdSigner_Type = WtcsDisplayString
_HwpsdSigner_Object = MibTableColumn
hwpsdSigner = _HwpsdSigner_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 22),
    _HwpsdSigner_Type()
)
hwpsdSigner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdSigner.setStatus("current")
_HwpsdStarted_Type = TruthValue
_HwpsdStarted_Object = MibTableColumn
hwpsdStarted = _HwpsdStarted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 23),
    _HwpsdStarted_Type()
)
hwpsdStarted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdStarted.setStatus("current")
_HwpsdStartMode_Type = WtcsDisplayString
_HwpsdStartMode_Object = MibTableColumn
hwpsdStartMode = _HwpsdStartMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 24),
    _HwpsdStartMode_Type()
)
hwpsdStartMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdStartMode.setStatus("current")


class _HwpsdStatus_Type(Integer32):
    """Custom type hwpsdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpsdStatus_Type.__name__ = "Integer32"
_HwpsdStatus_Object = MibTableColumn
hwpsdStatus = _HwpsdStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 25),
    _HwpsdStatus_Type()
)
hwpsdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdStatus.setStatus("current")
_HwpsdSystemCreationClassName_Type = WtcsDisplayString
_HwpsdSystemCreationClassName_Object = MibTableColumn
hwpsdSystemCreationClassName = _HwpsdSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 26),
    _HwpsdSystemCreationClassName_Type()
)
hwpsdSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdSystemCreationClassName.setStatus("current")
_HwpsdSystemName_Type = WtcsDisplayString
_HwpsdSystemName_Object = MibTableColumn
hwpsdSystemName = _HwpsdSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 21, 1, 27),
    _HwpsdSystemName_Type()
)
hwpsdSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpsdSystemName.setStatus("current")
_Win32PortConnectorTable_Object = MibTable
win32PortConnectorTable = _Win32PortConnectorTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22)
)
if mibBuilder.loadTexts:
    win32PortConnectorTable.setStatus("current")
_Win32PortConnectorEntry_Object = MibTableRow
win32PortConnectorEntry = _Win32PortConnectorEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1)
)
win32PortConnectorEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpcIndex"),
)
if mibBuilder.loadTexts:
    win32PortConnectorEntry.setStatus("current")


class _HwpcIndex_Type(Integer32):
    """Custom type hwpcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpcIndex_Type.__name__ = "Integer32"
_HwpcIndex_Object = MibTableColumn
hwpcIndex = _HwpcIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 1),
    _HwpcIndex_Type()
)
hwpcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcIndex.setStatus("current")
_HwpcCaption_Type = WtcsDisplayString
_HwpcCaption_Object = MibTableColumn
hwpcCaption = _HwpcCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 2),
    _HwpcCaption_Type()
)
hwpcCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcCaption.setStatus("current")
_HwpcConnectorPinout_Type = WtcsDisplayString
_HwpcConnectorPinout_Object = MibTableColumn
hwpcConnectorPinout = _HwpcConnectorPinout_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 3),
    _HwpcConnectorPinout_Type()
)
hwpcConnectorPinout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcConnectorPinout.setStatus("current")
_HwpcConnectorType_Type = WtcsDisplayString
_HwpcConnectorType_Object = MibTableColumn
hwpcConnectorType = _HwpcConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 4),
    _HwpcConnectorType_Type()
)
hwpcConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcConnectorType.setStatus("current")
_HwpcCreationClassName_Type = WtcsDisplayString
_HwpcCreationClassName_Object = MibTableColumn
hwpcCreationClassName = _HwpcCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 5),
    _HwpcCreationClassName_Type()
)
hwpcCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcCreationClassName.setStatus("current")
_HwpcDescription_Type = WtcsDisplayString
_HwpcDescription_Object = MibTableColumn
hwpcDescription = _HwpcDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 6),
    _HwpcDescription_Type()
)
hwpcDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcDescription.setStatus("current")
_HwpcExternalReferenceDesignator_Type = WtcsDisplayString
_HwpcExternalReferenceDesignator_Object = MibTableColumn
hwpcExternalReferenceDesignator = _HwpcExternalReferenceDesignator_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 7),
    _HwpcExternalReferenceDesignator_Type()
)
hwpcExternalReferenceDesignator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcExternalReferenceDesignator.setStatus("current")
_HwpcInstallDate_Type = DateAndTime
_HwpcInstallDate_Object = MibTableColumn
hwpcInstallDate = _HwpcInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 8),
    _HwpcInstallDate_Type()
)
hwpcInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcInstallDate.setStatus("current")
_HwpcInternalReferenceDesignator_Type = WtcsDisplayString
_HwpcInternalReferenceDesignator_Object = MibTableColumn
hwpcInternalReferenceDesignator = _HwpcInternalReferenceDesignator_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 9),
    _HwpcInternalReferenceDesignator_Type()
)
hwpcInternalReferenceDesignator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcInternalReferenceDesignator.setStatus("current")
_HwpcManufacturer_Type = WtcsDisplayString
_HwpcManufacturer_Object = MibTableColumn
hwpcManufacturer = _HwpcManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 10),
    _HwpcManufacturer_Type()
)
hwpcManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcManufacturer.setStatus("current")
_HwpcModel_Type = WtcsDisplayString
_HwpcModel_Object = MibTableColumn
hwpcModel = _HwpcModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 11),
    _HwpcModel_Type()
)
hwpcModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcModel.setStatus("current")
_HwpcName_Type = WtcsDisplayString
_HwpcName_Object = MibTableColumn
hwpcName = _HwpcName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 12),
    _HwpcName_Type()
)
hwpcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcName.setStatus("current")
_HwpcOtherIdentifyingInfo_Type = WtcsDisplayString
_HwpcOtherIdentifyingInfo_Object = MibTableColumn
hwpcOtherIdentifyingInfo = _HwpcOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 13),
    _HwpcOtherIdentifyingInfo_Type()
)
hwpcOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcOtherIdentifyingInfo.setStatus("current")
_HwpcPartNumber_Type = WtcsDisplayString
_HwpcPartNumber_Object = MibTableColumn
hwpcPartNumber = _HwpcPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 14),
    _HwpcPartNumber_Type()
)
hwpcPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcPartNumber.setStatus("current")


class _HwpcPortType_Type(Integer32):
    """Custom type hwpcPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("accessBusPort", 21),
          ("audioPort", 27),
          ("cardbus", 20),
          ("fireWire", 17),
          ("joyStickPort", 12),
          ("keyboardPort", 13),
          ("midiPort", 11),
          ("modemPort", 28),
          ("mousePort", 14),
          ("n8251Compatible", 30),
          ("n8251FIFOCompatible", 31),
          ("networkPort", 29),
          ("none", 0),
          ("parallelPortECP", 3),
          ("parallelPortECPEPP", 5),
          ("parallelPortEPP", 4),
          ("parallelPortPS2", 2),
          ("parallelPortXTATCompatible", 1),
          ("pc98", 24),
          ("pc98Hireso", 25),
          ("pcH98", 26),
          ("pcmciaTypeII", 18),
          ("pcmciaTypeII2", 19),
          ("scsiII", 22),
          ("scsiPort", 10),
          ("scsiWide", 23),
          ("serialPort16450Compatible", 7),
          ("serialPort16550ACompatible", 9),
          ("serialPort16550Compatible", 8),
          ("serialPortXTATCompatible", 6),
          ("ssaSCSI", 15),
          ("usb", 16))
    )


_HwpcPortType_Type.__name__ = "Integer32"
_HwpcPortType_Object = MibTableColumn
hwpcPortType = _HwpcPortType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 15),
    _HwpcPortType_Type()
)
hwpcPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcPortType.setStatus("current")
_HwpcPoweredOn_Type = TruthValue
_HwpcPoweredOn_Object = MibTableColumn
hwpcPoweredOn = _HwpcPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 16),
    _HwpcPoweredOn_Type()
)
hwpcPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcPoweredOn.setStatus("current")
_HwpcSerialNumber_Type = WtcsDisplayString
_HwpcSerialNumber_Object = MibTableColumn
hwpcSerialNumber = _HwpcSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 17),
    _HwpcSerialNumber_Type()
)
hwpcSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcSerialNumber.setStatus("current")
_HwpcSKU_Type = WtcsDisplayString
_HwpcSKU_Object = MibTableColumn
hwpcSKU = _HwpcSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 18),
    _HwpcSKU_Type()
)
hwpcSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcSKU.setStatus("current")


class _HwpcStatus_Type(Integer32):
    """Custom type hwpcStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpcStatus_Type.__name__ = "Integer32"
_HwpcStatus_Object = MibTableColumn
hwpcStatus = _HwpcStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 19),
    _HwpcStatus_Type()
)
hwpcStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcStatus.setStatus("current")


class _HwpcTag_Type(WtcsDisplayString):
    """Custom type hwpcTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpcTag_Type.__name__ = "WtcsDisplayString"
_HwpcTag_Object = MibTableColumn
hwpcTag = _HwpcTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 20),
    _HwpcTag_Type()
)
hwpcTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcTag.setStatus("current")
_HwpcVersion_Type = WtcsDisplayString
_HwpcVersion_Object = MibTableColumn
hwpcVersion = _HwpcVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 22, 1, 21),
    _HwpcVersion_Type()
)
hwpcVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpcVersion.setStatus("current")
_Win32PortResourceTable_Object = MibTable
win32PortResourceTable = _Win32PortResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23)
)
if mibBuilder.loadTexts:
    win32PortResourceTable.setStatus("current")
_Win32PortResourceEntry_Object = MibTableRow
win32PortResourceEntry = _Win32PortResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1)
)
win32PortResourceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpreIndex"),
)
if mibBuilder.loadTexts:
    win32PortResourceEntry.setStatus("current")


class _HwpreIndex_Type(Integer32):
    """Custom type hwpreIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpreIndex_Type.__name__ = "Integer32"
_HwpreIndex_Object = MibTableColumn
hwpreIndex = _HwpreIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 1),
    _HwpreIndex_Type()
)
hwpreIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreIndex.setStatus("current")
_HwpreAlias_Type = TruthValue
_HwpreAlias_Object = MibTableColumn
hwpreAlias = _HwpreAlias_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 2),
    _HwpreAlias_Type()
)
hwpreAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreAlias.setStatus("current")
_HwpreCaption_Type = WtcsDisplayString
_HwpreCaption_Object = MibTableColumn
hwpreCaption = _HwpreCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 3),
    _HwpreCaption_Type()
)
hwpreCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreCaption.setStatus("current")
_HwpreCreationClassName_Type = WtcsDisplayString
_HwpreCreationClassName_Object = MibTableColumn
hwpreCreationClassName = _HwpreCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 4),
    _HwpreCreationClassName_Type()
)
hwpreCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreCreationClassName.setStatus("current")
_HwpreCSCreationClassName_Type = WtcsDisplayString
_HwpreCSCreationClassName_Object = MibTableColumn
hwpreCSCreationClassName = _HwpreCSCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 5),
    _HwpreCSCreationClassName_Type()
)
hwpreCSCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreCSCreationClassName.setStatus("current")
_HwpreCSName_Type = WtcsDisplayString
_HwpreCSName_Object = MibTableColumn
hwpreCSName = _HwpreCSName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 6),
    _HwpreCSName_Type()
)
hwpreCSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreCSName.setStatus("current")
_HwpreDescription_Type = WtcsDisplayString
_HwpreDescription_Object = MibTableColumn
hwpreDescription = _HwpreDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 7),
    _HwpreDescription_Type()
)
hwpreDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreDescription.setStatus("current")
_HwpreEndingAddress_Type = Gauge32
_HwpreEndingAddress_Object = MibTableColumn
hwpreEndingAddress = _HwpreEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 8),
    _HwpreEndingAddress_Type()
)
hwpreEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreEndingAddress.setStatus("current")
_HwpreInstallDate_Type = DateAndTime
_HwpreInstallDate_Object = MibTableColumn
hwpreInstallDate = _HwpreInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 9),
    _HwpreInstallDate_Type()
)
hwpreInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreInstallDate.setStatus("current")
_HwpreName_Type = WtcsDisplayString
_HwpreName_Object = MibTableColumn
hwpreName = _HwpreName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 10),
    _HwpreName_Type()
)
hwpreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreName.setStatus("current")
_HwpreStartingAddress_Type = Gauge32
_HwpreStartingAddress_Object = MibTableColumn
hwpreStartingAddress = _HwpreStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 11),
    _HwpreStartingAddress_Type()
)
hwpreStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreStartingAddress.setStatus("current")


class _HwpreStatus_Type(Integer32):
    """Custom type hwpreStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpreStatus_Type.__name__ = "Integer32"
_HwpreStatus_Object = MibTableColumn
hwpreStatus = _HwpreStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 23, 1, 12),
    _HwpreStatus_Type()
)
hwpreStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpreStatus.setStatus("current")
_Win32ProcessorTable_Object = MibTable
win32ProcessorTable = _Win32ProcessorTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24)
)
if mibBuilder.loadTexts:
    win32ProcessorTable.setStatus("current")
_Win32ProcessorEntry_Object = MibTableRow
win32ProcessorEntry = _Win32ProcessorEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1)
)
win32ProcessorEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwcpuIndex"),
)
if mibBuilder.loadTexts:
    win32ProcessorEntry.setStatus("current")


class _HwcpuIndex_Type(Integer32):
    """Custom type hwcpuIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwcpuIndex_Type.__name__ = "Integer32"
_HwcpuIndex_Object = MibTableColumn
hwcpuIndex = _HwcpuIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 1),
    _HwcpuIndex_Type()
)
hwcpuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuIndex.setStatus("current")
_HwcpuAddressWidth_Type = Integer32
_HwcpuAddressWidth_Object = MibTableColumn
hwcpuAddressWidth = _HwcpuAddressWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 2),
    _HwcpuAddressWidth_Type()
)
hwcpuAddressWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuAddressWidth.setStatus("current")


class _HwcpuArchitecture_Type(Integer32):
    """Custom type hwcpuArchitecture based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              6)
        )
    )
    namedValues = NamedValues(
        *(("alpha", 2),
          ("ia64", 6),
          ("mips", 1),
          ("powerPC", 3),
          ("x86", 0))
    )


_HwcpuArchitecture_Type.__name__ = "Integer32"
_HwcpuArchitecture_Object = MibTableColumn
hwcpuArchitecture = _HwcpuArchitecture_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 3),
    _HwcpuArchitecture_Type()
)
hwcpuArchitecture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuArchitecture.setStatus("current")


class _HwcpuAvailability_Type(Integer32):
    """Custom type hwcpuAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningOrFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwcpuAvailability_Type.__name__ = "Integer32"
_HwcpuAvailability_Object = MibTableColumn
hwcpuAvailability = _HwcpuAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 4),
    _HwcpuAvailability_Type()
)
hwcpuAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuAvailability.setStatus("current")
_HwcpuCaption_Type = WtcsDisplayString
_HwcpuCaption_Object = MibTableColumn
hwcpuCaption = _HwcpuCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 5),
    _HwcpuCaption_Type()
)
hwcpuCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuCaption.setStatus("current")


class _HwcpuConfigManagerErrorCode_Type(Integer32):
    """Custom type hwcpuConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwcpuConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwcpuConfigManagerErrorCode_Object = MibTableColumn
hwcpuConfigManagerErrorCode = _HwcpuConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 6),
    _HwcpuConfigManagerErrorCode_Type()
)
hwcpuConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuConfigManagerErrorCode.setStatus("current")
_HwcpuConfigManagerUserConfig_Type = TruthValue
_HwcpuConfigManagerUserConfig_Object = MibTableColumn
hwcpuConfigManagerUserConfig = _HwcpuConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 7),
    _HwcpuConfigManagerUserConfig_Type()
)
hwcpuConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuConfigManagerUserConfig.setStatus("current")


class _HwcpuCpuStatus_Type(Integer32):
    """Custom type hwcpuCpuStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("cpuDisabledByBIOS", 3),
          ("cpuDisabledByUserViaBIOSSetup", 2),
          ("cpuEnabled", 1),
          ("cpuIsIdle", 4),
          ("other", 7),
          ("reserved", 5),
          ("reserved2", 6),
          ("unknown", 0))
    )


_HwcpuCpuStatus_Type.__name__ = "Integer32"
_HwcpuCpuStatus_Object = MibTableColumn
hwcpuCpuStatus = _HwcpuCpuStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 8),
    _HwcpuCpuStatus_Type()
)
hwcpuCpuStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuCpuStatus.setStatus("current")


class _HwcpuCreationClassName_Type(WtcsDisplayString):
    """Custom type hwcpuCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwcpuCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwcpuCreationClassName_Object = MibTableColumn
hwcpuCreationClassName = _HwcpuCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 9),
    _HwcpuCreationClassName_Type()
)
hwcpuCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuCreationClassName.setStatus("current")
_HwcpuCurrentClockSpeed_Type = Gauge32
_HwcpuCurrentClockSpeed_Object = MibTableColumn
hwcpuCurrentClockSpeed = _HwcpuCurrentClockSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 10),
    _HwcpuCurrentClockSpeed_Type()
)
hwcpuCurrentClockSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuCurrentClockSpeed.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuCurrentClockSpeed.setUnits("MegaHertz")
_HwcpuCurrentVoltage_Type = Integer32
_HwcpuCurrentVoltage_Object = MibTableColumn
hwcpuCurrentVoltage = _HwcpuCurrentVoltage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 11),
    _HwcpuCurrentVoltage_Type()
)
hwcpuCurrentVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuCurrentVoltage.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuCurrentVoltage.setUnits("tenth-Volts")
_HwcpuDataWidth_Type = Integer32
_HwcpuDataWidth_Object = MibTableColumn
hwcpuDataWidth = _HwcpuDataWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 12),
    _HwcpuDataWidth_Type()
)
hwcpuDataWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuDataWidth.setStatus("current")
_HwcpuDescription_Type = WtcsDisplayString
_HwcpuDescription_Object = MibTableColumn
hwcpuDescription = _HwcpuDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 13),
    _HwcpuDescription_Type()
)
hwcpuDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuDescription.setStatus("current")
_HwcpuDeviceID_Type = WtcsDisplayString
_HwcpuDeviceID_Object = MibTableColumn
hwcpuDeviceID = _HwcpuDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 14),
    _HwcpuDeviceID_Type()
)
hwcpuDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuDeviceID.setStatus("current")
_HwcpuErrorCleared_Type = TruthValue
_HwcpuErrorCleared_Object = MibTableColumn
hwcpuErrorCleared = _HwcpuErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 15),
    _HwcpuErrorCleared_Type()
)
hwcpuErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuErrorCleared.setStatus("current")
_HwcpuErrorDescription_Type = WtcsDisplayString
_HwcpuErrorDescription_Object = MibTableColumn
hwcpuErrorDescription = _HwcpuErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 16),
    _HwcpuErrorDescription_Type()
)
hwcpuErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuErrorDescription.setStatus("current")
_HwcpuExtClock_Type = Gauge32
_HwcpuExtClock_Object = MibTableColumn
hwcpuExtClock = _HwcpuExtClock_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 17),
    _HwcpuExtClock_Type()
)
hwcpuExtClock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuExtClock.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuExtClock.setUnits("MegaHertz")


class _HwcpuFamily_Type(Integer32):
    """Custom type hwcpuFamily based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              64,
              65,
              66,
              67,
              68,
              69,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              96,
              97,
              98,
              99,
              100,
              101,
              112,
              120,
              121,
              128,
              130,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              160,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              190,
              200,
              201,
              202,
              250,
              251,
              260,
              261,
              280,
              281,
              300,
              301,
              302,
              320,
              350,
              500)
        )
    )
    namedValues = NamedValues(
        *(("alpha21064", 49),
          ("alpha21066", 50),
          ("alpha21164", 51),
          ("alpha21164PC", 52),
          ("alpha21164a", 53),
          ("alpha21264", 54),
          ("alpha21364", 55),
          ("alphaFamily", 48),
          ("amd2900Family", 30),
          ("amdAthlonMPFamily", 183),
          ("amdAthlonProcessorFamily", 28),
          ("amdAthlonXPFamily", 182),
          ("amdDuronProcessor", 29),
          ("amdOpteronFamily", 185),
          ("arm", 280),
          ("as400Family", 180),
          ("celeron", 15),
          ("crusoeTM3000Family", 121),
          ("crusoeTM5000Family", 120),
          ("dsp", 350),
          ("g4", 201),
          ("g5", 202),
          ("hobbitFamily", 112),
          ("i860", 250),
          ("i960", 251),
          ("ibm390Family", 200),
          ("intelItanium2", 184),
          ("intelXeon", 179),
          ("intelXeonProcessorMP", 181),
          ("itaniumProcessor", 130),
          ("k5Family", 24),
          ("k62", 26),
          ("k62plus", 31),
          ("k63", 27),
          ("k6Family", 25),
          ("k7", 190),
          ("m1Family", 18),
          ("m2Family", 19),
          ("mediaGX", 301),
          ("microSPARCII", 82),
          ("microSPARCIIep", 83),
          ("mii", 302),
          ("mipsFamily", 64),
          ("mipsR10000", 69),
          ("mipsR4000", 65),
          ("mipsR4200", 66),
          ("mipsR4400", 67),
          ("mipsR4600", 68),
          ("n68000", 98),
          ("n68010", 99),
          ("n68020", 100),
          ("n68030", 101),
          ("n68040", 96),
          ("n68xxxFamily", 97),
          ("n6x86", 300),
          ("n80286", 4),
          ("n80287", 8),
          ("n80386", 5),
          ("n80387", 9),
          ("n80486", 6),
          ("n80487", 10),
          ("n8086", 3),
          ("n8087", 7),
          ("other", 1),
          ("paRISC7100", 150),
          ("paRISC7100LC", 149),
          ("paRISC7200", 148),
          ("paRISC7300LC", 147),
          ("paRISC8000", 146),
          ("paRISC8500", 145),
          ("paRISCFamily", 144),
          ("pentium4", 178),
          ("pentiumBrand", 11),
          ("pentiumII", 13),
          ("pentiumIII", 17),
          ("pentiumIIIProcessorSpeedStep", 177),
          ("pentiumIIIXeon", 176),
          ("pentiumIIXeon", 16),
          ("pentiumPro", 12),
          ("pentiumProcessorMMX", 14),
          ("powerPC601", 33),
          ("powerPC603", 34),
          ("powerPC603plus", 35),
          ("powerPC604", 36),
          ("powerPC620", 37),
          ("powerPC750", 39),
          ("powerPCFamily", 32),
          ("powerPCX704", 38),
          ("sh3", 260),
          ("sh4", 261),
          ("sparcFamily", 80),
          ("strongARM", 281),
          ("superSPARC", 81),
          ("ultraSPARC", 84),
          ("ultraSPARCII", 85),
          ("ultraSPARCIII", 87),
          ("ultraSPARCIIIi", 88),
          ("ultraSPARCIIi", 86),
          ("unknown", 2),
          ("v30Family", 160),
          ("videoProcessor", 500),
          ("weitek", 128),
          ("winChip", 320))
    )


_HwcpuFamily_Type.__name__ = "Integer32"
_HwcpuFamily_Object = MibTableColumn
hwcpuFamily = _HwcpuFamily_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 18),
    _HwcpuFamily_Type()
)
hwcpuFamily.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuFamily.setStatus("current")
_HwcpuInstallDate_Type = DateAndTime
_HwcpuInstallDate_Object = MibTableColumn
hwcpuInstallDate = _HwcpuInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 19),
    _HwcpuInstallDate_Type()
)
hwcpuInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuInstallDate.setStatus("current")
_HwcpuL2CacheSize_Type = Gauge32
_HwcpuL2CacheSize_Object = MibTableColumn
hwcpuL2CacheSize = _HwcpuL2CacheSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 20),
    _HwcpuL2CacheSize_Type()
)
hwcpuL2CacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuL2CacheSize.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuL2CacheSize.setUnits("Kilobytes")
_HwcpuL2CacheSpeed_Type = Gauge32
_HwcpuL2CacheSpeed_Object = MibTableColumn
hwcpuL2CacheSpeed = _HwcpuL2CacheSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 21),
    _HwcpuL2CacheSpeed_Type()
)
hwcpuL2CacheSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuL2CacheSpeed.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuL2CacheSpeed.setUnits("MegaHertz")
_HwcpuLastErrorCode_Type = Gauge32
_HwcpuLastErrorCode_Object = MibTableColumn
hwcpuLastErrorCode = _HwcpuLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 22),
    _HwcpuLastErrorCode_Type()
)
hwcpuLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuLastErrorCode.setStatus("current")
_HwcpuLevel_Type = Integer32
_HwcpuLevel_Object = MibTableColumn
hwcpuLevel = _HwcpuLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 23),
    _HwcpuLevel_Type()
)
hwcpuLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuLevel.setStatus("current")
_HwcpuLoadPercentage_Type = Integer32
_HwcpuLoadPercentage_Object = MibTableColumn
hwcpuLoadPercentage = _HwcpuLoadPercentage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 24),
    _HwcpuLoadPercentage_Type()
)
hwcpuLoadPercentage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuLoadPercentage.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuLoadPercentage.setUnits("Percent")
_HwcpuManufacturer_Type = WtcsDisplayString
_HwcpuManufacturer_Object = MibTableColumn
hwcpuManufacturer = _HwcpuManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 25),
    _HwcpuManufacturer_Type()
)
hwcpuManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuManufacturer.setStatus("current")
_HwcpuMaxClockSpeed_Type = Gauge32
_HwcpuMaxClockSpeed_Object = MibTableColumn
hwcpuMaxClockSpeed = _HwcpuMaxClockSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 26),
    _HwcpuMaxClockSpeed_Type()
)
hwcpuMaxClockSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuMaxClockSpeed.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuMaxClockSpeed.setUnits("MegaHertz")
_HwcpuName_Type = WtcsDisplayString
_HwcpuName_Object = MibTableColumn
hwcpuName = _HwcpuName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 27),
    _HwcpuName_Type()
)
hwcpuName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuName.setStatus("current")


class _HwcpuOtherFamilyDescription_Type(WtcsDisplayString):
    """Custom type hwcpuOtherFamilyDescription based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwcpuOtherFamilyDescription_Type.__name__ = "WtcsDisplayString"
_HwcpuOtherFamilyDescription_Object = MibTableColumn
hwcpuOtherFamilyDescription = _HwcpuOtherFamilyDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 28),
    _HwcpuOtherFamilyDescription_Type()
)
hwcpuOtherFamilyDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuOtherFamilyDescription.setStatus("current")
_HwcpuPNPDeviceID_Type = WtcsDisplayString
_HwcpuPNPDeviceID_Object = MibTableColumn
hwcpuPNPDeviceID = _HwcpuPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 29),
    _HwcpuPNPDeviceID_Type()
)
hwcpuPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuPNPDeviceID.setStatus("current")
_HwcpuPowerManagementCapabilities_Type = WtcsDisplayString
_HwcpuPowerManagementCapabilities_Object = MibTableColumn
hwcpuPowerManagementCapabilities = _HwcpuPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 30),
    _HwcpuPowerManagementCapabilities_Type()
)
hwcpuPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuPowerManagementCapabilities.setStatus("current")
_HwcpuPowerManagementSupported_Type = TruthValue
_HwcpuPowerManagementSupported_Object = MibTableColumn
hwcpuPowerManagementSupported = _HwcpuPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 31),
    _HwcpuPowerManagementSupported_Type()
)
hwcpuPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuPowerManagementSupported.setStatus("current")
_HwcpuProcessorId_Type = WtcsDisplayString
_HwcpuProcessorId_Object = MibTableColumn
hwcpuProcessorId = _HwcpuProcessorId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 32),
    _HwcpuProcessorId_Type()
)
hwcpuProcessorId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuProcessorId.setStatus("current")


class _HwcpuProcessorType_Type(Integer32):
    """Custom type hwcpuProcessorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("centralProcessor", 3),
          ("dspProcessor", 5),
          ("mathProcessor", 4),
          ("other", 1),
          ("unknown", 2),
          ("videoProcessor", 6))
    )


_HwcpuProcessorType_Type.__name__ = "Integer32"
_HwcpuProcessorType_Object = MibTableColumn
hwcpuProcessorType = _HwcpuProcessorType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 33),
    _HwcpuProcessorType_Type()
)
hwcpuProcessorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuProcessorType.setStatus("current")
_HwcpuRevision_Type = Integer32
_HwcpuRevision_Object = MibTableColumn
hwcpuRevision = _HwcpuRevision_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 34),
    _HwcpuRevision_Type()
)
hwcpuRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuRevision.setStatus("current")
_HwcpuRole_Type = WtcsDisplayString
_HwcpuRole_Object = MibTableColumn
hwcpuRole = _HwcpuRole_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 35),
    _HwcpuRole_Type()
)
hwcpuRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuRole.setStatus("current")
_HwcpuSocketDesignation_Type = WtcsDisplayString
_HwcpuSocketDesignation_Object = MibTableColumn
hwcpuSocketDesignation = _HwcpuSocketDesignation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 36),
    _HwcpuSocketDesignation_Type()
)
hwcpuSocketDesignation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuSocketDesignation.setStatus("current")


class _HwcpuStatus_Type(Integer32):
    """Custom type hwcpuStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwcpuStatus_Type.__name__ = "Integer32"
_HwcpuStatus_Object = MibTableColumn
hwcpuStatus = _HwcpuStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 37),
    _HwcpuStatus_Type()
)
hwcpuStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuStatus.setStatus("current")


class _HwcpuStatusInfo_Type(Integer32):
    """Custom type hwcpuStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwcpuStatusInfo_Type.__name__ = "Integer32"
_HwcpuStatusInfo_Object = MibTableColumn
hwcpuStatusInfo = _HwcpuStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 38),
    _HwcpuStatusInfo_Type()
)
hwcpuStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuStatusInfo.setStatus("current")
_HwcpuStepping_Type = WtcsDisplayString
_HwcpuStepping_Object = MibTableColumn
hwcpuStepping = _HwcpuStepping_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 39),
    _HwcpuStepping_Type()
)
hwcpuStepping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuStepping.setStatus("current")
_HwcpuSystemCreationClassName_Type = WtcsDisplayString
_HwcpuSystemCreationClassName_Object = MibTableColumn
hwcpuSystemCreationClassName = _HwcpuSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 40),
    _HwcpuSystemCreationClassName_Type()
)
hwcpuSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuSystemCreationClassName.setStatus("current")
_HwcpuSystemName_Type = WtcsDisplayString
_HwcpuSystemName_Object = MibTableColumn
hwcpuSystemName = _HwcpuSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 41),
    _HwcpuSystemName_Type()
)
hwcpuSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuSystemName.setStatus("current")
_HwcpuUniqueId_Type = WtcsDisplayString
_HwcpuUniqueId_Object = MibTableColumn
hwcpuUniqueId = _HwcpuUniqueId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 42),
    _HwcpuUniqueId_Type()
)
hwcpuUniqueId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuUniqueId.setStatus("current")


class _HwcpuUpgradeMethod_Type(Integer32):
    """Custom type hwcpuUpgradeMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("daughterBoard", 3),
          ("lifSocket", 7),
          ("n370PinSocket", 10),
          ("none", 6),
          ("other", 1),
          ("replacementPiggyBack", 5),
          ("slot1", 8),
          ("slot2", 9),
          ("slotA", 11),
          ("slotM", 12),
          ("unknown", 2),
          ("zifSocket", 4))
    )


_HwcpuUpgradeMethod_Type.__name__ = "Integer32"
_HwcpuUpgradeMethod_Object = MibTableColumn
hwcpuUpgradeMethod = _HwcpuUpgradeMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 43),
    _HwcpuUpgradeMethod_Type()
)
hwcpuUpgradeMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuUpgradeMethod.setStatus("current")
_HwcpuVersion_Type = WtcsDisplayString
_HwcpuVersion_Object = MibTableColumn
hwcpuVersion = _HwcpuVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 44),
    _HwcpuVersion_Type()
)
hwcpuVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuVersion.setStatus("current")


class _HwcpuVoltageCaps_Type(Integer32):
    """Custom type hwcpuVoltageCaps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n29", 4),
          ("n33", 2),
          ("n5", 1))
    )


_HwcpuVoltageCaps_Type.__name__ = "Integer32"
_HwcpuVoltageCaps_Object = MibTableColumn
hwcpuVoltageCaps = _HwcpuVoltageCaps_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 45),
    _HwcpuVoltageCaps_Type()
)
hwcpuVoltageCaps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuVoltageCaps.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuVoltageCaps.setUnits("Volts")
_HwcpuL3CacheSize_Type = Gauge32
_HwcpuL3CacheSize_Object = MibTableColumn
hwcpuL3CacheSize = _HwcpuL3CacheSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 46),
    _HwcpuL3CacheSize_Type()
)
hwcpuL3CacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuL3CacheSize.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuL3CacheSize.setUnits("Kilobytes")
_HwcpuL3CacheSpeed_Type = Gauge32
_HwcpuL3CacheSpeed_Object = MibTableColumn
hwcpuL3CacheSpeed = _HwcpuL3CacheSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 47),
    _HwcpuL3CacheSpeed_Type()
)
hwcpuL3CacheSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuL3CacheSpeed.setStatus("current")
if mibBuilder.loadTexts:
    hwcpuL3CacheSpeed.setUnits("MegaHertz")
_HwcpuNumberOfCores_Type = Gauge32
_HwcpuNumberOfCores_Object = MibTableColumn
hwcpuNumberOfCores = _HwcpuNumberOfCores_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 48),
    _HwcpuNumberOfCores_Type()
)
hwcpuNumberOfCores.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuNumberOfCores.setStatus("current")
_HwcpuNumberOfLogicalProcessors_Type = Gauge32
_HwcpuNumberOfLogicalProcessors_Object = MibTableColumn
hwcpuNumberOfLogicalProcessors = _HwcpuNumberOfLogicalProcessors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 24, 1, 49),
    _HwcpuNumberOfLogicalProcessors_Type()
)
hwcpuNumberOfLogicalProcessors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpuNumberOfLogicalProcessors.setStatus("current")
_Win32SCSIControllerTable_Object = MibTable
win32SCSIControllerTable = _Win32SCSIControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25)
)
if mibBuilder.loadTexts:
    win32SCSIControllerTable.setStatus("current")
_Win32SCSIControllerEntry_Object = MibTableRow
win32SCSIControllerEntry = _Win32SCSIControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1)
)
win32SCSIControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwscsiIndex"),
)
if mibBuilder.loadTexts:
    win32SCSIControllerEntry.setStatus("current")


class _HwscsiIndex_Type(Integer32):
    """Custom type hwscsiIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwscsiIndex_Type.__name__ = "Integer32"
_HwscsiIndex_Object = MibTableColumn
hwscsiIndex = _HwscsiIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 1),
    _HwscsiIndex_Type()
)
hwscsiIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiIndex.setStatus("current")


class _HwscsiAvailability_Type(Integer32):
    """Custom type hwscsiAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwscsiAvailability_Type.__name__ = "Integer32"
_HwscsiAvailability_Object = MibTableColumn
hwscsiAvailability = _HwscsiAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 2),
    _HwscsiAvailability_Type()
)
hwscsiAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiAvailability.setStatus("current")


class _HwscsiCaption_Type(WtcsDisplayString):
    """Custom type hwscsiCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwscsiCaption_Type.__name__ = "WtcsDisplayString"
_HwscsiCaption_Object = MibTableColumn
hwscsiCaption = _HwscsiCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 3),
    _HwscsiCaption_Type()
)
hwscsiCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiCaption.setStatus("current")


class _HwscsiConfigManagerErrorCode_Type(Integer32):
    """Custom type hwscsiConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwscsiConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwscsiConfigManagerErrorCode_Object = MibTableColumn
hwscsiConfigManagerErrorCode = _HwscsiConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 4),
    _HwscsiConfigManagerErrorCode_Type()
)
hwscsiConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiConfigManagerErrorCode.setStatus("current")
_HwscsiConfigManagerUserConfig_Type = TruthValue
_HwscsiConfigManagerUserConfig_Object = MibTableColumn
hwscsiConfigManagerUserConfig = _HwscsiConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 5),
    _HwscsiConfigManagerUserConfig_Type()
)
hwscsiConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiConfigManagerUserConfig.setStatus("current")
_HwscsiControllerTimeouts_Type = Gauge32
_HwscsiControllerTimeouts_Object = MibTableColumn
hwscsiControllerTimeouts = _HwscsiControllerTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 6),
    _HwscsiControllerTimeouts_Type()
)
hwscsiControllerTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiControllerTimeouts.setStatus("current")
_HwscsiCreationClassName_Type = WtcsDisplayString
_HwscsiCreationClassName_Object = MibTableColumn
hwscsiCreationClassName = _HwscsiCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 7),
    _HwscsiCreationClassName_Type()
)
hwscsiCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiCreationClassName.setStatus("current")
_HwscsiDescription_Type = WtcsDisplayString
_HwscsiDescription_Object = MibTableColumn
hwscsiDescription = _HwscsiDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 8),
    _HwscsiDescription_Type()
)
hwscsiDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiDescription.setStatus("current")
_HwscsiDeviceID_Type = WtcsDisplayString
_HwscsiDeviceID_Object = MibTableColumn
hwscsiDeviceID = _HwscsiDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 9),
    _HwscsiDeviceID_Type()
)
hwscsiDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiDeviceID.setStatus("current")
_HwscsiDeviceMap_Type = WtcsDisplayString
_HwscsiDeviceMap_Object = MibTableColumn
hwscsiDeviceMap = _HwscsiDeviceMap_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 10),
    _HwscsiDeviceMap_Type()
)
hwscsiDeviceMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiDeviceMap.setStatus("current")
_HwscsiDriverName_Type = WtcsDisplayString
_HwscsiDriverName_Object = MibTableColumn
hwscsiDriverName = _HwscsiDriverName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 11),
    _HwscsiDriverName_Type()
)
hwscsiDriverName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiDriverName.setStatus("current")
_HwscsiErrorCleared_Type = TruthValue
_HwscsiErrorCleared_Object = MibTableColumn
hwscsiErrorCleared = _HwscsiErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 12),
    _HwscsiErrorCleared_Type()
)
hwscsiErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiErrorCleared.setStatus("current")
_HwscsiErrorDescription_Type = WtcsDisplayString
_HwscsiErrorDescription_Object = MibTableColumn
hwscsiErrorDescription = _HwscsiErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 13),
    _HwscsiErrorDescription_Type()
)
hwscsiErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiErrorDescription.setStatus("current")
_HwscsiHardwareVersion_Type = WtcsDisplayString
_HwscsiHardwareVersion_Object = MibTableColumn
hwscsiHardwareVersion = _HwscsiHardwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 14),
    _HwscsiHardwareVersion_Type()
)
hwscsiHardwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiHardwareVersion.setStatus("current")
_HwscsiRegistryIndex_Type = Gauge32
_HwscsiRegistryIndex_Object = MibTableColumn
hwscsiRegistryIndex = _HwscsiRegistryIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 15),
    _HwscsiRegistryIndex_Type()
)
hwscsiRegistryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiRegistryIndex.setStatus("current")
_HwscsiInstallDate_Type = DateAndTime
_HwscsiInstallDate_Object = MibTableColumn
hwscsiInstallDate = _HwscsiInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 16),
    _HwscsiInstallDate_Type()
)
hwscsiInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiInstallDate.setStatus("current")
_HwscsiLastErrorCode_Type = Gauge32
_HwscsiLastErrorCode_Object = MibTableColumn
hwscsiLastErrorCode = _HwscsiLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 17),
    _HwscsiLastErrorCode_Type()
)
hwscsiLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiLastErrorCode.setStatus("current")
_HwscsiManufacturer_Type = WtcsDisplayString
_HwscsiManufacturer_Object = MibTableColumn
hwscsiManufacturer = _HwscsiManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 18),
    _HwscsiManufacturer_Type()
)
hwscsiManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiManufacturer.setStatus("current")
_HwscsiMaxDataWidth_Type = Gauge32
_HwscsiMaxDataWidth_Object = MibTableColumn
hwscsiMaxDataWidth = _HwscsiMaxDataWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 19),
    _HwscsiMaxDataWidth_Type()
)
hwscsiMaxDataWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiMaxDataWidth.setStatus("current")
_HwscsiMaxNumberControlled_Type = Gauge32
_HwscsiMaxNumberControlled_Object = MibTableColumn
hwscsiMaxNumberControlled = _HwscsiMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 20),
    _HwscsiMaxNumberControlled_Type()
)
hwscsiMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiMaxNumberControlled.setStatus("current")
_HwscsiMaxTransferRate_Type = Gauge32
_HwscsiMaxTransferRate_Object = MibTableColumn
hwscsiMaxTransferRate = _HwscsiMaxTransferRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 21),
    _HwscsiMaxTransferRate_Type()
)
hwscsiMaxTransferRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiMaxTransferRate.setStatus("current")
_HwscsiName_Type = WtcsDisplayString
_HwscsiName_Object = MibTableColumn
hwscsiName = _HwscsiName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 22),
    _HwscsiName_Type()
)
hwscsiName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiName.setStatus("current")
_HwscsiPNPDeviceID_Type = WtcsDisplayString
_HwscsiPNPDeviceID_Object = MibTableColumn
hwscsiPNPDeviceID = _HwscsiPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 23),
    _HwscsiPNPDeviceID_Type()
)
hwscsiPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiPNPDeviceID.setStatus("current")
_HwscsiPowerManagementCapability_Type = WtcsDisplayString
_HwscsiPowerManagementCapability_Object = MibTableColumn
hwscsiPowerManagementCapability = _HwscsiPowerManagementCapability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 24),
    _HwscsiPowerManagementCapability_Type()
)
hwscsiPowerManagementCapability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiPowerManagementCapability.setStatus("current")
_HwscsiPowerManagementSupported_Type = TruthValue
_HwscsiPowerManagementSupported_Object = MibTableColumn
hwscsiPowerManagementSupported = _HwscsiPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 25),
    _HwscsiPowerManagementSupported_Type()
)
hwscsiPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiPowerManagementSupported.setStatus("current")


class _HwscsiProtectionManagement_Type(Integer32):
    """Custom type hwscsiProtectionManagement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("protected", 4),
          ("protectedThroughSCC", 5),
          ("protectedThroughSCC2", 6),
          ("unknown", 2),
          ("unprotected", 3))
    )


_HwscsiProtectionManagement_Type.__name__ = "Integer32"
_HwscsiProtectionManagement_Object = MibTableColumn
hwscsiProtectionManagement = _HwscsiProtectionManagement_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 26),
    _HwscsiProtectionManagement_Type()
)
hwscsiProtectionManagement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiProtectionManagement.setStatus("current")


class _HwscsiProtocolSupported_Type(Integer32):
    """Custom type hwscsiProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46)
        )
    )
    namedValues = NamedValues(
        *(("agp", 42),
          ("ansiX3T95FDDI", 33),
          ("ataATAPI", 5),
          ("cmd", 37),
          ("diagnostic", 18),
          ("dssi", 39),
          ("eisa", 2),
          ("enhancedATAIDE", 41),
          ("escon", 17),
          ("esdi", 35),
          ("fastInfrared", 44),
          ("flexibleDiskette", 6),
          ("hippi", 21),
          ("i2C", 19),
          ("ide", 36),
          ("ieee488", 25),
          ("ieee8023100BASEVG", 31),
          ("ieee802310BASE2", 28),
          ("ieee802310BASE5", 27),
          ("ieee802310BROAD36", 30),
          ("ieee80231BASE5", 29),
          ("ieee8025TokenRing", 32),
          ("ipi", 24),
          ("irBus", 46),
          ("isa", 3),
          ("mca", 34),
          ("multiBus", 22),
          ("n1496", 7),
          ("other", 0),
          ("parallelProtocol", 16),
          ("pci", 4),
          ("pcmcia", 14),
          ("power", 20),
          ("qic2", 40),
          ("rs232", 26),
          ("scsiFibreChannelProtocol", 9),
          ("scsiParallelInterface", 8),
          ("scsiSerialBusProtocol", 10),
          ("scsiSerialBusProtocol1394", 11),
          ("scsiSerialStorageArchitecture", 12),
          ("serialInfrared", 45),
          ("st506", 38),
          ("twowayInfrared", 43),
          ("universalSerialBus", 15),
          ("unknown", 1),
          ("vesa", 13),
          ("vme", 23))
    )


_HwscsiProtocolSupported_Type.__name__ = "Integer32"
_HwscsiProtocolSupported_Object = MibTableColumn
hwscsiProtocolSupported = _HwscsiProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 27),
    _HwscsiProtocolSupported_Type()
)
hwscsiProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiProtocolSupported.setStatus("current")


class _HwscsiStatus_Type(Integer32):
    """Custom type hwscsiStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwscsiStatus_Type.__name__ = "Integer32"
_HwscsiStatus_Object = MibTableColumn
hwscsiStatus = _HwscsiStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 28),
    _HwscsiStatus_Type()
)
hwscsiStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiStatus.setStatus("current")


class _HwscsiStatusInfo_Type(Integer32):
    """Custom type hwscsiStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwscsiStatusInfo_Type.__name__ = "Integer32"
_HwscsiStatusInfo_Object = MibTableColumn
hwscsiStatusInfo = _HwscsiStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 29),
    _HwscsiStatusInfo_Type()
)
hwscsiStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiStatusInfo.setStatus("current")
_HwscsiSystemCreationClassName_Type = WtcsDisplayString
_HwscsiSystemCreationClassName_Object = MibTableColumn
hwscsiSystemCreationClassName = _HwscsiSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 30),
    _HwscsiSystemCreationClassName_Type()
)
hwscsiSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiSystemCreationClassName.setStatus("current")
_HwscsiSystemName_Type = WtcsDisplayString
_HwscsiSystemName_Object = MibTableColumn
hwscsiSystemName = _HwscsiSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 31),
    _HwscsiSystemName_Type()
)
hwscsiSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiSystemName.setStatus("current")
_HwscsiTimeOfLastReset_Type = DateAndTime
_HwscsiTimeOfLastReset_Object = MibTableColumn
hwscsiTimeOfLastReset = _HwscsiTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 25, 1, 32),
    _HwscsiTimeOfLastReset_Type()
)
hwscsiTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwscsiTimeOfLastReset.setStatus("current")
_Win32SerialPortTable_Object = MibTable
win32SerialPortTable = _Win32SerialPortTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26)
)
if mibBuilder.loadTexts:
    win32SerialPortTable.setStatus("current")
_Win32SerialPortEntry_Object = MibTableRow
win32SerialPortEntry = _Win32SerialPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1)
)
win32SerialPortEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwspIndex"),
)
if mibBuilder.loadTexts:
    win32SerialPortEntry.setStatus("current")


class _HwspIndex_Type(Integer32):
    """Custom type hwspIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwspIndex_Type.__name__ = "Integer32"
_HwspIndex_Object = MibTableColumn
hwspIndex = _HwspIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 1),
    _HwspIndex_Type()
)
hwspIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspIndex.setStatus("current")


class _HwspAvailability_Type(Integer32):
    """Custom type hwspAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwspAvailability_Type.__name__ = "Integer32"
_HwspAvailability_Object = MibTableColumn
hwspAvailability = _HwspAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 2),
    _HwspAvailability_Type()
)
hwspAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspAvailability.setStatus("current")
_HwspBinary_Type = TruthValue
_HwspBinary_Object = MibTableColumn
hwspBinary = _HwspBinary_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 3),
    _HwspBinary_Type()
)
hwspBinary.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspBinary.setStatus("current")
_HwspCapabilities_Type = WtcsDisplayString
_HwspCapabilities_Object = MibTableColumn
hwspCapabilities = _HwspCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 4),
    _HwspCapabilities_Type()
)
hwspCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspCapabilities.setStatus("current")
_HwspCapabilityDescriptions_Type = WtcsDisplayString
_HwspCapabilityDescriptions_Object = MibTableColumn
hwspCapabilityDescriptions = _HwspCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 5),
    _HwspCapabilityDescriptions_Type()
)
hwspCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspCapabilityDescriptions.setStatus("current")


class _HwspCaption_Type(WtcsDisplayString):
    """Custom type hwspCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwspCaption_Type.__name__ = "WtcsDisplayString"
_HwspCaption_Object = MibTableColumn
hwspCaption = _HwspCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 6),
    _HwspCaption_Type()
)
hwspCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspCaption.setStatus("current")


class _HwspConfigManagerErrorCode_Type(Integer32):
    """Custom type hwspConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwspConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwspConfigManagerErrorCode_Object = MibTableColumn
hwspConfigManagerErrorCode = _HwspConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 7),
    _HwspConfigManagerErrorCode_Type()
)
hwspConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspConfigManagerErrorCode.setStatus("current")
_HwspConfigManagerUserConfig_Type = TruthValue
_HwspConfigManagerUserConfig_Object = MibTableColumn
hwspConfigManagerUserConfig = _HwspConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 8),
    _HwspConfigManagerUserConfig_Type()
)
hwspConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspConfigManagerUserConfig.setStatus("current")
_HwspCreationClassName_Type = WtcsDisplayString
_HwspCreationClassName_Object = MibTableColumn
hwspCreationClassName = _HwspCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 9),
    _HwspCreationClassName_Type()
)
hwspCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspCreationClassName.setStatus("current")
_HwspDescription_Type = WtcsDisplayString
_HwspDescription_Object = MibTableColumn
hwspDescription = _HwspDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 10),
    _HwspDescription_Type()
)
hwspDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspDescription.setStatus("current")
_HwspDeviceID_Type = WtcsDisplayString
_HwspDeviceID_Object = MibTableColumn
hwspDeviceID = _HwspDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 11),
    _HwspDeviceID_Type()
)
hwspDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspDeviceID.setStatus("current")
_HwspErrorCleared_Type = TruthValue
_HwspErrorCleared_Object = MibTableColumn
hwspErrorCleared = _HwspErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 12),
    _HwspErrorCleared_Type()
)
hwspErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspErrorCleared.setStatus("current")
_HwspErrorDescription_Type = WtcsDisplayString
_HwspErrorDescription_Object = MibTableColumn
hwspErrorDescription = _HwspErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 13),
    _HwspErrorDescription_Type()
)
hwspErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspErrorDescription.setStatus("current")
_HwspInstallDate_Type = DateAndTime
_HwspInstallDate_Object = MibTableColumn
hwspInstallDate = _HwspInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 14),
    _HwspInstallDate_Type()
)
hwspInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspInstallDate.setStatus("current")
_HwspLastErrorCode_Type = Gauge32
_HwspLastErrorCode_Object = MibTableColumn
hwspLastErrorCode = _HwspLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 15),
    _HwspLastErrorCode_Type()
)
hwspLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspLastErrorCode.setStatus("current")
_HwspMaxBaudRate_Type = Gauge32
_HwspMaxBaudRate_Object = MibTableColumn
hwspMaxBaudRate = _HwspMaxBaudRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 16),
    _HwspMaxBaudRate_Type()
)
hwspMaxBaudRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspMaxBaudRate.setStatus("current")
if mibBuilder.loadTexts:
    hwspMaxBaudRate.setUnits("Bits per second")
_HwspMaximumInputBufferSize_Type = Gauge32
_HwspMaximumInputBufferSize_Object = MibTableColumn
hwspMaximumInputBufferSize = _HwspMaximumInputBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 17),
    _HwspMaximumInputBufferSize_Type()
)
hwspMaximumInputBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspMaximumInputBufferSize.setStatus("current")
if mibBuilder.loadTexts:
    hwspMaximumInputBufferSize.setUnits("Bytes")
_HwspMaximumOutputBufferSize_Type = Gauge32
_HwspMaximumOutputBufferSize_Object = MibTableColumn
hwspMaximumOutputBufferSize = _HwspMaximumOutputBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 18),
    _HwspMaximumOutputBufferSize_Type()
)
hwspMaximumOutputBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspMaximumOutputBufferSize.setStatus("current")
if mibBuilder.loadTexts:
    hwspMaximumOutputBufferSize.setUnits("Bytes")
_HwspMaxNumberControlled_Type = Gauge32
_HwspMaxNumberControlled_Object = MibTableColumn
hwspMaxNumberControlled = _HwspMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 19),
    _HwspMaxNumberControlled_Type()
)
hwspMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspMaxNumberControlled.setStatus("current")
_HwspName_Type = WtcsDisplayString
_HwspName_Object = MibTableColumn
hwspName = _HwspName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 20),
    _HwspName_Type()
)
hwspName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspName.setStatus("current")
_HwspOSAutoDiscovered_Type = TruthValue
_HwspOSAutoDiscovered_Object = MibTableColumn
hwspOSAutoDiscovered = _HwspOSAutoDiscovered_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 21),
    _HwspOSAutoDiscovered_Type()
)
hwspOSAutoDiscovered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspOSAutoDiscovered.setStatus("current")
_HwspPNPDeviceID_Type = WtcsDisplayString
_HwspPNPDeviceID_Object = MibTableColumn
hwspPNPDeviceID = _HwspPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 22),
    _HwspPNPDeviceID_Type()
)
hwspPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspPNPDeviceID.setStatus("current")
_HwspPowerManagementCapabilities_Type = WtcsDisplayString
_HwspPowerManagementCapabilities_Object = MibTableColumn
hwspPowerManagementCapabilities = _HwspPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 23),
    _HwspPowerManagementCapabilities_Type()
)
hwspPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspPowerManagementCapabilities.setStatus("current")
_HwspPowerManagementSupported_Type = TruthValue
_HwspPowerManagementSupported_Object = MibTableColumn
hwspPowerManagementSupported = _HwspPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 24),
    _HwspPowerManagementSupported_Type()
)
hwspPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspPowerManagementSupported.setStatus("current")


class _HwspProtocolSupported_Type(Integer32):
    """Custom type hwspProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46)
        )
    )
    namedValues = NamedValues(
        *(("agp", 42),
          ("ansiX3T95FDDI", 33),
          ("ataATAPI", 5),
          ("cmd", 37),
          ("diagnostic", 18),
          ("dssi", 39),
          ("eisa", 2),
          ("enhancedATAIDE", 41),
          ("escon", 17),
          ("esdi", 35),
          ("fastInfrared", 44),
          ("flexibleDiskette", 6),
          ("hippi", 21),
          ("i2C", 19),
          ("ide", 36),
          ("ieee488", 25),
          ("ieee8023100BASEVG", 31),
          ("ieee802310BASE2", 28),
          ("ieee802310BASE5", 27),
          ("ieee802310BROAD36", 30),
          ("ieee80231BASE5", 29),
          ("ieee8025TokenRing", 32),
          ("ipi", 24),
          ("irBus", 46),
          ("isa", 3),
          ("mca", 34),
          ("multiBus", 22),
          ("n1496", 7),
          ("other", 0),
          ("parallelProtocol", 16),
          ("pci", 4),
          ("pcmcia", 14),
          ("power", 20),
          ("qic2", 40),
          ("rs232", 26),
          ("scsiFibreChannelProtocol", 9),
          ("scsiParallelInterface", 8),
          ("scsiSerialBusProtocol", 10),
          ("scsiSerialBusProtocol1394", 11),
          ("scsiSerialStorageArchitecture", 12),
          ("serialInfrared", 45),
          ("st506", 38),
          ("twowayInfrared", 43),
          ("universalSerialBus", 15),
          ("unknown", 1),
          ("vesa", 13),
          ("vme", 23))
    )


_HwspProtocolSupported_Type.__name__ = "Integer32"
_HwspProtocolSupported_Object = MibTableColumn
hwspProtocolSupported = _HwspProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 25),
    _HwspProtocolSupported_Type()
)
hwspProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspProtocolSupported.setStatus("current")
_HwspProviderType_Type = WtcsDisplayString
_HwspProviderType_Object = MibTableColumn
hwspProviderType = _HwspProviderType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 26),
    _HwspProviderType_Type()
)
hwspProviderType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspProviderType.setStatus("current")
_HwspSettableBaudRate_Type = TruthValue
_HwspSettableBaudRate_Object = MibTableColumn
hwspSettableBaudRate = _HwspSettableBaudRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 27),
    _HwspSettableBaudRate_Type()
)
hwspSettableBaudRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableBaudRate.setStatus("current")
_HwspSettableDataBits_Type = TruthValue
_HwspSettableDataBits_Object = MibTableColumn
hwspSettableDataBits = _HwspSettableDataBits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 28),
    _HwspSettableDataBits_Type()
)
hwspSettableDataBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableDataBits.setStatus("current")
_HwspSettableFlowControl_Type = TruthValue
_HwspSettableFlowControl_Object = MibTableColumn
hwspSettableFlowControl = _HwspSettableFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 29),
    _HwspSettableFlowControl_Type()
)
hwspSettableFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableFlowControl.setStatus("current")
_HwspSettableParity_Type = TruthValue
_HwspSettableParity_Object = MibTableColumn
hwspSettableParity = _HwspSettableParity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 30),
    _HwspSettableParity_Type()
)
hwspSettableParity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableParity.setStatus("current")
_HwspSettableParityCheck_Type = TruthValue
_HwspSettableParityCheck_Object = MibTableColumn
hwspSettableParityCheck = _HwspSettableParityCheck_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 31),
    _HwspSettableParityCheck_Type()
)
hwspSettableParityCheck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableParityCheck.setStatus("current")
_HwspSettableRLSD_Type = TruthValue
_HwspSettableRLSD_Object = MibTableColumn
hwspSettableRLSD = _HwspSettableRLSD_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 32),
    _HwspSettableRLSD_Type()
)
hwspSettableRLSD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableRLSD.setStatus("current")
_HwspSettableStopBits_Type = TruthValue
_HwspSettableStopBits_Object = MibTableColumn
hwspSettableStopBits = _HwspSettableStopBits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 33),
    _HwspSettableStopBits_Type()
)
hwspSettableStopBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSettableStopBits.setStatus("current")


class _HwspStatus_Type(Integer32):
    """Custom type hwspStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwspStatus_Type.__name__ = "Integer32"
_HwspStatus_Object = MibTableColumn
hwspStatus = _HwspStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 34),
    _HwspStatus_Type()
)
hwspStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspStatus.setStatus("current")


class _HwspStatusInfo_Type(Integer32):
    """Custom type hwspStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwspStatusInfo_Type.__name__ = "Integer32"
_HwspStatusInfo_Object = MibTableColumn
hwspStatusInfo = _HwspStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 35),
    _HwspStatusInfo_Type()
)
hwspStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspStatusInfo.setStatus("current")
_HwspSupports16BitMode_Type = TruthValue
_HwspSupports16BitMode_Object = MibTableColumn
hwspSupports16BitMode = _HwspSupports16BitMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 36),
    _HwspSupports16BitMode_Type()
)
hwspSupports16BitMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupports16BitMode.setStatus("current")
_HwspSupportsDTRDSR_Type = TruthValue
_HwspSupportsDTRDSR_Object = MibTableColumn
hwspSupportsDTRDSR = _HwspSupportsDTRDSR_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 37),
    _HwspSupportsDTRDSR_Type()
)
hwspSupportsDTRDSR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsDTRDSR.setStatus("current")
_HwspSupportsElapsedTimeouts_Type = TruthValue
_HwspSupportsElapsedTimeouts_Object = MibTableColumn
hwspSupportsElapsedTimeouts = _HwspSupportsElapsedTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 38),
    _HwspSupportsElapsedTimeouts_Type()
)
hwspSupportsElapsedTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsElapsedTimeouts.setStatus("current")
_HwspSupportsIntTimeouts_Type = TruthValue
_HwspSupportsIntTimeouts_Object = MibTableColumn
hwspSupportsIntTimeouts = _HwspSupportsIntTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 39),
    _HwspSupportsIntTimeouts_Type()
)
hwspSupportsIntTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsIntTimeouts.setStatus("current")
_HwspSupportsParityCheck_Type = TruthValue
_HwspSupportsParityCheck_Object = MibTableColumn
hwspSupportsParityCheck = _HwspSupportsParityCheck_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 40),
    _HwspSupportsParityCheck_Type()
)
hwspSupportsParityCheck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsParityCheck.setStatus("current")
_HwspSupportsRLSD_Type = TruthValue
_HwspSupportsRLSD_Object = MibTableColumn
hwspSupportsRLSD = _HwspSupportsRLSD_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 41),
    _HwspSupportsRLSD_Type()
)
hwspSupportsRLSD.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsRLSD.setStatus("current")
_HwspSupportsRTSCTS_Type = TruthValue
_HwspSupportsRTSCTS_Object = MibTableColumn
hwspSupportsRTSCTS = _HwspSupportsRTSCTS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 42),
    _HwspSupportsRTSCTS_Type()
)
hwspSupportsRTSCTS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsRTSCTS.setStatus("current")
_HwspSupportsSpecialCharacters_Type = TruthValue
_HwspSupportsSpecialCharacters_Object = MibTableColumn
hwspSupportsSpecialCharacters = _HwspSupportsSpecialCharacters_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 43),
    _HwspSupportsSpecialCharacters_Type()
)
hwspSupportsSpecialCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsSpecialCharacters.setStatus("current")
_HwspSupportsXOnXOff_Type = TruthValue
_HwspSupportsXOnXOff_Object = MibTableColumn
hwspSupportsXOnXOff = _HwspSupportsXOnXOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 44),
    _HwspSupportsXOnXOff_Type()
)
hwspSupportsXOnXOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsXOnXOff.setStatus("current")
_HwspSupportsXOnXOffSet_Type = TruthValue
_HwspSupportsXOnXOffSet_Object = MibTableColumn
hwspSupportsXOnXOffSet = _HwspSupportsXOnXOffSet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 45),
    _HwspSupportsXOnXOffSet_Type()
)
hwspSupportsXOnXOffSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSupportsXOnXOffSet.setStatus("current")
_HwspSystemCreationClassName_Type = WtcsDisplayString
_HwspSystemCreationClassName_Object = MibTableColumn
hwspSystemCreationClassName = _HwspSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 46),
    _HwspSystemCreationClassName_Type()
)
hwspSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSystemCreationClassName.setStatus("current")
_HwspSystemName_Type = WtcsDisplayString
_HwspSystemName_Object = MibTableColumn
hwspSystemName = _HwspSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 47),
    _HwspSystemName_Type()
)
hwspSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspSystemName.setStatus("current")
_HwspTimeOfLastReset_Type = DateAndTime
_HwspTimeOfLastReset_Object = MibTableColumn
hwspTimeOfLastReset = _HwspTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 26, 1, 48),
    _HwspTimeOfLastReset_Type()
)
hwspTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspTimeOfLastReset.setStatus("current")
_Win32SerialPortConfigTable_Object = MibTable
win32SerialPortConfigTable = _Win32SerialPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27)
)
if mibBuilder.loadTexts:
    win32SerialPortConfigTable.setStatus("current")
_Win32SerialPortConfigEntry_Object = MibTableRow
win32SerialPortConfigEntry = _Win32SerialPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1)
)
win32SerialPortConfigEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwspcIndex"),
)
if mibBuilder.loadTexts:
    win32SerialPortConfigEntry.setStatus("current")


class _HwspcIndex_Type(Integer32):
    """Custom type hwspcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwspcIndex_Type.__name__ = "Integer32"
_HwspcIndex_Object = MibTableColumn
hwspcIndex = _HwspcIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 1),
    _HwspcIndex_Type()
)
hwspcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcIndex.setStatus("current")
_HwspcAbortReadWriteOnError_Type = TruthValue
_HwspcAbortReadWriteOnError_Object = MibTableColumn
hwspcAbortReadWriteOnError = _HwspcAbortReadWriteOnError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 2),
    _HwspcAbortReadWriteOnError_Type()
)
hwspcAbortReadWriteOnError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcAbortReadWriteOnError.setStatus("current")
_HwspcBaudRate_Type = Gauge32
_HwspcBaudRate_Object = MibTableColumn
hwspcBaudRate = _HwspcBaudRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 3),
    _HwspcBaudRate_Type()
)
hwspcBaudRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcBaudRate.setStatus("current")
_HwspcBinaryModeEnabled_Type = TruthValue
_HwspcBinaryModeEnabled_Object = MibTableColumn
hwspcBinaryModeEnabled = _HwspcBinaryModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 4),
    _HwspcBinaryModeEnabled_Type()
)
hwspcBinaryModeEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcBinaryModeEnabled.setStatus("current")
_HwspcBitsPerByte_Type = Gauge32
_HwspcBitsPerByte_Object = MibTableColumn
hwspcBitsPerByte = _HwspcBitsPerByte_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 5),
    _HwspcBitsPerByte_Type()
)
hwspcBitsPerByte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcBitsPerByte.setStatus("current")


class _HwspcCaption_Type(WtcsDisplayString):
    """Custom type hwspcCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwspcCaption_Type.__name__ = "WtcsDisplayString"
_HwspcCaption_Object = MibTableColumn
hwspcCaption = _HwspcCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 6),
    _HwspcCaption_Type()
)
hwspcCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcCaption.setStatus("current")
_HwspcContinueXMitOnXOff_Type = TruthValue
_HwspcContinueXMitOnXOff_Object = MibTableColumn
hwspcContinueXMitOnXOff = _HwspcContinueXMitOnXOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 7),
    _HwspcContinueXMitOnXOff_Type()
)
hwspcContinueXMitOnXOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcContinueXMitOnXOff.setStatus("current")
_HwspcCTSOutflowControl_Type = TruthValue
_HwspcCTSOutflowControl_Object = MibTableColumn
hwspcCTSOutflowControl = _HwspcCTSOutflowControl_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 8),
    _HwspcCTSOutflowControl_Type()
)
hwspcCTSOutflowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcCTSOutflowControl.setStatus("current")
_HwspcDescription_Type = WtcsDisplayString
_HwspcDescription_Object = MibTableColumn
hwspcDescription = _HwspcDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 9),
    _HwspcDescription_Type()
)
hwspcDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcDescription.setStatus("current")
_HwspcDiscardNULLBytes_Type = TruthValue
_HwspcDiscardNULLBytes_Object = MibTableColumn
hwspcDiscardNULLBytes = _HwspcDiscardNULLBytes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 10),
    _HwspcDiscardNULLBytes_Type()
)
hwspcDiscardNULLBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcDiscardNULLBytes.setStatus("current")
_HwspcDSROutflowControl_Type = TruthValue
_HwspcDSROutflowControl_Object = MibTableColumn
hwspcDSROutflowControl = _HwspcDSROutflowControl_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 11),
    _HwspcDSROutflowControl_Type()
)
hwspcDSROutflowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcDSROutflowControl.setStatus("current")
_HwspcDSRSensitivity_Type = TruthValue
_HwspcDSRSensitivity_Object = MibTableColumn
hwspcDSRSensitivity = _HwspcDSRSensitivity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 12),
    _HwspcDSRSensitivity_Type()
)
hwspcDSRSensitivity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcDSRSensitivity.setStatus("current")


class _HwspcDTRFlowControlType_Type(Integer32):
    """Custom type hwspcDTRFlowControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1),
          ("handshake", 3))
    )


_HwspcDTRFlowControlType_Type.__name__ = "Integer32"
_HwspcDTRFlowControlType_Object = MibTableColumn
hwspcDTRFlowControlType = _HwspcDTRFlowControlType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 13),
    _HwspcDTRFlowControlType_Type()
)
hwspcDTRFlowControlType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcDTRFlowControlType.setStatus("current")
_HwspcEOFCharacter_Type = Gauge32
_HwspcEOFCharacter_Object = MibTableColumn
hwspcEOFCharacter = _HwspcEOFCharacter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 14),
    _HwspcEOFCharacter_Type()
)
hwspcEOFCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcEOFCharacter.setStatus("current")
_HwspcErrorReplaceCharacter_Type = Gauge32
_HwspcErrorReplaceCharacter_Object = MibTableColumn
hwspcErrorReplaceCharacter = _HwspcErrorReplaceCharacter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 15),
    _HwspcErrorReplaceCharacter_Type()
)
hwspcErrorReplaceCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcErrorReplaceCharacter.setStatus("current")
_HwspcErrorReplacementEnabled_Type = TruthValue
_HwspcErrorReplacementEnabled_Object = MibTableColumn
hwspcErrorReplacementEnabled = _HwspcErrorReplacementEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 16),
    _HwspcErrorReplacementEnabled_Type()
)
hwspcErrorReplacementEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcErrorReplacementEnabled.setStatus("current")
_HwspcEventCharacter_Type = Gauge32
_HwspcEventCharacter_Object = MibTableColumn
hwspcEventCharacter = _HwspcEventCharacter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 17),
    _HwspcEventCharacter_Type()
)
hwspcEventCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcEventCharacter.setStatus("current")
_HwspcIsBusy_Type = TruthValue
_HwspcIsBusy_Object = MibTableColumn
hwspcIsBusy = _HwspcIsBusy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 18),
    _HwspcIsBusy_Type()
)
hwspcIsBusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcIsBusy.setStatus("current")


class _HwspcName_Type(WtcsDisplayString):
    """Custom type hwspcName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwspcName_Type.__name__ = "WtcsDisplayString"
_HwspcName_Object = MibTableColumn
hwspcName = _HwspcName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 19),
    _HwspcName_Type()
)
hwspcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcName.setStatus("current")
_HwspcParity_Type = WtcsDisplayString
_HwspcParity_Object = MibTableColumn
hwspcParity = _HwspcParity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 20),
    _HwspcParity_Type()
)
hwspcParity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcParity.setStatus("current")
_HwspcParityCheckEnabled_Type = TruthValue
_HwspcParityCheckEnabled_Object = MibTableColumn
hwspcParityCheckEnabled = _HwspcParityCheckEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 21),
    _HwspcParityCheckEnabled_Type()
)
hwspcParityCheckEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcParityCheckEnabled.setStatus("current")
_HwspcRTSFlowControlType_Type = WtcsDisplayString
_HwspcRTSFlowControlType_Object = MibTableColumn
hwspcRTSFlowControlType = _HwspcRTSFlowControlType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 22),
    _HwspcRTSFlowControlType_Type()
)
hwspcRTSFlowControlType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcRTSFlowControlType.setStatus("current")


class _HwspcSettingID_Type(WtcsDisplayString):
    """Custom type hwspcSettingID based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwspcSettingID_Type.__name__ = "WtcsDisplayString"
_HwspcSettingID_Object = MibTableColumn
hwspcSettingID = _HwspcSettingID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 23),
    _HwspcSettingID_Type()
)
hwspcSettingID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcSettingID.setStatus("current")
_HwspcStopBits_Type = WtcsDisplayString
_HwspcStopBits_Object = MibTableColumn
hwspcStopBits = _HwspcStopBits_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 24),
    _HwspcStopBits_Type()
)
hwspcStopBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcStopBits.setStatus("current")
_HwspcXOffCharacter_Type = Gauge32
_HwspcXOffCharacter_Object = MibTableColumn
hwspcXOffCharacter = _HwspcXOffCharacter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 25),
    _HwspcXOffCharacter_Type()
)
hwspcXOffCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcXOffCharacter.setStatus("current")
_HwspcXOffXMitThreshold_Type = Gauge32
_HwspcXOffXMitThreshold_Object = MibTableColumn
hwspcXOffXMitThreshold = _HwspcXOffXMitThreshold_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 26),
    _HwspcXOffXMitThreshold_Type()
)
hwspcXOffXMitThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcXOffXMitThreshold.setStatus("current")
_HwspcXOnCharacter_Type = Gauge32
_HwspcXOnCharacter_Object = MibTableColumn
hwspcXOnCharacter = _HwspcXOnCharacter_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 27),
    _HwspcXOnCharacter_Type()
)
hwspcXOnCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcXOnCharacter.setStatus("current")
_HwspcXOnXMitThreshold_Type = Gauge32
_HwspcXOnXMitThreshold_Object = MibTableColumn
hwspcXOnXMitThreshold = _HwspcXOnXMitThreshold_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 28),
    _HwspcXOnXMitThreshold_Type()
)
hwspcXOnXMitThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcXOnXMitThreshold.setStatus("current")


class _HwspcXOnXOffInFlowControl_Type(Integer32):
    """Custom type hwspcXOnXOffInFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_HwspcXOnXOffInFlowControl_Type.__name__ = "Integer32"
_HwspcXOnXOffInFlowControl_Object = MibTableColumn
hwspcXOnXOffInFlowControl = _HwspcXOnXOffInFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 29),
    _HwspcXOnXOffInFlowControl_Type()
)
hwspcXOnXOffInFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcXOnXOffInFlowControl.setStatus("current")
_HwspcXOnXOffOutFlowControl_Type = Gauge32
_HwspcXOnXOffOutFlowControl_Object = MibTableColumn
hwspcXOnXOffOutFlowControl = _HwspcXOnXOffOutFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 27, 1, 30),
    _HwspcXOnXOffOutFlowControl_Type()
)
hwspcXOnXOffOutFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwspcXOnXOffOutFlowControl.setStatus("current")
_Win32SMBIOSMemoryTable_Object = MibTable
win32SMBIOSMemoryTable = _Win32SMBIOSMemoryTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28)
)
if mibBuilder.loadTexts:
    win32SMBIOSMemoryTable.setStatus("current")
_Win32SMBIOSMemoryEntry_Object = MibTableRow
win32SMBIOSMemoryEntry = _Win32SMBIOSMemoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1)
)
win32SMBIOSMemoryEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwsbmIndex"),
)
if mibBuilder.loadTexts:
    win32SMBIOSMemoryEntry.setStatus("current")


class _HwsbmIndex_Type(Integer32):
    """Custom type hwsbmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwsbmIndex_Type.__name__ = "Integer32"
_HwsbmIndex_Object = MibTableColumn
hwsbmIndex = _HwsbmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 1),
    _HwsbmIndex_Type()
)
hwsbmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmIndex.setStatus("current")


class _HwsbmAccess_Type(Integer32):
    """Custom type hwsbmAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("readWriteSupported", 3),
          ("readable", 1),
          ("unknown", 0),
          ("writable", 2),
          ("writeOnce", 4))
    )


_HwsbmAccess_Type.__name__ = "Integer32"
_HwsbmAccess_Object = MibTableColumn
hwsbmAccess = _HwsbmAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 2),
    _HwsbmAccess_Type()
)
hwsbmAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmAccess.setStatus("current")
_HwsbmAdditionalErrorData_Type = WtcsDisplayString
_HwsbmAdditionalErrorData_Object = MibTableColumn
hwsbmAdditionalErrorData = _HwsbmAdditionalErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 3),
    _HwsbmAdditionalErrorData_Type()
)
hwsbmAdditionalErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmAdditionalErrorData.setStatus("current")


class _HwsbmAvailability_Type(Integer32):
    """Custom type hwsbmAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwsbmAvailability_Type.__name__ = "Integer32"
_HwsbmAvailability_Object = MibTableColumn
hwsbmAvailability = _HwsbmAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 4),
    _HwsbmAvailability_Type()
)
hwsbmAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmAvailability.setStatus("current")
_HwsbmBlockSize_Type = Gauge32
_HwsbmBlockSize_Object = MibTableColumn
hwsbmBlockSize = _HwsbmBlockSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 5),
    _HwsbmBlockSize_Type()
)
hwsbmBlockSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmBlockSize.setStatus("current")


class _HwsbmCaption_Type(WtcsDisplayString):
    """Custom type hwsbmCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwsbmCaption_Type.__name__ = "WtcsDisplayString"
_HwsbmCaption_Object = MibTableColumn
hwsbmCaption = _HwsbmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 6),
    _HwsbmCaption_Type()
)
hwsbmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmCaption.setStatus("current")


class _HwsbmConfigManagerErrorCode_Type(Integer32):
    """Custom type hwsbmConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwsbmConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwsbmConfigManagerErrorCode_Object = MibTableColumn
hwsbmConfigManagerErrorCode = _HwsbmConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 7),
    _HwsbmConfigManagerErrorCode_Type()
)
hwsbmConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmConfigManagerErrorCode.setStatus("current")
_HwsbmConfigManagerUserConfig_Type = TruthValue
_HwsbmConfigManagerUserConfig_Object = MibTableColumn
hwsbmConfigManagerUserConfig = _HwsbmConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 8),
    _HwsbmConfigManagerUserConfig_Type()
)
hwsbmConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmConfigManagerUserConfig.setStatus("current")
_HwsbmCorrectableError_Type = TruthValue
_HwsbmCorrectableError_Object = MibTableColumn
hwsbmCorrectableError = _HwsbmCorrectableError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 9),
    _HwsbmCorrectableError_Type()
)
hwsbmCorrectableError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmCorrectableError.setStatus("current")


class _HwsbmCreationClassName_Type(WtcsDisplayString):
    """Custom type hwsbmCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwsbmCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwsbmCreationClassName_Object = MibTableColumn
hwsbmCreationClassName = _HwsbmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 10),
    _HwsbmCreationClassName_Type()
)
hwsbmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmCreationClassName.setStatus("current")
_HwsbmDescription_Type = WtcsDisplayString
_HwsbmDescription_Object = MibTableColumn
hwsbmDescription = _HwsbmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 11),
    _HwsbmDescription_Type()
)
hwsbmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmDescription.setStatus("current")
_HwsbmDeviceID_Type = WtcsDisplayString
_HwsbmDeviceID_Object = MibTableColumn
hwsbmDeviceID = _HwsbmDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 12),
    _HwsbmDeviceID_Type()
)
hwsbmDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmDeviceID.setStatus("current")
_HwsbmEndingAddress_Type = Gauge32
_HwsbmEndingAddress_Object = MibTableColumn
hwsbmEndingAddress = _HwsbmEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 13),
    _HwsbmEndingAddress_Type()
)
hwsbmEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmEndingAddress.setStatus("current")


class _HwsbmErrorAccess_Type(Integer32):
    """Custom type hwsbmErrorAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("partialWrite", 5),
          ("read", 3),
          ("unknown", 2),
          ("write", 4))
    )


_HwsbmErrorAccess_Type.__name__ = "Integer32"
_HwsbmErrorAccess_Object = MibTableColumn
hwsbmErrorAccess = _HwsbmErrorAccess_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 14),
    _HwsbmErrorAccess_Type()
)
hwsbmErrorAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorAccess.setStatus("current")
_HwsbmErrorAddress_Type = Gauge32
_HwsbmErrorAddress_Object = MibTableColumn
hwsbmErrorAddress = _HwsbmErrorAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 15),
    _HwsbmErrorAddress_Type()
)
hwsbmErrorAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorAddress.setStatus("current")
_HwsbmErrorCleared_Type = TruthValue
_HwsbmErrorCleared_Object = MibTableColumn
hwsbmErrorCleared = _HwsbmErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 16),
    _HwsbmErrorCleared_Type()
)
hwsbmErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorCleared.setStatus("current")
_HwsbmErrorData_Type = WtcsDisplayString
_HwsbmErrorData_Object = MibTableColumn
hwsbmErrorData = _HwsbmErrorData_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 17),
    _HwsbmErrorData_Type()
)
hwsbmErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorData.setStatus("current")


class _HwsbmErrorDataOrder_Type(Integer32):
    """Custom type hwsbmErrorDataOrder based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("leastSignificantByteFirst", 1),
          ("mostSignificantByteFirst", 2),
          ("unknown", 0))
    )


_HwsbmErrorDataOrder_Type.__name__ = "Integer32"
_HwsbmErrorDataOrder_Object = MibTableColumn
hwsbmErrorDataOrder = _HwsbmErrorDataOrder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 18),
    _HwsbmErrorDataOrder_Type()
)
hwsbmErrorDataOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorDataOrder.setStatus("current")
_HwsbmErrorDescription_Type = WtcsDisplayString
_HwsbmErrorDescription_Object = MibTableColumn
hwsbmErrorDescription = _HwsbmErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 19),
    _HwsbmErrorDescription_Type()
)
hwsbmErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorDescription.setStatus("current")


class _HwsbmErrorInfo_Type(Integer32):
    """Custom type hwsbmErrorInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("badRead", 4),
          ("checksumError", 10),
          ("correctedError", 13),
          ("correctedSinglebitError", 12),
          ("crcError", 11),
          ("doubleBitError", 7),
          ("multiBitError", 8),
          ("nibbleError", 9),
          ("ok", 3),
          ("other", 1),
          ("parityError", 5),
          ("singleBitError", 6),
          ("uncorrectableError", 14),
          ("unknown", 2))
    )


_HwsbmErrorInfo_Type.__name__ = "Integer32"
_HwsbmErrorInfo_Object = MibTableColumn
hwsbmErrorInfo = _HwsbmErrorInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 20),
    _HwsbmErrorInfo_Type()
)
hwsbmErrorInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorInfo.setStatus("current")


class _HwsbmErrorMethodology_Type(Integer32):
    """Custom type hwsbmErrorMethodology based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("crc", 7),
          ("multiBitECC", 6),
          ("none", 3),
          ("other", 1),
          ("parity", 4),
          ("singleBitECC", 5),
          ("unknown", 2))
    )


_HwsbmErrorMethodology_Type.__name__ = "Integer32"
_HwsbmErrorMethodology_Object = MibTableColumn
hwsbmErrorMethodology = _HwsbmErrorMethodology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 21),
    _HwsbmErrorMethodology_Type()
)
hwsbmErrorMethodology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorMethodology.setStatus("current")
_HwsbmErrorResolution_Type = Gauge32
_HwsbmErrorResolution_Object = MibTableColumn
hwsbmErrorResolution = _HwsbmErrorResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 22),
    _HwsbmErrorResolution_Type()
)
hwsbmErrorResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorResolution.setStatus("current")
_HwsbmErrorTime_Type = DateAndTime
_HwsbmErrorTime_Object = MibTableColumn
hwsbmErrorTime = _HwsbmErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 23),
    _HwsbmErrorTime_Type()
)
hwsbmErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorTime.setStatus("current")
_HwsbmErrorTransferSize_Type = Gauge32
_HwsbmErrorTransferSize_Object = MibTableColumn
hwsbmErrorTransferSize = _HwsbmErrorTransferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 24),
    _HwsbmErrorTransferSize_Type()
)
hwsbmErrorTransferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmErrorTransferSize.setStatus("current")
_HwsbmInstallDate_Type = DateAndTime
_HwsbmInstallDate_Object = MibTableColumn
hwsbmInstallDate = _HwsbmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 25),
    _HwsbmInstallDate_Type()
)
hwsbmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmInstallDate.setStatus("current")
_HwsbmLastErrorCode_Type = Gauge32
_HwsbmLastErrorCode_Object = MibTableColumn
hwsbmLastErrorCode = _HwsbmLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 26),
    _HwsbmLastErrorCode_Type()
)
hwsbmLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmLastErrorCode.setStatus("current")
_HwsbmName_Type = WtcsDisplayString
_HwsbmName_Object = MibTableColumn
hwsbmName = _HwsbmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 27),
    _HwsbmName_Type()
)
hwsbmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmName.setStatus("current")
_HwsbmNumberOfBlocks_Type = Gauge32
_HwsbmNumberOfBlocks_Object = MibTableColumn
hwsbmNumberOfBlocks = _HwsbmNumberOfBlocks_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 28),
    _HwsbmNumberOfBlocks_Type()
)
hwsbmNumberOfBlocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmNumberOfBlocks.setStatus("current")
_HwsbmOtherErrorDescription_Type = WtcsDisplayString
_HwsbmOtherErrorDescription_Object = MibTableColumn
hwsbmOtherErrorDescription = _HwsbmOtherErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 29),
    _HwsbmOtherErrorDescription_Type()
)
hwsbmOtherErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmOtherErrorDescription.setStatus("current")
_HwsbmPNPDeviceID_Type = WtcsDisplayString
_HwsbmPNPDeviceID_Object = MibTableColumn
hwsbmPNPDeviceID = _HwsbmPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 30),
    _HwsbmPNPDeviceID_Type()
)
hwsbmPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmPNPDeviceID.setStatus("current")
_HwsbmPowerManagementCapabilities_Type = WtcsDisplayString
_HwsbmPowerManagementCapabilities_Object = MibTableColumn
hwsbmPowerManagementCapabilities = _HwsbmPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 31),
    _HwsbmPowerManagementCapabilities_Type()
)
hwsbmPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmPowerManagementCapabilities.setStatus("current")
_HwsbmPowerManagementSupported_Type = TruthValue
_HwsbmPowerManagementSupported_Object = MibTableColumn
hwsbmPowerManagementSupported = _HwsbmPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 32),
    _HwsbmPowerManagementSupported_Type()
)
hwsbmPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmPowerManagementSupported.setStatus("current")
_HwsbmPurpose_Type = WtcsDisplayString
_HwsbmPurpose_Object = MibTableColumn
hwsbmPurpose = _HwsbmPurpose_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 33),
    _HwsbmPurpose_Type()
)
hwsbmPurpose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmPurpose.setStatus("current")
_HwsbmStartingAddress_Type = Gauge32
_HwsbmStartingAddress_Object = MibTableColumn
hwsbmStartingAddress = _HwsbmStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 34),
    _HwsbmStartingAddress_Type()
)
hwsbmStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmStartingAddress.setStatus("current")


class _HwsbmStatus_Type(Integer32):
    """Custom type hwsbmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwsbmStatus_Type.__name__ = "Integer32"
_HwsbmStatus_Object = MibTableColumn
hwsbmStatus = _HwsbmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 35),
    _HwsbmStatus_Type()
)
hwsbmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmStatus.setStatus("current")


class _HwsbmStatusInfo_Type(Integer32):
    """Custom type hwsbmStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwsbmStatusInfo_Type.__name__ = "Integer32"
_HwsbmStatusInfo_Object = MibTableColumn
hwsbmStatusInfo = _HwsbmStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 36),
    _HwsbmStatusInfo_Type()
)
hwsbmStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmStatusInfo.setStatus("current")
_HwsbmSystemCreationClassName_Type = WtcsDisplayString
_HwsbmSystemCreationClassName_Object = MibTableColumn
hwsbmSystemCreationClassName = _HwsbmSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 37),
    _HwsbmSystemCreationClassName_Type()
)
hwsbmSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmSystemCreationClassName.setStatus("current")
_HwsbmSystemLevelAddress_Type = TruthValue
_HwsbmSystemLevelAddress_Object = MibTableColumn
hwsbmSystemLevelAddress = _HwsbmSystemLevelAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 38),
    _HwsbmSystemLevelAddress_Type()
)
hwsbmSystemLevelAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmSystemLevelAddress.setStatus("current")
_HwsbmSystemName_Type = WtcsDisplayString
_HwsbmSystemName_Object = MibTableColumn
hwsbmSystemName = _HwsbmSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 28, 1, 39),
    _HwsbmSystemName_Type()
)
hwsbmSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsbmSystemName.setStatus("current")
_Win32SoundDeviceTable_Object = MibTable
win32SoundDeviceTable = _Win32SoundDeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29)
)
if mibBuilder.loadTexts:
    win32SoundDeviceTable.setStatus("current")
_Win32SoundDeviceEntry_Object = MibTableRow
win32SoundDeviceEntry = _Win32SoundDeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1)
)
win32SoundDeviceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwsndIndex"),
)
if mibBuilder.loadTexts:
    win32SoundDeviceEntry.setStatus("current")


class _HwsndIndex_Type(Integer32):
    """Custom type hwsndIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwsndIndex_Type.__name__ = "Integer32"
_HwsndIndex_Object = MibTableColumn
hwsndIndex = _HwsndIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 1),
    _HwsndIndex_Type()
)
hwsndIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndIndex.setStatus("current")


class _HwsndAvailability_Type(Integer32):
    """Custom type hwsndAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwsndAvailability_Type.__name__ = "Integer32"
_HwsndAvailability_Object = MibTableColumn
hwsndAvailability = _HwsndAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 2),
    _HwsndAvailability_Type()
)
hwsndAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndAvailability.setStatus("current")


class _HwsndCaption_Type(WtcsDisplayString):
    """Custom type hwsndCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwsndCaption_Type.__name__ = "WtcsDisplayString"
_HwsndCaption_Object = MibTableColumn
hwsndCaption = _HwsndCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 3),
    _HwsndCaption_Type()
)
hwsndCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndCaption.setStatus("current")


class _HwsndConfigManagerErrorCode_Type(Integer32):
    """Custom type hwsndConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwsndConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwsndConfigManagerErrorCode_Object = MibTableColumn
hwsndConfigManagerErrorCode = _HwsndConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 4),
    _HwsndConfigManagerErrorCode_Type()
)
hwsndConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndConfigManagerErrorCode.setStatus("current")
_HwsndConfigManagerUserConfig_Type = TruthValue
_HwsndConfigManagerUserConfig_Object = MibTableColumn
hwsndConfigManagerUserConfig = _HwsndConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 5),
    _HwsndConfigManagerUserConfig_Type()
)
hwsndConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndConfigManagerUserConfig.setStatus("current")
_HwsndCreationClassName_Type = WtcsDisplayString
_HwsndCreationClassName_Object = MibTableColumn
hwsndCreationClassName = _HwsndCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 6),
    _HwsndCreationClassName_Type()
)
hwsndCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndCreationClassName.setStatus("current")
_HwsndDescription_Type = WtcsDisplayString
_HwsndDescription_Object = MibTableColumn
hwsndDescription = _HwsndDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 7),
    _HwsndDescription_Type()
)
hwsndDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndDescription.setStatus("current")


class _HwsndDeviceID_Type(WtcsDisplayString):
    """Custom type hwsndDeviceID based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 260),
    )


_HwsndDeviceID_Type.__name__ = "WtcsDisplayString"
_HwsndDeviceID_Object = MibTableColumn
hwsndDeviceID = _HwsndDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 8),
    _HwsndDeviceID_Type()
)
hwsndDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndDeviceID.setStatus("current")
_HwsndDMABufferSize_Type = Integer32
_HwsndDMABufferSize_Object = MibTableColumn
hwsndDMABufferSize = _HwsndDMABufferSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 9),
    _HwsndDMABufferSize_Type()
)
hwsndDMABufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndDMABufferSize.setStatus("current")
if mibBuilder.loadTexts:
    hwsndDMABufferSize.setUnits("Kilobytes")
_HwsndErrorCleared_Type = TruthValue
_HwsndErrorCleared_Object = MibTableColumn
hwsndErrorCleared = _HwsndErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 10),
    _HwsndErrorCleared_Type()
)
hwsndErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndErrorCleared.setStatus("current")
_HwsndErrorDescription_Type = WtcsDisplayString
_HwsndErrorDescription_Object = MibTableColumn
hwsndErrorDescription = _HwsndErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 11),
    _HwsndErrorDescription_Type()
)
hwsndErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndErrorDescription.setStatus("current")
_HwsndInstallDate_Type = DateAndTime
_HwsndInstallDate_Object = MibTableColumn
hwsndInstallDate = _HwsndInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 12),
    _HwsndInstallDate_Type()
)
hwsndInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndInstallDate.setStatus("current")
_HwsndLastErrorCode_Type = Gauge32
_HwsndLastErrorCode_Object = MibTableColumn
hwsndLastErrorCode = _HwsndLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 13),
    _HwsndLastErrorCode_Type()
)
hwsndLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndLastErrorCode.setStatus("current")
_HwsndManufacturer_Type = WtcsDisplayString
_HwsndManufacturer_Object = MibTableColumn
hwsndManufacturer = _HwsndManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 14),
    _HwsndManufacturer_Type()
)
hwsndManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndManufacturer.setStatus("current")
_HwsndMPU401Address_Type = Gauge32
_HwsndMPU401Address_Object = MibTableColumn
hwsndMPU401Address = _HwsndMPU401Address_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 15),
    _HwsndMPU401Address_Type()
)
hwsndMPU401Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndMPU401Address.setStatus("current")
_HwsndName_Type = WtcsDisplayString
_HwsndName_Object = MibTableColumn
hwsndName = _HwsndName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 16),
    _HwsndName_Type()
)
hwsndName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndName.setStatus("current")
_HwsndPNPDeviceID_Type = WtcsDisplayString
_HwsndPNPDeviceID_Object = MibTableColumn
hwsndPNPDeviceID = _HwsndPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 17),
    _HwsndPNPDeviceID_Type()
)
hwsndPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndPNPDeviceID.setStatus("current")
_HwsndPowerManagementCapabilities_Type = WtcsDisplayString
_HwsndPowerManagementCapabilities_Object = MibTableColumn
hwsndPowerManagementCapabilities = _HwsndPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 18),
    _HwsndPowerManagementCapabilities_Type()
)
hwsndPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndPowerManagementCapabilities.setStatus("current")
_HwsndPowerManagementSupported_Type = TruthValue
_HwsndPowerManagementSupported_Object = MibTableColumn
hwsndPowerManagementSupported = _HwsndPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 19),
    _HwsndPowerManagementSupported_Type()
)
hwsndPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndPowerManagementSupported.setStatus("current")
_HwsndProductName_Type = WtcsDisplayString
_HwsndProductName_Object = MibTableColumn
hwsndProductName = _HwsndProductName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 20),
    _HwsndProductName_Type()
)
hwsndProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndProductName.setStatus("current")


class _HwsndStatus_Type(Integer32):
    """Custom type hwsndStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwsndStatus_Type.__name__ = "Integer32"
_HwsndStatus_Object = MibTableColumn
hwsndStatus = _HwsndStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 21),
    _HwsndStatus_Type()
)
hwsndStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndStatus.setStatus("current")


class _HwsndStatusInfo_Type(Integer32):
    """Custom type hwsndStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwsndStatusInfo_Type.__name__ = "Integer32"
_HwsndStatusInfo_Object = MibTableColumn
hwsndStatusInfo = _HwsndStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 22),
    _HwsndStatusInfo_Type()
)
hwsndStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndStatusInfo.setStatus("current")
_HwsndSystemCreationClassName_Type = WtcsDisplayString
_HwsndSystemCreationClassName_Object = MibTableColumn
hwsndSystemCreationClassName = _HwsndSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 23),
    _HwsndSystemCreationClassName_Type()
)
hwsndSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndSystemCreationClassName.setStatus("current")
_HwsndSystemName_Type = WtcsDisplayString
_HwsndSystemName_Object = MibTableColumn
hwsndSystemName = _HwsndSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 29, 1, 24),
    _HwsndSystemName_Type()
)
hwsndSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsndSystemName.setStatus("current")
_Win32SystemEnclosureTable_Object = MibTable
win32SystemEnclosureTable = _Win32SystemEnclosureTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30)
)
if mibBuilder.loadTexts:
    win32SystemEnclosureTable.setStatus("current")
_Win32SystemEnclosureEntry_Object = MibTableRow
win32SystemEnclosureEntry = _Win32SystemEnclosureEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1)
)
win32SystemEnclosureEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwseIndex"),
)
if mibBuilder.loadTexts:
    win32SystemEnclosureEntry.setStatus("current")


class _HwseIndex_Type(Integer32):
    """Custom type hwseIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwseIndex_Type.__name__ = "Integer32"
_HwseIndex_Object = MibTableColumn
hwseIndex = _HwseIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 1),
    _HwseIndex_Type()
)
hwseIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseIndex.setStatus("current")
_HwseAudibleAlarm_Type = TruthValue
_HwseAudibleAlarm_Object = MibTableColumn
hwseAudibleAlarm = _HwseAudibleAlarm_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 2),
    _HwseAudibleAlarm_Type()
)
hwseAudibleAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseAudibleAlarm.setStatus("current")
_HwseBreachDescription_Type = WtcsDisplayString
_HwseBreachDescription_Object = MibTableColumn
hwseBreachDescription = _HwseBreachDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 3),
    _HwseBreachDescription_Type()
)
hwseBreachDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseBreachDescription.setStatus("current")
_HwseCableManagementStrategy_Type = WtcsDisplayString
_HwseCableManagementStrategy_Object = MibTableColumn
hwseCableManagementStrategy = _HwseCableManagementStrategy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 4),
    _HwseCableManagementStrategy_Type()
)
hwseCableManagementStrategy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseCableManagementStrategy.setStatus("current")


class _HwseCaption_Type(WtcsDisplayString):
    """Custom type hwseCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwseCaption_Type.__name__ = "WtcsDisplayString"
_HwseCaption_Object = MibTableColumn
hwseCaption = _HwseCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 5),
    _HwseCaption_Type()
)
hwseCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseCaption.setStatus("current")
_HwseChassisTypes_Type = WtcsDisplayString
_HwseChassisTypes_Object = MibTableColumn
hwseChassisTypes = _HwseChassisTypes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 6),
    _HwseChassisTypes_Type()
)
hwseChassisTypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseChassisTypes.setStatus("current")


class _HwseCreationClassName_Type(WtcsDisplayString):
    """Custom type hwseCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwseCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwseCreationClassName_Object = MibTableColumn
hwseCreationClassName = _HwseCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 7),
    _HwseCreationClassName_Type()
)
hwseCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseCreationClassName.setStatus("current")
_HwseCurrentRequiredOrProduced_Type = Integer32
_HwseCurrentRequiredOrProduced_Object = MibTableColumn
hwseCurrentRequiredOrProduced = _HwseCurrentRequiredOrProduced_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 8),
    _HwseCurrentRequiredOrProduced_Type()
)
hwseCurrentRequiredOrProduced.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseCurrentRequiredOrProduced.setStatus("current")
if mibBuilder.loadTexts:
    hwseCurrentRequiredOrProduced.setUnits("Amps at 120 Volts")
_HwseDepth_Type = Integer32
_HwseDepth_Object = MibTableColumn
hwseDepth = _HwseDepth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 9),
    _HwseDepth_Type()
)
hwseDepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseDepth.setStatus("current")
_HwseDescription_Type = WtcsDisplayString
_HwseDescription_Object = MibTableColumn
hwseDescription = _HwseDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 10),
    _HwseDescription_Type()
)
hwseDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseDescription.setStatus("current")
_HwseHeatGeneration_Type = Integer32
_HwseHeatGeneration_Object = MibTableColumn
hwseHeatGeneration = _HwseHeatGeneration_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 11),
    _HwseHeatGeneration_Type()
)
hwseHeatGeneration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseHeatGeneration.setStatus("current")
_HwseHeight_Type = Integer32
_HwseHeight_Object = MibTableColumn
hwseHeight = _HwseHeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 12),
    _HwseHeight_Type()
)
hwseHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseHeight.setStatus("current")
_HwseHotSwappable_Type = TruthValue
_HwseHotSwappable_Object = MibTableColumn
hwseHotSwappable = _HwseHotSwappable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 13),
    _HwseHotSwappable_Type()
)
hwseHotSwappable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseHotSwappable.setStatus("current")
_HwseInstallDate_Type = DateAndTime
_HwseInstallDate_Object = MibTableColumn
hwseInstallDate = _HwseInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 14),
    _HwseInstallDate_Type()
)
hwseInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseInstallDate.setStatus("current")
_HwseLockPresent_Type = TruthValue
_HwseLockPresent_Object = MibTableColumn
hwseLockPresent = _HwseLockPresent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 15),
    _HwseLockPresent_Type()
)
hwseLockPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseLockPresent.setStatus("current")


class _HwseManufacturer_Type(WtcsDisplayString):
    """Custom type hwseManufacturer based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwseManufacturer_Type.__name__ = "WtcsDisplayString"
_HwseManufacturer_Object = MibTableColumn
hwseManufacturer = _HwseManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 16),
    _HwseManufacturer_Type()
)
hwseManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseManufacturer.setStatus("current")


class _HwseModel_Type(WtcsDisplayString):
    """Custom type hwseModel based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwseModel_Type.__name__ = "WtcsDisplayString"
_HwseModel_Object = MibTableColumn
hwseModel = _HwseModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 17),
    _HwseModel_Type()
)
hwseModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseModel.setStatus("current")
_HwseName_Type = WtcsDisplayString
_HwseName_Object = MibTableColumn
hwseName = _HwseName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 18),
    _HwseName_Type()
)
hwseName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseName.setStatus("current")
_HwseNumberOfPowerCords_Type = Integer32
_HwseNumberOfPowerCords_Object = MibTableColumn
hwseNumberOfPowerCords = _HwseNumberOfPowerCords_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 19),
    _HwseNumberOfPowerCords_Type()
)
hwseNumberOfPowerCords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseNumberOfPowerCords.setStatus("current")
_HwseOtherIdentifyingInfo_Type = WtcsDisplayString
_HwseOtherIdentifyingInfo_Object = MibTableColumn
hwseOtherIdentifyingInfo = _HwseOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 20),
    _HwseOtherIdentifyingInfo_Type()
)
hwseOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseOtherIdentifyingInfo.setStatus("current")


class _HwsePartNumber_Type(WtcsDisplayString):
    """Custom type hwsePartNumber based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwsePartNumber_Type.__name__ = "WtcsDisplayString"
_HwsePartNumber_Object = MibTableColumn
hwsePartNumber = _HwsePartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 21),
    _HwsePartNumber_Type()
)
hwsePartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsePartNumber.setStatus("current")
_HwsePoweredOn_Type = TruthValue
_HwsePoweredOn_Object = MibTableColumn
hwsePoweredOn = _HwsePoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 22),
    _HwsePoweredOn_Type()
)
hwsePoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsePoweredOn.setStatus("current")
_HwseRemovable_Type = TruthValue
_HwseRemovable_Object = MibTableColumn
hwseRemovable = _HwseRemovable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 23),
    _HwseRemovable_Type()
)
hwseRemovable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseRemovable.setStatus("current")
_HwseReplaceable_Type = TruthValue
_HwseReplaceable_Object = MibTableColumn
hwseReplaceable = _HwseReplaceable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 24),
    _HwseReplaceable_Type()
)
hwseReplaceable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseReplaceable.setStatus("current")


class _HwseSecurityBreach_Type(Integer32):
    """Custom type hwseSecurityBreach based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("breachAttempted", 4),
          ("breachSuccessful", 5),
          ("noBreach", 3),
          ("other", 1),
          ("unknown", 2))
    )


_HwseSecurityBreach_Type.__name__ = "Integer32"
_HwseSecurityBreach_Object = MibTableColumn
hwseSecurityBreach = _HwseSecurityBreach_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 25),
    _HwseSecurityBreach_Type()
)
hwseSecurityBreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseSecurityBreach.setStatus("current")


class _HwseSecurityStatus_Type(Integer32):
    """Custom type hwseSecurityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("externalInterfaceEnabled", 5),
          ("externalInterfaceLockedOut", 4),
          ("none", 3),
          ("other", 1),
          ("unknown", 2))
    )


_HwseSecurityStatus_Type.__name__ = "Integer32"
_HwseSecurityStatus_Object = MibTableColumn
hwseSecurityStatus = _HwseSecurityStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 26),
    _HwseSecurityStatus_Type()
)
hwseSecurityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseSecurityStatus.setStatus("current")


class _HwseSerialNumber_Type(WtcsDisplayString):
    """Custom type hwseSerialNumber based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwseSerialNumber_Type.__name__ = "WtcsDisplayString"
_HwseSerialNumber_Object = MibTableColumn
hwseSerialNumber = _HwseSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 27),
    _HwseSerialNumber_Type()
)
hwseSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseSerialNumber.setStatus("current")
_HwseServiceDescriptions_Type = WtcsDisplayString
_HwseServiceDescriptions_Object = MibTableColumn
hwseServiceDescriptions = _HwseServiceDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 28),
    _HwseServiceDescriptions_Type()
)
hwseServiceDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseServiceDescriptions.setStatus("current")
_HwseServicePhilosophy_Type = WtcsDisplayString
_HwseServicePhilosophy_Object = MibTableColumn
hwseServicePhilosophy = _HwseServicePhilosophy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 29),
    _HwseServicePhilosophy_Type()
)
hwseServicePhilosophy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseServicePhilosophy.setStatus("current")


class _HwseSKU_Type(WtcsDisplayString):
    """Custom type hwseSKU based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwseSKU_Type.__name__ = "WtcsDisplayString"
_HwseSKU_Object = MibTableColumn
hwseSKU = _HwseSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 30),
    _HwseSKU_Type()
)
hwseSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseSKU.setStatus("current")
_HwseSMBIOSAssetTag_Type = WtcsDisplayString
_HwseSMBIOSAssetTag_Object = MibTableColumn
hwseSMBIOSAssetTag = _HwseSMBIOSAssetTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 31),
    _HwseSMBIOSAssetTag_Type()
)
hwseSMBIOSAssetTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseSMBIOSAssetTag.setStatus("current")


class _HwseStatus_Type(Integer32):
    """Custom type hwseStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwseStatus_Type.__name__ = "Integer32"
_HwseStatus_Object = MibTableColumn
hwseStatus = _HwseStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 32),
    _HwseStatus_Type()
)
hwseStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseStatus.setStatus("current")


class _HwseTag_Type(WtcsDisplayString):
    """Custom type hwseTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwseTag_Type.__name__ = "WtcsDisplayString"
_HwseTag_Object = MibTableColumn
hwseTag = _HwseTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 33),
    _HwseTag_Type()
)
hwseTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseTag.setStatus("current")
_HwseTypeDescriptions_Type = WtcsDisplayString
_HwseTypeDescriptions_Object = MibTableColumn
hwseTypeDescriptions = _HwseTypeDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 34),
    _HwseTypeDescriptions_Type()
)
hwseTypeDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseTypeDescriptions.setStatus("current")


class _HwseVersion_Type(WtcsDisplayString):
    """Custom type hwseVersion based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwseVersion_Type.__name__ = "WtcsDisplayString"
_HwseVersion_Object = MibTableColumn
hwseVersion = _HwseVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 35),
    _HwseVersion_Type()
)
hwseVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseVersion.setStatus("current")
_HwseVisibleAlarm_Type = TruthValue
_HwseVisibleAlarm_Object = MibTableColumn
hwseVisibleAlarm = _HwseVisibleAlarm_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 36),
    _HwseVisibleAlarm_Type()
)
hwseVisibleAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseVisibleAlarm.setStatus("current")
_HwseWeight_Type = Integer32
_HwseWeight_Object = MibTableColumn
hwseWeight = _HwseWeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 37),
    _HwseWeight_Type()
)
hwseWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseWeight.setStatus("current")
_HwseWidth_Type = Integer32
_HwseWidth_Object = MibTableColumn
hwseWidth = _HwseWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 30, 1, 38),
    _HwseWidth_Type()
)
hwseWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwseWidth.setStatus("current")
_Win32SystemMemoryResourceTable_Object = MibTable
win32SystemMemoryResourceTable = _Win32SystemMemoryResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31)
)
if mibBuilder.loadTexts:
    win32SystemMemoryResourceTable.setStatus("current")
_Win32SystemMemoryResourceEntry_Object = MibTableRow
win32SystemMemoryResourceEntry = _Win32SystemMemoryResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1)
)
win32SystemMemoryResourceEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwsmrIndex"),
)
if mibBuilder.loadTexts:
    win32SystemMemoryResourceEntry.setStatus("current")


class _HwsmrIndex_Type(Integer32):
    """Custom type hwsmrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwsmrIndex_Type.__name__ = "Integer32"
_HwsmrIndex_Object = MibTableColumn
hwsmrIndex = _HwsmrIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 1),
    _HwsmrIndex_Type()
)
hwsmrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrIndex.setStatus("current")


class _HwsmrCaption_Type(WtcsDisplayString):
    """Custom type hwsmrCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwsmrCaption_Type.__name__ = "WtcsDisplayString"
_HwsmrCaption_Object = MibTableColumn
hwsmrCaption = _HwsmrCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 2),
    _HwsmrCaption_Type()
)
hwsmrCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrCaption.setStatus("current")


class _HwsmrCreationClassName_Type(WtcsDisplayString):
    """Custom type hwsmrCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwsmrCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwsmrCreationClassName_Object = MibTableColumn
hwsmrCreationClassName = _HwsmrCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 3),
    _HwsmrCreationClassName_Type()
)
hwsmrCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrCreationClassName.setStatus("current")


class _HwsmrCSCreationClassName_Type(WtcsDisplayString):
    """Custom type hwsmrCSCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwsmrCSCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwsmrCSCreationClassName_Object = MibTableColumn
hwsmrCSCreationClassName = _HwsmrCSCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 4),
    _HwsmrCSCreationClassName_Type()
)
hwsmrCSCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrCSCreationClassName.setStatus("current")


class _HwsmrCSName_Type(WtcsDisplayString):
    """Custom type hwsmrCSName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwsmrCSName_Type.__name__ = "WtcsDisplayString"
_HwsmrCSName_Object = MibTableColumn
hwsmrCSName = _HwsmrCSName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 5),
    _HwsmrCSName_Type()
)
hwsmrCSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrCSName.setStatus("current")
_HwsmrDescription_Type = WtcsDisplayString
_HwsmrDescription_Object = MibTableColumn
hwsmrDescription = _HwsmrDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 6),
    _HwsmrDescription_Type()
)
hwsmrDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrDescription.setStatus("current")
_HwsmrEndingAddress_Type = Gauge32
_HwsmrEndingAddress_Object = MibTableColumn
hwsmrEndingAddress = _HwsmrEndingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 7),
    _HwsmrEndingAddress_Type()
)
hwsmrEndingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrEndingAddress.setStatus("current")
_HwsmrInstallDate_Type = DateAndTime
_HwsmrInstallDate_Object = MibTableColumn
hwsmrInstallDate = _HwsmrInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 8),
    _HwsmrInstallDate_Type()
)
hwsmrInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrInstallDate.setStatus("current")
_HwsmrName_Type = WtcsDisplayString
_HwsmrName_Object = MibTableColumn
hwsmrName = _HwsmrName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 9),
    _HwsmrName_Type()
)
hwsmrName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrName.setStatus("current")
_HwsmrStartingAddress_Type = Gauge32
_HwsmrStartingAddress_Object = MibTableColumn
hwsmrStartingAddress = _HwsmrStartingAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 10),
    _HwsmrStartingAddress_Type()
)
hwsmrStartingAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrStartingAddress.setStatus("current")


class _HwsmrStatus_Type(Integer32):
    """Custom type hwsmrStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwsmrStatus_Type.__name__ = "Integer32"
_HwsmrStatus_Object = MibTableColumn
hwsmrStatus = _HwsmrStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 31, 1, 11),
    _HwsmrStatus_Type()
)
hwsmrStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwsmrStatus.setStatus("current")
_Win32SystemSlotTable_Object = MibTable
win32SystemSlotTable = _Win32SystemSlotTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32)
)
if mibBuilder.loadTexts:
    win32SystemSlotTable.setStatus("current")
_Win32SystemSlotEntry_Object = MibTableRow
win32SystemSlotEntry = _Win32SystemSlotEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1)
)
win32SystemSlotEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwssIndex"),
)
if mibBuilder.loadTexts:
    win32SystemSlotEntry.setStatus("current")


class _HwssIndex_Type(Integer32):
    """Custom type hwssIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwssIndex_Type.__name__ = "Integer32"
_HwssIndex_Object = MibTableColumn
hwssIndex = _HwssIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 1),
    _HwssIndex_Type()
)
hwssIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssIndex.setStatus("current")


class _HwssCaption_Type(WtcsDisplayString):
    """Custom type hwssCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwssCaption_Type.__name__ = "WtcsDisplayString"
_HwssCaption_Object = MibTableColumn
hwssCaption = _HwssCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 2),
    _HwssCaption_Type()
)
hwssCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssCaption.setStatus("current")
_HwssConnectorPinout_Type = WtcsDisplayString
_HwssConnectorPinout_Object = MibTableColumn
hwssConnectorPinout = _HwssConnectorPinout_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 3),
    _HwssConnectorPinout_Type()
)
hwssConnectorPinout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssConnectorPinout.setStatus("current")
_HwssConnectorType_Type = WtcsDisplayString
_HwssConnectorType_Object = MibTableColumn
hwssConnectorType = _HwssConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 4),
    _HwssConnectorType_Type()
)
hwssConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssConnectorType.setStatus("current")


class _HwssCreationClassName_Type(WtcsDisplayString):
    """Custom type hwssCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwssCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwssCreationClassName_Object = MibTableColumn
hwssCreationClassName = _HwssCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 5),
    _HwssCreationClassName_Type()
)
hwssCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssCreationClassName.setStatus("current")


class _HwssCurrentUsage_Type(Integer32):
    """Custom type hwssCurrentUsage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("available", 3),
          ("inUse", 4),
          ("other", 1),
          ("reserved", 0),
          ("unknown", 2))
    )


_HwssCurrentUsage_Type.__name__ = "Integer32"
_HwssCurrentUsage_Object = MibTableColumn
hwssCurrentUsage = _HwssCurrentUsage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 6),
    _HwssCurrentUsage_Type()
)
hwssCurrentUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssCurrentUsage.setStatus("current")
_HwssDescription_Type = WtcsDisplayString
_HwssDescription_Object = MibTableColumn
hwssDescription = _HwssDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 7),
    _HwssDescription_Type()
)
hwssDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssDescription.setStatus("current")
_HwssHeightAllowed_Type = Integer32
_HwssHeightAllowed_Object = MibTableColumn
hwssHeightAllowed = _HwssHeightAllowed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 8),
    _HwssHeightAllowed_Type()
)
hwssHeightAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssHeightAllowed.setStatus("current")
_HwssInstallDate_Type = DateAndTime
_HwssInstallDate_Object = MibTableColumn
hwssInstallDate = _HwssInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 9),
    _HwssInstallDate_Type()
)
hwssInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssInstallDate.setStatus("current")
_HwssLengthAllowed_Type = Integer32
_HwssLengthAllowed_Object = MibTableColumn
hwssLengthAllowed = _HwssLengthAllowed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 10),
    _HwssLengthAllowed_Type()
)
hwssLengthAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssLengthAllowed.setStatus("current")


class _HwssManufacturer_Type(WtcsDisplayString):
    """Custom type hwssManufacturer based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwssManufacturer_Type.__name__ = "WtcsDisplayString"
_HwssManufacturer_Object = MibTableColumn
hwssManufacturer = _HwssManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 11),
    _HwssManufacturer_Type()
)
hwssManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssManufacturer.setStatus("current")
_HwssMaxDataWidth_Type = Integer32
_HwssMaxDataWidth_Object = MibTableColumn
hwssMaxDataWidth = _HwssMaxDataWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 12),
    _HwssMaxDataWidth_Type()
)
hwssMaxDataWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssMaxDataWidth.setStatus("current")


class _HwssModel_Type(WtcsDisplayString):
    """Custom type hwssModel based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwssModel_Type.__name__ = "WtcsDisplayString"
_HwssModel_Object = MibTableColumn
hwssModel = _HwssModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 13),
    _HwssModel_Type()
)
hwssModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssModel.setStatus("current")
_HwssName_Type = WtcsDisplayString
_HwssName_Object = MibTableColumn
hwssName = _HwssName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 14),
    _HwssName_Type()
)
hwssName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssName.setStatus("current")
_HwssNumber_Type = Integer32
_HwssNumber_Object = MibTableColumn
hwssNumber = _HwssNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 15),
    _HwssNumber_Type()
)
hwssNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssNumber.setStatus("current")
_HwssOtherIdentifyingInfo_Type = WtcsDisplayString
_HwssOtherIdentifyingInfo_Object = MibTableColumn
hwssOtherIdentifyingInfo = _HwssOtherIdentifyingInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 16),
    _HwssOtherIdentifyingInfo_Type()
)
hwssOtherIdentifyingInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssOtherIdentifyingInfo.setStatus("current")


class _HwssPartNumber_Type(WtcsDisplayString):
    """Custom type hwssPartNumber based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwssPartNumber_Type.__name__ = "WtcsDisplayString"
_HwssPartNumber_Object = MibTableColumn
hwssPartNumber = _HwssPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 17),
    _HwssPartNumber_Type()
)
hwssPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssPartNumber.setStatus("current")
_HwssPMESignal_Type = TruthValue
_HwssPMESignal_Object = MibTableColumn
hwssPMESignal = _HwssPMESignal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 18),
    _HwssPMESignal_Type()
)
hwssPMESignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssPMESignal.setStatus("current")
_HwssPoweredOn_Type = TruthValue
_HwssPoweredOn_Object = MibTableColumn
hwssPoweredOn = _HwssPoweredOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 19),
    _HwssPoweredOn_Type()
)
hwssPoweredOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssPoweredOn.setStatus("current")
_HwssPurposeDescription_Type = WtcsDisplayString
_HwssPurposeDescription_Object = MibTableColumn
hwssPurposeDescription = _HwssPurposeDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 20),
    _HwssPurposeDescription_Type()
)
hwssPurposeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssPurposeDescription.setStatus("current")


class _HwssSerialNumber_Type(WtcsDisplayString):
    """Custom type hwssSerialNumber based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwssSerialNumber_Type.__name__ = "WtcsDisplayString"
_HwssSerialNumber_Object = MibTableColumn
hwssSerialNumber = _HwssSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 21),
    _HwssSerialNumber_Type()
)
hwssSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssSerialNumber.setStatus("current")
_HwssShared_Type = TruthValue
_HwssShared_Object = MibTableColumn
hwssShared = _HwssShared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 22),
    _HwssShared_Type()
)
hwssShared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssShared.setStatus("current")


class _HwssSKU_Type(WtcsDisplayString):
    """Custom type hwssSKU based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwssSKU_Type.__name__ = "WtcsDisplayString"
_HwssSKU_Object = MibTableColumn
hwssSKU = _HwssSKU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 23),
    _HwssSKU_Type()
)
hwssSKU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssSKU.setStatus("current")
_HwssSlotDesignation_Type = WtcsDisplayString
_HwssSlotDesignation_Object = MibTableColumn
hwssSlotDesignation = _HwssSlotDesignation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 24),
    _HwssSlotDesignation_Type()
)
hwssSlotDesignation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssSlotDesignation.setStatus("current")
_HwssSpecialPurpose_Type = TruthValue
_HwssSpecialPurpose_Object = MibTableColumn
hwssSpecialPurpose = _HwssSpecialPurpose_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 25),
    _HwssSpecialPurpose_Type()
)
hwssSpecialPurpose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssSpecialPurpose.setStatus("current")


class _HwssStatus_Type(Integer32):
    """Custom type hwssStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwssStatus_Type.__name__ = "Integer32"
_HwssStatus_Object = MibTableColumn
hwssStatus = _HwssStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 26),
    _HwssStatus_Type()
)
hwssStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssStatus.setStatus("current")
_HwssSupportsHotPlug_Type = TruthValue
_HwssSupportsHotPlug_Object = MibTableColumn
hwssSupportsHotPlug = _HwssSupportsHotPlug_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 27),
    _HwssSupportsHotPlug_Type()
)
hwssSupportsHotPlug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssSupportsHotPlug.setStatus("current")


class _HwssTag_Type(WtcsDisplayString):
    """Custom type hwssTag based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwssTag_Type.__name__ = "WtcsDisplayString"
_HwssTag_Object = MibTableColumn
hwssTag = _HwssTag_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 28),
    _HwssTag_Type()
)
hwssTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssTag.setStatus("current")
_HwssThermalRating_Type = Gauge32
_HwssThermalRating_Object = MibTableColumn
hwssThermalRating = _HwssThermalRating_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 29),
    _HwssThermalRating_Type()
)
hwssThermalRating.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssThermalRating.setStatus("current")
_HwssVccMixedVoltageSupport_Type = WtcsDisplayString
_HwssVccMixedVoltageSupport_Object = MibTableColumn
hwssVccMixedVoltageSupport = _HwssVccMixedVoltageSupport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 30),
    _HwssVccMixedVoltageSupport_Type()
)
hwssVccMixedVoltageSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssVccMixedVoltageSupport.setStatus("current")


class _HwssVersion_Type(WtcsDisplayString):
    """Custom type hwssVersion based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwssVersion_Type.__name__ = "WtcsDisplayString"
_HwssVersion_Object = MibTableColumn
hwssVersion = _HwssVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 31),
    _HwssVersion_Type()
)
hwssVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssVersion.setStatus("current")
_HwssVppMixedVoltageSupport_Type = WtcsDisplayString
_HwssVppMixedVoltageSupport_Object = MibTableColumn
hwssVppMixedVoltageSupport = _HwssVppMixedVoltageSupport_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 32, 1, 32),
    _HwssVppMixedVoltageSupport_Type()
)
hwssVppMixedVoltageSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwssVppMixedVoltageSupport.setStatus("current")
_Win32USBControllerTable_Object = MibTable
win32USBControllerTable = _Win32USBControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33)
)
if mibBuilder.loadTexts:
    win32USBControllerTable.setStatus("current")
_Win32USBControllerEntry_Object = MibTableRow
win32USBControllerEntry = _Win32USBControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1)
)
win32USBControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwucIndex"),
)
if mibBuilder.loadTexts:
    win32USBControllerEntry.setStatus("current")


class _HwucIndex_Type(Integer32):
    """Custom type hwucIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwucIndex_Type.__name__ = "Integer32"
_HwucIndex_Object = MibTableColumn
hwucIndex = _HwucIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 1),
    _HwucIndex_Type()
)
hwucIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucIndex.setStatus("current")


class _HwucAvailability_Type(Integer32):
    """Custom type hwucAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwucAvailability_Type.__name__ = "Integer32"
_HwucAvailability_Object = MibTableColumn
hwucAvailability = _HwucAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 2),
    _HwucAvailability_Type()
)
hwucAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucAvailability.setStatus("current")


class _HwucCaption_Type(WtcsDisplayString):
    """Custom type hwucCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwucCaption_Type.__name__ = "WtcsDisplayString"
_HwucCaption_Object = MibTableColumn
hwucCaption = _HwucCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 3),
    _HwucCaption_Type()
)
hwucCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucCaption.setStatus("current")


class _HwucConfigManagerErrorCode_Type(Integer32):
    """Custom type hwucConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwucConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwucConfigManagerErrorCode_Object = MibTableColumn
hwucConfigManagerErrorCode = _HwucConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 4),
    _HwucConfigManagerErrorCode_Type()
)
hwucConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucConfigManagerErrorCode.setStatus("current")
_HwucConfigManagerUserConfig_Type = TruthValue
_HwucConfigManagerUserConfig_Object = MibTableColumn
hwucConfigManagerUserConfig = _HwucConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 5),
    _HwucConfigManagerUserConfig_Type()
)
hwucConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucConfigManagerUserConfig.setStatus("current")
_HwucCreationClassName_Type = WtcsDisplayString
_HwucCreationClassName_Object = MibTableColumn
hwucCreationClassName = _HwucCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 6),
    _HwucCreationClassName_Type()
)
hwucCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucCreationClassName.setStatus("current")
_HwucDescription_Type = WtcsDisplayString
_HwucDescription_Object = MibTableColumn
hwucDescription = _HwucDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 7),
    _HwucDescription_Type()
)
hwucDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucDescription.setStatus("current")
_HwucDeviceID_Type = WtcsDisplayString
_HwucDeviceID_Object = MibTableColumn
hwucDeviceID = _HwucDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 8),
    _HwucDeviceID_Type()
)
hwucDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucDeviceID.setStatus("current")
_HwucErrorCleared_Type = TruthValue
_HwucErrorCleared_Object = MibTableColumn
hwucErrorCleared = _HwucErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 9),
    _HwucErrorCleared_Type()
)
hwucErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucErrorCleared.setStatus("current")
_HwucErrorDescription_Type = WtcsDisplayString
_HwucErrorDescription_Object = MibTableColumn
hwucErrorDescription = _HwucErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 10),
    _HwucErrorDescription_Type()
)
hwucErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucErrorDescription.setStatus("current")
_HwucInstallDate_Type = DateAndTime
_HwucInstallDate_Object = MibTableColumn
hwucInstallDate = _HwucInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 11),
    _HwucInstallDate_Type()
)
hwucInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucInstallDate.setStatus("current")
_HwucLastErrorCode_Type = Gauge32
_HwucLastErrorCode_Object = MibTableColumn
hwucLastErrorCode = _HwucLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 12),
    _HwucLastErrorCode_Type()
)
hwucLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucLastErrorCode.setStatus("current")
_HwucManufacturer_Type = WtcsDisplayString
_HwucManufacturer_Object = MibTableColumn
hwucManufacturer = _HwucManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 13),
    _HwucManufacturer_Type()
)
hwucManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucManufacturer.setStatus("current")
_HwucMaxNumberControlled_Type = Gauge32
_HwucMaxNumberControlled_Object = MibTableColumn
hwucMaxNumberControlled = _HwucMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 14),
    _HwucMaxNumberControlled_Type()
)
hwucMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucMaxNumberControlled.setStatus("current")
_HwucName_Type = WtcsDisplayString
_HwucName_Object = MibTableColumn
hwucName = _HwucName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 15),
    _HwucName_Type()
)
hwucName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucName.setStatus("current")
_HwucPNPDeviceID_Type = WtcsDisplayString
_HwucPNPDeviceID_Object = MibTableColumn
hwucPNPDeviceID = _HwucPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 16),
    _HwucPNPDeviceID_Type()
)
hwucPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucPNPDeviceID.setStatus("current")
_HwucPowerManagementCapabilities_Type = WtcsDisplayString
_HwucPowerManagementCapabilities_Object = MibTableColumn
hwucPowerManagementCapabilities = _HwucPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 17),
    _HwucPowerManagementCapabilities_Type()
)
hwucPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucPowerManagementCapabilities.setStatus("current")
_HwucPowerManagementSupported_Type = TruthValue
_HwucPowerManagementSupported_Object = MibTableColumn
hwucPowerManagementSupported = _HwucPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 18),
    _HwucPowerManagementSupported_Type()
)
hwucPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucPowerManagementSupported.setStatus("current")


class _HwucProtocolSupported_Type(Integer32):
    """Custom type hwucProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46)
        )
    )
    namedValues = NamedValues(
        *(("agp", 42),
          ("ansiX3T95FDDI", 33),
          ("ataATAPI", 5),
          ("cmd", 37),
          ("diagnostic", 18),
          ("dssi", 39),
          ("eisa", 2),
          ("enhancedATAIDE", 41),
          ("escon", 17),
          ("esdi", 35),
          ("fastInfrared", 44),
          ("flexibleDiskette", 6),
          ("hippi", 21),
          ("i2C", 19),
          ("ide", 36),
          ("ieee488", 25),
          ("ieee8023100BASEVG", 31),
          ("ieee802310BASE2", 28),
          ("ieee802310BASE5", 27),
          ("ieee802310BROAD36", 30),
          ("ieee80231BASE5", 29),
          ("ieee8025TokenRing", 32),
          ("ipi", 24),
          ("irBus", 46),
          ("isa", 3),
          ("mca", 34),
          ("multiBus", 22),
          ("n1496", 7),
          ("other", 0),
          ("parallelProtocol", 16),
          ("pci", 4),
          ("pcmcia", 14),
          ("power", 20),
          ("qic2", 40),
          ("rs232", 26),
          ("scsiFibreChannelProtocol", 9),
          ("scsiParallelInterface", 8),
          ("scsiSerialBusProtocol", 10),
          ("scsiSerialBusProtocol1394", 11),
          ("scsiSerialStorageArchitecture", 12),
          ("serialInfrared", 45),
          ("st506", 38),
          ("twowayInfrared", 43),
          ("universalSerialBus", 15),
          ("unknown", 1),
          ("vesa", 13),
          ("vme", 23))
    )


_HwucProtocolSupported_Type.__name__ = "Integer32"
_HwucProtocolSupported_Object = MibTableColumn
hwucProtocolSupported = _HwucProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 19),
    _HwucProtocolSupported_Type()
)
hwucProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucProtocolSupported.setStatus("current")


class _HwucStatus_Type(Integer32):
    """Custom type hwucStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwucStatus_Type.__name__ = "Integer32"
_HwucStatus_Object = MibTableColumn
hwucStatus = _HwucStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 20),
    _HwucStatus_Type()
)
hwucStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucStatus.setStatus("current")


class _HwucStatusInfo_Type(Integer32):
    """Custom type hwucStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwucStatusInfo_Type.__name__ = "Integer32"
_HwucStatusInfo_Object = MibTableColumn
hwucStatusInfo = _HwucStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 21),
    _HwucStatusInfo_Type()
)
hwucStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucStatusInfo.setStatus("current")
_HwucSystemCreationClassName_Type = WtcsDisplayString
_HwucSystemCreationClassName_Object = MibTableColumn
hwucSystemCreationClassName = _HwucSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 22),
    _HwucSystemCreationClassName_Type()
)
hwucSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucSystemCreationClassName.setStatus("current")
_HwucSystemName_Type = WtcsDisplayString
_HwucSystemName_Object = MibTableColumn
hwucSystemName = _HwucSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 23),
    _HwucSystemName_Type()
)
hwucSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucSystemName.setStatus("current")
_HwucTimeOfLastReset_Type = DateAndTime
_HwucTimeOfLastReset_Object = MibTableColumn
hwucTimeOfLastReset = _HwucTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 33, 1, 24),
    _HwucTimeOfLastReset_Type()
)
hwucTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwucTimeOfLastReset.setStatus("current")
_Win32USBHubTable_Object = MibTable
win32USBHubTable = _Win32USBHubTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34)
)
if mibBuilder.loadTexts:
    win32USBHubTable.setStatus("current")
_Win32USBHubEntry_Object = MibTableRow
win32USBHubEntry = _Win32USBHubEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1)
)
win32USBHubEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwuhIndex"),
)
if mibBuilder.loadTexts:
    win32USBHubEntry.setStatus("current")


class _HwuhIndex_Type(Integer32):
    """Custom type hwuhIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwuhIndex_Type.__name__ = "Integer32"
_HwuhIndex_Object = MibTableColumn
hwuhIndex = _HwuhIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 1),
    _HwuhIndex_Type()
)
hwuhIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhIndex.setStatus("current")


class _HwuhAvailability_Type(Integer32):
    """Custom type hwuhAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwuhAvailability_Type.__name__ = "Integer32"
_HwuhAvailability_Object = MibTableColumn
hwuhAvailability = _HwuhAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 2),
    _HwuhAvailability_Type()
)
hwuhAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhAvailability.setStatus("current")


class _HwuhCaption_Type(WtcsDisplayString):
    """Custom type hwuhCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwuhCaption_Type.__name__ = "WtcsDisplayString"
_HwuhCaption_Object = MibTableColumn
hwuhCaption = _HwuhCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 3),
    _HwuhCaption_Type()
)
hwuhCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhCaption.setStatus("current")


class _HwuhClassCode_Type(Integer32):
    """Custom type hwuhClassCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhClassCode_Type.__name__ = "Integer32"
_HwuhClassCode_Object = MibTableColumn
hwuhClassCode = _HwuhClassCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 4),
    _HwuhClassCode_Type()
)
hwuhClassCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhClassCode.setStatus("current")


class _HwuhConfigManagerErrorCode_Type(Integer32):
    """Custom type hwuhConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwuhConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwuhConfigManagerErrorCode_Object = MibTableColumn
hwuhConfigManagerErrorCode = _HwuhConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 5),
    _HwuhConfigManagerErrorCode_Type()
)
hwuhConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhConfigManagerErrorCode.setStatus("current")
_HwuhConfigManagerUserCode_Type = TruthValue
_HwuhConfigManagerUserCode_Object = MibTableColumn
hwuhConfigManagerUserCode = _HwuhConfigManagerUserCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 6),
    _HwuhConfigManagerUserCode_Type()
)
hwuhConfigManagerUserCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhConfigManagerUserCode.setStatus("current")
_HwuhCreationClassName_Type = WtcsDisplayString
_HwuhCreationClassName_Object = MibTableColumn
hwuhCreationClassName = _HwuhCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 7),
    _HwuhCreationClassName_Type()
)
hwuhCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhCreationClassName.setStatus("current")


class _HwuhCurrentAlternativeSettings_Type(Integer32):
    """Custom type hwuhCurrentAlternativeSettings based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhCurrentAlternativeSettings_Type.__name__ = "Integer32"
_HwuhCurrentAlternativeSettings_Object = MibTableColumn
hwuhCurrentAlternativeSettings = _HwuhCurrentAlternativeSettings_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 8),
    _HwuhCurrentAlternativeSettings_Type()
)
hwuhCurrentAlternativeSettings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhCurrentAlternativeSettings.setStatus("current")


class _HwuhCurrentConfigValue_Type(Integer32):
    """Custom type hwuhCurrentConfigValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhCurrentConfigValue_Type.__name__ = "Integer32"
_HwuhCurrentConfigValue_Object = MibTableColumn
hwuhCurrentConfigValue = _HwuhCurrentConfigValue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 9),
    _HwuhCurrentConfigValue_Type()
)
hwuhCurrentConfigValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhCurrentConfigValue.setStatus("current")
_HwuhDescription_Type = WtcsDisplayString
_HwuhDescription_Object = MibTableColumn
hwuhDescription = _HwuhDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 10),
    _HwuhDescription_Type()
)
hwuhDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhDescription.setStatus("current")
_HwuhDeviceID_Type = WtcsDisplayString
_HwuhDeviceID_Object = MibTableColumn
hwuhDeviceID = _HwuhDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 11),
    _HwuhDeviceID_Type()
)
hwuhDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhDeviceID.setStatus("current")
_HwuhErrorCleared_Type = TruthValue
_HwuhErrorCleared_Object = MibTableColumn
hwuhErrorCleared = _HwuhErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 12),
    _HwuhErrorCleared_Type()
)
hwuhErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhErrorCleared.setStatus("current")
_HwuhErrorDescription_Type = WtcsDisplayString
_HwuhErrorDescription_Object = MibTableColumn
hwuhErrorDescription = _HwuhErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 13),
    _HwuhErrorDescription_Type()
)
hwuhErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhErrorDescription.setStatus("current")
_HwuhGangSwitched_Type = TruthValue
_HwuhGangSwitched_Object = MibTableColumn
hwuhGangSwitched = _HwuhGangSwitched_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 14),
    _HwuhGangSwitched_Type()
)
hwuhGangSwitched.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhGangSwitched.setStatus("current")
_HwuhInstallDate_Type = DateAndTime
_HwuhInstallDate_Object = MibTableColumn
hwuhInstallDate = _HwuhInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 15),
    _HwuhInstallDate_Type()
)
hwuhInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhInstallDate.setStatus("current")
_HwuhLastErrorCode_Type = Gauge32
_HwuhLastErrorCode_Object = MibTableColumn
hwuhLastErrorCode = _HwuhLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 16),
    _HwuhLastErrorCode_Type()
)
hwuhLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhLastErrorCode.setStatus("current")
_HwuhName_Type = WtcsDisplayString
_HwuhName_Object = MibTableColumn
hwuhName = _HwuhName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 17),
    _HwuhName_Type()
)
hwuhName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhName.setStatus("current")


class _HwuhNumberOfConfigs_Type(Integer32):
    """Custom type hwuhNumberOfConfigs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhNumberOfConfigs_Type.__name__ = "Integer32"
_HwuhNumberOfConfigs_Object = MibTableColumn
hwuhNumberOfConfigs = _HwuhNumberOfConfigs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 18),
    _HwuhNumberOfConfigs_Type()
)
hwuhNumberOfConfigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhNumberOfConfigs.setStatus("current")


class _HwuhNumberOfPorts_Type(Integer32):
    """Custom type hwuhNumberOfPorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhNumberOfPorts_Type.__name__ = "Integer32"
_HwuhNumberOfPorts_Object = MibTableColumn
hwuhNumberOfPorts = _HwuhNumberOfPorts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 19),
    _HwuhNumberOfPorts_Type()
)
hwuhNumberOfPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhNumberOfPorts.setStatus("current")
_HwuhPNPDeviceID_Type = WtcsDisplayString
_HwuhPNPDeviceID_Object = MibTableColumn
hwuhPNPDeviceID = _HwuhPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 20),
    _HwuhPNPDeviceID_Type()
)
hwuhPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhPNPDeviceID.setStatus("current")
_HwuhPowerManagementCapabilities_Type = WtcsDisplayString
_HwuhPowerManagementCapabilities_Object = MibTableColumn
hwuhPowerManagementCapabilities = _HwuhPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 21),
    _HwuhPowerManagementCapabilities_Type()
)
hwuhPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhPowerManagementCapabilities.setStatus("current")
_HwuhPowerManagementSupported_Type = TruthValue
_HwuhPowerManagementSupported_Object = MibTableColumn
hwuhPowerManagementSupported = _HwuhPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 22),
    _HwuhPowerManagementSupported_Type()
)
hwuhPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhPowerManagementSupported.setStatus("current")


class _HwuhProtocolCode_Type(Integer32):
    """Custom type hwuhProtocolCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhProtocolCode_Type.__name__ = "Integer32"
_HwuhProtocolCode_Object = MibTableColumn
hwuhProtocolCode = _HwuhProtocolCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 23),
    _HwuhProtocolCode_Type()
)
hwuhProtocolCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhProtocolCode.setStatus("current")


class _HwuhStatus_Type(Integer32):
    """Custom type hwuhStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwuhStatus_Type.__name__ = "Integer32"
_HwuhStatus_Object = MibTableColumn
hwuhStatus = _HwuhStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 24),
    _HwuhStatus_Type()
)
hwuhStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhStatus.setStatus("current")


class _HwuhStatusInfo_Type(Integer32):
    """Custom type hwuhStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwuhStatusInfo_Type.__name__ = "Integer32"
_HwuhStatusInfo_Object = MibTableColumn
hwuhStatusInfo = _HwuhStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 25),
    _HwuhStatusInfo_Type()
)
hwuhStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhStatusInfo.setStatus("current")


class _HwuhSubclassCode_Type(Integer32):
    """Custom type hwuhSubclassCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwuhSubclassCode_Type.__name__ = "Integer32"
_HwuhSubclassCode_Object = MibTableColumn
hwuhSubclassCode = _HwuhSubclassCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 26),
    _HwuhSubclassCode_Type()
)
hwuhSubclassCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhSubclassCode.setStatus("current")
_HwuhSystemCreationClassName_Type = WtcsDisplayString
_HwuhSystemCreationClassName_Object = MibTableColumn
hwuhSystemCreationClassName = _HwuhSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 27),
    _HwuhSystemCreationClassName_Type()
)
hwuhSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhSystemCreationClassName.setStatus("current")
_HwuhSystemName_Type = WtcsDisplayString
_HwuhSystemName_Object = MibTableColumn
hwuhSystemName = _HwuhSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 28),
    _HwuhSystemName_Type()
)
hwuhSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhSystemName.setStatus("current")
_HwuhUSBVersion_Type = Integer32
_HwuhUSBVersion_Object = MibTableColumn
hwuhUSBVersion = _HwuhUSBVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 4, 34, 1, 29),
    _HwuhUSBVersion_Type()
)
hwuhUSBVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwuhUSBVersion.setStatus("current")
_WmiNetworkingDevice_ObjectIdentity = ObjectIdentity
wmiNetworkingDevice = _WmiNetworkingDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5)
)
if mibBuilder.loadTexts:
    wmiNetworkingDevice.setStatus("current")
_Win32NetworkAdapterTable_Object = MibTable
win32NetworkAdapterTable = _Win32NetworkAdapterTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1)
)
if mibBuilder.loadTexts:
    win32NetworkAdapterTable.setStatus("current")
_Win32NetworkAdapterEntry_Object = MibTableRow
win32NetworkAdapterEntry = _Win32NetworkAdapterEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1)
)
win32NetworkAdapterEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwnaIndex"),
)
if mibBuilder.loadTexts:
    win32NetworkAdapterEntry.setStatus("current")


class _HwnaIndex_Type(Integer32):
    """Custom type hwnaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwnaIndex_Type.__name__ = "Integer32"
_HwnaIndex_Object = MibTableColumn
hwnaIndex = _HwnaIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 1),
    _HwnaIndex_Type()
)
hwnaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaIndex.setStatus("current")
_HwnaAdapterType_Type = WtcsDisplayString
_HwnaAdapterType_Object = MibTableColumn
hwnaAdapterType = _HwnaAdapterType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 2),
    _HwnaAdapterType_Type()
)
hwnaAdapterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaAdapterType.setStatus("current")


class _HwnaAdapterTypeID_Type(Integer32):
    """Custom type hwnaAdapterTypeID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("arcnet", 6),
          ("arcnet8782", 7),
          ("atm", 8),
          ("bpc", 11),
          ("coWan", 12),
          ("ethernet8023", 0),
          ("ethernetUsingDIXHeaderFormat", 5),
          ("fiberDistributedDataInterface", 2),
          ("infraredWireless", 10),
          ("localTalk", 4),
          ("n1394", 13),
          ("tokenRing8025", 1),
          ("wideAreaNetwork", 3),
          ("wireless", 9))
    )


_HwnaAdapterTypeID_Type.__name__ = "Integer32"
_HwnaAdapterTypeID_Object = MibTableColumn
hwnaAdapterTypeID = _HwnaAdapterTypeID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 3),
    _HwnaAdapterTypeID_Type()
)
hwnaAdapterTypeID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaAdapterTypeID.setStatus("current")
_HwnaAutoSense_Type = TruthValue
_HwnaAutoSense_Object = MibTableColumn
hwnaAutoSense = _HwnaAutoSense_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 4),
    _HwnaAutoSense_Type()
)
hwnaAutoSense.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaAutoSense.setStatus("current")


class _HwnaAvailability_Type(Integer32):
    """Custom type hwnaAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notInstalled", 11),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwnaAvailability_Type.__name__ = "Integer32"
_HwnaAvailability_Object = MibTableColumn
hwnaAvailability = _HwnaAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 5),
    _HwnaAvailability_Type()
)
hwnaAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaAvailability.setStatus("current")
_HwnaCaption_Type = WtcsDisplayString
_HwnaCaption_Object = MibTableColumn
hwnaCaption = _HwnaCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 6),
    _HwnaCaption_Type()
)
hwnaCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaCaption.setStatus("current")


class _HwnaConfigManagerErrorCode_Type(Integer32):
    """Custom type hwnaConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwnaConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwnaConfigManagerErrorCode_Object = MibTableColumn
hwnaConfigManagerErrorCode = _HwnaConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 7),
    _HwnaConfigManagerErrorCode_Type()
)
hwnaConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaConfigManagerErrorCode.setStatus("current")
_HwnaConfigManagerUserConfig_Type = TruthValue
_HwnaConfigManagerUserConfig_Object = MibTableColumn
hwnaConfigManagerUserConfig = _HwnaConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 8),
    _HwnaConfigManagerUserConfig_Type()
)
hwnaConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaConfigManagerUserConfig.setStatus("current")


class _HwnaCreationClassName_Type(WtcsDisplayString):
    """Custom type hwnaCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwnaCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwnaCreationClassName_Object = MibTableColumn
hwnaCreationClassName = _HwnaCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 9),
    _HwnaCreationClassName_Type()
)
hwnaCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaCreationClassName.setStatus("current")
_HwnaDescription_Type = WtcsDisplayString
_HwnaDescription_Object = MibTableColumn
hwnaDescription = _HwnaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 10),
    _HwnaDescription_Type()
)
hwnaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaDescription.setStatus("current")
_HwnaDeviceID_Type = WtcsDisplayString
_HwnaDeviceID_Object = MibTableColumn
hwnaDeviceID = _HwnaDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 11),
    _HwnaDeviceID_Type()
)
hwnaDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaDeviceID.setStatus("current")
_HwnaErrorCleared_Type = TruthValue
_HwnaErrorCleared_Object = MibTableColumn
hwnaErrorCleared = _HwnaErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 12),
    _HwnaErrorCleared_Type()
)
hwnaErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaErrorCleared.setStatus("current")
_HwnaErrorDescription_Type = WtcsDisplayString
_HwnaErrorDescription_Object = MibTableColumn
hwnaErrorDescription = _HwnaErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 13),
    _HwnaErrorDescription_Type()
)
hwnaErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaErrorDescription.setStatus("current")
_HwnaRegistryIndex_Type = Gauge32
_HwnaRegistryIndex_Object = MibTableColumn
hwnaRegistryIndex = _HwnaRegistryIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 14),
    _HwnaRegistryIndex_Type()
)
hwnaRegistryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaRegistryIndex.setStatus("current")
_HwnaInstallDate_Type = DateAndTime
_HwnaInstallDate_Object = MibTableColumn
hwnaInstallDate = _HwnaInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 15),
    _HwnaInstallDate_Type()
)
hwnaInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaInstallDate.setStatus("current")
_HwnaInstalled_Type = TruthValue
_HwnaInstalled_Object = MibTableColumn
hwnaInstalled = _HwnaInstalled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 16),
    _HwnaInstalled_Type()
)
hwnaInstalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaInstalled.setStatus("current")
_HwnaInterfaceIndex_Type = Gauge32
_HwnaInterfaceIndex_Object = MibTableColumn
hwnaInterfaceIndex = _HwnaInterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 17),
    _HwnaInterfaceIndex_Type()
)
hwnaInterfaceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaInterfaceIndex.setStatus("current")
_HwnaLastErrorCode_Type = Gauge32
_HwnaLastErrorCode_Object = MibTableColumn
hwnaLastErrorCode = _HwnaLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 18),
    _HwnaLastErrorCode_Type()
)
hwnaLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaLastErrorCode.setStatus("current")
_HwnaMACAddress_Type = WtcsDisplayString
_HwnaMACAddress_Object = MibTableColumn
hwnaMACAddress = _HwnaMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 19),
    _HwnaMACAddress_Type()
)
hwnaMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaMACAddress.setStatus("current")
_HwnaManufacturer_Type = WtcsDisplayString
_HwnaManufacturer_Object = MibTableColumn
hwnaManufacturer = _HwnaManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 20),
    _HwnaManufacturer_Type()
)
hwnaManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaManufacturer.setStatus("current")
_HwnaMaxNumberControlled_Type = Gauge32
_HwnaMaxNumberControlled_Object = MibTableColumn
hwnaMaxNumberControlled = _HwnaMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 21),
    _HwnaMaxNumberControlled_Type()
)
hwnaMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaMaxNumberControlled.setStatus("current")
_HwnaMaxSpeed_Type = Gauge32
_HwnaMaxSpeed_Object = MibTableColumn
hwnaMaxSpeed = _HwnaMaxSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 22),
    _HwnaMaxSpeed_Type()
)
hwnaMaxSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaMaxSpeed.setStatus("current")
_HwnaName_Type = WtcsDisplayString
_HwnaName_Object = MibTableColumn
hwnaName = _HwnaName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 23),
    _HwnaName_Type()
)
hwnaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaName.setStatus("current")
_HwnaNetConnectionID_Type = WtcsDisplayString
_HwnaNetConnectionID_Object = MibTableColumn
hwnaNetConnectionID = _HwnaNetConnectionID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 24),
    _HwnaNetConnectionID_Type()
)
hwnaNetConnectionID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaNetConnectionID.setStatus("current")


class _HwnaNetConnectionStatus_Type(Integer32):
    """Custom type hwnaNetConnectionStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("authenticating", 8),
          ("authenticationFailed", 10),
          ("authenticationSucceeded", 9),
          ("connected", 2),
          ("connecting", 1),
          ("disconnected", 0),
          ("disconnecting", 3),
          ("hardwareDisabled", 5),
          ("hardwareMalfunction", 6),
          ("hardwareNotPresent", 4),
          ("mediaDisconnected", 7))
    )


_HwnaNetConnectionStatus_Type.__name__ = "Integer32"
_HwnaNetConnectionStatus_Object = MibTableColumn
hwnaNetConnectionStatus = _HwnaNetConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 25),
    _HwnaNetConnectionStatus_Type()
)
hwnaNetConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaNetConnectionStatus.setStatus("current")
_HwnaNetworkAddresses_Type = WtcsDisplayString
_HwnaNetworkAddresses_Object = MibTableColumn
hwnaNetworkAddresses = _HwnaNetworkAddresses_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 26),
    _HwnaNetworkAddresses_Type()
)
hwnaNetworkAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaNetworkAddresses.setStatus("current")
_HwnaPermanentAddress_Type = WtcsDisplayString
_HwnaPermanentAddress_Object = MibTableColumn
hwnaPermanentAddress = _HwnaPermanentAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 27),
    _HwnaPermanentAddress_Type()
)
hwnaPermanentAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaPermanentAddress.setStatus("current")
_HwnaPNPDeviceID_Type = WtcsDisplayString
_HwnaPNPDeviceID_Object = MibTableColumn
hwnaPNPDeviceID = _HwnaPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 28),
    _HwnaPNPDeviceID_Type()
)
hwnaPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaPNPDeviceID.setStatus("current")
_HwnaPowerManagementCapabilities_Type = WtcsDisplayString
_HwnaPowerManagementCapabilities_Object = MibTableColumn
hwnaPowerManagementCapabilities = _HwnaPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 29),
    _HwnaPowerManagementCapabilities_Type()
)
hwnaPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaPowerManagementCapabilities.setStatus("current")
_HwnaPowerManagementSupported_Type = TruthValue
_HwnaPowerManagementSupported_Object = MibTableColumn
hwnaPowerManagementSupported = _HwnaPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 30),
    _HwnaPowerManagementSupported_Type()
)
hwnaPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaPowerManagementSupported.setStatus("current")
_HwnaProductName_Type = WtcsDisplayString
_HwnaProductName_Object = MibTableColumn
hwnaProductName = _HwnaProductName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 31),
    _HwnaProductName_Type()
)
hwnaProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaProductName.setStatus("current")
_HwnaServiceName_Type = WtcsDisplayString
_HwnaServiceName_Object = MibTableColumn
hwnaServiceName = _HwnaServiceName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 32),
    _HwnaServiceName_Type()
)
hwnaServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaServiceName.setStatus("current")
_HwnaSpeed_Type = Gauge32
_HwnaSpeed_Object = MibTableColumn
hwnaSpeed = _HwnaSpeed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 33),
    _HwnaSpeed_Type()
)
hwnaSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaSpeed.setStatus("current")


class _HwnaStatus_Type(Integer32):
    """Custom type hwnaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("unknown", 4))
    )


_HwnaStatus_Type.__name__ = "Integer32"
_HwnaStatus_Object = MibTableColumn
hwnaStatus = _HwnaStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 34),
    _HwnaStatus_Type()
)
hwnaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaStatus.setStatus("current")


class _HwnaStatusInfo_Type(Integer32):
    """Custom type hwnaStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwnaStatusInfo_Type.__name__ = "Integer32"
_HwnaStatusInfo_Object = MibTableColumn
hwnaStatusInfo = _HwnaStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 35),
    _HwnaStatusInfo_Type()
)
hwnaStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaStatusInfo.setStatus("current")
_HwnaSystemCreationClassName_Type = WtcsDisplayString
_HwnaSystemCreationClassName_Object = MibTableColumn
hwnaSystemCreationClassName = _HwnaSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 36),
    _HwnaSystemCreationClassName_Type()
)
hwnaSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaSystemCreationClassName.setStatus("current")
_HwnaSystemName_Type = WtcsDisplayString
_HwnaSystemName_Object = MibTableColumn
hwnaSystemName = _HwnaSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 37),
    _HwnaSystemName_Type()
)
hwnaSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaSystemName.setStatus("current")
_HwnaTimeOfLastReset_Type = DateAndTime
_HwnaTimeOfLastReset_Object = MibTableColumn
hwnaTimeOfLastReset = _HwnaTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 1, 1, 38),
    _HwnaTimeOfLastReset_Type()
)
hwnaTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnaTimeOfLastReset.setStatus("current")
_Win32NetworkAdapterConfigTable_Object = MibTable
win32NetworkAdapterConfigTable = _Win32NetworkAdapterConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2)
)
if mibBuilder.loadTexts:
    win32NetworkAdapterConfigTable.setStatus("current")
_Win32NetworkAdapterConfigEntry_Object = MibTableRow
win32NetworkAdapterConfigEntry = _Win32NetworkAdapterConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1)
)
win32NetworkAdapterConfigEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwnacIndex"),
)
if mibBuilder.loadTexts:
    win32NetworkAdapterConfigEntry.setStatus("current")


class _HwnacIndex_Type(Integer32):
    """Custom type hwnacIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwnacIndex_Type.__name__ = "Integer32"
_HwnacIndex_Object = MibTableColumn
hwnacIndex = _HwnacIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 1),
    _HwnacIndex_Type()
)
hwnacIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIndex.setStatus("current")
_HwnacArpAlwaysSourceRoute_Type = TruthValue
_HwnacArpAlwaysSourceRoute_Object = MibTableColumn
hwnacArpAlwaysSourceRoute = _HwnacArpAlwaysSourceRoute_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 2),
    _HwnacArpAlwaysSourceRoute_Type()
)
hwnacArpAlwaysSourceRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacArpAlwaysSourceRoute.setStatus("current")
_HwnacArpUseEtherSNAP_Type = TruthValue
_HwnacArpUseEtherSNAP_Object = MibTableColumn
hwnacArpUseEtherSNAP = _HwnacArpUseEtherSNAP_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 3),
    _HwnacArpUseEtherSNAP_Type()
)
hwnacArpUseEtherSNAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacArpUseEtherSNAP.setStatus("current")
_HwnacCaption_Type = WtcsDisplayString
_HwnacCaption_Object = MibTableColumn
hwnacCaption = _HwnacCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 4),
    _HwnacCaption_Type()
)
hwnacCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacCaption.setStatus("current")
_HwnacDatabasePath_Type = WtcsDisplayString
_HwnacDatabasePath_Object = MibTableColumn
hwnacDatabasePath = _HwnacDatabasePath_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 5),
    _HwnacDatabasePath_Type()
)
hwnacDatabasePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDatabasePath.setStatus("current")
_HwnacDeadGWDetectEnabled_Type = TruthValue
_HwnacDeadGWDetectEnabled_Object = MibTableColumn
hwnacDeadGWDetectEnabled = _HwnacDeadGWDetectEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 6),
    _HwnacDeadGWDetectEnabled_Type()
)
hwnacDeadGWDetectEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDeadGWDetectEnabled.setStatus("current")
_HwnacDefaultIPGateway_Type = WtcsDisplayString
_HwnacDefaultIPGateway_Object = MibTableColumn
hwnacDefaultIPGateway = _HwnacDefaultIPGateway_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 7),
    _HwnacDefaultIPGateway_Type()
)
hwnacDefaultIPGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDefaultIPGateway.setStatus("current")


class _HwnacDefaultTOS_Type(Integer32):
    """Custom type hwnacDefaultTOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwnacDefaultTOS_Type.__name__ = "Integer32"
_HwnacDefaultTOS_Object = MibTableColumn
hwnacDefaultTOS = _HwnacDefaultTOS_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 8),
    _HwnacDefaultTOS_Type()
)
hwnacDefaultTOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDefaultTOS.setStatus("current")


class _HwnacDefaultTTL_Type(Integer32):
    """Custom type hwnacDefaultTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwnacDefaultTTL_Type.__name__ = "Integer32"
_HwnacDefaultTTL_Object = MibTableColumn
hwnacDefaultTTL = _HwnacDefaultTTL_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 9),
    _HwnacDefaultTTL_Type()
)
hwnacDefaultTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDefaultTTL.setStatus("current")
_HwnacDescription_Type = WtcsDisplayString
_HwnacDescription_Object = MibTableColumn
hwnacDescription = _HwnacDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 10),
    _HwnacDescription_Type()
)
hwnacDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDescription.setStatus("current")
_HwnacDHCPEnabled_Type = TruthValue
_HwnacDHCPEnabled_Object = MibTableColumn
hwnacDHCPEnabled = _HwnacDHCPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 11),
    _HwnacDHCPEnabled_Type()
)
hwnacDHCPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDHCPEnabled.setStatus("current")
_HwnacDHCPLeaseExpires_Type = DateAndTime
_HwnacDHCPLeaseExpires_Object = MibTableColumn
hwnacDHCPLeaseExpires = _HwnacDHCPLeaseExpires_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 12),
    _HwnacDHCPLeaseExpires_Type()
)
hwnacDHCPLeaseExpires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDHCPLeaseExpires.setStatus("current")
_HwnacDHCPLeaseObtained_Type = DateAndTime
_HwnacDHCPLeaseObtained_Object = MibTableColumn
hwnacDHCPLeaseObtained = _HwnacDHCPLeaseObtained_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 13),
    _HwnacDHCPLeaseObtained_Type()
)
hwnacDHCPLeaseObtained.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDHCPLeaseObtained.setStatus("current")
_HwnacDHCPServer_Type = WtcsDisplayString
_HwnacDHCPServer_Object = MibTableColumn
hwnacDHCPServer = _HwnacDHCPServer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 14),
    _HwnacDHCPServer_Type()
)
hwnacDHCPServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDHCPServer.setStatus("current")
_HwnacDNSDomain_Type = WtcsDisplayString
_HwnacDNSDomain_Object = MibTableColumn
hwnacDNSDomain = _HwnacDNSDomain_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 15),
    _HwnacDNSDomain_Type()
)
hwnacDNSDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDNSDomain.setStatus("current")
_HwnacDNSDomainSuffixSearchOrder_Type = WtcsDisplayString
_HwnacDNSDomainSuffixSearchOrder_Object = MibTableColumn
hwnacDNSDomainSuffixSearchOrder = _HwnacDNSDomainSuffixSearchOrder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 16),
    _HwnacDNSDomainSuffixSearchOrder_Type()
)
hwnacDNSDomainSuffixSearchOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDNSDomainSuffixSearchOrder.setStatus("current")
_HwnacDNSEnabledForWINSResolution_Type = TruthValue
_HwnacDNSEnabledForWINSResolution_Object = MibTableColumn
hwnacDNSEnabledForWINSResolution = _HwnacDNSEnabledForWINSResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 17),
    _HwnacDNSEnabledForWINSResolution_Type()
)
hwnacDNSEnabledForWINSResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDNSEnabledForWINSResolution.setStatus("current")
_HwnacDNSHostName_Type = WtcsDisplayString
_HwnacDNSHostName_Object = MibTableColumn
hwnacDNSHostName = _HwnacDNSHostName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 18),
    _HwnacDNSHostName_Type()
)
hwnacDNSHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDNSHostName.setStatus("current")
_HwnacDNSServerSearchOrder_Type = WtcsDisplayString
_HwnacDNSServerSearchOrder_Object = MibTableColumn
hwnacDNSServerSearchOrder = _HwnacDNSServerSearchOrder_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 19),
    _HwnacDNSServerSearchOrder_Type()
)
hwnacDNSServerSearchOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDNSServerSearchOrder.setStatus("current")
_HwnacDomainDNSRegistrationEnable_Type = TruthValue
_HwnacDomainDNSRegistrationEnable_Object = MibTableColumn
hwnacDomainDNSRegistrationEnable = _HwnacDomainDNSRegistrationEnable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 20),
    _HwnacDomainDNSRegistrationEnable_Type()
)
hwnacDomainDNSRegistrationEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacDomainDNSRegistrationEnable.setStatus("current")
_HwnacForwardBufferMemory_Type = Gauge32
_HwnacForwardBufferMemory_Object = MibTableColumn
hwnacForwardBufferMemory = _HwnacForwardBufferMemory_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 21),
    _HwnacForwardBufferMemory_Type()
)
hwnacForwardBufferMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacForwardBufferMemory.setStatus("current")
if mibBuilder.loadTexts:
    hwnacForwardBufferMemory.setUnits("Bytes")
_HwnacFullDNSRegistrationEnabled_Type = TruthValue
_HwnacFullDNSRegistrationEnabled_Object = MibTableColumn
hwnacFullDNSRegistrationEnabled = _HwnacFullDNSRegistrationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 22),
    _HwnacFullDNSRegistrationEnabled_Type()
)
hwnacFullDNSRegistrationEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacFullDNSRegistrationEnabled.setStatus("current")
_HwnacGatewayCostMetric_Type = WtcsDisplayString
_HwnacGatewayCostMetric_Object = MibTableColumn
hwnacGatewayCostMetric = _HwnacGatewayCostMetric_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 23),
    _HwnacGatewayCostMetric_Type()
)
hwnacGatewayCostMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacGatewayCostMetric.setStatus("current")


class _HwnacIGMPLevel_Type(Integer32):
    """Custom type hwnacIGMPLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipIGMPMulticast", 2),
          ("ipMulticast", 1),
          ("noMulticast", 0))
    )


_HwnacIGMPLevel_Type.__name__ = "Integer32"
_HwnacIGMPLevel_Object = MibTableColumn
hwnacIGMPLevel = _HwnacIGMPLevel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 24),
    _HwnacIGMPLevel_Type()
)
hwnacIGMPLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIGMPLevel.setStatus("current")
_HwnacConfigurationIndex_Type = Gauge32
_HwnacConfigurationIndex_Object = MibTableColumn
hwnacConfigurationIndex = _HwnacConfigurationIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 25),
    _HwnacConfigurationIndex_Type()
)
hwnacConfigurationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacConfigurationIndex.setStatus("current")
_HwnacInterfaceIndex_Type = Gauge32
_HwnacInterfaceIndex_Object = MibTableColumn
hwnacInterfaceIndex = _HwnacInterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 26),
    _HwnacInterfaceIndex_Type()
)
hwnacInterfaceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacInterfaceIndex.setStatus("current")
_HwnacIPAddress_Type = WtcsDisplayString
_HwnacIPAddress_Object = MibTableColumn
hwnacIPAddress = _HwnacIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 27),
    _HwnacIPAddress_Type()
)
hwnacIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPAddress.setStatus("current")
_HwnacIPConnectionMetric_Type = Gauge32
_HwnacIPConnectionMetric_Object = MibTableColumn
hwnacIPConnectionMetric = _HwnacIPConnectionMetric_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 28),
    _HwnacIPConnectionMetric_Type()
)
hwnacIPConnectionMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPConnectionMetric.setStatus("current")
_HwnacIPEnabled_Type = TruthValue
_HwnacIPEnabled_Object = MibTableColumn
hwnacIPEnabled = _HwnacIPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 29),
    _HwnacIPEnabled_Type()
)
hwnacIPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPEnabled.setStatus("current")
_HwnacIPFilterSecurityEnabled_Type = TruthValue
_HwnacIPFilterSecurityEnabled_Object = MibTableColumn
hwnacIPFilterSecurityEnabled = _HwnacIPFilterSecurityEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 30),
    _HwnacIPFilterSecurityEnabled_Type()
)
hwnacIPFilterSecurityEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPFilterSecurityEnabled.setStatus("current")
_HwnacIPPortSecurityEnabled_Type = TruthValue
_HwnacIPPortSecurityEnabled_Object = MibTableColumn
hwnacIPPortSecurityEnabled = _HwnacIPPortSecurityEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 31),
    _HwnacIPPortSecurityEnabled_Type()
)
hwnacIPPortSecurityEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPPortSecurityEnabled.setStatus("current")
_HwnacIPSecPermitIPProtocols_Type = WtcsDisplayString
_HwnacIPSecPermitIPProtocols_Object = MibTableColumn
hwnacIPSecPermitIPProtocols = _HwnacIPSecPermitIPProtocols_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 32),
    _HwnacIPSecPermitIPProtocols_Type()
)
hwnacIPSecPermitIPProtocols.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPSecPermitIPProtocols.setStatus("current")
_HwnacIPSecPermitTCPPorts_Type = WtcsDisplayString
_HwnacIPSecPermitTCPPorts_Object = MibTableColumn
hwnacIPSecPermitTCPPorts = _HwnacIPSecPermitTCPPorts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 33),
    _HwnacIPSecPermitTCPPorts_Type()
)
hwnacIPSecPermitTCPPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPSecPermitTCPPorts.setStatus("current")
_HwnacIPSecPermitUDPPorts_Type = WtcsDisplayString
_HwnacIPSecPermitUDPPorts_Object = MibTableColumn
hwnacIPSecPermitUDPPorts = _HwnacIPSecPermitUDPPorts_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 34),
    _HwnacIPSecPermitUDPPorts_Type()
)
hwnacIPSecPermitUDPPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPSecPermitUDPPorts.setStatus("current")
_HwnacIPSubnet_Type = WtcsDisplayString
_HwnacIPSubnet_Object = MibTableColumn
hwnacIPSubnet = _HwnacIPSubnet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 35),
    _HwnacIPSubnet_Type()
)
hwnacIPSubnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPSubnet.setStatus("current")
_HwnacIPUseZeroBroadcast_Type = TruthValue
_HwnacIPUseZeroBroadcast_Object = MibTableColumn
hwnacIPUseZeroBroadcast = _HwnacIPUseZeroBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 36),
    _HwnacIPUseZeroBroadcast_Type()
)
hwnacIPUseZeroBroadcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPUseZeroBroadcast.setStatus("current")
_HwnacIPXAddress_Type = WtcsDisplayString
_HwnacIPXAddress_Object = MibTableColumn
hwnacIPXAddress = _HwnacIPXAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 37),
    _HwnacIPXAddress_Type()
)
hwnacIPXAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPXAddress.setStatus("current")
_HwnacIPXEnabled_Type = TruthValue
_HwnacIPXEnabled_Object = MibTableColumn
hwnacIPXEnabled = _HwnacIPXEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 38),
    _HwnacIPXEnabled_Type()
)
hwnacIPXEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPXEnabled.setStatus("current")
_HwnacIPXFrameType_Type = WtcsDisplayString
_HwnacIPXFrameType_Object = MibTableColumn
hwnacIPXFrameType = _HwnacIPXFrameType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 39),
    _HwnacIPXFrameType_Type()
)
hwnacIPXFrameType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPXFrameType.setStatus("current")


class _HwnacIPXMediaType_Type(Integer32):
    """Custom type hwnacIPXMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              8)
        )
    )
    namedValues = NamedValues(
        *(("arcnet", 8),
          ("ethernet", 1),
          ("fddi", 3),
          ("tokenRing", 2))
    )


_HwnacIPXMediaType_Type.__name__ = "Integer32"
_HwnacIPXMediaType_Object = MibTableColumn
hwnacIPXMediaType = _HwnacIPXMediaType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 40),
    _HwnacIPXMediaType_Type()
)
hwnacIPXMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPXMediaType.setStatus("current")
_HwnacIPXNetworkNumber_Type = WtcsDisplayString
_HwnacIPXNetworkNumber_Object = MibTableColumn
hwnacIPXNetworkNumber = _HwnacIPXNetworkNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 41),
    _HwnacIPXNetworkNumber_Type()
)
hwnacIPXNetworkNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPXNetworkNumber.setStatus("current")
_HwnacIPXVirtualNetNumber_Type = WtcsDisplayString
_HwnacIPXVirtualNetNumber_Object = MibTableColumn
hwnacIPXVirtualNetNumber = _HwnacIPXVirtualNetNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 42),
    _HwnacIPXVirtualNetNumber_Type()
)
hwnacIPXVirtualNetNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacIPXVirtualNetNumber.setStatus("current")
_HwnacKeepAliveInterval_Type = Gauge32
_HwnacKeepAliveInterval_Object = MibTableColumn
hwnacKeepAliveInterval = _HwnacKeepAliveInterval_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 43),
    _HwnacKeepAliveInterval_Type()
)
hwnacKeepAliveInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacKeepAliveInterval.setStatus("current")
if mibBuilder.loadTexts:
    hwnacKeepAliveInterval.setUnits("Milliseconds")
_HwnacKeepAliveTime_Type = Gauge32
_HwnacKeepAliveTime_Object = MibTableColumn
hwnacKeepAliveTime = _HwnacKeepAliveTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 44),
    _HwnacKeepAliveTime_Type()
)
hwnacKeepAliveTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacKeepAliveTime.setStatus("current")
if mibBuilder.loadTexts:
    hwnacKeepAliveTime.setUnits("Milliseconds")
_HwnacMACAddress_Type = WtcsDisplayString
_HwnacMACAddress_Object = MibTableColumn
hwnacMACAddress = _HwnacMACAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 45),
    _HwnacMACAddress_Type()
)
hwnacMACAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacMACAddress.setStatus("current")
_HwnacMTU_Type = Gauge32
_HwnacMTU_Object = MibTableColumn
hwnacMTU = _HwnacMTU_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 46),
    _HwnacMTU_Type()
)
hwnacMTU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacMTU.setStatus("current")
if mibBuilder.loadTexts:
    hwnacMTU.setUnits("Bytes")
_HwnacNumForwardPackets_Type = Gauge32
_HwnacNumForwardPackets_Object = MibTableColumn
hwnacNumForwardPackets = _HwnacNumForwardPackets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 47),
    _HwnacNumForwardPackets_Type()
)
hwnacNumForwardPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacNumForwardPackets.setStatus("current")
_HwnacPMTUBHDetectEnabled_Type = TruthValue
_HwnacPMTUBHDetectEnabled_Object = MibTableColumn
hwnacPMTUBHDetectEnabled = _HwnacPMTUBHDetectEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 48),
    _HwnacPMTUBHDetectEnabled_Type()
)
hwnacPMTUBHDetectEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacPMTUBHDetectEnabled.setStatus("current")
_HwnacPMTUDiscoveryEnabled_Type = TruthValue
_HwnacPMTUDiscoveryEnabled_Object = MibTableColumn
hwnacPMTUDiscoveryEnabled = _HwnacPMTUDiscoveryEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 49),
    _HwnacPMTUDiscoveryEnabled_Type()
)
hwnacPMTUDiscoveryEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacPMTUDiscoveryEnabled.setStatus("current")
_HwnacServiceName_Type = WtcsDisplayString
_HwnacServiceName_Object = MibTableColumn
hwnacServiceName = _HwnacServiceName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 50),
    _HwnacServiceName_Type()
)
hwnacServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacServiceName.setStatus("current")
_HwnacSettingID_Type = WtcsDisplayString
_HwnacSettingID_Object = MibTableColumn
hwnacSettingID = _HwnacSettingID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 51),
    _HwnacSettingID_Type()
)
hwnacSettingID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacSettingID.setStatus("current")


class _HwnacTcpipNetbiosOptions_Type(Integer32):
    """Custom type hwnacTcpipNetbiosOptions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("n0x0EnableNetbiosViaDhcp", 0),
          ("n0x1EnableNetbios", 1),
          ("n0x2DisableNetbios", 2))
    )


_HwnacTcpipNetbiosOptions_Type.__name__ = "Integer32"
_HwnacTcpipNetbiosOptions_Object = MibTableColumn
hwnacTcpipNetbiosOptions = _HwnacTcpipNetbiosOptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 52),
    _HwnacTcpipNetbiosOptions_Type()
)
hwnacTcpipNetbiosOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacTcpipNetbiosOptions.setStatus("current")
_HwnacTcpMaxConnectRetransmission_Type = Gauge32
_HwnacTcpMaxConnectRetransmission_Object = MibTableColumn
hwnacTcpMaxConnectRetransmission = _HwnacTcpMaxConnectRetransmission_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 53),
    _HwnacTcpMaxConnectRetransmission_Type()
)
hwnacTcpMaxConnectRetransmission.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacTcpMaxConnectRetransmission.setStatus("current")
_HwnacTcpMaxDataRetransmissions_Type = Gauge32
_HwnacTcpMaxDataRetransmissions_Object = MibTableColumn
hwnacTcpMaxDataRetransmissions = _HwnacTcpMaxDataRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 54),
    _HwnacTcpMaxDataRetransmissions_Type()
)
hwnacTcpMaxDataRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacTcpMaxDataRetransmissions.setStatus("current")
_HwnacTcpNumConnections_Type = Gauge32
_HwnacTcpNumConnections_Object = MibTableColumn
hwnacTcpNumConnections = _HwnacTcpNumConnections_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 55),
    _HwnacTcpNumConnections_Type()
)
hwnacTcpNumConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacTcpNumConnections.setStatus("current")
_HwnacTcpUseRFC1122UrgentPointer_Type = TruthValue
_HwnacTcpUseRFC1122UrgentPointer_Object = MibTableColumn
hwnacTcpUseRFC1122UrgentPointer = _HwnacTcpUseRFC1122UrgentPointer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 56),
    _HwnacTcpUseRFC1122UrgentPointer_Type()
)
hwnacTcpUseRFC1122UrgentPointer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacTcpUseRFC1122UrgentPointer.setStatus("current")
_HwnacTcpWindowSize_Type = Integer32
_HwnacTcpWindowSize_Object = MibTableColumn
hwnacTcpWindowSize = _HwnacTcpWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 57),
    _HwnacTcpWindowSize_Type()
)
hwnacTcpWindowSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacTcpWindowSize.setStatus("current")
if mibBuilder.loadTexts:
    hwnacTcpWindowSize.setUnits("Bytes")
_HwnacWINSEnableLMHostsLookup_Type = TruthValue
_HwnacWINSEnableLMHostsLookup_Object = MibTableColumn
hwnacWINSEnableLMHostsLookup = _HwnacWINSEnableLMHostsLookup_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 58),
    _HwnacWINSEnableLMHostsLookup_Type()
)
hwnacWINSEnableLMHostsLookup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacWINSEnableLMHostsLookup.setStatus("current")
_HwnacWINSHostLookupFile_Type = WtcsDisplayString
_HwnacWINSHostLookupFile_Object = MibTableColumn
hwnacWINSHostLookupFile = _HwnacWINSHostLookupFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 59),
    _HwnacWINSHostLookupFile_Type()
)
hwnacWINSHostLookupFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacWINSHostLookupFile.setStatus("current")
_HwnacWINSPrimaryServer_Type = WtcsDisplayString
_HwnacWINSPrimaryServer_Object = MibTableColumn
hwnacWINSPrimaryServer = _HwnacWINSPrimaryServer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 60),
    _HwnacWINSPrimaryServer_Type()
)
hwnacWINSPrimaryServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacWINSPrimaryServer.setStatus("current")
_HwnacWINSScopeID_Type = WtcsDisplayString
_HwnacWINSScopeID_Object = MibTableColumn
hwnacWINSScopeID = _HwnacWINSScopeID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 61),
    _HwnacWINSScopeID_Type()
)
hwnacWINSScopeID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacWINSScopeID.setStatus("current")
_HwnacWINSSecondaryServer_Type = WtcsDisplayString
_HwnacWINSSecondaryServer_Object = MibTableColumn
hwnacWINSSecondaryServer = _HwnacWINSSecondaryServer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 5, 2, 1, 62),
    _HwnacWINSSecondaryServer_Type()
)
hwnacWINSSecondaryServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwnacWINSSecondaryServer.setStatus("current")
_WmiPower_ObjectIdentity = ObjectIdentity
wmiPower = _WmiPower_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6)
)
if mibBuilder.loadTexts:
    wmiPower.setStatus("current")
_Win32BatteryTable_Object = MibTable
win32BatteryTable = _Win32BatteryTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1)
)
if mibBuilder.loadTexts:
    win32BatteryTable.setStatus("current")
_Win32BatteryEntry_Object = MibTableRow
win32BatteryEntry = _Win32BatteryEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1)
)
win32BatteryEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwbaIndex"),
)
if mibBuilder.loadTexts:
    win32BatteryEntry.setStatus("current")


class _HwbaIndex_Type(Integer32):
    """Custom type hwbaIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwbaIndex_Type.__name__ = "Integer32"
_HwbaIndex_Object = MibTableColumn
hwbaIndex = _HwbaIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 1),
    _HwbaIndex_Type()
)
hwbaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaIndex.setStatus("current")


class _HwbaAvailability_Type(Integer32):
    """Custom type hwbaAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwbaAvailability_Type.__name__ = "Integer32"
_HwbaAvailability_Object = MibTableColumn
hwbaAvailability = _HwbaAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 2),
    _HwbaAvailability_Type()
)
hwbaAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaAvailability.setStatus("current")
_HwbaBatteryRechargeTime_Type = Gauge32
_HwbaBatteryRechargeTime_Object = MibTableColumn
hwbaBatteryRechargeTime = _HwbaBatteryRechargeTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 3),
    _HwbaBatteryRechargeTime_Type()
)
hwbaBatteryRechargeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaBatteryRechargeTime.setStatus("current")
if mibBuilder.loadTexts:
    hwbaBatteryRechargeTime.setUnits("Minutes")


class _HwbaBatteryStatus_Type(Integer32):
    """Custom type hwbaBatteryStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("charging", 6),
          ("chargingAndCritical", 9),
          ("chargingAndHigh", 7),
          ("chargingAndLow", 8),
          ("critical", 5),
          ("fullyCharged", 3),
          ("low", 4),
          ("other", 1),
          ("partiallyCharged", 11),
          ("undefined", 10),
          ("unknown", 2))
    )


_HwbaBatteryStatus_Type.__name__ = "Integer32"
_HwbaBatteryStatus_Object = MibTableColumn
hwbaBatteryStatus = _HwbaBatteryStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 4),
    _HwbaBatteryStatus_Type()
)
hwbaBatteryStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaBatteryStatus.setStatus("current")
_HwbaCaption_Type = WtcsDisplayString
_HwbaCaption_Object = MibTableColumn
hwbaCaption = _HwbaCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 5),
    _HwbaCaption_Type()
)
hwbaCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaCaption.setStatus("current")


class _HwbaChemistry_Type(Integer32):
    """Custom type hwbaChemistry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("leadAcid", 3),
          ("lithiumPolymer", 8),
          ("lithiumion", 6),
          ("nickelCadmium", 4),
          ("nickelMetalHydride", 5),
          ("other", 1),
          ("unknown", 2),
          ("zincAir", 7))
    )


_HwbaChemistry_Type.__name__ = "Integer32"
_HwbaChemistry_Object = MibTableColumn
hwbaChemistry = _HwbaChemistry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 6),
    _HwbaChemistry_Type()
)
hwbaChemistry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaChemistry.setStatus("current")


class _HwbaConfigManagerErrorCode_Type(Integer32):
    """Custom type hwbaConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwbaConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwbaConfigManagerErrorCode_Object = MibTableColumn
hwbaConfigManagerErrorCode = _HwbaConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 7),
    _HwbaConfigManagerErrorCode_Type()
)
hwbaConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaConfigManagerErrorCode.setStatus("current")
_HwbaConfigManagerUserConfig_Type = TruthValue
_HwbaConfigManagerUserConfig_Object = MibTableColumn
hwbaConfigManagerUserConfig = _HwbaConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 8),
    _HwbaConfigManagerUserConfig_Type()
)
hwbaConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaConfigManagerUserConfig.setStatus("current")


class _HwbaCreationClassName_Type(WtcsDisplayString):
    """Custom type hwbaCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwbaCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwbaCreationClassName_Object = MibTableColumn
hwbaCreationClassName = _HwbaCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 9),
    _HwbaCreationClassName_Type()
)
hwbaCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaCreationClassName.setStatus("current")
_HwbaDescription_Type = WtcsDisplayString
_HwbaDescription_Object = MibTableColumn
hwbaDescription = _HwbaDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 10),
    _HwbaDescription_Type()
)
hwbaDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaDescription.setStatus("current")
_HwbaDesignCapacity_Type = Gauge32
_HwbaDesignCapacity_Object = MibTableColumn
hwbaDesignCapacity = _HwbaDesignCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 11),
    _HwbaDesignCapacity_Type()
)
hwbaDesignCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaDesignCapacity.setStatus("current")
_HwbaDesignVoltage_Type = Gauge32
_HwbaDesignVoltage_Object = MibTableColumn
hwbaDesignVoltage = _HwbaDesignVoltage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 12),
    _HwbaDesignVoltage_Type()
)
hwbaDesignVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaDesignVoltage.setStatus("current")
_HwbaDeviceID_Type = WtcsDisplayString
_HwbaDeviceID_Object = MibTableColumn
hwbaDeviceID = _HwbaDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 13),
    _HwbaDeviceID_Type()
)
hwbaDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaDeviceID.setStatus("current")
_HwbaErrorCleared_Type = TruthValue
_HwbaErrorCleared_Object = MibTableColumn
hwbaErrorCleared = _HwbaErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 14),
    _HwbaErrorCleared_Type()
)
hwbaErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaErrorCleared.setStatus("current")
_HwbaErrorDescription_Type = WtcsDisplayString
_HwbaErrorDescription_Object = MibTableColumn
hwbaErrorDescription = _HwbaErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 15),
    _HwbaErrorDescription_Type()
)
hwbaErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaErrorDescription.setStatus("current")
_HwbaEstimatedChargeRemaining_Type = Integer32
_HwbaEstimatedChargeRemaining_Object = MibTableColumn
hwbaEstimatedChargeRemaining = _HwbaEstimatedChargeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 16),
    _HwbaEstimatedChargeRemaining_Type()
)
hwbaEstimatedChargeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaEstimatedChargeRemaining.setStatus("current")
_HwbaEstimatedRunTime_Type = Gauge32
_HwbaEstimatedRunTime_Object = MibTableColumn
hwbaEstimatedRunTime = _HwbaEstimatedRunTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 17),
    _HwbaEstimatedRunTime_Type()
)
hwbaEstimatedRunTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaEstimatedRunTime.setStatus("current")
_HwbaExpectedBatteryLife_Type = Gauge32
_HwbaExpectedBatteryLife_Object = MibTableColumn
hwbaExpectedBatteryLife = _HwbaExpectedBatteryLife_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 18),
    _HwbaExpectedBatteryLife_Type()
)
hwbaExpectedBatteryLife.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaExpectedBatteryLife.setStatus("current")
if mibBuilder.loadTexts:
    hwbaExpectedBatteryLife.setUnits("Minutes")
_HwbaExpectedLife_Type = Gauge32
_HwbaExpectedLife_Object = MibTableColumn
hwbaExpectedLife = _HwbaExpectedLife_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 19),
    _HwbaExpectedLife_Type()
)
hwbaExpectedLife.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaExpectedLife.setStatus("current")
_HwbaFullChargeCapacity_Type = Gauge32
_HwbaFullChargeCapacity_Object = MibTableColumn
hwbaFullChargeCapacity = _HwbaFullChargeCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 20),
    _HwbaFullChargeCapacity_Type()
)
hwbaFullChargeCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaFullChargeCapacity.setStatus("current")
_HwbaInstallDate_Type = DateAndTime
_HwbaInstallDate_Object = MibTableColumn
hwbaInstallDate = _HwbaInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 21),
    _HwbaInstallDate_Type()
)
hwbaInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaInstallDate.setStatus("current")
_HwbaLastErrorCode_Type = Gauge32
_HwbaLastErrorCode_Object = MibTableColumn
hwbaLastErrorCode = _HwbaLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 22),
    _HwbaLastErrorCode_Type()
)
hwbaLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaLastErrorCode.setStatus("current")
_HwbaMaxRechargeTime_Type = Gauge32
_HwbaMaxRechargeTime_Object = MibTableColumn
hwbaMaxRechargeTime = _HwbaMaxRechargeTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 23),
    _HwbaMaxRechargeTime_Type()
)
hwbaMaxRechargeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaMaxRechargeTime.setStatus("current")
_HwbaName_Type = WtcsDisplayString
_HwbaName_Object = MibTableColumn
hwbaName = _HwbaName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 24),
    _HwbaName_Type()
)
hwbaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaName.setStatus("current")
_HwbaPNPDeviceID_Type = WtcsDisplayString
_HwbaPNPDeviceID_Object = MibTableColumn
hwbaPNPDeviceID = _HwbaPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 25),
    _HwbaPNPDeviceID_Type()
)
hwbaPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaPNPDeviceID.setStatus("current")
_HwbaPowerManagementCapabilities_Type = WtcsDisplayString
_HwbaPowerManagementCapabilities_Object = MibTableColumn
hwbaPowerManagementCapabilities = _HwbaPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 26),
    _HwbaPowerManagementCapabilities_Type()
)
hwbaPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaPowerManagementCapabilities.setStatus("current")
_HwbaPowerManagementSupported_Type = TruthValue
_HwbaPowerManagementSupported_Object = MibTableColumn
hwbaPowerManagementSupported = _HwbaPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 27),
    _HwbaPowerManagementSupported_Type()
)
hwbaPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaPowerManagementSupported.setStatus("current")
_HwbaSmartBatteryVersion_Type = WtcsDisplayString
_HwbaSmartBatteryVersion_Object = MibTableColumn
hwbaSmartBatteryVersion = _HwbaSmartBatteryVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 28),
    _HwbaSmartBatteryVersion_Type()
)
hwbaSmartBatteryVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaSmartBatteryVersion.setStatus("current")


class _HwbaStatus_Type(Integer32):
    """Custom type hwbaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwbaStatus_Type.__name__ = "Integer32"
_HwbaStatus_Object = MibTableColumn
hwbaStatus = _HwbaStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 29),
    _HwbaStatus_Type()
)
hwbaStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaStatus.setStatus("current")


class _HwbaStatusInfo_Type(Integer32):
    """Custom type hwbaStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwbaStatusInfo_Type.__name__ = "Integer32"
_HwbaStatusInfo_Object = MibTableColumn
hwbaStatusInfo = _HwbaStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 30),
    _HwbaStatusInfo_Type()
)
hwbaStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaStatusInfo.setStatus("current")
_HwbaSystemCreationClassName_Type = WtcsDisplayString
_HwbaSystemCreationClassName_Object = MibTableColumn
hwbaSystemCreationClassName = _HwbaSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 31),
    _HwbaSystemCreationClassName_Type()
)
hwbaSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaSystemCreationClassName.setStatus("current")
_HwbaSystemName_Type = WtcsDisplayString
_HwbaSystemName_Object = MibTableColumn
hwbaSystemName = _HwbaSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 32),
    _HwbaSystemName_Type()
)
hwbaSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaSystemName.setStatus("current")
_HwbaTimeOnBattery_Type = Gauge32
_HwbaTimeOnBattery_Object = MibTableColumn
hwbaTimeOnBattery = _HwbaTimeOnBattery_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 33),
    _HwbaTimeOnBattery_Type()
)
hwbaTimeOnBattery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaTimeOnBattery.setStatus("current")
_HwbaTimeToFullCharge_Type = Gauge32
_HwbaTimeToFullCharge_Object = MibTableColumn
hwbaTimeToFullCharge = _HwbaTimeToFullCharge_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 1, 1, 34),
    _HwbaTimeToFullCharge_Type()
)
hwbaTimeToFullCharge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwbaTimeToFullCharge.setStatus("current")
_Win32CurrentProbeTable_Object = MibTable
win32CurrentProbeTable = _Win32CurrentProbeTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2)
)
if mibBuilder.loadTexts:
    win32CurrentProbeTable.setStatus("current")
_Win32CurrentProbeEntry_Object = MibTableRow
win32CurrentProbeEntry = _Win32CurrentProbeEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1)
)
win32CurrentProbeEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwcpIndex"),
)
if mibBuilder.loadTexts:
    win32CurrentProbeEntry.setStatus("current")


class _HwcpIndex_Type(Integer32):
    """Custom type hwcpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwcpIndex_Type.__name__ = "Integer32"
_HwcpIndex_Object = MibTableColumn
hwcpIndex = _HwcpIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 1),
    _HwcpIndex_Type()
)
hwcpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpIndex.setStatus("current")
_HwcpAccuracy_Type = Integer32
_HwcpAccuracy_Object = MibTableColumn
hwcpAccuracy = _HwcpAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 2),
    _HwcpAccuracy_Type()
)
hwcpAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpAccuracy.setStatus("current")
if mibBuilder.loadTexts:
    hwcpAccuracy.setUnits("Hundredths of Percent")


class _HwcpAvailability_Type(Integer32):
    """Custom type hwcpAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwcpAvailability_Type.__name__ = "Integer32"
_HwcpAvailability_Object = MibTableColumn
hwcpAvailability = _HwcpAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 3),
    _HwcpAvailability_Type()
)
hwcpAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpAvailability.setStatus("current")
_HwcpCaption_Type = WtcsDisplayString
_HwcpCaption_Object = MibTableColumn
hwcpCaption = _HwcpCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 4),
    _HwcpCaption_Type()
)
hwcpCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpCaption.setStatus("current")


class _HwcpConfigManagerErrorCode_Type(Integer32):
    """Custom type hwcpConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwcpConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwcpConfigManagerErrorCode_Object = MibTableColumn
hwcpConfigManagerErrorCode = _HwcpConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 5),
    _HwcpConfigManagerErrorCode_Type()
)
hwcpConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpConfigManagerErrorCode.setStatus("current")
_HwcpConfigManagerUserConfig_Type = TruthValue
_HwcpConfigManagerUserConfig_Object = MibTableColumn
hwcpConfigManagerUserConfig = _HwcpConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 6),
    _HwcpConfigManagerUserConfig_Type()
)
hwcpConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpConfigManagerUserConfig.setStatus("current")


class _HwcpCreationClassName_Type(WtcsDisplayString):
    """Custom type hwcpCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwcpCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwcpCreationClassName_Object = MibTableColumn
hwcpCreationClassName = _HwcpCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 7),
    _HwcpCreationClassName_Type()
)
hwcpCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpCreationClassName.setStatus("current")
_HwcpCurrentReading_Type = Integer32
_HwcpCurrentReading_Object = MibTableColumn
hwcpCurrentReading = _HwcpCurrentReading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 8),
    _HwcpCurrentReading_Type()
)
hwcpCurrentReading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpCurrentReading.setStatus("current")
if mibBuilder.loadTexts:
    hwcpCurrentReading.setUnits("Milliamps")
_HwcpDescription_Type = WtcsDisplayString
_HwcpDescription_Object = MibTableColumn
hwcpDescription = _HwcpDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 9),
    _HwcpDescription_Type()
)
hwcpDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpDescription.setStatus("current")
_HwcpDeviceID_Type = WtcsDisplayString
_HwcpDeviceID_Object = MibTableColumn
hwcpDeviceID = _HwcpDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 10),
    _HwcpDeviceID_Type()
)
hwcpDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpDeviceID.setStatus("current")
_HwcpErrorCleared_Type = TruthValue
_HwcpErrorCleared_Object = MibTableColumn
hwcpErrorCleared = _HwcpErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 11),
    _HwcpErrorCleared_Type()
)
hwcpErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpErrorCleared.setStatus("current")
_HwcpErrorDescription_Type = WtcsDisplayString
_HwcpErrorDescription_Object = MibTableColumn
hwcpErrorDescription = _HwcpErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 12),
    _HwcpErrorDescription_Type()
)
hwcpErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpErrorDescription.setStatus("current")
_HwcpInstallDate_Type = DateAndTime
_HwcpInstallDate_Object = MibTableColumn
hwcpInstallDate = _HwcpInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 13),
    _HwcpInstallDate_Type()
)
hwcpInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpInstallDate.setStatus("current")
_HwcpIsLinear_Type = TruthValue
_HwcpIsLinear_Object = MibTableColumn
hwcpIsLinear = _HwcpIsLinear_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 14),
    _HwcpIsLinear_Type()
)
hwcpIsLinear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpIsLinear.setStatus("current")
_HwcpLastErrorCode_Type = Gauge32
_HwcpLastErrorCode_Object = MibTableColumn
hwcpLastErrorCode = _HwcpLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 15),
    _HwcpLastErrorCode_Type()
)
hwcpLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpLastErrorCode.setStatus("current")
_HwcpLowerThresholdCritical_Type = Integer32
_HwcpLowerThresholdCritical_Object = MibTableColumn
hwcpLowerThresholdCritical = _HwcpLowerThresholdCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 16),
    _HwcpLowerThresholdCritical_Type()
)
hwcpLowerThresholdCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpLowerThresholdCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwcpLowerThresholdCritical.setUnits("Milliamps")
_HwcpLowerThresholdFatal_Type = Integer32
_HwcpLowerThresholdFatal_Object = MibTableColumn
hwcpLowerThresholdFatal = _HwcpLowerThresholdFatal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 17),
    _HwcpLowerThresholdFatal_Type()
)
hwcpLowerThresholdFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpLowerThresholdFatal.setStatus("current")
if mibBuilder.loadTexts:
    hwcpLowerThresholdFatal.setUnits("Milliamps")
_HwcpLowerThresholdNonCritical_Type = Integer32
_HwcpLowerThresholdNonCritical_Object = MibTableColumn
hwcpLowerThresholdNonCritical = _HwcpLowerThresholdNonCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 18),
    _HwcpLowerThresholdNonCritical_Type()
)
hwcpLowerThresholdNonCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpLowerThresholdNonCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwcpLowerThresholdNonCritical.setUnits("Milliamps")
_HwcpMaxReadable_Type = Integer32
_HwcpMaxReadable_Object = MibTableColumn
hwcpMaxReadable = _HwcpMaxReadable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 19),
    _HwcpMaxReadable_Type()
)
hwcpMaxReadable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpMaxReadable.setStatus("current")
if mibBuilder.loadTexts:
    hwcpMaxReadable.setUnits("Milliamps")
_HwcpMinReadable_Type = Integer32
_HwcpMinReadable_Object = MibTableColumn
hwcpMinReadable = _HwcpMinReadable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 20),
    _HwcpMinReadable_Type()
)
hwcpMinReadable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpMinReadable.setStatus("current")
if mibBuilder.loadTexts:
    hwcpMinReadable.setUnits("Milliamps")
_HwcpName_Type = WtcsDisplayString
_HwcpName_Object = MibTableColumn
hwcpName = _HwcpName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 21),
    _HwcpName_Type()
)
hwcpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpName.setStatus("current")
_HwcpNominalReading_Type = Integer32
_HwcpNominalReading_Object = MibTableColumn
hwcpNominalReading = _HwcpNominalReading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 22),
    _HwcpNominalReading_Type()
)
hwcpNominalReading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpNominalReading.setStatus("current")
if mibBuilder.loadTexts:
    hwcpNominalReading.setUnits("Milliamps")
_HwcpNormalMax_Type = Integer32
_HwcpNormalMax_Object = MibTableColumn
hwcpNormalMax = _HwcpNormalMax_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 23),
    _HwcpNormalMax_Type()
)
hwcpNormalMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpNormalMax.setStatus("current")
if mibBuilder.loadTexts:
    hwcpNormalMax.setUnits("Milliamps")
_HwcpNormalMin_Type = Integer32
_HwcpNormalMin_Object = MibTableColumn
hwcpNormalMin = _HwcpNormalMin_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 24),
    _HwcpNormalMin_Type()
)
hwcpNormalMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpNormalMin.setStatus("current")
if mibBuilder.loadTexts:
    hwcpNormalMin.setUnits("Milliamps")
_HwcpPNPDeviceID_Type = WtcsDisplayString
_HwcpPNPDeviceID_Object = MibTableColumn
hwcpPNPDeviceID = _HwcpPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 25),
    _HwcpPNPDeviceID_Type()
)
hwcpPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpPNPDeviceID.setStatus("current")
_HwcpPowerManagementCapabilities_Type = WtcsDisplayString
_HwcpPowerManagementCapabilities_Object = MibTableColumn
hwcpPowerManagementCapabilities = _HwcpPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 26),
    _HwcpPowerManagementCapabilities_Type()
)
hwcpPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpPowerManagementCapabilities.setStatus("current")
_HwcpPowerManagementSupported_Type = TruthValue
_HwcpPowerManagementSupported_Object = MibTableColumn
hwcpPowerManagementSupported = _HwcpPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 27),
    _HwcpPowerManagementSupported_Type()
)
hwcpPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpPowerManagementSupported.setStatus("current")
_HwcpResolution_Type = Gauge32
_HwcpResolution_Object = MibTableColumn
hwcpResolution = _HwcpResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 28),
    _HwcpResolution_Type()
)
hwcpResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwcpResolution.setUnits("Tenths of Milliamps")


class _HwcpStatus_Type(Integer32):
    """Custom type hwcpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwcpStatus_Type.__name__ = "Integer32"
_HwcpStatus_Object = MibTableColumn
hwcpStatus = _HwcpStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 29),
    _HwcpStatus_Type()
)
hwcpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpStatus.setStatus("current")


class _HwcpStatusInfo_Type(Integer32):
    """Custom type hwcpStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwcpStatusInfo_Type.__name__ = "Integer32"
_HwcpStatusInfo_Object = MibTableColumn
hwcpStatusInfo = _HwcpStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 30),
    _HwcpStatusInfo_Type()
)
hwcpStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpStatusInfo.setStatus("current")
_HwcpSystemCreationClassName_Type = WtcsDisplayString
_HwcpSystemCreationClassName_Object = MibTableColumn
hwcpSystemCreationClassName = _HwcpSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 31),
    _HwcpSystemCreationClassName_Type()
)
hwcpSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpSystemCreationClassName.setStatus("current")
_HwcpSystemName_Type = WtcsDisplayString
_HwcpSystemName_Object = MibTableColumn
hwcpSystemName = _HwcpSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 32),
    _HwcpSystemName_Type()
)
hwcpSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpSystemName.setStatus("current")
_HwcpTolerance_Type = Integer32
_HwcpTolerance_Object = MibTableColumn
hwcpTolerance = _HwcpTolerance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 33),
    _HwcpTolerance_Type()
)
hwcpTolerance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpTolerance.setStatus("current")
if mibBuilder.loadTexts:
    hwcpTolerance.setUnits("Milliamps")
_HwcpUpperThresholdCritical_Type = Integer32
_HwcpUpperThresholdCritical_Object = MibTableColumn
hwcpUpperThresholdCritical = _HwcpUpperThresholdCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 34),
    _HwcpUpperThresholdCritical_Type()
)
hwcpUpperThresholdCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpUpperThresholdCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwcpUpperThresholdCritical.setUnits("Milliamps")
_HwcpUpperThresholdFatal_Type = Integer32
_HwcpUpperThresholdFatal_Object = MibTableColumn
hwcpUpperThresholdFatal = _HwcpUpperThresholdFatal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 35),
    _HwcpUpperThresholdFatal_Type()
)
hwcpUpperThresholdFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpUpperThresholdFatal.setStatus("current")
if mibBuilder.loadTexts:
    hwcpUpperThresholdFatal.setUnits("Milliamps")
_HwcpUpperThresholdNonCritical_Type = Integer32
_HwcpUpperThresholdNonCritical_Object = MibTableColumn
hwcpUpperThresholdNonCritical = _HwcpUpperThresholdNonCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 2, 1, 36),
    _HwcpUpperThresholdNonCritical_Type()
)
hwcpUpperThresholdNonCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwcpUpperThresholdNonCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwcpUpperThresholdNonCritical.setUnits("Milliamps")
_Win32PortableBatteryTable_Object = MibTable
win32PortableBatteryTable = _Win32PortableBatteryTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3)
)
if mibBuilder.loadTexts:
    win32PortableBatteryTable.setStatus("current")
_Win32PortableBatteryEntry_Object = MibTableRow
win32PortableBatteryEntry = _Win32PortableBatteryEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1)
)
win32PortableBatteryEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpbIndex"),
)
if mibBuilder.loadTexts:
    win32PortableBatteryEntry.setStatus("current")


class _HwpbIndex_Type(Integer32):
    """Custom type hwpbIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpbIndex_Type.__name__ = "Integer32"
_HwpbIndex_Object = MibTableColumn
hwpbIndex = _HwpbIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 1),
    _HwpbIndex_Type()
)
hwpbIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbIndex.setStatus("current")


class _HwpbAvailability_Type(Integer32):
    """Custom type hwpbAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwpbAvailability_Type.__name__ = "Integer32"
_HwpbAvailability_Object = MibTableColumn
hwpbAvailability = _HwpbAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 2),
    _HwpbAvailability_Type()
)
hwpbAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbAvailability.setStatus("current")
_HwpbBatteryRechargeTime_Type = Gauge32
_HwpbBatteryRechargeTime_Object = MibTableColumn
hwpbBatteryRechargeTime = _HwpbBatteryRechargeTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 3),
    _HwpbBatteryRechargeTime_Type()
)
hwpbBatteryRechargeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbBatteryRechargeTime.setStatus("current")


class _HwpbBatteryStatus_Type(Integer32):
    """Custom type hwpbBatteryStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("charging", 6),
          ("chargingAndCritical", 9),
          ("chargingAndHigh", 7),
          ("chargingAndLow", 8),
          ("critical", 5),
          ("fullyCharged", 3),
          ("low", 4),
          ("other", 1),
          ("partiallyCharged", 11),
          ("undefined", 10),
          ("unknown", 2))
    )


_HwpbBatteryStatus_Type.__name__ = "Integer32"
_HwpbBatteryStatus_Object = MibTableColumn
hwpbBatteryStatus = _HwpbBatteryStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 4),
    _HwpbBatteryStatus_Type()
)
hwpbBatteryStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbBatteryStatus.setStatus("current")
_HwpbCapacityMultiplier_Type = Integer32
_HwpbCapacityMultiplier_Object = MibTableColumn
hwpbCapacityMultiplier = _HwpbCapacityMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 5),
    _HwpbCapacityMultiplier_Type()
)
hwpbCapacityMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbCapacityMultiplier.setStatus("current")
_HwpbCaption_Type = WtcsDisplayString
_HwpbCaption_Object = MibTableColumn
hwpbCaption = _HwpbCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 6),
    _HwpbCaption_Type()
)
hwpbCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbCaption.setStatus("current")


class _HwpbChemistry_Type(Integer32):
    """Custom type hwpbChemistry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("leadAcid", 3),
          ("lithiumPolymer", 8),
          ("lithiumion", 6),
          ("nickelCadmium", 4),
          ("nickelMetalHydride", 5),
          ("other", 1),
          ("unknown", 2),
          ("zincAir", 7))
    )


_HwpbChemistry_Type.__name__ = "Integer32"
_HwpbChemistry_Object = MibTableColumn
hwpbChemistry = _HwpbChemistry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 7),
    _HwpbChemistry_Type()
)
hwpbChemistry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbChemistry.setStatus("current")


class _HwpbConfigManagerErrorCode_Type(Integer32):
    """Custom type hwpbConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwpbConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwpbConfigManagerErrorCode_Object = MibTableColumn
hwpbConfigManagerErrorCode = _HwpbConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 8),
    _HwpbConfigManagerErrorCode_Type()
)
hwpbConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbConfigManagerErrorCode.setStatus("current")
_HwpbConfigManagerUserConfig_Type = TruthValue
_HwpbConfigManagerUserConfig_Object = MibTableColumn
hwpbConfigManagerUserConfig = _HwpbConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 9),
    _HwpbConfigManagerUserConfig_Type()
)
hwpbConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbConfigManagerUserConfig.setStatus("current")


class _HwpbCreationClassName_Type(WtcsDisplayString):
    """Custom type hwpbCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwpbCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwpbCreationClassName_Object = MibTableColumn
hwpbCreationClassName = _HwpbCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 10),
    _HwpbCreationClassName_Type()
)
hwpbCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbCreationClassName.setStatus("current")
_HwpbDescription_Type = WtcsDisplayString
_HwpbDescription_Object = MibTableColumn
hwpbDescription = _HwpbDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 11),
    _HwpbDescription_Type()
)
hwpbDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbDescription.setStatus("current")
_HwpbDesignCapacity_Type = Gauge32
_HwpbDesignCapacity_Object = MibTableColumn
hwpbDesignCapacity = _HwpbDesignCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 12),
    _HwpbDesignCapacity_Type()
)
hwpbDesignCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbDesignCapacity.setStatus("current")
_HwpbDesignVoltage_Type = Gauge32
_HwpbDesignVoltage_Object = MibTableColumn
hwpbDesignVoltage = _HwpbDesignVoltage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 13),
    _HwpbDesignVoltage_Type()
)
hwpbDesignVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbDesignVoltage.setStatus("current")
_HwpbDeviceID_Type = WtcsDisplayString
_HwpbDeviceID_Object = MibTableColumn
hwpbDeviceID = _HwpbDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 14),
    _HwpbDeviceID_Type()
)
hwpbDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbDeviceID.setStatus("current")
_HwpbErrorCleared_Type = TruthValue
_HwpbErrorCleared_Object = MibTableColumn
hwpbErrorCleared = _HwpbErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 15),
    _HwpbErrorCleared_Type()
)
hwpbErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbErrorCleared.setStatus("current")
_HwpbErrorDescription_Type = WtcsDisplayString
_HwpbErrorDescription_Object = MibTableColumn
hwpbErrorDescription = _HwpbErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 16),
    _HwpbErrorDescription_Type()
)
hwpbErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbErrorDescription.setStatus("current")
_HwpbEstimatedChargeRemaining_Type = Integer32
_HwpbEstimatedChargeRemaining_Object = MibTableColumn
hwpbEstimatedChargeRemaining = _HwpbEstimatedChargeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 17),
    _HwpbEstimatedChargeRemaining_Type()
)
hwpbEstimatedChargeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbEstimatedChargeRemaining.setStatus("current")
_HwpbEstimatedRunTime_Type = Gauge32
_HwpbEstimatedRunTime_Object = MibTableColumn
hwpbEstimatedRunTime = _HwpbEstimatedRunTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 18),
    _HwpbEstimatedRunTime_Type()
)
hwpbEstimatedRunTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbEstimatedRunTime.setStatus("current")
_HwpbExpectedBatteryLife_Type = Gauge32
_HwpbExpectedBatteryLife_Object = MibTableColumn
hwpbExpectedBatteryLife = _HwpbExpectedBatteryLife_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 19),
    _HwpbExpectedBatteryLife_Type()
)
hwpbExpectedBatteryLife.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbExpectedBatteryLife.setStatus("current")
_HwpbExpectedLife_Type = Gauge32
_HwpbExpectedLife_Object = MibTableColumn
hwpbExpectedLife = _HwpbExpectedLife_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 20),
    _HwpbExpectedLife_Type()
)
hwpbExpectedLife.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbExpectedLife.setStatus("current")
_HwpbFullChargeCapacity_Type = Gauge32
_HwpbFullChargeCapacity_Object = MibTableColumn
hwpbFullChargeCapacity = _HwpbFullChargeCapacity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 21),
    _HwpbFullChargeCapacity_Type()
)
hwpbFullChargeCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbFullChargeCapacity.setStatus("current")
_HwpbInstallDate_Type = DateAndTime
_HwpbInstallDate_Object = MibTableColumn
hwpbInstallDate = _HwpbInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 22),
    _HwpbInstallDate_Type()
)
hwpbInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbInstallDate.setStatus("current")
_HwpbLastErrorCode_Type = Gauge32
_HwpbLastErrorCode_Object = MibTableColumn
hwpbLastErrorCode = _HwpbLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 23),
    _HwpbLastErrorCode_Type()
)
hwpbLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbLastErrorCode.setStatus("current")
_HwpbLocation_Type = WtcsDisplayString
_HwpbLocation_Object = MibTableColumn
hwpbLocation = _HwpbLocation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 24),
    _HwpbLocation_Type()
)
hwpbLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbLocation.setStatus("current")
_HwpbManufactureDate_Type = WtcsDisplayString
_HwpbManufactureDate_Object = MibTableColumn
hwpbManufactureDate = _HwpbManufactureDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 25),
    _HwpbManufactureDate_Type()
)
hwpbManufactureDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbManufactureDate.setStatus("current")
_HwpbManufacturer_Type = WtcsDisplayString
_HwpbManufacturer_Object = MibTableColumn
hwpbManufacturer = _HwpbManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 26),
    _HwpbManufacturer_Type()
)
hwpbManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbManufacturer.setStatus("current")
_HwpbMaxBatteryError_Type = Integer32
_HwpbMaxBatteryError_Object = MibTableColumn
hwpbMaxBatteryError = _HwpbMaxBatteryError_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 27),
    _HwpbMaxBatteryError_Type()
)
hwpbMaxBatteryError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbMaxBatteryError.setStatus("current")
if mibBuilder.loadTexts:
    hwpbMaxBatteryError.setUnits("Percent")
_HwpbMaxRechargeTime_Type = Gauge32
_HwpbMaxRechargeTime_Object = MibTableColumn
hwpbMaxRechargeTime = _HwpbMaxRechargeTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 28),
    _HwpbMaxRechargeTime_Type()
)
hwpbMaxRechargeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbMaxRechargeTime.setStatus("current")
_HwpbName_Type = WtcsDisplayString
_HwpbName_Object = MibTableColumn
hwpbName = _HwpbName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 29),
    _HwpbName_Type()
)
hwpbName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbName.setStatus("current")
_HwpbPNPDeviceID_Type = WtcsDisplayString
_HwpbPNPDeviceID_Object = MibTableColumn
hwpbPNPDeviceID = _HwpbPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 30),
    _HwpbPNPDeviceID_Type()
)
hwpbPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbPNPDeviceID.setStatus("current")
_HwpbPowerManagementCapabilities_Type = WtcsDisplayString
_HwpbPowerManagementCapabilities_Object = MibTableColumn
hwpbPowerManagementCapabilities = _HwpbPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 31),
    _HwpbPowerManagementCapabilities_Type()
)
hwpbPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbPowerManagementCapabilities.setStatus("current")
_HwpbPowerManagementSupported_Type = TruthValue
_HwpbPowerManagementSupported_Object = MibTableColumn
hwpbPowerManagementSupported = _HwpbPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 32),
    _HwpbPowerManagementSupported_Type()
)
hwpbPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbPowerManagementSupported.setStatus("current")
_HwpbSmartBatteryVersion_Type = WtcsDisplayString
_HwpbSmartBatteryVersion_Object = MibTableColumn
hwpbSmartBatteryVersion = _HwpbSmartBatteryVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 33),
    _HwpbSmartBatteryVersion_Type()
)
hwpbSmartBatteryVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbSmartBatteryVersion.setStatus("current")


class _HwpbStatus_Type(Integer32):
    """Custom type hwpbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpbStatus_Type.__name__ = "Integer32"
_HwpbStatus_Object = MibTableColumn
hwpbStatus = _HwpbStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 34),
    _HwpbStatus_Type()
)
hwpbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbStatus.setStatus("current")


class _HwpbStatusInfo_Type(Integer32):
    """Custom type hwpbStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwpbStatusInfo_Type.__name__ = "Integer32"
_HwpbStatusInfo_Object = MibTableColumn
hwpbStatusInfo = _HwpbStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 35),
    _HwpbStatusInfo_Type()
)
hwpbStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbStatusInfo.setStatus("current")
_HwpbSystemCreationClassName_Type = WtcsDisplayString
_HwpbSystemCreationClassName_Object = MibTableColumn
hwpbSystemCreationClassName = _HwpbSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 36),
    _HwpbSystemCreationClassName_Type()
)
hwpbSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbSystemCreationClassName.setStatus("current")
_HwpbSystemName_Type = WtcsDisplayString
_HwpbSystemName_Object = MibTableColumn
hwpbSystemName = _HwpbSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 37),
    _HwpbSystemName_Type()
)
hwpbSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbSystemName.setStatus("current")
_HwpbTimeOnBattery_Type = Gauge32
_HwpbTimeOnBattery_Object = MibTableColumn
hwpbTimeOnBattery = _HwpbTimeOnBattery_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 38),
    _HwpbTimeOnBattery_Type()
)
hwpbTimeOnBattery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbTimeOnBattery.setStatus("current")
_HwpbTimeToFullCharge_Type = Gauge32
_HwpbTimeToFullCharge_Object = MibTableColumn
hwpbTimeToFullCharge = _HwpbTimeToFullCharge_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 3, 1, 39),
    _HwpbTimeToFullCharge_Type()
)
hwpbTimeToFullCharge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpbTimeToFullCharge.setStatus("current")
_Win32UninterruptPowerSupplyTable_Object = MibTable
win32UninterruptPowerSupplyTable = _Win32UninterruptPowerSupplyTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4)
)
if mibBuilder.loadTexts:
    win32UninterruptPowerSupplyTable.setStatus("current")
_Win32UninterruptPowerSupplyEntry_Object = MibTableRow
win32UninterruptPowerSupplyEntry = _Win32UninterruptPowerSupplyEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1)
)
win32UninterruptPowerSupplyEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwupsIndex"),
)
if mibBuilder.loadTexts:
    win32UninterruptPowerSupplyEntry.setStatus("current")


class _HwupsIndex_Type(Integer32):
    """Custom type hwupsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwupsIndex_Type.__name__ = "Integer32"
_HwupsIndex_Object = MibTableColumn
hwupsIndex = _HwupsIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 1),
    _HwupsIndex_Type()
)
hwupsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsIndex.setStatus("current")


class _HwupsActiveInputVoltage_Type(Integer32):
    """Custom type hwupsActiveInputVoltage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("both", 5),
          ("neither", 6),
          ("other", 1),
          ("range1", 3),
          ("range2", 4),
          ("unknown", 2))
    )


_HwupsActiveInputVoltage_Type.__name__ = "Integer32"
_HwupsActiveInputVoltage_Object = MibTableColumn
hwupsActiveInputVoltage = _HwupsActiveInputVoltage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 2),
    _HwupsActiveInputVoltage_Type()
)
hwupsActiveInputVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsActiveInputVoltage.setStatus("current")


class _HwupsAvailability_Type(Integer32):
    """Custom type hwupsAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwupsAvailability_Type.__name__ = "Integer32"
_HwupsAvailability_Object = MibTableColumn
hwupsAvailability = _HwupsAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 3),
    _HwupsAvailability_Type()
)
hwupsAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsAvailability.setStatus("current")
_HwupsBatteryInstalled_Type = TruthValue
_HwupsBatteryInstalled_Object = MibTableColumn
hwupsBatteryInstalled = _HwupsBatteryInstalled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 4),
    _HwupsBatteryInstalled_Type()
)
hwupsBatteryInstalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsBatteryInstalled.setStatus("current")
_HwupsCanTurnOffRemotely_Type = TruthValue
_HwupsCanTurnOffRemotely_Object = MibTableColumn
hwupsCanTurnOffRemotely = _HwupsCanTurnOffRemotely_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 5),
    _HwupsCanTurnOffRemotely_Type()
)
hwupsCanTurnOffRemotely.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsCanTurnOffRemotely.setStatus("current")


class _HwupsCaption_Type(WtcsDisplayString):
    """Custom type hwupsCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwupsCaption_Type.__name__ = "WtcsDisplayString"
_HwupsCaption_Object = MibTableColumn
hwupsCaption = _HwupsCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 6),
    _HwupsCaption_Type()
)
hwupsCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsCaption.setStatus("current")
_HwupsCommandFile_Type = WtcsDisplayString
_HwupsCommandFile_Object = MibTableColumn
hwupsCommandFile = _HwupsCommandFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 7),
    _HwupsCommandFile_Type()
)
hwupsCommandFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsCommandFile.setStatus("current")


class _HwupsConfigManagerErrorCode_Type(Integer32):
    """Custom type hwupsConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwupsConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwupsConfigManagerErrorCode_Object = MibTableColumn
hwupsConfigManagerErrorCode = _HwupsConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 8),
    _HwupsConfigManagerErrorCode_Type()
)
hwupsConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsConfigManagerErrorCode.setStatus("current")
_HwupsConfigManagerUserConfig_Type = TruthValue
_HwupsConfigManagerUserConfig_Object = MibTableColumn
hwupsConfigManagerUserConfig = _HwupsConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 9),
    _HwupsConfigManagerUserConfig_Type()
)
hwupsConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsConfigManagerUserConfig.setStatus("current")


class _HwupsCreationClassName_Type(WtcsDisplayString):
    """Custom type hwupsCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwupsCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwupsCreationClassName_Object = MibTableColumn
hwupsCreationClassName = _HwupsCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 10),
    _HwupsCreationClassName_Type()
)
hwupsCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsCreationClassName.setStatus("current")
_HwupsDescription_Type = WtcsDisplayString
_HwupsDescription_Object = MibTableColumn
hwupsDescription = _HwupsDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 11),
    _HwupsDescription_Type()
)
hwupsDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsDescription.setStatus("current")
_HwupsDeviceID_Type = WtcsDisplayString
_HwupsDeviceID_Object = MibTableColumn
hwupsDeviceID = _HwupsDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 12),
    _HwupsDeviceID_Type()
)
hwupsDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsDeviceID.setStatus("current")
_HwupsErrorCleared_Type = TruthValue
_HwupsErrorCleared_Object = MibTableColumn
hwupsErrorCleared = _HwupsErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 13),
    _HwupsErrorCleared_Type()
)
hwupsErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsErrorCleared.setStatus("current")
_HwupsErrorDescription_Type = WtcsDisplayString
_HwupsErrorDescription_Object = MibTableColumn
hwupsErrorDescription = _HwupsErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 14),
    _HwupsErrorDescription_Type()
)
hwupsErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsErrorDescription.setStatus("current")
_HwupsEstimatedChargeRemaining_Type = Integer32
_HwupsEstimatedChargeRemaining_Object = MibTableColumn
hwupsEstimatedChargeRemaining = _HwupsEstimatedChargeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 15),
    _HwupsEstimatedChargeRemaining_Type()
)
hwupsEstimatedChargeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsEstimatedChargeRemaining.setStatus("current")
_HwupsEstimatedRunTime_Type = Gauge32
_HwupsEstimatedRunTime_Object = MibTableColumn
hwupsEstimatedRunTime = _HwupsEstimatedRunTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 16),
    _HwupsEstimatedRunTime_Type()
)
hwupsEstimatedRunTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsEstimatedRunTime.setStatus("current")
_HwupsFirstMessageDelay_Type = Gauge32
_HwupsFirstMessageDelay_Object = MibTableColumn
hwupsFirstMessageDelay = _HwupsFirstMessageDelay_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 17),
    _HwupsFirstMessageDelay_Type()
)
hwupsFirstMessageDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsFirstMessageDelay.setStatus("current")
if mibBuilder.loadTexts:
    hwupsFirstMessageDelay.setUnits("Seconds")
_HwupsInstallDate_Type = DateAndTime
_HwupsInstallDate_Object = MibTableColumn
hwupsInstallDate = _HwupsInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 18),
    _HwupsInstallDate_Type()
)
hwupsInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsInstallDate.setStatus("current")
_HwupsIsSwitchingSupply_Type = TruthValue
_HwupsIsSwitchingSupply_Object = MibTableColumn
hwupsIsSwitchingSupply = _HwupsIsSwitchingSupply_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 19),
    _HwupsIsSwitchingSupply_Type()
)
hwupsIsSwitchingSupply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsIsSwitchingSupply.setStatus("current")
_HwupsLastErrorCode_Type = Gauge32
_HwupsLastErrorCode_Object = MibTableColumn
hwupsLastErrorCode = _HwupsLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 20),
    _HwupsLastErrorCode_Type()
)
hwupsLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsLastErrorCode.setStatus("current")
_HwupsLowBatterySignal_Type = TruthValue
_HwupsLowBatterySignal_Object = MibTableColumn
hwupsLowBatterySignal = _HwupsLowBatterySignal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 21),
    _HwupsLowBatterySignal_Type()
)
hwupsLowBatterySignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsLowBatterySignal.setStatus("current")
_HwupsMessageInterval_Type = Gauge32
_HwupsMessageInterval_Object = MibTableColumn
hwupsMessageInterval = _HwupsMessageInterval_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 22),
    _HwupsMessageInterval_Type()
)
hwupsMessageInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsMessageInterval.setStatus("current")
if mibBuilder.loadTexts:
    hwupsMessageInterval.setUnits("Seconds")
_HwupsName_Type = WtcsDisplayString
_HwupsName_Object = MibTableColumn
hwupsName = _HwupsName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 23),
    _HwupsName_Type()
)
hwupsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsName.setStatus("current")
_HwupsPNPDeviceID_Type = WtcsDisplayString
_HwupsPNPDeviceID_Object = MibTableColumn
hwupsPNPDeviceID = _HwupsPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 24),
    _HwupsPNPDeviceID_Type()
)
hwupsPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsPNPDeviceID.setStatus("current")
_HwupsPowerFailSignal_Type = TruthValue
_HwupsPowerFailSignal_Object = MibTableColumn
hwupsPowerFailSignal = _HwupsPowerFailSignal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 25),
    _HwupsPowerFailSignal_Type()
)
hwupsPowerFailSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsPowerFailSignal.setStatus("current")
_HwupsPowerManagementCapabilities_Type = WtcsDisplayString
_HwupsPowerManagementCapabilities_Object = MibTableColumn
hwupsPowerManagementCapabilities = _HwupsPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 26),
    _HwupsPowerManagementCapabilities_Type()
)
hwupsPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsPowerManagementCapabilities.setStatus("current")
_HwupsPowerManagementSupported_Type = TruthValue
_HwupsPowerManagementSupported_Object = MibTableColumn
hwupsPowerManagementSupported = _HwupsPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 27),
    _HwupsPowerManagementSupported_Type()
)
hwupsPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsPowerManagementSupported.setStatus("current")
_HwupsRange1InputFrequencyHigh_Type = Gauge32
_HwupsRange1InputFrequencyHigh_Object = MibTableColumn
hwupsRange1InputFrequencyHigh = _HwupsRange1InputFrequencyHigh_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 28),
    _HwupsRange1InputFrequencyHigh_Type()
)
hwupsRange1InputFrequencyHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange1InputFrequencyHigh.setStatus("current")
_HwupsRange1InputFrequencyLow_Type = Gauge32
_HwupsRange1InputFrequencyLow_Object = MibTableColumn
hwupsRange1InputFrequencyLow = _HwupsRange1InputFrequencyLow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 29),
    _HwupsRange1InputFrequencyLow_Type()
)
hwupsRange1InputFrequencyLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange1InputFrequencyLow.setStatus("current")
_HwupsRange1InputVoltageHigh_Type = Gauge32
_HwupsRange1InputVoltageHigh_Object = MibTableColumn
hwupsRange1InputVoltageHigh = _HwupsRange1InputVoltageHigh_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 30),
    _HwupsRange1InputVoltageHigh_Type()
)
hwupsRange1InputVoltageHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange1InputVoltageHigh.setStatus("current")
_HwupsRange1InputVoltageLow_Type = Gauge32
_HwupsRange1InputVoltageLow_Object = MibTableColumn
hwupsRange1InputVoltageLow = _HwupsRange1InputVoltageLow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 31),
    _HwupsRange1InputVoltageLow_Type()
)
hwupsRange1InputVoltageLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange1InputVoltageLow.setStatus("current")
_HwupsRange2InputFrequencyHigh_Type = Gauge32
_HwupsRange2InputFrequencyHigh_Object = MibTableColumn
hwupsRange2InputFrequencyHigh = _HwupsRange2InputFrequencyHigh_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 32),
    _HwupsRange2InputFrequencyHigh_Type()
)
hwupsRange2InputFrequencyHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange2InputFrequencyHigh.setStatus("current")
_HwupsRange2InputFrequencyLow_Type = Gauge32
_HwupsRange2InputFrequencyLow_Object = MibTableColumn
hwupsRange2InputFrequencyLow = _HwupsRange2InputFrequencyLow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 33),
    _HwupsRange2InputFrequencyLow_Type()
)
hwupsRange2InputFrequencyLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange2InputFrequencyLow.setStatus("current")
_HwupsRange2InputVoltageHigh_Type = Gauge32
_HwupsRange2InputVoltageHigh_Object = MibTableColumn
hwupsRange2InputVoltageHigh = _HwupsRange2InputVoltageHigh_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 34),
    _HwupsRange2InputVoltageHigh_Type()
)
hwupsRange2InputVoltageHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange2InputVoltageHigh.setStatus("current")
_HwupsRange2InputVoltageLow_Type = Gauge32
_HwupsRange2InputVoltageLow_Object = MibTableColumn
hwupsRange2InputVoltageLow = _HwupsRange2InputVoltageLow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 35),
    _HwupsRange2InputVoltageLow_Type()
)
hwupsRange2InputVoltageLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRange2InputVoltageLow.setStatus("current")


class _HwupsRemainingCapacityStatus_Type(Integer32):
    """Custom type hwupsRemainingCapacityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("depleted", 4),
          ("low", 3),
          ("norma", 2),
          ("unknown", 1))
    )


_HwupsRemainingCapacityStatus_Type.__name__ = "Integer32"
_HwupsRemainingCapacityStatus_Object = MibTableColumn
hwupsRemainingCapacityStatus = _HwupsRemainingCapacityStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 36),
    _HwupsRemainingCapacityStatus_Type()
)
hwupsRemainingCapacityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsRemainingCapacityStatus.setStatus("current")


class _HwupsStatus_Type(Integer32):
    """Custom type hwupsStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwupsStatus_Type.__name__ = "Integer32"
_HwupsStatus_Object = MibTableColumn
hwupsStatus = _HwupsStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 37),
    _HwupsStatus_Type()
)
hwupsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsStatus.setStatus("current")


class _HwupsStatusInfo_Type(Integer32):
    """Custom type hwupsStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwupsStatusInfo_Type.__name__ = "Integer32"
_HwupsStatusInfo_Object = MibTableColumn
hwupsStatusInfo = _HwupsStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 38),
    _HwupsStatusInfo_Type()
)
hwupsStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsStatusInfo.setStatus("current")
_HwupsSystemCreationClassName_Type = WtcsDisplayString
_HwupsSystemCreationClassName_Object = MibTableColumn
hwupsSystemCreationClassName = _HwupsSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 39),
    _HwupsSystemCreationClassName_Type()
)
hwupsSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsSystemCreationClassName.setStatus("current")
_HwupsSystemName_Type = WtcsDisplayString
_HwupsSystemName_Object = MibTableColumn
hwupsSystemName = _HwupsSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 40),
    _HwupsSystemName_Type()
)
hwupsSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsSystemName.setStatus("current")
_HwupsTimeOnBackup_Type = Gauge32
_HwupsTimeOnBackup_Object = MibTableColumn
hwupsTimeOnBackup = _HwupsTimeOnBackup_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 41),
    _HwupsTimeOnBackup_Type()
)
hwupsTimeOnBackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsTimeOnBackup.setStatus("current")
_HwupsTotalOutputPower_Type = Gauge32
_HwupsTotalOutputPower_Object = MibTableColumn
hwupsTotalOutputPower = _HwupsTotalOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 42),
    _HwupsTotalOutputPower_Type()
)
hwupsTotalOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsTotalOutputPower.setStatus("current")


class _HwupsTypeOfRangeSwitching_Type(Integer32):
    """Custom type hwupsTypeOfRangeSwitching based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("autoswitch", 4),
          ("manual", 3),
          ("notApplicable", 6),
          ("other", 1),
          ("unknown", 2),
          ("wideRange", 5))
    )


_HwupsTypeOfRangeSwitching_Type.__name__ = "Integer32"
_HwupsTypeOfRangeSwitching_Object = MibTableColumn
hwupsTypeOfRangeSwitching = _HwupsTypeOfRangeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 43),
    _HwupsTypeOfRangeSwitching_Type()
)
hwupsTypeOfRangeSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsTypeOfRangeSwitching.setStatus("current")
_HwupsUPSPort_Type = WtcsDisplayString
_HwupsUPSPort_Object = MibTableColumn
hwupsUPSPort = _HwupsUPSPort_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 4, 1, 44),
    _HwupsUPSPort_Type()
)
hwupsUPSPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwupsUPSPort.setStatus("current")
_Win32VoltageProbeTable_Object = MibTable
win32VoltageProbeTable = _Win32VoltageProbeTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5)
)
if mibBuilder.loadTexts:
    win32VoltageProbeTable.setStatus("current")
_Win32VoltageProbeEntry_Object = MibTableRow
win32VoltageProbeEntry = _Win32VoltageProbeEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1)
)
win32VoltageProbeEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwvpIndex"),
)
if mibBuilder.loadTexts:
    win32VoltageProbeEntry.setStatus("current")


class _HwvpIndex_Type(Integer32):
    """Custom type hwvpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwvpIndex_Type.__name__ = "Integer32"
_HwvpIndex_Object = MibTableColumn
hwvpIndex = _HwvpIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 1),
    _HwvpIndex_Type()
)
hwvpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpIndex.setStatus("current")
_HwvpAccuracy_Type = Integer32
_HwvpAccuracy_Object = MibTableColumn
hwvpAccuracy = _HwvpAccuracy_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 2),
    _HwvpAccuracy_Type()
)
hwvpAccuracy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpAccuracy.setStatus("current")
if mibBuilder.loadTexts:
    hwvpAccuracy.setUnits("Hundredths of Percent")


class _HwvpAvailability_Type(Integer32):
    """Custom type hwvpAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwvpAvailability_Type.__name__ = "Integer32"
_HwvpAvailability_Object = MibTableColumn
hwvpAvailability = _HwvpAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 3),
    _HwvpAvailability_Type()
)
hwvpAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpAvailability.setStatus("current")


class _HwvpCaption_Type(WtcsDisplayString):
    """Custom type hwvpCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwvpCaption_Type.__name__ = "WtcsDisplayString"
_HwvpCaption_Object = MibTableColumn
hwvpCaption = _HwvpCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 4),
    _HwvpCaption_Type()
)
hwvpCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpCaption.setStatus("current")


class _HwvpConfigManagerErrorCode_Type(Integer32):
    """Custom type hwvpConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwvpConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwvpConfigManagerErrorCode_Object = MibTableColumn
hwvpConfigManagerErrorCode = _HwvpConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 5),
    _HwvpConfigManagerErrorCode_Type()
)
hwvpConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpConfigManagerErrorCode.setStatus("current")
_HwvpConfigManagerUserConfig_Type = TruthValue
_HwvpConfigManagerUserConfig_Object = MibTableColumn
hwvpConfigManagerUserConfig = _HwvpConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 6),
    _HwvpConfigManagerUserConfig_Type()
)
hwvpConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpConfigManagerUserConfig.setStatus("current")
_HwvpCreationClassName_Type = WtcsDisplayString
_HwvpCreationClassName_Object = MibTableColumn
hwvpCreationClassName = _HwvpCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 7),
    _HwvpCreationClassName_Type()
)
hwvpCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpCreationClassName.setStatus("current")
_HwvpCurrentReading_Type = Integer32
_HwvpCurrentReading_Object = MibTableColumn
hwvpCurrentReading = _HwvpCurrentReading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 8),
    _HwvpCurrentReading_Type()
)
hwvpCurrentReading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpCurrentReading.setStatus("current")
if mibBuilder.loadTexts:
    hwvpCurrentReading.setUnits("Millivolts")
_HwvpDescription_Type = WtcsDisplayString
_HwvpDescription_Object = MibTableColumn
hwvpDescription = _HwvpDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 9),
    _HwvpDescription_Type()
)
hwvpDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpDescription.setStatus("current")
_HwvpDeviceID_Type = WtcsDisplayString
_HwvpDeviceID_Object = MibTableColumn
hwvpDeviceID = _HwvpDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 10),
    _HwvpDeviceID_Type()
)
hwvpDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpDeviceID.setStatus("current")
_HwvpErrorCleared_Type = TruthValue
_HwvpErrorCleared_Object = MibTableColumn
hwvpErrorCleared = _HwvpErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 11),
    _HwvpErrorCleared_Type()
)
hwvpErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpErrorCleared.setStatus("current")
_HwvpErrorDescription_Type = WtcsDisplayString
_HwvpErrorDescription_Object = MibTableColumn
hwvpErrorDescription = _HwvpErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 12),
    _HwvpErrorDescription_Type()
)
hwvpErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpErrorDescription.setStatus("current")
_HwvpInstallDate_Type = DateAndTime
_HwvpInstallDate_Object = MibTableColumn
hwvpInstallDate = _HwvpInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 13),
    _HwvpInstallDate_Type()
)
hwvpInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpInstallDate.setStatus("current")
_HwvpIsLinear_Type = TruthValue
_HwvpIsLinear_Object = MibTableColumn
hwvpIsLinear = _HwvpIsLinear_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 14),
    _HwvpIsLinear_Type()
)
hwvpIsLinear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpIsLinear.setStatus("current")
_HwvpLastErrorCode_Type = Gauge32
_HwvpLastErrorCode_Object = MibTableColumn
hwvpLastErrorCode = _HwvpLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 15),
    _HwvpLastErrorCode_Type()
)
hwvpLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpLastErrorCode.setStatus("current")
_HwvpLowerThresholdCritical_Type = Integer32
_HwvpLowerThresholdCritical_Object = MibTableColumn
hwvpLowerThresholdCritical = _HwvpLowerThresholdCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 16),
    _HwvpLowerThresholdCritical_Type()
)
hwvpLowerThresholdCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpLowerThresholdCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwvpLowerThresholdCritical.setUnits("Millivolts")
_HwvpLowerThresholdFatal_Type = Integer32
_HwvpLowerThresholdFatal_Object = MibTableColumn
hwvpLowerThresholdFatal = _HwvpLowerThresholdFatal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 17),
    _HwvpLowerThresholdFatal_Type()
)
hwvpLowerThresholdFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpLowerThresholdFatal.setStatus("current")
if mibBuilder.loadTexts:
    hwvpLowerThresholdFatal.setUnits("Millivolts")
_HwvpLowerThresholdNonCritical_Type = Integer32
_HwvpLowerThresholdNonCritical_Object = MibTableColumn
hwvpLowerThresholdNonCritical = _HwvpLowerThresholdNonCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 18),
    _HwvpLowerThresholdNonCritical_Type()
)
hwvpLowerThresholdNonCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpLowerThresholdNonCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwvpLowerThresholdNonCritical.setUnits("Millivolts")
_HwvpMaxReadable_Type = Integer32
_HwvpMaxReadable_Object = MibTableColumn
hwvpMaxReadable = _HwvpMaxReadable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 19),
    _HwvpMaxReadable_Type()
)
hwvpMaxReadable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpMaxReadable.setStatus("current")
if mibBuilder.loadTexts:
    hwvpMaxReadable.setUnits("Millivolts")
_HwvpMinReadable_Type = Integer32
_HwvpMinReadable_Object = MibTableColumn
hwvpMinReadable = _HwvpMinReadable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 20),
    _HwvpMinReadable_Type()
)
hwvpMinReadable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpMinReadable.setStatus("current")
if mibBuilder.loadTexts:
    hwvpMinReadable.setUnits("Millivolts")
_HwvpName_Type = WtcsDisplayString
_HwvpName_Object = MibTableColumn
hwvpName = _HwvpName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 21),
    _HwvpName_Type()
)
hwvpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpName.setStatus("current")
_HwvpNominalReading_Type = Integer32
_HwvpNominalReading_Object = MibTableColumn
hwvpNominalReading = _HwvpNominalReading_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 22),
    _HwvpNominalReading_Type()
)
hwvpNominalReading.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpNominalReading.setStatus("current")
if mibBuilder.loadTexts:
    hwvpNominalReading.setUnits("Millivolts")
_HwvpNormalMax_Type = Integer32
_HwvpNormalMax_Object = MibTableColumn
hwvpNormalMax = _HwvpNormalMax_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 23),
    _HwvpNormalMax_Type()
)
hwvpNormalMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpNormalMax.setStatus("current")
if mibBuilder.loadTexts:
    hwvpNormalMax.setUnits("Millivolts")
_HwvpNormalMin_Type = Integer32
_HwvpNormalMin_Object = MibTableColumn
hwvpNormalMin = _HwvpNormalMin_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 24),
    _HwvpNormalMin_Type()
)
hwvpNormalMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpNormalMin.setStatus("current")
if mibBuilder.loadTexts:
    hwvpNormalMin.setUnits("Millivolts")
_HwvpPNPDeviceID_Type = WtcsDisplayString
_HwvpPNPDeviceID_Object = MibTableColumn
hwvpPNPDeviceID = _HwvpPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 25),
    _HwvpPNPDeviceID_Type()
)
hwvpPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpPNPDeviceID.setStatus("current")
_HwvpPowerManagementCapabilities_Type = WtcsDisplayString
_HwvpPowerManagementCapabilities_Object = MibTableColumn
hwvpPowerManagementCapabilities = _HwvpPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 26),
    _HwvpPowerManagementCapabilities_Type()
)
hwvpPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpPowerManagementCapabilities.setStatus("current")
_HwvpPowerManagementSupported_Type = TruthValue
_HwvpPowerManagementSupported_Object = MibTableColumn
hwvpPowerManagementSupported = _HwvpPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 27),
    _HwvpPowerManagementSupported_Type()
)
hwvpPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpPowerManagementSupported.setStatus("current")
_HwvpResolution_Type = Gauge32
_HwvpResolution_Object = MibTableColumn
hwvpResolution = _HwvpResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 28),
    _HwvpResolution_Type()
)
hwvpResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwvpResolution.setUnits("Tenths of Millivolts")


class _HwvpStatus_Type(Integer32):
    """Custom type hwvpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwvpStatus_Type.__name__ = "Integer32"
_HwvpStatus_Object = MibTableColumn
hwvpStatus = _HwvpStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 29),
    _HwvpStatus_Type()
)
hwvpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpStatus.setStatus("current")


class _HwvpStatusInfo_Type(Integer32):
    """Custom type hwvpStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwvpStatusInfo_Type.__name__ = "Integer32"
_HwvpStatusInfo_Object = MibTableColumn
hwvpStatusInfo = _HwvpStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 30),
    _HwvpStatusInfo_Type()
)
hwvpStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpStatusInfo.setStatus("current")
_HwvpSystemCreationClassName_Type = WtcsDisplayString
_HwvpSystemCreationClassName_Object = MibTableColumn
hwvpSystemCreationClassName = _HwvpSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 31),
    _HwvpSystemCreationClassName_Type()
)
hwvpSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpSystemCreationClassName.setStatus("current")
_HwvpSystemName_Type = WtcsDisplayString
_HwvpSystemName_Object = MibTableColumn
hwvpSystemName = _HwvpSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 32),
    _HwvpSystemName_Type()
)
hwvpSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpSystemName.setStatus("current")
_HwvpTolerance_Type = Integer32
_HwvpTolerance_Object = MibTableColumn
hwvpTolerance = _HwvpTolerance_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 33),
    _HwvpTolerance_Type()
)
hwvpTolerance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpTolerance.setStatus("current")
if mibBuilder.loadTexts:
    hwvpTolerance.setUnits("Millivolts")
_HwvpUpperThresholdCritical_Type = Integer32
_HwvpUpperThresholdCritical_Object = MibTableColumn
hwvpUpperThresholdCritical = _HwvpUpperThresholdCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 34),
    _HwvpUpperThresholdCritical_Type()
)
hwvpUpperThresholdCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpUpperThresholdCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwvpUpperThresholdCritical.setUnits("Millivolts")
_HwvpUpperThresholdFatal_Type = Integer32
_HwvpUpperThresholdFatal_Object = MibTableColumn
hwvpUpperThresholdFatal = _HwvpUpperThresholdFatal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 35),
    _HwvpUpperThresholdFatal_Type()
)
hwvpUpperThresholdFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpUpperThresholdFatal.setStatus("current")
if mibBuilder.loadTexts:
    hwvpUpperThresholdFatal.setUnits("Millivolts")
_HwvpUpperThresholdNonCritical_Type = Integer32
_HwvpUpperThresholdNonCritical_Object = MibTableColumn
hwvpUpperThresholdNonCritical = _HwvpUpperThresholdNonCritical_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 6, 5, 1, 36),
    _HwvpUpperThresholdNonCritical_Type()
)
hwvpUpperThresholdNonCritical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvpUpperThresholdNonCritical.setStatus("current")
if mibBuilder.loadTexts:
    hwvpUpperThresholdNonCritical.setUnits("Millivolts")
_WmiPrinting_ObjectIdentity = ObjectIdentity
wmiPrinting = _WmiPrinting_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7)
)
if mibBuilder.loadTexts:
    wmiPrinting.setStatus("current")
_Win32PrinterTable_Object = MibTable
win32PrinterTable = _Win32PrinterTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1)
)
if mibBuilder.loadTexts:
    win32PrinterTable.setStatus("current")
_Win32PrinterEntry_Object = MibTableRow
win32PrinterEntry = _Win32PrinterEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1)
)
win32PrinterEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwprIndex"),
)
if mibBuilder.loadTexts:
    win32PrinterEntry.setStatus("current")


class _HwprIndex_Type(Integer32):
    """Custom type hwprIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwprIndex_Type.__name__ = "Integer32"
_HwprIndex_Object = MibTableColumn
hwprIndex = _HwprIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 1),
    _HwprIndex_Type()
)
hwprIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprIndex.setStatus("current")
_HwprAttributes_Type = Gauge32
_HwprAttributes_Object = MibTableColumn
hwprAttributes = _HwprAttributes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 2),
    _HwprAttributes_Type()
)
hwprAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprAttributes.setStatus("current")


class _HwprAvailability_Type(Integer32):
    """Custom type hwprAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningOrFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwprAvailability_Type.__name__ = "Integer32"
_HwprAvailability_Object = MibTableColumn
hwprAvailability = _HwprAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 3),
    _HwprAvailability_Type()
)
hwprAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprAvailability.setStatus("current")
_HwprAvailableJobSheets_Type = WtcsDisplayString
_HwprAvailableJobSheets_Object = MibTableColumn
hwprAvailableJobSheets = _HwprAvailableJobSheets_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 4),
    _HwprAvailableJobSheets_Type()
)
hwprAvailableJobSheets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprAvailableJobSheets.setStatus("current")
_HwprAveragePagesPerMinute_Type = Gauge32
_HwprAveragePagesPerMinute_Object = MibTableColumn
hwprAveragePagesPerMinute = _HwprAveragePagesPerMinute_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 5),
    _HwprAveragePagesPerMinute_Type()
)
hwprAveragePagesPerMinute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprAveragePagesPerMinute.setStatus("current")
_HwprCapabilities_Type = WtcsDisplayString
_HwprCapabilities_Object = MibTableColumn
hwprCapabilities = _HwprCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 6),
    _HwprCapabilities_Type()
)
hwprCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCapabilities.setStatus("current")
_HwprCapabilityDescriptions_Type = WtcsDisplayString
_HwprCapabilityDescriptions_Object = MibTableColumn
hwprCapabilityDescriptions = _HwprCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 7),
    _HwprCapabilityDescriptions_Type()
)
hwprCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCapabilityDescriptions.setStatus("current")


class _HwprCaption_Type(WtcsDisplayString):
    """Custom type hwprCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwprCaption_Type.__name__ = "WtcsDisplayString"
_HwprCaption_Object = MibTableColumn
hwprCaption = _HwprCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 8),
    _HwprCaption_Type()
)
hwprCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCaption.setStatus("current")
_HwprCharSetsSupported_Type = WtcsDisplayString
_HwprCharSetsSupported_Object = MibTableColumn
hwprCharSetsSupported = _HwprCharSetsSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 9),
    _HwprCharSetsSupported_Type()
)
hwprCharSetsSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCharSetsSupported.setStatus("current")
_HwprComment_Type = WtcsDisplayString
_HwprComment_Object = MibTableColumn
hwprComment = _HwprComment_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 10),
    _HwprComment_Type()
)
hwprComment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprComment.setStatus("current")


class _HwprConfigManagerErrorCode_Type(Integer32):
    """Custom type hwprConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwprConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwprConfigManagerErrorCode_Object = MibTableColumn
hwprConfigManagerErrorCode = _HwprConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 11),
    _HwprConfigManagerErrorCode_Type()
)
hwprConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprConfigManagerErrorCode.setStatus("current")
_HwprConfigManagerUserConfig_Type = TruthValue
_HwprConfigManagerUserConfig_Object = MibTableColumn
hwprConfigManagerUserConfig = _HwprConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 12),
    _HwprConfigManagerUserConfig_Type()
)
hwprConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprConfigManagerUserConfig.setStatus("current")
_HwprCreationClassName_Type = WtcsDisplayString
_HwprCreationClassName_Object = MibTableColumn
hwprCreationClassName = _HwprCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 13),
    _HwprCreationClassName_Type()
)
hwprCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCreationClassName.setStatus("current")
_HwprCurrentCapabilities_Type = WtcsDisplayString
_HwprCurrentCapabilities_Object = MibTableColumn
hwprCurrentCapabilities = _HwprCurrentCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 14),
    _HwprCurrentCapabilities_Type()
)
hwprCurrentCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCurrentCapabilities.setStatus("current")
_HwprCurrentCharSet_Type = WtcsDisplayString
_HwprCurrentCharSet_Object = MibTableColumn
hwprCurrentCharSet = _HwprCurrentCharSet_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 15),
    _HwprCurrentCharSet_Type()
)
hwprCurrentCharSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCurrentCharSet.setStatus("current")


class _HwprCurrentLanguage_Type(Integer32):
    """Custom type hwprCurrentLanguage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("automatic", 38),
          ("caPSL", 43),
          ("ccitt", 27),
          ("codeV", 23),
          ("cpap", 29),
          ("ddif", 12),
          ("decPPL", 30),
          ("diagnostic", 42),
          ("doc", 33),
          ("dodca", 16),
          ("dscdse", 24),
          ("epson", 11),
          ("escapeP", 10),
          ("excl", 44),
          ("hpgl", 4),
          ("igp", 22),
          ("imPress", 34),
          ("interpress", 13),
          ("ipds", 8),
          ("iso6429", 14),
          ("lcds", 45),
          ("lineData", 15),
          ("lips", 40),
          ("ln03", 26),
          ("mime", 47),
          ("nec201PL", 37),
          ("npap", 32),
          ("npdl", 36),
          ("other", 1),
          ("pages", 39),
          ("pcl", 3),
          ("pds", 21),
          ("pinwriter", 35),
          ("pjl", 5),
          ("ppds", 9),
          ("ps", 6),
          ("psprinter", 7),
          ("quic", 28),
          ("regis", 17),
          ("scs", 18),
          ("simpleText", 31),
          ("spdl", 19),
          ("tek4014", 20),
          ("tiff", 41),
          ("unknown", 2),
          ("wps", 25),
          ("xes", 46))
    )


_HwprCurrentLanguage_Type.__name__ = "Integer32"
_HwprCurrentLanguage_Object = MibTableColumn
hwprCurrentLanguage = _HwprCurrentLanguage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 16),
    _HwprCurrentLanguage_Type()
)
hwprCurrentLanguage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCurrentLanguage.setStatus("current")
_HwprCurrentMimeType_Type = WtcsDisplayString
_HwprCurrentMimeType_Object = MibTableColumn
hwprCurrentMimeType = _HwprCurrentMimeType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 17),
    _HwprCurrentMimeType_Type()
)
hwprCurrentMimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCurrentMimeType.setStatus("current")
_HwprCurrentNaturalLanguage_Type = WtcsDisplayString
_HwprCurrentNaturalLanguage_Object = MibTableColumn
hwprCurrentNaturalLanguage = _HwprCurrentNaturalLanguage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 18),
    _HwprCurrentNaturalLanguage_Type()
)
hwprCurrentNaturalLanguage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCurrentNaturalLanguage.setStatus("current")
_HwprCurrentPaperType_Type = WtcsDisplayString
_HwprCurrentPaperType_Object = MibTableColumn
hwprCurrentPaperType = _HwprCurrentPaperType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 19),
    _HwprCurrentPaperType_Type()
)
hwprCurrentPaperType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprCurrentPaperType.setStatus("current")
_HwprDefault_Type = TruthValue
_HwprDefault_Object = MibTableColumn
hwprDefault = _HwprDefault_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 20),
    _HwprDefault_Type()
)
hwprDefault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefault.setStatus("current")
_HwprDefaultCapabilities_Type = WtcsDisplayString
_HwprDefaultCapabilities_Object = MibTableColumn
hwprDefaultCapabilities = _HwprDefaultCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 21),
    _HwprDefaultCapabilities_Type()
)
hwprDefaultCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultCapabilities.setStatus("current")
_HwprDefaultCopies_Type = Gauge32
_HwprDefaultCopies_Object = MibTableColumn
hwprDefaultCopies = _HwprDefaultCopies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 22),
    _HwprDefaultCopies_Type()
)
hwprDefaultCopies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultCopies.setStatus("current")


class _HwprDefaultLanguage_Type(Integer32):
    """Custom type hwprDefaultLanguage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("automatic", 38),
          ("caPSL", 43),
          ("ccitt", 27),
          ("codeV", 23),
          ("cpap", 29),
          ("ddif", 12),
          ("decPPL", 30),
          ("diagnostic", 42),
          ("doc", 33),
          ("dodca", 16),
          ("dscdse", 24),
          ("epson", 11),
          ("escapeP", 10),
          ("excl", 44),
          ("hpgl", 4),
          ("igp", 22),
          ("imPress", 34),
          ("interpress", 13),
          ("ipds", 8),
          ("iso6429", 14),
          ("lcds", 45),
          ("lineData", 15),
          ("lips", 40),
          ("ln03", 26),
          ("mime", 47),
          ("nec201PL", 37),
          ("npap", 32),
          ("npdl", 36),
          ("other", 1),
          ("pages", 39),
          ("pcl", 3),
          ("pds", 21),
          ("pinwriter", 35),
          ("pjl", 5),
          ("ppds", 9),
          ("ps", 6),
          ("psprinter", 7),
          ("quic", 28),
          ("regis", 17),
          ("scs", 18),
          ("simpleText", 31),
          ("spdl", 19),
          ("tek4014", 20),
          ("tiff", 41),
          ("unknown", 2),
          ("wps", 25),
          ("xes", 46))
    )


_HwprDefaultLanguage_Type.__name__ = "Integer32"
_HwprDefaultLanguage_Object = MibTableColumn
hwprDefaultLanguage = _HwprDefaultLanguage_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 23),
    _HwprDefaultLanguage_Type()
)
hwprDefaultLanguage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultLanguage.setStatus("current")
_HwprDefaultMimeType_Type = WtcsDisplayString
_HwprDefaultMimeType_Object = MibTableColumn
hwprDefaultMimeType = _HwprDefaultMimeType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 24),
    _HwprDefaultMimeType_Type()
)
hwprDefaultMimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultMimeType.setStatus("current")
_HwprDefaultNumberUp_Type = Gauge32
_HwprDefaultNumberUp_Object = MibTableColumn
hwprDefaultNumberUp = _HwprDefaultNumberUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 25),
    _HwprDefaultNumberUp_Type()
)
hwprDefaultNumberUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultNumberUp.setStatus("current")
_HwprDefaultPaperType_Type = WtcsDisplayString
_HwprDefaultPaperType_Object = MibTableColumn
hwprDefaultPaperType = _HwprDefaultPaperType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 26),
    _HwprDefaultPaperType_Type()
)
hwprDefaultPaperType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultPaperType.setStatus("current")
_HwprDefaultPriority_Type = Gauge32
_HwprDefaultPriority_Object = MibTableColumn
hwprDefaultPriority = _HwprDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 27),
    _HwprDefaultPriority_Type()
)
hwprDefaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDefaultPriority.setStatus("current")
_HwprDescription_Type = WtcsDisplayString
_HwprDescription_Object = MibTableColumn
hwprDescription = _HwprDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 28),
    _HwprDescription_Type()
)
hwprDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDescription.setStatus("current")


class _HwprDetectedErrorState_Type(Integer32):
    """Custom type hwprDetectedErrorState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("doorOpen", 8),
          ("jammed", 9),
          ("lowPaper", 4),
          ("lowToner", 6),
          ("noError", 3),
          ("noPaper", 5),
          ("noToner", 7),
          ("offline", 10),
          ("other", 2),
          ("outputBinFull", 12),
          ("serviceRequested", 11),
          ("unknown", 1))
    )


_HwprDetectedErrorState_Type.__name__ = "Integer32"
_HwprDetectedErrorState_Object = MibTableColumn
hwprDetectedErrorState = _HwprDetectedErrorState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 29),
    _HwprDetectedErrorState_Type()
)
hwprDetectedErrorState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDetectedErrorState.setStatus("current")
_HwprDeviceID_Type = WtcsDisplayString
_HwprDeviceID_Object = MibTableColumn
hwprDeviceID = _HwprDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 30),
    _HwprDeviceID_Type()
)
hwprDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDeviceID.setStatus("current")
_HwprDirect_Type = TruthValue
_HwprDirect_Object = MibTableColumn
hwprDirect = _HwprDirect_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 31),
    _HwprDirect_Type()
)
hwprDirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDirect.setStatus("current")
_HwprDoCompleteFirst_Type = TruthValue
_HwprDoCompleteFirst_Object = MibTableColumn
hwprDoCompleteFirst = _HwprDoCompleteFirst_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 32),
    _HwprDoCompleteFirst_Type()
)
hwprDoCompleteFirst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDoCompleteFirst.setStatus("current")
_HwprDriverName_Type = WtcsDisplayString
_HwprDriverName_Object = MibTableColumn
hwprDriverName = _HwprDriverName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 33),
    _HwprDriverName_Type()
)
hwprDriverName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprDriverName.setStatus("current")
_HwprEnableBIDI_Type = TruthValue
_HwprEnableBIDI_Object = MibTableColumn
hwprEnableBIDI = _HwprEnableBIDI_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 34),
    _HwprEnableBIDI_Type()
)
hwprEnableBIDI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprEnableBIDI.setStatus("current")
_HwprEnableDevQueryPrint_Type = TruthValue
_HwprEnableDevQueryPrint_Object = MibTableColumn
hwprEnableDevQueryPrint = _HwprEnableDevQueryPrint_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 35),
    _HwprEnableDevQueryPrint_Type()
)
hwprEnableDevQueryPrint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprEnableDevQueryPrint.setStatus("current")
_HwprErrorCleared_Type = TruthValue
_HwprErrorCleared_Object = MibTableColumn
hwprErrorCleared = _HwprErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 36),
    _HwprErrorCleared_Type()
)
hwprErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprErrorCleared.setStatus("current")
_HwprErrorDescription_Type = WtcsDisplayString
_HwprErrorDescription_Object = MibTableColumn
hwprErrorDescription = _HwprErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 37),
    _HwprErrorDescription_Type()
)
hwprErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprErrorDescription.setStatus("current")
_HwprErrorInformation_Type = WtcsDisplayString
_HwprErrorInformation_Object = MibTableColumn
hwprErrorInformation = _HwprErrorInformation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 38),
    _HwprErrorInformation_Type()
)
hwprErrorInformation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprErrorInformation.setStatus("current")


class _HwprExtendedDetectedErrorState_Type(Integer32):
    """Custom type hwprExtendedDetectedErrorState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("cannotPrintPage", 12),
          ("doorOpen", 7),
          ("jammed", 8),
          ("lowPaper", 3),
          ("lowToner", 5),
          ("noError", 2),
          ("noPaper", 4),
          ("noToner", 6),
          ("other", 1),
          ("outOfMemory", 14),
          ("outputBinFull", 10),
          ("paperProblem", 11),
          ("serverUnknown", 15),
          ("serviceRequested", 9),
          ("unknown", 0),
          ("userInterventionRequired", 13))
    )


_HwprExtendedDetectedErrorState_Type.__name__ = "Integer32"
_HwprExtendedDetectedErrorState_Object = MibTableColumn
hwprExtendedDetectedErrorState = _HwprExtendedDetectedErrorState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 39),
    _HwprExtendedDetectedErrorState_Type()
)
hwprExtendedDetectedErrorState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprExtendedDetectedErrorState.setStatus("current")


class _HwprExtendedPrinterStatus_Type(Integer32):
    """Custom type hwprExtendedPrinterStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("busy", 10),
          ("error", 9),
          ("iOActive", 17),
          ("idle", 3),
          ("initialization", 14),
          ("manualFeed", 18),
          ("notAvailable", 11),
          ("offline", 7),
          ("other", 1),
          ("paused", 8),
          ("pendingDeletion", 16),
          ("powerSave", 15),
          ("printing", 4),
          ("processing", 13),
          ("stoppedPrinting", 6),
          ("unknown", 2),
          ("waiting", 12),
          ("warmup", 5))
    )


_HwprExtendedPrinterStatus_Type.__name__ = "Integer32"
_HwprExtendedPrinterStatus_Object = MibTableColumn
hwprExtendedPrinterStatus = _HwprExtendedPrinterStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 40),
    _HwprExtendedPrinterStatus_Type()
)
hwprExtendedPrinterStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprExtendedPrinterStatus.setStatus("current")
_HwprHidden_Type = TruthValue
_HwprHidden_Object = MibTableColumn
hwprHidden = _HwprHidden_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 41),
    _HwprHidden_Type()
)
hwprHidden.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprHidden.setStatus("current")
_HwprHorizontalResolution_Type = Gauge32
_HwprHorizontalResolution_Object = MibTableColumn
hwprHorizontalResolution = _HwprHorizontalResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 42),
    _HwprHorizontalResolution_Type()
)
hwprHorizontalResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprHorizontalResolution.setStatus("current")
_HwprInstallDate_Type = DateAndTime
_HwprInstallDate_Object = MibTableColumn
hwprInstallDate = _HwprInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 43),
    _HwprInstallDate_Type()
)
hwprInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprInstallDate.setStatus("current")
_HwprJobCountSinceLastReset_Type = Gauge32
_HwprJobCountSinceLastReset_Object = MibTableColumn
hwprJobCountSinceLastReset = _HwprJobCountSinceLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 44),
    _HwprJobCountSinceLastReset_Type()
)
hwprJobCountSinceLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprJobCountSinceLastReset.setStatus("current")
_HwprKeepPrintedJobs_Type = TruthValue
_HwprKeepPrintedJobs_Object = MibTableColumn
hwprKeepPrintedJobs = _HwprKeepPrintedJobs_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 45),
    _HwprKeepPrintedJobs_Type()
)
hwprKeepPrintedJobs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprKeepPrintedJobs.setStatus("current")
_HwprLanguagesSupported_Type = WtcsDisplayString
_HwprLanguagesSupported_Object = MibTableColumn
hwprLanguagesSupported = _HwprLanguagesSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 46),
    _HwprLanguagesSupported_Type()
)
hwprLanguagesSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprLanguagesSupported.setStatus("current")
_HwprLastErrorCode_Type = Gauge32
_HwprLastErrorCode_Object = MibTableColumn
hwprLastErrorCode = _HwprLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 47),
    _HwprLastErrorCode_Type()
)
hwprLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprLastErrorCode.setStatus("current")
_HwprLocal_Type = TruthValue
_HwprLocal_Object = MibTableColumn
hwprLocal = _HwprLocal_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 48),
    _HwprLocal_Type()
)
hwprLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprLocal.setStatus("current")
_HwprLocation_Type = WtcsDisplayString
_HwprLocation_Object = MibTableColumn
hwprLocation = _HwprLocation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 49),
    _HwprLocation_Type()
)
hwprLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprLocation.setStatus("current")


class _HwprMarkingTechnology_Type(Integer32):
    """Custom type hwprMarkingTechnology based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("eBeam", 26),
          ("electroerosion", 20),
          ("electrophotographicLED", 3),
          ("electrophotographicLaser", 4),
          ("electrophotographicOther", 5),
          ("electrostatic", 21),
          ("impactBand", 10),
          ("impactMovingHeadDotMatrix24pin", 7),
          ("impactMovingHeadDotMatrix9pin", 6),
          ("impactMovingHeadDotMatrixOther", 8),
          ("impactMovingHeadFullyFormed", 9),
          ("impactOther", 11),
          ("inkjetAqueous", 12),
          ("inkjetOther", 14),
          ("inkjetSolid", 13),
          ("ionDeposition", 25),
          ("other", 1),
          ("pen", 15),
          ("photographicImagesetter", 23),
          ("photographicMicrofiche", 22),
          ("photographicOther", 24),
          ("thermalDiffusion", 18),
          ("thermalOther", 19),
          ("thermalSensitive", 17),
          ("thermalTransfer", 16),
          ("typesetter", 27),
          ("unknown", 2))
    )


_HwprMarkingTechnology_Type.__name__ = "Integer32"
_HwprMarkingTechnology_Object = MibTableColumn
hwprMarkingTechnology = _HwprMarkingTechnology_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 50),
    _HwprMarkingTechnology_Type()
)
hwprMarkingTechnology.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprMarkingTechnology.setStatus("current")
_HwprMaxCopies_Type = Gauge32
_HwprMaxCopies_Object = MibTableColumn
hwprMaxCopies = _HwprMaxCopies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 51),
    _HwprMaxCopies_Type()
)
hwprMaxCopies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprMaxCopies.setStatus("current")
_HwprMaxNumberUp_Type = Gauge32
_HwprMaxNumberUp_Object = MibTableColumn
hwprMaxNumberUp = _HwprMaxNumberUp_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 52),
    _HwprMaxNumberUp_Type()
)
hwprMaxNumberUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprMaxNumberUp.setStatus("current")
_HwprMaxSizeSupported_Type = Gauge32
_HwprMaxSizeSupported_Object = MibTableColumn
hwprMaxSizeSupported = _HwprMaxSizeSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 53),
    _HwprMaxSizeSupported_Type()
)
hwprMaxSizeSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprMaxSizeSupported.setStatus("current")
_HwprMimeTypesSupported_Type = WtcsDisplayString
_HwprMimeTypesSupported_Object = MibTableColumn
hwprMimeTypesSupported = _HwprMimeTypesSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 54),
    _HwprMimeTypesSupported_Type()
)
hwprMimeTypesSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprMimeTypesSupported.setStatus("current")
_HwprName_Type = WtcsDisplayString
_HwprName_Object = MibTableColumn
hwprName = _HwprName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 55),
    _HwprName_Type()
)
hwprName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprName.setStatus("current")
_HwprNaturalLanguagesSupported_Type = WtcsDisplayString
_HwprNaturalLanguagesSupported_Object = MibTableColumn
hwprNaturalLanguagesSupported = _HwprNaturalLanguagesSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 56),
    _HwprNaturalLanguagesSupported_Type()
)
hwprNaturalLanguagesSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprNaturalLanguagesSupported.setStatus("current")
_HwprNetwork_Type = TruthValue
_HwprNetwork_Object = MibTableColumn
hwprNetwork = _HwprNetwork_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 57),
    _HwprNetwork_Type()
)
hwprNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprNetwork.setStatus("current")
_HwprPaperSizesSupported_Type = WtcsDisplayString
_HwprPaperSizesSupported_Object = MibTableColumn
hwprPaperSizesSupported = _HwprPaperSizesSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 58),
    _HwprPaperSizesSupported_Type()
)
hwprPaperSizesSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPaperSizesSupported.setStatus("current")
_HwprPaperTypesAvailable_Type = WtcsDisplayString
_HwprPaperTypesAvailable_Object = MibTableColumn
hwprPaperTypesAvailable = _HwprPaperTypesAvailable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 59),
    _HwprPaperTypesAvailable_Type()
)
hwprPaperTypesAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPaperTypesAvailable.setStatus("current")
_HwprParameters_Type = WtcsDisplayString
_HwprParameters_Object = MibTableColumn
hwprParameters = _HwprParameters_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 60),
    _HwprParameters_Type()
)
hwprParameters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprParameters.setStatus("current")
_HwprPNPDeviceID_Type = WtcsDisplayString
_HwprPNPDeviceID_Object = MibTableColumn
hwprPNPDeviceID = _HwprPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 61),
    _HwprPNPDeviceID_Type()
)
hwprPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPNPDeviceID.setStatus("current")
_HwprPortName_Type = WtcsDisplayString
_HwprPortName_Object = MibTableColumn
hwprPortName = _HwprPortName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 62),
    _HwprPortName_Type()
)
hwprPortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPortName.setStatus("current")
_HwprPowerManagementCapabilities_Type = WtcsDisplayString
_HwprPowerManagementCapabilities_Object = MibTableColumn
hwprPowerManagementCapabilities = _HwprPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 63),
    _HwprPowerManagementCapabilities_Type()
)
hwprPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPowerManagementCapabilities.setStatus("current")
_HwprPowerManagementSupported_Type = TruthValue
_HwprPowerManagementSupported_Object = MibTableColumn
hwprPowerManagementSupported = _HwprPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 64),
    _HwprPowerManagementSupported_Type()
)
hwprPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPowerManagementSupported.setStatus("current")
_HwprPrinterPaperNames_Type = WtcsDisplayString
_HwprPrinterPaperNames_Object = MibTableColumn
hwprPrinterPaperNames = _HwprPrinterPaperNames_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 65),
    _HwprPrinterPaperNames_Type()
)
hwprPrinterPaperNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPrinterPaperNames.setStatus("current")


class _HwprPrinterState_Type(Integer32):
    """Custom type hwprPrinterState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("busy", 10),
          ("doorOpen", 23),
          ("error", 2),
          ("initialization", 16),
          ("ioActive", 9),
          ("manualFeed", 6),
          ("noToner", 19),
          ("notAvailable", 13),
          ("offline", 8),
          ("outOfMemory", 22),
          ("outputBinFull", 12),
          ("pagePunt", 20),
          ("paperJam", 4),
          ("paperOut", 5),
          ("paperProblem", 7),
          ("paused", 1),
          ("pendingDeletion", 3),
          ("powerSave", 25),
          ("printing", 11),
          ("processing", 15),
          ("serverUnknown", 24),
          ("tonerLow", 18),
          ("userInterventionRequired", 21),
          ("waiting", 14),
          ("warmingUp", 17))
    )


_HwprPrinterState_Type.__name__ = "Integer32"
_HwprPrinterState_Object = MibTableColumn
hwprPrinterState = _HwprPrinterState_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 66),
    _HwprPrinterState_Type()
)
hwprPrinterState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPrinterState.setStatus("current")


class _HwprPrinterStatus_Type(Integer32):
    """Custom type hwprPrinterStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("idle", 3),
          ("offline", 7),
          ("other", 1),
          ("printing", 4),
          ("stoppedPrinting", 6),
          ("unknown", 2),
          ("warmup", 5))
    )


_HwprPrinterStatus_Type.__name__ = "Integer32"
_HwprPrinterStatus_Object = MibTableColumn
hwprPrinterStatus = _HwprPrinterStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 67),
    _HwprPrinterStatus_Type()
)
hwprPrinterStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPrinterStatus.setStatus("current")
_HwprPrintJobDataType_Type = WtcsDisplayString
_HwprPrintJobDataType_Object = MibTableColumn
hwprPrintJobDataType = _HwprPrintJobDataType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 68),
    _HwprPrintJobDataType_Type()
)
hwprPrintJobDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPrintJobDataType.setStatus("current")
_HwprPrintProcessor_Type = WtcsDisplayString
_HwprPrintProcessor_Object = MibTableColumn
hwprPrintProcessor = _HwprPrintProcessor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 69),
    _HwprPrintProcessor_Type()
)
hwprPrintProcessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPrintProcessor.setStatus("current")
_HwprPriority_Type = Gauge32
_HwprPriority_Object = MibTableColumn
hwprPriority = _HwprPriority_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 70),
    _HwprPriority_Type()
)
hwprPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPriority.setStatus("current")
_HwprPublished_Type = TruthValue
_HwprPublished_Object = MibTableColumn
hwprPublished = _HwprPublished_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 71),
    _HwprPublished_Type()
)
hwprPublished.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprPublished.setStatus("current")
_HwprQueued_Type = TruthValue
_HwprQueued_Object = MibTableColumn
hwprQueued = _HwprQueued_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 72),
    _HwprQueued_Type()
)
hwprQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprQueued.setStatus("current")
_HwprRawOnly_Type = TruthValue
_HwprRawOnly_Object = MibTableColumn
hwprRawOnly = _HwprRawOnly_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 73),
    _HwprRawOnly_Type()
)
hwprRawOnly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprRawOnly.setStatus("current")
_HwprSeparatorFile_Type = WtcsDisplayString
_HwprSeparatorFile_Object = MibTableColumn
hwprSeparatorFile = _HwprSeparatorFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 74),
    _HwprSeparatorFile_Type()
)
hwprSeparatorFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprSeparatorFile.setStatus("current")
_HwprServerName_Type = WtcsDisplayString
_HwprServerName_Object = MibTableColumn
hwprServerName = _HwprServerName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 75),
    _HwprServerName_Type()
)
hwprServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprServerName.setStatus("current")
_HwprShared_Type = TruthValue
_HwprShared_Object = MibTableColumn
hwprShared = _HwprShared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 76),
    _HwprShared_Type()
)
hwprShared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprShared.setStatus("current")
_HwprShareName_Type = WtcsDisplayString
_HwprShareName_Object = MibTableColumn
hwprShareName = _HwprShareName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 77),
    _HwprShareName_Type()
)
hwprShareName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprShareName.setStatus("current")
_HwprSpoolEnabled_Type = TruthValue
_HwprSpoolEnabled_Object = MibTableColumn
hwprSpoolEnabled = _HwprSpoolEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 78),
    _HwprSpoolEnabled_Type()
)
hwprSpoolEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprSpoolEnabled.setStatus("current")
_HwprStartTime_Type = DateAndTime
_HwprStartTime_Object = MibTableColumn
hwprStartTime = _HwprStartTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 79),
    _HwprStartTime_Type()
)
hwprStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprStartTime.setStatus("current")


class _HwprStatus_Type(Integer32):
    """Custom type hwprStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwprStatus_Type.__name__ = "Integer32"
_HwprStatus_Object = MibTableColumn
hwprStatus = _HwprStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 80),
    _HwprStatus_Type()
)
hwprStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprStatus.setStatus("current")


class _HwprStatusInfo_Type(Integer32):
    """Custom type hwprStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwprStatusInfo_Type.__name__ = "Integer32"
_HwprStatusInfo_Object = MibTableColumn
hwprStatusInfo = _HwprStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 81),
    _HwprStatusInfo_Type()
)
hwprStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprStatusInfo.setStatus("current")
_HwprSystemCreationClassName_Type = WtcsDisplayString
_HwprSystemCreationClassName_Object = MibTableColumn
hwprSystemCreationClassName = _HwprSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 82),
    _HwprSystemCreationClassName_Type()
)
hwprSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprSystemCreationClassName.setStatus("current")
_HwprSystemName_Type = WtcsDisplayString
_HwprSystemName_Object = MibTableColumn
hwprSystemName = _HwprSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 83),
    _HwprSystemName_Type()
)
hwprSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprSystemName.setStatus("current")
_HwprTimeOfLastReset_Type = DateAndTime
_HwprTimeOfLastReset_Object = MibTableColumn
hwprTimeOfLastReset = _HwprTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 84),
    _HwprTimeOfLastReset_Type()
)
hwprTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprTimeOfLastReset.setStatus("current")
_HwprUntilTime_Type = DateAndTime
_HwprUntilTime_Object = MibTableColumn
hwprUntilTime = _HwprUntilTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 85),
    _HwprUntilTime_Type()
)
hwprUntilTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprUntilTime.setStatus("current")
_HwprVerticalResolution_Type = Gauge32
_HwprVerticalResolution_Object = MibTableColumn
hwprVerticalResolution = _HwprVerticalResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 86),
    _HwprVerticalResolution_Type()
)
hwprVerticalResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprVerticalResolution.setStatus("current")
_HwprWorkOffline_Type = TruthValue
_HwprWorkOffline_Object = MibTableColumn
hwprWorkOffline = _HwprWorkOffline_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 1, 1, 87),
    _HwprWorkOffline_Type()
)
hwprWorkOffline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprWorkOffline.setStatus("current")
_Win32PrinterConfigurationTable_Object = MibTable
win32PrinterConfigurationTable = _Win32PrinterConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2)
)
if mibBuilder.loadTexts:
    win32PrinterConfigurationTable.setStatus("current")
_Win32PrinterConfigurationEntry_Object = MibTableRow
win32PrinterConfigurationEntry = _Win32PrinterConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1)
)
win32PrinterConfigurationEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwprcIndex"),
)
if mibBuilder.loadTexts:
    win32PrinterConfigurationEntry.setStatus("current")


class _HwprcIndex_Type(Integer32):
    """Custom type hwprcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwprcIndex_Type.__name__ = "Integer32"
_HwprcIndex_Object = MibTableColumn
hwprcIndex = _HwprcIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 1),
    _HwprcIndex_Type()
)
hwprcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcIndex.setStatus("current")
_HwprcBitsPerPel_Type = Gauge32
_HwprcBitsPerPel_Object = MibTableColumn
hwprcBitsPerPel = _HwprcBitsPerPel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 2),
    _HwprcBitsPerPel_Type()
)
hwprcBitsPerPel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcBitsPerPel.setStatus("current")


class _HwprcCaption_Type(WtcsDisplayString):
    """Custom type hwprcCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwprcCaption_Type.__name__ = "WtcsDisplayString"
_HwprcCaption_Object = MibTableColumn
hwprcCaption = _HwprcCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 3),
    _HwprcCaption_Type()
)
hwprcCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcCaption.setStatus("current")
_HwprcCollate_Type = TruthValue
_HwprcCollate_Object = MibTableColumn
hwprcCollate = _HwprcCollate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 4),
    _HwprcCollate_Type()
)
hwprcCollate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcCollate.setStatus("current")


class _HwprcColor_Type(Integer32):
    """Custom type hwprcColor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("color", 2),
          ("monochrome", 1))
    )


_HwprcColor_Type.__name__ = "Integer32"
_HwprcColor_Object = MibTableColumn
hwprcColor = _HwprcColor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 5),
    _HwprcColor_Type()
)
hwprcColor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcColor.setStatus("current")
_HwprcCopies_Type = Gauge32
_HwprcCopies_Object = MibTableColumn
hwprcCopies = _HwprcCopies_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 6),
    _HwprcCopies_Type()
)
hwprcCopies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcCopies.setStatus("current")
_HwprcDescription_Type = WtcsDisplayString
_HwprcDescription_Object = MibTableColumn
hwprcDescription = _HwprcDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 7),
    _HwprcDescription_Type()
)
hwprcDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDescription.setStatus("current")
_HwprcDeviceName_Type = WtcsDisplayString
_HwprcDeviceName_Object = MibTableColumn
hwprcDeviceName = _HwprcDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 8),
    _HwprcDeviceName_Type()
)
hwprcDeviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDeviceName.setStatus("current")
_HwprcDisplayFlags_Type = Gauge32
_HwprcDisplayFlags_Object = MibTableColumn
hwprcDisplayFlags = _HwprcDisplayFlags_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 9),
    _HwprcDisplayFlags_Type()
)
hwprcDisplayFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDisplayFlags.setStatus("current")
_HwprcDisplayFrequency_Type = Gauge32
_HwprcDisplayFrequency_Object = MibTableColumn
hwprcDisplayFrequency = _HwprcDisplayFrequency_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 10),
    _HwprcDisplayFrequency_Type()
)
hwprcDisplayFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDisplayFrequency.setStatus("current")


class _HwprcDitherType_Type(Integer32):
    """Custom type hwprcDitherType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("coarseBrush", 2),
          ("fineBrush", 3),
          ("greyscale", 5),
          ("lineArt", 4),
          ("noDithering", 1))
    )


_HwprcDitherType_Type.__name__ = "Integer32"
_HwprcDitherType_Object = MibTableColumn
hwprcDitherType = _HwprcDitherType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 11),
    _HwprcDitherType_Type()
)
hwprcDitherType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDitherType.setStatus("current")
_HwprcDriverVersion_Type = Gauge32
_HwprcDriverVersion_Object = MibTableColumn
hwprcDriverVersion = _HwprcDriverVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 12),
    _HwprcDriverVersion_Type()
)
hwprcDriverVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDriverVersion.setStatus("current")
_HwprcDuplex_Type = TruthValue
_HwprcDuplex_Object = MibTableColumn
hwprcDuplex = _HwprcDuplex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 13),
    _HwprcDuplex_Type()
)
hwprcDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcDuplex.setStatus("current")
_HwprcFormName_Type = WtcsDisplayString
_HwprcFormName_Object = MibTableColumn
hwprcFormName = _HwprcFormName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 14),
    _HwprcFormName_Type()
)
hwprcFormName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcFormName.setStatus("current")
_HwprcHorizontalResolution_Type = Gauge32
_HwprcHorizontalResolution_Object = MibTableColumn
hwprcHorizontalResolution = _HwprcHorizontalResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 15),
    _HwprcHorizontalResolution_Type()
)
hwprcHorizontalResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcHorizontalResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwprcHorizontalResolution.setUnits("dots per inch")


class _HwprcICMIntent_Type(Integer32):
    """Custom type hwprcICMIntent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("contrast", 2),
          ("exactColor", 3),
          ("saturation", 1))
    )


_HwprcICMIntent_Type.__name__ = "Integer32"
_HwprcICMIntent_Object = MibTableColumn
hwprcICMIntent = _HwprcICMIntent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 16),
    _HwprcICMIntent_Type()
)
hwprcICMIntent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcICMIntent.setStatus("current")


class _HwprcICMMethod_Type(Integer32):
    """Custom type hwprcICMMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("device", 4),
          ("deviceDriver", 3),
          ("disabled", 1),
          ("windows", 2))
    )


_HwprcICMMethod_Type.__name__ = "Integer32"
_HwprcICMMethod_Object = MibTableColumn
hwprcICMMethod = _HwprcICMMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 17),
    _HwprcICMMethod_Type()
)
hwprcICMMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcICMMethod.setStatus("current")
_HwprcLogPixels_Type = Gauge32
_HwprcLogPixels_Object = MibTableColumn
hwprcLogPixels = _HwprcLogPixels_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 18),
    _HwprcLogPixels_Type()
)
hwprcLogPixels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcLogPixels.setStatus("current")


class _HwprcMediaType_Type(Integer32):
    """Custom type hwprcMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("glossy", 3),
          ("standard", 1),
          ("transparency", 2))
    )


_HwprcMediaType_Type.__name__ = "Integer32"
_HwprcMediaType_Object = MibTableColumn
hwprcMediaType = _HwprcMediaType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 19),
    _HwprcMediaType_Type()
)
hwprcMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcMediaType.setStatus("current")


class _HwprcName_Type(WtcsDisplayString):
    """Custom type hwprcName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwprcName_Type.__name__ = "WtcsDisplayString"
_HwprcName_Object = MibTableColumn
hwprcName = _HwprcName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 20),
    _HwprcName_Type()
)
hwprcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcName.setStatus("current")


class _HwprcOrientation_Type(Integer32):
    """Custom type hwprcOrientation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("landscape", 2),
          ("portrait", 1))
    )


_HwprcOrientation_Type.__name__ = "Integer32"
_HwprcOrientation_Object = MibTableColumn
hwprcOrientation = _HwprcOrientation_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 21),
    _HwprcOrientation_Type()
)
hwprcOrientation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcOrientation.setStatus("current")
_HwprcPaperLength_Type = Gauge32
_HwprcPaperLength_Object = MibTableColumn
hwprcPaperLength = _HwprcPaperLength_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 22),
    _HwprcPaperLength_Type()
)
hwprcPaperLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcPaperLength.setStatus("current")
if mibBuilder.loadTexts:
    hwprcPaperLength.setUnits("Tenths of a Millimeter")
_HwprcPaperSize_Type = WtcsDisplayString
_HwprcPaperSize_Object = MibTableColumn
hwprcPaperSize = _HwprcPaperSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 23),
    _HwprcPaperSize_Type()
)
hwprcPaperSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcPaperSize.setStatus("current")
_HwprcPaperWidth_Type = Gauge32
_HwprcPaperWidth_Object = MibTableColumn
hwprcPaperWidth = _HwprcPaperWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 24),
    _HwprcPaperWidth_Type()
)
hwprcPaperWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcPaperWidth.setStatus("current")
if mibBuilder.loadTexts:
    hwprcPaperWidth.setUnits("Tenths of a Millimeter")
_HwprcPelsHeight_Type = Gauge32
_HwprcPelsHeight_Object = MibTableColumn
hwprcPelsHeight = _HwprcPelsHeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 25),
    _HwprcPelsHeight_Type()
)
hwprcPelsHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcPelsHeight.setStatus("current")
_HwprcPelsWidth_Type = Gauge32
_HwprcPelsWidth_Object = MibTableColumn
hwprcPelsWidth = _HwprcPelsWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 26),
    _HwprcPelsWidth_Type()
)
hwprcPelsWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcPelsWidth.setStatus("current")
_HwprcPrintQuality_Type = Gauge32
_HwprcPrintQuality_Object = MibTableColumn
hwprcPrintQuality = _HwprcPrintQuality_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 27),
    _HwprcPrintQuality_Type()
)
hwprcPrintQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcPrintQuality.setStatus("current")
_HwprcScale_Type = Gauge32
_HwprcScale_Object = MibTableColumn
hwprcScale = _HwprcScale_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 28),
    _HwprcScale_Type()
)
hwprcScale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcScale.setStatus("current")
if mibBuilder.loadTexts:
    hwprcScale.setUnits("Percent")


class _HwprcSettingID_Type(WtcsDisplayString):
    """Custom type hwprcSettingID based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwprcSettingID_Type.__name__ = "WtcsDisplayString"
_HwprcSettingID_Object = MibTableColumn
hwprcSettingID = _HwprcSettingID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 29),
    _HwprcSettingID_Type()
)
hwprcSettingID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcSettingID.setStatus("current")
_HwprcSpecificationVersion_Type = Gauge32
_HwprcSpecificationVersion_Object = MibTableColumn
hwprcSpecificationVersion = _HwprcSpecificationVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 30),
    _HwprcSpecificationVersion_Type()
)
hwprcSpecificationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcSpecificationVersion.setStatus("current")


class _HwprcTTOption_Type(Integer32):
    """Custom type hwprcTTOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bitmap", 1),
          ("download", 2),
          ("substitute", 3))
    )


_HwprcTTOption_Type.__name__ = "Integer32"
_HwprcTTOption_Object = MibTableColumn
hwprcTTOption = _HwprcTTOption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 31),
    _HwprcTTOption_Type()
)
hwprcTTOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcTTOption.setStatus("current")
_HwprcVerticalResolution_Type = Gauge32
_HwprcVerticalResolution_Object = MibTableColumn
hwprcVerticalResolution = _HwprcVerticalResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 32),
    _HwprcVerticalResolution_Type()
)
hwprcVerticalResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcVerticalResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwprcVerticalResolution.setUnits("dots per inch")
_HwprcXResolution_Type = Gauge32
_HwprcXResolution_Object = MibTableColumn
hwprcXResolution = _HwprcXResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 33),
    _HwprcXResolution_Type()
)
hwprcXResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcXResolution.setStatus("current")
_HwprcYResolution_Type = Gauge32
_HwprcYResolution_Object = MibTableColumn
hwprcYResolution = _HwprcYResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 2, 1, 34),
    _HwprcYResolution_Type()
)
hwprcYResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprcYResolution.setStatus("current")
_Win32PrinterDriverTable_Object = MibTable
win32PrinterDriverTable = _Win32PrinterDriverTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3)
)
if mibBuilder.loadTexts:
    win32PrinterDriverTable.setStatus("current")
_Win32PrinterDriverEntry_Object = MibTableRow
win32PrinterDriverEntry = _Win32PrinterDriverEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1)
)
win32PrinterDriverEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwprdIndex"),
)
if mibBuilder.loadTexts:
    win32PrinterDriverEntry.setStatus("current")


class _HwprdIndex_Type(Integer32):
    """Custom type hwprdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwprdIndex_Type.__name__ = "Integer32"
_HwprdIndex_Object = MibTableColumn
hwprdIndex = _HwprdIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 1),
    _HwprdIndex_Type()
)
hwprdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdIndex.setStatus("current")


class _HwprdCaption_Type(WtcsDisplayString):
    """Custom type hwprdCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwprdCaption_Type.__name__ = "WtcsDisplayString"
_HwprdCaption_Object = MibTableColumn
hwprdCaption = _HwprdCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 2),
    _HwprdCaption_Type()
)
hwprdCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdCaption.setStatus("current")
_HwprdConfigFile_Type = WtcsDisplayString
_HwprdConfigFile_Object = MibTableColumn
hwprdConfigFile = _HwprdConfigFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 3),
    _HwprdConfigFile_Type()
)
hwprdConfigFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdConfigFile.setStatus("current")
_HwprdCreationClassName_Type = WtcsDisplayString
_HwprdCreationClassName_Object = MibTableColumn
hwprdCreationClassName = _HwprdCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 4),
    _HwprdCreationClassName_Type()
)
hwprdCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdCreationClassName.setStatus("current")
_HwprdDataFile_Type = WtcsDisplayString
_HwprdDataFile_Object = MibTableColumn
hwprdDataFile = _HwprdDataFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 5),
    _HwprdDataFile_Type()
)
hwprdDataFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdDataFile.setStatus("current")
_HwprdDefaultDataType_Type = WtcsDisplayString
_HwprdDefaultDataType_Object = MibTableColumn
hwprdDefaultDataType = _HwprdDefaultDataType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 6),
    _HwprdDefaultDataType_Type()
)
hwprdDefaultDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdDefaultDataType.setStatus("current")
_HwprdDependentFiles_Type = WtcsDisplayString
_HwprdDependentFiles_Object = MibTableColumn
hwprdDependentFiles = _HwprdDependentFiles_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 7),
    _HwprdDependentFiles_Type()
)
hwprdDependentFiles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdDependentFiles.setStatus("current")
_HwprdDescription_Type = WtcsDisplayString
_HwprdDescription_Object = MibTableColumn
hwprdDescription = _HwprdDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 8),
    _HwprdDescription_Type()
)
hwprdDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdDescription.setStatus("current")
_HwprdDriverPath_Type = WtcsDisplayString
_HwprdDriverPath_Object = MibTableColumn
hwprdDriverPath = _HwprdDriverPath_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 9),
    _HwprdDriverPath_Type()
)
hwprdDriverPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdDriverPath.setStatus("current")
_HwprdFilePath_Type = WtcsDisplayString
_HwprdFilePath_Object = MibTableColumn
hwprdFilePath = _HwprdFilePath_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 10),
    _HwprdFilePath_Type()
)
hwprdFilePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdFilePath.setStatus("current")
_HwprdHelpFile_Type = WtcsDisplayString
_HwprdHelpFile_Object = MibTableColumn
hwprdHelpFile = _HwprdHelpFile_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 11),
    _HwprdHelpFile_Type()
)
hwprdHelpFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdHelpFile.setStatus("current")
_HwprdInfName_Type = WtcsDisplayString
_HwprdInfName_Object = MibTableColumn
hwprdInfName = _HwprdInfName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 12),
    _HwprdInfName_Type()
)
hwprdInfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdInfName.setStatus("current")
_HwprdInstallDate_Type = DateAndTime
_HwprdInstallDate_Object = MibTableColumn
hwprdInstallDate = _HwprdInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 13),
    _HwprdInstallDate_Type()
)
hwprdInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdInstallDate.setStatus("current")
_HwprdMonitorName_Type = WtcsDisplayString
_HwprdMonitorName_Object = MibTableColumn
hwprdMonitorName = _HwprdMonitorName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 14),
    _HwprdMonitorName_Type()
)
hwprdMonitorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdMonitorName.setStatus("current")
_HwprdName_Type = WtcsDisplayString
_HwprdName_Object = MibTableColumn
hwprdName = _HwprdName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 15),
    _HwprdName_Type()
)
hwprdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdName.setStatus("current")
_HwprdOEMUrl_Type = WtcsDisplayString
_HwprdOEMUrl_Object = MibTableColumn
hwprdOEMUrl = _HwprdOEMUrl_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 16),
    _HwprdOEMUrl_Type()
)
hwprdOEMUrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdOEMUrl.setStatus("current")
_HwprdStarted_Type = TruthValue
_HwprdStarted_Object = MibTableColumn
hwprdStarted = _HwprdStarted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 17),
    _HwprdStarted_Type()
)
hwprdStarted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdStarted.setStatus("current")


class _HwprdStartMode_Type(Integer32):
    """Custom type hwprdStartMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("automatic", 1),
          ("manual", 2))
    )


_HwprdStartMode_Type.__name__ = "Integer32"
_HwprdStartMode_Object = MibTableColumn
hwprdStartMode = _HwprdStartMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 18),
    _HwprdStartMode_Type()
)
hwprdStartMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdStartMode.setStatus("current")


class _HwprdStatus_Type(Integer32):
    """Custom type hwprdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwprdStatus_Type.__name__ = "Integer32"
_HwprdStatus_Object = MibTableColumn
hwprdStatus = _HwprdStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 19),
    _HwprdStatus_Type()
)
hwprdStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdStatus.setStatus("current")
_HwprdSupportedPlatform_Type = WtcsDisplayString
_HwprdSupportedPlatform_Object = MibTableColumn
hwprdSupportedPlatform = _HwprdSupportedPlatform_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 20),
    _HwprdSupportedPlatform_Type()
)
hwprdSupportedPlatform.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdSupportedPlatform.setStatus("current")
_HwprdSystemCreationClassName_Type = WtcsDisplayString
_HwprdSystemCreationClassName_Object = MibTableColumn
hwprdSystemCreationClassName = _HwprdSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 21),
    _HwprdSystemCreationClassName_Type()
)
hwprdSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdSystemCreationClassName.setStatus("current")
_HwprdSystemName_Type = WtcsDisplayString
_HwprdSystemName_Object = MibTableColumn
hwprdSystemName = _HwprdSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 22),
    _HwprdSystemName_Type()
)
hwprdSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdSystemName.setStatus("current")


class _HwprdVersion_Type(Integer32):
    """Custom type hwprdVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nt40", 2),
          ("win2k", 3),
          ("win351", 1),
          ("win9x", 0))
    )


_HwprdVersion_Type.__name__ = "Integer32"
_HwprdVersion_Object = MibTableColumn
hwprdVersion = _HwprdVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 3, 1, 23),
    _HwprdVersion_Type()
)
hwprdVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprdVersion.setStatus("current")
_Win32PrintJobTable_Object = MibTable
win32PrintJobTable = _Win32PrintJobTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4)
)
if mibBuilder.loadTexts:
    win32PrintJobTable.setStatus("current")
_Win32PrintJobEntry_Object = MibTableRow
win32PrintJobEntry = _Win32PrintJobEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1)
)
win32PrintJobEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwprjIndex"),
)
if mibBuilder.loadTexts:
    win32PrintJobEntry.setStatus("current")


class _HwprjIndex_Type(Integer32):
    """Custom type hwprjIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwprjIndex_Type.__name__ = "Integer32"
_HwprjIndex_Object = MibTableColumn
hwprjIndex = _HwprjIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 1),
    _HwprjIndex_Type()
)
hwprjIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjIndex.setStatus("current")


class _HwprjCaption_Type(WtcsDisplayString):
    """Custom type hwprjCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwprjCaption_Type.__name__ = "WtcsDisplayString"
_HwprjCaption_Object = MibTableColumn
hwprjCaption = _HwprjCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 2),
    _HwprjCaption_Type()
)
hwprjCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjCaption.setStatus("current")
_HwprjDataType_Type = WtcsDisplayString
_HwprjDataType_Object = MibTableColumn
hwprjDataType = _HwprjDataType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 3),
    _HwprjDataType_Type()
)
hwprjDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjDataType.setStatus("current")
_HwprjDescription_Type = WtcsDisplayString
_HwprjDescription_Object = MibTableColumn
hwprjDescription = _HwprjDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 4),
    _HwprjDescription_Type()
)
hwprjDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjDescription.setStatus("current")
_HwprjDocument_Type = WtcsDisplayString
_HwprjDocument_Object = MibTableColumn
hwprjDocument = _HwprjDocument_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 5),
    _HwprjDocument_Type()
)
hwprjDocument.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjDocument.setStatus("current")
_HwprjDriverName_Type = WtcsDisplayString
_HwprjDriverName_Object = MibTableColumn
hwprjDriverName = _HwprjDriverName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 6),
    _HwprjDriverName_Type()
)
hwprjDriverName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjDriverName.setStatus("current")
_HwprjElapsedTime_Type = DateAndTime
_HwprjElapsedTime_Object = MibTableColumn
hwprjElapsedTime = _HwprjElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 7),
    _HwprjElapsedTime_Type()
)
hwprjElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjElapsedTime.setStatus("current")
_HwprjHostPrintQueue_Type = WtcsDisplayString
_HwprjHostPrintQueue_Object = MibTableColumn
hwprjHostPrintQueue = _HwprjHostPrintQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 8),
    _HwprjHostPrintQueue_Type()
)
hwprjHostPrintQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjHostPrintQueue.setStatus("current")
_HwprjInstallDate_Type = DateAndTime
_HwprjInstallDate_Object = MibTableColumn
hwprjInstallDate = _HwprjInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 9),
    _HwprjInstallDate_Type()
)
hwprjInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjInstallDate.setStatus("current")
_HwprjJobId_Type = Gauge32
_HwprjJobId_Object = MibTableColumn
hwprjJobId = _HwprjJobId_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 10),
    _HwprjJobId_Type()
)
hwprjJobId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjJobId.setStatus("current")


class _HwprjJobStatus_Type(Integer32):
    """Custom type hwprjJobStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwprjJobStatus_Type.__name__ = "Integer32"
_HwprjJobStatus_Object = MibTableColumn
hwprjJobStatus = _HwprjJobStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 11),
    _HwprjJobStatus_Type()
)
hwprjJobStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjJobStatus.setStatus("current")
_HwprjName_Type = WtcsDisplayString
_HwprjName_Object = MibTableColumn
hwprjName = _HwprjName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 12),
    _HwprjName_Type()
)
hwprjName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjName.setStatus("current")
_HwprjNotify_Type = WtcsDisplayString
_HwprjNotify_Object = MibTableColumn
hwprjNotify = _HwprjNotify_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 13),
    _HwprjNotify_Type()
)
hwprjNotify.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjNotify.setStatus("current")
_HwprjOwner_Type = WtcsDisplayString
_HwprjOwner_Object = MibTableColumn
hwprjOwner = _HwprjOwner_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 14),
    _HwprjOwner_Type()
)
hwprjOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjOwner.setStatus("current")
_HwprjPagesPrinted_Type = Gauge32
_HwprjPagesPrinted_Object = MibTableColumn
hwprjPagesPrinted = _HwprjPagesPrinted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 15),
    _HwprjPagesPrinted_Type()
)
hwprjPagesPrinted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjPagesPrinted.setStatus("current")
_HwprjParameters_Type = WtcsDisplayString
_HwprjParameters_Object = MibTableColumn
hwprjParameters = _HwprjParameters_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 16),
    _HwprjParameters_Type()
)
hwprjParameters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjParameters.setStatus("current")
_HwprjPrintProcessor_Type = WtcsDisplayString
_HwprjPrintProcessor_Object = MibTableColumn
hwprjPrintProcessor = _HwprjPrintProcessor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 17),
    _HwprjPrintProcessor_Type()
)
hwprjPrintProcessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjPrintProcessor.setStatus("current")
_HwprjPriority_Type = Gauge32
_HwprjPriority_Object = MibTableColumn
hwprjPriority = _HwprjPriority_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 18),
    _HwprjPriority_Type()
)
hwprjPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjPriority.setStatus("current")
_HwprjSize_Type = Gauge32
_HwprjSize_Object = MibTableColumn
hwprjSize = _HwprjSize_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 19),
    _HwprjSize_Type()
)
hwprjSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjSize.setStatus("current")
if mibBuilder.loadTexts:
    hwprjSize.setUnits("Bytes")
_HwprjStartTime_Type = DateAndTime
_HwprjStartTime_Object = MibTableColumn
hwprjStartTime = _HwprjStartTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 20),
    _HwprjStartTime_Type()
)
hwprjStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjStartTime.setStatus("current")


class _HwprjStatus_Type(Integer32):
    """Custom type hwprjStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwprjStatus_Type.__name__ = "Integer32"
_HwprjStatus_Object = MibTableColumn
hwprjStatus = _HwprjStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 21),
    _HwprjStatus_Type()
)
hwprjStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjStatus.setStatus("current")


class _HwprjStatusMask_Type(Integer32):
    """Custom type hwprjStatusMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2948)
        )
    )
    namedValues = NamedValues(
        *(("blockedDevQ", 512),
          ("deleted", 256),
          ("deleting", 4),
          ("error", 2),
          ("offline", 32),
          ("paperout", 64),
          ("paused", 1),
          ("printed", 128),
          ("printing", 16),
          ("restart", 2948),
          ("spooling", 8),
          ("userInterventionReq", 1024))
    )


_HwprjStatusMask_Type.__name__ = "Integer32"
_HwprjStatusMask_Object = MibTableColumn
hwprjStatusMask = _HwprjStatusMask_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 22),
    _HwprjStatusMask_Type()
)
hwprjStatusMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjStatusMask.setStatus("current")
_HwprjTimeSubmitted_Type = DateAndTime
_HwprjTimeSubmitted_Object = MibTableColumn
hwprjTimeSubmitted = _HwprjTimeSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 23),
    _HwprjTimeSubmitted_Type()
)
hwprjTimeSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjTimeSubmitted.setStatus("current")
_HwprjTotalPages_Type = Gauge32
_HwprjTotalPages_Object = MibTableColumn
hwprjTotalPages = _HwprjTotalPages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 24),
    _HwprjTotalPages_Type()
)
hwprjTotalPages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjTotalPages.setStatus("current")
_HwprjUntilTime_Type = DateAndTime
_HwprjUntilTime_Object = MibTableColumn
hwprjUntilTime = _HwprjUntilTime_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 4, 1, 25),
    _HwprjUntilTime_Type()
)
hwprjUntilTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwprjUntilTime.setStatus("current")
_Win32TCPIPPrinterPortTable_Object = MibTable
win32TCPIPPrinterPortTable = _Win32TCPIPPrinterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5)
)
if mibBuilder.loadTexts:
    win32TCPIPPrinterPortTable.setStatus("current")
_Win32TCPIPPrinterPortEntry_Object = MibTableRow
win32TCPIPPrinterPortEntry = _Win32TCPIPPrinterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1)
)
win32TCPIPPrinterPortEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwtppIndex"),
)
if mibBuilder.loadTexts:
    win32TCPIPPrinterPortEntry.setStatus("current")


class _HwtppIndex_Type(Integer32):
    """Custom type hwtppIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwtppIndex_Type.__name__ = "Integer32"
_HwtppIndex_Object = MibTableColumn
hwtppIndex = _HwtppIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 1),
    _HwtppIndex_Type()
)
hwtppIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppIndex.setStatus("current")
_HwtppByteCount_Type = TruthValue
_HwtppByteCount_Object = MibTableColumn
hwtppByteCount = _HwtppByteCount_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 2),
    _HwtppByteCount_Type()
)
hwtppByteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppByteCount.setStatus("current")


class _HwtppCaption_Type(WtcsDisplayString):
    """Custom type hwtppCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwtppCaption_Type.__name__ = "WtcsDisplayString"
_HwtppCaption_Object = MibTableColumn
hwtppCaption = _HwtppCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 3),
    _HwtppCaption_Type()
)
hwtppCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppCaption.setStatus("current")


class _HwtppCreationClassName_Type(WtcsDisplayString):
    """Custom type hwtppCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwtppCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwtppCreationClassName_Object = MibTableColumn
hwtppCreationClassName = _HwtppCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 4),
    _HwtppCreationClassName_Type()
)
hwtppCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppCreationClassName.setStatus("current")
_HwtppDescription_Type = WtcsDisplayString
_HwtppDescription_Object = MibTableColumn
hwtppDescription = _HwtppDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 5),
    _HwtppDescription_Type()
)
hwtppDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppDescription.setStatus("current")
_HwtppHostAddress_Type = WtcsDisplayString
_HwtppHostAddress_Object = MibTableColumn
hwtppHostAddress = _HwtppHostAddress_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 6),
    _HwtppHostAddress_Type()
)
hwtppHostAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppHostAddress.setStatus("current")
_HwtppInstallDate_Type = DateAndTime
_HwtppInstallDate_Object = MibTableColumn
hwtppInstallDate = _HwtppInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 7),
    _HwtppInstallDate_Type()
)
hwtppInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppInstallDate.setStatus("current")


class _HwtppName_Type(WtcsDisplayString):
    """Custom type hwtppName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwtppName_Type.__name__ = "WtcsDisplayString"
_HwtppName_Object = MibTableColumn
hwtppName = _HwtppName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 8),
    _HwtppName_Type()
)
hwtppName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppName.setStatus("current")
_HwtppPortNumber_Type = Gauge32
_HwtppPortNumber_Object = MibTableColumn
hwtppPortNumber = _HwtppPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 9),
    _HwtppPortNumber_Type()
)
hwtppPortNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppPortNumber.setStatus("current")


class _HwtppProtocol_Type(Integer32):
    """Custom type hwtppProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("lpr", 1),
          ("raw", 0))
    )


_HwtppProtocol_Type.__name__ = "Integer32"
_HwtppProtocol_Object = MibTableColumn
hwtppProtocol = _HwtppProtocol_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 10),
    _HwtppProtocol_Type()
)
hwtppProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppProtocol.setStatus("current")
_HwtppQueue_Type = WtcsDisplayString
_HwtppQueue_Object = MibTableColumn
hwtppQueue = _HwtppQueue_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 11),
    _HwtppQueue_Type()
)
hwtppQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppQueue.setStatus("current")
_HwtppSNMPCommunity_Type = WtcsDisplayString
_HwtppSNMPCommunity_Object = MibTableColumn
hwtppSNMPCommunity = _HwtppSNMPCommunity_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 12),
    _HwtppSNMPCommunity_Type()
)
hwtppSNMPCommunity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppSNMPCommunity.setStatus("current")
_HwtppSNMPDevIndex_Type = Gauge32
_HwtppSNMPDevIndex_Object = MibTableColumn
hwtppSNMPDevIndex = _HwtppSNMPDevIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 13),
    _HwtppSNMPDevIndex_Type()
)
hwtppSNMPDevIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppSNMPDevIndex.setStatus("current")
_HwtppSNMPEnabled_Type = TruthValue
_HwtppSNMPEnabled_Object = MibTableColumn
hwtppSNMPEnabled = _HwtppSNMPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 14),
    _HwtppSNMPEnabled_Type()
)
hwtppSNMPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppSNMPEnabled.setStatus("current")


class _HwtppStatus_Type(Integer32):
    """Custom type hwtppStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwtppStatus_Type.__name__ = "Integer32"
_HwtppStatus_Object = MibTableColumn
hwtppStatus = _HwtppStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 15),
    _HwtppStatus_Type()
)
hwtppStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppStatus.setStatus("current")


class _HwtppSystemCreationClassName_Type(WtcsDisplayString):
    """Custom type hwtppSystemCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwtppSystemCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwtppSystemCreationClassName_Object = MibTableColumn
hwtppSystemCreationClassName = _HwtppSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 16),
    _HwtppSystemCreationClassName_Type()
)
hwtppSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppSystemCreationClassName.setStatus("current")


class _HwtppSystemName_Type(WtcsDisplayString):
    """Custom type hwtppSystemName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwtppSystemName_Type.__name__ = "WtcsDisplayString"
_HwtppSystemName_Object = MibTableColumn
hwtppSystemName = _HwtppSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 17),
    _HwtppSystemName_Type()
)
hwtppSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppSystemName.setStatus("current")


class _HwtppType_Type(Integer32):
    """Custom type hwtppType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16)
        )
    )
    namedValues = NamedValues(
        *(("n0x10Unknown", 16),
          ("n0x1Write", 1),
          ("n0x2Read", 2),
          ("n0x4Redirected", 4),
          ("n0x8NetAttached", 8))
    )


_HwtppType_Type.__name__ = "Integer32"
_HwtppType_Object = MibTableColumn
hwtppType = _HwtppType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 7, 5, 1, 18),
    _HwtppType_Type()
)
hwtppType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwtppType.setStatus("current")
_WmiTelephony_ObjectIdentity = ObjectIdentity
wmiTelephony = _WmiTelephony_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8)
)
if mibBuilder.loadTexts:
    wmiTelephony.setStatus("current")
_Win32POTSModemTable_Object = MibTable
win32POTSModemTable = _Win32POTSModemTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1)
)
if mibBuilder.loadTexts:
    win32POTSModemTable.setStatus("current")
_Win32POTSModemEntry_Object = MibTableRow
win32POTSModemEntry = _Win32POTSModemEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1)
)
win32POTSModemEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwpmIndex"),
)
if mibBuilder.loadTexts:
    win32POTSModemEntry.setStatus("current")


class _HwpmIndex_Type(Integer32):
    """Custom type hwpmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwpmIndex_Type.__name__ = "Integer32"
_HwpmIndex_Object = MibTableColumn
hwpmIndex = _HwpmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 1),
    _HwpmIndex_Type()
)
hwpmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmIndex.setStatus("current")


class _HwpmAnswerMode_Type(Integer32):
    """Custom type hwpmAnswerMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("autoAnswer", 5),
          ("autoAnswerWithCallBack", 6),
          ("disabled", 3),
          ("manualAnswer", 4),
          ("other", 2),
          ("unknown", 1))
    )


_HwpmAnswerMode_Type.__name__ = "Integer32"
_HwpmAnswerMode_Object = MibTableColumn
hwpmAnswerMode = _HwpmAnswerMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 2),
    _HwpmAnswerMode_Type()
)
hwpmAnswerMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmAnswerMode.setStatus("current")
_HwpmAttachedTo_Type = WtcsDisplayString
_HwpmAttachedTo_Object = MibTableColumn
hwpmAttachedTo = _HwpmAttachedTo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 3),
    _HwpmAttachedTo_Type()
)
hwpmAttachedTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmAttachedTo.setStatus("current")


class _HwpmAvailability_Type(Integer32):
    """Custom type hwpmAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwpmAvailability_Type.__name__ = "Integer32"
_HwpmAvailability_Object = MibTableColumn
hwpmAvailability = _HwpmAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 4),
    _HwpmAvailability_Type()
)
hwpmAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmAvailability.setStatus("current")
_HwpmBlindOff_Type = WtcsDisplayString
_HwpmBlindOff_Object = MibTableColumn
hwpmBlindOff = _HwpmBlindOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 5),
    _HwpmBlindOff_Type()
)
hwpmBlindOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmBlindOff.setStatus("current")
_HwpmBlindOn_Type = WtcsDisplayString
_HwpmBlindOn_Object = MibTableColumn
hwpmBlindOn = _HwpmBlindOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 6),
    _HwpmBlindOn_Type()
)
hwpmBlindOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmBlindOn.setStatus("current")


class _HwpmCaption_Type(WtcsDisplayString):
    """Custom type hwpmCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwpmCaption_Type.__name__ = "WtcsDisplayString"
_HwpmCaption_Object = MibTableColumn
hwpmCaption = _HwpmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 7),
    _HwpmCaption_Type()
)
hwpmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCaption.setStatus("current")
_HwpmCompatibilityFlags_Type = WtcsDisplayString
_HwpmCompatibilityFlags_Object = MibTableColumn
hwpmCompatibilityFlags = _HwpmCompatibilityFlags_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 8),
    _HwpmCompatibilityFlags_Type()
)
hwpmCompatibilityFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCompatibilityFlags.setStatus("current")


class _HwpmCompressionInfo_Type(Integer32):
    """Custom type hwpmCompressionInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("mnp5", 4),
          ("noCompression", 3),
          ("other", 2),
          ("unknown", 1),
          ("v42bis", 5))
    )


_HwpmCompressionInfo_Type.__name__ = "Integer32"
_HwpmCompressionInfo_Object = MibTableColumn
hwpmCompressionInfo = _HwpmCompressionInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 9),
    _HwpmCompressionInfo_Type()
)
hwpmCompressionInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCompressionInfo.setStatus("current")
_HwpmCompressionOff_Type = WtcsDisplayString
_HwpmCompressionOff_Object = MibTableColumn
hwpmCompressionOff = _HwpmCompressionOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 10),
    _HwpmCompressionOff_Type()
)
hwpmCompressionOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCompressionOff.setStatus("current")
_HwpmCompressionOn_Type = WtcsDisplayString
_HwpmCompressionOn_Object = MibTableColumn
hwpmCompressionOn = _HwpmCompressionOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 11),
    _HwpmCompressionOn_Type()
)
hwpmCompressionOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCompressionOn.setStatus("current")


class _HwpmConfigManagerErrorCode_Type(Integer32):
    """Custom type hwpmConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwpmConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwpmConfigManagerErrorCode_Object = MibTableColumn
hwpmConfigManagerErrorCode = _HwpmConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 12),
    _HwpmConfigManagerErrorCode_Type()
)
hwpmConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmConfigManagerErrorCode.setStatus("current")
_HwpmConfigManagerUserConfig_Type = TruthValue
_HwpmConfigManagerUserConfig_Object = MibTableColumn
hwpmConfigManagerUserConfig = _HwpmConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 13),
    _HwpmConfigManagerUserConfig_Type()
)
hwpmConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmConfigManagerUserConfig.setStatus("current")
_HwpmConfigurationDialog_Type = WtcsDisplayString
_HwpmConfigurationDialog_Object = MibTableColumn
hwpmConfigurationDialog = _HwpmConfigurationDialog_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 14),
    _HwpmConfigurationDialog_Type()
)
hwpmConfigurationDialog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmConfigurationDialog.setStatus("current")
_HwpmCountriesSupported_Type = WtcsDisplayString
_HwpmCountriesSupported_Object = MibTableColumn
hwpmCountriesSupported = _HwpmCountriesSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 15),
    _HwpmCountriesSupported_Type()
)
hwpmCountriesSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCountriesSupported.setStatus("current")
_HwpmCountrySelected_Type = WtcsDisplayString
_HwpmCountrySelected_Object = MibTableColumn
hwpmCountrySelected = _HwpmCountrySelected_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 16),
    _HwpmCountrySelected_Type()
)
hwpmCountrySelected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCountrySelected.setStatus("current")
_HwpmCreationClassName_Type = WtcsDisplayString
_HwpmCreationClassName_Object = MibTableColumn
hwpmCreationClassName = _HwpmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 17),
    _HwpmCreationClassName_Type()
)
hwpmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCreationClassName.setStatus("current")
_HwpmCurrentPasswords_Type = WtcsDisplayString
_HwpmCurrentPasswords_Object = MibTableColumn
hwpmCurrentPasswords = _HwpmCurrentPasswords_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 18),
    _HwpmCurrentPasswords_Type()
)
hwpmCurrentPasswords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmCurrentPasswords.setStatus("current")
_HwpmDCB_Type = WtcsDisplayString
_HwpmDCB_Object = MibTableColumn
hwpmDCB = _HwpmDCB_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 19),
    _HwpmDCB_Type()
)
hwpmDCB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDCB.setStatus("current")
_HwpmDefault_Type = WtcsDisplayString
_HwpmDefault_Object = MibTableColumn
hwpmDefault = _HwpmDefault_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 20),
    _HwpmDefault_Type()
)
hwpmDefault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDefault.setStatus("current")
_HwpmDescription_Type = WtcsDisplayString
_HwpmDescription_Object = MibTableColumn
hwpmDescription = _HwpmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 21),
    _HwpmDescription_Type()
)
hwpmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDescription.setStatus("current")
_HwpmDeviceID_Type = WtcsDisplayString
_HwpmDeviceID_Object = MibTableColumn
hwpmDeviceID = _HwpmDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 22),
    _HwpmDeviceID_Type()
)
hwpmDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDeviceID.setStatus("current")
_HwpmDeviceLoader_Type = WtcsDisplayString
_HwpmDeviceLoader_Object = MibTableColumn
hwpmDeviceLoader = _HwpmDeviceLoader_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 23),
    _HwpmDeviceLoader_Type()
)
hwpmDeviceLoader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDeviceLoader.setStatus("current")


class _HwpmDeviceType_Type(Integer32):
    """Custom type hwpmDeviceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("externalModem", 3),
          ("internalModem", 2),
          ("nullModem", 1),
          ("pcmciaModem", 4),
          ("unknown", 5))
    )


_HwpmDeviceType_Type.__name__ = "Integer32"
_HwpmDeviceType_Object = MibTableColumn
hwpmDeviceType = _HwpmDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 24),
    _HwpmDeviceType_Type()
)
hwpmDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDeviceType.setStatus("current")


class _HwpmDialType_Type(Integer32):
    """Custom type hwpmDialType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pulse", 2),
          ("tone", 1),
          ("unknown", 0))
    )


_HwpmDialType_Type.__name__ = "Integer32"
_HwpmDialType_Object = MibTableColumn
hwpmDialType = _HwpmDialType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 25),
    _HwpmDialType_Type()
)
hwpmDialType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDialType.setStatus("current")
_HwpmDriverDate_Type = DateAndTime
_HwpmDriverDate_Object = MibTableColumn
hwpmDriverDate = _HwpmDriverDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 26),
    _HwpmDriverDate_Type()
)
hwpmDriverDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmDriverDate.setStatus("current")
_HwpmErrorCleared_Type = TruthValue
_HwpmErrorCleared_Object = MibTableColumn
hwpmErrorCleared = _HwpmErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 27),
    _HwpmErrorCleared_Type()
)
hwpmErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmErrorCleared.setStatus("current")
_HwpmErrorControlForced_Type = WtcsDisplayString
_HwpmErrorControlForced_Object = MibTableColumn
hwpmErrorControlForced = _HwpmErrorControlForced_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 28),
    _HwpmErrorControlForced_Type()
)
hwpmErrorControlForced.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmErrorControlForced.setStatus("current")


class _HwpmErrorControlInfo_Type(Integer32):
    """Custom type hwpmErrorControlInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("lapm", 5),
          ("mnp4", 4),
          ("noErrorCorrection", 3),
          ("other", 2),
          ("unknown", 1))
    )


_HwpmErrorControlInfo_Type.__name__ = "Integer32"
_HwpmErrorControlInfo_Object = MibTableColumn
hwpmErrorControlInfo = _HwpmErrorControlInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 29),
    _HwpmErrorControlInfo_Type()
)
hwpmErrorControlInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmErrorControlInfo.setStatus("current")
_HwpmErrorControlOff_Type = WtcsDisplayString
_HwpmErrorControlOff_Object = MibTableColumn
hwpmErrorControlOff = _HwpmErrorControlOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 30),
    _HwpmErrorControlOff_Type()
)
hwpmErrorControlOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmErrorControlOff.setStatus("current")
_HwpmErrorControlOn_Type = WtcsDisplayString
_HwpmErrorControlOn_Object = MibTableColumn
hwpmErrorControlOn = _HwpmErrorControlOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 31),
    _HwpmErrorControlOn_Type()
)
hwpmErrorControlOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmErrorControlOn.setStatus("current")
_HwpmErrorDescription_Type = WtcsDisplayString
_HwpmErrorDescription_Object = MibTableColumn
hwpmErrorDescription = _HwpmErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 32),
    _HwpmErrorDescription_Type()
)
hwpmErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmErrorDescription.setStatus("current")
_HwpmFlowControlHard_Type = WtcsDisplayString
_HwpmFlowControlHard_Object = MibTableColumn
hwpmFlowControlHard = _HwpmFlowControlHard_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 33),
    _HwpmFlowControlHard_Type()
)
hwpmFlowControlHard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmFlowControlHard.setStatus("current")
_HwpmFlowControlOff_Type = WtcsDisplayString
_HwpmFlowControlOff_Object = MibTableColumn
hwpmFlowControlOff = _HwpmFlowControlOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 34),
    _HwpmFlowControlOff_Type()
)
hwpmFlowControlOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmFlowControlOff.setStatus("current")
_HwpmFlowControlSoft_Type = WtcsDisplayString
_HwpmFlowControlSoft_Object = MibTableColumn
hwpmFlowControlSoft = _HwpmFlowControlSoft_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 35),
    _HwpmFlowControlSoft_Type()
)
hwpmFlowControlSoft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmFlowControlSoft.setStatus("current")
_HwpmInactivityScale_Type = WtcsDisplayString
_HwpmInactivityScale_Object = MibTableColumn
hwpmInactivityScale = _HwpmInactivityScale_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 36),
    _HwpmInactivityScale_Type()
)
hwpmInactivityScale.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmInactivityScale.setStatus("current")
_HwpmInactivityTimeout_Type = Gauge32
_HwpmInactivityTimeout_Object = MibTableColumn
hwpmInactivityTimeout = _HwpmInactivityTimeout_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 37),
    _HwpmInactivityTimeout_Type()
)
hwpmInactivityTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmInactivityTimeout.setStatus("current")
if mibBuilder.loadTexts:
    hwpmInactivityTimeout.setUnits("Seconds")
_HwpmModemIndex_Type = Gauge32
_HwpmModemIndex_Object = MibTableColumn
hwpmModemIndex = _HwpmModemIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 38),
    _HwpmModemIndex_Type()
)
hwpmModemIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModemIndex.setStatus("current")
_HwpmInstallDate_Type = DateAndTime
_HwpmInstallDate_Object = MibTableColumn
hwpmInstallDate = _HwpmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 39),
    _HwpmInstallDate_Type()
)
hwpmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmInstallDate.setStatus("current")
_HwpmLastErrorCode_Type = Gauge32
_HwpmLastErrorCode_Object = MibTableColumn
hwpmLastErrorCode = _HwpmLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 40),
    _HwpmLastErrorCode_Type()
)
hwpmLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmLastErrorCode.setStatus("current")
_HwpmMaxBaudRateToPhone_Type = Gauge32
_HwpmMaxBaudRateToPhone_Object = MibTableColumn
hwpmMaxBaudRateToPhone = _HwpmMaxBaudRateToPhone_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 41),
    _HwpmMaxBaudRateToPhone_Type()
)
hwpmMaxBaudRateToPhone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmMaxBaudRateToPhone.setStatus("current")
if mibBuilder.loadTexts:
    hwpmMaxBaudRateToPhone.setUnits("Bits per second")
_HwpmMaxBaudRateToSerialPort_Type = Gauge32
_HwpmMaxBaudRateToSerialPort_Object = MibTableColumn
hwpmMaxBaudRateToSerialPort = _HwpmMaxBaudRateToSerialPort_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 42),
    _HwpmMaxBaudRateToSerialPort_Type()
)
hwpmMaxBaudRateToSerialPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmMaxBaudRateToSerialPort.setStatus("current")
if mibBuilder.loadTexts:
    hwpmMaxBaudRateToSerialPort.setUnits("Bits per second")
_HwpmMaxNumberOfPasswords_Type = Integer32
_HwpmMaxNumberOfPasswords_Object = MibTableColumn
hwpmMaxNumberOfPasswords = _HwpmMaxNumberOfPasswords_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 43),
    _HwpmMaxNumberOfPasswords_Type()
)
hwpmMaxNumberOfPasswords.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmMaxNumberOfPasswords.setStatus("current")
_HwpmModel_Type = WtcsDisplayString
_HwpmModel_Object = MibTableColumn
hwpmModel = _HwpmModel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 44),
    _HwpmModel_Type()
)
hwpmModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModel.setStatus("current")
_HwpmModemInfPath_Type = WtcsDisplayString
_HwpmModemInfPath_Object = MibTableColumn
hwpmModemInfPath = _HwpmModemInfPath_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 45),
    _HwpmModemInfPath_Type()
)
hwpmModemInfPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModemInfPath.setStatus("current")
_HwpmModemInfSection_Type = WtcsDisplayString
_HwpmModemInfSection_Object = MibTableColumn
hwpmModemInfSection = _HwpmModemInfSection_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 46),
    _HwpmModemInfSection_Type()
)
hwpmModemInfSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModemInfSection.setStatus("current")
_HwpmModulationBell_Type = WtcsDisplayString
_HwpmModulationBell_Object = MibTableColumn
hwpmModulationBell = _HwpmModulationBell_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 47),
    _HwpmModulationBell_Type()
)
hwpmModulationBell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModulationBell.setStatus("current")
_HwpmModulationCCITT_Type = WtcsDisplayString
_HwpmModulationCCITT_Object = MibTableColumn
hwpmModulationCCITT = _HwpmModulationCCITT_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 48),
    _HwpmModulationCCITT_Type()
)
hwpmModulationCCITT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModulationCCITT.setStatus("current")


class _HwpmModulationScheme_Type(Integer32):
    """Custom type hwpmModulationScheme based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("bell103", 4),
          ("bell212A", 5),
          ("notSupported", 3),
          ("other", 2),
          ("unknown", 1),
          ("v22bis", 6),
          ("v32", 7),
          ("v32bis", 8),
          ("v34", 11),
          ("v34bis", 12),
          ("vFC", 10),
          ("vturbo", 9))
    )


_HwpmModulationScheme_Type.__name__ = "Integer32"
_HwpmModulationScheme_Object = MibTableColumn
hwpmModulationScheme = _HwpmModulationScheme_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 49),
    _HwpmModulationScheme_Type()
)
hwpmModulationScheme.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmModulationScheme.setStatus("current")
_HwpmName_Type = WtcsDisplayString
_HwpmName_Object = MibTableColumn
hwpmName = _HwpmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 50),
    _HwpmName_Type()
)
hwpmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmName.setStatus("current")
_HwpmPNPDeviceID_Type = WtcsDisplayString
_HwpmPNPDeviceID_Object = MibTableColumn
hwpmPNPDeviceID = _HwpmPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 51),
    _HwpmPNPDeviceID_Type()
)
hwpmPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmPNPDeviceID.setStatus("current")


class _HwpmPortSubClass_Type(Integer32):
    """Custom type hwpmPortSubClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("modem", 2),
          ("parallelPort", 0),
          ("serialPort", 1))
    )


_HwpmPortSubClass_Type.__name__ = "Integer32"
_HwpmPortSubClass_Object = MibTableColumn
hwpmPortSubClass = _HwpmPortSubClass_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 52),
    _HwpmPortSubClass_Type()
)
hwpmPortSubClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmPortSubClass.setStatus("current")
_HwpmPowerManagementCapabilities_Type = WtcsDisplayString
_HwpmPowerManagementCapabilities_Object = MibTableColumn
hwpmPowerManagementCapabilities = _HwpmPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 53),
    _HwpmPowerManagementCapabilities_Type()
)
hwpmPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmPowerManagementCapabilities.setStatus("current")
_HwpmPowerManagementSupported_Type = TruthValue
_HwpmPowerManagementSupported_Object = MibTableColumn
hwpmPowerManagementSupported = _HwpmPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 54),
    _HwpmPowerManagementSupported_Type()
)
hwpmPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmPowerManagementSupported.setStatus("current")
_HwpmPrefix_Type = WtcsDisplayString
_HwpmPrefix_Object = MibTableColumn
hwpmPrefix = _HwpmPrefix_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 55),
    _HwpmPrefix_Type()
)
hwpmPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmPrefix.setStatus("current")
_HwpmProperties_Type = WtcsDisplayString
_HwpmProperties_Object = MibTableColumn
hwpmProperties = _HwpmProperties_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 56),
    _HwpmProperties_Type()
)
hwpmProperties.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmProperties.setStatus("current")
_HwpmProviderName_Type = WtcsDisplayString
_HwpmProviderName_Object = MibTableColumn
hwpmProviderName = _HwpmProviderName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 57),
    _HwpmProviderName_Type()
)
hwpmProviderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmProviderName.setStatus("current")
_HwpmPulse_Type = WtcsDisplayString
_HwpmPulse_Object = MibTableColumn
hwpmPulse = _HwpmPulse_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 58),
    _HwpmPulse_Type()
)
hwpmPulse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmPulse.setStatus("current")
_HwpmReset_Type = WtcsDisplayString
_HwpmReset_Object = MibTableColumn
hwpmReset = _HwpmReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 59),
    _HwpmReset_Type()
)
hwpmReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmReset.setStatus("current")
_HwpmResponsesKeyName_Type = WtcsDisplayString
_HwpmResponsesKeyName_Object = MibTableColumn
hwpmResponsesKeyName = _HwpmResponsesKeyName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 60),
    _HwpmResponsesKeyName_Type()
)
hwpmResponsesKeyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmResponsesKeyName.setStatus("current")


class _HwpmRingsBeforeAnswer_Type(Integer32):
    """Custom type hwpmRingsBeforeAnswer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_HwpmRingsBeforeAnswer_Type.__name__ = "Integer32"
_HwpmRingsBeforeAnswer_Object = MibTableColumn
hwpmRingsBeforeAnswer = _HwpmRingsBeforeAnswer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 61),
    _HwpmRingsBeforeAnswer_Type()
)
hwpmRingsBeforeAnswer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmRingsBeforeAnswer.setStatus("current")
_HwpmSpeakerModeDial_Type = WtcsDisplayString
_HwpmSpeakerModeDial_Object = MibTableColumn
hwpmSpeakerModeDial = _HwpmSpeakerModeDial_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 62),
    _HwpmSpeakerModeDial_Type()
)
hwpmSpeakerModeDial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerModeDial.setStatus("current")
_HwpmSpeakerModeOff_Type = WtcsDisplayString
_HwpmSpeakerModeOff_Object = MibTableColumn
hwpmSpeakerModeOff = _HwpmSpeakerModeOff_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 63),
    _HwpmSpeakerModeOff_Type()
)
hwpmSpeakerModeOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerModeOff.setStatus("current")
_HwpmSpeakerModeOn_Type = WtcsDisplayString
_HwpmSpeakerModeOn_Object = MibTableColumn
hwpmSpeakerModeOn = _HwpmSpeakerModeOn_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 64),
    _HwpmSpeakerModeOn_Type()
)
hwpmSpeakerModeOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerModeOn.setStatus("current")
_HwpmSpeakerModeSetup_Type = WtcsDisplayString
_HwpmSpeakerModeSetup_Object = MibTableColumn
hwpmSpeakerModeSetup = _HwpmSpeakerModeSetup_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 65),
    _HwpmSpeakerModeSetup_Type()
)
hwpmSpeakerModeSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerModeSetup.setStatus("current")
_HwpmSpeakerVolumeHigh_Type = WtcsDisplayString
_HwpmSpeakerVolumeHigh_Object = MibTableColumn
hwpmSpeakerVolumeHigh = _HwpmSpeakerVolumeHigh_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 66),
    _HwpmSpeakerVolumeHigh_Type()
)
hwpmSpeakerVolumeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerVolumeHigh.setStatus("current")


class _HwpmSpeakerVolumeInfo_Type(Integer32):
    """Custom type hwpmSpeakerVolumeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 7),
          ("high", 3),
          ("low", 5),
          ("medium", 4),
          ("notSupported", 2),
          ("off", 6),
          ("other", 1),
          ("unknown", 0))
    )


_HwpmSpeakerVolumeInfo_Type.__name__ = "Integer32"
_HwpmSpeakerVolumeInfo_Object = MibTableColumn
hwpmSpeakerVolumeInfo = _HwpmSpeakerVolumeInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 67),
    _HwpmSpeakerVolumeInfo_Type()
)
hwpmSpeakerVolumeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerVolumeInfo.setStatus("current")
_HwpmSpeakerVolumeLow_Type = WtcsDisplayString
_HwpmSpeakerVolumeLow_Object = MibTableColumn
hwpmSpeakerVolumeLow = _HwpmSpeakerVolumeLow_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 68),
    _HwpmSpeakerVolumeLow_Type()
)
hwpmSpeakerVolumeLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerVolumeLow.setStatus("current")
_HwpmSpeakerVolumeMed_Type = WtcsDisplayString
_HwpmSpeakerVolumeMed_Object = MibTableColumn
hwpmSpeakerVolumeMed = _HwpmSpeakerVolumeMed_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 69),
    _HwpmSpeakerVolumeMed_Type()
)
hwpmSpeakerVolumeMed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSpeakerVolumeMed.setStatus("current")


class _HwpmStatus_Type(Integer32):
    """Custom type hwpmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwpmStatus_Type.__name__ = "Integer32"
_HwpmStatus_Object = MibTableColumn
hwpmStatus = _HwpmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 70),
    _HwpmStatus_Type()
)
hwpmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmStatus.setStatus("current")


class _HwpmStatusInfo_Type(Integer32):
    """Custom type hwpmStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwpmStatusInfo_Type.__name__ = "Integer32"
_HwpmStatusInfo_Object = MibTableColumn
hwpmStatusInfo = _HwpmStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 71),
    _HwpmStatusInfo_Type()
)
hwpmStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmStatusInfo.setStatus("current")
_HwpmStringFormat_Type = WtcsDisplayString
_HwpmStringFormat_Object = MibTableColumn
hwpmStringFormat = _HwpmStringFormat_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 72),
    _HwpmStringFormat_Type()
)
hwpmStringFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmStringFormat.setStatus("current")
_HwpmSupportsCallback_Type = TruthValue
_HwpmSupportsCallback_Object = MibTableColumn
hwpmSupportsCallback = _HwpmSupportsCallback_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 73),
    _HwpmSupportsCallback_Type()
)
hwpmSupportsCallback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSupportsCallback.setStatus("current")
_HwpmSupportsSynchronousConnect_Type = TruthValue
_HwpmSupportsSynchronousConnect_Object = MibTableColumn
hwpmSupportsSynchronousConnect = _HwpmSupportsSynchronousConnect_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 74),
    _HwpmSupportsSynchronousConnect_Type()
)
hwpmSupportsSynchronousConnect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSupportsSynchronousConnect.setStatus("current")
_HwpmSystemCreationClassName_Type = WtcsDisplayString
_HwpmSystemCreationClassName_Object = MibTableColumn
hwpmSystemCreationClassName = _HwpmSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 75),
    _HwpmSystemCreationClassName_Type()
)
hwpmSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSystemCreationClassName.setStatus("current")
_HwpmSystemName_Type = WtcsDisplayString
_HwpmSystemName_Object = MibTableColumn
hwpmSystemName = _HwpmSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 76),
    _HwpmSystemName_Type()
)
hwpmSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmSystemName.setStatus("current")
_HwpmTerminator_Type = WtcsDisplayString
_HwpmTerminator_Object = MibTableColumn
hwpmTerminator = _HwpmTerminator_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 77),
    _HwpmTerminator_Type()
)
hwpmTerminator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmTerminator.setStatus("current")
_HwpmTimeOfLastReset_Type = DateAndTime
_HwpmTimeOfLastReset_Object = MibTableColumn
hwpmTimeOfLastReset = _HwpmTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 78),
    _HwpmTimeOfLastReset_Type()
)
hwpmTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmTimeOfLastReset.setStatus("current")
_HwpmTone_Type = WtcsDisplayString
_HwpmTone_Object = MibTableColumn
hwpmTone = _HwpmTone_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 79),
    _HwpmTone_Type()
)
hwpmTone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmTone.setStatus("current")
_HwpmVoiceSwitchFeature_Type = WtcsDisplayString
_HwpmVoiceSwitchFeature_Object = MibTableColumn
hwpmVoiceSwitchFeature = _HwpmVoiceSwitchFeature_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 8, 1, 1, 80),
    _HwpmVoiceSwitchFeature_Type()
)
hwpmVoiceSwitchFeature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwpmVoiceSwitchFeature.setStatus("current")
_WmiVideoMonitor_ObjectIdentity = ObjectIdentity
wmiVideoMonitor = _WmiVideoMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9)
)
if mibBuilder.loadTexts:
    wmiVideoMonitor.setStatus("current")
_Win32DesktopMonitorTable_Object = MibTable
win32DesktopMonitorTable = _Win32DesktopMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1)
)
if mibBuilder.loadTexts:
    win32DesktopMonitorTable.setStatus("current")
_Win32DesktopMonitorEntry_Object = MibTableRow
win32DesktopMonitorEntry = _Win32DesktopMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1)
)
win32DesktopMonitorEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwdmIndex"),
)
if mibBuilder.loadTexts:
    win32DesktopMonitorEntry.setStatus("current")


class _HwdmIndex_Type(Integer32):
    """Custom type hwdmIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwdmIndex_Type.__name__ = "Integer32"
_HwdmIndex_Object = MibTableColumn
hwdmIndex = _HwdmIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 1),
    _HwdmIndex_Type()
)
hwdmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmIndex.setStatus("current")


class _HwdmAvailability_Type(Integer32):
    """Custom type hwdmAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwdmAvailability_Type.__name__ = "Integer32"
_HwdmAvailability_Object = MibTableColumn
hwdmAvailability = _HwdmAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 2),
    _HwdmAvailability_Type()
)
hwdmAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmAvailability.setStatus("current")
_HwdmBandwidth_Type = Gauge32
_HwdmBandwidth_Object = MibTableColumn
hwdmBandwidth = _HwdmBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 3),
    _HwdmBandwidth_Type()
)
hwdmBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmBandwidth.setStatus("current")
_HwdmCaption_Type = WtcsDisplayString
_HwdmCaption_Object = MibTableColumn
hwdmCaption = _HwdmCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 4),
    _HwdmCaption_Type()
)
hwdmCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmCaption.setStatus("current")


class _HwdmConfigManagerErrorCode_Type(Integer32):
    """Custom type hwdmConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwdmConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwdmConfigManagerErrorCode_Object = MibTableColumn
hwdmConfigManagerErrorCode = _HwdmConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 5),
    _HwdmConfigManagerErrorCode_Type()
)
hwdmConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmConfigManagerErrorCode.setStatus("current")
_HwdmConfigManagerUserConfig_Type = TruthValue
_HwdmConfigManagerUserConfig_Object = MibTableColumn
hwdmConfigManagerUserConfig = _HwdmConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 6),
    _HwdmConfigManagerUserConfig_Type()
)
hwdmConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmConfigManagerUserConfig.setStatus("current")


class _HwdmCreationClassName_Type(WtcsDisplayString):
    """Custom type hwdmCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwdmCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwdmCreationClassName_Object = MibTableColumn
hwdmCreationClassName = _HwdmCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 7),
    _HwdmCreationClassName_Type()
)
hwdmCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmCreationClassName.setStatus("current")
_HwdmDescription_Type = WtcsDisplayString
_HwdmDescription_Object = MibTableColumn
hwdmDescription = _HwdmDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 8),
    _HwdmDescription_Type()
)
hwdmDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmDescription.setStatus("current")
_HwdmDeviceID_Type = WtcsDisplayString
_HwdmDeviceID_Object = MibTableColumn
hwdmDeviceID = _HwdmDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 9),
    _HwdmDeviceID_Type()
)
hwdmDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmDeviceID.setStatus("current")


class _HwdmDisplayType_Type(Integer32):
    """Custom type hwdmDisplayType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("fixedFrequencyColor", 4),
          ("fixedFrequencyMonochrome", 5),
          ("multiscanColor", 2),
          ("multiscanMonochrome", 3),
          ("other", 1),
          ("unknown", 0))
    )


_HwdmDisplayType_Type.__name__ = "Integer32"
_HwdmDisplayType_Object = MibTableColumn
hwdmDisplayType = _HwdmDisplayType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 10),
    _HwdmDisplayType_Type()
)
hwdmDisplayType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmDisplayType.setStatus("current")
_HwdmErrorCleared_Type = TruthValue
_HwdmErrorCleared_Object = MibTableColumn
hwdmErrorCleared = _HwdmErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 11),
    _HwdmErrorCleared_Type()
)
hwdmErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmErrorCleared.setStatus("current")
_HwdmErrorDescription_Type = WtcsDisplayString
_HwdmErrorDescription_Object = MibTableColumn
hwdmErrorDescription = _HwdmErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 12),
    _HwdmErrorDescription_Type()
)
hwdmErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmErrorDescription.setStatus("current")
_HwdmInstallDate_Type = DateAndTime
_HwdmInstallDate_Object = MibTableColumn
hwdmInstallDate = _HwdmInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 13),
    _HwdmInstallDate_Type()
)
hwdmInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmInstallDate.setStatus("current")
_HwdmIsLocked_Type = TruthValue
_HwdmIsLocked_Object = MibTableColumn
hwdmIsLocked = _HwdmIsLocked_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 14),
    _HwdmIsLocked_Type()
)
hwdmIsLocked.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmIsLocked.setStatus("current")
_HwdmLastErrorCode_Type = Gauge32
_HwdmLastErrorCode_Object = MibTableColumn
hwdmLastErrorCode = _HwdmLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 15),
    _HwdmLastErrorCode_Type()
)
hwdmLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmLastErrorCode.setStatus("current")
_HwdmMonitorManufacturer_Type = WtcsDisplayString
_HwdmMonitorManufacturer_Object = MibTableColumn
hwdmMonitorManufacturer = _HwdmMonitorManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 16),
    _HwdmMonitorManufacturer_Type()
)
hwdmMonitorManufacturer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmMonitorManufacturer.setStatus("current")
_HwdmMonitorType_Type = WtcsDisplayString
_HwdmMonitorType_Object = MibTableColumn
hwdmMonitorType = _HwdmMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 17),
    _HwdmMonitorType_Type()
)
hwdmMonitorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmMonitorType.setStatus("current")
_HwdmName_Type = WtcsDisplayString
_HwdmName_Object = MibTableColumn
hwdmName = _HwdmName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 18),
    _HwdmName_Type()
)
hwdmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmName.setStatus("current")
_HwdmPixelsPerXLogicalInch_Type = Gauge32
_HwdmPixelsPerXLogicalInch_Object = MibTableColumn
hwdmPixelsPerXLogicalInch = _HwdmPixelsPerXLogicalInch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 19),
    _HwdmPixelsPerXLogicalInch_Type()
)
hwdmPixelsPerXLogicalInch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmPixelsPerXLogicalInch.setStatus("current")
if mibBuilder.loadTexts:
    hwdmPixelsPerXLogicalInch.setUnits("Pixels per Logical Inch")
_HwdmPixelsPerYLogicalInch_Type = Gauge32
_HwdmPixelsPerYLogicalInch_Object = MibTableColumn
hwdmPixelsPerYLogicalInch = _HwdmPixelsPerYLogicalInch_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 20),
    _HwdmPixelsPerYLogicalInch_Type()
)
hwdmPixelsPerYLogicalInch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmPixelsPerYLogicalInch.setStatus("current")
if mibBuilder.loadTexts:
    hwdmPixelsPerYLogicalInch.setUnits("Pixels per Logical Inch")
_HwdmPNPDeviceID_Type = WtcsDisplayString
_HwdmPNPDeviceID_Object = MibTableColumn
hwdmPNPDeviceID = _HwdmPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 21),
    _HwdmPNPDeviceID_Type()
)
hwdmPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmPNPDeviceID.setStatus("current")
_HwdmPowerManagementCapabilities_Type = WtcsDisplayString
_HwdmPowerManagementCapabilities_Object = MibTableColumn
hwdmPowerManagementCapabilities = _HwdmPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 22),
    _HwdmPowerManagementCapabilities_Type()
)
hwdmPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmPowerManagementCapabilities.setStatus("current")
_HwdmPowerManagementSupported_Type = TruthValue
_HwdmPowerManagementSupported_Object = MibTableColumn
hwdmPowerManagementSupported = _HwdmPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 23),
    _HwdmPowerManagementSupported_Type()
)
hwdmPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmPowerManagementSupported.setStatus("current")
_HwdmScreenHeight_Type = Gauge32
_HwdmScreenHeight_Object = MibTableColumn
hwdmScreenHeight = _HwdmScreenHeight_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 24),
    _HwdmScreenHeight_Type()
)
hwdmScreenHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmScreenHeight.setStatus("current")
_HwdmScreenWidth_Type = Gauge32
_HwdmScreenWidth_Object = MibTableColumn
hwdmScreenWidth = _HwdmScreenWidth_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 25),
    _HwdmScreenWidth_Type()
)
hwdmScreenWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmScreenWidth.setStatus("current")


class _HwdmStatus_Type(Integer32):
    """Custom type hwdmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwdmStatus_Type.__name__ = "Integer32"
_HwdmStatus_Object = MibTableColumn
hwdmStatus = _HwdmStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 26),
    _HwdmStatus_Type()
)
hwdmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmStatus.setStatus("current")


class _HwdmStatusInfo_Type(Integer32):
    """Custom type hwdmStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwdmStatusInfo_Type.__name__ = "Integer32"
_HwdmStatusInfo_Object = MibTableColumn
hwdmStatusInfo = _HwdmStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 27),
    _HwdmStatusInfo_Type()
)
hwdmStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmStatusInfo.setStatus("current")
_HwdmSystemCreationClassName_Type = WtcsDisplayString
_HwdmSystemCreationClassName_Object = MibTableColumn
hwdmSystemCreationClassName = _HwdmSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 28),
    _HwdmSystemCreationClassName_Type()
)
hwdmSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmSystemCreationClassName.setStatus("current")
_HwdmSystemName_Type = WtcsDisplayString
_HwdmSystemName_Object = MibTableColumn
hwdmSystemName = _HwdmSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 1, 1, 29),
    _HwdmSystemName_Type()
)
hwdmSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwdmSystemName.setStatus("current")
_Win32VideoControllerTable_Object = MibTable
win32VideoControllerTable = _Win32VideoControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2)
)
if mibBuilder.loadTexts:
    win32VideoControllerTable.setStatus("current")
_Win32VideoControllerEntry_Object = MibTableRow
win32VideoControllerEntry = _Win32VideoControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1)
)
win32VideoControllerEntry.setIndexNames(
    (0, "INFORMANT-HW", "hwvcIndex"),
)
if mibBuilder.loadTexts:
    win32VideoControllerEntry.setStatus("current")


class _HwvcIndex_Type(Integer32):
    """Custom type hwvcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_HwvcIndex_Type.__name__ = "Integer32"
_HwvcIndex_Object = MibTableColumn
hwvcIndex = _HwvcIndex_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 1),
    _HwvcIndex_Type()
)
hwvcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcIndex.setStatus("current")
_HwvcAcceleratorCapabilities_Type = WtcsDisplayString
_HwvcAcceleratorCapabilities_Object = MibTableColumn
hwvcAcceleratorCapabilities = _HwvcAcceleratorCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 2),
    _HwvcAcceleratorCapabilities_Type()
)
hwvcAcceleratorCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcAcceleratorCapabilities.setStatus("current")
_HwvcAdapterCompatibility_Type = WtcsDisplayString
_HwvcAdapterCompatibility_Object = MibTableColumn
hwvcAdapterCompatibility = _HwvcAdapterCompatibility_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 3),
    _HwvcAdapterCompatibility_Type()
)
hwvcAdapterCompatibility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcAdapterCompatibility.setStatus("current")
_HwvcAdapterDACType_Type = WtcsDisplayString
_HwvcAdapterDACType_Object = MibTableColumn
hwvcAdapterDACType = _HwvcAdapterDACType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 4),
    _HwvcAdapterDACType_Type()
)
hwvcAdapterDACType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcAdapterDACType.setStatus("current")
_HwvcAdapterRAM_Type = Gauge32
_HwvcAdapterRAM_Object = MibTableColumn
hwvcAdapterRAM = _HwvcAdapterRAM_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 5),
    _HwvcAdapterRAM_Type()
)
hwvcAdapterRAM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcAdapterRAM.setStatus("current")
if mibBuilder.loadTexts:
    hwvcAdapterRAM.setUnits("Bytes")


class _HwvcAvailability_Type(Integer32):
    """Custom type hwvcAvailability based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 10),
          ("inTest", 5),
          ("installError", 12),
          ("notApplicable", 6),
          ("notConfigured", 20),
          ("notInstalled", 11),
          ("notReady", 19),
          ("offDuty", 9),
          ("offLine", 8),
          ("other", 1),
          ("paused", 18),
          ("powerCycle", 16),
          ("powerOff", 7),
          ("powerSaveLowPowerMode", 14),
          ("powerSaveStandby", 15),
          ("powerSaveUnknown", 13),
          ("powerSaveWarning", 17),
          ("quiesced", 21),
          ("runningFullPower", 3),
          ("unknown", 2),
          ("warning", 4))
    )


_HwvcAvailability_Type.__name__ = "Integer32"
_HwvcAvailability_Object = MibTableColumn
hwvcAvailability = _HwvcAvailability_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 6),
    _HwvcAvailability_Type()
)
hwvcAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcAvailability.setStatus("current")
_HwvcCapabilityDescriptions_Type = WtcsDisplayString
_HwvcCapabilityDescriptions_Object = MibTableColumn
hwvcCapabilityDescriptions = _HwvcCapabilityDescriptions_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 7),
    _HwvcCapabilityDescriptions_Type()
)
hwvcCapabilityDescriptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCapabilityDescriptions.setStatus("current")


class _HwvcCaption_Type(WtcsDisplayString):
    """Custom type hwvcCaption based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_HwvcCaption_Type.__name__ = "WtcsDisplayString"
_HwvcCaption_Object = MibTableColumn
hwvcCaption = _HwvcCaption_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 8),
    _HwvcCaption_Type()
)
hwvcCaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCaption.setStatus("current")
_HwvcColorTableEntries_Type = Gauge32
_HwvcColorTableEntries_Object = MibTableColumn
hwvcColorTableEntries = _HwvcColorTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 9),
    _HwvcColorTableEntries_Type()
)
hwvcColorTableEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcColorTableEntries.setStatus("current")


class _HwvcConfigManagerErrorCode_Type(Integer32):
    """Custom type hwvcConfigManagerErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("bootConflicts", 6),
          ("cannotFilter", 7),
          ("cannotIdentify", 16),
          ("cannotLoad", 2),
          ("cannotLoadDrivers", 31),
          ("cannotStart", 10),
          ("cannotVerifyResources", 13),
          ("conflictIRQ", 30),
          ("deviceDisabled", 22),
          ("deviceFailed", 11),
          ("deviceProblem", 24),
          ("driverCorrupted", 4),
          ("driverLoaderMissing", 8),
          ("driversNotInstalled", 28),
          ("failedVXDloader", 19),
          ("invalidLogConfiguration", 27),
          ("lowResource", 3),
          ("missingResources", 29),
          ("needResource", 5),
          ("noFreeResources", 12),
          ("notConfigured", 1),
          ("reenumerationProblem", 15),
          ("registryCorrupted", 20),
          ("reinstallDrivers", 18),
          ("resourceIncorrect", 9),
          ("restartComputer", 14),
          ("settingUpDevice", 25),
          ("settingUpDevice2", 26),
          ("systemFailuer2", 23),
          ("systemFailure", 21),
          ("unknownResourceType", 17),
          ("workingProperly", 0))
    )


_HwvcConfigManagerErrorCode_Type.__name__ = "Integer32"
_HwvcConfigManagerErrorCode_Object = MibTableColumn
hwvcConfigManagerErrorCode = _HwvcConfigManagerErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 10),
    _HwvcConfigManagerErrorCode_Type()
)
hwvcConfigManagerErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcConfigManagerErrorCode.setStatus("current")
_HwvcConfigManagerUserConfig_Type = TruthValue
_HwvcConfigManagerUserConfig_Object = MibTableColumn
hwvcConfigManagerUserConfig = _HwvcConfigManagerUserConfig_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 11),
    _HwvcConfigManagerUserConfig_Type()
)
hwvcConfigManagerUserConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcConfigManagerUserConfig.setStatus("current")


class _HwvcCreationClassName_Type(WtcsDisplayString):
    """Custom type hwvcCreationClassName based on WtcsDisplayString"""
    subtypeSpec = WtcsDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_HwvcCreationClassName_Type.__name__ = "WtcsDisplayString"
_HwvcCreationClassName_Object = MibTableColumn
hwvcCreationClassName = _HwvcCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 12),
    _HwvcCreationClassName_Type()
)
hwvcCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCreationClassName.setStatus("current")
_HwvcCurrentBitsPerPixel_Type = Gauge32
_HwvcCurrentBitsPerPixel_Object = MibTableColumn
hwvcCurrentBitsPerPixel = _HwvcCurrentBitsPerPixel_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 13),
    _HwvcCurrentBitsPerPixel_Type()
)
hwvcCurrentBitsPerPixel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentBitsPerPixel.setStatus("current")
if mibBuilder.loadTexts:
    hwvcCurrentBitsPerPixel.setUnits("Bits")
_HwvcCurrentHorizontalResolution_Type = Gauge32
_HwvcCurrentHorizontalResolution_Object = MibTableColumn
hwvcCurrentHorizontalResolution = _HwvcCurrentHorizontalResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 14),
    _HwvcCurrentHorizontalResolution_Type()
)
hwvcCurrentHorizontalResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentHorizontalResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwvcCurrentHorizontalResolution.setUnits("Pixels")
_HwvcCurrentNumberOfColors_Type = Gauge32
_HwvcCurrentNumberOfColors_Object = MibTableColumn
hwvcCurrentNumberOfColors = _HwvcCurrentNumberOfColors_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 15),
    _HwvcCurrentNumberOfColors_Type()
)
hwvcCurrentNumberOfColors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentNumberOfColors.setStatus("current")
_HwvcCurrentNumberOfColumns_Type = Gauge32
_HwvcCurrentNumberOfColumns_Object = MibTableColumn
hwvcCurrentNumberOfColumns = _HwvcCurrentNumberOfColumns_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 16),
    _HwvcCurrentNumberOfColumns_Type()
)
hwvcCurrentNumberOfColumns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentNumberOfColumns.setStatus("current")
_HwvcCurrentNumberOfRows_Type = Gauge32
_HwvcCurrentNumberOfRows_Object = MibTableColumn
hwvcCurrentNumberOfRows = _HwvcCurrentNumberOfRows_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 17),
    _HwvcCurrentNumberOfRows_Type()
)
hwvcCurrentNumberOfRows.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentNumberOfRows.setStatus("current")
_HwvcCurrentRefreshRate_Type = Gauge32
_HwvcCurrentRefreshRate_Object = MibTableColumn
hwvcCurrentRefreshRate = _HwvcCurrentRefreshRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 18),
    _HwvcCurrentRefreshRate_Type()
)
hwvcCurrentRefreshRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentRefreshRate.setStatus("current")
if mibBuilder.loadTexts:
    hwvcCurrentRefreshRate.setUnits("Hertz")


class _HwvcCurrentScanMode_Type(Integer32):
    """Custom type hwvcCurrentScanMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("interlaced", 3),
          ("nonInterlaced", 4),
          ("other", 1),
          ("unknown", 2))
    )


_HwvcCurrentScanMode_Type.__name__ = "Integer32"
_HwvcCurrentScanMode_Object = MibTableColumn
hwvcCurrentScanMode = _HwvcCurrentScanMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 19),
    _HwvcCurrentScanMode_Type()
)
hwvcCurrentScanMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentScanMode.setStatus("current")
_HwvcCurrentVerticalResolution_Type = Gauge32
_HwvcCurrentVerticalResolution_Object = MibTableColumn
hwvcCurrentVerticalResolution = _HwvcCurrentVerticalResolution_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 20),
    _HwvcCurrentVerticalResolution_Type()
)
hwvcCurrentVerticalResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcCurrentVerticalResolution.setStatus("current")
if mibBuilder.loadTexts:
    hwvcCurrentVerticalResolution.setUnits("Pixels")
_HwvcDescription_Type = WtcsDisplayString
_HwvcDescription_Object = MibTableColumn
hwvcDescription = _HwvcDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 21),
    _HwvcDescription_Type()
)
hwvcDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcDescription.setStatus("current")
_HwvcDeviceID_Type = WtcsDisplayString
_HwvcDeviceID_Object = MibTableColumn
hwvcDeviceID = _HwvcDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 22),
    _HwvcDeviceID_Type()
)
hwvcDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcDeviceID.setStatus("current")
_HwvcDeviceSpecificPens_Type = Gauge32
_HwvcDeviceSpecificPens_Object = MibTableColumn
hwvcDeviceSpecificPens = _HwvcDeviceSpecificPens_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 23),
    _HwvcDeviceSpecificPens_Type()
)
hwvcDeviceSpecificPens.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcDeviceSpecificPens.setStatus("current")


class _HwvcDitherType_Type(Integer32):
    """Custom type hwvcDitherType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("deviceDoesGrayScaling", 5),
          ("ditheringWithACoarseBrush", 2),
          ("ditheringWithAFineBrush", 3),
          ("lineArtDithering", 4),
          ("noDithering", 1))
    )


_HwvcDitherType_Type.__name__ = "Integer32"
_HwvcDitherType_Object = MibTableColumn
hwvcDitherType = _HwvcDitherType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 24),
    _HwvcDitherType_Type()
)
hwvcDitherType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcDitherType.setStatus("current")
_HwvcDriverDate_Type = DateAndTime
_HwvcDriverDate_Object = MibTableColumn
hwvcDriverDate = _HwvcDriverDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 25),
    _HwvcDriverDate_Type()
)
hwvcDriverDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcDriverDate.setStatus("current")
_HwvcDriverVersion_Type = WtcsDisplayString
_HwvcDriverVersion_Object = MibTableColumn
hwvcDriverVersion = _HwvcDriverVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 26),
    _HwvcDriverVersion_Type()
)
hwvcDriverVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcDriverVersion.setStatus("current")
_HwvcErrorCleared_Type = TruthValue
_HwvcErrorCleared_Object = MibTableColumn
hwvcErrorCleared = _HwvcErrorCleared_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 27),
    _HwvcErrorCleared_Type()
)
hwvcErrorCleared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcErrorCleared.setStatus("current")
_HwvcErrorDescription_Type = WtcsDisplayString
_HwvcErrorDescription_Object = MibTableColumn
hwvcErrorDescription = _HwvcErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 28),
    _HwvcErrorDescription_Type()
)
hwvcErrorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcErrorDescription.setStatus("current")


class _HwvcICMIntent_Type(Integer32):
    """Custom type hwvcICMIntent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("contrast", 2),
          ("exactColor", 3),
          ("saturation", 1))
    )


_HwvcICMIntent_Type.__name__ = "Integer32"
_HwvcICMIntent_Object = MibTableColumn
hwvcICMIntent = _HwvcICMIntent_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 29),
    _HwvcICMIntent_Type()
)
hwvcICMIntent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcICMIntent.setStatus("current")


class _HwvcICMMethod_Type(Integer32):
    """Custom type hwvcICMMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("destinationDevice", 4),
          ("deviceDriver", 3),
          ("disabled", 1),
          ("windows", 2))
    )


_HwvcICMMethod_Type.__name__ = "Integer32"
_HwvcICMMethod_Object = MibTableColumn
hwvcICMMethod = _HwvcICMMethod_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 30),
    _HwvcICMMethod_Type()
)
hwvcICMMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcICMMethod.setStatus("current")
_HwvcInfFilename_Type = WtcsDisplayString
_HwvcInfFilename_Object = MibTableColumn
hwvcInfFilename = _HwvcInfFilename_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 31),
    _HwvcInfFilename_Type()
)
hwvcInfFilename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcInfFilename.setStatus("current")
_HwvcInfSection_Type = WtcsDisplayString
_HwvcInfSection_Object = MibTableColumn
hwvcInfSection = _HwvcInfSection_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 32),
    _HwvcInfSection_Type()
)
hwvcInfSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcInfSection.setStatus("current")
_HwvcInstallDate_Type = DateAndTime
_HwvcInstallDate_Object = MibTableColumn
hwvcInstallDate = _HwvcInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 33),
    _HwvcInstallDate_Type()
)
hwvcInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcInstallDate.setStatus("current")
_HwvcInstalledDisplayDrivers_Type = WtcsDisplayString
_HwvcInstalledDisplayDrivers_Object = MibTableColumn
hwvcInstalledDisplayDrivers = _HwvcInstalledDisplayDrivers_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 34),
    _HwvcInstalledDisplayDrivers_Type()
)
hwvcInstalledDisplayDrivers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcInstalledDisplayDrivers.setStatus("current")
_HwvcLastErrorCode_Type = Gauge32
_HwvcLastErrorCode_Object = MibTableColumn
hwvcLastErrorCode = _HwvcLastErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 35),
    _HwvcLastErrorCode_Type()
)
hwvcLastErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcLastErrorCode.setStatus("current")
_HwvcMaxMemorySupported_Type = Gauge32
_HwvcMaxMemorySupported_Object = MibTableColumn
hwvcMaxMemorySupported = _HwvcMaxMemorySupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 36),
    _HwvcMaxMemorySupported_Type()
)
hwvcMaxMemorySupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcMaxMemorySupported.setStatus("current")
if mibBuilder.loadTexts:
    hwvcMaxMemorySupported.setUnits("Bytes")
_HwvcMaxNumberControlled_Type = Gauge32
_HwvcMaxNumberControlled_Object = MibTableColumn
hwvcMaxNumberControlled = _HwvcMaxNumberControlled_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 37),
    _HwvcMaxNumberControlled_Type()
)
hwvcMaxNumberControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcMaxNumberControlled.setStatus("current")
_HwvcMaxRefreshRate_Type = Gauge32
_HwvcMaxRefreshRate_Object = MibTableColumn
hwvcMaxRefreshRate = _HwvcMaxRefreshRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 38),
    _HwvcMaxRefreshRate_Type()
)
hwvcMaxRefreshRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcMaxRefreshRate.setStatus("current")
if mibBuilder.loadTexts:
    hwvcMaxRefreshRate.setUnits("Hertz")
_HwvcMinRefreshRate_Type = Gauge32
_HwvcMinRefreshRate_Object = MibTableColumn
hwvcMinRefreshRate = _HwvcMinRefreshRate_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 39),
    _HwvcMinRefreshRate_Type()
)
hwvcMinRefreshRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcMinRefreshRate.setStatus("current")
if mibBuilder.loadTexts:
    hwvcMinRefreshRate.setUnits("Hertz")
_HwvcMonochrome_Type = TruthValue
_HwvcMonochrome_Object = MibTableColumn
hwvcMonochrome = _HwvcMonochrome_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 40),
    _HwvcMonochrome_Type()
)
hwvcMonochrome.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcMonochrome.setStatus("current")
_HwvcName_Type = WtcsDisplayString
_HwvcName_Object = MibTableColumn
hwvcName = _HwvcName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 41),
    _HwvcName_Type()
)
hwvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcName.setStatus("current")
_HwvcNumberOfColorPlanes_Type = Integer32
_HwvcNumberOfColorPlanes_Object = MibTableColumn
hwvcNumberOfColorPlanes = _HwvcNumberOfColorPlanes_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 42),
    _HwvcNumberOfColorPlanes_Type()
)
hwvcNumberOfColorPlanes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcNumberOfColorPlanes.setStatus("current")
_HwvcNumberOfVideoPages_Type = Gauge32
_HwvcNumberOfVideoPages_Object = MibTableColumn
hwvcNumberOfVideoPages = _HwvcNumberOfVideoPages_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 43),
    _HwvcNumberOfVideoPages_Type()
)
hwvcNumberOfVideoPages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcNumberOfVideoPages.setStatus("current")
_HwvcPNPDeviceID_Type = WtcsDisplayString
_HwvcPNPDeviceID_Object = MibTableColumn
hwvcPNPDeviceID = _HwvcPNPDeviceID_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 44),
    _HwvcPNPDeviceID_Type()
)
hwvcPNPDeviceID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcPNPDeviceID.setStatus("current")
_HwvcPowerManagementCapabilities_Type = WtcsDisplayString
_HwvcPowerManagementCapabilities_Object = MibTableColumn
hwvcPowerManagementCapabilities = _HwvcPowerManagementCapabilities_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 45),
    _HwvcPowerManagementCapabilities_Type()
)
hwvcPowerManagementCapabilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcPowerManagementCapabilities.setStatus("current")
_HwvcPowerManagementSupported_Type = TruthValue
_HwvcPowerManagementSupported_Object = MibTableColumn
hwvcPowerManagementSupported = _HwvcPowerManagementSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 46),
    _HwvcPowerManagementSupported_Type()
)
hwvcPowerManagementSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcPowerManagementSupported.setStatus("current")


class _HwvcProtocolSupported_Type(Integer32):
    """Custom type hwvcProtocolSupported based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46)
        )
    )
    namedValues = NamedValues(
        *(("agp", 42),
          ("ansiX3T95FDDI", 33),
          ("ataATAPI", 5),
          ("cmd", 37),
          ("diagnostic", 18),
          ("dssi", 39),
          ("eisa", 2),
          ("enhancedATAIDE", 41),
          ("escon", 17),
          ("esdi", 35),
          ("fastInfrared", 44),
          ("flexibleDiskette", 6),
          ("hippi", 21),
          ("i2C", 19),
          ("ide", 36),
          ("ieee488", 25),
          ("ieee8023100BASEVG", 31),
          ("ieee802310BASE2", 28),
          ("ieee802310BASE5", 27),
          ("ieee802310BROAD36", 30),
          ("ieee80231BASE5", 29),
          ("ieee8025TokenRing", 32),
          ("ipi", 24),
          ("irBus", 46),
          ("isa", 3),
          ("mca", 34),
          ("multiBus", 22),
          ("n1496", 7),
          ("other", 0),
          ("parallelProtocol", 16),
          ("pci", 4),
          ("pcmcia", 14),
          ("power", 20),
          ("qic2", 40),
          ("rs232", 26),
          ("scsiFibreChannelProtocol", 9),
          ("scsiParallelInterface", 8),
          ("scsiSerialBusProtocol", 10),
          ("scsiSerialBusProtocol1394", 11),
          ("scsiSerialStorageArchitecture", 12),
          ("serialInfrared", 45),
          ("st506", 38),
          ("twowayInfrared", 43),
          ("universalSerialBus", 15),
          ("unknown", 1),
          ("vesa", 13),
          ("vme", 23))
    )


_HwvcProtocolSupported_Type.__name__ = "Integer32"
_HwvcProtocolSupported_Object = MibTableColumn
hwvcProtocolSupported = _HwvcProtocolSupported_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 47),
    _HwvcProtocolSupported_Type()
)
hwvcProtocolSupported.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcProtocolSupported.setStatus("current")
_HwvcReservedSystemPaletteEntries_Type = Gauge32
_HwvcReservedSystemPaletteEntries_Object = MibTableColumn
hwvcReservedSystemPaletteEntries = _HwvcReservedSystemPaletteEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 48),
    _HwvcReservedSystemPaletteEntries_Type()
)
hwvcReservedSystemPaletteEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcReservedSystemPaletteEntries.setStatus("current")
_HwvcSpecificationVersion_Type = Gauge32
_HwvcSpecificationVersion_Object = MibTableColumn
hwvcSpecificationVersion = _HwvcSpecificationVersion_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 49),
    _HwvcSpecificationVersion_Type()
)
hwvcSpecificationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcSpecificationVersion.setStatus("current")


class _HwvcStatus_Type(Integer32):
    """Custom type hwvcStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("degraded", 3),
          ("error", 2),
          ("lostComm", 12),
          ("noContact", 11),
          ("nonRecover", 10),
          ("ok", 1),
          ("predFail", 5),
          ("service", 8),
          ("starting", 6),
          ("stopping", 7),
          ("stressed", 9),
          ("unknown", 4))
    )


_HwvcStatus_Type.__name__ = "Integer32"
_HwvcStatus_Object = MibTableColumn
hwvcStatus = _HwvcStatus_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 50),
    _HwvcStatus_Type()
)
hwvcStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcStatus.setStatus("current")


class _HwvcStatusInfo_Type(Integer32):
    """Custom type hwvcStatusInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("enabled", 3),
          ("notApplicable", 5),
          ("other", 1),
          ("unknown", 2))
    )


_HwvcStatusInfo_Type.__name__ = "Integer32"
_HwvcStatusInfo_Object = MibTableColumn
hwvcStatusInfo = _HwvcStatusInfo_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 51),
    _HwvcStatusInfo_Type()
)
hwvcStatusInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcStatusInfo.setStatus("current")
_HwvcSystemCreationClassName_Type = WtcsDisplayString
_HwvcSystemCreationClassName_Object = MibTableColumn
hwvcSystemCreationClassName = _HwvcSystemCreationClassName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 52),
    _HwvcSystemCreationClassName_Type()
)
hwvcSystemCreationClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcSystemCreationClassName.setStatus("current")
_HwvcSystemName_Type = WtcsDisplayString
_HwvcSystemName_Object = MibTableColumn
hwvcSystemName = _HwvcSystemName_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 53),
    _HwvcSystemName_Type()
)
hwvcSystemName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcSystemName.setStatus("current")
_HwvcSystemPaletteEntries_Type = Gauge32
_HwvcSystemPaletteEntries_Object = MibTableColumn
hwvcSystemPaletteEntries = _HwvcSystemPaletteEntries_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 54),
    _HwvcSystemPaletteEntries_Type()
)
hwvcSystemPaletteEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcSystemPaletteEntries.setStatus("current")
_HwvcTimeOfLastReset_Type = DateAndTime
_HwvcTimeOfLastReset_Object = MibTableColumn
hwvcTimeOfLastReset = _HwvcTimeOfLastReset_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 55),
    _HwvcTimeOfLastReset_Type()
)
hwvcTimeOfLastReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcTimeOfLastReset.setStatus("current")


class _HwvcVideoArchitecture_Type(Integer32):
    """Custom type hwvcVideoArchitecture based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              160)
        )
    )
    namedValues = NamedValues(
        *(("cga", 3),
          ("ega", 4),
          ("hgc", 8),
          ("linearFrameBuffer", 12),
          ("mcga", 9),
          ("mda", 7),
          ("n8514A", 10),
          ("other", 1),
          ("pc98", 160),
          ("svga", 6),
          ("unknown", 2),
          ("vga", 5),
          ("xga", 11))
    )


_HwvcVideoArchitecture_Type.__name__ = "Integer32"
_HwvcVideoArchitecture_Object = MibTableColumn
hwvcVideoArchitecture = _HwvcVideoArchitecture_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 56),
    _HwvcVideoArchitecture_Type()
)
hwvcVideoArchitecture.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcVideoArchitecture.setStatus("current")


class _HwvcVideoMemoryType_Type(Integer32):
    """Custom type hwvcVideoMemoryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("burstSynchronousDRAM", 8),
          ("cdram", 10),
          ("dram", 4),
          ("edoRAM", 7),
          ("n3DRAM", 11),
          ("other", 1),
          ("pipelinedBurstSRAM", 9),
          ("sdram", 12),
          ("sgram", 13),
          ("sram", 5),
          ("unknown", 2),
          ("vram", 3),
          ("wram", 6))
    )


_HwvcVideoMemoryType_Type.__name__ = "Integer32"
_HwvcVideoMemoryType_Object = MibTableColumn
hwvcVideoMemoryType = _HwvcVideoMemoryType_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 57),
    _HwvcVideoMemoryType_Type()
)
hwvcVideoMemoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcVideoMemoryType.setStatus("current")
_HwvcVideoMode_Type = Integer32
_HwvcVideoMode_Object = MibTableColumn
hwvcVideoMode = _HwvcVideoMode_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 58),
    _HwvcVideoMode_Type()
)
hwvcVideoMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcVideoMode.setStatus("current")
_HwvcVideoModeDescription_Type = WtcsDisplayString
_HwvcVideoModeDescription_Object = MibTableColumn
hwvcVideoModeDescription = _HwvcVideoModeDescription_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 59),
    _HwvcVideoModeDescription_Type()
)
hwvcVideoModeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcVideoModeDescription.setStatus("current")
_HwvcVideoProcessor_Type = WtcsDisplayString
_HwvcVideoProcessor_Object = MibTableColumn
hwvcVideoProcessor = _HwvcVideoProcessor_Object(
    (1, 3, 6, 1, 4, 1, 9600, 1, 21, 9, 2, 1, 60),
    _HwvcVideoProcessor_Type()
)
hwvcVideoProcessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hwvcVideoProcessor.setStatus("current")

# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "INFORMANT-HW",
    **{"wmiHardware": wmiHardware,
       "wmiCoolingDevice": wmiCoolingDevice,
       "win32FanTable": win32FanTable,
       "win32FanEntry": win32FanEntry,
       "hwfanIndex": hwfanIndex,
       "hwfanActiveCooling": hwfanActiveCooling,
       "hwfanAvailability": hwfanAvailability,
       "hwfanCaption": hwfanCaption,
       "hwfanConfigManagerErrorCode": hwfanConfigManagerErrorCode,
       "hwfanConfigManagerUserConfig": hwfanConfigManagerUserConfig,
       "hwfanCreationClassName": hwfanCreationClassName,
       "hwfanDescription": hwfanDescription,
       "hwfanDesiredSpeed": hwfanDesiredSpeed,
       "hwfanDeviceID": hwfanDeviceID,
       "hwfanErrorCleared": hwfanErrorCleared,
       "hwfanErrorDescription": hwfanErrorDescription,
       "hwfanInstallDate": hwfanInstallDate,
       "hwfanLastErrorCode": hwfanLastErrorCode,
       "hwfanName": hwfanName,
       "hwfanPNPDeviceID": hwfanPNPDeviceID,
       "hwfanPowerManagementCapabilities": hwfanPowerManagementCapabilities,
       "hwfanPowerManagementSupported": hwfanPowerManagementSupported,
       "hwfanStatus": hwfanStatus,
       "hwfanStatusInfo": hwfanStatusInfo,
       "hwfanSystemCreationClassName": hwfanSystemCreationClassName,
       "hwfanSystemName": hwfanSystemName,
       "hwfanVariableSpeed": hwfanVariableSpeed,
       "win32HeatPipeTable": win32HeatPipeTable,
       "win32HeatPipeEntry": win32HeatPipeEntry,
       "hwhpIndex": hwhpIndex,
       "hwhpActiveCooling": hwhpActiveCooling,
       "hwhpAvailability": hwhpAvailability,
       "hwhpCaption": hwhpCaption,
       "hwhpConfigManagerErrorCode": hwhpConfigManagerErrorCode,
       "hwhpConfigManagerUserConfig": hwhpConfigManagerUserConfig,
       "hwhpCreationClassName": hwhpCreationClassName,
       "hwhpDescription": hwhpDescription,
       "hwhpDeviceID": hwhpDeviceID,
       "hwhpErrorCleared": hwhpErrorCleared,
       "hwhpErrorDescription": hwhpErrorDescription,
       "hwhpInstallDate": hwhpInstallDate,
       "hwhpLastErrorCode": hwhpLastErrorCode,
       "hwhpName": hwhpName,
       "hwhpPNPDeviceID": hwhpPNPDeviceID,
       "hwhpPowerManagementCapabilities": hwhpPowerManagementCapabilities,
       "hwhpPowerManagementSupported": hwhpPowerManagementSupported,
       "hwhpStatus": hwhpStatus,
       "hwhpStatusInfo": hwhpStatusInfo,
       "hwhpSystemCreationClassName": hwhpSystemCreationClassName,
       "hwhpSystemName": hwhpSystemName,
       "win32RefrigerationTable": win32RefrigerationTable,
       "win32RefrigerationEntry": win32RefrigerationEntry,
       "hwrfgIndex": hwrfgIndex,
       "hwrfgActiveCooling": hwrfgActiveCooling,
       "hwrfgAvailability": hwrfgAvailability,
       "hwrfgCaption": hwrfgCaption,
       "hwrfgConfigManagerErrorCode": hwrfgConfigManagerErrorCode,
       "hwrfgConfigManagerUserConfig": hwrfgConfigManagerUserConfig,
       "hwrfgCreationClassName": hwrfgCreationClassName,
       "hwrfgDescription": hwrfgDescription,
       "hwrfgDeviceID": hwrfgDeviceID,
       "hwrfgErrorCleared": hwrfgErrorCleared,
       "hwrfgErrorDescription": hwrfgErrorDescription,
       "hwrfgInstallDate": hwrfgInstallDate,
       "hwrfgLastErrorCode": hwrfgLastErrorCode,
       "hwrfgName": hwrfgName,
       "hwrfgPNPDeviceID": hwrfgPNPDeviceID,
       "hwrfgPowerManagementCapabilities": hwrfgPowerManagementCapabilities,
       "hwrfgPowerManagementSupported": hwrfgPowerManagementSupported,
       "hwrfgStatus": hwrfgStatus,
       "hwrfgStatusInfo": hwrfgStatusInfo,
       "hwrfgSystemCreationClassName": hwrfgSystemCreationClassName,
       "hwrfgSystemName": hwrfgSystemName,
       "win32TemperatureProbeTable": win32TemperatureProbeTable,
       "win32TemperatureProbeEntry": win32TemperatureProbeEntry,
       "hwtmpIndex": hwtmpIndex,
       "hwtmpAccuracy": hwtmpAccuracy,
       "hwtmpAvailability": hwtmpAvailability,
       "hwtmpCaption": hwtmpCaption,
       "hwtmpConfigManagerErrorCode": hwtmpConfigManagerErrorCode,
       "hwtmpConfigManagerUserConfig": hwtmpConfigManagerUserConfig,
       "hwtmpCreationClassName": hwtmpCreationClassName,
       "hwtmpCurrentReading": hwtmpCurrentReading,
       "hwtmpDescription": hwtmpDescription,
       "hwtmpDeviceID": hwtmpDeviceID,
       "hwtmpErrorCleared": hwtmpErrorCleared,
       "hwtmpErrorDescription": hwtmpErrorDescription,
       "hwtmpInstallDate": hwtmpInstallDate,
       "hwtmpIsLinear": hwtmpIsLinear,
       "hwtmpLastErrorCode": hwtmpLastErrorCode,
       "hwtmpLowerThresholdCritical": hwtmpLowerThresholdCritical,
       "hwtmpLowerThresholdFatal": hwtmpLowerThresholdFatal,
       "hwtmpLowerThresholdNonCritical": hwtmpLowerThresholdNonCritical,
       "hwtmpMaxReadable": hwtmpMaxReadable,
       "hwtmpMinReadable": hwtmpMinReadable,
       "hwtmpName": hwtmpName,
       "hwtmpNominalReading": hwtmpNominalReading,
       "hwtmpNormalMax": hwtmpNormalMax,
       "hwtmpNormalMin": hwtmpNormalMin,
       "hwtmpPNPDeviceID": hwtmpPNPDeviceID,
       "hwtmpPowerManagementCapabilities": hwtmpPowerManagementCapabilities,
       "hwtmpPowerManagementSupported": hwtmpPowerManagementSupported,
       "hwtmpResolution": hwtmpResolution,
       "hwtmpStatus": hwtmpStatus,
       "hwtmpStatusInfo": hwtmpStatusInfo,
       "hwtmpSystemCreationClassName": hwtmpSystemCreationClassName,
       "hwtmpSystemName": hwtmpSystemName,
       "hwtmpTolerance": hwtmpTolerance,
       "hwtmpUpperThresholdCritical": hwtmpUpperThresholdCritical,
       "hwtmpUpperThresholdFatal": hwtmpUpperThresholdFatal,
       "hwtmpUpperThresholdNonCritical": hwtmpUpperThresholdNonCritical,
       "wmiInputDevice": wmiInputDevice,
       "win32KeyboardTable": win32KeyboardTable,
       "win32KeyboardEntry": win32KeyboardEntry,
       "hwkbIndex": hwkbIndex,
       "hwkbAvailability": hwkbAvailability,
       "hwkbCaption": hwkbCaption,
       "hwkbConfigManagerErrorCode": hwkbConfigManagerErrorCode,
       "hwkbConfigManagerUserConfig": hwkbConfigManagerUserConfig,
       "hwkbCreationClassName": hwkbCreationClassName,
       "hwkbDescription": hwkbDescription,
       "hwkbDeviceID": hwkbDeviceID,
       "hwkbErrorCleared": hwkbErrorCleared,
       "hwkbErrorDescription": hwkbErrorDescription,
       "hwkbInstallDate": hwkbInstallDate,
       "hwkbIsLocked": hwkbIsLocked,
       "hwkbLastErrorCode": hwkbLastErrorCode,
       "hwkbLayout": hwkbLayout,
       "hwkbName": hwkbName,
       "hwkbNumberOfFunctionKeys": hwkbNumberOfFunctionKeys,
       "hwkbPassword": hwkbPassword,
       "hwkbPNPDeviceID": hwkbPNPDeviceID,
       "hwkbPowerManagementCapabilities": hwkbPowerManagementCapabilities,
       "hwkbPowerManagementSupported": hwkbPowerManagementSupported,
       "hwkbStatus": hwkbStatus,
       "hwkbStatusInfo": hwkbStatusInfo,
       "hwkbSystemCreationClassName": hwkbSystemCreationClassName,
       "hwkbSystemName": hwkbSystemName,
       "win32PointingDeviceTable": win32PointingDeviceTable,
       "win32PointingDeviceEntry": win32PointingDeviceEntry,
       "hwptIndex": hwptIndex,
       "hwptAvailability": hwptAvailability,
       "hwptCaption": hwptCaption,
       "hwptConfigManagerErrorCode": hwptConfigManagerErrorCode,
       "hwptConfigManagerUserConfig": hwptConfigManagerUserConfig,
       "hwptCreationClassName": hwptCreationClassName,
       "hwptDescription": hwptDescription,
       "hwptDeviceID": hwptDeviceID,
       "hwptDeviceInterface": hwptDeviceInterface,
       "hwptDoubleSpeedThreshold": hwptDoubleSpeedThreshold,
       "hwptErrorCleared": hwptErrorCleared,
       "hwptErrorDescription": hwptErrorDescription,
       "hwptHandedness": hwptHandedness,
       "hwptHardwareType": hwptHardwareType,
       "hwptInfFileName": hwptInfFileName,
       "hwptInfSection": hwptInfSection,
       "hwptInstallDate": hwptInstallDate,
       "hwptIsLocked": hwptIsLocked,
       "hwptLastErrorCode": hwptLastErrorCode,
       "hwptManufacturer": hwptManufacturer,
       "hwptName": hwptName,
       "hwptNumberOfButtons": hwptNumberOfButtons,
       "hwptPNPDeviceID": hwptPNPDeviceID,
       "hwptPointingType": hwptPointingType,
       "hwptPowerManagementCapabilities": hwptPowerManagementCapabilities,
       "hwptPowerManagementSupported": hwptPowerManagementSupported,
       "hwptQuadSpeedThreshold": hwptQuadSpeedThreshold,
       "hwptResolution": hwptResolution,
       "hwptSampleRate": hwptSampleRate,
       "hwptStatus": hwptStatus,
       "hwptStatusInfo": hwptStatusInfo,
       "hwptSynch": hwptSynch,
       "hwptSystemCreationClassName": hwptSystemCreationClassName,
       "hwptSystemName": hwptSystemName,
       "wmiMassStorage": wmiMassStorage,
       "win32AutochkSettingTable": win32AutochkSettingTable,
       "win32AutochkSettingEntry": win32AutochkSettingEntry,
       "hwasIndex": hwasIndex,
       "hwasCaption": hwasCaption,
       "hwasDescription": hwasDescription,
       "hwasSettingID": hwasSettingID,
       "hwasUserInputDelay": hwasUserInputDelay,
       "win32CDROMDriveTable": win32CDROMDriveTable,
       "win32CDROMDriveEntry": win32CDROMDriveEntry,
       "hwcdIndex": hwcdIndex,
       "hwcdAvailability": hwcdAvailability,
       "hwcdCapabilities": hwcdCapabilities,
       "hwcdCapabilityDescriptions": hwcdCapabilityDescriptions,
       "hwcdCaption": hwcdCaption,
       "hwcdCompressionMethod": hwcdCompressionMethod,
       "hwcdConfigManagerErrorCode": hwcdConfigManagerErrorCode,
       "hwcdConfigManagerUserConfig": hwcdConfigManagerUserConfig,
       "hwcdCreationClassName": hwcdCreationClassName,
       "hwcdDefaultBlockSize": hwcdDefaultBlockSize,
       "hwcdDescription": hwcdDescription,
       "hwcdDeviceID": hwcdDeviceID,
       "hwcdDrive": hwcdDrive,
       "hwcdDriveIntegrity": hwcdDriveIntegrity,
       "hwcdErrorCleared": hwcdErrorCleared,
       "hwcdErrorDescription": hwcdErrorDescription,
       "hwcdErrorMethodology": hwcdErrorMethodology,
       "hwcdFileSystemFlags": hwcdFileSystemFlags,
       "hwcdFileSystemFlagsEx": hwcdFileSystemFlagsEx,
       "hwcdId": hwcdId,
       "hwcdInstallDate": hwcdInstallDate,
       "hwcdLastErrorCode": hwcdLastErrorCode,
       "hwcdManufacturer": hwcdManufacturer,
       "hwcdMaxBlockSize": hwcdMaxBlockSize,
       "hwcdMaximumComponentLength": hwcdMaximumComponentLength,
       "hwcdMaxMediaSize": hwcdMaxMediaSize,
       "hwcdMediaLoaded": hwcdMediaLoaded,
       "hwcdMediaType": hwcdMediaType,
       "hwcdMfrAssignedRevisionLevel": hwcdMfrAssignedRevisionLevel,
       "hwcdMinBlockSize": hwcdMinBlockSize,
       "hwcdName": hwcdName,
       "hwcdNeedsCleaning": hwcdNeedsCleaning,
       "hwcdNumberOfMediaSupported": hwcdNumberOfMediaSupported,
       "hwcdPNPDeviceID": hwcdPNPDeviceID,
       "hwcdPowerManagementCapabilities": hwcdPowerManagementCapabilities,
       "hwcdPowerManagementSupported": hwcdPowerManagementSupported,
       "hwcdRevisionLevel": hwcdRevisionLevel,
       "hwcdSCSIBus": hwcdSCSIBus,
       "hwcdSCSILogicalUnit": hwcdSCSILogicalUnit,
       "hwcdSCSIPort": hwcdSCSIPort,
       "hwcdSCSITargetId": hwcdSCSITargetId,
       "hwcdSize": hwcdSize,
       "hwcdStatus": hwcdStatus,
       "hwcdStatusInfo": hwcdStatusInfo,
       "hwcdSystemCreationClassName": hwcdSystemCreationClassName,
       "hwcdSystemName": hwcdSystemName,
       "hwcdTransferRate": hwcdTransferRate,
       "hwcdVolumeName": hwcdVolumeName,
       "hwcdVolumeSerialNumber": hwcdVolumeSerialNumber,
       "win32DiskDriveTable": win32DiskDriveTable,
       "win32DiskDriveEntry": win32DiskDriveEntry,
       "hwddIndex": hwddIndex,
       "hwddAvailability": hwddAvailability,
       "hwddBytesPerSector": hwddBytesPerSector,
       "hwddCapabilities": hwddCapabilities,
       "hwddCapabilityDescriptions": hwddCapabilityDescriptions,
       "hwddCaption": hwddCaption,
       "hwddCompressionMethod": hwddCompressionMethod,
       "hwddConfigManagerErrorCode": hwddConfigManagerErrorCode,
       "hwddConfigManagerUserConfig": hwddConfigManagerUserConfig,
       "hwddCreationClassName": hwddCreationClassName,
       "hwddDefaultBlockSize": hwddDefaultBlockSize,
       "hwddDescription": hwddDescription,
       "hwddDeviceID": hwddDeviceID,
       "hwddErrorCleared": hwddErrorCleared,
       "hwddErrorDescription": hwddErrorDescription,
       "hwddErrorMethodology": hwddErrorMethodology,
       "hwddPhysicalIndex": hwddPhysicalIndex,
       "hwddInstallDate": hwddInstallDate,
       "hwddInterfaceType": hwddInterfaceType,
       "hwddLastErrorCode": hwddLastErrorCode,
       "hwddManufacturer": hwddManufacturer,
       "hwddMaxBlockSize": hwddMaxBlockSize,
       "hwddMaxMediaSize": hwddMaxMediaSize,
       "hwddMediaLoaded": hwddMediaLoaded,
       "hwddMediaType": hwddMediaType,
       "hwddMinBlockSize": hwddMinBlockSize,
       "hwddModel": hwddModel,
       "hwddName": hwddName,
       "hwddNeedsCleaning": hwddNeedsCleaning,
       "hwddNumberOfMediaSupported": hwddNumberOfMediaSupported,
       "hwddPartitions": hwddPartitions,
       "hwddPNPDeviceID": hwddPNPDeviceID,
       "hwddPowerManagementCapabilities": hwddPowerManagementCapabilities,
       "hwddPowerManagementSupported": hwddPowerManagementSupported,
       "hwddSCSIBus": hwddSCSIBus,
       "hwddSCSILogicalUnit": hwddSCSILogicalUnit,
       "hwddSCSIPort": hwddSCSIPort,
       "hwddSCSITargetId": hwddSCSITargetId,
       "hwddSectorsPerTrack": hwddSectorsPerTrack,
       "hwddSignature": hwddSignature,
       "hwddSize": hwddSize,
       "hwddStatus": hwddStatus,
       "hwddStatusInfo": hwddStatusInfo,
       "hwddSystemCreationClassName": hwddSystemCreationClassName,
       "hwddSystemName": hwddSystemName,
       "hwddTotalCylinders": hwddTotalCylinders,
       "hwddTotalHeads": hwddTotalHeads,
       "hwddTotalSectors": hwddTotalSectors,
       "hwddTotalTracks": hwddTotalTracks,
       "hwddTracksPerCylinder": hwddTracksPerCylinder,
       "win32FloppyDriveTable": win32FloppyDriveTable,
       "win32FloppyDriveEntry": win32FloppyDriveEntry,
       "hwfdIndex": hwfdIndex,
       "hwfdAvailability": hwfdAvailability,
       "hwfdCapabilities": hwfdCapabilities,
       "hwfdCapabilityDescriptions": hwfdCapabilityDescriptions,
       "hwfdCaption": hwfdCaption,
       "hwfdCompressionMethod": hwfdCompressionMethod,
       "hwfdConfigManagerErrorCode": hwfdConfigManagerErrorCode,
       "hwfdConfigManagerUserConfig": hwfdConfigManagerUserConfig,
       "hwfdCreationClassName": hwfdCreationClassName,
       "hwfdDefaultBlockSize": hwfdDefaultBlockSize,
       "hwfdDescription": hwfdDescription,
       "hwfdDeviceID": hwfdDeviceID,
       "hwfdErrorCleared": hwfdErrorCleared,
       "hwfdErrorDescription": hwfdErrorDescription,
       "hwfdErrorMethodology": hwfdErrorMethodology,
       "hwfdInstallDate": hwfdInstallDate,
       "hwfdLastErrorCode": hwfdLastErrorCode,
       "hwfdManufacturer": hwfdManufacturer,
       "hwfdMaxBlockSize": hwfdMaxBlockSize,
       "hwfdMaxMediaSize": hwfdMaxMediaSize,
       "hwfdMinBlockSize": hwfdMinBlockSize,
       "hwfdName": hwfdName,
       "hwfdNeedsCleaning": hwfdNeedsCleaning,
       "hwfdNumberOfMediaSupported": hwfdNumberOfMediaSupported,
       "hwfdPNPDeviceID": hwfdPNPDeviceID,
       "hwfdPowerManagementCapabilities": hwfdPowerManagementCapabilities,
       "hwfdPowerManagementSupported": hwfdPowerManagementSupported,
       "hwfdStatus": hwfdStatus,
       "hwfdStatusInfo": hwfdStatusInfo,
       "hwfdSystemCreationClassName": hwfdSystemCreationClassName,
       "hwfdSystemName": hwfdSystemName,
       "win32PhysicalMediaTable": win32PhysicalMediaTable,
       "win32PhysicalMediaEntry": win32PhysicalMediaEntry,
       "hwpmdIndex": hwpmdIndex,
       "hwpmdCapacity": hwpmdCapacity,
       "hwpmdCaption": hwpmdCaption,
       "hwpmdCleanerMedia": hwpmdCleanerMedia,
       "hwpmdCreationClassName": hwpmdCreationClassName,
       "hwpmdDescription": hwpmdDescription,
       "hwpmdHotSwappable": hwpmdHotSwappable,
       "hwpmdInstallDate": hwpmdInstallDate,
       "hwpmdManufacturer": hwpmdManufacturer,
       "hwpmdMediaDescription": hwpmdMediaDescription,
       "hwpmdMediaType": hwpmdMediaType,
       "hwpmdModel": hwpmdModel,
       "hwpmdName": hwpmdName,
       "hwpmdOtherIdentifyingInfo": hwpmdOtherIdentifyingInfo,
       "hwpmdPartNumber": hwpmdPartNumber,
       "hwpmdPoweredOn": hwpmdPoweredOn,
       "hwpmdRemovable": hwpmdRemovable,
       "hwpmdReplaceable": hwpmdReplaceable,
       "hwpmdSerialNumber": hwpmdSerialNumber,
       "hwpmdSKU": hwpmdSKU,
       "hwpmdStatus": hwpmdStatus,
       "hwpmdTag": hwpmdTag,
       "hwpmdVersion": hwpmdVersion,
       "hwpmdWriteProtectOn": hwpmdWriteProtectOn,
       "win32TapeDriveTable": win32TapeDriveTable,
       "win32TapeDriveEntry": win32TapeDriveEntry,
       "hwtdIndex": hwtdIndex,
       "hwtdAvailability": hwtdAvailability,
       "hwtdCapabilities": hwtdCapabilities,
       "hwtdCapabilityDescriptions": hwtdCapabilityDescriptions,
       "hwtdCaption": hwtdCaption,
       "hwtdCompression": hwtdCompression,
       "hwtdCompressionMethod": hwtdCompressionMethod,
       "hwtdConfigManagerErrorCode": hwtdConfigManagerErrorCode,
       "hwtdConfigManagerUserConfig": hwtdConfigManagerUserConfig,
       "hwtdCreationClassName": hwtdCreationClassName,
       "hwtdDefaultBlockSize": hwtdDefaultBlockSize,
       "hwtdDescription": hwtdDescription,
       "hwtdDeviceID": hwtdDeviceID,
       "hwtdECC": hwtdECC,
       "hwtdEOTWarningZoneSize": hwtdEOTWarningZoneSize,
       "hwtdErrorCleared": hwtdErrorCleared,
       "hwtdErrorDescription": hwtdErrorDescription,
       "hwtdErrorMethodology": hwtdErrorMethodology,
       "hwtdFeaturesHigh": hwtdFeaturesHigh,
       "hwtdFeaturesLow": hwtdFeaturesLow,
       "hwtdId": hwtdId,
       "hwtdInstallDate": hwtdInstallDate,
       "hwtdLastErrorCode": hwtdLastErrorCode,
       "hwtdManufacturer": hwtdManufacturer,
       "hwtdMaxBlockSize": hwtdMaxBlockSize,
       "hwtdMaxMediaSize": hwtdMaxMediaSize,
       "hwtdMaxPartitionCount": hwtdMaxPartitionCount,
       "hwtdMediaType": hwtdMediaType,
       "hwtdMinBlockSize": hwtdMinBlockSize,
       "hwtdName": hwtdName,
       "hwtdNeedsCleaning": hwtdNeedsCleaning,
       "hwtdNumberOfMediaSupported": hwtdNumberOfMediaSupported,
       "hwtdPadding": hwtdPadding,
       "hwtdPNPDeviceID": hwtdPNPDeviceID,
       "hwtdPowerManagementCapabilities": hwtdPowerManagementCapabilities,
       "hwtdPowerManagementSupported": hwtdPowerManagementSupported,
       "hwtdReportSetMarks": hwtdReportSetMarks,
       "hwtdStatus": hwtdStatus,
       "hwtdStatusInfo": hwtdStatusInfo,
       "hwtdSystemCreationClassName": hwtdSystemCreationClassName,
       "hwtdSystemName": hwtdSystemName,
       "wmiMotherboardControllerPort": wmiMotherboardControllerPort,
       "win321394ControllerTable": win321394ControllerTable,
       "win321394ControllerEntry": win321394ControllerEntry,
       "hw1394Index": hw1394Index,
       "hw1394Availability": hw1394Availability,
       "hw1394Caption": hw1394Caption,
       "hw1394ConfigManagerErrorCode": hw1394ConfigManagerErrorCode,
       "hw1394ConfigManagerUserConfig": hw1394ConfigManagerUserConfig,
       "hw1394CreationClassName": hw1394CreationClassName,
       "hw1394Description": hw1394Description,
       "hw1394DeviceID": hw1394DeviceID,
       "hw1394ErrorCleared": hw1394ErrorCleared,
       "hw1394ErrorDescription": hw1394ErrorDescription,
       "hw1394InstallDate": hw1394InstallDate,
       "hw1394LastErrorCode": hw1394LastErrorCode,
       "hw1394Manufacturer": hw1394Manufacturer,
       "hw1394MaxNumberControlled": hw1394MaxNumberControlled,
       "hw1394Name": hw1394Name,
       "hw1394PNPDeviceID": hw1394PNPDeviceID,
       "hw1394PowerManagementCapability": hw1394PowerManagementCapability,
       "hw1394PowerManagementSupported": hw1394PowerManagementSupported,
       "hw1394ProtocolSupported": hw1394ProtocolSupported,
       "hw1394Status": hw1394Status,
       "hw1394StatusInfo": hw1394StatusInfo,
       "hw1394SystemCreationClassName": hw1394SystemCreationClassName,
       "hw1394SystemName": hw1394SystemName,
       "hw1394TimeOfLastReset": hw1394TimeOfLastReset,
       "win32BaseBoardTable": win32BaseBoardTable,
       "win32BaseBoardEntry": win32BaseBoardEntry,
       "hwbbIndex": hwbbIndex,
       "hwbbCaption": hwbbCaption,
       "hwbbConfigOptions": hwbbConfigOptions,
       "hwbbCreationClassName": hwbbCreationClassName,
       "hwbbDepth": hwbbDepth,
       "hwbbDescription": hwbbDescription,
       "hwbbHeight": hwbbHeight,
       "hwbbHostingBoard": hwbbHostingBoard,
       "hwbbHotSwappable": hwbbHotSwappable,
       "hwbbInstallDate": hwbbInstallDate,
       "hwbbManufacturer": hwbbManufacturer,
       "hwbbModel": hwbbModel,
       "hwbbName": hwbbName,
       "hwbbOtherIdentifyingInfo": hwbbOtherIdentifyingInfo,
       "hwbbPartNumber": hwbbPartNumber,
       "hwbbPoweredOn": hwbbPoweredOn,
       "hwbbProduct": hwbbProduct,
       "hwbbRemovable": hwbbRemovable,
       "hwbbReplaceable": hwbbReplaceable,
       "hwbbRequirementsDescription": hwbbRequirementsDescription,
       "hwbbRequiresDaughterBoard": hwbbRequiresDaughterBoard,
       "hwbbSerialNumber": hwbbSerialNumber,
       "hwbbSKU": hwbbSKU,
       "hwbbSlotLayout": hwbbSlotLayout,
       "hwbbSpecialRequirements": hwbbSpecialRequirements,
       "hwbbStatus": hwbbStatus,
       "hwbbTag": hwbbTag,
       "hwbbVersion": hwbbVersion,
       "hwbbWeight": hwbbWeight,
       "hwbbWidth": hwbbWidth,
       "win32BIOSTable": win32BIOSTable,
       "win32BIOSEntry": win32BIOSEntry,
       "hwbiIndex": hwbiIndex,
       "hwbiBiosCharacteristics": hwbiBiosCharacteristics,
       "hwbiBIOSVersion": hwbiBIOSVersion,
       "hwbiBuildNumber": hwbiBuildNumber,
       "hwbiCaption": hwbiCaption,
       "hwbiCodeSet": hwbiCodeSet,
       "hwbiCurrentLanguage": hwbiCurrentLanguage,
       "hwbiDescription": hwbiDescription,
       "hwbiIdentificationCode": hwbiIdentificationCode,
       "hwbiInstallableLanguages": hwbiInstallableLanguages,
       "hwbiInstallDate": hwbiInstallDate,
       "hwbiLanguageEdition": hwbiLanguageEdition,
       "hwbiListOfLanguages": hwbiListOfLanguages,
       "hwbiManufacturer": hwbiManufacturer,
       "hwbiName": hwbiName,
       "hwbiOtherTargetOS": hwbiOtherTargetOS,
       "hwbiPrimaryBIOS": hwbiPrimaryBIOS,
       "hwbiReleaseDate": hwbiReleaseDate,
       "hwbiSerialNumber": hwbiSerialNumber,
       "hwbiSMBIOSBIOSVersion": hwbiSMBIOSBIOSVersion,
       "hwbiSMBIOSMajorVersion": hwbiSMBIOSMajorVersion,
       "hwbiSMBIOSMinorVersion": hwbiSMBIOSMinorVersion,
       "hwbiSMBIOSPresent": hwbiSMBIOSPresent,
       "hwbiSoftwareElementID": hwbiSoftwareElementID,
       "hwbiSoftwareElementState": hwbiSoftwareElementState,
       "hwbiStatus": hwbiStatus,
       "hwbiTargetOperatingSystem": hwbiTargetOperatingSystem,
       "hwbiVersion": hwbiVersion,
       "win32BusTable": win32BusTable,
       "win32BusEntry": win32BusEntry,
       "hwbuIndex": hwbuIndex,
       "hwbuAvailability": hwbuAvailability,
       "hwbuBusNum": hwbuBusNum,
       "hwbuBusType": hwbuBusType,
       "hwbuCaption": hwbuCaption,
       "hwbuConfigManagerErrorCode": hwbuConfigManagerErrorCode,
       "hwbuConfigManagerUserConfig": hwbuConfigManagerUserConfig,
       "hwbuCreationClassName": hwbuCreationClassName,
       "hwbuDescription": hwbuDescription,
       "hwbuDeviceID": hwbuDeviceID,
       "hwbuErrorCleared": hwbuErrorCleared,
       "hwbuErrorDescription": hwbuErrorDescription,
       "hwbuInstallDate": hwbuInstallDate,
       "hwbuLastErrorCode": hwbuLastErrorCode,
       "hwbuName": hwbuName,
       "hwbuPNPDeviceID": hwbuPNPDeviceID,
       "hwbuPowerManagementCapabilities": hwbuPowerManagementCapabilities,
       "hwbuPowerManagementSupported": hwbuPowerManagementSupported,
       "hwbuStatus": hwbuStatus,
       "hwbuStatusInfo": hwbuStatusInfo,
       "hwbuSystemCreationClassName": hwbuSystemCreationClassName,
       "hwbuSystemName": hwbuSystemName,
       "win32CacheMemoryTable": win32CacheMemoryTable,
       "win32CacheMemoryEntry": win32CacheMemoryEntry,
       "hwcmIndex": hwcmIndex,
       "hwcmAccess": hwcmAccess,
       "hwcmAdditionalErrorData": hwcmAdditionalErrorData,
       "hwcmAssociativity": hwcmAssociativity,
       "hwcmAvailability": hwcmAvailability,
       "hwcmBlockSize": hwcmBlockSize,
       "hwcmCacheSpeed": hwcmCacheSpeed,
       "hwcmCacheType": hwcmCacheType,
       "hwcmCaption": hwcmCaption,
       "hwcmConfigManagerErrorCode": hwcmConfigManagerErrorCode,
       "hwcmConfigManagerUserConfig": hwcmConfigManagerUserConfig,
       "hwcmCorrectableError": hwcmCorrectableError,
       "hwcmCreationClassName": hwcmCreationClassName,
       "hwcmCurrentSRAM": hwcmCurrentSRAM,
       "hwcmDescription": hwcmDescription,
       "hwcmDeviceID": hwcmDeviceID,
       "hwcmEndingAddress": hwcmEndingAddress,
       "hwcmErrorAccess": hwcmErrorAccess,
       "hwcmErrorAddress": hwcmErrorAddress,
       "hwcmErrorCleared": hwcmErrorCleared,
       "hwcmErrorCorrectType": hwcmErrorCorrectType,
       "hwcmErrorData": hwcmErrorData,
       "hwcmErrorDataOrder": hwcmErrorDataOrder,
       "hwcmErrorDescription": hwcmErrorDescription,
       "hwcmErrorInfo": hwcmErrorInfo,
       "hwcmErrorMethodology": hwcmErrorMethodology,
       "hwcmErrorResolution": hwcmErrorResolution,
       "hwcmErrorTime": hwcmErrorTime,
       "hwcmErrorTransferSize": hwcmErrorTransferSize,
       "hwcmFlushTimer": hwcmFlushTimer,
       "hwcmInstallDate": hwcmInstallDate,
       "hwcmInstalledSize": hwcmInstalledSize,
       "hwcmLastErrorCode": hwcmLastErrorCode,
       "hwcmLevel": hwcmLevel,
       "hwcmLineSize": hwcmLineSize,
       "hwcmLocation": hwcmLocation,
       "hwcmMaxCacheSize": hwcmMaxCacheSize,
       "hwcmName": hwcmName,
       "hwcmNumberOfBlocks": hwcmNumberOfBlocks,
       "hwcmOtherErrorDescription": hwcmOtherErrorDescription,
       "hwcmPNPDeviceID": hwcmPNPDeviceID,
       "hwcmPowerManagementCapabilities": hwcmPowerManagementCapabilities,
       "hwcmPowerManagementSupported": hwcmPowerManagementSupported,
       "hwcmPurpose": hwcmPurpose,
       "hwcmReadPolicy": hwcmReadPolicy,
       "hwcmReplacementPolicy": hwcmReplacementPolicy,
       "hwcmStartingAddress": hwcmStartingAddress,
       "hwcmStatus": hwcmStatus,
       "hwcmStatusInfo": hwcmStatusInfo,
       "hwcmSupportedSRAM": hwcmSupportedSRAM,
       "hwcmSystemCreationClassName": hwcmSystemCreationClassName,
       "hwcmSystemLevelAddress": hwcmSystemLevelAddress,
       "hwcmSystemName": hwcmSystemName,
       "hwcmWritePolicy": hwcmWritePolicy,
       "win32DeviceMemoryAddressTable": win32DeviceMemoryAddressTable,
       "win32DeviceMemoryAddressEntry": win32DeviceMemoryAddressEntry,
       "hwdaIndex": hwdaIndex,
       "hwdaCaption": hwdaCaption,
       "hwdaCreationClassName": hwdaCreationClassName,
       "hwdaCSCreationClassName": hwdaCSCreationClassName,
       "hwdaCSName": hwdaCSName,
       "hwdaDescription": hwdaDescription,
       "hwdaEndingAddress": hwdaEndingAddress,
       "hwdaInstallDate": hwdaInstallDate,
       "hwdaMemoryType": hwdaMemoryType,
       "hwdaName": hwdaName,
       "hwdaStartingAddress": hwdaStartingAddress,
       "hwdaStatus": hwdaStatus,
       "win32DMAChannelTable": win32DMAChannelTable,
       "win32DMAChannelEntry": win32DMAChannelEntry,
       "hwdmaIndex": hwdmaIndex,
       "hwdmaAddressSize": hwdmaAddressSize,
       "hwdmaAvailability": hwdmaAvailability,
       "hwdmaBurstMode": hwdmaBurstMode,
       "hwdmaByteMode": hwdmaByteMode,
       "hwdmaCaption": hwdmaCaption,
       "hwdmaChannelTiming": hwdmaChannelTiming,
       "hwdmaCreationClassName": hwdmaCreationClassName,
       "hwdmaCSCreationClassName": hwdmaCSCreationClassName,
       "hwdmaCSName": hwdmaCSName,
       "hwdmaDescription": hwdmaDescription,
       "hwdmaDMAChannel": hwdmaDMAChannel,
       "hwdmaInstallDate": hwdmaInstallDate,
       "hwdmaMaxTransferSize": hwdmaMaxTransferSize,
       "hwdmaName": hwdmaName,
       "hwdmaPort": hwdmaPort,
       "hwdmaStatus": hwdmaStatus,
       "hwdmaTransferWidths": hwdmaTransferWidths,
       "hwdmaTypeCTiming": hwdmaTypeCTiming,
       "hwdmaWordMode": hwdmaWordMode,
       "win32FloppyControllerTable": win32FloppyControllerTable,
       "win32FloppyControllerEntry": win32FloppyControllerEntry,
       "hwfcIndex": hwfcIndex,
       "hwfcAvailability": hwfcAvailability,
       "hwfcCaption": hwfcCaption,
       "hwfcConfigManagerErrorCode": hwfcConfigManagerErrorCode,
       "hwfcConfigManagerUserConfig": hwfcConfigManagerUserConfig,
       "hwfcCreationClassName": hwfcCreationClassName,
       "hwfcDescription": hwfcDescription,
       "hwfcDeviceID": hwfcDeviceID,
       "hwfcErrorCleared": hwfcErrorCleared,
       "hwfcErrorDescription": hwfcErrorDescription,
       "hwfcInstallDate": hwfcInstallDate,
       "hwfcLastErrorCode": hwfcLastErrorCode,
       "hwfcManufacturer": hwfcManufacturer,
       "hwfcMaxNumberControlled": hwfcMaxNumberControlled,
       "hwfcName": hwfcName,
       "hwfcPNPDeviceID": hwfcPNPDeviceID,
       "hwfcPowerManagementCapabilities": hwfcPowerManagementCapabilities,
       "hwfcPowerManagementSupported": hwfcPowerManagementSupported,
       "hwfcProtocolSupported": hwfcProtocolSupported,
       "hwfcStatus": hwfcStatus,
       "hwfcStatusInfo": hwfcStatusInfo,
       "hwfcSystemCreationClassName": hwfcSystemCreationClassName,
       "hwfcSystemName": hwfcSystemName,
       "hwfcTimeOfLastReset": hwfcTimeOfLastReset,
       "win32IDEControllerTable": win32IDEControllerTable,
       "win32IDEControllerEntry": win32IDEControllerEntry,
       "hwideIndex": hwideIndex,
       "hwideAvailability": hwideAvailability,
       "hwideCaption": hwideCaption,
       "hwideConfigManagerErrorCode": hwideConfigManagerErrorCode,
       "hwideConfigManagerUserConfig": hwideConfigManagerUserConfig,
       "hwideCreationClassName": hwideCreationClassName,
       "hwideDescription": hwideDescription,
       "hwideDeviceID": hwideDeviceID,
       "hwideErrorCleared": hwideErrorCleared,
       "hwideErrorDescription": hwideErrorDescription,
       "hwideInstallDate": hwideInstallDate,
       "hwideLastErrorCode": hwideLastErrorCode,
       "hwideManufacturer": hwideManufacturer,
       "hwideMaxNumberControlled": hwideMaxNumberControlled,
       "hwideName": hwideName,
       "hwidePNPDeviceID": hwidePNPDeviceID,
       "hwidePowerManagementCapabilities": hwidePowerManagementCapabilities,
       "hwidePowerManagementSupported": hwidePowerManagementSupported,
       "hwideProtocolSupported": hwideProtocolSupported,
       "hwideStatus": hwideStatus,
       "hwideStatusInfo": hwideStatusInfo,
       "hwideSystemCreationClassName": hwideSystemCreationClassName,
       "hwideSystemName": hwideSystemName,
       "hwideTimeOfLastReset": hwideTimeOfLastReset,
       "win32InfraredDeviceTable": win32InfraredDeviceTable,
       "win32InfraredDeviceEntry": win32InfraredDeviceEntry,
       "hwidIndex": hwidIndex,
       "hwidAvailability": hwidAvailability,
       "hwidCaption": hwidCaption,
       "hwidConfigManagerErrorCode": hwidConfigManagerErrorCode,
       "hwidConfigManagerUserConfig": hwidConfigManagerUserConfig,
       "hwidCreationClassName": hwidCreationClassName,
       "hwidDescription": hwidDescription,
       "hwidDeviceID": hwidDeviceID,
       "hwidErrorCleared": hwidErrorCleared,
       "hwidErrorDescription": hwidErrorDescription,
       "hwidInstallDate": hwidInstallDate,
       "hwidLastErrorCode": hwidLastErrorCode,
       "hwidManufacturer": hwidManufacturer,
       "hwidMaxNumberControlled": hwidMaxNumberControlled,
       "hwidName": hwidName,
       "hwidPNPDeviceID": hwidPNPDeviceID,
       "hwidPowerManagementCapabilities": hwidPowerManagementCapabilities,
       "hwidPowerManagementSupported": hwidPowerManagementSupported,
       "hwidProtocolSupported": hwidProtocolSupported,
       "hwidStatus": hwidStatus,
       "hwidStatusInfo": hwidStatusInfo,
       "hwidSystemCreationClassName": hwidSystemCreationClassName,
       "hwidSystemName": hwidSystemName,
       "hwidTimeOfLastReset": hwidTimeOfLastReset,
       "win32IRQResourceTable": win32IRQResourceTable,
       "win32IRQResourceEntry": win32IRQResourceEntry,
       "hwirqIndex": hwirqIndex,
       "hwirqAvailability": hwirqAvailability,
       "hwirqCaption": hwirqCaption,
       "hwirqCreationClassName": hwirqCreationClassName,
       "hwirqCSCreationClassName": hwirqCSCreationClassName,
       "hwirqCSName": hwirqCSName,
       "hwirqDescription": hwirqDescription,
       "hwirqHardware": hwirqHardware,
       "hwirqInstallDate": hwirqInstallDate,
       "hwirqIRQNumber": hwirqIRQNumber,
       "hwirqName": hwirqName,
       "hwirqShareable": hwirqShareable,
       "hwirqStatus": hwirqStatus,
       "hwirqTriggerLevel": hwirqTriggerLevel,
       "hwirqTriggerType": hwirqTriggerType,
       "hwirqVector": hwirqVector,
       "win32MemoryArrayTable": win32MemoryArrayTable,
       "win32MemoryArrayEntry": win32MemoryArrayEntry,
       "hwmaIndex": hwmaIndex,
       "hwmaAccess": hwmaAccess,
       "hwmaAdditionalErrorData": hwmaAdditionalErrorData,
       "hwmaAvailability": hwmaAvailability,
       "hwmaBlockSize": hwmaBlockSize,
       "hwmaCaption": hwmaCaption,
       "hwmaConfigManagerErrorCode": hwmaConfigManagerErrorCode,
       "hwmaConfigManagerUserConfig": hwmaConfigManagerUserConfig,
       "hwmaCorrectableError": hwmaCorrectableError,
       "hwmaCreationClassName": hwmaCreationClassName,
       "hwmaDescription": hwmaDescription,
       "hwmaDeviceID": hwmaDeviceID,
       "hwmaEndingAddress": hwmaEndingAddress,
       "hwmaErrorAccess": hwmaErrorAccess,
       "hwmaErrorAddress": hwmaErrorAddress,
       "hwmaErrorCleared": hwmaErrorCleared,
       "hwmaErrorData": hwmaErrorData,
       "hwmaErrorDataOrder": hwmaErrorDataOrder,
       "hwmaErrorDescription": hwmaErrorDescription,
       "hwmaErrorGranularity": hwmaErrorGranularity,
       "hwmaErrorInfo": hwmaErrorInfo,
       "hwmaErrorMethodology": hwmaErrorMethodology,
       "hwmaErrorResolution": hwmaErrorResolution,
       "hwmaErrorTime": hwmaErrorTime,
       "hwmaErrorTransferSize": hwmaErrorTransferSize,
       "hwmaInstallDate": hwmaInstallDate,
       "hwmaLastErrorCode": hwmaLastErrorCode,
       "hwmaName": hwmaName,
       "hwmaNumberOfBlocks": hwmaNumberOfBlocks,
       "hwmaOtherErrorDescription": hwmaOtherErrorDescription,
       "hwmaPNPDeviceID": hwmaPNPDeviceID,
       "hwmaPowerManagementCapabilities": hwmaPowerManagementCapabilities,
       "hwmaPowerManagementSupported": hwmaPowerManagementSupported,
       "hwmaPurpose": hwmaPurpose,
       "hwmaStartingAddress": hwmaStartingAddress,
       "hwmaStatus": hwmaStatus,
       "hwmaStatusInfo": hwmaStatusInfo,
       "hwmaSystemCreationClassName": hwmaSystemCreationClassName,
       "hwmaSystemLevelAddress": hwmaSystemLevelAddress,
       "hwmaSystemName": hwmaSystemName,
       "win32MemoryDeviceTable": win32MemoryDeviceTable,
       "win32MemoryDeviceEntry": win32MemoryDeviceEntry,
       "hwmmIndex": hwmmIndex,
       "hwmmAccess": hwmmAccess,
       "hwmmAdditionalErrorData": hwmmAdditionalErrorData,
       "hwmmAvailability": hwmmAvailability,
       "hwmmBlockSize": hwmmBlockSize,
       "hwmmCaption": hwmmCaption,
       "hwmmConfigManagerErrorCode": hwmmConfigManagerErrorCode,
       "hwmmConfigManagerUserConfig": hwmmConfigManagerUserConfig,
       "hwmmCorrectableError": hwmmCorrectableError,
       "hwmmCreationClassName": hwmmCreationClassName,
       "hwmmDescription": hwmmDescription,
       "hwmmDeviceID": hwmmDeviceID,
       "hwmmEndingAddress": hwmmEndingAddress,
       "hwmmErrorAccess": hwmmErrorAccess,
       "hwmmErrorAddress": hwmmErrorAddress,
       "hwmmErrorCleared": hwmmErrorCleared,
       "hwmmErrorData": hwmmErrorData,
       "hwmmErrorDataOrder": hwmmErrorDataOrder,
       "hwmmErrorDescription": hwmmErrorDescription,
       "hwmmErrorGranularity": hwmmErrorGranularity,
       "hwmmErrorInfo": hwmmErrorInfo,
       "hwmmErrorMethodology": hwmmErrorMethodology,
       "hwmmErrorResolution": hwmmErrorResolution,
       "hwmmErrorTime": hwmmErrorTime,
       "hwmmErrorTransferSize": hwmmErrorTransferSize,
       "hwmmInstallDate": hwmmInstallDate,
       "hwmmLastErrorCode": hwmmLastErrorCode,
       "hwmmName": hwmmName,
       "hwmmNumberOfBlocks": hwmmNumberOfBlocks,
       "hwmmOtherErrorDescription": hwmmOtherErrorDescription,
       "hwmmPNPDeviceID": hwmmPNPDeviceID,
       "hwmmPowerManagementCapabilities": hwmmPowerManagementCapabilities,
       "hwmmPowerManagementSupported": hwmmPowerManagementSupported,
       "hwmmPurpose": hwmmPurpose,
       "hwmmStartingAddress": hwmmStartingAddress,
       "hwmmStatus": hwmmStatus,
       "hwmmStatusInfo": hwmmStatusInfo,
       "hwmmSystemCreationClassName": hwmmSystemCreationClassName,
       "hwmmSystemLevelAddress": hwmmSystemLevelAddress,
       "hwmmSystemName": hwmmSystemName,
       "win32MotherboardDeviceTable": win32MotherboardDeviceTable,
       "win32MotherboardDeviceEntry": win32MotherboardDeviceEntry,
       "hwmbIndex": hwmbIndex,
       "hwmbAvailability": hwmbAvailability,
       "hwmbCaption": hwmbCaption,
       "hwmbConfigManagerErrorCode": hwmbConfigManagerErrorCode,
       "hwmbConfigManagerUserConfig": hwmbConfigManagerUserConfig,
       "hwmbCreationClassName": hwmbCreationClassName,
       "hwmbDescription": hwmbDescription,
       "hwmbDeviceID": hwmbDeviceID,
       "hwmbErrorCleared": hwmbErrorCleared,
       "hwmbErrorDescription": hwmbErrorDescription,
       "hwmbInstallDate": hwmbInstallDate,
       "hwmbLastErrorCode": hwmbLastErrorCode,
       "hwmbName": hwmbName,
       "hwmbPNPDeviceID": hwmbPNPDeviceID,
       "hwmbPowerManagementCapabilities": hwmbPowerManagementCapabilities,
       "hwmbPowerManagementSupported": hwmbPowerManagementSupported,
       "hwmbPrimaryBusType": hwmbPrimaryBusType,
       "hwmbRevisionNumber": hwmbRevisionNumber,
       "hwmbSecondaryBusType": hwmbSecondaryBusType,
       "hwmbStatus": hwmbStatus,
       "hwmbStatusInfo": hwmbStatusInfo,
       "hwmbSystemCreationClassName": hwmbSystemCreationClassName,
       "hwmbSystemName": hwmbSystemName,
       "win32OnBoardDeviceTable": win32OnBoardDeviceTable,
       "win32OnBoardDeviceEntry": win32OnBoardDeviceEntry,
       "hwobIndex": hwobIndex,
       "hwobCaption": hwobCaption,
       "hwobCreationClassName": hwobCreationClassName,
       "hwobDescription": hwobDescription,
       "hwobDeviceType": hwobDeviceType,
       "hwobEnabled": hwobEnabled,
       "hwobHotSwappable": hwobHotSwappable,
       "hwobInstallDate": hwobInstallDate,
       "hwobManufacturer": hwobManufacturer,
       "hwobModel": hwobModel,
       "hwobName": hwobName,
       "hwobOtherIdentifyingInfo": hwobOtherIdentifyingInfo,
       "hwobPartNumber": hwobPartNumber,
       "hwobPoweredOn": hwobPoweredOn,
       "hwobRemovable": hwobRemovable,
       "hwobReplaceable": hwobReplaceable,
       "hwobSerialNumber": hwobSerialNumber,
       "hwobSKU": hwobSKU,
       "hwobStatus": hwobStatus,
       "hwobTag": hwobTag,
       "hwobVersion": hwobVersion,
       "win32ParallelPortTable": win32ParallelPortTable,
       "win32ParallelPortEntry": win32ParallelPortEntry,
       "hwppIndex": hwppIndex,
       "hwppAvailability": hwppAvailability,
       "hwppCapabilities": hwppCapabilities,
       "hwppCapabilityDescriptions": hwppCapabilityDescriptions,
       "hwppCaption": hwppCaption,
       "hwppConfigManagerErrorCode": hwppConfigManagerErrorCode,
       "hwppConfigManagerUserConfig": hwppConfigManagerUserConfig,
       "hwppCreationClassName": hwppCreationClassName,
       "hwppDescription": hwppDescription,
       "hwppDeviceID": hwppDeviceID,
       "hwppDMASupport": hwppDMASupport,
       "hwppErrorCleared": hwppErrorCleared,
       "hwppErrorDescription": hwppErrorDescription,
       "hwppInstallDate": hwppInstallDate,
       "hwppLastErrorCode": hwppLastErrorCode,
       "hwppMaxNumberControlled": hwppMaxNumberControlled,
       "hwppName": hwppName,
       "hwppOSAutoDiscovered": hwppOSAutoDiscovered,
       "hwppPNPDeviceID": hwppPNPDeviceID,
       "hwppPowerManagementCapabilities": hwppPowerManagementCapabilities,
       "hwppPowerManagementSupported": hwppPowerManagementSupported,
       "hwppProtocolSupported": hwppProtocolSupported,
       "hwppStatus": hwppStatus,
       "hwppStatusInfo": hwppStatusInfo,
       "hwppSystemCreationClassName": hwppSystemCreationClassName,
       "hwppSystemName": hwppSystemName,
       "hwppTimeOfLastReset": hwppTimeOfLastReset,
       "win32PCMCIAControllerTable": win32PCMCIAControllerTable,
       "win32PCMCIAControllerEntry": win32PCMCIAControllerEntry,
       "hwpcmIndex": hwpcmIndex,
       "hwpcmAvailability": hwpcmAvailability,
       "hwpcmCaption": hwpcmCaption,
       "hwpcmConfigManagerErrorCode": hwpcmConfigManagerErrorCode,
       "hwpcmConfigManagerUserConfig": hwpcmConfigManagerUserConfig,
       "hwpcmCreationClassName": hwpcmCreationClassName,
       "hwpcmDescription": hwpcmDescription,
       "hwpcmDeviceID": hwpcmDeviceID,
       "hwpcmErrorCleared": hwpcmErrorCleared,
       "hwpcmErrorDescription": hwpcmErrorDescription,
       "hwpcmInstallDate": hwpcmInstallDate,
       "hwpcmLastErrorCode": hwpcmLastErrorCode,
       "hwpcmManufacturer": hwpcmManufacturer,
       "hwpcmMaxNumberControlled": hwpcmMaxNumberControlled,
       "hwpcmName": hwpcmName,
       "hwpcmPNPDeviceID": hwpcmPNPDeviceID,
       "hwpcmPowerManagementCapabilities": hwpcmPowerManagementCapabilities,
       "hwpcmPowerManagementSupported": hwpcmPowerManagementSupported,
       "hwpcmProtocolSupported": hwpcmProtocolSupported,
       "hwpcmStatus": hwpcmStatus,
       "hwpcmStatusInfo": hwpcmStatusInfo,
       "hwpcmSystemCreationClassName": hwpcmSystemCreationClassName,
       "hwpcmSystemName": hwpcmSystemName,
       "hwpcmTimeOfLastReset": hwpcmTimeOfLastReset,
       "win32PhysicalMemoryTable": win32PhysicalMemoryTable,
       "win32PhysicalMemoryEntry": win32PhysicalMemoryEntry,
       "hwpmmIndex": hwpmmIndex,
       "hwpmmBankLabel": hwpmmBankLabel,
       "hwpmmCapacity": hwpmmCapacity,
       "hwpmmCaption": hwpmmCaption,
       "hwpmmCreationClassName": hwpmmCreationClassName,
       "hwpmmDataWidth": hwpmmDataWidth,
       "hwpmmDescription": hwpmmDescription,
       "hwpmmDeviceLocator": hwpmmDeviceLocator,
       "hwpmmFormFactor": hwpmmFormFactor,
       "hwpmmHotSwappable": hwpmmHotSwappable,
       "hwpmmInstallDate": hwpmmInstallDate,
       "hwpmmInterleaveDataDepth": hwpmmInterleaveDataDepth,
       "hwpmmInterleavePosition": hwpmmInterleavePosition,
       "hwpmmManufacturer": hwpmmManufacturer,
       "hwpmmMemoryType": hwpmmMemoryType,
       "hwpmmModel": hwpmmModel,
       "hwpmmName": hwpmmName,
       "hwpmmOtherIdentifyingInfo": hwpmmOtherIdentifyingInfo,
       "hwpmmPartNumber": hwpmmPartNumber,
       "hwpmmPositionInRow": hwpmmPositionInRow,
       "hwpmmPoweredOn": hwpmmPoweredOn,
       "hwpmmRemovable": hwpmmRemovable,
       "hwpmmReplaceable": hwpmmReplaceable,
       "hwpmmSerialNumber": hwpmmSerialNumber,
       "hwpmmSKU": hwpmmSKU,
       "hwpmmSpeed": hwpmmSpeed,
       "hwpmmStatus": hwpmmStatus,
       "hwpmmTag": hwpmmTag,
       "hwpmmTotalWidth": hwpmmTotalWidth,
       "hwpmmTypeDetail": hwpmmTypeDetail,
       "hwpmmVersion": hwpmmVersion,
       "win32PhysicalMemoryArrayTable": win32PhysicalMemoryArrayTable,
       "win32PhysicalMemoryArrayEntry": win32PhysicalMemoryArrayEntry,
       "hwpmaIndex": hwpmaIndex,
       "hwpmaCaption": hwpmaCaption,
       "hwpmaCreationClassName": hwpmaCreationClassName,
       "hwpmaDepth": hwpmaDepth,
       "hwpmaDescription": hwpmaDescription,
       "hwpmaHeight": hwpmaHeight,
       "hwpmaHotSwappable": hwpmaHotSwappable,
       "hwpmaInstallDate": hwpmaInstallDate,
       "hwpmaLocation": hwpmaLocation,
       "hwpmaManufacturer": hwpmaManufacturer,
       "hwpmaMaxCapacity": hwpmaMaxCapacity,
       "hwpmaMemoryDevices": hwpmaMemoryDevices,
       "hwpmaMemoryErrorCorrection": hwpmaMemoryErrorCorrection,
       "hwpmaModel": hwpmaModel,
       "hwpmaName": hwpmaName,
       "hwpmaOtherIdentifyingInfo": hwpmaOtherIdentifyingInfo,
       "hwpmaPartNumber": hwpmaPartNumber,
       "hwpmaPoweredOn": hwpmaPoweredOn,
       "hwpmaRemovable": hwpmaRemovable,
       "hwpmaReplaceable": hwpmaReplaceable,
       "hwpmaSerialNumber": hwpmaSerialNumber,
       "hwpmaSKU": hwpmaSKU,
       "hwpmaStatus": hwpmaStatus,
       "hwpmaTag": hwpmaTag,
       "hwpmaUse": hwpmaUse,
       "hwpmaVersion": hwpmaVersion,
       "hwpmaWeight": hwpmaWeight,
       "hwpmaWidth": hwpmaWidth,
       "win32PnPEntityTable": win32PnPEntityTable,
       "win32PnPEntityEntry": win32PnPEntityEntry,
       "hwpnpIndex": hwpnpIndex,
       "hwpnpAvailability": hwpnpAvailability,
       "hwpnpCaption": hwpnpCaption,
       "hwpnpClassGuid": hwpnpClassGuid,
       "hwpnpConfigManagerErrorCode": hwpnpConfigManagerErrorCode,
       "hwpnpConfigManagerUserConfig": hwpnpConfigManagerUserConfig,
       "hwpnpCreationClassName": hwpnpCreationClassName,
       "hwpnpDescription": hwpnpDescription,
       "hwpnpDeviceID": hwpnpDeviceID,
       "hwpnpErrorCleared": hwpnpErrorCleared,
       "hwpnpErrorDescription": hwpnpErrorDescription,
       "hwpnpInstallDate": hwpnpInstallDate,
       "hwpnpLastErrorCode": hwpnpLastErrorCode,
       "hwpnpManufacturer": hwpnpManufacturer,
       "hwpnpName": hwpnpName,
       "hwpnpPNPDeviceID": hwpnpPNPDeviceID,
       "hwpnpPowerManagementCapabilities": hwpnpPowerManagementCapabilities,
       "hwpnpPowerManagementSupported": hwpnpPowerManagementSupported,
       "hwpnpService": hwpnpService,
       "hwpnpStatus": hwpnpStatus,
       "hwpnpStatusInfo": hwpnpStatusInfo,
       "hwpnpSystemCreationClassName": hwpnpSystemCreationClassName,
       "hwpnpSystemName": hwpnpSystemName,
       "win32PnPSignedDriverTable": win32PnPSignedDriverTable,
       "win32PnPSignedDriverEntry": win32PnPSignedDriverEntry,
       "hwpsdIndex": hwpsdIndex,
       "hwpsdClassGuid": hwpsdClassGuid,
       "hwpsdCompatID": hwpsdCompatID,
       "hwpsdDescription": hwpsdDescription,
       "hwpsdDeviceClass": hwpsdDeviceClass,
       "hwpsdDeviceID": hwpsdDeviceID,
       "hwpsdDeviceName": hwpsdDeviceName,
       "hwpsdDevLoader": hwpsdDevLoader,
       "hwpsdDriverDate": hwpsdDriverDate,
       "hwpsdDriverName": hwpsdDriverName,
       "hwpsdDriverVersion": hwpsdDriverVersion,
       "hwpsdFriendlyName": hwpsdFriendlyName,
       "hwpsdHardWareID": hwpsdHardWareID,
       "hwpsdInfName": hwpsdInfName,
       "hwpsdInstallDate": hwpsdInstallDate,
       "hwpsdIsSigned": hwpsdIsSigned,
       "hwpsdLocation": hwpsdLocation,
       "hwpsdManufacturer": hwpsdManufacturer,
       "hwpsdName": hwpsdName,
       "hwpsdPDO": hwpsdPDO,
       "hwpsdProviderName": hwpsdProviderName,
       "hwpsdSigner": hwpsdSigner,
       "hwpsdStarted": hwpsdStarted,
       "hwpsdStartMode": hwpsdStartMode,
       "hwpsdStatus": hwpsdStatus,
       "hwpsdSystemCreationClassName": hwpsdSystemCreationClassName,
       "hwpsdSystemName": hwpsdSystemName,
       "win32PortConnectorTable": win32PortConnectorTable,
       "win32PortConnectorEntry": win32PortConnectorEntry,
       "hwpcIndex": hwpcIndex,
       "hwpcCaption": hwpcCaption,
       "hwpcConnectorPinout": hwpcConnectorPinout,
       "hwpcConnectorType": hwpcConnectorType,
       "hwpcCreationClassName": hwpcCreationClassName,
       "hwpcDescription": hwpcDescription,
       "hwpcExternalReferenceDesignator": hwpcExternalReferenceDesignator,
       "hwpcInstallDate": hwpcInstallDate,
       "hwpcInternalReferenceDesignator": hwpcInternalReferenceDesignator,
       "hwpcManufacturer": hwpcManufacturer,
       "hwpcModel": hwpcModel,
       "hwpcName": hwpcName,
       "hwpcOtherIdentifyingInfo": hwpcOtherIdentifyingInfo,
       "hwpcPartNumber": hwpcPartNumber,
       "hwpcPortType": hwpcPortType,
       "hwpcPoweredOn": hwpcPoweredOn,
       "hwpcSerialNumber": hwpcSerialNumber,
       "hwpcSKU": hwpcSKU,
       "hwpcStatus": hwpcStatus,
       "hwpcTag": hwpcTag,
       "hwpcVersion": hwpcVersion,
       "win32PortResourceTable": win32PortResourceTable,
       "win32PortResourceEntry": win32PortResourceEntry,
       "hwpreIndex": hwpreIndex,
       "hwpreAlias": hwpreAlias,
       "hwpreCaption": hwpreCaption,
       "hwpreCreationClassName": hwpreCreationClassName,
       "hwpreCSCreationClassName": hwpreCSCreationClassName,
       "hwpreCSName": hwpreCSName,
       "hwpreDescription": hwpreDescription,
       "hwpreEndingAddress": hwpreEndingAddress,
       "hwpreInstallDate": hwpreInstallDate,
       "hwpreName": hwpreName,
       "hwpreStartingAddress": hwpreStartingAddress,
       "hwpreStatus": hwpreStatus,
       "win32ProcessorTable": win32ProcessorTable,
       "win32ProcessorEntry": win32ProcessorEntry,
       "hwcpuIndex": hwcpuIndex,
       "hwcpuAddressWidth": hwcpuAddressWidth,
       "hwcpuArchitecture": hwcpuArchitecture,
       "hwcpuAvailability": hwcpuAvailability,
       "hwcpuCaption": hwcpuCaption,
       "hwcpuConfigManagerErrorCode": hwcpuConfigManagerErrorCode,
       "hwcpuConfigManagerUserConfig": hwcpuConfigManagerUserConfig,
       "hwcpuCpuStatus": hwcpuCpuStatus,
       "hwcpuCreationClassName": hwcpuCreationClassName,
       "hwcpuCurrentClockSpeed": hwcpuCurrentClockSpeed,
       "hwcpuCurrentVoltage": hwcpuCurrentVoltage,
       "hwcpuDataWidth": hwcpuDataWidth,
       "hwcpuDescription": hwcpuDescription,
       "hwcpuDeviceID": hwcpuDeviceID,
       "hwcpuErrorCleared": hwcpuErrorCleared,
       "hwcpuErrorDescription": hwcpuErrorDescription,
       "hwcpuExtClock": hwcpuExtClock,
       "hwcpuFamily": hwcpuFamily,
       "hwcpuInstallDate": hwcpuInstallDate,
       "hwcpuL2CacheSize": hwcpuL2CacheSize,
       "hwcpuL2CacheSpeed": hwcpuL2CacheSpeed,
       "hwcpuLastErrorCode": hwcpuLastErrorCode,
       "hwcpuLevel": hwcpuLevel,
       "hwcpuLoadPercentage": hwcpuLoadPercentage,
       "hwcpuManufacturer": hwcpuManufacturer,
       "hwcpuMaxClockSpeed": hwcpuMaxClockSpeed,
       "hwcpuName": hwcpuName,
       "hwcpuOtherFamilyDescription": hwcpuOtherFamilyDescription,
       "hwcpuPNPDeviceID": hwcpuPNPDeviceID,
       "hwcpuPowerManagementCapabilities": hwcpuPowerManagementCapabilities,
       "hwcpuPowerManagementSupported": hwcpuPowerManagementSupported,
       "hwcpuProcessorId": hwcpuProcessorId,
       "hwcpuProcessorType": hwcpuProcessorType,
       "hwcpuRevision": hwcpuRevision,
       "hwcpuRole": hwcpuRole,
       "hwcpuSocketDesignation": hwcpuSocketDesignation,
       "hwcpuStatus": hwcpuStatus,
       "hwcpuStatusInfo": hwcpuStatusInfo,
       "hwcpuStepping": hwcpuStepping,
       "hwcpuSystemCreationClassName": hwcpuSystemCreationClassName,
       "hwcpuSystemName": hwcpuSystemName,
       "hwcpuUniqueId": hwcpuUniqueId,
       "hwcpuUpgradeMethod": hwcpuUpgradeMethod,
       "hwcpuVersion": hwcpuVersion,
       "hwcpuVoltageCaps": hwcpuVoltageCaps,
       "hwcpuL3CacheSize": hwcpuL3CacheSize,
       "hwcpuL3CacheSpeed": hwcpuL3CacheSpeed,
       "hwcpuNumberOfCores": hwcpuNumberOfCores,
       "hwcpuNumberOfLogicalProcessors": hwcpuNumberOfLogicalProcessors,
       "win32SCSIControllerTable": win32SCSIControllerTable,
       "win32SCSIControllerEntry": win32SCSIControllerEntry,
       "hwscsiIndex": hwscsiIndex,
       "hwscsiAvailability": hwscsiAvailability,
       "hwscsiCaption": hwscsiCaption,
       "hwscsiConfigManagerErrorCode": hwscsiConfigManagerErrorCode,
       "hwscsiConfigManagerUserConfig": hwscsiConfigManagerUserConfig,
       "hwscsiControllerTimeouts": hwscsiControllerTimeouts,
       "hwscsiCreationClassName": hwscsiCreationClassName,
       "hwscsiDescription": hwscsiDescription,
       "hwscsiDeviceID": hwscsiDeviceID,
       "hwscsiDeviceMap": hwscsiDeviceMap,
       "hwscsiDriverName": hwscsiDriverName,
       "hwscsiErrorCleared": hwscsiErrorCleared,
       "hwscsiErrorDescription": hwscsiErrorDescription,
       "hwscsiHardwareVersion": hwscsiHardwareVersion,
       "hwscsiRegistryIndex": hwscsiRegistryIndex,
       "hwscsiInstallDate": hwscsiInstallDate,
       "hwscsiLastErrorCode": hwscsiLastErrorCode,
       "hwscsiManufacturer": hwscsiManufacturer,
       "hwscsiMaxDataWidth": hwscsiMaxDataWidth,
       "hwscsiMaxNumberControlled": hwscsiMaxNumberControlled,
       "hwscsiMaxTransferRate": hwscsiMaxTransferRate,
       "hwscsiName": hwscsiName,
       "hwscsiPNPDeviceID": hwscsiPNPDeviceID,
       "hwscsiPowerManagementCapability": hwscsiPowerManagementCapability,
       "hwscsiPowerManagementSupported": hwscsiPowerManagementSupported,
       "hwscsiProtectionManagement": hwscsiProtectionManagement,
       "hwscsiProtocolSupported": hwscsiProtocolSupported,
       "hwscsiStatus": hwscsiStatus,
       "hwscsiStatusInfo": hwscsiStatusInfo,
       "hwscsiSystemCreationClassName": hwscsiSystemCreationClassName,
       "hwscsiSystemName": hwscsiSystemName,
       "hwscsiTimeOfLastReset": hwscsiTimeOfLastReset,
       "win32SerialPortTable": win32SerialPortTable,
       "win32SerialPortEntry": win32SerialPortEntry,
       "hwspIndex": hwspIndex,
       "hwspAvailability": hwspAvailability,
       "hwspBinary": hwspBinary,
       "hwspCapabilities": hwspCapabilities,
       "hwspCapabilityDescriptions": hwspCapabilityDescriptions,
       "hwspCaption": hwspCaption,
       "hwspConfigManagerErrorCode": hwspConfigManagerErrorCode,
       "hwspConfigManagerUserConfig": hwspConfigManagerUserConfig,
       "hwspCreationClassName": hwspCreationClassName,
       "hwspDescription": hwspDescription,
       "hwspDeviceID": hwspDeviceID,
       "hwspErrorCleared": hwspErrorCleared,
       "hwspErrorDescription": hwspErrorDescription,
       "hwspInstallDate": hwspInstallDate,
       "hwspLastErrorCode": hwspLastErrorCode,
       "hwspMaxBaudRate": hwspMaxBaudRate,
       "hwspMaximumInputBufferSize": hwspMaximumInputBufferSize,
       "hwspMaximumOutputBufferSize": hwspMaximumOutputBufferSize,
       "hwspMaxNumberControlled": hwspMaxNumberControlled,
       "hwspName": hwspName,
       "hwspOSAutoDiscovered": hwspOSAutoDiscovered,
       "hwspPNPDeviceID": hwspPNPDeviceID,
       "hwspPowerManagementCapabilities": hwspPowerManagementCapabilities,
       "hwspPowerManagementSupported": hwspPowerManagementSupported,
       "hwspProtocolSupported": hwspProtocolSupported,
       "hwspProviderType": hwspProviderType,
       "hwspSettableBaudRate": hwspSettableBaudRate,
       "hwspSettableDataBits": hwspSettableDataBits,
       "hwspSettableFlowControl": hwspSettableFlowControl,
       "hwspSettableParity": hwspSettableParity,
       "hwspSettableParityCheck": hwspSettableParityCheck,
       "hwspSettableRLSD": hwspSettableRLSD,
       "hwspSettableStopBits": hwspSettableStopBits,
       "hwspStatus": hwspStatus,
       "hwspStatusInfo": hwspStatusInfo,
       "hwspSupports16BitMode": hwspSupports16BitMode,
       "hwspSupportsDTRDSR": hwspSupportsDTRDSR,
       "hwspSupportsElapsedTimeouts": hwspSupportsElapsedTimeouts,
       "hwspSupportsIntTimeouts": hwspSupportsIntTimeouts,
       "hwspSupportsParityCheck": hwspSupportsParityCheck,
       "hwspSupportsRLSD": hwspSupportsRLSD,
       "hwspSupportsRTSCTS": hwspSupportsRTSCTS,
       "hwspSupportsSpecialCharacters": hwspSupportsSpecialCharacters,
       "hwspSupportsXOnXOff": hwspSupportsXOnXOff,
       "hwspSupportsXOnXOffSet": hwspSupportsXOnXOffSet,
       "hwspSystemCreationClassName": hwspSystemCreationClassName,
       "hwspSystemName": hwspSystemName,
       "hwspTimeOfLastReset": hwspTimeOfLastReset,
       "win32SerialPortConfigTable": win32SerialPortConfigTable,
       "win32SerialPortConfigEntry": win32SerialPortConfigEntry,
       "hwspcIndex": hwspcIndex,
       "hwspcAbortReadWriteOnError": hwspcAbortReadWriteOnError,
       "hwspcBaudRate": hwspcBaudRate,
       "hwspcBinaryModeEnabled": hwspcBinaryModeEnabled,
       "hwspcBitsPerByte": hwspcBitsPerByte,
       "hwspcCaption": hwspcCaption,
       "hwspcContinueXMitOnXOff": hwspcContinueXMitOnXOff,
       "hwspcCTSOutflowControl": hwspcCTSOutflowControl,
       "hwspcDescription": hwspcDescription,
       "hwspcDiscardNULLBytes": hwspcDiscardNULLBytes,
       "hwspcDSROutflowControl": hwspcDSROutflowControl,
       "hwspcDSRSensitivity": hwspcDSRSensitivity,
       "hwspcDTRFlowControlType": hwspcDTRFlowControlType,
       "hwspcEOFCharacter": hwspcEOFCharacter,
       "hwspcErrorReplaceCharacter": hwspcErrorReplaceCharacter,
       "hwspcErrorReplacementEnabled": hwspcErrorReplacementEnabled,
       "hwspcEventCharacter": hwspcEventCharacter,
       "hwspcIsBusy": hwspcIsBusy,
       "hwspcName": hwspcName,
       "hwspcParity": hwspcParity,
       "hwspcParityCheckEnabled": hwspcParityCheckEnabled,
       "hwspcRTSFlowControlType": hwspcRTSFlowControlType,
       "hwspcSettingID": hwspcSettingID,
       "hwspcStopBits": hwspcStopBits,
       "hwspcXOffCharacter": hwspcXOffCharacter,
       "hwspcXOffXMitThreshold": hwspcXOffXMitThreshold,
       "hwspcXOnCharacter": hwspcXOnCharacter,
       "hwspcXOnXMitThreshold": hwspcXOnXMitThreshold,
       "hwspcXOnXOffInFlowControl": hwspcXOnXOffInFlowControl,
       "hwspcXOnXOffOutFlowControl": hwspcXOnXOffOutFlowControl,
       "win32SMBIOSMemoryTable": win32SMBIOSMemoryTable,
       "win32SMBIOSMemoryEntry": win32SMBIOSMemoryEntry,
       "hwsbmIndex": hwsbmIndex,
       "hwsbmAccess": hwsbmAccess,
       "hwsbmAdditionalErrorData": hwsbmAdditionalErrorData,
       "hwsbmAvailability": hwsbmAvailability,
       "hwsbmBlockSize": hwsbmBlockSize,
       "hwsbmCaption": hwsbmCaption,
       "hwsbmConfigManagerErrorCode": hwsbmConfigManagerErrorCode,
       "hwsbmConfigManagerUserConfig": hwsbmConfigManagerUserConfig,
       "hwsbmCorrectableError": hwsbmCorrectableError,
       "hwsbmCreationClassName": hwsbmCreationClassName,
       "hwsbmDescription": hwsbmDescription,
       "hwsbmDeviceID": hwsbmDeviceID,
       "hwsbmEndingAddress": hwsbmEndingAddress,
       "hwsbmErrorAccess": hwsbmErrorAccess,
       "hwsbmErrorAddress": hwsbmErrorAddress,
       "hwsbmErrorCleared": hwsbmErrorCleared,
       "hwsbmErrorData": hwsbmErrorData,
       "hwsbmErrorDataOrder": hwsbmErrorDataOrder,
       "hwsbmErrorDescription": hwsbmErrorDescription,
       "hwsbmErrorInfo": hwsbmErrorInfo,
       "hwsbmErrorMethodology": hwsbmErrorMethodology,
       "hwsbmErrorResolution": hwsbmErrorResolution,
       "hwsbmErrorTime": hwsbmErrorTime,
       "hwsbmErrorTransferSize": hwsbmErrorTransferSize,
       "hwsbmInstallDate": hwsbmInstallDate,
       "hwsbmLastErrorCode": hwsbmLastErrorCode,
       "hwsbmName": hwsbmName,
       "hwsbmNumberOfBlocks": hwsbmNumberOfBlocks,
       "hwsbmOtherErrorDescription": hwsbmOtherErrorDescription,
       "hwsbmPNPDeviceID": hwsbmPNPDeviceID,
       "hwsbmPowerManagementCapabilities": hwsbmPowerManagementCapabilities,
       "hwsbmPowerManagementSupported": hwsbmPowerManagementSupported,
       "hwsbmPurpose": hwsbmPurpose,
       "hwsbmStartingAddress": hwsbmStartingAddress,
       "hwsbmStatus": hwsbmStatus,
       "hwsbmStatusInfo": hwsbmStatusInfo,
       "hwsbmSystemCreationClassName": hwsbmSystemCreationClassName,
       "hwsbmSystemLevelAddress": hwsbmSystemLevelAddress,
       "hwsbmSystemName": hwsbmSystemName,
       "win32SoundDeviceTable": win32SoundDeviceTable,
       "win32SoundDeviceEntry": win32SoundDeviceEntry,
       "hwsndIndex": hwsndIndex,
       "hwsndAvailability": hwsndAvailability,
       "hwsndCaption": hwsndCaption,
       "hwsndConfigManagerErrorCode": hwsndConfigManagerErrorCode,
       "hwsndConfigManagerUserConfig": hwsndConfigManagerUserConfig,
       "hwsndCreationClassName": hwsndCreationClassName,
       "hwsndDescription": hwsndDescription,
       "hwsndDeviceID": hwsndDeviceID,
       "hwsndDMABufferSize": hwsndDMABufferSize,
       "hwsndErrorCleared": hwsndErrorCleared,
       "hwsndErrorDescription": hwsndErrorDescription,
       "hwsndInstallDate": hwsndInstallDate,
       "hwsndLastErrorCode": hwsndLastErrorCode,
       "hwsndManufacturer": hwsndManufacturer,
       "hwsndMPU401Address": hwsndMPU401Address,
       "hwsndName": hwsndName,
       "hwsndPNPDeviceID": hwsndPNPDeviceID,
       "hwsndPowerManagementCapabilities": hwsndPowerManagementCapabilities,
       "hwsndPowerManagementSupported": hwsndPowerManagementSupported,
       "hwsndProductName": hwsndProductName,
       "hwsndStatus": hwsndStatus,
       "hwsndStatusInfo": hwsndStatusInfo,
       "hwsndSystemCreationClassName": hwsndSystemCreationClassName,
       "hwsndSystemName": hwsndSystemName,
       "win32SystemEnclosureTable": win32SystemEnclosureTable,
       "win32SystemEnclosureEntry": win32SystemEnclosureEntry,
       "hwseIndex": hwseIndex,
       "hwseAudibleAlarm": hwseAudibleAlarm,
       "hwseBreachDescription": hwseBreachDescription,
       "hwseCableManagementStrategy": hwseCableManagementStrategy,
       "hwseCaption": hwseCaption,
       "hwseChassisTypes": hwseChassisTypes,
       "hwseCreationClassName": hwseCreationClassName,
       "hwseCurrentRequiredOrProduced": hwseCurrentRequiredOrProduced,
       "hwseDepth": hwseDepth,
       "hwseDescription": hwseDescription,
       "hwseHeatGeneration": hwseHeatGeneration,
       "hwseHeight": hwseHeight,
       "hwseHotSwappable": hwseHotSwappable,
       "hwseInstallDate": hwseInstallDate,
       "hwseLockPresent": hwseLockPresent,
       "hwseManufacturer": hwseManufacturer,
       "hwseModel": hwseModel,
       "hwseName": hwseName,
       "hwseNumberOfPowerCords": hwseNumberOfPowerCords,
       "hwseOtherIdentifyingInfo": hwseOtherIdentifyingInfo,
       "hwsePartNumber": hwsePartNumber,
       "hwsePoweredOn": hwsePoweredOn,
       "hwseRemovable": hwseRemovable,
       "hwseReplaceable": hwseReplaceable,
       "hwseSecurityBreach": hwseSecurityBreach,
       "hwseSecurityStatus": hwseSecurityStatus,
       "hwseSerialNumber": hwseSerialNumber,
       "hwseServiceDescriptions": hwseServiceDescriptions,
       "hwseServicePhilosophy": hwseServicePhilosophy,
       "hwseSKU": hwseSKU,
       "hwseSMBIOSAssetTag": hwseSMBIOSAssetTag,
       "hwseStatus": hwseStatus,
       "hwseTag": hwseTag,
       "hwseTypeDescriptions": hwseTypeDescriptions,
       "hwseVersion": hwseVersion,
       "hwseVisibleAlarm": hwseVisibleAlarm,
       "hwseWeight": hwseWeight,
       "hwseWidth": hwseWidth,
       "win32SystemMemoryResourceTable": win32SystemMemoryResourceTable,
       "win32SystemMemoryResourceEntry": win32SystemMemoryResourceEntry,
       "hwsmrIndex": hwsmrIndex,
       "hwsmrCaption": hwsmrCaption,
       "hwsmrCreationClassName": hwsmrCreationClassName,
       "hwsmrCSCreationClassName": hwsmrCSCreationClassName,
       "hwsmrCSName": hwsmrCSName,
       "hwsmrDescription": hwsmrDescription,
       "hwsmrEndingAddress": hwsmrEndingAddress,
       "hwsmrInstallDate": hwsmrInstallDate,
       "hwsmrName": hwsmrName,
       "hwsmrStartingAddress": hwsmrStartingAddress,
       "hwsmrStatus": hwsmrStatus,
       "win32SystemSlotTable": win32SystemSlotTable,
       "win32SystemSlotEntry": win32SystemSlotEntry,
       "hwssIndex": hwssIndex,
       "hwssCaption": hwssCaption,
       "hwssConnectorPinout": hwssConnectorPinout,
       "hwssConnectorType": hwssConnectorType,
       "hwssCreationClassName": hwssCreationClassName,
       "hwssCurrentUsage": hwssCurrentUsage,
       "hwssDescription": hwssDescription,
       "hwssHeightAllowed": hwssHeightAllowed,
       "hwssInstallDate": hwssInstallDate,
       "hwssLengthAllowed": hwssLengthAllowed,
       "hwssManufacturer": hwssManufacturer,
       "hwssMaxDataWidth": hwssMaxDataWidth,
       "hwssModel": hwssModel,
       "hwssName": hwssName,
       "hwssNumber": hwssNumber,
       "hwssOtherIdentifyingInfo": hwssOtherIdentifyingInfo,
       "hwssPartNumber": hwssPartNumber,
       "hwssPMESignal": hwssPMESignal,
       "hwssPoweredOn": hwssPoweredOn,
       "hwssPurposeDescription": hwssPurposeDescription,
       "hwssSerialNumber": hwssSerialNumber,
       "hwssShared": hwssShared,
       "hwssSKU": hwssSKU,
       "hwssSlotDesignation": hwssSlotDesignation,
       "hwssSpecialPurpose": hwssSpecialPurpose,
       "hwssStatus": hwssStatus,
       "hwssSupportsHotPlug": hwssSupportsHotPlug,
       "hwssTag": hwssTag,
       "hwssThermalRating": hwssThermalRating,
       "hwssVccMixedVoltageSupport": hwssVccMixedVoltageSupport,
       "hwssVersion": hwssVersion,
       "hwssVppMixedVoltageSupport": hwssVppMixedVoltageSupport,
       "win32USBControllerTable": win32USBControllerTable,
       "win32USBControllerEntry": win32USBControllerEntry,
       "hwucIndex": hwucIndex,
       "hwucAvailability": hwucAvailability,
       "hwucCaption": hwucCaption,
       "hwucConfigManagerErrorCode": hwucConfigManagerErrorCode,
       "hwucConfigManagerUserConfig": hwucConfigManagerUserConfig,
       "hwucCreationClassName": hwucCreationClassName,
       "hwucDescription": hwucDescription,
       "hwucDeviceID": hwucDeviceID,
       "hwucErrorCleared": hwucErrorCleared,
       "hwucErrorDescription": hwucErrorDescription,
       "hwucInstallDate": hwucInstallDate,
       "hwucLastErrorCode": hwucLastErrorCode,
       "hwucManufacturer": hwucManufacturer,
       "hwucMaxNumberControlled": hwucMaxNumberControlled,
       "hwucName": hwucName,
       "hwucPNPDeviceID": hwucPNPDeviceID,
       "hwucPowerManagementCapabilities": hwucPowerManagementCapabilities,
       "hwucPowerManagementSupported": hwucPowerManagementSupported,
       "hwucProtocolSupported": hwucProtocolSupported,
       "hwucStatus": hwucStatus,
       "hwucStatusInfo": hwucStatusInfo,
       "hwucSystemCreationClassName": hwucSystemCreationClassName,
       "hwucSystemName": hwucSystemName,
       "hwucTimeOfLastReset": hwucTimeOfLastReset,
       "win32USBHubTable": win32USBHubTable,
       "win32USBHubEntry": win32USBHubEntry,
       "hwuhIndex": hwuhIndex,
       "hwuhAvailability": hwuhAvailability,
       "hwuhCaption": hwuhCaption,
       "hwuhClassCode": hwuhClassCode,
       "hwuhConfigManagerErrorCode": hwuhConfigManagerErrorCode,
       "hwuhConfigManagerUserCode": hwuhConfigManagerUserCode,
       "hwuhCreationClassName": hwuhCreationClassName,
       "hwuhCurrentAlternativeSettings": hwuhCurrentAlternativeSettings,
       "hwuhCurrentConfigValue": hwuhCurrentConfigValue,
       "hwuhDescription": hwuhDescription,
       "hwuhDeviceID": hwuhDeviceID,
       "hwuhErrorCleared": hwuhErrorCleared,
       "hwuhErrorDescription": hwuhErrorDescription,
       "hwuhGangSwitched": hwuhGangSwitched,
       "hwuhInstallDate": hwuhInstallDate,
       "hwuhLastErrorCode": hwuhLastErrorCode,
       "hwuhName": hwuhName,
       "hwuhNumberOfConfigs": hwuhNumberOfConfigs,
       "hwuhNumberOfPorts": hwuhNumberOfPorts,
       "hwuhPNPDeviceID": hwuhPNPDeviceID,
       "hwuhPowerManagementCapabilities": hwuhPowerManagementCapabilities,
       "hwuhPowerManagementSupported": hwuhPowerManagementSupported,
       "hwuhProtocolCode": hwuhProtocolCode,
       "hwuhStatus": hwuhStatus,
       "hwuhStatusInfo": hwuhStatusInfo,
       "hwuhSubclassCode": hwuhSubclassCode,
       "hwuhSystemCreationClassName": hwuhSystemCreationClassName,
       "hwuhSystemName": hwuhSystemName,
       "hwuhUSBVersion": hwuhUSBVersion,
       "wmiNetworkingDevice": wmiNetworkingDevice,
       "win32NetworkAdapterTable": win32NetworkAdapterTable,
       "win32NetworkAdapterEntry": win32NetworkAdapterEntry,
       "hwnaIndex": hwnaIndex,
       "hwnaAdapterType": hwnaAdapterType,
       "hwnaAdapterTypeID": hwnaAdapterTypeID,
       "hwnaAutoSense": hwnaAutoSense,
       "hwnaAvailability": hwnaAvailability,
       "hwnaCaption": hwnaCaption,
       "hwnaConfigManagerErrorCode": hwnaConfigManagerErrorCode,
       "hwnaConfigManagerUserConfig": hwnaConfigManagerUserConfig,
       "hwnaCreationClassName": hwnaCreationClassName,
       "hwnaDescription": hwnaDescription,
       "hwnaDeviceID": hwnaDeviceID,
       "hwnaErrorCleared": hwnaErrorCleared,
       "hwnaErrorDescription": hwnaErrorDescription,
       "hwnaRegistryIndex": hwnaRegistryIndex,
       "hwnaInstallDate": hwnaInstallDate,
       "hwnaInstalled": hwnaInstalled,
       "hwnaInterfaceIndex": hwnaInterfaceIndex,
       "hwnaLastErrorCode": hwnaLastErrorCode,
       "hwnaMACAddress": hwnaMACAddress,
       "hwnaManufacturer": hwnaManufacturer,
       "hwnaMaxNumberControlled": hwnaMaxNumberControlled,
       "hwnaMaxSpeed": hwnaMaxSpeed,
       "hwnaName": hwnaName,
       "hwnaNetConnectionID": hwnaNetConnectionID,
       "hwnaNetConnectionStatus": hwnaNetConnectionStatus,
       "hwnaNetworkAddresses": hwnaNetworkAddresses,
       "hwnaPermanentAddress": hwnaPermanentAddress,
       "hwnaPNPDeviceID": hwnaPNPDeviceID,
       "hwnaPowerManagementCapabilities": hwnaPowerManagementCapabilities,
       "hwnaPowerManagementSupported": hwnaPowerManagementSupported,
       "hwnaProductName": hwnaProductName,
       "hwnaServiceName": hwnaServiceName,
       "hwnaSpeed": hwnaSpeed,
       "hwnaStatus": hwnaStatus,
       "hwnaStatusInfo": hwnaStatusInfo,
       "hwnaSystemCreationClassName": hwnaSystemCreationClassName,
       "hwnaSystemName": hwnaSystemName,
       "hwnaTimeOfLastReset": hwnaTimeOfLastReset,
       "win32NetworkAdapterConfigTable": win32NetworkAdapterConfigTable,
       "win32NetworkAdapterConfigEntry": win32NetworkAdapterConfigEntry,
       "hwnacIndex": hwnacIndex,
       "hwnacArpAlwaysSourceRoute": hwnacArpAlwaysSourceRoute,
       "hwnacArpUseEtherSNAP": hwnacArpUseEtherSNAP,
       "hwnacCaption": hwnacCaption,
       "hwnacDatabasePath": hwnacDatabasePath,
       "hwnacDeadGWDetectEnabled": hwnacDeadGWDetectEnabled,
       "hwnacDefaultIPGateway": hwnacDefaultIPGateway,
       "hwnacDefaultTOS": hwnacDefaultTOS,
       "hwnacDefaultTTL": hwnacDefaultTTL,
       "hwnacDescription": hwnacDescription,
       "hwnacDHCPEnabled": hwnacDHCPEnabled,
       "hwnacDHCPLeaseExpires": hwnacDHCPLeaseExpires,
       "hwnacDHCPLeaseObtained": hwnacDHCPLeaseObtained,
       "hwnacDHCPServer": hwnacDHCPServer,
       "hwnacDNSDomain": hwnacDNSDomain,
       "hwnacDNSDomainSuffixSearchOrder": hwnacDNSDomainSuffixSearchOrder,
       "hwnacDNSEnabledForWINSResolution": hwnacDNSEnabledForWINSResolution,
       "hwnacDNSHostName": hwnacDNSHostName,
       "hwnacDNSServerSearchOrder": hwnacDNSServerSearchOrder,
       "hwnacDomainDNSRegistrationEnable": hwnacDomainDNSRegistrationEnable,
       "hwnacForwardBufferMemory": hwnacForwardBufferMemory,
       "hwnacFullDNSRegistrationEnabled": hwnacFullDNSRegistrationEnabled,
       "hwnacGatewayCostMetric": hwnacGatewayCostMetric,
       "hwnacIGMPLevel": hwnacIGMPLevel,
       "hwnacConfigurationIndex": hwnacConfigurationIndex,
       "hwnacInterfaceIndex": hwnacInterfaceIndex,
       "hwnacIPAddress": hwnacIPAddress,
       "hwnacIPConnectionMetric": hwnacIPConnectionMetric,
       "hwnacIPEnabled": hwnacIPEnabled,
       "hwnacIPFilterSecurityEnabled": hwnacIPFilterSecurityEnabled,
       "hwnacIPPortSecurityEnabled": hwnacIPPortSecurityEnabled,
       "hwnacIPSecPermitIPProtocols": hwnacIPSecPermitIPProtocols,
       "hwnacIPSecPermitTCPPorts": hwnacIPSecPermitTCPPorts,
       "hwnacIPSecPermitUDPPorts": hwnacIPSecPermitUDPPorts,
       "hwnacIPSubnet": hwnacIPSubnet,
       "hwnacIPUseZeroBroadcast": hwnacIPUseZeroBroadcast,
       "hwnacIPXAddress": hwnacIPXAddress,
       "hwnacIPXEnabled": hwnacIPXEnabled,
       "hwnacIPXFrameType": hwnacIPXFrameType,
       "hwnacIPXMediaType": hwnacIPXMediaType,
       "hwnacIPXNetworkNumber": hwnacIPXNetworkNumber,
       "hwnacIPXVirtualNetNumber": hwnacIPXVirtualNetNumber,
       "hwnacKeepAliveInterval": hwnacKeepAliveInterval,
       "hwnacKeepAliveTime": hwnacKeepAliveTime,
       "hwnacMACAddress": hwnacMACAddress,
       "hwnacMTU": hwnacMTU,
       "hwnacNumForwardPackets": hwnacNumForwardPackets,
       "hwnacPMTUBHDetectEnabled": hwnacPMTUBHDetectEnabled,
       "hwnacPMTUDiscoveryEnabled": hwnacPMTUDiscoveryEnabled,
       "hwnacServiceName": hwnacServiceName,
       "hwnacSettingID": hwnacSettingID,
       "hwnacTcpipNetbiosOptions": hwnacTcpipNetbiosOptions,
       "hwnacTcpMaxConnectRetransmission": hwnacTcpMaxConnectRetransmission,
       "hwnacTcpMaxDataRetransmissions": hwnacTcpMaxDataRetransmissions,
       "hwnacTcpNumConnections": hwnacTcpNumConnections,
       "hwnacTcpUseRFC1122UrgentPointer": hwnacTcpUseRFC1122UrgentPointer,
       "hwnacTcpWindowSize": hwnacTcpWindowSize,
       "hwnacWINSEnableLMHostsLookup": hwnacWINSEnableLMHostsLookup,
       "hwnacWINSHostLookupFile": hwnacWINSHostLookupFile,
       "hwnacWINSPrimaryServer": hwnacWINSPrimaryServer,
       "hwnacWINSScopeID": hwnacWINSScopeID,
       "hwnacWINSSecondaryServer": hwnacWINSSecondaryServer,
       "wmiPower": wmiPower,
       "win32BatteryTable": win32BatteryTable,
       "win32BatteryEntry": win32BatteryEntry,
       "hwbaIndex": hwbaIndex,
       "hwbaAvailability": hwbaAvailability,
       "hwbaBatteryRechargeTime": hwbaBatteryRechargeTime,
       "hwbaBatteryStatus": hwbaBatteryStatus,
       "hwbaCaption": hwbaCaption,
       "hwbaChemistry": hwbaChemistry,
       "hwbaConfigManagerErrorCode": hwbaConfigManagerErrorCode,
       "hwbaConfigManagerUserConfig": hwbaConfigManagerUserConfig,
       "hwbaCreationClassName": hwbaCreationClassName,
       "hwbaDescription": hwbaDescription,
       "hwbaDesignCapacity": hwbaDesignCapacity,
       "hwbaDesignVoltage": hwbaDesignVoltage,
       "hwbaDeviceID": hwbaDeviceID,
       "hwbaErrorCleared": hwbaErrorCleared,
       "hwbaErrorDescription": hwbaErrorDescription,
       "hwbaEstimatedChargeRemaining": hwbaEstimatedChargeRemaining,
       "hwbaEstimatedRunTime": hwbaEstimatedRunTime,
       "hwbaExpectedBatteryLife": hwbaExpectedBatteryLife,
       "hwbaExpectedLife": hwbaExpectedLife,
       "hwbaFullChargeCapacity": hwbaFullChargeCapacity,
       "hwbaInstallDate": hwbaInstallDate,
       "hwbaLastErrorCode": hwbaLastErrorCode,
       "hwbaMaxRechargeTime": hwbaMaxRechargeTime,
       "hwbaName": hwbaName,
       "hwbaPNPDeviceID": hwbaPNPDeviceID,
       "hwbaPowerManagementCapabilities": hwbaPowerManagementCapabilities,
       "hwbaPowerManagementSupported": hwbaPowerManagementSupported,
       "hwbaSmartBatteryVersion": hwbaSmartBatteryVersion,
       "hwbaStatus": hwbaStatus,
       "hwbaStatusInfo": hwbaStatusInfo,
       "hwbaSystemCreationClassName": hwbaSystemCreationClassName,
       "hwbaSystemName": hwbaSystemName,
       "hwbaTimeOnBattery": hwbaTimeOnBattery,
       "hwbaTimeToFullCharge": hwbaTimeToFullCharge,
       "win32CurrentProbeTable": win32CurrentProbeTable,
       "win32CurrentProbeEntry": win32CurrentProbeEntry,
       "hwcpIndex": hwcpIndex,
       "hwcpAccuracy": hwcpAccuracy,
       "hwcpAvailability": hwcpAvailability,
       "hwcpCaption": hwcpCaption,
       "hwcpConfigManagerErrorCode": hwcpConfigManagerErrorCode,
       "hwcpConfigManagerUserConfig": hwcpConfigManagerUserConfig,
       "hwcpCreationClassName": hwcpCreationClassName,
       "hwcpCurrentReading": hwcpCurrentReading,
       "hwcpDescription": hwcpDescription,
       "hwcpDeviceID": hwcpDeviceID,
       "hwcpErrorCleared": hwcpErrorCleared,
       "hwcpErrorDescription": hwcpErrorDescription,
       "hwcpInstallDate": hwcpInstallDate,
       "hwcpIsLinear": hwcpIsLinear,
       "hwcpLastErrorCode": hwcpLastErrorCode,
       "hwcpLowerThresholdCritical": hwcpLowerThresholdCritical,
       "hwcpLowerThresholdFatal": hwcpLowerThresholdFatal,
       "hwcpLowerThresholdNonCritical": hwcpLowerThresholdNonCritical,
       "hwcpMaxReadable": hwcpMaxReadable,
       "hwcpMinReadable": hwcpMinReadable,
       "hwcpName": hwcpName,
       "hwcpNominalReading": hwcpNominalReading,
       "hwcpNormalMax": hwcpNormalMax,
       "hwcpNormalMin": hwcpNormalMin,
       "hwcpPNPDeviceID": hwcpPNPDeviceID,
       "hwcpPowerManagementCapabilities": hwcpPowerManagementCapabilities,
       "hwcpPowerManagementSupported": hwcpPowerManagementSupported,
       "hwcpResolution": hwcpResolution,
       "hwcpStatus": hwcpStatus,
       "hwcpStatusInfo": hwcpStatusInfo,
       "hwcpSystemCreationClassName": hwcpSystemCreationClassName,
       "hwcpSystemName": hwcpSystemName,
       "hwcpTolerance": hwcpTolerance,
       "hwcpUpperThresholdCritical": hwcpUpperThresholdCritical,
       "hwcpUpperThresholdFatal": hwcpUpperThresholdFatal,
       "hwcpUpperThresholdNonCritical": hwcpUpperThresholdNonCritical,
       "win32PortableBatteryTable": win32PortableBatteryTable,
       "win32PortableBatteryEntry": win32PortableBatteryEntry,
       "hwpbIndex": hwpbIndex,
       "hwpbAvailability": hwpbAvailability,
       "hwpbBatteryRechargeTime": hwpbBatteryRechargeTime,
       "hwpbBatteryStatus": hwpbBatteryStatus,
       "hwpbCapacityMultiplier": hwpbCapacityMultiplier,
       "hwpbCaption": hwpbCaption,
       "hwpbChemistry": hwpbChemistry,
       "hwpbConfigManagerErrorCode": hwpbConfigManagerErrorCode,
       "hwpbConfigManagerUserConfig": hwpbConfigManagerUserConfig,
       "hwpbCreationClassName": hwpbCreationClassName,
       "hwpbDescription": hwpbDescription,
       "hwpbDesignCapacity": hwpbDesignCapacity,
       "hwpbDesignVoltage": hwpbDesignVoltage,
       "hwpbDeviceID": hwpbDeviceID,
       "hwpbErrorCleared": hwpbErrorCleared,
       "hwpbErrorDescription": hwpbErrorDescription,
       "hwpbEstimatedChargeRemaining": hwpbEstimatedChargeRemaining,
       "hwpbEstimatedRunTime": hwpbEstimatedRunTime,
       "hwpbExpectedBatteryLife": hwpbExpectedBatteryLife,
       "hwpbExpectedLife": hwpbExpectedLife,
       "hwpbFullChargeCapacity": hwpbFullChargeCapacity,
       "hwpbInstallDate": hwpbInstallDate,
       "hwpbLastErrorCode": hwpbLastErrorCode,
       "hwpbLocation": hwpbLocation,
       "hwpbManufactureDate": hwpbManufactureDate,
       "hwpbManufacturer": hwpbManufacturer,
       "hwpbMaxBatteryError": hwpbMaxBatteryError,
       "hwpbMaxRechargeTime": hwpbMaxRechargeTime,
       "hwpbName": hwpbName,
       "hwpbPNPDeviceID": hwpbPNPDeviceID,
       "hwpbPowerManagementCapabilities": hwpbPowerManagementCapabilities,
       "hwpbPowerManagementSupported": hwpbPowerManagementSupported,
       "hwpbSmartBatteryVersion": hwpbSmartBatteryVersion,
       "hwpbStatus": hwpbStatus,
       "hwpbStatusInfo": hwpbStatusInfo,
       "hwpbSystemCreationClassName": hwpbSystemCreationClassName,
       "hwpbSystemName": hwpbSystemName,
       "hwpbTimeOnBattery": hwpbTimeOnBattery,
       "hwpbTimeToFullCharge": hwpbTimeToFullCharge,
       "win32UninterruptPowerSupplyTable": win32UninterruptPowerSupplyTable,
       "win32UninterruptPowerSupplyEntry": win32UninterruptPowerSupplyEntry,
       "hwupsIndex": hwupsIndex,
       "hwupsActiveInputVoltage": hwupsActiveInputVoltage,
       "hwupsAvailability": hwupsAvailability,
       "hwupsBatteryInstalled": hwupsBatteryInstalled,
       "hwupsCanTurnOffRemotely": hwupsCanTurnOffRemotely,
       "hwupsCaption": hwupsCaption,
       "hwupsCommandFile": hwupsCommandFile,
       "hwupsConfigManagerErrorCode": hwupsConfigManagerErrorCode,
       "hwupsConfigManagerUserConfig": hwupsConfigManagerUserConfig,
       "hwupsCreationClassName": hwupsCreationClassName,
       "hwupsDescription": hwupsDescription,
       "hwupsDeviceID": hwupsDeviceID,
       "hwupsErrorCleared": hwupsErrorCleared,
       "hwupsErrorDescription": hwupsErrorDescription,
       "hwupsEstimatedChargeRemaining": hwupsEstimatedChargeRemaining,
       "hwupsEstimatedRunTime": hwupsEstimatedRunTime,
       "hwupsFirstMessageDelay": hwupsFirstMessageDelay,
       "hwupsInstallDate": hwupsInstallDate,
       "hwupsIsSwitchingSupply": hwupsIsSwitchingSupply,
       "hwupsLastErrorCode": hwupsLastErrorCode,
       "hwupsLowBatterySignal": hwupsLowBatterySignal,
       "hwupsMessageInterval": hwupsMessageInterval,
       "hwupsName": hwupsName,
       "hwupsPNPDeviceID": hwupsPNPDeviceID,
       "hwupsPowerFailSignal": hwupsPowerFailSignal,
       "hwupsPowerManagementCapabilities": hwupsPowerManagementCapabilities,
       "hwupsPowerManagementSupported": hwupsPowerManagementSupported,
       "hwupsRange1InputFrequencyHigh": hwupsRange1InputFrequencyHigh,
       "hwupsRange1InputFrequencyLow": hwupsRange1InputFrequencyLow,
       "hwupsRange1InputVoltageHigh": hwupsRange1InputVoltageHigh,
       "hwupsRange1InputVoltageLow": hwupsRange1InputVoltageLow,
       "hwupsRange2InputFrequencyHigh": hwupsRange2InputFrequencyHigh,
       "hwupsRange2InputFrequencyLow": hwupsRange2InputFrequencyLow,
       "hwupsRange2InputVoltageHigh": hwupsRange2InputVoltageHigh,
       "hwupsRange2InputVoltageLow": hwupsRange2InputVoltageLow,
       "hwupsRemainingCapacityStatus": hwupsRemainingCapacityStatus,
       "hwupsStatus": hwupsStatus,
       "hwupsStatusInfo": hwupsStatusInfo,
       "hwupsSystemCreationClassName": hwupsSystemCreationClassName,
       "hwupsSystemName": hwupsSystemName,
       "hwupsTimeOnBackup": hwupsTimeOnBackup,
       "hwupsTotalOutputPower": hwupsTotalOutputPower,
       "hwupsTypeOfRangeSwitching": hwupsTypeOfRangeSwitching,
       "hwupsUPSPort": hwupsUPSPort,
       "win32VoltageProbeTable": win32VoltageProbeTable,
       "win32VoltageProbeEntry": win32VoltageProbeEntry,
       "hwvpIndex": hwvpIndex,
       "hwvpAccuracy": hwvpAccuracy,
       "hwvpAvailability": hwvpAvailability,
       "hwvpCaption": hwvpCaption,
       "hwvpConfigManagerErrorCode": hwvpConfigManagerErrorCode,
       "hwvpConfigManagerUserConfig": hwvpConfigManagerUserConfig,
       "hwvpCreationClassName": hwvpCreationClassName,
       "hwvpCurrentReading": hwvpCurrentReading,
       "hwvpDescription": hwvpDescription,
       "hwvpDeviceID": hwvpDeviceID,
       "hwvpErrorCleared": hwvpErrorCleared,
       "hwvpErrorDescription": hwvpErrorDescription,
       "hwvpInstallDate": hwvpInstallDate,
       "hwvpIsLinear": hwvpIsLinear,
       "hwvpLastErrorCode": hwvpLastErrorCode,
       "hwvpLowerThresholdCritical": hwvpLowerThresholdCritical,
       "hwvpLowerThresholdFatal": hwvpLowerThresholdFatal,
       "hwvpLowerThresholdNonCritical": hwvpLowerThresholdNonCritical,
       "hwvpMaxReadable": hwvpMaxReadable,
       "hwvpMinReadable": hwvpMinReadable,
       "hwvpName": hwvpName,
       "hwvpNominalReading": hwvpNominalReading,
       "hwvpNormalMax": hwvpNormalMax,
       "hwvpNormalMin": hwvpNormalMin,
       "hwvpPNPDeviceID": hwvpPNPDeviceID,
       "hwvpPowerManagementCapabilities": hwvpPowerManagementCapabilities,
       "hwvpPowerManagementSupported": hwvpPowerManagementSupported,
       "hwvpResolution": hwvpResolution,
       "hwvpStatus": hwvpStatus,
       "hwvpStatusInfo": hwvpStatusInfo,
       "hwvpSystemCreationClassName": hwvpSystemCreationClassName,
       "hwvpSystemName": hwvpSystemName,
       "hwvpTolerance": hwvpTolerance,
       "hwvpUpperThresholdCritical": hwvpUpperThresholdCritical,
       "hwvpUpperThresholdFatal": hwvpUpperThresholdFatal,
       "hwvpUpperThresholdNonCritical": hwvpUpperThresholdNonCritical,
       "wmiPrinting": wmiPrinting,
       "win32PrinterTable": win32PrinterTable,
       "win32PrinterEntry": win32PrinterEntry,
       "hwprIndex": hwprIndex,
       "hwprAttributes": hwprAttributes,
       "hwprAvailability": hwprAvailability,
       "hwprAvailableJobSheets": hwprAvailableJobSheets,
       "hwprAveragePagesPerMinute": hwprAveragePagesPerMinute,
       "hwprCapabilities": hwprCapabilities,
       "hwprCapabilityDescriptions": hwprCapabilityDescriptions,
       "hwprCaption": hwprCaption,
       "hwprCharSetsSupported": hwprCharSetsSupported,
       "hwprComment": hwprComment,
       "hwprConfigManagerErrorCode": hwprConfigManagerErrorCode,
       "hwprConfigManagerUserConfig": hwprConfigManagerUserConfig,
       "hwprCreationClassName": hwprCreationClassName,
       "hwprCurrentCapabilities": hwprCurrentCapabilities,
       "hwprCurrentCharSet": hwprCurrentCharSet,
       "hwprCurrentLanguage": hwprCurrentLanguage,
       "hwprCurrentMimeType": hwprCurrentMimeType,
       "hwprCurrentNaturalLanguage": hwprCurrentNaturalLanguage,
       "hwprCurrentPaperType": hwprCurrentPaperType,
       "hwprDefault": hwprDefault,
       "hwprDefaultCapabilities": hwprDefaultCapabilities,
       "hwprDefaultCopies": hwprDefaultCopies,
       "hwprDefaultLanguage": hwprDefaultLanguage,
       "hwprDefaultMimeType": hwprDefaultMimeType,
       "hwprDefaultNumberUp": hwprDefaultNumberUp,
       "hwprDefaultPaperType": hwprDefaultPaperType,
       "hwprDefaultPriority": hwprDefaultPriority,
       "hwprDescription": hwprDescription,
       "hwprDetectedErrorState": hwprDetectedErrorState,
       "hwprDeviceID": hwprDeviceID,
       "hwprDirect": hwprDirect,
       "hwprDoCompleteFirst": hwprDoCompleteFirst,
       "hwprDriverName": hwprDriverName,
       "hwprEnableBIDI": hwprEnableBIDI,
       "hwprEnableDevQueryPrint": hwprEnableDevQueryPrint,
       "hwprErrorCleared": hwprErrorCleared,
       "hwprErrorDescription": hwprErrorDescription,
       "hwprErrorInformation": hwprErrorInformation,
       "hwprExtendedDetectedErrorState": hwprExtendedDetectedErrorState,
       "hwprExtendedPrinterStatus": hwprExtendedPrinterStatus,
       "hwprHidden": hwprHidden,
       "hwprHorizontalResolution": hwprHorizontalResolution,
       "hwprInstallDate": hwprInstallDate,
       "hwprJobCountSinceLastReset": hwprJobCountSinceLastReset,
       "hwprKeepPrintedJobs": hwprKeepPrintedJobs,
       "hwprLanguagesSupported": hwprLanguagesSupported,
       "hwprLastErrorCode": hwprLastErrorCode,
       "hwprLocal": hwprLocal,
       "hwprLocation": hwprLocation,
       "hwprMarkingTechnology": hwprMarkingTechnology,
       "hwprMaxCopies": hwprMaxCopies,
       "hwprMaxNumberUp": hwprMaxNumberUp,
       "hwprMaxSizeSupported": hwprMaxSizeSupported,
       "hwprMimeTypesSupported": hwprMimeTypesSupported,
       "hwprName": hwprName,
       "hwprNaturalLanguagesSupported": hwprNaturalLanguagesSupported,
       "hwprNetwork": hwprNetwork,
       "hwprPaperSizesSupported": hwprPaperSizesSupported,
       "hwprPaperTypesAvailable": hwprPaperTypesAvailable,
       "hwprParameters": hwprParameters,
       "hwprPNPDeviceID": hwprPNPDeviceID,
       "hwprPortName": hwprPortName,
       "hwprPowerManagementCapabilities": hwprPowerManagementCapabilities,
       "hwprPowerManagementSupported": hwprPowerManagementSupported,
       "hwprPrinterPaperNames": hwprPrinterPaperNames,
       "hwprPrinterState": hwprPrinterState,
       "hwprPrinterStatus": hwprPrinterStatus,
       "hwprPrintJobDataType": hwprPrintJobDataType,
       "hwprPrintProcessor": hwprPrintProcessor,
       "hwprPriority": hwprPriority,
       "hwprPublished": hwprPublished,
       "hwprQueued": hwprQueued,
       "hwprRawOnly": hwprRawOnly,
       "hwprSeparatorFile": hwprSeparatorFile,
       "hwprServerName": hwprServerName,
       "hwprShared": hwprShared,
       "hwprShareName": hwprShareName,
       "hwprSpoolEnabled": hwprSpoolEnabled,
       "hwprStartTime": hwprStartTime,
       "hwprStatus": hwprStatus,
       "hwprStatusInfo": hwprStatusInfo,
       "hwprSystemCreationClassName": hwprSystemCreationClassName,
       "hwprSystemName": hwprSystemName,
       "hwprTimeOfLastReset": hwprTimeOfLastReset,
       "hwprUntilTime": hwprUntilTime,
       "hwprVerticalResolution": hwprVerticalResolution,
       "hwprWorkOffline": hwprWorkOffline,
       "win32PrinterConfigurationTable": win32PrinterConfigurationTable,
       "win32PrinterConfigurationEntry": win32PrinterConfigurationEntry,
       "hwprcIndex": hwprcIndex,
       "hwprcBitsPerPel": hwprcBitsPerPel,
       "hwprcCaption": hwprcCaption,
       "hwprcCollate": hwprcCollate,
       "hwprcColor": hwprcColor,
       "hwprcCopies": hwprcCopies,
       "hwprcDescription": hwprcDescription,
       "hwprcDeviceName": hwprcDeviceName,
       "hwprcDisplayFlags": hwprcDisplayFlags,
       "hwprcDisplayFrequency": hwprcDisplayFrequency,
       "hwprcDitherType": hwprcDitherType,
       "hwprcDriverVersion": hwprcDriverVersion,
       "hwprcDuplex": hwprcDuplex,
       "hwprcFormName": hwprcFormName,
       "hwprcHorizontalResolution": hwprcHorizontalResolution,
       "hwprcICMIntent": hwprcICMIntent,
       "hwprcICMMethod": hwprcICMMethod,
       "hwprcLogPixels": hwprcLogPixels,
       "hwprcMediaType": hwprcMediaType,
       "hwprcName": hwprcName,
       "hwprcOrientation": hwprcOrientation,
       "hwprcPaperLength": hwprcPaperLength,
       "hwprcPaperSize": hwprcPaperSize,
       "hwprcPaperWidth": hwprcPaperWidth,
       "hwprcPelsHeight": hwprcPelsHeight,
       "hwprcPelsWidth": hwprcPelsWidth,
       "hwprcPrintQuality": hwprcPrintQuality,
       "hwprcScale": hwprcScale,
       "hwprcSettingID": hwprcSettingID,
       "hwprcSpecificationVersion": hwprcSpecificationVersion,
       "hwprcTTOption": hwprcTTOption,
       "hwprcVerticalResolution": hwprcVerticalResolution,
       "hwprcXResolution": hwprcXResolution,
       "hwprcYResolution": hwprcYResolution,
       "win32PrinterDriverTable": win32PrinterDriverTable,
       "win32PrinterDriverEntry": win32PrinterDriverEntry,
       "hwprdIndex": hwprdIndex,
       "hwprdCaption": hwprdCaption,
       "hwprdConfigFile": hwprdConfigFile,
       "hwprdCreationClassName": hwprdCreationClassName,
       "hwprdDataFile": hwprdDataFile,
       "hwprdDefaultDataType": hwprdDefaultDataType,
       "hwprdDependentFiles": hwprdDependentFiles,
       "hwprdDescription": hwprdDescription,
       "hwprdDriverPath": hwprdDriverPath,
       "hwprdFilePath": hwprdFilePath,
       "hwprdHelpFile": hwprdHelpFile,
       "hwprdInfName": hwprdInfName,
       "hwprdInstallDate": hwprdInstallDate,
       "hwprdMonitorName": hwprdMonitorName,
       "hwprdName": hwprdName,
       "hwprdOEMUrl": hwprdOEMUrl,
       "hwprdStarted": hwprdStarted,
       "hwprdStartMode": hwprdStartMode,
       "hwprdStatus": hwprdStatus,
       "hwprdSupportedPlatform": hwprdSupportedPlatform,
       "hwprdSystemCreationClassName": hwprdSystemCreationClassName,
       "hwprdSystemName": hwprdSystemName,
       "hwprdVersion": hwprdVersion,
       "win32PrintJobTable": win32PrintJobTable,
       "win32PrintJobEntry": win32PrintJobEntry,
       "hwprjIndex": hwprjIndex,
       "hwprjCaption": hwprjCaption,
       "hwprjDataType": hwprjDataType,
       "hwprjDescription": hwprjDescription,
       "hwprjDocument": hwprjDocument,
       "hwprjDriverName": hwprjDriverName,
       "hwprjElapsedTime": hwprjElapsedTime,
       "hwprjHostPrintQueue": hwprjHostPrintQueue,
       "hwprjInstallDate": hwprjInstallDate,
       "hwprjJobId": hwprjJobId,
       "hwprjJobStatus": hwprjJobStatus,
       "hwprjName": hwprjName,
       "hwprjNotify": hwprjNotify,
       "hwprjOwner": hwprjOwner,
       "hwprjPagesPrinted": hwprjPagesPrinted,
       "hwprjParameters": hwprjParameters,
       "hwprjPrintProcessor": hwprjPrintProcessor,
       "hwprjPriority": hwprjPriority,
       "hwprjSize": hwprjSize,
       "hwprjStartTime": hwprjStartTime,
       "hwprjStatus": hwprjStatus,
       "hwprjStatusMask": hwprjStatusMask,
       "hwprjTimeSubmitted": hwprjTimeSubmitted,
       "hwprjTotalPages": hwprjTotalPages,
       "hwprjUntilTime": hwprjUntilTime,
       "win32TCPIPPrinterPortTable": win32TCPIPPrinterPortTable,
       "win32TCPIPPrinterPortEntry": win32TCPIPPrinterPortEntry,
       "hwtppIndex": hwtppIndex,
       "hwtppByteCount": hwtppByteCount,
       "hwtppCaption": hwtppCaption,
       "hwtppCreationClassName": hwtppCreationClassName,
       "hwtppDescription": hwtppDescription,
       "hwtppHostAddress": hwtppHostAddress,
       "hwtppInstallDate": hwtppInstallDate,
       "hwtppName": hwtppName,
       "hwtppPortNumber": hwtppPortNumber,
       "hwtppProtocol": hwtppProtocol,
       "hwtppQueue": hwtppQueue,
       "hwtppSNMPCommunity": hwtppSNMPCommunity,
       "hwtppSNMPDevIndex": hwtppSNMPDevIndex,
       "hwtppSNMPEnabled": hwtppSNMPEnabled,
       "hwtppStatus": hwtppStatus,
       "hwtppSystemCreationClassName": hwtppSystemCreationClassName,
       "hwtppSystemName": hwtppSystemName,
       "hwtppType": hwtppType,
       "wmiTelephony": wmiTelephony,
       "win32POTSModemTable": win32POTSModemTable,
       "win32POTSModemEntry": win32POTSModemEntry,
       "hwpmIndex": hwpmIndex,
       "hwpmAnswerMode": hwpmAnswerMode,
       "hwpmAttachedTo": hwpmAttachedTo,
       "hwpmAvailability": hwpmAvailability,
       "hwpmBlindOff": hwpmBlindOff,
       "hwpmBlindOn": hwpmBlindOn,
       "hwpmCaption": hwpmCaption,
       "hwpmCompatibilityFlags": hwpmCompatibilityFlags,
       "hwpmCompressionInfo": hwpmCompressionInfo,
       "hwpmCompressionOff": hwpmCompressionOff,
       "hwpmCompressionOn": hwpmCompressionOn,
       "hwpmConfigManagerErrorCode": hwpmConfigManagerErrorCode,
       "hwpmConfigManagerUserConfig": hwpmConfigManagerUserConfig,
       "hwpmConfigurationDialog": hwpmConfigurationDialog,
       "hwpmCountriesSupported": hwpmCountriesSupported,
       "hwpmCountrySelected": hwpmCountrySelected,
       "hwpmCreationClassName": hwpmCreationClassName,
       "hwpmCurrentPasswords": hwpmCurrentPasswords,
       "hwpmDCB": hwpmDCB,
       "hwpmDefault": hwpmDefault,
       "hwpmDescription": hwpmDescription,
       "hwpmDeviceID": hwpmDeviceID,
       "hwpmDeviceLoader": hwpmDeviceLoader,
       "hwpmDeviceType": hwpmDeviceType,
       "hwpmDialType": hwpmDialType,
       "hwpmDriverDate": hwpmDriverDate,
       "hwpmErrorCleared": hwpmErrorCleared,
       "hwpmErrorControlForced": hwpmErrorControlForced,
       "hwpmErrorControlInfo": hwpmErrorControlInfo,
       "hwpmErrorControlOff": hwpmErrorControlOff,
       "hwpmErrorControlOn": hwpmErrorControlOn,
       "hwpmErrorDescription": hwpmErrorDescription,
       "hwpmFlowControlHard": hwpmFlowControlHard,
       "hwpmFlowControlOff": hwpmFlowControlOff,
       "hwpmFlowControlSoft": hwpmFlowControlSoft,
       "hwpmInactivityScale": hwpmInactivityScale,
       "hwpmInactivityTimeout": hwpmInactivityTimeout,
       "hwpmModemIndex": hwpmModemIndex,
       "hwpmInstallDate": hwpmInstallDate,
       "hwpmLastErrorCode": hwpmLastErrorCode,
       "hwpmMaxBaudRateToPhone": hwpmMaxBaudRateToPhone,
       "hwpmMaxBaudRateToSerialPort": hwpmMaxBaudRateToSerialPort,
       "hwpmMaxNumberOfPasswords": hwpmMaxNumberOfPasswords,
       "hwpmModel": hwpmModel,
       "hwpmModemInfPath": hwpmModemInfPath,
       "hwpmModemInfSection": hwpmModemInfSection,
       "hwpmModulationBell": hwpmModulationBell,
       "hwpmModulationCCITT": hwpmModulationCCITT,
       "hwpmModulationScheme": hwpmModulationScheme,
       "hwpmName": hwpmName,
       "hwpmPNPDeviceID": hwpmPNPDeviceID,
       "hwpmPortSubClass": hwpmPortSubClass,
       "hwpmPowerManagementCapabilities": hwpmPowerManagementCapabilities,
       "hwpmPowerManagementSupported": hwpmPowerManagementSupported,
       "hwpmPrefix": hwpmPrefix,
       "hwpmProperties": hwpmProperties,
       "hwpmProviderName": hwpmProviderName,
       "hwpmPulse": hwpmPulse,
       "hwpmReset": hwpmReset,
       "hwpmResponsesKeyName": hwpmResponsesKeyName,
       "hwpmRingsBeforeAnswer": hwpmRingsBeforeAnswer,
       "hwpmSpeakerModeDial": hwpmSpeakerModeDial,
       "hwpmSpeakerModeOff": hwpmSpeakerModeOff,
       "hwpmSpeakerModeOn": hwpmSpeakerModeOn,
       "hwpmSpeakerModeSetup": hwpmSpeakerModeSetup,
       "hwpmSpeakerVolumeHigh": hwpmSpeakerVolumeHigh,
       "hwpmSpeakerVolumeInfo": hwpmSpeakerVolumeInfo,
       "hwpmSpeakerVolumeLow": hwpmSpeakerVolumeLow,
       "hwpmSpeakerVolumeMed": hwpmSpeakerVolumeMed,
       "hwpmStatus": hwpmStatus,
       "hwpmStatusInfo": hwpmStatusInfo,
       "hwpmStringFormat": hwpmStringFormat,
       "hwpmSupportsCallback": hwpmSupportsCallback,
       "hwpmSupportsSynchronousConnect": hwpmSupportsSynchronousConnect,
       "hwpmSystemCreationClassName": hwpmSystemCreationClassName,
       "hwpmSystemName": hwpmSystemName,
       "hwpmTerminator": hwpmTerminator,
       "hwpmTimeOfLastReset": hwpmTimeOfLastReset,
       "hwpmTone": hwpmTone,
       "hwpmVoiceSwitchFeature": hwpmVoiceSwitchFeature,
       "wmiVideoMonitor": wmiVideoMonitor,
       "win32DesktopMonitorTable": win32DesktopMonitorTable,
       "win32DesktopMonitorEntry": win32DesktopMonitorEntry,
       "hwdmIndex": hwdmIndex,
       "hwdmAvailability": hwdmAvailability,
       "hwdmBandwidth": hwdmBandwidth,
       "hwdmCaption": hwdmCaption,
       "hwdmConfigManagerErrorCode": hwdmConfigManagerErrorCode,
       "hwdmConfigManagerUserConfig": hwdmConfigManagerUserConfig,
       "hwdmCreationClassName": hwdmCreationClassName,
       "hwdmDescription": hwdmDescription,
       "hwdmDeviceID": hwdmDeviceID,
       "hwdmDisplayType": hwdmDisplayType,
       "hwdmErrorCleared": hwdmErrorCleared,
       "hwdmErrorDescription": hwdmErrorDescription,
       "hwdmInstallDate": hwdmInstallDate,
       "hwdmIsLocked": hwdmIsLocked,
       "hwdmLastErrorCode": hwdmLastErrorCode,
       "hwdmMonitorManufacturer": hwdmMonitorManufacturer,
       "hwdmMonitorType": hwdmMonitorType,
       "hwdmName": hwdmName,
       "hwdmPixelsPerXLogicalInch": hwdmPixelsPerXLogicalInch,
       "hwdmPixelsPerYLogicalInch": hwdmPixelsPerYLogicalInch,
       "hwdmPNPDeviceID": hwdmPNPDeviceID,
       "hwdmPowerManagementCapabilities": hwdmPowerManagementCapabilities,
       "hwdmPowerManagementSupported": hwdmPowerManagementSupported,
       "hwdmScreenHeight": hwdmScreenHeight,
       "hwdmScreenWidth": hwdmScreenWidth,
       "hwdmStatus": hwdmStatus,
       "hwdmStatusInfo": hwdmStatusInfo,
       "hwdmSystemCreationClassName": hwdmSystemCreationClassName,
       "hwdmSystemName": hwdmSystemName,
       "win32VideoControllerTable": win32VideoControllerTable,
       "win32VideoControllerEntry": win32VideoControllerEntry,
       "hwvcIndex": hwvcIndex,
       "hwvcAcceleratorCapabilities": hwvcAcceleratorCapabilities,
       "hwvcAdapterCompatibility": hwvcAdapterCompatibility,
       "hwvcAdapterDACType": hwvcAdapterDACType,
       "hwvcAdapterRAM": hwvcAdapterRAM,
       "hwvcAvailability": hwvcAvailability,
       "hwvcCapabilityDescriptions": hwvcCapabilityDescriptions,
       "hwvcCaption": hwvcCaption,
       "hwvcColorTableEntries": hwvcColorTableEntries,
       "hwvcConfigManagerErrorCode": hwvcConfigManagerErrorCode,
       "hwvcConfigManagerUserConfig": hwvcConfigManagerUserConfig,
       "hwvcCreationClassName": hwvcCreationClassName,
       "hwvcCurrentBitsPerPixel": hwvcCurrentBitsPerPixel,
       "hwvcCurrentHorizontalResolution": hwvcCurrentHorizontalResolution,
       "hwvcCurrentNumberOfColors": hwvcCurrentNumberOfColors,
       "hwvcCurrentNumberOfColumns": hwvcCurrentNumberOfColumns,
       "hwvcCurrentNumberOfRows": hwvcCurrentNumberOfRows,
       "hwvcCurrentRefreshRate": hwvcCurrentRefreshRate,
       "hwvcCurrentScanMode": hwvcCurrentScanMode,
       "hwvcCurrentVerticalResolution": hwvcCurrentVerticalResolution,
       "hwvcDescription": hwvcDescription,
       "hwvcDeviceID": hwvcDeviceID,
       "hwvcDeviceSpecificPens": hwvcDeviceSpecificPens,
       "hwvcDitherType": hwvcDitherType,
       "hwvcDriverDate": hwvcDriverDate,
       "hwvcDriverVersion": hwvcDriverVersion,
       "hwvcErrorCleared": hwvcErrorCleared,
       "hwvcErrorDescription": hwvcErrorDescription,
       "hwvcICMIntent": hwvcICMIntent,
       "hwvcICMMethod": hwvcICMMethod,
       "hwvcInfFilename": hwvcInfFilename,
       "hwvcInfSection": hwvcInfSection,
       "hwvcInstallDate": hwvcInstallDate,
       "hwvcInstalledDisplayDrivers": hwvcInstalledDisplayDrivers,
       "hwvcLastErrorCode": hwvcLastErrorCode,
       "hwvcMaxMemorySupported": hwvcMaxMemorySupported,
       "hwvcMaxNumberControlled": hwvcMaxNumberControlled,
       "hwvcMaxRefreshRate": hwvcMaxRefreshRate,
       "hwvcMinRefreshRate": hwvcMinRefreshRate,
       "hwvcMonochrome": hwvcMonochrome,
       "hwvcName": hwvcName,
       "hwvcNumberOfColorPlanes": hwvcNumberOfColorPlanes,
       "hwvcNumberOfVideoPages": hwvcNumberOfVideoPages,
       "hwvcPNPDeviceID": hwvcPNPDeviceID,
       "hwvcPowerManagementCapabilities": hwvcPowerManagementCapabilities,
       "hwvcPowerManagementSupported": hwvcPowerManagementSupported,
       "hwvcProtocolSupported": hwvcProtocolSupported,
       "hwvcReservedSystemPaletteEntries": hwvcReservedSystemPaletteEntries,
       "hwvcSpecificationVersion": hwvcSpecificationVersion,
       "hwvcStatus": hwvcStatus,
       "hwvcStatusInfo": hwvcStatusInfo,
       "hwvcSystemCreationClassName": hwvcSystemCreationClassName,
       "hwvcSystemName": hwvcSystemName,
       "hwvcSystemPaletteEntries": hwvcSystemPaletteEntries,
       "hwvcTimeOfLastReset": hwvcTimeOfLastReset,
       "hwvcVideoArchitecture": hwvcVideoArchitecture,
       "hwvcVideoMemoryType": hwvcVideoMemoryType,
       "hwvcVideoMode": hwvcVideoMode,
       "hwvcVideoModeDescription": hwvcVideoModeDescription,
       "hwvcVideoProcessor": hwvcVideoProcessor}
)
