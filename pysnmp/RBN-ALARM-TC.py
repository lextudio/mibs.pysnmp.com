# SNMP MIB module (RBN-ALARM-TC) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/RBN-ALARM-TC
# Produced by pysmi-1.5.4 at Mon Oct 14 22:44:52 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(rbnModules,) = mibBuilder.importSymbols(
    "RBN-SMI",
    "rbnModules")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY

rbnAlarmTc = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2352, 5, 3)
)
rbnAlarmTc.setRevisions(
        ("2012-03-20 00:00",
         "2012-03-20 00:00",
         "2012-03-08 18:00",
         "2011-10-27 18:00",
         "2011-08-15 18:00",
         "2011-05-23 18:00",
         "2011-03-02 16:00",
         "2011-02-07 16:00",
         "2010-04-13 16:00",
         "2009-12-15 00:00",
         "2009-02-05 00:00",
         "2008-12-19 00:00",
         "2005-05-09 00:00",
         "2004-06-22 00:00")
)


# Types definitions


# TEXTUAL-CONVENTIONS



class RbnAlarmId(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              10100,
              10101,
              10102,
              10103,
              10104,
              10105,
              10106,
              10107,
              10108,
              10109,
              10110,
              10200,
              10201,
              10202,
              10203,
              10204,
              10205,
              10206,
              10207,
              10208,
              10209,
              10210,
              10211,
              10212,
              10213,
              10214,
              10215,
              10216,
              10217,
              10218,
              10219,
              10220,
              10221,
              10222,
              10223,
              10224,
              10225,
              10300,
              10301,
              10302,
              10303,
              10304,
              10305,
              10306,
              10307,
              10308,
              10309,
              10310,
              10311,
              10312,
              10313,
              10314,
              10315,
              10316,
              10317,
              10318,
              10319,
              10320,
              10321,
              10322,
              10323,
              10324,
              10325,
              10326,
              10400,
              10401,
              10402,
              10403,
              10404,
              10405,
              10406,
              10407,
              10408,
              10409,
              10410,
              10411,
              10412,
              10413,
              10414,
              10415,
              10416,
              10417,
              10418,
              10419,
              10420,
              10421,
              10422,
              10423,
              10424,
              10500,
              10501,
              10502,
              10503,
              10504,
              10505,
              10506,
              10507,
              10508,
              10509,
              10510,
              10511,
              10512,
              10513,
              10514,
              10515,
              10516,
              10517,
              10518,
              10800,
              10801,
              10802,
              10900)
        )
    )
    namedValues = NamedValues(
        *(("alswDown", 10423),
          ("alswExtremeVoltageOutOfRange", 10412),
          ("alswFabricFail", 10422),
          ("alswFabricLinkFail", 10421),
          ("alswFrequencyRange", 10424),
          ("alswHardwareFail", 10405),
          ("alswInsufficientPower", 10408),
          ("alswInventoryFail", 10402),
          ("alswMismatch", 10401),
          ("alswMissing", 10400),
          ("alswOosEjectorOpen", 10407),
          ("alswOosHardwareFail", 10406),
          ("alswOosOverheat", 10409),
          ("alswOsdFail", 10415),
          ("alswOverheatHot", 10410),
          ("alswPayloadBootFail", 10404),
          ("alswPeerIncompatible", 10420),
          ("alswPodFail", 10414),
          ("alswSoftwareFail", 10413),
          ("alswSwitchAuto", 10417),
          ("alswSwitchDone", 10418),
          ("alswSwitchFail", 10419),
          ("alswSwitchManual", 10416),
          ("alswUnreachable", 10403),
          ("alswVoltageOutOfRange", 10411),
          ("aseAsp1Down", 82),
          ("aseAsp2Down", 83),
          ("asp1MissingServiceAssoc", 87),
          ("asp2MissingServiceAssoc", 88),
          ("backplaneclkfail", 14),
          ("backupfail", 25),
          ("btciferror", 15),
          ("btcnotready", 16),
          ("cesLossOfConnectivity", 91),
          ("cesPwOutage", 90),
          ("chassisEquipmentClockLostReference1", 10105),
          ("chassisEquipmentClockLostReference2", 10106),
          ("chassisEquipmentClockLostReference3", 10107),
          ("chassisEquipmentClockLostReference4", 10108),
          ("chassisEquipmentClockNoMoreReference", 10109),
          ("chassisEquipmentClockQlBelowThreshold", 10110),
          ("chassisFabricRedundancyLost", 10102),
          ("chassisInsufficientPower", 10101),
          ("chassisInventoryFail", 10100),
          ("chassisNoFanTrays", 10104),
          ("chassisSysFabricBandwithDegrade", 10103),
          ("compDiskFail", 10900),
          ("controllerDiagFail", 9),
          ("controllerFail", 8),
          ("controllerFallbackOfw", 92),
          ("controllerOverheat", 13),
          ("controllerPowerOnDiagFail", 11),
          ("controllerSwNotSupported", 84),
          ("controllerSwitchFail", 6),
          ("controllerTempCritical", 7),
          ("controllerbsdl2cacheerror", 79),
          ("controllercardcodemismatch", 26),
          ("controllercardtypemismatch", 27),
          ("controllermissing", 28),
          ("controlleroverheat", 29),
          ("controllerswitchauto", 30),
          ("controllerswitchcompleted", 31),
          ("controllerswitchexfailed", 32),
          ("controllerswitchforced", 33),
          ("controllerswitchmanual", 34),
          ("controllervxwl2cacheerror", 80),
          ("cpBackplaneFail", 3),
          ("cpDimmMismatch", 89),
          ("cpFail", 2),
          ("cpOverheat", 12),
          ("cpPowerOnDiagFail", 10),
          ("cpbackplanedegrade", 17),
          ("cpbackplanerxerror", 85),
          ("cpbackplanetxerror", 86),
          ("cpcardcodemismatch", 18),
          ("cpmismatch", 19),
          ("cpmissing", 20),
          ("cpresetcomplete", 21),
          ("diagFail", 4),
          ("downloadcompleted", 22),
          ("downloadfailed", 23),
          ("ethtranceivervoltagehi", 63),
          ("ethtranceivervoltagelo", 64),
          ("ethtransceiveraux1hi", 69),
          ("ethtransceiveraux1lo", 70),
          ("ethtransceiveraux2hi", 71),
          ("ethtransceiveraux2lo", 72),
          ("ethtransceiverbiashi", 65),
          ("ethtransceiverbiaslo", 66),
          ("ethtransceiverlanelaserbiashi", 100),
          ("ethtransceiverlanelaserbiaslo", 101),
          ("ethtransceiverlanerxpowerhi", 106),
          ("ethtransceiverlanerxpowerlo", 107),
          ("ethtransceiverlanetemphi", 102),
          ("ethtransceiverlanetemplo", 103),
          ("ethtransceiverlanetxpowerhi", 104),
          ("ethtransceiverlanetxpowerlo", 105),
          ("ethtransceiverlvcc2hi", 77),
          ("ethtransceiverlvcc2lo", 78),
          ("ethtransceiverlvcc3hi", 75),
          ("ethtransceiverlvcc3lo", 76),
          ("ethtransceiverlvcc5hi", 73),
          ("ethtransceiverlvcc5lo", 74),
          ("ethtransceivermodulefailure", 98),
          ("ethtransceivermodulemismatch", 99),
          ("ethtransceiverrxpowerhi", 59),
          ("ethtransceiverrxpowerlo", 60),
          ("ethtransceiversoabiashi", 95),
          ("ethtransceiversoabiaslo", 96),
          ("ethtransceiverspeedmismatch", 94),
          ("ethtransceiversynceunsupported", 97),
          ("ethtransceivertemphi", 61),
          ("ethtransceivertemplo", 62),
          ("ethtransceivertxpowerhi", 67),
          ("ethtransceivertxpowerlo", 68),
          ("ethtransceiverunsupportedinport", 93),
          ("fsServerDownAlarm", 81),
          ("lcDataPathCongestion", 10224),
          ("lcDown", 10222),
          ("lcEquipmentClockHardwareFail", 10225),
          ("lcExcessiveCpuUtilization", 10219),
          ("lcExcessiveEccErrors", 10221),
          ("lcExcessiveMemUtilization", 10220),
          ("lcExtremeVoltageOutOfRange", 10212),
          ("lcFabricBandwidthDegrade", 10217),
          ("lcFabricLinkFail", 10216),
          ("lcFileSystemFull", 10218),
          ("lcHardwareFail", 10205),
          ("lcInsufficientPower", 10208),
          ("lcInventoryFail", 10202),
          ("lcMismatch", 10201),
          ("lcMissing", 10200),
          ("lcNpuFail", 10223),
          ("lcOosEjectorOpen", 10207),
          ("lcOosHardwareFail", 10206),
          ("lcOosOverheat", 10209),
          ("lcOsdFail", 10215),
          ("lcOverheatHot", 10210),
          ("lcPayloadBootFail", 10204),
          ("lcPodFail", 10214),
          ("lcSoftwareFail", 10213),
          ("lcUnreachable", 10203),
          ("lcVoltageOutOfRange", 10211),
          ("localbackplaneinventfail", 37),
          ("localfantrayinventfail", 35),
          ("localinventfail", 36),
          ("lostm2m", 38),
          ("mic1diagnosticfail", 57),
          ("mic1failure", 53),
          ("mic1mismatch", 47),
          ("mic1missing", 45),
          ("mic1overheat", 51),
          ("mic1podfail", 55),
          ("mic1voltagefailure", 49),
          ("mic2diagnosticfail", 58),
          ("mic2failure", 54),
          ("mic2mismatch", 48),
          ("mic2missing", 46),
          ("mic2overheat", 52),
          ("mic2podfail", 56),
          ("mic2voltagefailure", 50),
          ("nonvolatilememfail", 39),
          ("peerhwincompatible", 40),
          ("peerinventfail", 41),
          ("peermodeincompatible", 42),
          ("peersharedformatmismatch", 43),
          ("rpswDown", 10326),
          ("rpswExtremeVoltageOutOfRange", 10312),
          ("rpswFabricFail", 10324),
          ("rpswFabricLinkFail", 10323),
          ("rpswFileSystemFull", 10325),
          ("rpswHardwareFail", 10305),
          ("rpswInsufficientPower", 10308),
          ("rpswInventoryFail", 10302),
          ("rpswMgmtLinkDown", 10322),
          ("rpswMismatch", 10301),
          ("rpswMissing", 10300),
          ("rpswOosEjectorOpen", 10307),
          ("rpswOosHardwareFail", 10306),
          ("rpswOosOverheat", 10309),
          ("rpswOsdFail", 10315),
          ("rpswOverheatHot", 10310),
          ("rpswPayloadBootFail", 10304),
          ("rpswPeerIncompatible", 10320),
          ("rpswPodFail", 10314),
          ("rpswSoftwareFail", 10313),
          ("rpswSwitchAuto", 10317),
          ("rpswSwitchDone", 10318),
          ("rpswSwitchFail", 10319),
          ("rpswSwitchManual", 10316),
          ("rpswSyncFail", 10321),
          ("rpswUnreachable", 10303),
          ("rpswVoltageOutOfRange", 10311),
          ("rtclockfail", 44),
          ("sscAspApplicationSoftReset", 10802),
          ("sscAspDown", 10800),
          ("sscAspMissingServiceAssoc", 10801),
          ("swDown", 10518),
          ("swExtremeVoltageOutOfRange", 10512),
          ("swFabricFail", 10517),
          ("swFabricLinkFail", 10516),
          ("swHardwareFail", 10505),
          ("swInsufficientPower", 10508),
          ("swInventoryFail", 10502),
          ("swMismatch", 10501),
          ("swMissing", 10500),
          ("swOosEjectorOpen", 10507),
          ("swOosHardwareFail", 10506),
          ("swOosOverheat", 10509),
          ("swOsdFail", 10515),
          ("swOverheatHot", 10510),
          ("swPayloadBootFail", 10504),
          ("swPodFail", 10514),
          ("swSoftwareFail", 10513),
          ("swUnreachable", 10503),
          ("swVoltageOutOfRange", 10511),
          ("syncfail", 24),
          ("unknown", 1),
          ("voltageFail", 5))
    )



class RbnAlarmType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("communicationsAlarm", 2),
          ("environmentalAlarm", 6),
          ("equipmentAlarm", 5),
          ("integrityViolation", 7),
          ("operationalViolation", 8),
          ("other", 1),
          ("physicalViolation", 9),
          ("processingErrorAlarm", 4),
          ("qualityOfServiceAlarm", 3),
          ("securityServiceOrMechanismViolation", 10),
          ("timeDomainViolation", 11))
    )



class RbnAlarmPerceivedSeverity(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 2),
          ("major", 3),
          ("minor", 4),
          ("warning", 5))
    )



class RbnAlarmProbableCause(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              12,
              13,
              14,
              15,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              51,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              149,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              1001,
              1002,
              1003,
              1004,
              1005,
              1007,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1024,
              1025,
              1026)
        )
    )
    namedValues = NamedValues(
        *(("aIS", 1),
          ("airCompressorFailure", 101),
          ("airConditioningFailure", 102),
          ("airDryerFailure", 103),
          ("apsByteFailure", 1003),
          ("apsChannelMatchFailure", 1004),
          ("apsChannelProcessingFailure", 1002),
          ("apsModeMismatch", 1005),
          ("backplaneFailure", 51),
          ("batteryDischarging", 104),
          ("batteryFailure", 105),
          ("blsrDefaultKBytes", 1011),
          ("blsrImproperAPSCodes", 1014),
          ("blsrIncompleteETConfig", 1020),
          ("blsrIncompleteRingConfig", 1019),
          ("blsrInconsistentAPSCodes", 1012),
          ("blsrInvalidNeighbour", 1016),
          ("blsrInvalidRingId", 1018),
          ("blsrInvalidRingMap", 1017),
          ("blsrNodeIdMismatch", 1013),
          ("blsrNodeIncorrectOrientation", 1021),
          ("blsrSquelching", 1015),
          ("commercialPowerFailure", 106),
          ("concatenationMismatch", 23),
          ("configurationMismatch", 22),
          ("configurationOrCustomizationError", 1026),
          ("coolingFanFailure", 107),
          ("corruptData", 153),
          ("customized", 149),
          ("degradedSignal", 3),
          ("demodulationFailure", 20),
          ("enclosureDoorOpen", 118),
          ("engineFailure", 108),
          ("equipmentIdDuplication", 53),
          ("excessiveBER", 12),
          ("explosiveGas", 119),
          ("externalIFDeviceProblem", 54),
          ("farEndReceiverFailure", 4),
          ("fire", 120),
          ("fireDetectorFailure", 109),
          ("flood", 121),
          ("framingError", 5),
          ("fuseFailure", 110),
          ("generatorFailure", 111),
          ("highHumidity", 122),
          ("highTemperature", 123),
          ("highWind", 124),
          ("iceBuildUp", 125),
          ("intrusionDetection", 126),
          ("lineCardProblem", 55),
          ("linkFailure", 21),
          ("lossOfFrame", 6),
          ("lossOfPointer", 7),
          ("lossOfRealTime", 157),
          ("lossOfSignal", 8),
          ("lossOfTUMultiframeIndicator", 1007),
          ("lossOfTimingSource", 1001),
          ("lowBatteryThreshold", 112),
          ("lowCablePressure", 129),
          ("lowFuel", 127),
          ("lowHumidity", 128),
          ("lowTemperature", 130),
          ("lowWater", 131),
          ("memoryMismatch", 152),
          ("modulationFailure", 19),
          ("multiplexerProblem", 56),
          ("nEIdentifierDuplication", 57),
          ("operationFailure", 160),
          ("operationNotification", 159),
          ("other", 1024),
          ("outOfCPUCycles", 154),
          ("pathSelectorFailure", 1010),
          ("pathTraceMismatch", 13),
          ("payloadTypeMismatch", 9),
          ("powerProblem", 58),
          ("processorProblem", 59),
          ("protectionPathFailure", 60),
          ("pumpFailure", 113),
          ("pwOutage", 1025),
          ("realTimeClockFailure", 70),
          ("receiveFailure", 17),
          ("receiverFailure", 61),
          ("rectifierFailure", 114),
          ("rectifierHighVoltage", 115),
          ("rectifierLowVoltage", 116),
          ("reinitialized", 158),
          ("replaceableUnitMissing", 62),
          ("replaceableUnitProblem", 69),
          ("replaceableUnitTypeMismatch", 63),
          ("sfwrDownloadFailure", 156),
          ("sfwrEnvironmentProblem", 155),
          ("signalLableMismatch", 15),
          ("smoke", 132),
          ("storageCapacityProblem", 151),
          ("syncSourceMismatch", 64),
          ("terminalProblem", 65),
          ("timingProblem", 66),
          ("toxicGas", 133),
          ("transmissionError", 10),
          ("transmitFailure", 18),
          ("transmitterFailure", 67),
          ("trunkCardProblem", 68),
          ("unavailable", 14),
          ("ventilationsSystemFailure", 117))
    )



class RbnAlarmServiceAffecting(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )



# MIB Managed Objects in the order of their OIDs


# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "RBN-ALARM-TC",
    **{"RbnAlarmId": RbnAlarmId,
       "RbnAlarmType": RbnAlarmType,
       "RbnAlarmPerceivedSeverity": RbnAlarmPerceivedSeverity,
       "RbnAlarmProbableCause": RbnAlarmProbableCause,
       "RbnAlarmServiceAffecting": RbnAlarmServiceAffecting,
       "rbnAlarmTc": rbnAlarmTc}
)
