# SNMP MIB module (E7-TC) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/E7-TC
# Produced by pysmi-1.5.4 at Mon Oct 14 21:36:14 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



class E7AlarmType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              196,
              197,
              201,
              202,
              205,
              206,
              217,
              218,
              228,
              229)
        )
    )
    namedValues = NamedValues(
        *(("aggLinkDown", 21),
          ("airCompressorFail", 32),
          ("airConditioningFail", 33),
          ("airDryerFail", 34),
          ("backupFilesExist", 6),
          ("badInventory", 10),
          ("batteryDischarging", 35),
          ("batteryFail", 36),
          ("bootDataCorrupt", 75),
          ("bpduGuard", 124),
          ("bpduUnknown", 148),
          ("cardHwFailure", 174),
          ("cardNotFullyInserted", 157),
          ("cardTooCold", 18),
          ("cardTypeDiffers", 173),
          ("centralizedPwrFail", 37),
          ("commericalPwrFail", 38),
          ("contactOffNormal", 72),
          ("controlVlanAuditFailure", 165),
          ("coolingFanFail", 39),
          ("cpldOutOfRev", 123),
          ("databaseFailure", 17),
          ("dcVbattFailure", 197),
          ("deltInProgress", 181),
          ("differentOnt3pFile", 191),
          ("differentOntConfig", 184),
          ("differentOntPackage", 180),
          ("differentVersion", 83),
          ("dosAttack", 178),
          ("duplicateOntRegId", 121),
          ("e5TooOld", 147),
          ("efmDown", 151),
          ("engineFail", 40),
          ("engineOperating", 41),
          ("equipIdFail", 149),
          ("equipOverheat", 19),
          ("equipmentFailure", 110),
          ("erpsActingRingMaster", 26),
          ("erpsDomainHealthCompromised", 164),
          ("erpsIsolatedNode", 22),
          ("erpsRingDown", 24),
          ("erpsRingPortDown", 23),
          ("erpsSecondRingMaster", 25),
          ("ethOamMepAvgDelayMeasurement", 131),
          ("ethOamMepAvgDelayThresholdExceeded", 145),
          ("ethOamMepCcmLossOfContinuity", 133),
          ("ethOamMepCcmRxInterfaceNotUp", 134),
          ("ethOamMepCcmRxUnexpectedMeg", 135),
          ("ethOamMepCcmRxUnexpectedMep", 136),
          ("ethOamMepCcmRxUnexpectedPeriod", 137),
          ("ethOamMepCcmRxWithRdi", 144),
          ("ethOamMepMaxDelayMeasurement", 130),
          ("ethOamMepMaxDelayVariation", 132),
          ("ethOamMepNearEndAvgLoss", 127),
          ("ethOamMepNearEndMaxLoss", 126),
          ("ethOamMepNearFarAvgLoss", 129),
          ("ethOamMepNearFarMaxLoss", 128),
          ("explosiveGas", 42),
          ("fanFailure", 27),
          ("fastIgmpRingVlanProvError", 177),
          ("fire", 44),
          ("fireDetectorFail", 43),
          ("flood", 45),
          ("ftaOutOfDate", 156),
          ("fuseFail", 46),
          ("generatorFail", 47),
          ("gponReplicationResourceExhausted", 122),
          ("h248MgToMgcAssocDown", 188),
          ("highAirflow", 48),
          ("highHumidity", 49),
          ("highRxOptPowerNe", 202),
          ("highTemp", 50),
          ("highTxOptPower", 206),
          ("highWater", 51),
          ("improperRemoval", 9),
          ("initialFlashWriteInProgress", 161),
          ("interfaceQualityAuditFailure", 167),
          ("intrusion", 52),
          ("lacpFault", 79),
          ("logInit", 1),
          ("lossOfPon", 85),
          ("lossOfSignal", 20),
          ("lowBatterVoltage", 53),
          ("lowCablePressure", 54),
          ("lowFuel", 55),
          ("lowHumidity", 56),
          ("lowRxOptPowerNe", 201),
          ("lowSoftwareResources", 12),
          ("lowTemp", 57),
          ("lowTxOptPower", 205),
          ("lowWater", 58),
          ("miscellaneous", 59),
          ("mismatchEquipmentAttributes", 5),
          ("moduleFault", 71),
          ("moduleNotForStacking", 125),
          ("moreToShow", 2),
          ("msgQueueOverflow", 228),
          ("multipleDatabases", 8),
          ("newReleaseIsReady", 70),
          ("noBpDataPath", 101),
          ("noPower", 155),
          ("noStandbyController", 100),
          ("noTimingCard", 150),
          ("none", 0),
          ("notOperational", 4),
          ("ntpFreeRunning", 13),
          ("ntpServer1Down", 14),
          ("ntpServer2Down", 15),
          ("ntpServer3Down", 16),
          ("ont3pFileUpgradeInProgress", 190),
          ("ontBatteryFailed", 92),
          ("ontBatteryLow", 93),
          ("ontBatteryMissing", 91),
          ("ontConfigInProgress", 183),
          ("ontConfigUnavailable", 187),
          ("ontDs1Ais", 99),
          ("ontDs1LofMatrix", 116),
          ("ontDs1LosLof", 97),
          ("ontDs1LosMatrix", 115),
          ("ontDs1Rai", 98),
          ("ontDsSdber", 186),
          ("ontEthDown", 96),
          ("ontFileUpdateInProgress", 189),
          ("ontMismatch", 87),
          ("ontMissing", 86),
          ("ontOnBattery", 90),
          ("ontPostFailed", 89),
          ("ontProvError", 88),
          ("ontPwe3FarEndLossOfPackets", 141),
          ("ontPwe3FarEndLossOfSignal", 142),
          ("ontPwe3MalformedPackets", 143),
          ("ontRfReturnLaserEol", 95),
          ("ontRfSignalBad", 166),
          ("ontRfSignalLow", 94),
          ("ontRogueDetected", 218),
          ("ontSoftwareMismatch", 111),
          ("ontUpgradeInProgress", 179),
          ("ontUsSdber", 185),
          ("openDoor", 60),
          ("ponBwOverSubscribed", 117),
          ("ponLaserEol", 84),
          ("ponRogueDetected", 217),
          ("potsCalibrationFailure", 196),
          ("power", 76),
          ("powerAFail", 73),
          ("powerBFail", 74),
          ("pumpFail", 61),
          ("rectifierFail", 62),
          ("rectifierHighVoltage", 63),
          ("rectifierLowVoltate", 64),
          ("releaseNotCommitted", 68),
          ("reserved118", 118),
          ("reserved119", 119),
          ("reserved120", 120),
          ("restoreFileExists", 7),
          ("rfc2544Loopback", 146),
          ("rfiCriticalAlarm", 154),
          ("rfiDyingGasp", 153),
          ("rfiSignalLoss", 152),
          ("rstpFault", 80),
          ("rstpMultiplePrimaries", 30),
          ("rstpMultipleSecondaries", 31),
          ("rstpNoPrimary", 28),
          ("rstpNoSecondary", 29),
          ("security", 78),
          ("seltInProgress", 182),
          ("shelfError", 82),
          ("smoke", 65),
          ("softwareInitializationInProgress", 175),
          ("stackingRingActingMaster", 140),
          ("stackingRingHealthCompromised", 163),
          ("stackingRingPortDown", 138),
          ("stackingRingSecondMaster", 139),
          ("stackingRingVlanProvError", 176),
          ("svcWithNoFac", 102),
          ("switchControlFault", 159),
          ("switchCriticalEvent", 193),
          ("switchingPowerSupplyAFailed", 113),
          ("switchingPowerSupplyBFailed", 114),
          ("thermal", 77),
          ("timingFailDevice", 109),
          ("timingFailSrcA", 107),
          ("timingFailSrcB", 108),
          ("timingFreerun", 103),
          ("timingHoldover", 104),
          ("timingLockedA", 105),
          ("timingLockedB", 106),
          ("toxicGas", 66),
          ("unequipped", 3),
          ("unrecognizedSfp", 81),
          ("unsupportedEquipment", 11),
          ("unused112", 112),
          ("upgradeInProgress", 69),
          ("ventilationFail", 67),
          ("voiceHwInitFailure", 192),
          ("voipDhcpFail", 194),
          ("voipDown", 160),
          ("voipLowSoftwareResources", 158),
          ("voipMsgQueueOverflow", 229),
          ("voipRegFail", 162),
          ("xdslGroupLossOfSignal", 172),
          ("xdslGroupLowRateDownstream", 170),
          ("xdslGroupLowRateUpstream", 171),
          ("xdslGroupProvFailure", 169),
          ("xdslPortProvFailure", 168))
    )



class E7EventType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              111)
        )
    )
    namedValues = NamedValues(
        *(("aeOntDiscovered", 75),
          ("autoUpgrFailedToCommit", 22),
          ("autoUpgrFailedToRun", 21),
          ("autoUpgrFailedToXferFiles", 20),
          ("autoUpgrInProgress", 18),
          ("autoUpgrSuccess", 19),
          ("autoUpgrTooManyFailures", 57),
          ("cancelResetInProgress", 67),
          ("cancelResetSuccess", 68),
          ("cancelUpgrFailed", 45),
          ("cancelUpgrHadErrors", 44),
          ("cancelUpgrInProgress", 42),
          ("cancelUpgrSuccess", 43),
          ("cardArrival", 58),
          ("cardDeparture", 59),
          ("cardMigrationUpgrade", 73),
          ("commitFailedToCommit", 12),
          ("commitHadErrors", 11),
          ("commitInProgress", 9),
          ("commitSuccess", 10),
          ("configFileApplyFailed", 99),
          ("configFileApplyHadErrors", 98),
          ("configFileApplyInProgress", 96),
          ("configFileApplySuccess", 97),
          ("configFileXferFailed", 95),
          ("configFileXferHadErrors", 94),
          ("configFileXferInProgress", 92),
          ("configFileXferSuccess", 93),
          ("databaseReset", 41),
          ("databaseRestoreComplete", 28),
          ("databaseRestoreCompleteWithFailures", 29),
          ("databaseRestoreInProgress", 27),
          ("deleteUpgrFailed", 26),
          ("deleteUpgrHadErrors", 25),
          ("deleteUpgrInProgress", 23),
          ("deleteUpgrSuccess", 24),
          ("erpsInvalidProvisioning", 39),
          ("erpsProtocolViolation", 38),
          ("igmpGroupLimitReached", 74),
          ("localLinkOamLoopbackEnd", 79),
          ("localLinkOamLoopbackStart", 78),
          ("logInit", 1),
          ("none", 0),
          ("ontActivateFailed", 91),
          ("ontActivateHadErrors", 90),
          ("ontActivateInProgress", 88),
          ("ontActivateSuccess", 89),
          ("ontArrival", 50),
          ("ontAutoQuarantine", 111),
          ("ontDebugUpgrFailed", 55),
          ("ontDebugUpgrHadErrors", 54),
          ("ontDebugUpgrInProgress", 52),
          ("ontDebugUpgrSuccess", 53),
          ("ontDeparture", 51),
          ("ontDownloadFailed", 87),
          ("ontDownloadHadErrors", 86),
          ("ontDownloadInProgress", 84),
          ("ontDownloadSuccess", 85),
          ("ontFileCancelFailed", 103),
          ("ontFileCancelHadErrors", 102),
          ("ontFileCancelInProgress", 100),
          ("ontFileCancelSuccess", 101),
          ("ontFileRemoveFailed", 107),
          ("ontFileRemoveHadErrors", 106),
          ("ontFileRemoveInProgress", 104),
          ("ontFileRemoveSuccess", 105),
          ("ontFileXferFailed", 83),
          ("ontFileXferHadErrors", 82),
          ("ontFileXferInProgress", 80),
          ("ontFileXferSuccess", 81),
          ("ontLink", 61),
          ("ontPreArrival", 56),
          ("ontUnlink", 62),
          ("ontUserReset", 108),
          ("rebootFailed", 66),
          ("rebootHadErrors", 65),
          ("rebootInProgress", 63),
          ("rebootSuccess", 64),
          ("remoteLinkOamLoopbackEnd", 77),
          ("remoteLinkOamLoopbackStart", 76),
          ("resetFailedToRun", 8),
          ("resetHadErrors", 7),
          ("resetInProgress", 5),
          ("resetSuccess", 6),
          ("revertFailedToCommit", 17),
          ("revertFailedToRun", 16),
          ("revertHadErrors", 15),
          ("revertInProgress", 13),
          ("revertSuccess", 14),
          ("stackingRingInvalidProvisioning", 70),
          ("stackingRingProtocolViolation", 69),
          ("stpBufferAllocationFailure", 32),
          ("stpInvalidBpdu", 36),
          ("stpMemoryAllocationFailure", 31),
          ("stpNewPortRole", 37),
          ("stpNewRoot", 33),
          ("stpProtocolMigration", 35),
          ("stpTopologyChange", 34),
          ("switchoverAborted", 48),
          ("switchoverInProgress", 46),
          ("switchoverSuccess", 47),
          ("systemTimeSet", 72),
          ("timeSet", 40),
          ("unused49", 49),
          ("unused60", 60),
          ("unused71", 71),
          ("upgradeFailedToRun", 4),
          ("upgradeFailedToXferFiles", 3),
          ("upgradeHadErrors", 2),
          ("vlanMacThresholdExceeded", 30))
    )



class E7SecurityType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("adminForcedLogout", 5),
          ("alarmLogCleared", 7),
          ("dbChangeLogCleared", 8),
          ("eventLogCleared", 9),
          ("inactiveLogout", 4),
          ("loginFailed", 6),
          ("none", 0),
          ("radiusLoginFailBadSecret", 13),
          ("securityLogCleared", 10),
          ("tcaLogCleared", 11),
          ("unused1", 1),
          ("unused12", 12),
          ("userLogin", 2),
          ("userLogout", 3))
    )



class E7TcaType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              43,
              44,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95)
        )
    )
    namedValues = NamedValues(
        *(("alignErr", 73),
          ("bufferUnderOverrun", 91),
          ("burstySec", 77),
          ("carSenseErr", 72),
          ("crcP", 18),
          ("cvC", 2),
          ("cvCFe", 3),
          ("cvP", 19),
          ("deferredTx", 70),
          ("errSec", 75),
          ("esL", 8),
          ("esLFe", 9),
          ("exColl", 62),
          ("fcsErr", 61),
          ("fecC", 4),
          ("fecCFe", 5),
          ("fecL", 6),
          ("fecLFe", 7),
          ("inDiscards", 44),
          ("inErrors", 43),
          ("initL", 16),
          ("lInitL", 17),
          ("lateColl", 63),
          ("longFrame", 64),
          ("lossL", 12),
          ("lossLFe", 13),
          ("macRxErr", 74),
          ("macTxErr", 71),
          ("malformedPkts", 92),
          ("misorderDropped", 90),
          ("misorderUsable", 89),
          ("missingPkts", 88),
          ("mmtPktLoss", 94),
          ("multColl", 68),
          ("rxBufOvfl", 65),
          ("rxCtrlSlipSec", 79),
          ("sesL", 10),
          ("sesLFe", 11),
          ("sevErrSec", 76),
          ("snglColl", 67),
          ("sqe", 69),
          ("strayPkts", 93),
          ("tdmLbitPktsSent", 95),
          ("txBufOvfl", 66),
          ("uasL", 14),
          ("uasLFe", 15),
          ("unavailSec", 78))
    )



class E7ObjectClass(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182)
        )
    )
    namedValues = NamedValues(
        *(("acl", 54),
          ("aclRule", 55),
          ("avoCfg", 162),
          ("backplane10GePort", 129),
          ("bondedIntfEthSvc", 150),
          ("bondedIntfEthSvcStaticIp", 151),
          ("bpVlanMap", 91),
          ("card", 2),
          ("chassis", 8),
          ("classMap", 52),
          ("classRule", 53),
          ("cos", 35),
          ("craftFe", 18),
          ("craftSerial", 17),
          ("craftUser", 15),
          ("csipProfile", 87),
          ("db", 10),
          ("dhcpGlobal", 3),
          ("dialPlan", 153),
          ("dialPlanRule", 154),
          ("discOnt", 81),
          ("ds1Pwe3Profile", 90),
          ("dscpMap", 26),
          ("envPin", 12),
          ("erps", 37),
          ("eth10GePort", 46),
          ("ethGePort", 45),
          ("ethIntf", 60),
          ("ethIntfEthSvc", 148),
          ("ethIntfEthSvcStaticIp", 149),
          ("ethOamCfg", 110),
          ("ethOamMeg", 112),
          ("ethOamMep", 113),
          ("ethOamMip", 114),
          ("ethOamPmProfile", 111),
          ("ethOamRemoteMep", 115),
          ("ethPortAny", 4),
          ("ethPortGos", 58),
          ("ethStudy", 36),
          ("fanTray", 22),
          ("h248MediaGwProfile", 118),
          ("igmpConfig", 28),
          ("igmpGroup", 16),
          ("igmpIntfAny", 98),
          ("igmpMember", 23),
          ("igmpRouterPort", 116),
          ("intfAny", 62),
          ("invalid", 0),
          ("ipPrecMap", 161),
          ("l2Acl", 43),
          ("l2AclRule", 44),
          ("l2CtrlProfile", 42),
          ("l2cpFilter", 134),
          ("l2cpRange", 133),
          ("l3Acl", 56),
          ("l3AclRule", 57),
          ("lagIntf", 61),
          ("lcH248Gw", 173),
          ("lcH248Svc", 140),
          ("lcIpHost", 137),
          ("lcMgcpGw", 174),
          ("lcPots", 136),
          ("lcSipSvc", 141),
          ("lcTdmGwSvc", 142),
          ("macFilter", 168),
          ("macFilterRule", 169),
          ("macTableCount", 75),
          ("macTableEntry", 30),
          ("mcastAddrRange", 78),
          ("mcastFilter", 105),
          ("mgcpMediaGwProf", 160),
          ("mgmtConfig", 27),
          ("monitorSource", 25),
          ("mvrProfile", 79),
          ("mvrVlan", 107),
          ("notfLogIndex", 39),
          ("ntp", 29),
          ("ont", 63),
          ("ontCsipSvc", 86),
          ("ontDs1", 72),
          ("ontDs1Gos", 85),
          ("ontEthAny", 67),
          ("ontEthBwProf", 33),
          ("ontEthGos", 84),
          ("ontEthMcastProf", 20),
          ("ontEthSecuProf", 34),
          ("ontEthStaticIp", 21),
          ("ontEthSvc", 31),
          ("ontEthSvcName", 83),
          ("ontEthTagAction", 32),
          ("ontFEth", 59),
          ("ontFb", 166),
          ("ontGigEth", 65),
          ("ontH248Svc", 119),
          ("ontHotRfVideo", 69),
          ("ontHpnaEth", 66),
          ("ontIpHost", 80),
          ("ontMatchList", 92),
          ("ontMatchRuleTagged", 93),
          ("ontMatchRuleUntagged", 94),
          ("ontMgcpSvc", 159),
          ("ontMgmt", 100),
          ("ontPonUsCos", 167),
          ("ontPortAny", 73),
          ("ontPots", 71),
          ("ontProfile", 74),
          ("ontPwe3Gos", 97),
          ("ontPwe3Profile", 89),
          ("ontPwe3Svc", 88),
          ("ontRfAvo", 101),
          ("ontRfVideo", 68),
          ("ontRg", 165),
          ("ontRgMgmtProf", 175),
          ("ontSipSvc", 76),
          ("ontSlot", 64),
          ("ontVideoAny", 70),
          ("opt82Prof", 5),
          ("policy", 51),
          ("policyMap", 50),
          ("ponCosConfig", 49),
          ("ponPort", 19),
          ("ponUsCosProf", 172),
          ("portMonitor", 24),
          ("potPortCos", 41),
          ("powerInput", 135),
          ("pppoeProf", 152),
          ("quarnatineOnt", 82),
          ("radiusAcctServer", 104),
          ("radiusAuthServer", 103),
          ("radiusCfg", 102),
          ("rstpConfig", 14),
          ("shelf", 9),
          ("sipGwProf", 158),
          ("sipProfile", 77),
          ("snmpCommunity", 13),
          ("snmpConfig", 40),
          ("snmpTrapDest", 11),
          ("snmpUser", 38),
          ("sshKey", 99),
          ("sshKeyOld", 7),
          ("syslog", 106),
          ("system", 1),
          ("tagAction", 48),
          ("timing", 95),
          ("timingSrc", 96),
          ("unused108", 108),
          ("unused109", 109),
          ("unused120", 120),
          ("unused121", 121),
          ("unused122", 122),
          ("unused123", 123),
          ("unused124", 124),
          ("unused125", 125),
          ("unused126", 126),
          ("unused127", 127),
          ("unused128", 128),
          ("unused130", 130),
          ("unused131", 131),
          ("unused132", 132),
          ("unused143", 143),
          ("unused155", 155),
          ("unused156", 156),
          ("unused157", 157),
          ("unused163", 163),
          ("unused164", 164),
          ("unused170", 170),
          ("unused171", 171),
          ("unused176", 176),
          ("unused177", 177),
          ("unused178", 178),
          ("unused179", 179),
          ("unused180", 180),
          ("unused181", 181),
          ("unused182", 182),
          ("vdslBondedIntf", 139),
          ("vdslPort", 138),
          ("vdslPortGos", 147),
          ("vdslPortTemplate", 144),
          ("vdslPortTemplateData", 145),
          ("vdslPortTemplateMask", 146),
          ("vlan", 6),
          ("vlanIgmpProfile", 117),
          ("vlanMember", 47))
    )



class E7AdminStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("alarmsuppress", 2),
          ("disabled", 3),
          ("enabled", 1),
          ("unknown", 0))
    )



class E7CardType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1026,
              1027,
              1029,
              1030,
              1031,
              1032,
              1036,
              1037,
              1038,
              1040,
              1041,
              1045)
        )
    )
    namedValues = NamedValues(
        *(("activeEthernet", 1018),
          ("agg", 1012),
          ("backplaneE348C", 1041),
          ("backplaneE5312", 1019),
          ("backplaneE5400", 1013),
          ("backplaneE7x2S0lotChassis", 1021),
          ("backplaneE7x2SlotChassis1RU", 1014),
          ("e348c", 1040),
          ("fantrayE5400", 1015),
          ("fantrayE7x20SlotChassis", 1022),
          ("fantrayE7x2SlotChassis1RU", 1016),
          ("fantrayE7x2SlotChassis1RU2", 1045),
          ("ge12", 1023),
          ("ge24", 1027),
          ("ge24x", 1030),
          ("gpon4", 1017),
          ("gpon4r2", 1036),
          ("gpon4x", 1029),
          ("gpon8", 1037),
          ("gpon8x", 1038),
          ("none", 0),
          ("scp", 1026),
          ("tenge4", 1020),
          ("unknown", 1),
          ("vdsl48", 1032),
          ("vdsl48c", 1031))
    )



class E7PowerLevel(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("notSet", 0),
          ("powerLevel2", 2),
          ("powerLevel3", 3),
          ("powerLevel4", 4),
          ("powerLevelFull", 5),
          ("powerLevelLow", 1))
    )



class E7SnmpVers(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 0),
          ("v2c", 2),
          ("v3", 3))
    )



# MIB Managed Objects in the order of their OIDs


# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "E7-TC",
    **{"E7AlarmType": E7AlarmType,
       "E7EventType": E7EventType,
       "E7SecurityType": E7SecurityType,
       "E7TcaType": E7TcaType,
       "E7ObjectClass": E7ObjectClass,
       "E7AdminStatus": E7AdminStatus,
       "E7CardType": E7CardType,
       "E7PowerLevel": E7PowerLevel,
       "E7SnmpVers": E7SnmpVers}
)
